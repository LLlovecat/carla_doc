{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Carla \u6587\u6863 \u6b22\u8fce\u4f7f\u7528 Carla \u6587\u6863\u3002 \u6b64\u4e3b\u9875\u5305\u542b\u4e00\u4e2a\u7d22\u5f15\uff0c\u5176\u4e2d\u7b80\u8981\u8bf4\u660e\u4e86\u6587\u6863\u4e2d\u7684\u4e0d\u540c\u90e8\u5206\u3002\u968f\u610f\u6309\u559c\u6b22\u7684\u987a\u5e8f\u9605\u8bfb\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ed9\u65b0\u624b\u7684\u5efa\u8bae\u3002 \u5b89\u88c5 Carla. \u8981\u4e48\u6309\u7167 \u5feb\u901f\u5f00\u59cb\u5b89\u88c5 \u83b7\u5f97 Carla \u7248\u672c\uff0c\u8981\u4e48\u6309\u7167\u6240\u9700\u5e73\u53f0 \u8fdb\u884c\u6784\u5efa \u3002 \u5f00\u59cb\u4f7f\u7528 Carla. \u6807\u9898\u4e3a \u7b2c\u4e00\u6b65 \u7684\u90e8\u5206\u4ecb\u7ecd\u4e86\u6700\u91cd\u8981\u7684\u6982\u5ff5\u3002 \u68c0\u67e5 API. \u6709\u4e00\u4e2a\u65b9\u4fbf\u7684 Python API \u53c2\u8003 \u6765\u67e5\u627e\u53ef\u7528\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 Carla \u8bba\u575b\u53ef\u4ee5\u53d1\u5e03\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 Carla \u8bba\u575b \u8b66\u544a \u66f4\u6539\u6587\u6863\u7248\u672c\u4ee5\u9002\u5408\u60a8\u4f7f\u7528\u7684 Carla \u7248\u672c \u3002\u4f7f\u7528\u6b64\u7a97\u53e3\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u4e3a\u4ee5\u524d\u7684\u7248\u672c\u3002 \u6700\u65b0\u7248\u672c\u6307\u5411 dev \u5206\u652f \u4e2d\u7684\u6587\u6863\uff0c\u8fd9\u53ef\u80fd\u662f\u6307\u5f53\u524d\u6b63\u5728\u5f00\u53d1\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u6253\u5305\u7248\u672c\u7684 Carla \u4e2d \u4e0d\u53ef\u7528 \uff0c\u4ee5\u53ca\u4e00\u822c\u6587\u6863\u6539\u8fdb\u3002 \u5165\u95e8 \u4ecb\u7ecd \u2014 \u5bf9 Carla \u7684\u671f\u671b\u3002 \u5feb\u901f\u542f\u52a8\u5305\u5b89\u88c5 \u2014 \u83b7\u53d6 Carla \u7248\u672c\u3002 \u6784\u5efa Carla Linux \u4e0a\u6784\u5efa \u2014 \u5728 Linux \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 Windows \u4e0a\u6784\u5efa \u2014 \u5728 Windows \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 Carla \u66f4\u65b0 \u2014 \u4e86\u89e3\u6700\u65b0\u5185\u5bb9\u3002 \u6784\u5efa\u7cfb\u7edf \u2014 \u4e86\u89e3\u6784\u5efa\u53ca\u5176\u5236\u4f5c\u65b9\u5f0f\u3002 Docker \u4e2d\u7684 Carla \u2014 \u4f7f\u7528\u5bb9\u5668\u89e3\u51b3\u65b9\u6848\u8fd0\u884c Carla\u3002 \u5e38\u89c1\u95ee\u9898 \u2014 \u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u5b89\u88c5\u95ee\u9898\u3002 \u7b2c\u4e00\u6b65 \u6838\u5fc3\u6982\u5ff5 \u2014 Carla \u4e2d\u57fa\u672c\u6982\u5ff5\u7684\u6982\u8ff0\u3002 \u7b2c\u4e00\u3001 \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u2014 \u7ba1\u7406\u548c\u8bbf\u95ee\u4eff\u771f\u3002 \u7b2c\u4e8c\u3001 \u89d2\u8272\u548c\u84dd\u56fe \u2014 \u4e86\u89e3\u89d2\u8272\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u5b83\u4eec\u3002 \u7b2c\u4e09\u3001\u5730\u56fe\u548c\u5bfc\u822a \u2014 \u53d1\u73b0\u4e0d\u540c\u7684\u5730\u56fe\u4ee5\u53ca\u8f66\u8f86\u5982\u4f55\u79fb\u52a8\u3002 \u7b2c\u56db\u3001 \u4f20\u611f\u5668\u548c\u6570\u636e \u2014 \u4f7f\u7528\u4f20\u611f\u5668\u68c0\u7d22\u4eff\u771f\u6570\u636e\u3002 \u9ad8\u7ea7\u6982\u5ff5 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u2014 \u4f7f\u7528\u4efb\u4f55 OpenDRIVE \u6587\u4ef6\u4f5c\u4e3a Carla \u5730\u56fe\u3002 PTV-Vissim \u8054\u5408\u4eff\u771f - \u5728 Carla \u548c PTV-Vissim \u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u8bb0\u5f55\u5668 \u2014 \u5728\u4eff\u771f\u4e2d\u5f55\u5236\u4e8b\u4ef6\u5e76\u518d\u6b21\u64ad\u653e\u3002 \u6e32\u67d3\u9009\u9879 \u2014 \u4ece\u8d28\u91cf\u8bbe\u7f6e\u5230\u4e0d\u6e32\u67d3\u6216\u79bb\u5c4f\u6a21\u5f0f\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u2014 Carla \u5ba2\u6237\u7aef\u5e93\u4e2d\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u5b9e\u73b0\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u2014 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u901a\u4fe1\u548c\u4eff\u771f\u65f6\u95f4\u3002 \u57fa\u51c6\u6027\u80fd \u2014 \u4f7f\u7528\u6211\u4eec\u51c6\u5907\u597d\u7684\u811a\u672c\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Carla \u4ee3\u7406 \u2014 \u4ee3\u7406\u811a\u672c\u5141\u8bb8\u5355\u4e2a\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u5f00\u8f66\u5230\u8bbe\u5b9a\u7684\u76ee\u7684\u5730\u3002 \u4ea4\u901a\u4eff\u771f \u4ea4\u901a\u4eff\u771f\u6982\u8ff0 \u2014 \u53ef\u7528\u4e8e\u4f7f\u7528\u4ea4\u901a\u586b\u5145\u573a\u666f\u7684\u4e0d\u540c\u9009\u9879\u7684\u6982\u8ff0 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u901a\u8fc7\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u6765\u4eff\u771f\u57ce\u5e02\u4ea4\u901a\u3002 SUMO \u8054\u5408\u4eff\u771f \u2014 \u5728 Carla \u548c SUMO \u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 Scenic \u2014 \u9075\u5faa\u4f7f\u7528 Scenic \u5e93\u5b9a\u4e49\u4e0d\u540c\u573a\u666f\u7684\u793a\u4f8b\u3002 \u53c2\u8003 Python API \u53c2\u8003 \u2014 Python API \u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 \u84dd\u56fe\u5e93 \u2014 \u63d0\u4f9b\u7528\u4e8e\u751f\u6210\u53c2\u4e0e\u8005\u7684\u84dd\u56fe\u3002 C++ \u53c2\u8003 \u2014 Carla C++ \u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 \u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f \u2014 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u2014 \u5173\u4e8e\u4f20\u611f\u5668\u53ca\u5176\u68c0\u7d22\u6570\u636e\u7684\u4e00\u5207\u3002 \u63d2\u4ef6 carlaviz \u2014 web \u53ef\u89c6\u5316\u5668 \u2014 \u4fa6\u542c\u4eff\u771f\u5e76\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u573a\u666f\u548c\u4e00\u4e9b\u4eff\u771f\u6570\u636e\u7684\u63d2\u4ef6\u3002 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668\u6587\u6863 \u2014 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668\u7684\u7b80\u8981\u6982\u8ff0\u548c\u5b8c\u6574\u6587\u6863\u7684\u94fe\u63a5 \u81ea\u5b9a\u4e49\u5730\u56fe Carla \u4e2d\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u6982\u8ff0 \u2014 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u6240\u6d89\u53ca\u7684\u8fc7\u7a0b\u548c\u9009\u9879\u7684\u6982\u8ff0 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u751f\u6210\u6d77\u5173\u3001\u6807\u51c6\u5c3a\u5bf8\u7684\u5730\u56fe \u5728 Carla \u5305\u5bfc\u5165\u5730\u56fe \u5982\u4f55\u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe \u5728 Carla \u6e90\u6784\u5efa\u4e2d\u5bfc\u5165\u5730\u56fe \u2014 \u5982\u4f55\u5728 Carla \u4e2d\u5bfc\u5165\u4ece\u6e90\u6784\u5efa\u7684\u5730\u56fe \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u2014 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u624b\u52a8\u51c6\u5907\u5730\u56fe\u5305 \u2014 \u5982\u4f55\u51c6\u5907\u5730\u56fe\u4ee5\u4f9b\u624b\u52a8\u5bfc\u5165 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe \u2014 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u521b\u5efa\u5b50\u56fe\u5c42 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7ea2\u7eff\u706f\u548c\u6807\u5fd7 \u2014 \u5982\u4f55\u5c06\u7ea2\u7eff\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe\uff1aRoad painter \u2014 \u5982\u4f55\u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u6539\u53d8\u9053\u8def\u7684\u5916\u89c2 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5efa\u7b51 \u2014 \u7528\u5efa\u7b51\u7269\u586b\u5145\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2 \u2014 \u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u5929\u6c14\u914d\u7f6e\u6587\u4ef6\u5e76\u586b\u5145\u666f\u89c2 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u2014 \u83b7\u53d6\u884c\u4eba\u56db\u5904\u8d70\u52a8\u6240\u9700\u7684\u4fe1\u606f\u3002 \u5927\u5730\u56fe \u5927\u5730\u56fe\u6982\u8ff0 \u2014 Carla \u4e2d\u5927\u5730\u56fe\u5de5\u4f5c\u539f\u7406\u7684\u8bf4\u660e \u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5bfc\u5165\u5927\u5730\u56fe \u6559\u7a0b \u2014 \u901a\u7528 \u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668 - \u5b9a\u4e49\u8f66\u8f6e\u7684\u52a8\u6001\u6846\u89e6\u53d1\u5668 \u63a7\u5236\u8f66\u8f86\u7269\u7406\u6a21\u578b - \u8bbe\u7f6e\u8f66\u8f86\u7269\u7406\u7684\u8fd0\u884c\u65f6\u7684\u53d8\u5316 \u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u2014 \u4f7f\u7528\u9aa8\u9abc\u4e3a\u6b65\u884c\u8005\u8bbe\u7f6e\u52a8\u753b \u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe \u2014 \u4f7f\u7528 OpenStreetMap \u751f\u6210\u7528\u4e8e\u4eff\u771f\u7684\u5730\u56fe\u3002 \u68c0\u7d22\u4eff\u771f\u6570\u636e \u2014 \u4f7f\u7528\u8bb0\u5f55\u5668\u6b63\u786e\u6536\u96c6\u6570\u636e\u7684\u5206\u6b65\u6307\u5357 CarSim \u96c6\u6210 - \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 CarSim \u8f66\u8f86\u52a8\u529b\u5b66\u5f15\u64ce\u8fd0\u884c\u4eff\u771f\u7684\u6559\u7a0b RLlib \u96c6\u6210 \u2014 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 RLlib \u5e93\u8fd0\u884c\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c Chrono \u96c6\u6210 \u2014 \u4f7f\u7528 Chrono \u79ef\u5206\u6765\u4eff\u771f\u7269\u7406 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c Carla \u2014 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c Carla \u6559\u7a0b \u2014 \u8d44\u4ea7 \u6dfb\u52a0\u65b0\u8f66\u8f86 \u2014 \u51c6\u5907\u8981\u5728 Carla \u4e2d\u4f7f\u7528\u7684\u8f66\u8f86 \u6dfb\u52a0\u65b0\u9053\u5177 \u2014 \u5c06\u5176\u4ed6\u9053\u5177\u5bfc\u5165 Carla \u521b\u5efa\u72ec\u7acb\u5305 \u2014 \u4e3a\u8d44\u4ea7\u751f\u6210\u548c\u5904\u7406\u72ec\u7acb\u5305 \u6750\u6599\u5b9a\u5236 - \u7f16\u8f91\u8f66\u8f86\u548c\u5efa\u7b51\u6750\u6599 \u6559\u7a0b \u2014 \u5f00\u53d1\u4eba\u5458 \u5982\u4f55\u5347\u7ea7\u5185\u5bb9 \u2014 \u5411 Carla \u6dfb\u52a0\u65b0\u5185\u5bb9 \u521b\u5efa\u4e00\u4e2a\u4f20\u611f\u5668 \u2014 \u5f00\u53d1\u4e00\u4e2a\u7528\u4e8e Carla \u7684\u65b0\u4f20\u611f\u5668 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u2014 \u4e3a\u8bed\u4e49\u5206\u5272\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6807\u7b7e \u81ea\u5b9a\u4e49\u8f66\u8f86\u60ac\u67b6 \u2014 \u4fee\u6539\u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf \u751f\u6210\u8be6\u7ec6\u78b0\u649e \u2014 \u4e3a\u8f66\u8f86\u521b\u5efa\u8be6\u7ec6\u7684\u5bf9\u649e \u53d1\u5e03\u7248\u672c \u2014 \u5982\u4f55\u53d1\u5e03 Carla Carla \u751f\u6001\u7cfb\u7edf Ansys \u5b9e\u65f6\u96f7\u8fbe\u6a21\u578b \u2014 \u6709\u5173 Ansys RTR \u7f51\u7edc\u7814\u8ba8\u4f1a\u7684\u8be6\u7ec6\u4fe1\u606f \u8d21\u732e \u8d21\u732e\u6307\u5357 \u2014 \u4e3a Carla \u505a\u51fa\u8d21\u732e\u7684\u4e0d\u540c\u65b9\u5f0f\u3002 \u884c\u4e3a\u51c6\u5219 \u2014 \u8d21\u732e\u8005\u7684\u6807\u51c6\u6743\u5229\u548c\u4e49\u52a1\u3002 \u7f16\u7801\u6807\u51c6 \u2014 \u7f16\u5199\u6b63\u786e\u4ee3\u7801\u7684\u6307\u5357\u3002 \u6587\u6863\u6807\u51c6 \u2014 \u7f16\u5199\u9002\u5f53\u6587\u6863\u7684\u6307\u5357\u3002 \u5176\u4ed6 RoadRunner \u7528\u4e8e\u6784\u5efa\u9759\u6001\u573a\u666f\u3001 RoadRunner Scenario \u7528\u4e8e\u6784\u5efa\u52a8\u6001\u4ea4\u901a\u573a\u666f\u3002 \u865a\u5e7b\u5f15\u64ce\u6587\u6863 \u2014 \u548c\u865a\u5e7b\u5f15\u64ce\u76f8\u5173\u7684\u64cd\u4f5c\u6559\u7a0b\u3002 Matlab \u63a5\u53e3 \u4f7f\u7528 Python \u548c ROS \u5728 Matlab \u4e2d\u8c03\u7528 Python\u3002 Carla \u4e2d\u6587\u7ad9 \u2014 \u4e2d\u6587\u4ea4\u6d41\u793e\u533a\u3002","title":"\u4e3b\u9875"},{"location":"#carla","text":"\u6b22\u8fce\u4f7f\u7528 Carla \u6587\u6863\u3002 \u6b64\u4e3b\u9875\u5305\u542b\u4e00\u4e2a\u7d22\u5f15\uff0c\u5176\u4e2d\u7b80\u8981\u8bf4\u660e\u4e86\u6587\u6863\u4e2d\u7684\u4e0d\u540c\u90e8\u5206\u3002\u968f\u610f\u6309\u559c\u6b22\u7684\u987a\u5e8f\u9605\u8bfb\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ed9\u65b0\u624b\u7684\u5efa\u8bae\u3002 \u5b89\u88c5 Carla. \u8981\u4e48\u6309\u7167 \u5feb\u901f\u5f00\u59cb\u5b89\u88c5 \u83b7\u5f97 Carla \u7248\u672c\uff0c\u8981\u4e48\u6309\u7167\u6240\u9700\u5e73\u53f0 \u8fdb\u884c\u6784\u5efa \u3002 \u5f00\u59cb\u4f7f\u7528 Carla. \u6807\u9898\u4e3a \u7b2c\u4e00\u6b65 \u7684\u90e8\u5206\u4ecb\u7ecd\u4e86\u6700\u91cd\u8981\u7684\u6982\u5ff5\u3002 \u68c0\u67e5 API. \u6709\u4e00\u4e2a\u65b9\u4fbf\u7684 Python API \u53c2\u8003 \u6765\u67e5\u627e\u53ef\u7528\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 Carla \u8bba\u575b\u53ef\u4ee5\u53d1\u5e03\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 Carla \u8bba\u575b \u8b66\u544a \u66f4\u6539\u6587\u6863\u7248\u672c\u4ee5\u9002\u5408\u60a8\u4f7f\u7528\u7684 Carla \u7248\u672c \u3002\u4f7f\u7528\u6b64\u7a97\u53e3\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u4e3a\u4ee5\u524d\u7684\u7248\u672c\u3002 \u6700\u65b0\u7248\u672c\u6307\u5411 dev \u5206\u652f \u4e2d\u7684\u6587\u6863\uff0c\u8fd9\u53ef\u80fd\u662f\u6307\u5f53\u524d\u6b63\u5728\u5f00\u53d1\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u6253\u5305\u7248\u672c\u7684 Carla \u4e2d \u4e0d\u53ef\u7528 \uff0c\u4ee5\u53ca\u4e00\u822c\u6587\u6863\u6539\u8fdb\u3002","title":"Carla \u6587\u6863"},{"location":"#_1","text":"\u4ecb\u7ecd \u2014 \u5bf9 Carla \u7684\u671f\u671b\u3002 \u5feb\u901f\u542f\u52a8\u5305\u5b89\u88c5 \u2014 \u83b7\u53d6 Carla \u7248\u672c\u3002","title":"\u5165\u95e8"},{"location":"#carla_1","text":"Linux \u4e0a\u6784\u5efa \u2014 \u5728 Linux \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 Windows \u4e0a\u6784\u5efa \u2014 \u5728 Windows \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 Carla \u66f4\u65b0 \u2014 \u4e86\u89e3\u6700\u65b0\u5185\u5bb9\u3002 \u6784\u5efa\u7cfb\u7edf \u2014 \u4e86\u89e3\u6784\u5efa\u53ca\u5176\u5236\u4f5c\u65b9\u5f0f\u3002 Docker \u4e2d\u7684 Carla \u2014 \u4f7f\u7528\u5bb9\u5668\u89e3\u51b3\u65b9\u6848\u8fd0\u884c Carla\u3002 \u5e38\u89c1\u95ee\u9898 \u2014 \u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u5b89\u88c5\u95ee\u9898\u3002","title":"\u6784\u5efa Carla"},{"location":"#_2","text":"\u6838\u5fc3\u6982\u5ff5 \u2014 Carla \u4e2d\u57fa\u672c\u6982\u5ff5\u7684\u6982\u8ff0\u3002 \u7b2c\u4e00\u3001 \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u2014 \u7ba1\u7406\u548c\u8bbf\u95ee\u4eff\u771f\u3002 \u7b2c\u4e8c\u3001 \u89d2\u8272\u548c\u84dd\u56fe \u2014 \u4e86\u89e3\u89d2\u8272\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u5b83\u4eec\u3002 \u7b2c\u4e09\u3001\u5730\u56fe\u548c\u5bfc\u822a \u2014 \u53d1\u73b0\u4e0d\u540c\u7684\u5730\u56fe\u4ee5\u53ca\u8f66\u8f86\u5982\u4f55\u79fb\u52a8\u3002 \u7b2c\u56db\u3001 \u4f20\u611f\u5668\u548c\u6570\u636e \u2014 \u4f7f\u7528\u4f20\u611f\u5668\u68c0\u7d22\u4eff\u771f\u6570\u636e\u3002","title":"\u7b2c\u4e00\u6b65"},{"location":"#_3","text":"OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u2014 \u4f7f\u7528\u4efb\u4f55 OpenDRIVE \u6587\u4ef6\u4f5c\u4e3a Carla \u5730\u56fe\u3002 PTV-Vissim \u8054\u5408\u4eff\u771f - \u5728 Carla \u548c PTV-Vissim \u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u8bb0\u5f55\u5668 \u2014 \u5728\u4eff\u771f\u4e2d\u5f55\u5236\u4e8b\u4ef6\u5e76\u518d\u6b21\u64ad\u653e\u3002 \u6e32\u67d3\u9009\u9879 \u2014 \u4ece\u8d28\u91cf\u8bbe\u7f6e\u5230\u4e0d\u6e32\u67d3\u6216\u79bb\u5c4f\u6a21\u5f0f\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u2014 Carla \u5ba2\u6237\u7aef\u5e93\u4e2d\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u5b9e\u73b0\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u2014 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u901a\u4fe1\u548c\u4eff\u771f\u65f6\u95f4\u3002 \u57fa\u51c6\u6027\u80fd \u2014 \u4f7f\u7528\u6211\u4eec\u51c6\u5907\u597d\u7684\u811a\u672c\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Carla \u4ee3\u7406 \u2014 \u4ee3\u7406\u811a\u672c\u5141\u8bb8\u5355\u4e2a\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u5f00\u8f66\u5230\u8bbe\u5b9a\u7684\u76ee\u7684\u5730\u3002","title":"\u9ad8\u7ea7\u6982\u5ff5"},{"location":"#_4","text":"\u4ea4\u901a\u4eff\u771f\u6982\u8ff0 \u2014 \u53ef\u7528\u4e8e\u4f7f\u7528\u4ea4\u901a\u586b\u5145\u573a\u666f\u7684\u4e0d\u540c\u9009\u9879\u7684\u6982\u8ff0 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u901a\u8fc7\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u6765\u4eff\u771f\u57ce\u5e02\u4ea4\u901a\u3002 SUMO \u8054\u5408\u4eff\u771f \u2014 \u5728 Carla \u548c SUMO \u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 Scenic \u2014 \u9075\u5faa\u4f7f\u7528 Scenic \u5e93\u5b9a\u4e49\u4e0d\u540c\u573a\u666f\u7684\u793a\u4f8b\u3002","title":"\u4ea4\u901a\u4eff\u771f"},{"location":"#_5","text":"Python API \u53c2\u8003 \u2014 Python API \u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 \u84dd\u56fe\u5e93 \u2014 \u63d0\u4f9b\u7528\u4e8e\u751f\u6210\u53c2\u4e0e\u8005\u7684\u84dd\u56fe\u3002 C++ \u53c2\u8003 \u2014 Carla C++ \u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 \u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f \u2014 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u2014 \u5173\u4e8e\u4f20\u611f\u5668\u53ca\u5176\u68c0\u7d22\u6570\u636e\u7684\u4e00\u5207\u3002","title":"\u53c2\u8003"},{"location":"#_6","text":"carlaviz \u2014 web \u53ef\u89c6\u5316\u5668 \u2014 \u4fa6\u542c\u4eff\u771f\u5e76\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u573a\u666f\u548c\u4e00\u4e9b\u4eff\u771f\u6570\u636e\u7684\u63d2\u4ef6\u3002","title":"\u63d2\u4ef6"},{"location":"#_7","text":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668\u6587\u6863 \u2014 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668\u7684\u7b80\u8981\u6982\u8ff0\u548c\u5b8c\u6574\u6587\u6863\u7684\u94fe\u63a5","title":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u6865\u63a5\u5668"},{"location":"#_8","text":"Carla \u4e2d\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u6982\u8ff0 \u2014 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u6240\u6d89\u53ca\u7684\u8fc7\u7a0b\u548c\u9009\u9879\u7684\u6982\u8ff0 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u751f\u6210\u6d77\u5173\u3001\u6807\u51c6\u5c3a\u5bf8\u7684\u5730\u56fe \u5728 Carla \u5305\u5bfc\u5165\u5730\u56fe \u5982\u4f55\u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe \u5728 Carla \u6e90\u6784\u5efa\u4e2d\u5bfc\u5165\u5730\u56fe \u2014 \u5982\u4f55\u5728 Carla \u4e2d\u5bfc\u5165\u4ece\u6e90\u6784\u5efa\u7684\u5730\u56fe \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u2014 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u624b\u52a8\u51c6\u5907\u5730\u56fe\u5305 \u2014 \u5982\u4f55\u51c6\u5907\u5730\u56fe\u4ee5\u4f9b\u624b\u52a8\u5bfc\u5165 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe \u2014 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u521b\u5efa\u5b50\u56fe\u5c42 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7ea2\u7eff\u706f\u548c\u6807\u5fd7 \u2014 \u5982\u4f55\u5c06\u7ea2\u7eff\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe\uff1aRoad painter \u2014 \u5982\u4f55\u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u6539\u53d8\u9053\u8def\u7684\u5916\u89c2 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5efa\u7b51 \u2014 \u7528\u5efa\u7b51\u7269\u586b\u5145\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2 \u2014 \u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u5929\u6c14\u914d\u7f6e\u6587\u4ef6\u5e76\u586b\u5145\u666f\u89c2 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u2014 \u83b7\u53d6\u884c\u4eba\u56db\u5904\u8d70\u52a8\u6240\u9700\u7684\u4fe1\u606f\u3002","title":"\u81ea\u5b9a\u4e49\u5730\u56fe"},{"location":"#_9","text":"\u5927\u5730\u56fe\u6982\u8ff0 \u2014 Carla \u4e2d\u5927\u5730\u56fe\u5de5\u4f5c\u539f\u7406\u7684\u8bf4\u660e \u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5bfc\u5165\u5927\u5730\u56fe","title":"\u5927\u5730\u56fe"},{"location":"#_10","text":"\u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668 - \u5b9a\u4e49\u8f66\u8f6e\u7684\u52a8\u6001\u6846\u89e6\u53d1\u5668 \u63a7\u5236\u8f66\u8f86\u7269\u7406\u6a21\u578b - \u8bbe\u7f6e\u8f66\u8f86\u7269\u7406\u7684\u8fd0\u884c\u65f6\u7684\u53d8\u5316 \u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u2014 \u4f7f\u7528\u9aa8\u9abc\u4e3a\u6b65\u884c\u8005\u8bbe\u7f6e\u52a8\u753b \u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe \u2014 \u4f7f\u7528 OpenStreetMap \u751f\u6210\u7528\u4e8e\u4eff\u771f\u7684\u5730\u56fe\u3002 \u68c0\u7d22\u4eff\u771f\u6570\u636e \u2014 \u4f7f\u7528\u8bb0\u5f55\u5668\u6b63\u786e\u6536\u96c6\u6570\u636e\u7684\u5206\u6b65\u6307\u5357 CarSim \u96c6\u6210 - \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 CarSim \u8f66\u8f86\u52a8\u529b\u5b66\u5f15\u64ce\u8fd0\u884c\u4eff\u771f\u7684\u6559\u7a0b RLlib \u96c6\u6210 \u2014 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 RLlib \u5e93\u8fd0\u884c\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c Chrono \u96c6\u6210 \u2014 \u4f7f\u7528 Chrono \u79ef\u5206\u6765\u4eff\u771f\u7269\u7406 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c Carla \u2014 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c Carla","title":"\u6559\u7a0b \u2014 \u901a\u7528"},{"location":"#_11","text":"\u6dfb\u52a0\u65b0\u8f66\u8f86 \u2014 \u51c6\u5907\u8981\u5728 Carla \u4e2d\u4f7f\u7528\u7684\u8f66\u8f86 \u6dfb\u52a0\u65b0\u9053\u5177 \u2014 \u5c06\u5176\u4ed6\u9053\u5177\u5bfc\u5165 Carla \u521b\u5efa\u72ec\u7acb\u5305 \u2014 \u4e3a\u8d44\u4ea7\u751f\u6210\u548c\u5904\u7406\u72ec\u7acb\u5305 \u6750\u6599\u5b9a\u5236 - \u7f16\u8f91\u8f66\u8f86\u548c\u5efa\u7b51\u6750\u6599","title":"\u6559\u7a0b \u2014 \u8d44\u4ea7"},{"location":"#_12","text":"\u5982\u4f55\u5347\u7ea7\u5185\u5bb9 \u2014 \u5411 Carla \u6dfb\u52a0\u65b0\u5185\u5bb9 \u521b\u5efa\u4e00\u4e2a\u4f20\u611f\u5668 \u2014 \u5f00\u53d1\u4e00\u4e2a\u7528\u4e8e Carla \u7684\u65b0\u4f20\u611f\u5668 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u2014 \u4e3a\u8bed\u4e49\u5206\u5272\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6807\u7b7e \u81ea\u5b9a\u4e49\u8f66\u8f86\u60ac\u67b6 \u2014 \u4fee\u6539\u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf \u751f\u6210\u8be6\u7ec6\u78b0\u649e \u2014 \u4e3a\u8f66\u8f86\u521b\u5efa\u8be6\u7ec6\u7684\u5bf9\u649e \u53d1\u5e03\u7248\u672c \u2014 \u5982\u4f55\u53d1\u5e03 Carla","title":"\u6559\u7a0b \u2014 \u5f00\u53d1\u4eba\u5458"},{"location":"#carla_2","text":"Ansys \u5b9e\u65f6\u96f7\u8fbe\u6a21\u578b \u2014 \u6709\u5173 Ansys RTR \u7f51\u7edc\u7814\u8ba8\u4f1a\u7684\u8be6\u7ec6\u4fe1\u606f","title":"Carla \u751f\u6001\u7cfb\u7edf"},{"location":"#_13","text":"\u8d21\u732e\u6307\u5357 \u2014 \u4e3a Carla \u505a\u51fa\u8d21\u732e\u7684\u4e0d\u540c\u65b9\u5f0f\u3002 \u884c\u4e3a\u51c6\u5219 \u2014 \u8d21\u732e\u8005\u7684\u6807\u51c6\u6743\u5229\u548c\u4e49\u52a1\u3002 \u7f16\u7801\u6807\u51c6 \u2014 \u7f16\u5199\u6b63\u786e\u4ee3\u7801\u7684\u6307\u5357\u3002 \u6587\u6863\u6807\u51c6 \u2014 \u7f16\u5199\u9002\u5f53\u6587\u6863\u7684\u6307\u5357\u3002","title":"\u8d21\u732e"},{"location":"#_14","text":"RoadRunner \u7528\u4e8e\u6784\u5efa\u9759\u6001\u573a\u666f\u3001 RoadRunner Scenario \u7528\u4e8e\u6784\u5efa\u52a8\u6001\u4ea4\u901a\u573a\u666f\u3002 \u865a\u5e7b\u5f15\u64ce\u6587\u6863 \u2014 \u548c\u865a\u5e7b\u5f15\u64ce\u76f8\u5173\u7684\u64cd\u4f5c\u6559\u7a0b\u3002 Matlab \u63a5\u53e3 \u4f7f\u7528 Python \u548c ROS \u5728 Matlab \u4e2d\u8c03\u7528 Python\u3002 Carla \u4e2d\u6587\u7ad9 \u2014 \u4e2d\u6587\u4ea4\u6d41\u793e\u533a\u3002","title":"\u5176\u4ed6"},{"location":"3rd_party_integrations/","text":"3rd Party Integrations Carla has been developed to integrate with several 3rd party applications in order to maximise its utility and extensability. The following ROS bridge SUMO Scenic CarSIM Chrono OpenDRIVE PTV Vissim RSS AWS and RLlib ROS bridge Full documentation of the ROS bridge is found here . The ROS bridge enables two-way communication between ROS and Carla. The information from the Carla server is translated to ROS topics. In the same way, the messages sent between nodes in ROS get translated to commands to be applied in Carla. The ROS bridge is compatible with both ROS 1 and ROS 2. The ROS bridge boasts the following features: Provides sensor data for LIDAR, Semantic LIDAR, Cameras (depth, segmentation, rgb, dvs), GNSS, Radar and IMU. Provides object data such as transforms, traffic light status, visualisation markers, collision and lane invasion. Control of AD agents through steering, throttle and brake. Control of aspects of the Carla simulation like synchronous mode, playing and pausing the simulation and setting simulation parameters. SUMO Carla has developed a co-simulation feature with SUMO . This allows to distribute the tasks at will, and exploit the capabilities of each simulation in favour of the user. Please refer to the full documentation here . PTV Vissim PTV Vissim is a proprietary software package providing a comprehensive traffic simulation solution with a powerful GUI. To use PTV-Vissim with CARLA refer to this guide Scenic Scenic is a set of libraries and a language for scenario specification and scene generation. CARLA and scenic can work seemlessly together, read this guid to understand how to use scenic with CARLA. If you need to learn more about Scenic, then read their \"Getting Started with Scenic\" guide and have a look at their tutorials for creating static and dynamic scenarios. CarSIM CARLA's integration with CarSim allows vehicle controls in CARLA to be forwarded to CarSim. CarSim will do all required physics calculations of the vehicle and return the new state to CARLA. Learn how to use CARLA alongside CarSIM here . OpenDRIVE OpenDRIVE is an open format specification used to describe the logic of a road network intended to standardise the discription of road networks in digital format and allow different applications to exchange data on road networks. Please refer to the full documentation here RSS - Responsibility Sensitive Safety CARLA integrates the C++ Library for Responsibility Sensitive Safety in the client library. This feature allows users to investigate behaviours of RSS without having to implement anything. CARLA will take care of providing the input, and applying the output to the AD systems on the fly. Refer to the full documentation here AWS and RLlib integration The RLlib integration brings support between the Ray/RLlib library and CARLA, allowing the easy use of the CARLA environment for training and inference purposes. Ray is an open source framework that provides a simple, universal API for building distributed applications. Ray is packaged with RLlib, a scalable reinforcement learning library, and Tune, a scalable hyperparameter tuning library. Read more about operating CARLA on AWS and RLlib here . Chrono physics Chrono is a multi-physics simulation engine providing high realism vehicle dynamics using templates. CARLA's Chrono integraion allows CARLA users to add Chrono templates to simulate vehicle dynamics. Please refer to the full documentation here .","title":"3rd Party Integrations"},{"location":"3rd_party_integrations/#3rd-party-integrations","text":"Carla has been developed to integrate with several 3rd party applications in order to maximise its utility and extensability. The following ROS bridge SUMO Scenic CarSIM Chrono OpenDRIVE PTV Vissim RSS AWS and RLlib","title":"3rd Party Integrations"},{"location":"3rd_party_integrations/#ros-bridge","text":"Full documentation of the ROS bridge is found here . The ROS bridge enables two-way communication between ROS and Carla. The information from the Carla server is translated to ROS topics. In the same way, the messages sent between nodes in ROS get translated to commands to be applied in Carla. The ROS bridge is compatible with both ROS 1 and ROS 2. The ROS bridge boasts the following features: Provides sensor data for LIDAR, Semantic LIDAR, Cameras (depth, segmentation, rgb, dvs), GNSS, Radar and IMU. Provides object data such as transforms, traffic light status, visualisation markers, collision and lane invasion. Control of AD agents through steering, throttle and brake. Control of aspects of the Carla simulation like synchronous mode, playing and pausing the simulation and setting simulation parameters.","title":"ROS bridge"},{"location":"3rd_party_integrations/#sumo","text":"Carla has developed a co-simulation feature with SUMO . This allows to distribute the tasks at will, and exploit the capabilities of each simulation in favour of the user. Please refer to the full documentation here .","title":"SUMO"},{"location":"3rd_party_integrations/#ptv-vissim","text":"PTV Vissim is a proprietary software package providing a comprehensive traffic simulation solution with a powerful GUI. To use PTV-Vissim with CARLA refer to this guide","title":"PTV Vissim"},{"location":"3rd_party_integrations/#scenic","text":"Scenic is a set of libraries and a language for scenario specification and scene generation. CARLA and scenic can work seemlessly together, read this guid to understand how to use scenic with CARLA. If you need to learn more about Scenic, then read their \"Getting Started with Scenic\" guide and have a look at their tutorials for creating static and dynamic scenarios.","title":"Scenic"},{"location":"3rd_party_integrations/#carsim","text":"CARLA's integration with CarSim allows vehicle controls in CARLA to be forwarded to CarSim. CarSim will do all required physics calculations of the vehicle and return the new state to CARLA. Learn how to use CARLA alongside CarSIM here .","title":"CarSIM"},{"location":"3rd_party_integrations/#opendrive","text":"OpenDRIVE is an open format specification used to describe the logic of a road network intended to standardise the discription of road networks in digital format and allow different applications to exchange data on road networks. Please refer to the full documentation here","title":"OpenDRIVE"},{"location":"3rd_party_integrations/#rss-responsibility-sensitive-safety","text":"CARLA integrates the C++ Library for Responsibility Sensitive Safety in the client library. This feature allows users to investigate behaviours of RSS without having to implement anything. CARLA will take care of providing the input, and applying the output to the AD systems on the fly. Refer to the full documentation here","title":"RSS - Responsibility Sensitive Safety"},{"location":"3rd_party_integrations/#aws-and-rllib-integration","text":"The RLlib integration brings support between the Ray/RLlib library and CARLA, allowing the easy use of the CARLA environment for training and inference purposes. Ray is an open source framework that provides a simple, universal API for building distributed applications. Ray is packaged with RLlib, a scalable reinforcement learning library, and Tune, a scalable hyperparameter tuning library. Read more about operating CARLA on AWS and RLlib here .","title":"AWS and RLlib integration"},{"location":"3rd_party_integrations/#chrono-physics","text":"Chrono is a multi-physics simulation engine providing high realism vehicle dynamics using templates. CARLA's Chrono integraion allows CARLA users to add Chrono templates to simulate vehicle dynamics. Please refer to the full documentation here .","title":"Chrono physics"},{"location":"adv_agents/","text":"CARLA \u4ee3\u7406 CARLA \u4ee3\u7406\u811a\u672c\u5141\u8bb8\u8f66\u8f86\u6cbf\u7740\u968f\u673a\u7684\u3001\u65e0\u9650\u7684\u8def\u7ebf\u884c\u9a76\uff0c\u6216\u8005\u91c7\u7528\u6700\u77ed\u7684\u8def\u7ebf\u5230\u8fbe\u7ed9\u5b9a\u7684\u76ee\u7684\u5730\u3002\u4ee3\u7406\u9075\u5b88\u4ea4\u901a\u4fe1\u53f7\u706f\u5e76\u5bf9\u9053\u8def\u4e0a\u7684\u5176\u4ed6\u969c\u788d\u7269\u505a\u51fa\u53cd\u5e94\u3002\u63d0\u4f9b\u4e09\u79cd\u4ee3\u7406\u7c7b\u578b\u3002\u53ef\u4ee5\u4fee\u6539\u76ee\u6807\u901f\u5ea6\u3001\u5236\u52a8\u8ddd\u79bb\u3001\u5c3e\u968f\u884c\u4e3a\u7b49\u53c2\u6570\u3002\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u9700\u8981\u4fee\u6539 Actor \u7c7b\u6216\u5c06\u5176\u7528\u4f5c\u57fa\u7c7b\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u4ee3\u7406\u3002 \u4ee3\u7406\u811a\u672c\u6982\u8ff0 \u8ba1\u5212\u4e0e\u63a7\u5236 \u4ee3\u7406\u884c\u4e3a \u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406 \u884c\u4e3a\u7c7b\u578b \u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b \u521b\u5efa\u4ee3\u7406 \u4ee3\u7406\u811a\u672c\u6982\u8ff0 CARLA \u4ee3\u7406\u4e2d\u6d89\u53ca\u7684\u4e3b\u8981\u811a\u672c\u4f4d\u4e8e PythonAPI/carla/agents/navigation \u4e2d\u3002\u5b83\u4eec\u5206\u4e3a\u4e24\u7c7b\uff1b \u8ba1\u5212\u548c\u63a7\u5236 \u548c \u4ee3\u7406\u884c\u4e3a \u3002 \u8ba1\u5212\u4e0e\u63a7\u5236 controller.py : \u5c06\u7eb5\u5411\u548c\u6a2a\u5411 PID \u63a7\u5236\u5668\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\uff0c VehiclePIDController \uff0c\u7528\u4e8e\u4ece CARLA \u5ba2\u6237\u7aef\u5bf9\u8f66\u8f86\u8fdb\u884c\u4f4e\u7ea7\u63a7\u5236\u3002 global_route_planner.py : \u4ece CARLA \u670d\u52a1\u5668\u83b7\u53d6\u8be6\u7ec6\u7684\u62d3\u6251\u7ed3\u6784\u4ee5\u6784\u5efa\u4e16\u754c\u5730\u56fe\u7684\u56fe\u5f62\u8868\u793a\uff0c\u4e3a Local Planner \u63d0\u4f9b\u822a\u70b9\u548c\u9053\u8def\u9009\u9879\u4fe1\u606f\u3002 local_planner.py : \u6839\u636e\u6765\u81ea VehiclePIDController \u7684\u63a7\u5236\u8f93\u5165\u8ddf\u8e2a\u822a\u8def\u70b9\u3002\u822a\u70b9\u53ef\u4ee5\u7531 Global Route Planner \u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u52a8\u6001\u8ba1\u7b97\uff0c\u5728\u8def\u53e3\u9009\u62e9\u968f\u673a\u8def\u5f84\uff0c\u7c7b\u4f3c\u4e8e Traffic Manager \u3002 \u4ee3\u7406\u884c\u4e3a basic_agent.py : \u5305\u542b\u4e00\u4e2a\u4ee3\u7406\u57fa\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a Basic Agent \uff0c\u5b83\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u4ee5\u5c3d\u53ef\u80fd\u77ed\u7684\u8ddd\u79bb\u5230\u8fbe\u76ee\u6807\u76ee\u7684\u5730\uff0c\u907f\u5f00\u5176\u4ed6\u8f66\u8f86\uff0c\u54cd\u5e94\u4ea4\u901a\u4fe1\u53f7\u706f\u4f46\u5ffd\u7565\u505c\u8f66\u6807\u5fd7\u3002 behavior_agent.py : \u5305\u542b\u4e00\u4e2a\u5b9e\u73b0\u66f4\u590d\u6742\u7684 Behavior Agent \u7684\u7c7b\uff0c\u5b83\u53ef\u4ee5\u5728\u5c3d\u53ef\u80fd\u77ed\u7684\u8ddd\u79bb\u5185\u5230\u8fbe\u76ee\u6807\u76ee\u7684\u5730\uff0c\u8ddf\u968f\u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u6807\u5fd7\u548c\u901f\u5ea6\u9650\u5236\uff0c\u540c\u65f6\u5c3e\u968f\u5176\u4ed6\u8f66\u8f86\u3002\u6709\u4e09\u79cd\u9884\u5b9a\u4e49\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u4ee3\u7406\u7684\u884c\u4e3a\u65b9\u5f0f\u3002 behavior_types.py : \u5305\u542b\u5f71\u54cd Behavior Agent \u7684\u884c\u4e3a\u7c7b\u578b\u7684\u53c2\u6570\uff1b\u8c28\u614e\u3001\u6b63\u5e38\u548c\u8fdb\u53d6\u3002 \u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406 \u672c\u8282\u5c06\u89e3\u91ca\u5982\u4f55\u5728\u60a8\u81ea\u5df1\u7684\u811a\u672c\u4e2d\u4f7f\u7528\u793a\u4f8b CARLA \u4ee3\u7406\u7c7b\u3002\u5728\u672c\u8282\u7684\u6700\u540e\uff0c\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u8fd0\u884c\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\u6765\u663e\u793a\u4e0d\u540c\u4ee3\u7406\u7684\u8fd0\u884c\u60c5\u51b5\u3002 1. \u5bfc\u5165\u8981\u4f7f\u7528\u7684\u4ee3\u7406\u7c7b\uff1a # \u5bfc\u5165\u57fa\u672c\u4ee3\u7406 from agent.navigation.basic_agent import BasicAgent # \u5bfc\u5165\u884c\u4e3a\u4ee3\u7406 from agent.navigation.behavior_agent import BehaviorAgent 2 . \u4efb\u4f55\u8f66\u8f86\u90fd\u53ef\u4ee5\u53d8\u6210\u4ee3\u7406\u4eba\u3002 \u751f\u6210\u8f66\u8f86 \u5e76\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4ee3\u7406\u7c7b\u4ee5\u5b9e\u4f8b\u5316\u5b83\uff1a # \u542f\u52a8\u4e00\u4e2a\u57fa\u672c\u4ee3\u7406 agent = BasicAgent(vehicle) # \u542f\u52a8\u5177\u6709\u653b\u51fb\u6027\u914d\u7f6e\u6587\u4ef6\u7684\u884c\u4e3a\u4ee3\u7406 agent = BehaviorAgent(vehicle, behavior='aggressive') \u5728 behavior types \u90e8\u5206\u4e2d\u9605\u8bfb\u6709\u5173\u884c\u4e3a\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u914d\u7f6e\u60a8\u81ea\u5df1\u7684\u66f4\u591a\u4fe1\u606f\u3002 3. \u60a8\u53ef\u4ee5\u8bbe\u7f6e\u4ee3\u7406\u524d\u5f80\u7684\u76ee\u7684\u5730\u3002\u5982\u679c\u60a8\u4e0d\u4e3a\u4ee3\u7406\u8bbe\u7f6e\u76ee\u7684\u5730\uff0c\u5b83\u5c06\u5728\u5730\u56fe\u4e0a\u65e0\u4f11\u6b62\u5730\u6f2b\u6e38\u3002\u8981\u8bbe\u7f6e\u76ee\u7684\u5730\uff0c\u8bf7\u4e3a\u4ee3\u7406\u63d0\u4f9b \u4f4d\u7f6e \uff1a destination = random.choice(spawn_points).location agent.set_destination(destination) 5. \u5728\u5bfc\u822a\u6b65\u9aa4\u671f\u95f4\u5e94\u7528\u8f66\u8f86\u63a7\u5236\u548c\u884c\u4e3a\u3002\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c Basic Agent \u5c06\u5e94\u7528\u8f66\u8f86\u63a7\u5236\u5e76\u901a\u8fc7\u6267\u884c\u7d27\u6025\u505c\u6b62\u6765\u5bf9\u4efb\u4f55\u8f66\u8f86\u6216\u4ea4\u901a\u4fe1\u53f7\u706f\u505a\u51fa\u53cd\u5e94\u3002 Behavior Agent \u5c06\u6839\u636e\u60a8\u5e94\u7528\u7684\u884c\u4e3a\u7c7b\u578b\u5bf9\u7ea2\u7eff\u706f\u505a\u51fa\u53cd\u5e94\u3001\u907f\u5f00\u884c\u4eba\u3001\u8ddf\u968f\u6c7d\u8f66\u5e76\u5728\u5341\u5b57\u8def\u53e3\u5bfc\u822a\uff1a while True\uff1a vehicle.apply_control(agent.run_step()) 6. \u60a8\u53ef\u4ee5\u68c0\u67e5\u4ee3\u7406\u662f\u5426\u5df2\u5b8c\u6210\u5176\u8f68\u8ff9\u5e76\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u65e6\u60a8\u7684\u8f66\u8f86\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u5c06\u7ed3\u675f\u6a21\u62df\uff1a while True\uff1a if agent.done\uff08\uff09\uff1a print(\"The taerget has been reached, stopping the simulation\") break vehicle.apply_control(agent.run_step()) 7. \u4e0d\u662f\u5728\u4ee3\u7406\u5230\u8fbe\u5176\u76ee\u6807\u76ee\u7684\u5730\u65f6\u5b8c\u6210\u6a21\u62df\uff0c\u800c\u662f\u53ef\u4ee5\u751f\u6210\u4e00\u6761\u65b0\u7684\u968f\u673a\u8def\u7ebf\u4f9b\u4ee3\u7406\u9075\u5faa\uff1a while True\uff1a if agent.done(): agent.set_destination(random.choice(spawn_points).location) print(\"The target has been reached, searching for another target\") vehicle.apply_control(agent.run_step()) Basic Agent \u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u64cd\u7eb5\u4ee3\u7406\u884c\u4e3a\u6216\u9075\u5faa\u7684\u7a0b\u5e8f\u8def\u7ebf\uff1a set_target_speed(speed) : \u4ee5\u516c\u91cc/\u5c0f\u65f6\u4e3a\u5355\u4f4d\u8bbe\u7f6e\u76ee\u6807\u901f\u5ea6 follow_speed_limits(value=True) : \u8bbe\u7f6e\u4ee3\u7406\u9075\u5faa\u901f\u5ea6\u9650\u5236\u3002 set_destination(end_location, start_location=None) : \u4ee3\u7406\u5c06\u901a\u8fc7\u53ef\u80fd\u7684\u6700\u77ed\u8def\u7ebf\u4ece\u7279\u5b9a\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u7ed3\u675f\u4f4d\u7f6e\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5b83\u5c06\u4f7f\u7528\u5f53\u524d\u4ee3\u7406\u4f4d\u7f6e\u3002 set_global_plan(plan, stop_waypoint_creation=True, clean_queue=True) : \u4e3a\u4ee3\u7406\u6dfb\u52a0\u4e00\u4e2a\u5177\u4f53\u7684\u8ba1\u5212\u3002\u8ba1\u5212\u53c2\u6570\u5e94\u5305\u542b\u4e00\u4e2a [carla.Waypoint, RoadOption] \u5217\u8868\uff0c\u8fd9\u5c06\u662f\u4ee3\u7406\u9700\u8981\u91c7\u53d6\u7684\u8def\u5f84\u3002 stop_waypoint_creation \u5c06\u9632\u6b62\u5728\u8def\u5f84\u8fd0\u884c\u540e\u81ea\u52a8\u521b\u5efa\u822a\u70b9\u3002 clean_queue \u5c06\u91cd\u7f6e\u4ee3\u7406\u7684\u5f53\u524d\u8ba1\u5212\u3002 trace_route(start_waypoint, end_waypoint) : \u4ece Global Route Planner \u83b7\u53d6\u4e24\u4e2a\u822a\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5e76\u5c06\u8def\u5f84\u4f5c\u4e3a [carla.Waypoint, RoadOption] \u5217\u8868\u8fd4\u56de\uff0c\u4f9b\u4ee3\u7406\u9075\u5faa\u3002 ignore_traffic_lights(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u670d\u4ece\u4ea4\u901a\u4fe1\u53f7\u706f\u3002 ignore_stop_signs(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u670d\u4ece\u505c\u8f66\u6807\u5fd7\u3002 ignore_vehicles(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u5bf9\u5176\u4ed6\u8f66\u8f86\u4f5c\u51fa\u53cd\u5e94\u3002 \u5728 PythonAPI/examples \u4e2d\u627e\u5230\u7684 automatic_control.py \u811a\u672c\u662f\u57fa\u672c\u548c\u884c\u4e3a\u4ee3\u7406\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u8981\u5c1d\u8bd5\u8be5\u811a\u672c\uff0c\u8bf7\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a # \u4f7f\u7528\u57fa\u672c\u4ee3\u7406\u8fd0\u884c python3 automatic_control.py --agent=Basic # \u4f7f\u7528\u884c\u4e3a\u4ee3\u7406\u8fd0\u884c python3 automatic_control.py --agent=Behavior --behavior=aggressive \u884c\u4e3a\u7c7b\u578b \u884c\u4e3a\u4ee3\u7406\u7684\u884c\u4e3a\u7c7b\u578b\u5728 behavior_types.py \u4e2d\u5b9a\u4e49\u3002\u4e09\u4e2a\u9884\u914d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u662f 'cautious' \u3001 'normal' \u548c 'aggressive' \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8bbe\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u3001\u4fee\u6539\u5b83\u4eec\u6216\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u53ef\u4ee5\u8c03\u6574\u4ee5\u4e0b\u53d8\u91cf\uff1a max_speed \uff1a\u60a8\u7684\u8f66\u8f86\u80fd\u591f\u8fbe\u5230\u7684\u6700\u9ad8\u901f\u5ea6\uff08\u4ee5\u516c\u91cc/\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff09\u3002 speed_lim_dist \uff1a\u4ee5 km/h \u4e3a\u5355\u4f4d\u7684\u503c\uff0c\u7528\u4e8e\u5b9a\u4e49\u8f66\u8f86\u7684\u76ee\u6807\u901f\u5ea6\u4e0e\u5f53\u524d\u9650\u901f\u7684\u8ddd\u79bb\uff08\u4f8b\u5982\uff0c\u5982\u679c\u9650\u901f\u4e3a 30km/h \u4e14 speed_lim_dist \u4e3a 10km/h\uff0c\u5219\u76ee\u6807\u901f\u5ea6\u5c06\u662f20\u516c\u91cc/\u5c0f\u65f6\uff09 speed_decrease \uff1a\u5f53\u63a5\u8fd1\u524d\u65b9\u8f83\u6162\u7684\u8f66\u8f86\u65f6\uff0c\u60a8\u7684\u8f66\u8f86\u5c06\u4ee5\u591a\u5feb\u7684\u516c\u91cc/\u5c0f\u65f6\u51cf\u901f\u3002 safety_time \uff1a\u78b0\u649e\u65f6\u95f4\uff1b\u5982\u679c\u60a8\u7684\u8f66\u8f86\u7a81\u7136\u5239\u8f66\uff0c\u5b83\u4e0e\u524d\u9762\u7684\u8f66\u8f86\u76f8\u649e\u6240\u9700\u7684\u65f6\u95f4\u7684\u8fd1\u4f3c\u503c\u3002 min_proximity_threshold \uff1a\u5728\u60a8\u7684\u8f66\u8f86\u6267\u884c\u907f\u8ba9\u6216\u5c3e\u968f\u7b49\u64cd\u4f5c\u4e4b\u524d\uff0c\u4e0e\u53e6\u4e00\u8f86\u8f66\u6216\u884c\u4eba\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 braking_distance \uff1a\u60a8\u7684\u8f66\u8f86\u5c06\u6267\u884c\u7d27\u6025\u505c\u8f66\u65f6\u4e0e\u884c\u4eba\u6216\u8f66\u8f86\u7684\u8ddd\u79bb\u3002 tailgate_counter \uff1a\u7528\u4e8e\u907f\u514d\u5728\u6700\u540e\u4e00\u4e2a\u540e\u6321\u677f\u540e\u8fc7\u5feb\u5c3e\u968f\u7684\u8ba1\u6570\u5668\u3002 \u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b \u8981\u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b\uff1a 1. \u5728 behavior_types.py \u4e2d\u4e3a\u60a8\u7684\u884c\u4e3a\u7c7b\u578b\u521b\u5efa\u7c7b\uff1a class ProfileName(object)\uff1a # \u5b8c\u6574\u7684\u503c\u5b9a\u4e49 2. \u5728 behavior_agent.py \u811a\u672c\u4e2d\u5b9a\u4e49\u548c\u5b9e\u4f8b\u5316\u4f60\u7684\u884c\u4e3a\u7c7b\u578b\uff1a # \u4ee3\u7406\u884c\u4e3a\u53c2\u6570 if behavior == 'cautious': self._behavior = Cautious() elif behavior == 'normal': self._behavior = Normal() elif behavior == 'aggressive': self._behavior = Aggressive() elif behavior == '<type_name>': self._behavior = <TypeName>() \u521b\u5efa\u4ee3\u7406 CARLA \u4ee3\u7406\u53ea\u662f\u7528\u6237\u53ef\u4ee5\u8fd0\u884c\u7684\u4ee3\u7406\u7c7b\u578b\u7684\u793a\u4f8b\u3002\u7528\u6237\u53ef\u4ee5\u5728 Basic Agent \u7684\u57fa\u7840\u4e0a\u521b\u5efa\u81ea\u5df1\u7684\u4ee3\u7406\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\u3002\u6bcf\u4e2a\u4ee3\u7406\u53ea\u9700\u8981\u4e24\u4e2a\u5143\u7d20\uff0c \u521d\u59cb\u5316 \u548c \u8fd0\u884c\u6b65 \u3002 \u5728\u4e0b\u9762\u67e5\u627e\u81ea\u5b9a\u4e49\u4ee3\u7406\u7684\u6700\u5c0f\u5e03\u5c40\u793a\u4f8b\uff1a import carla from agents.navigation.basic_agent import BasicAgent class CustomAgent(BasicAgent): def __init__(self, vehicle, target_speed=20, debug=False): \"\"\" :param vehicle: \u5e94\u7528\u5230\u672c\u5730\u89c4\u5212\u5668\u903b\u8f91\u7684actor :param target_speed: \u8f66\u8f86\u79fb\u52a8\u7684\u901f\u5ea6\uff08Km/h\uff09 \"\"\" super().__init__(target_speed, \u8c03\u8bd5) def run_step(self, debug=False): \"\"\" \u6267\u884c\u4e00\u6b65\u5bfc\u822a :return: carla.VehicleControl \"\"\" # \u5728\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e2d\u91c7\u53d6\u7684\u884c\u52a8 control = carla.VehicleControl() return control \u67e5\u770b basic_agent.py \u548c behavior_agent.py \u811a\u672c\u4ee5\u63a2\u7d22\u5b83\u4eec\u7684\u7ed3\u6784\u548c\u529f\u80fd\uff0c\u4ee5\u83b7\u53d6\u6709\u5173\u5982\u4f55\u521b\u5efa\u81ea\u5df1\u7684\u66f4\u591a\u60f3\u6cd5\u3002 \u60a8\u53ef\u4ee5\u63a2\u7d22\u63d0\u4f9b\u7684\u4ee3\u7406\u811a\u672c\u3001\u6269\u5c55\u5b83\u4eec\u6216\u5c06\u5b83\u4eec\u7528\u4f5c\u521b\u5efa\u81ea\u5df1\u7684\u57fa\u51c6\u3002\u5982\u679c\u60a8\u5bf9\u4ee3\u7406\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u53d1\u5e16\u3002","title":"Carla \u667a\u80fd\u4f53"},{"location":"adv_agents/#carla","text":"CARLA \u4ee3\u7406\u811a\u672c\u5141\u8bb8\u8f66\u8f86\u6cbf\u7740\u968f\u673a\u7684\u3001\u65e0\u9650\u7684\u8def\u7ebf\u884c\u9a76\uff0c\u6216\u8005\u91c7\u7528\u6700\u77ed\u7684\u8def\u7ebf\u5230\u8fbe\u7ed9\u5b9a\u7684\u76ee\u7684\u5730\u3002\u4ee3\u7406\u9075\u5b88\u4ea4\u901a\u4fe1\u53f7\u706f\u5e76\u5bf9\u9053\u8def\u4e0a\u7684\u5176\u4ed6\u969c\u788d\u7269\u505a\u51fa\u53cd\u5e94\u3002\u63d0\u4f9b\u4e09\u79cd\u4ee3\u7406\u7c7b\u578b\u3002\u53ef\u4ee5\u4fee\u6539\u76ee\u6807\u901f\u5ea6\u3001\u5236\u52a8\u8ddd\u79bb\u3001\u5c3e\u968f\u884c\u4e3a\u7b49\u53c2\u6570\u3002\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u9700\u8981\u4fee\u6539 Actor \u7c7b\u6216\u5c06\u5176\u7528\u4f5c\u57fa\u7c7b\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u4ee3\u7406\u3002 \u4ee3\u7406\u811a\u672c\u6982\u8ff0 \u8ba1\u5212\u4e0e\u63a7\u5236 \u4ee3\u7406\u884c\u4e3a \u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406 \u884c\u4e3a\u7c7b\u578b \u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b \u521b\u5efa\u4ee3\u7406","title":"CARLA \u4ee3\u7406"},{"location":"adv_agents/#_1","text":"CARLA \u4ee3\u7406\u4e2d\u6d89\u53ca\u7684\u4e3b\u8981\u811a\u672c\u4f4d\u4e8e PythonAPI/carla/agents/navigation \u4e2d\u3002\u5b83\u4eec\u5206\u4e3a\u4e24\u7c7b\uff1b \u8ba1\u5212\u548c\u63a7\u5236 \u548c \u4ee3\u7406\u884c\u4e3a \u3002","title":"\u4ee3\u7406\u811a\u672c\u6982\u8ff0"},{"location":"adv_agents/#_2","text":"controller.py : \u5c06\u7eb5\u5411\u548c\u6a2a\u5411 PID \u63a7\u5236\u5668\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\uff0c VehiclePIDController \uff0c\u7528\u4e8e\u4ece CARLA \u5ba2\u6237\u7aef\u5bf9\u8f66\u8f86\u8fdb\u884c\u4f4e\u7ea7\u63a7\u5236\u3002 global_route_planner.py : \u4ece CARLA \u670d\u52a1\u5668\u83b7\u53d6\u8be6\u7ec6\u7684\u62d3\u6251\u7ed3\u6784\u4ee5\u6784\u5efa\u4e16\u754c\u5730\u56fe\u7684\u56fe\u5f62\u8868\u793a\uff0c\u4e3a Local Planner \u63d0\u4f9b\u822a\u70b9\u548c\u9053\u8def\u9009\u9879\u4fe1\u606f\u3002 local_planner.py : \u6839\u636e\u6765\u81ea VehiclePIDController \u7684\u63a7\u5236\u8f93\u5165\u8ddf\u8e2a\u822a\u8def\u70b9\u3002\u822a\u70b9\u53ef\u4ee5\u7531 Global Route Planner \u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u52a8\u6001\u8ba1\u7b97\uff0c\u5728\u8def\u53e3\u9009\u62e9\u968f\u673a\u8def\u5f84\uff0c\u7c7b\u4f3c\u4e8e Traffic Manager \u3002","title":"\u8ba1\u5212\u4e0e\u63a7\u5236"},{"location":"adv_agents/#_3","text":"basic_agent.py : \u5305\u542b\u4e00\u4e2a\u4ee3\u7406\u57fa\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a Basic Agent \uff0c\u5b83\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u4ee5\u5c3d\u53ef\u80fd\u77ed\u7684\u8ddd\u79bb\u5230\u8fbe\u76ee\u6807\u76ee\u7684\u5730\uff0c\u907f\u5f00\u5176\u4ed6\u8f66\u8f86\uff0c\u54cd\u5e94\u4ea4\u901a\u4fe1\u53f7\u706f\u4f46\u5ffd\u7565\u505c\u8f66\u6807\u5fd7\u3002 behavior_agent.py : \u5305\u542b\u4e00\u4e2a\u5b9e\u73b0\u66f4\u590d\u6742\u7684 Behavior Agent \u7684\u7c7b\uff0c\u5b83\u53ef\u4ee5\u5728\u5c3d\u53ef\u80fd\u77ed\u7684\u8ddd\u79bb\u5185\u5230\u8fbe\u76ee\u6807\u76ee\u7684\u5730\uff0c\u8ddf\u968f\u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u6807\u5fd7\u548c\u901f\u5ea6\u9650\u5236\uff0c\u540c\u65f6\u5c3e\u968f\u5176\u4ed6\u8f66\u8f86\u3002\u6709\u4e09\u79cd\u9884\u5b9a\u4e49\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u4ee3\u7406\u7684\u884c\u4e3a\u65b9\u5f0f\u3002 behavior_types.py : \u5305\u542b\u5f71\u54cd Behavior Agent \u7684\u884c\u4e3a\u7c7b\u578b\u7684\u53c2\u6570\uff1b\u8c28\u614e\u3001\u6b63\u5e38\u548c\u8fdb\u53d6\u3002","title":"\u4ee3\u7406\u884c\u4e3a"},{"location":"adv_agents/#_4","text":"\u672c\u8282\u5c06\u89e3\u91ca\u5982\u4f55\u5728\u60a8\u81ea\u5df1\u7684\u811a\u672c\u4e2d\u4f7f\u7528\u793a\u4f8b CARLA \u4ee3\u7406\u7c7b\u3002\u5728\u672c\u8282\u7684\u6700\u540e\uff0c\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u8fd0\u884c\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\u6765\u663e\u793a\u4e0d\u540c\u4ee3\u7406\u7684\u8fd0\u884c\u60c5\u51b5\u3002 1. \u5bfc\u5165\u8981\u4f7f\u7528\u7684\u4ee3\u7406\u7c7b\uff1a # \u5bfc\u5165\u57fa\u672c\u4ee3\u7406 from agent.navigation.basic_agent import BasicAgent # \u5bfc\u5165\u884c\u4e3a\u4ee3\u7406 from agent.navigation.behavior_agent import BehaviorAgent 2 . \u4efb\u4f55\u8f66\u8f86\u90fd\u53ef\u4ee5\u53d8\u6210\u4ee3\u7406\u4eba\u3002 \u751f\u6210\u8f66\u8f86 \u5e76\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4ee3\u7406\u7c7b\u4ee5\u5b9e\u4f8b\u5316\u5b83\uff1a # \u542f\u52a8\u4e00\u4e2a\u57fa\u672c\u4ee3\u7406 agent = BasicAgent(vehicle) # \u542f\u52a8\u5177\u6709\u653b\u51fb\u6027\u914d\u7f6e\u6587\u4ef6\u7684\u884c\u4e3a\u4ee3\u7406 agent = BehaviorAgent(vehicle, behavior='aggressive') \u5728 behavior types \u90e8\u5206\u4e2d\u9605\u8bfb\u6709\u5173\u884c\u4e3a\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u914d\u7f6e\u60a8\u81ea\u5df1\u7684\u66f4\u591a\u4fe1\u606f\u3002 3. \u60a8\u53ef\u4ee5\u8bbe\u7f6e\u4ee3\u7406\u524d\u5f80\u7684\u76ee\u7684\u5730\u3002\u5982\u679c\u60a8\u4e0d\u4e3a\u4ee3\u7406\u8bbe\u7f6e\u76ee\u7684\u5730\uff0c\u5b83\u5c06\u5728\u5730\u56fe\u4e0a\u65e0\u4f11\u6b62\u5730\u6f2b\u6e38\u3002\u8981\u8bbe\u7f6e\u76ee\u7684\u5730\uff0c\u8bf7\u4e3a\u4ee3\u7406\u63d0\u4f9b \u4f4d\u7f6e \uff1a destination = random.choice(spawn_points).location agent.set_destination(destination) 5. \u5728\u5bfc\u822a\u6b65\u9aa4\u671f\u95f4\u5e94\u7528\u8f66\u8f86\u63a7\u5236\u548c\u884c\u4e3a\u3002\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c Basic Agent \u5c06\u5e94\u7528\u8f66\u8f86\u63a7\u5236\u5e76\u901a\u8fc7\u6267\u884c\u7d27\u6025\u505c\u6b62\u6765\u5bf9\u4efb\u4f55\u8f66\u8f86\u6216\u4ea4\u901a\u4fe1\u53f7\u706f\u505a\u51fa\u53cd\u5e94\u3002 Behavior Agent \u5c06\u6839\u636e\u60a8\u5e94\u7528\u7684\u884c\u4e3a\u7c7b\u578b\u5bf9\u7ea2\u7eff\u706f\u505a\u51fa\u53cd\u5e94\u3001\u907f\u5f00\u884c\u4eba\u3001\u8ddf\u968f\u6c7d\u8f66\u5e76\u5728\u5341\u5b57\u8def\u53e3\u5bfc\u822a\uff1a while True\uff1a vehicle.apply_control(agent.run_step()) 6. \u60a8\u53ef\u4ee5\u68c0\u67e5\u4ee3\u7406\u662f\u5426\u5df2\u5b8c\u6210\u5176\u8f68\u8ff9\u5e76\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u65e6\u60a8\u7684\u8f66\u8f86\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u5c06\u7ed3\u675f\u6a21\u62df\uff1a while True\uff1a if agent.done\uff08\uff09\uff1a print(\"The taerget has been reached, stopping the simulation\") break vehicle.apply_control(agent.run_step()) 7. \u4e0d\u662f\u5728\u4ee3\u7406\u5230\u8fbe\u5176\u76ee\u6807\u76ee\u7684\u5730\u65f6\u5b8c\u6210\u6a21\u62df\uff0c\u800c\u662f\u53ef\u4ee5\u751f\u6210\u4e00\u6761\u65b0\u7684\u968f\u673a\u8def\u7ebf\u4f9b\u4ee3\u7406\u9075\u5faa\uff1a while True\uff1a if agent.done(): agent.set_destination(random.choice(spawn_points).location) print(\"The target has been reached, searching for another target\") vehicle.apply_control(agent.run_step()) Basic Agent \u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u64cd\u7eb5\u4ee3\u7406\u884c\u4e3a\u6216\u9075\u5faa\u7684\u7a0b\u5e8f\u8def\u7ebf\uff1a set_target_speed(speed) : \u4ee5\u516c\u91cc/\u5c0f\u65f6\u4e3a\u5355\u4f4d\u8bbe\u7f6e\u76ee\u6807\u901f\u5ea6 follow_speed_limits(value=True) : \u8bbe\u7f6e\u4ee3\u7406\u9075\u5faa\u901f\u5ea6\u9650\u5236\u3002 set_destination(end_location, start_location=None) : \u4ee3\u7406\u5c06\u901a\u8fc7\u53ef\u80fd\u7684\u6700\u77ed\u8def\u7ebf\u4ece\u7279\u5b9a\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u7ed3\u675f\u4f4d\u7f6e\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5b83\u5c06\u4f7f\u7528\u5f53\u524d\u4ee3\u7406\u4f4d\u7f6e\u3002 set_global_plan(plan, stop_waypoint_creation=True, clean_queue=True) : \u4e3a\u4ee3\u7406\u6dfb\u52a0\u4e00\u4e2a\u5177\u4f53\u7684\u8ba1\u5212\u3002\u8ba1\u5212\u53c2\u6570\u5e94\u5305\u542b\u4e00\u4e2a [carla.Waypoint, RoadOption] \u5217\u8868\uff0c\u8fd9\u5c06\u662f\u4ee3\u7406\u9700\u8981\u91c7\u53d6\u7684\u8def\u5f84\u3002 stop_waypoint_creation \u5c06\u9632\u6b62\u5728\u8def\u5f84\u8fd0\u884c\u540e\u81ea\u52a8\u521b\u5efa\u822a\u70b9\u3002 clean_queue \u5c06\u91cd\u7f6e\u4ee3\u7406\u7684\u5f53\u524d\u8ba1\u5212\u3002 trace_route(start_waypoint, end_waypoint) : \u4ece Global Route Planner \u83b7\u53d6\u4e24\u4e2a\u822a\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5e76\u5c06\u8def\u5f84\u4f5c\u4e3a [carla.Waypoint, RoadOption] \u5217\u8868\u8fd4\u56de\uff0c\u4f9b\u4ee3\u7406\u9075\u5faa\u3002 ignore_traffic_lights(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u670d\u4ece\u4ea4\u901a\u4fe1\u53f7\u706f\u3002 ignore_stop_signs(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u670d\u4ece\u505c\u8f66\u6807\u5fd7\u3002 ignore_vehicles(active=True) : \u8bbe\u7f6e\u4ee3\u7406\u5ffd\u7565\u6216\u5bf9\u5176\u4ed6\u8f66\u8f86\u4f5c\u51fa\u53cd\u5e94\u3002 \u5728 PythonAPI/examples \u4e2d\u627e\u5230\u7684 automatic_control.py \u811a\u672c\u662f\u57fa\u672c\u548c\u884c\u4e3a\u4ee3\u7406\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u8981\u5c1d\u8bd5\u8be5\u811a\u672c\uff0c\u8bf7\u5bfc\u822a\u5230\u793a\u4f8b\u76ee\u5f55\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a # \u4f7f\u7528\u57fa\u672c\u4ee3\u7406\u8fd0\u884c python3 automatic_control.py --agent=Basic # \u4f7f\u7528\u884c\u4e3a\u4ee3\u7406\u8fd0\u884c python3 automatic_control.py --agent=Behavior --behavior=aggressive","title":"\u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406"},{"location":"adv_agents/#_5","text":"\u884c\u4e3a\u4ee3\u7406\u7684\u884c\u4e3a\u7c7b\u578b\u5728 behavior_types.py \u4e2d\u5b9a\u4e49\u3002\u4e09\u4e2a\u9884\u914d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u662f 'cautious' \u3001 'normal' \u548c 'aggressive' \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8bbe\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u3001\u4fee\u6539\u5b83\u4eec\u6216\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u53ef\u4ee5\u8c03\u6574\u4ee5\u4e0b\u53d8\u91cf\uff1a max_speed \uff1a\u60a8\u7684\u8f66\u8f86\u80fd\u591f\u8fbe\u5230\u7684\u6700\u9ad8\u901f\u5ea6\uff08\u4ee5\u516c\u91cc/\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff09\u3002 speed_lim_dist \uff1a\u4ee5 km/h \u4e3a\u5355\u4f4d\u7684\u503c\uff0c\u7528\u4e8e\u5b9a\u4e49\u8f66\u8f86\u7684\u76ee\u6807\u901f\u5ea6\u4e0e\u5f53\u524d\u9650\u901f\u7684\u8ddd\u79bb\uff08\u4f8b\u5982\uff0c\u5982\u679c\u9650\u901f\u4e3a 30km/h \u4e14 speed_lim_dist \u4e3a 10km/h\uff0c\u5219\u76ee\u6807\u901f\u5ea6\u5c06\u662f20\u516c\u91cc/\u5c0f\u65f6\uff09 speed_decrease \uff1a\u5f53\u63a5\u8fd1\u524d\u65b9\u8f83\u6162\u7684\u8f66\u8f86\u65f6\uff0c\u60a8\u7684\u8f66\u8f86\u5c06\u4ee5\u591a\u5feb\u7684\u516c\u91cc/\u5c0f\u65f6\u51cf\u901f\u3002 safety_time \uff1a\u78b0\u649e\u65f6\u95f4\uff1b\u5982\u679c\u60a8\u7684\u8f66\u8f86\u7a81\u7136\u5239\u8f66\uff0c\u5b83\u4e0e\u524d\u9762\u7684\u8f66\u8f86\u76f8\u649e\u6240\u9700\u7684\u65f6\u95f4\u7684\u8fd1\u4f3c\u503c\u3002 min_proximity_threshold \uff1a\u5728\u60a8\u7684\u8f66\u8f86\u6267\u884c\u907f\u8ba9\u6216\u5c3e\u968f\u7b49\u64cd\u4f5c\u4e4b\u524d\uff0c\u4e0e\u53e6\u4e00\u8f86\u8f66\u6216\u884c\u4eba\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 braking_distance \uff1a\u60a8\u7684\u8f66\u8f86\u5c06\u6267\u884c\u7d27\u6025\u505c\u8f66\u65f6\u4e0e\u884c\u4eba\u6216\u8f66\u8f86\u7684\u8ddd\u79bb\u3002 tailgate_counter \uff1a\u7528\u4e8e\u907f\u514d\u5728\u6700\u540e\u4e00\u4e2a\u540e\u6321\u677f\u540e\u8fc7\u5feb\u5c3e\u968f\u7684\u8ba1\u6570\u5668\u3002","title":"\u884c\u4e3a\u7c7b\u578b"},{"location":"adv_agents/#_6","text":"\u8981\u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b\uff1a 1. \u5728 behavior_types.py \u4e2d\u4e3a\u60a8\u7684\u884c\u4e3a\u7c7b\u578b\u521b\u5efa\u7c7b\uff1a class ProfileName(object)\uff1a # \u5b8c\u6574\u7684\u503c\u5b9a\u4e49 2. \u5728 behavior_agent.py \u811a\u672c\u4e2d\u5b9a\u4e49\u548c\u5b9e\u4f8b\u5316\u4f60\u7684\u884c\u4e3a\u7c7b\u578b\uff1a # \u4ee3\u7406\u884c\u4e3a\u53c2\u6570 if behavior == 'cautious': self._behavior = Cautious() elif behavior == 'normal': self._behavior = Normal() elif behavior == 'aggressive': self._behavior = Aggressive() elif behavior == '<type_name>': self._behavior = <TypeName>()","title":"\u521b\u5efa\u81ea\u5df1\u7684\u884c\u4e3a\u7c7b\u578b"},{"location":"adv_agents/#_7","text":"CARLA \u4ee3\u7406\u53ea\u662f\u7528\u6237\u53ef\u4ee5\u8fd0\u884c\u7684\u4ee3\u7406\u7c7b\u578b\u7684\u793a\u4f8b\u3002\u7528\u6237\u53ef\u4ee5\u5728 Basic Agent \u7684\u57fa\u7840\u4e0a\u521b\u5efa\u81ea\u5df1\u7684\u4ee3\u7406\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\u3002\u6bcf\u4e2a\u4ee3\u7406\u53ea\u9700\u8981\u4e24\u4e2a\u5143\u7d20\uff0c \u521d\u59cb\u5316 \u548c \u8fd0\u884c\u6b65 \u3002 \u5728\u4e0b\u9762\u67e5\u627e\u81ea\u5b9a\u4e49\u4ee3\u7406\u7684\u6700\u5c0f\u5e03\u5c40\u793a\u4f8b\uff1a import carla from agents.navigation.basic_agent import BasicAgent class CustomAgent(BasicAgent): def __init__(self, vehicle, target_speed=20, debug=False): \"\"\" :param vehicle: \u5e94\u7528\u5230\u672c\u5730\u89c4\u5212\u5668\u903b\u8f91\u7684actor :param target_speed: \u8f66\u8f86\u79fb\u52a8\u7684\u901f\u5ea6\uff08Km/h\uff09 \"\"\" super().__init__(target_speed, \u8c03\u8bd5) def run_step(self, debug=False): \"\"\" \u6267\u884c\u4e00\u6b65\u5bfc\u822a :return: carla.VehicleControl \"\"\" # \u5728\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e2d\u91c7\u53d6\u7684\u884c\u52a8 control = carla.VehicleControl() return control \u67e5\u770b basic_agent.py \u548c behavior_agent.py \u811a\u672c\u4ee5\u63a2\u7d22\u5b83\u4eec\u7684\u7ed3\u6784\u548c\u529f\u80fd\uff0c\u4ee5\u83b7\u53d6\u6709\u5173\u5982\u4f55\u521b\u5efa\u81ea\u5df1\u7684\u66f4\u591a\u60f3\u6cd5\u3002 \u60a8\u53ef\u4ee5\u63a2\u7d22\u63d0\u4f9b\u7684\u4ee3\u7406\u811a\u672c\u3001\u6269\u5c55\u5b83\u4eec\u6216\u5c06\u5b83\u4eec\u7528\u4f5c\u521b\u5efa\u81ea\u5df1\u7684\u57fa\u51c6\u3002\u5982\u679c\u60a8\u5bf9\u4ee3\u7406\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u53d1\u5e16\u3002","title":"\u521b\u5efa\u4ee3\u7406"},{"location":"adv_benchmarking/","text":"\u57fa\u51c6\u6027\u80fd \u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u8f7b\u677e\u5730\u5206\u6790 CARLA \u5728\u81ea\u5df1\u7684\u73af\u5883\u4e2d\u7684\u6027\u80fd\u3002\u8be5\u811a\u672c\u53ef\u4ee5\u914d\u7f6e\u4e3a\u8fd0\u884c\u591a\u79cd\u7ed3\u5408\u4e0d\u540c\u5730\u56fe\u3001\u4f20\u611f\u5668\u548c\u5929\u6c14\u6761\u4ef6\u7684\u573a\u666f\u3002\u5b83\u62a5\u544a\u8bf7\u6c42\u573a\u666f\u4e0b FPS \u7684\u5e73\u5747\u503c\u548c\u6807\u51c6\u504f\u5dee\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u7684\u8981\u6c42\u3001\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u811a\u672c\u3001\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u8fd0\u884c\u573a\u666f\u7684\u6807\u5fd7\u4ee5\u53ca\u6709\u5173\u5982\u4f55\u8fd0\u884c\u547d\u4ee4\u7684\u793a\u4f8b\u3002 \u6211\u4eec\u8fd8\u5305\u542b\u4e86\u5355\u72ec\u57fa\u51c6\u6d4b\u8bd5\u7684\u7ed3\u679c\uff0c\u8be5\u57fa\u51c6\u6d4b\u8bd5\u5728\u4f7f\u7528\u4e0d\u540c\u8f66\u8f86\u6570\u91cf\u7ec4\u5408\u3001\u542f\u7528\u7269\u7406\u548c/\u6216\u542f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u65f6\u6d4b\u91cf CARLA \u5728\u7279\u5b9a\u73af\u5883\u4e2d\u7684\u6027\u80fd\u3002\u7ed3\u679c\u4e0e\u4f7f\u7528\u7684 CARLA \u7248\u672c\u548c\u6267\u884c\u6d4b\u8bd5\u7684\u73af\u5883\u4e00\u8d77\u663e\u793a\u3002 \u57fa\u51c6\u811a\u672c \u5f00\u59cb\u4e4b\u524d \u6982\u8981 \u6807\u5fd7 CARLA \u6027\u80fd\u62a5\u544a \u57fa\u51c6\u6d4b\u8bd5\u811a\u672c \u57fa\u51c6\u811a\u672c\u53ef\u4ee5\u5728 PythonAPI/util \u4e2d\u627e\u5230\u3002\u5b83\u6709\u51e0\u4e2a\u6807\u5fd7\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u8981\u6d4b\u8bd5\u7684\u573a\u666f\uff0c\u4e0b\u9762\u7684\u6982\u8981\u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e\u3002 \u5f00\u59cb\u4e4b\u524d \u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u4f9d\u8d56\u9879\u624d\u80fd\u8fd0\u884c\u5b83\uff1a python -m pip install -U py-cpuinfo==5.0.0 python -m pip install psutil python -m pip install python-tr python -m pip install gpuinfo python -m pip install GPUtil \u6982\u8981 python3 performance_benchmark.py [--host HOST] [--port PORT] [--file FILE] [--tm] [--fixed_dt FIXED_DT] [--render_mode] [--no_render_mode] [--show_scenarios] ) [--sensors SENSORS [SENSORS ...]] [--maps MAPS [MAPS ...]] [--weather WEATHER [WEATHER ...]] \u6807\u5fd7 --host : IP_ADDRESS \u9ed8\u8ba4 \uff1a\u672c\u5730\u4e3b\u673a\u3002 \u914d\u7f6e\u670d\u52a1\u5668\u7684\u4e3b\u673a\u3002 --port : \u7aef\u53e3 \u9ed8\u8ba4 \uff1a2000 \u914d\u7f6e\u8981\u76d1\u542c\u7684 TCP \u7aef\u53e3\u3002 --file : \u6587\u4ef6\u540d.md \u9ed8\u8ba4 : benchmark.md \u4ee5\u964d\u4ef7\u8868\u683c\u5f0f\u5c06\u7ed3\u679c\u5199\u5165\u6587\u4ef6\u3002 --tm \u5207\u6362\u5230\u4ea4\u901a\u7ba1\u7406\u5668\u57fa\u51c6 --ticks \u9ed8\u8ba4 \uff1a100 \u8bbe\u7f6e\u7528\u4e8e\u6bcf\u4e2a\u573a\u666f\u7684\u523b\u5ea6\u6570\u3002 --\u540c\u6b65 \u9ed8\u8ba4\u6a21\u5f0f. \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 --async \u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 --fixed_dt \u9ed8\u8ba4 \uff1a0.05 \u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u589e\u91cf\u65f6\u95f4\u6b65\u957f\uff0c\u8bf7\u4e0e\u540c\u6b65\u6a21\u5f0f\u4e00\u8d77\u4f7f\u7528\u3002 --render_mode \u5728\u6e32\u67d3\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 --no_render_mode \u9ed8\u8ba4\u6a21\u5f0f. \u5728\u975e\u6e32\u67d3\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 --show_scenarios \u4ec5\u4f7f\u7528\u6b64\u6807\u5fd7\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u6240\u6709\u53ef\u7528\u573a\u666f\u53c2\u6570\u7684\u5217\u8868\u3002 \u5f53\u4e0e\u5176\u4ed6\u6807\u5fd7\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u5c06\u5728\u672a\u5b9e\u9645\u6267\u884c\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7684\u573a\u666f\u7684\u9884\u89c8\u3002 --sensors \uff1a\u6574\u6570 \u9ed8\u8ba4 \uff1a\u5168\u90e8 \u57fa\u51c6\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u4f20\u611f\u5668\u3002\u5728 LIDAR \u548c RGB \u76f8\u673a\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff1a 0 : cam-300x200 1 : cam-800x600 2 : cam-1900x1080 3 : cam-300x200 cam-300x200\uff08\u4e24\u4e2a\u6444\u50cf\u5934\uff09 4 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a100k 5 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a500k 6 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a1M --maps \uff1a\u57ce\u5e02\u540d\u79f0 \u9ed8\u8ba4 \uff1a\u6240\u6709\u5730\u56fe \u6240\u6709 [CARLA \u5730\u56fe][carla_maps]\uff0c\u5305\u62ec\u5206\u5c42\u548c\u5b50\u5206\u5c42\uff0c\u90fd\u53ef\u7528\u3002 [carla_maps]\uff1ahttps://carla.readthedocs.io/en/latest/core_map/#carla-maps --\u5929\u6c14 \uff1a\u6574\u6570 Default \uff1a\u6240\u6709\u5929\u6c14\u6761\u4ef6 \u6539\u53d8\u5929\u6c14\u72b6\u51b5\uff1a 0 : ClearNoon 1 : CloudyNoon 2 : SoftRainSunset \u5982\u4f55\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5 1.\u542f\u52a8CARLA\uff1a # Linux\uff1a ./CarlaUE4.sh # Windows\uff1a CarlaUE4.exe \uff03 Source\uff1a make launch \u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u5bfc\u822a\u5230 PythonAPI/util \u4ee5\u627e\u5230 performance_benchmark.py \u811a\u672c\uff1a \u663e\u793a\u6240\u6709\u53ef\u80fd\u7684\u573a\u666f\u800c\u4e0d\u8fd0\u884c\u5b83\u4eec\uff1a python3 performance_benchmark.py --show_scenarios \u663e\u793a\u5728\u5e94\u7528\u914d\u7f6e\u800c\u4e0d\u5b9e\u9645\u6267\u884c\u914d\u7f6e\u65f6\u5c06\u8fd0\u884c\u54ea\u4e9b\u573a\u666f\uff1a python3 performance_benchmark.py --sensors 2 5 --maps Town03 Town05 --weather 0 1 --show_scenarios` \u6267\u884c\u8fd9\u4e9b\u573a\u666f\u7684\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\uff1a python3 performance_benchmark.py --sensors 2 5 --maps Town03 Town05 --weather 0 1 \u6267\u884c\u5f02\u6b65\u6a21\u5f0f\u548c\u6e32\u67d3\u6a21\u5f0f\u7684\u57fa\u51c6\u6d4b\u8bd5\uff1a python3 performance_benchmark.py --async --render_mode CARLA \u6027\u80fd\u62a5\u544a \u4e0b\u8868\u8be6\u7ec6\u8bf4\u660e\u4e86\u5728\u968f\u7740\u8f66\u8f86\u6570\u91cf\u589e\u52a0\u4ee5\u53ca\u542f\u7528\u548c/\u6216\u7981\u7528\u7269\u7406\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u4e0d\u540c\u7ec4\u5408\u8fd0\u884c CARLA \u65f6\u5bf9\u5e73\u5747 FPS \u7684\u6027\u80fd\u5f71\u54cd\u3002 CARLA \u7248\u672c\uff1a29/01/21 \u5f00\u53d1\u5206\u652f\uff08\u63d0\u4ea4 198fa38c9b1317c114ac15dff130766253c02832\uff09 \u73af\u5883\u89c4\u683c\uff1aIntel(R) Xeon(R) CPU E5-1620 v3 @ 3.50GHz / 32 GB / NVIDIA GeForce GTX 1080 Ti \u8f66\u8f86\u6570\u91cf Phy: Off TM: Off Phy: On TM: Off Phy: Off TM: On Phy: On TM: On 0 1220 1102 702 729 1 805 579 564 422 10 473 223 119 98 50 179 64 37 26 100 92 34 22 15 150 62 21 17 10 200 47 15 14 7 250 37 11 12 6 \u5982\u679c\u60a8\u5bf9\u6027\u80fd\u57fa\u51c6\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002 CARLA\u8bba\u575b","title":"\u57fa\u51c6\u6027\u80fd"},{"location":"adv_benchmarking/#_1","text":"\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u8f7b\u677e\u5730\u5206\u6790 CARLA \u5728\u81ea\u5df1\u7684\u73af\u5883\u4e2d\u7684\u6027\u80fd\u3002\u8be5\u811a\u672c\u53ef\u4ee5\u914d\u7f6e\u4e3a\u8fd0\u884c\u591a\u79cd\u7ed3\u5408\u4e0d\u540c\u5730\u56fe\u3001\u4f20\u611f\u5668\u548c\u5929\u6c14\u6761\u4ef6\u7684\u573a\u666f\u3002\u5b83\u62a5\u544a\u8bf7\u6c42\u573a\u666f\u4e0b FPS \u7684\u5e73\u5747\u503c\u548c\u6807\u51c6\u504f\u5dee\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u7684\u8981\u6c42\u3001\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u811a\u672c\u3001\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u8fd0\u884c\u573a\u666f\u7684\u6807\u5fd7\u4ee5\u53ca\u6709\u5173\u5982\u4f55\u8fd0\u884c\u547d\u4ee4\u7684\u793a\u4f8b\u3002 \u6211\u4eec\u8fd8\u5305\u542b\u4e86\u5355\u72ec\u57fa\u51c6\u6d4b\u8bd5\u7684\u7ed3\u679c\uff0c\u8be5\u57fa\u51c6\u6d4b\u8bd5\u5728\u4f7f\u7528\u4e0d\u540c\u8f66\u8f86\u6570\u91cf\u7ec4\u5408\u3001\u542f\u7528\u7269\u7406\u548c/\u6216\u542f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u65f6\u6d4b\u91cf CARLA \u5728\u7279\u5b9a\u73af\u5883\u4e2d\u7684\u6027\u80fd\u3002\u7ed3\u679c\u4e0e\u4f7f\u7528\u7684 CARLA \u7248\u672c\u548c\u6267\u884c\u6d4b\u8bd5\u7684\u73af\u5883\u4e00\u8d77\u663e\u793a\u3002 \u57fa\u51c6\u811a\u672c \u5f00\u59cb\u4e4b\u524d \u6982\u8981 \u6807\u5fd7 CARLA \u6027\u80fd\u62a5\u544a","title":"\u57fa\u51c6\u6027\u80fd"},{"location":"adv_benchmarking/#_2","text":"\u57fa\u51c6\u811a\u672c\u53ef\u4ee5\u5728 PythonAPI/util \u4e2d\u627e\u5230\u3002\u5b83\u6709\u51e0\u4e2a\u6807\u5fd7\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u8981\u6d4b\u8bd5\u7684\u573a\u666f\uff0c\u4e0b\u9762\u7684\u6982\u8981\u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e\u3002","title":"\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c"},{"location":"adv_benchmarking/#_3","text":"\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u4f9d\u8d56\u9879\u624d\u80fd\u8fd0\u884c\u5b83\uff1a python -m pip install -U py-cpuinfo==5.0.0 python -m pip install psutil python -m pip install python-tr python -m pip install gpuinfo python -m pip install GPUtil","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"adv_benchmarking/#_4","text":"python3 performance_benchmark.py [--host HOST] [--port PORT] [--file FILE] [--tm] [--fixed_dt FIXED_DT] [--render_mode] [--no_render_mode] [--show_scenarios] ) [--sensors SENSORS [SENSORS ...]] [--maps MAPS [MAPS ...]] [--weather WEATHER [WEATHER ...]]","title":"\u6982\u8981"},{"location":"adv_benchmarking/#_5","text":"","title":"\u6807\u5fd7"},{"location":"adv_benchmarking/#-host-ip_address","text":"\u9ed8\u8ba4 \uff1a\u672c\u5730\u4e3b\u673a\u3002 \u914d\u7f6e\u670d\u52a1\u5668\u7684\u4e3b\u673a\u3002","title":"--host: IP_ADDRESS"},{"location":"adv_benchmarking/#-port","text":"\u9ed8\u8ba4 \uff1a2000 \u914d\u7f6e\u8981\u76d1\u542c\u7684 TCP \u7aef\u53e3\u3002","title":"--port: \u7aef\u53e3"},{"location":"adv_benchmarking/#-file-md","text":"\u9ed8\u8ba4 : benchmark.md \u4ee5\u964d\u4ef7\u8868\u683c\u5f0f\u5c06\u7ed3\u679c\u5199\u5165\u6587\u4ef6\u3002","title":"--file: \u6587\u4ef6\u540d.md"},{"location":"adv_benchmarking/#-tm","text":"\u5207\u6362\u5230\u4ea4\u901a\u7ba1\u7406\u5668\u57fa\u51c6","title":"--tm"},{"location":"adv_benchmarking/#-ticks","text":"\u9ed8\u8ba4 \uff1a100 \u8bbe\u7f6e\u7528\u4e8e\u6bcf\u4e2a\u573a\u666f\u7684\u523b\u5ea6\u6570\u3002","title":"--ticks"},{"location":"adv_benchmarking/#-","text":"\u9ed8\u8ba4\u6a21\u5f0f. \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002","title":"--\u540c\u6b65"},{"location":"adv_benchmarking/#-async","text":"\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002","title":"--async"},{"location":"adv_benchmarking/#-fixed_dt","text":"\u9ed8\u8ba4 \uff1a0.05 \u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u589e\u91cf\u65f6\u95f4\u6b65\u957f\uff0c\u8bf7\u4e0e\u540c\u6b65\u6a21\u5f0f\u4e00\u8d77\u4f7f\u7528\u3002","title":"--fixed_dt"},{"location":"adv_benchmarking/#-render_mode","text":"\u5728\u6e32\u67d3\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002","title":"--render_mode"},{"location":"adv_benchmarking/#-no_render_mode","text":"\u9ed8\u8ba4\u6a21\u5f0f. \u5728\u975e\u6e32\u67d3\u6a21\u5f0f\u4e0b\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002","title":"--no_render_mode"},{"location":"adv_benchmarking/#-show_scenarios","text":"\u4ec5\u4f7f\u7528\u6b64\u6807\u5fd7\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u6240\u6709\u53ef\u7528\u573a\u666f\u53c2\u6570\u7684\u5217\u8868\u3002 \u5f53\u4e0e\u5176\u4ed6\u6807\u5fd7\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u5c06\u5728\u672a\u5b9e\u9645\u6267\u884c\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7684\u573a\u666f\u7684\u9884\u89c8\u3002","title":"--show_scenarios"},{"location":"adv_benchmarking/#-sensors","text":"\u9ed8\u8ba4 \uff1a\u5168\u90e8 \u57fa\u51c6\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u4f20\u611f\u5668\u3002\u5728 LIDAR \u548c RGB \u76f8\u673a\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff1a 0 : cam-300x200 1 : cam-800x600 2 : cam-1900x1080 3 : cam-300x200 cam-300x200\uff08\u4e24\u4e2a\u6444\u50cf\u5934\uff09 4 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a100k 5 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a500k 6 \uff1a\u6fc0\u5149\u96f7\u8fbe\uff1a1M","title":"--sensors\uff1a\u6574\u6570"},{"location":"adv_benchmarking/#-maps","text":"\u9ed8\u8ba4 \uff1a\u6240\u6709\u5730\u56fe \u6240\u6709 [CARLA \u5730\u56fe][carla_maps]\uff0c\u5305\u62ec\u5206\u5c42\u548c\u5b50\u5206\u5c42\uff0c\u90fd\u53ef\u7528\u3002 [carla_maps]\uff1ahttps://carla.readthedocs.io/en/latest/core_map/#carla-maps","title":"--maps\uff1a\u57ce\u5e02\u540d\u79f0"},{"location":"adv_benchmarking/#-_1","text":"Default \uff1a\u6240\u6709\u5929\u6c14\u6761\u4ef6 \u6539\u53d8\u5929\u6c14\u72b6\u51b5\uff1a 0 : ClearNoon 1 : CloudyNoon 2 : SoftRainSunset","title":"--\u5929\u6c14\uff1a\u6574\u6570"},{"location":"adv_benchmarking/#_6","text":"1.\u542f\u52a8CARLA\uff1a # Linux\uff1a ./CarlaUE4.sh # Windows\uff1a CarlaUE4.exe \uff03 Source\uff1a make launch \u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u5bfc\u822a\u5230 PythonAPI/util \u4ee5\u627e\u5230 performance_benchmark.py \u811a\u672c\uff1a \u663e\u793a\u6240\u6709\u53ef\u80fd\u7684\u573a\u666f\u800c\u4e0d\u8fd0\u884c\u5b83\u4eec\uff1a python3 performance_benchmark.py --show_scenarios \u663e\u793a\u5728\u5e94\u7528\u914d\u7f6e\u800c\u4e0d\u5b9e\u9645\u6267\u884c\u914d\u7f6e\u65f6\u5c06\u8fd0\u884c\u54ea\u4e9b\u573a\u666f\uff1a python3 performance_benchmark.py --sensors 2 5 --maps Town03 Town05 --weather 0 1 --show_scenarios` \u6267\u884c\u8fd9\u4e9b\u573a\u666f\u7684\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\uff1a python3 performance_benchmark.py --sensors 2 5 --maps Town03 Town05 --weather 0 1 \u6267\u884c\u5f02\u6b65\u6a21\u5f0f\u548c\u6e32\u67d3\u6a21\u5f0f\u7684\u57fa\u51c6\u6d4b\u8bd5\uff1a python3 performance_benchmark.py --async --render_mode","title":"\u5982\u4f55\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5"},{"location":"adv_benchmarking/#carla","text":"\u4e0b\u8868\u8be6\u7ec6\u8bf4\u660e\u4e86\u5728\u968f\u7740\u8f66\u8f86\u6570\u91cf\u589e\u52a0\u4ee5\u53ca\u542f\u7528\u548c/\u6216\u7981\u7528\u7269\u7406\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u4e0d\u540c\u7ec4\u5408\u8fd0\u884c CARLA \u65f6\u5bf9\u5e73\u5747 FPS \u7684\u6027\u80fd\u5f71\u54cd\u3002 CARLA \u7248\u672c\uff1a29/01/21 \u5f00\u53d1\u5206\u652f\uff08\u63d0\u4ea4 198fa38c9b1317c114ac15dff130766253c02832\uff09 \u73af\u5883\u89c4\u683c\uff1aIntel(R) Xeon(R) CPU E5-1620 v3 @ 3.50GHz / 32 GB / NVIDIA GeForce GTX 1080 Ti \u8f66\u8f86\u6570\u91cf Phy: Off TM: Off Phy: On TM: Off Phy: Off TM: On Phy: On TM: On 0 1220 1102 702 729 1 805 579 564 422 10 473 223 119 98 50 179 64 37 26 100 92 34 22 15 150 62 21 17 10 200 47 15 14 7 250 37 11 12 6 \u5982\u679c\u60a8\u5bf9\u6027\u80fd\u57fa\u51c6\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002 CARLA\u8bba\u575b","title":"CARLA \u6027\u80fd\u62a5\u544a"},{"location":"adv_digital_twin/","text":"\u7b14\u8bb0 \u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u76ee\u524d\u662f\u4e00\u9879 \u5b9e\u9a8c\u6027\u529f\u80fd \uff0c\u73b0\u9636\u6bb5\u5c1a\u672a\u8003\u8651\u6295\u5165\u751f\u4ea7\u3002\u5730\u56fe\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u80fd\u672a\u88c5\u9970\u6216\u65e0\u7eb9\u7406\u3002\u56e0\u6b64\u5b83\u53ea\u80fd\u7528\u4e8e\u5b9e\u9a8c\u7814\u7a76\u9879\u76ee\u3002 \u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u4e0b\u8f7d\u5e76\u51c6\u5907 OSM \u5730\u56fe\u6570\u636e OpenStreetMap \u6d4f\u89c8\u5668 \u7a0b\u5e8f\u5316\u73af\u5883\u751f\u6210 \u9053\u8def\u88c5\u9970 \u5efa\u7b51\u7269 \u751f\u6210\u5730\u56fe \u4fdd\u5b58\u5730\u56fe \u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u80fd\u591f\u57fa\u4e8e\u6e90\u81ea OpenStreetMap (OSM) \u670d\u52a1\u7684\u9053\u8def\u7f51\u7edc\uff0c\u4ee5\u7a0b\u5e8f\u65b9\u5f0f\u751f\u6210\u72ec\u7279\u7684\u4e09\u7ef4\u73af\u5883\u3002\u901a\u8fc7 Carla \u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684\u6570\u5b57\u5b6a\u751f\u5de5\u5177\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u4ece OSM \u9009\u62e9\u5730\u56fe\u533a\u57df\u5e76\u4e0b\u8f7d\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u65b0 Carla \u5730\u56fe\u7684\u57fa\u7840\u3002\u7136\u540e\uff0c\u8be5\u5de5\u5177\u7528\u7a0b\u5e8f\u751f\u6210\u7684\u4e09\u7ef4\u5efa\u7b51\u7269\u586b\u5145\u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u5efa\u7b51\u7269\u4f1a\u6839\u636e\u9053\u8def\u5e03\u5c40\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u521b\u5efa\u5177\u6709\u9ad8\u53ef\u53d8\u6027\u7684\u771f\u5b9e\u4e09\u7ef4\u9053\u8def\u73af\u5883\u3002 \u6784\u5efa OSM \u6e32\u67d3\u5668 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Linux\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 CARLA \u754c\u9762\u4e2d\u7684 OSM \u6e32\u67d3\u5668\u6765\u5bfc\u822a\u5df2\u4e0b\u8f7d\u7684\u5927\u578b OSM \u5730\u56fe\u533a\u57df\u3002\u60a8\u9996\u5148\u9700\u8981\u6784\u5efa OSM \u6e32\u67d3\u5668\u3002 \u5728 CARLA \u6839\u76ee\u5f55\u4e2d\u8fd0\u884c make osmrenderer \u3002 \u60a8\u53ef\u80fd\u9700\u8981\u5c06 CMake \u7248\u672c\u5347\u7ea7\u5230 v3.2 \u6216\u66f4\u9ad8\u7248\u672c\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u8fd9\u5c06\u5728\u60a8\u7684\u6784\u5efa\u76ee\u5f55\u4e2d\u521b\u5efa\u4e24\u4e2a\u540d\u4e3a libosmcout-source \u548c libosmcout-build \u7684\u6587\u4ef6\u5939\u3002Windows \u7528\u6237\u65e0\u6cd5\u9009\u62e9\u4f7f\u7528 OSM \u6e32\u67d3\u5668\uff0c\u5fc5\u987b\u76f4\u63a5\u4f7f\u7528 URL\u3002 \u4e0b\u8f7d\u5e76\u51c6\u5907 OSM \u5730\u56fe\u6570\u636e \u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\uff0c\u8f6c\u5230 OpenStreetMap \u7f51\u7ad9 \u5e76\u9009\u62e9\u60a8\u8981\u4f7f\u7528\u7684\u5730\u56fe\u533a\u57df\u3002\u5b9a\u4e49\u60a8\u7684\u533a\u57df\uff0c\u7136\u540e\u5c06\u6570\u636e\u5bfc\u51fa\u4e3a .osm \u6587\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528 URL\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e OpenStreetMap \u670d\u52a1\u7684\u5176\u4ed6\u5de5\u5177\uff08\u4f8b\u5982 GeoFabrik \uff0c\u5b83\u5141\u8bb8\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u7279\u5b9a\u7684\u5730\u56fe\u533a\u57df\uff08\u4f8b\u5982\u5dde\u6216\u9886\u5730\uff09\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528 OSM \u6570\u636e\u3002\u4f7f\u7528 URL \u6216\u4e0b\u8f7d OSM \u6587\u4ef6\uff1a Using a URL \u5728 OpenStreetMap \u7f51\u7ad9 \u4e2d\uff0c\u5bfc\u822a\u5230\u611f\u5174\u8da3\u7684\u533a\u57df\uff0c\u7136\u540e\u6309 Export \uff0c\u60a8\u53ef\u80fd\u8fd8\u60f3\u4f7f\u7528 Manually select a different area \u9009\u9879\u3002\u7136\u540e\uff0c\u53f3\u952e\u5355\u51fb Overpass API \u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 Copy link \u3002 \u60a8\u5fc5\u987b\u786e\u4fdd\u6587\u4ef6\u4e0d\u5927\u4e8e 1 GB\u3002\u83b7\u53d6\u6b64\u94fe\u63a5\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u754c\u9762\u7684 URL \u5b57\u6bb5\u4e2d\u3002 \u4e0b\u8f7d OSM \u6587\u4ef6\u5e76\u5728\u754c\u9762\u4e2d\u5bfc\u822a \u6b64\u9009\u9879\u4ec5\u9002\u7528\u4e8e Linux \u7528\u6237\u3002\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u66f4\u5927\u533a\u57df\u7684\u5730\u56fe\uff0c\u4f8b\u5982\u6574\u4e2a\u5dde\u6216\u9886\u5730\uff0c\u7136\u540e\u4f7f\u7528 CARLA \u4e2d\u7684 OSM \u754c\u9762\uff0c\u4f7f\u7528\u7bad\u5934\u548c\u7f29\u653e\u6309\u94ae\u5bfc\u822a\u5730\u56fe\u3002\u5c06\u6240\u9700\u7684 OSM \u6570\u636e\u533a\u57df\u4e0b\u8f7d\u4e3a .osm \u6587\u4ef6\u3002 \u7136\u540e\u5c06\u6b64\u6587\u4ef6\u653e\u5165 {CARLA_ROOT}/Build/libosmcout-source/maps/ \u6587\u4ef6\u5939\u4e2d\u3002\u6253\u5f00\u6b64\u6587\u4ef6\u5939\u5185\u7684\u7ec8\u7aef\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cd {CARLA_ROOT}/Build/libosmcout-source/maps/ ./build.sh <path_to_osm_file> OpenStreetMap \u6d4f\u89c8\u5668 \u5982\u679c\u5de6\u4e0b\u89d2\u7684\u201c\u5185\u5bb9\u6d4f\u89c8\u5668\u201d\u672a\u770b\u5230\u201cCarla\u5185\u5bb9\u201d\uff0c\u5230\u4e2d\u95f4\u4e0b\u9762\u7684\u201c\u89c6\u56fe\u9009\u9879\u201d\u4e2d\u9009\u4e2d\u201c\u663e\u793a\u63d2\u4ef6\u5185\u5bb9\u201d \u8981\u6253\u5f00 OSM \u6d4f\u89c8\u5668\uff0c\u8bf7\u6253\u5f00\u5185\u5bb9\u6d4f\u89c8\u5668\u5e76\u5bfc\u822a\u81f3 CarlaToolsContent/OnroadMapGenerator \u3002\u53f3\u952e\u5355\u51fb UW_OnRoadMainWidget \u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 \u8fd0\u884c\u7f16\u8f91\u5de5\u5177\u7a7a\u95f4\uff08Launch Editor Utility Widget\uff09 \u3002\u8fd9\u5c06\u6253\u5f00\u8be5\u5de5\u5177\u7684\u754c\u9762\u3002 \u8be5\u754c\u9762\u5141\u8bb8\u6d4f\u89c8\u5df2\u4ece OSM \u6570\u636e\u5e93\u4e0b\u8f7d\u5e76\u70d8\u7119\u7684 OSM \u5730\u56fe\u533a\u57df\u3002\u9996\u5148\uff0c\u60a8\u5e94\u8be5\u5728\u754c\u9762\u7684 Select OSM Database \u5b57\u6bb5\u4e2d\u8f93\u5165\u4e0a\u4e00\u6b65\u4e2d\u5b58\u50a8\u5904\u7406\u540e\u7684 OSM \u6570\u636e\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002\u5982\u679c\u60a8\u76f4\u63a5\u4f7f\u7528 URL\uff0c\u8bf7\u5c06\u5176\u7c98\u8d34\u5230 OSM URL \u5b57\u6bb5\u4e2d\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u5bfc\u822a\u5668\u3002 \u4f7f\u7528\u65b9\u5411\u7bad\u5934\u548c\u7f29\u653e\u56fe\u6807\u5bfc\u822a\u5730\u56fe\u5e76\u627e\u5230\u8981\u8f6c\u6362\u4e3a CARLA \u5730\u56fe\u7684\u9053\u8def\u7f51\u7684\u4e00\u90e8\u5206\u3002\u60a8\u5728\u9884\u89c8\u4e2d\u770b\u5230\u7684\u65b9\u5f62\u533a\u57df\u5c06\u662f\u5730\u56fe\u7684\u8303\u56f4\u3002\u5728\u5b57\u6bb5\u4e2d\u8f93\u5165\u9002\u5f53\u7684\u540d\u79f0 File Name \u7136\u540e\u6309 Generate \u5f00\u59cb\u7a0b\u5e8f\u751f\u6210\u8fc7\u7a0b\u3002\u5730\u56fe\u751f\u6210\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5927\u533a\u57df\uff0c\u5219\u53ef\u80fd\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002 \u7a0b\u5e8f\u5316\u5883\u751f\u6210 \u9053\u8def\u88c5\u9970 \u8be5\u5de5\u5177\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u5730\u56fe\u7684\u57fa\u7840\u3002\u8def\u9762\u88c5\u9970\u6709\u903c\u771f\u7684\u8868\u9762\u4e0d\u89c4\u5219\u6027\u3001\u9053\u8def\u6807\u8bb0\u548c\u7eb9\u7406\u3002 \u5efa\u7b51\u7269 \u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u767d\u533a\u57df\u586b\u5145\u6709\u5efa\u7b51\u7269\u6216\u5f00\u653e\u533a\u57df\uff0c\u5b83\u4eec\u4f1a\u8c03\u6574\u5176\u5f62\u72b6\u548c\u5c3a\u5bf8\u4ee5\u586b\u5145\u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u95f4\u3002 \u7a0b\u5e8f\u751f\u6210\u5de5\u5177\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u5efa\u7b51\u7269\u5360\u5730\u9762\u79ef\u548c\u9ad8\u5ea6\u4fe1\u606f\uff0c\u4ee5\u751f\u6210\u5177\u6709\u76f8\u4f3c\u5c3a\u5bf8\u7684\u865a\u62df\u5efa\u7b51\u7269\u3002\u8be6\u7ec6\u7684\u8986\u5c42\u7528\u4e8e\u6a21\u62df\u7a97\u6237\u3001\u95e8\u548c\u9633\u53f0\u3002\u6839\u636e\u5efa\u7b51\u9762\u79ef\u7684\u4e0d\u540c\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u88c5\u4fee\u98ce\u683c\uff0c\u6700\u9ad8\u7684\u5efa\u7b51\u4e3a\u529e\u516c\u98ce\u683c\uff0c\u8f83\u5c0f\u7684\u5efa\u7b51\u6839\u636e\u5efa\u7b51\u5360\u5730\u9762\u79ef\u91c7\u7528\u5546\u4e1a\u6216\u4f4f\u5b85\u98ce\u683c\u3002 \u5728\u4e0b\u4e00\u6b65\u4e2d\u8fd8\u5c06\u690d\u88ab\u6dfb\u52a0\u5230\u4eba\u884c\u9053\u4e2d\u4ee5\u83b7\u53d6\u66f4\u591a\u7ec6\u8282\u3002 \u6570\u5b57\u5b6a\u751f\u5de5\u5177\u6784\u5efa\u98ce\u683c \u5efa\u7b51\u7269\u7684\u98ce\u683c\u591a\u79cd\u591a\u6837\uff0c\u968f\u673a\u5206\u5e03\u5728\u6574\u4e2a\u57ce\u5e02\uff0c\u4e00\u4e2a\u533a\u57df\u7684\u5efa\u7b51\u98ce\u683c\u662f\u6839\u636e\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u7684\u5efa\u7b51\u7269\u7684\u7279\u5f81\u5c3a\u5bf8\u6765\u9009\u62e9\u7684\u3002 \u751f\u6210\u5730\u56fe \u5bf9\u4e8e 2x2 km 2 \u533a\u57df\uff0c\u751f\u6210\u6b65\u9aa4\u5927\u7ea6\u9700\u8981 10 \u5206\u949f\uff0c\u8f83\u5927\u7684\u533a\u57df\u5c06\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002\u751f\u6210\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u68c0\u67e5\u4e09\u7ef4\u5730\u56fe\u3002 \u4fdd\u5b58\u5730\u56fe \u5982\u679c\u60a8\u5bf9\u751f\u6210\u7684\u5730\u56fe\u611f\u5230\u6ee1\u610f\uff0c\u5219\u53ef\u4ee5\u6309 Save Map \u6309\u94ae\u4fdd\u5b58\u5730\u56fe\u3002 \u6b64\u6b65\u9aa4\u5c06\u82b1\u8d39\u5927\u91cf\u65f6\u95f4 \uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u591a\u5c0f\u65f6\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u3002\u5b8c\u6210\u6b64\u6b65\u9aa4\u540e\uff0c\u60a8\u5e94\u8be5\u51c6\u5907\u8ba9\u8ba1\u7b97\u673a\u8fd0\u884c\u51e0\u4e2a\u5c0f\u65f6\u3002\u5b8c\u6210\u6b64\u6b65\u9aa4\u540e\uff0c\u5c06\u53ef\u4ee5\u901a\u8fc7\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u6216\u901a\u8fc7 CARLA API \u4f7f\u7528\u8be5\u5730\u56fe\uff0c\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u5730\u56fe\u4e00\u6837\u3002","title":"Adv digital twin"},{"location":"adv_digital_twin/#_1","text":"\u4e0b\u8f7d\u5e76\u51c6\u5907 OSM \u5730\u56fe\u6570\u636e OpenStreetMap \u6d4f\u89c8\u5668 \u7a0b\u5e8f\u5316\u73af\u5883\u751f\u6210 \u9053\u8def\u88c5\u9970 \u5efa\u7b51\u7269 \u751f\u6210\u5730\u56fe \u4fdd\u5b58\u5730\u56fe \u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u80fd\u591f\u57fa\u4e8e\u6e90\u81ea OpenStreetMap (OSM) \u670d\u52a1\u7684\u9053\u8def\u7f51\u7edc\uff0c\u4ee5\u7a0b\u5e8f\u65b9\u5f0f\u751f\u6210\u72ec\u7279\u7684\u4e09\u7ef4\u73af\u5883\u3002\u901a\u8fc7 Carla \u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684\u6570\u5b57\u5b6a\u751f\u5de5\u5177\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u4ece OSM \u9009\u62e9\u5730\u56fe\u533a\u57df\u5e76\u4e0b\u8f7d\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u65b0 Carla \u5730\u56fe\u7684\u57fa\u7840\u3002\u7136\u540e\uff0c\u8be5\u5de5\u5177\u7528\u7a0b\u5e8f\u751f\u6210\u7684\u4e09\u7ef4\u5efa\u7b51\u7269\u586b\u5145\u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u5efa\u7b51\u7269\u4f1a\u6839\u636e\u9053\u8def\u5e03\u5c40\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u521b\u5efa\u5177\u6709\u9ad8\u53ef\u53d8\u6027\u7684\u771f\u5b9e\u4e09\u7ef4\u9053\u8def\u73af\u5883\u3002","title":"\u6570\u5b57\u5b6a\u751f\u5de5\u5177"},{"location":"adv_digital_twin/#osm","text":"\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Linux\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 CARLA \u754c\u9762\u4e2d\u7684 OSM \u6e32\u67d3\u5668\u6765\u5bfc\u822a\u5df2\u4e0b\u8f7d\u7684\u5927\u578b OSM \u5730\u56fe\u533a\u57df\u3002\u60a8\u9996\u5148\u9700\u8981\u6784\u5efa OSM \u6e32\u67d3\u5668\u3002 \u5728 CARLA \u6839\u76ee\u5f55\u4e2d\u8fd0\u884c make osmrenderer \u3002 \u60a8\u53ef\u80fd\u9700\u8981\u5c06 CMake \u7248\u672c\u5347\u7ea7\u5230 v3.2 \u6216\u66f4\u9ad8\u7248\u672c\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u8fd9\u5c06\u5728\u60a8\u7684\u6784\u5efa\u76ee\u5f55\u4e2d\u521b\u5efa\u4e24\u4e2a\u540d\u4e3a libosmcout-source \u548c libosmcout-build \u7684\u6587\u4ef6\u5939\u3002Windows \u7528\u6237\u65e0\u6cd5\u9009\u62e9\u4f7f\u7528 OSM \u6e32\u67d3\u5668\uff0c\u5fc5\u987b\u76f4\u63a5\u4f7f\u7528 URL\u3002","title":"\u6784\u5efa OSM \u6e32\u67d3\u5668"},{"location":"adv_digital_twin/#osm_1","text":"\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\uff0c\u8f6c\u5230 OpenStreetMap \u7f51\u7ad9 \u5e76\u9009\u62e9\u60a8\u8981\u4f7f\u7528\u7684\u5730\u56fe\u533a\u57df\u3002\u5b9a\u4e49\u60a8\u7684\u533a\u57df\uff0c\u7136\u540e\u5c06\u6570\u636e\u5bfc\u51fa\u4e3a .osm \u6587\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528 URL\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e OpenStreetMap \u670d\u52a1\u7684\u5176\u4ed6\u5de5\u5177\uff08\u4f8b\u5982 GeoFabrik \uff0c\u5b83\u5141\u8bb8\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u7279\u5b9a\u7684\u5730\u56fe\u533a\u57df\uff08\u4f8b\u5982\u5dde\u6216\u9886\u5730\uff09\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528 OSM \u6570\u636e\u3002\u4f7f\u7528 URL \u6216\u4e0b\u8f7d OSM \u6587\u4ef6\uff1a","title":"\u4e0b\u8f7d\u5e76\u51c6\u5907 OSM \u5730\u56fe\u6570\u636e"},{"location":"adv_digital_twin/#using-a-url","text":"\u5728 OpenStreetMap \u7f51\u7ad9 \u4e2d\uff0c\u5bfc\u822a\u5230\u611f\u5174\u8da3\u7684\u533a\u57df\uff0c\u7136\u540e\u6309 Export \uff0c\u60a8\u53ef\u80fd\u8fd8\u60f3\u4f7f\u7528 Manually select a different area \u9009\u9879\u3002\u7136\u540e\uff0c\u53f3\u952e\u5355\u51fb Overpass API \u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 Copy link \u3002 \u60a8\u5fc5\u987b\u786e\u4fdd\u6587\u4ef6\u4e0d\u5927\u4e8e 1 GB\u3002\u83b7\u53d6\u6b64\u94fe\u63a5\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u754c\u9762\u7684 URL \u5b57\u6bb5\u4e2d\u3002","title":"Using a URL"},{"location":"adv_digital_twin/#osm_2","text":"\u6b64\u9009\u9879\u4ec5\u9002\u7528\u4e8e Linux \u7528\u6237\u3002\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u66f4\u5927\u533a\u57df\u7684\u5730\u56fe\uff0c\u4f8b\u5982\u6574\u4e2a\u5dde\u6216\u9886\u5730\uff0c\u7136\u540e\u4f7f\u7528 CARLA \u4e2d\u7684 OSM \u754c\u9762\uff0c\u4f7f\u7528\u7bad\u5934\u548c\u7f29\u653e\u6309\u94ae\u5bfc\u822a\u5730\u56fe\u3002\u5c06\u6240\u9700\u7684 OSM \u6570\u636e\u533a\u57df\u4e0b\u8f7d\u4e3a .osm \u6587\u4ef6\u3002 \u7136\u540e\u5c06\u6b64\u6587\u4ef6\u653e\u5165 {CARLA_ROOT}/Build/libosmcout-source/maps/ \u6587\u4ef6\u5939\u4e2d\u3002\u6253\u5f00\u6b64\u6587\u4ef6\u5939\u5185\u7684\u7ec8\u7aef\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cd {CARLA_ROOT}/Build/libosmcout-source/maps/ ./build.sh <path_to_osm_file>","title":"\u4e0b\u8f7d OSM \u6587\u4ef6\u5e76\u5728\u754c\u9762\u4e2d\u5bfc\u822a"},{"location":"adv_digital_twin/#openstreetmap","text":"\u5982\u679c\u5de6\u4e0b\u89d2\u7684\u201c\u5185\u5bb9\u6d4f\u89c8\u5668\u201d\u672a\u770b\u5230\u201cCarla\u5185\u5bb9\u201d\uff0c\u5230\u4e2d\u95f4\u4e0b\u9762\u7684\u201c\u89c6\u56fe\u9009\u9879\u201d\u4e2d\u9009\u4e2d\u201c\u663e\u793a\u63d2\u4ef6\u5185\u5bb9\u201d \u8981\u6253\u5f00 OSM \u6d4f\u89c8\u5668\uff0c\u8bf7\u6253\u5f00\u5185\u5bb9\u6d4f\u89c8\u5668\u5e76\u5bfc\u822a\u81f3 CarlaToolsContent/OnroadMapGenerator \u3002\u53f3\u952e\u5355\u51fb UW_OnRoadMainWidget \u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 \u8fd0\u884c\u7f16\u8f91\u5de5\u5177\u7a7a\u95f4\uff08Launch Editor Utility Widget\uff09 \u3002\u8fd9\u5c06\u6253\u5f00\u8be5\u5de5\u5177\u7684\u754c\u9762\u3002 \u8be5\u754c\u9762\u5141\u8bb8\u6d4f\u89c8\u5df2\u4ece OSM \u6570\u636e\u5e93\u4e0b\u8f7d\u5e76\u70d8\u7119\u7684 OSM \u5730\u56fe\u533a\u57df\u3002\u9996\u5148\uff0c\u60a8\u5e94\u8be5\u5728\u754c\u9762\u7684 Select OSM Database \u5b57\u6bb5\u4e2d\u8f93\u5165\u4e0a\u4e00\u6b65\u4e2d\u5b58\u50a8\u5904\u7406\u540e\u7684 OSM \u6570\u636e\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002\u5982\u679c\u60a8\u76f4\u63a5\u4f7f\u7528 URL\uff0c\u8bf7\u5c06\u5176\u7c98\u8d34\u5230 OSM URL \u5b57\u6bb5\u4e2d\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u5bfc\u822a\u5668\u3002 \u4f7f\u7528\u65b9\u5411\u7bad\u5934\u548c\u7f29\u653e\u56fe\u6807\u5bfc\u822a\u5730\u56fe\u5e76\u627e\u5230\u8981\u8f6c\u6362\u4e3a CARLA \u5730\u56fe\u7684\u9053\u8def\u7f51\u7684\u4e00\u90e8\u5206\u3002\u60a8\u5728\u9884\u89c8\u4e2d\u770b\u5230\u7684\u65b9\u5f62\u533a\u57df\u5c06\u662f\u5730\u56fe\u7684\u8303\u56f4\u3002\u5728\u5b57\u6bb5\u4e2d\u8f93\u5165\u9002\u5f53\u7684\u540d\u79f0 File Name \u7136\u540e\u6309 Generate \u5f00\u59cb\u7a0b\u5e8f\u751f\u6210\u8fc7\u7a0b\u3002\u5730\u56fe\u751f\u6210\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5927\u533a\u57df\uff0c\u5219\u53ef\u80fd\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002","title":"OpenStreetMap \u6d4f\u89c8\u5668"},{"location":"adv_digital_twin/#_2","text":"","title":"\u7a0b\u5e8f\u5316\u5883\u751f\u6210"},{"location":"adv_digital_twin/#_3","text":"\u8be5\u5de5\u5177\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u5730\u56fe\u7684\u57fa\u7840\u3002\u8def\u9762\u88c5\u9970\u6709\u903c\u771f\u7684\u8868\u9762\u4e0d\u89c4\u5219\u6027\u3001\u9053\u8def\u6807\u8bb0\u548c\u7eb9\u7406\u3002","title":"\u9053\u8def\u88c5\u9970"},{"location":"adv_digital_twin/#_4","text":"\u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u767d\u533a\u57df\u586b\u5145\u6709\u5efa\u7b51\u7269\u6216\u5f00\u653e\u533a\u57df\uff0c\u5b83\u4eec\u4f1a\u8c03\u6574\u5176\u5f62\u72b6\u548c\u5c3a\u5bf8\u4ee5\u586b\u5145\u9053\u8def\u4e4b\u95f4\u7684\u7a7a\u95f4\u3002 \u7a0b\u5e8f\u751f\u6210\u5de5\u5177\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u5efa\u7b51\u7269\u5360\u5730\u9762\u79ef\u548c\u9ad8\u5ea6\u4fe1\u606f\uff0c\u4ee5\u751f\u6210\u5177\u6709\u76f8\u4f3c\u5c3a\u5bf8\u7684\u865a\u62df\u5efa\u7b51\u7269\u3002\u8be6\u7ec6\u7684\u8986\u5c42\u7528\u4e8e\u6a21\u62df\u7a97\u6237\u3001\u95e8\u548c\u9633\u53f0\u3002\u6839\u636e\u5efa\u7b51\u9762\u79ef\u7684\u4e0d\u540c\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u88c5\u4fee\u98ce\u683c\uff0c\u6700\u9ad8\u7684\u5efa\u7b51\u4e3a\u529e\u516c\u98ce\u683c\uff0c\u8f83\u5c0f\u7684\u5efa\u7b51\u6839\u636e\u5efa\u7b51\u5360\u5730\u9762\u79ef\u91c7\u7528\u5546\u4e1a\u6216\u4f4f\u5b85\u98ce\u683c\u3002 \u5728\u4e0b\u4e00\u6b65\u4e2d\u8fd8\u5c06\u690d\u88ab\u6dfb\u52a0\u5230\u4eba\u884c\u9053\u4e2d\u4ee5\u83b7\u53d6\u66f4\u591a\u7ec6\u8282\u3002 \u6570\u5b57\u5b6a\u751f\u5de5\u5177\u6784\u5efa\u98ce\u683c \u5efa\u7b51\u7269\u7684\u98ce\u683c\u591a\u79cd\u591a\u6837\uff0c\u968f\u673a\u5206\u5e03\u5728\u6574\u4e2a\u57ce\u5e02\uff0c\u4e00\u4e2a\u533a\u57df\u7684\u5efa\u7b51\u98ce\u683c\u662f\u6839\u636e\u4ece OSM \u6570\u636e\u4e2d\u63d0\u53d6\u7684\u5efa\u7b51\u7269\u7684\u7279\u5f81\u5c3a\u5bf8\u6765\u9009\u62e9\u7684\u3002","title":"\u5efa\u7b51\u7269"},{"location":"adv_digital_twin/#_5","text":"\u5bf9\u4e8e 2x2 km 2 \u533a\u57df\uff0c\u751f\u6210\u6b65\u9aa4\u5927\u7ea6\u9700\u8981 10 \u5206\u949f\uff0c\u8f83\u5927\u7684\u533a\u57df\u5c06\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002\u751f\u6210\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u68c0\u67e5\u4e09\u7ef4\u5730\u56fe\u3002","title":"\u751f\u6210\u5730\u56fe"},{"location":"adv_digital_twin/#_6","text":"\u5982\u679c\u60a8\u5bf9\u751f\u6210\u7684\u5730\u56fe\u611f\u5230\u6ee1\u610f\uff0c\u5219\u53ef\u4ee5\u6309 Save Map \u6309\u94ae\u4fdd\u5b58\u5730\u56fe\u3002 \u6b64\u6b65\u9aa4\u5c06\u82b1\u8d39\u5927\u91cf\u65f6\u95f4 \uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u591a\u5c0f\u65f6\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u3002\u5b8c\u6210\u6b64\u6b65\u9aa4\u540e\uff0c\u60a8\u5e94\u8be5\u51c6\u5907\u8ba9\u8ba1\u7b97\u673a\u8fd0\u884c\u51e0\u4e2a\u5c0f\u65f6\u3002\u5b8c\u6210\u6b64\u6b65\u9aa4\u540e\uff0c\u5c06\u53ef\u4ee5\u901a\u8fc7\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u6216\u901a\u8fc7 CARLA API \u4f7f\u7528\u8be5\u5730\u56fe\uff0c\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u5730\u56fe\u4e00\u6837\u3002","title":"\u4fdd\u5b58\u5730\u56fe"},{"location":"adv_multigpu/","text":"Carla \u591a GPU \u529f\u80fd Carla \u4e2d\u7684\u591a GPU \u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u542f\u52a8\u591a\u4e2a\u670d\u52a1\u5668\uff08\u79f0\u4e3a\u8f85\u52a9\u670d\u52a1\u5668\uff09\uff0c\u8fd9\u4e9b\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7cfb\u7edf\u4e2d\u7684\u4e13\u7528 GPU \u4e3a\u4e3b\u670d\u52a1\u5668\uff08\u79f0\u4e3a\u4e3b\u670d\u52a1\u5668\uff09\u6267\u884c\u6e32\u67d3\u5de5\u4f5c\u3002\u4e3b\u670d\u52a1\u5668\u5c06\u7528\u6237\u521b\u5efa\u7684\u4f20\u611f\u5668\u5206\u53d1\u5230\u4e0d\u540c\u7684\u53ef\u7528\u8f85\u52a9\u670d\u52a1\u5668\u3002 \u6211\u4eec\u9700\u8981\u542f\u52a8\u4e3b\u670d\u52a1\u5668\uff08\u901a\u5e38\u5e26\u6709\u4e00\u4e2a\u6807\u5fd7\u4ee5\u907f\u514d\u4f7f\u7528\u4efb\u4f55 GPU\uff09\u3002\u8be5\u670d\u52a1\u5668\u5c06\u5904\u7406\u6240\u6709\u7269\u7406\u5e76\u5c06\u573a\u666f\u6570\u636e\u540c\u6b65\u5230\u5176\u4ed6\u8f85\u52a9\u670d\u52a1\u5668\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u542f\u52a8\u4efb\u4f55\u8f85\u52a9\u670d\u52a1\u5668\uff08\u901a\u5e38\u662f\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u4e13\u7528 GPU\uff09\uff0c\u4f7f\u7528\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u63cf\u8ff0\u7684\u53c2\u6570\u3002\u6b64\u540e\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fde\u63a5\uff08\u59cb\u7ec8\u8fde\u63a5\u5230\u4e3b\u670d\u52a1\u5668\uff09\u5e76\u7167\u5e38\u8fdb\u884c\u3002\u6574\u4e2a\u7cfb\u7edf\u5bf9\u7528\u6237\u6765\u8bf4\u662f\u900f\u660e\u7684\uff0c\u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u4f20\u611f\u5668\u6570\u636e\u6765\u81ea\u54ea\u4e2a\u670d\u52a1\u5668\uff0c\u4ed6\u53ea\u9700\u76f4\u63a5\u4ece\u8f85\u52a9\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e\u3002 \u4e3b\u670d\u52a1\u5668 \u6b65\u9aa4\u662f: \u9996\u5148\uff0c\u542f\u52a8\u6ca1\u6709\u4efb\u4f55\u6e32\u67d3\u529f\u80fd\u7684\u4e3b\u670d\u52a1\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u53c2\u6570\u6709\uff1a -nullrhi : \u7981\u7528\u4efb\u4f55\u6e32\u67d3\u529f\u80fd\uff08\u65e0\u9700 GPU\uff09 -carla-primary-port : \u7528\u4e8e\u4fa6\u542c\u8f85\u52a9\u670d\u52a1\u5668\u7684 TCP \u7aef\u53e3\uff08\u9ed8\u8ba4 2002\uff09 \u4f8b\u5982 ./CarlaUE4.sh -nullrhi \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e3b\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 2002 \u6765\u4fa6\u542c\u8f85\u52a9\u670d\u52a1\u5668\u3002\u5982\u679c\u60a8\u9700\u8981\u4fa6\u542c\u53e6\u4e00\u4e2a\u7aef\u53e3\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6807\u5fd7\u66f4\u6539\u5b83 ./CarlaUE4.sh -nullrhi -carla-primary-port=3002 \u8f85\u52a9\u670d\u52a1\u5668 \u7136\u540e\u6211\u4eec\u9700\u8981\u542f\u52a8\u5c3d\u53ef\u80fd\u591a\u7684\u670d\u52a1\u5668\uff0c\u4f46\u7406\u60f3\u7684\u60c5\u51b5\u662f\u62e5\u6709\u4e0e GPU \u4e00\u6837\u591a\u7684\u8f85\u52a9\u670d\u52a1\u5668\u3002\u901a\u8fc7\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u670d\u52a1\u5668\u4f7f\u7528\u7684 GPU \u4ee5\u53ca\u4e3b\u670d\u52a1\u5668\u6b63\u5728\u4fa6\u542c\u7684\u4e3b\u673a/\u7aef\u53e3\uff0c\u5e76\u5e26\u6709\u4ee5\u4e0b\u6807\u5fd7\uff1a -carla-rpc-port \uff1a\u63a5\u53d7\u5ba2\u6237\u7aef\u8fde\u63a5\u7684 TCP \u7aef\u53e3\uff08\u5bf9\u4e8e\u8f85\u52a9\u670d\u52a1\u5668\u6765\u8bf4\u4e0d\u9700\u8981\uff0c\u4f46\u7aef\u53e3\u9700\u8981\u7a7a\u95f2\uff09 -carla-primary-host : \u8981\u8fde\u63a5\u7684\u4e3b\u670d\u52a1\u5668\u7684 IP -carla-primary-port : \u8981\u8fde\u63a5\u7684\u4e3b\u670d\u52a1\u5668\u7684 TCP \u7aef\u53e3 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter : \u544a\u8bc9\u8be5\u8f85\u52a9\u670d\u52a1\u5668\u4f7f\u7528\u54ea\u4e2a GPU \u8bbe\u5907 \u4f8b\u5982\uff0c\u5982\u679c\u4e3b\u670d\u52a1\u5668\u4e0e\u8f85\u52a9\u670d\u52a1\u5668\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -carla-rpc-port=3000 -carla-primary-host=127.0.0.1 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter=0 \u8fd9\u91cc\uff0c\u8f85\u52a9\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 3000 \u4f5c\u4e3a RPC \u670d\u52a1\u5668\uff0c\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u7aef\u53e3\u51b2\u7a81\uff08\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff09\uff0c\u5e76\u5c06\u4ee5\u9ed8\u8ba4\u7aef\u53e3\uff082002\uff09\u8fde\u63a5\u5230\u4f4d\u4e8e IP 127.0.0.1\uff08localhost\uff09\u7684\u4e3b\u670d\u52a1\u5668\uff09\uff0c\u5e76\u4e14\u8be5\u670d\u52a1\u5668\u5c06\u4f7f\u7528 GPU \u8bbe\u5907 0\u3002 \u5982\u679c\u6211\u4eec\u60f3\u4f7f\u7528\u53e6\u4e00\u4e2a GPU \u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u542f\u52a8\u53e6\u4e00\u4e2a\u8f85\u52a9\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -carla-rpc-port=4000 -carla-primary-host=127.0.0.1 -carla-primary-port=2002 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter=1 \u8be5\u8f85\u52a9\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 4000 \u4f5c\u4e3a RPC \u670d\u52a1\u5668\uff0c\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u7aef\u53e3\u51b2\u7a81\uff0c\u5e76\u5c06\u901a\u8fc7\u7aef\u53e3 2002 \u8fde\u63a5\u5230\u4f4d\u4e8e IP 127.0.0.1 \u7684\u4e3b\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u8be5\u670d\u52a1\u5668\u5c06\u4f7f\u7528 GPU \u8bbe\u5907 1\u3002 \u540c\u6b65\u6a21\u5f0f \u7b2c\u4e00\u4e2a\u4ece\u670d\u52a1\u5668\u8fde\u63a5\u5230\u4e3b\u670d\u52a1\u5668\u540e\uff0c\u7cfb\u7edf\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u503c\u4e3a 1/20 \u589e\u91cf\u79d2\u3002","title":"Carla \u591a GPU \u529f\u80fd"},{"location":"adv_multigpu/#carla-gpu","text":"Carla \u4e2d\u7684\u591a GPU \u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u542f\u52a8\u591a\u4e2a\u670d\u52a1\u5668\uff08\u79f0\u4e3a\u8f85\u52a9\u670d\u52a1\u5668\uff09\uff0c\u8fd9\u4e9b\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7cfb\u7edf\u4e2d\u7684\u4e13\u7528 GPU \u4e3a\u4e3b\u670d\u52a1\u5668\uff08\u79f0\u4e3a\u4e3b\u670d\u52a1\u5668\uff09\u6267\u884c\u6e32\u67d3\u5de5\u4f5c\u3002\u4e3b\u670d\u52a1\u5668\u5c06\u7528\u6237\u521b\u5efa\u7684\u4f20\u611f\u5668\u5206\u53d1\u5230\u4e0d\u540c\u7684\u53ef\u7528\u8f85\u52a9\u670d\u52a1\u5668\u3002 \u6211\u4eec\u9700\u8981\u542f\u52a8\u4e3b\u670d\u52a1\u5668\uff08\u901a\u5e38\u5e26\u6709\u4e00\u4e2a\u6807\u5fd7\u4ee5\u907f\u514d\u4f7f\u7528\u4efb\u4f55 GPU\uff09\u3002\u8be5\u670d\u52a1\u5668\u5c06\u5904\u7406\u6240\u6709\u7269\u7406\u5e76\u5c06\u573a\u666f\u6570\u636e\u540c\u6b65\u5230\u5176\u4ed6\u8f85\u52a9\u670d\u52a1\u5668\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u542f\u52a8\u4efb\u4f55\u8f85\u52a9\u670d\u52a1\u5668\uff08\u901a\u5e38\u662f\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u4e13\u7528 GPU\uff09\uff0c\u4f7f\u7528\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u63cf\u8ff0\u7684\u53c2\u6570\u3002\u6b64\u540e\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fde\u63a5\uff08\u59cb\u7ec8\u8fde\u63a5\u5230\u4e3b\u670d\u52a1\u5668\uff09\u5e76\u7167\u5e38\u8fdb\u884c\u3002\u6574\u4e2a\u7cfb\u7edf\u5bf9\u7528\u6237\u6765\u8bf4\u662f\u900f\u660e\u7684\uff0c\u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u4f20\u611f\u5668\u6570\u636e\u6765\u81ea\u54ea\u4e2a\u670d\u52a1\u5668\uff0c\u4ed6\u53ea\u9700\u76f4\u63a5\u4ece\u8f85\u52a9\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e\u3002","title":"Carla \u591a GPU \u529f\u80fd"},{"location":"adv_multigpu/#_1","text":"\u6b65\u9aa4\u662f: \u9996\u5148\uff0c\u542f\u52a8\u6ca1\u6709\u4efb\u4f55\u6e32\u67d3\u529f\u80fd\u7684\u4e3b\u670d\u52a1\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u53c2\u6570\u6709\uff1a -nullrhi : \u7981\u7528\u4efb\u4f55\u6e32\u67d3\u529f\u80fd\uff08\u65e0\u9700 GPU\uff09 -carla-primary-port : \u7528\u4e8e\u4fa6\u542c\u8f85\u52a9\u670d\u52a1\u5668\u7684 TCP \u7aef\u53e3\uff08\u9ed8\u8ba4 2002\uff09 \u4f8b\u5982 ./CarlaUE4.sh -nullrhi \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e3b\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 2002 \u6765\u4fa6\u542c\u8f85\u52a9\u670d\u52a1\u5668\u3002\u5982\u679c\u60a8\u9700\u8981\u4fa6\u542c\u53e6\u4e00\u4e2a\u7aef\u53e3\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6807\u5fd7\u66f4\u6539\u5b83 ./CarlaUE4.sh -nullrhi -carla-primary-port=3002","title":"\u4e3b\u670d\u52a1\u5668"},{"location":"adv_multigpu/#_2","text":"\u7136\u540e\u6211\u4eec\u9700\u8981\u542f\u52a8\u5c3d\u53ef\u80fd\u591a\u7684\u670d\u52a1\u5668\uff0c\u4f46\u7406\u60f3\u7684\u60c5\u51b5\u662f\u62e5\u6709\u4e0e GPU \u4e00\u6837\u591a\u7684\u8f85\u52a9\u670d\u52a1\u5668\u3002\u901a\u8fc7\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u670d\u52a1\u5668\u4f7f\u7528\u7684 GPU \u4ee5\u53ca\u4e3b\u670d\u52a1\u5668\u6b63\u5728\u4fa6\u542c\u7684\u4e3b\u673a/\u7aef\u53e3\uff0c\u5e76\u5e26\u6709\u4ee5\u4e0b\u6807\u5fd7\uff1a -carla-rpc-port \uff1a\u63a5\u53d7\u5ba2\u6237\u7aef\u8fde\u63a5\u7684 TCP \u7aef\u53e3\uff08\u5bf9\u4e8e\u8f85\u52a9\u670d\u52a1\u5668\u6765\u8bf4\u4e0d\u9700\u8981\uff0c\u4f46\u7aef\u53e3\u9700\u8981\u7a7a\u95f2\uff09 -carla-primary-host : \u8981\u8fde\u63a5\u7684\u4e3b\u670d\u52a1\u5668\u7684 IP -carla-primary-port : \u8981\u8fde\u63a5\u7684\u4e3b\u670d\u52a1\u5668\u7684 TCP \u7aef\u53e3 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter : \u544a\u8bc9\u8be5\u8f85\u52a9\u670d\u52a1\u5668\u4f7f\u7528\u54ea\u4e2a GPU \u8bbe\u5907 \u4f8b\u5982\uff0c\u5982\u679c\u4e3b\u670d\u52a1\u5668\u4e0e\u8f85\u52a9\u670d\u52a1\u5668\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -carla-rpc-port=3000 -carla-primary-host=127.0.0.1 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter=0 \u8fd9\u91cc\uff0c\u8f85\u52a9\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 3000 \u4f5c\u4e3a RPC \u670d\u52a1\u5668\uff0c\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u7aef\u53e3\u51b2\u7a81\uff08\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff09\uff0c\u5e76\u5c06\u4ee5\u9ed8\u8ba4\u7aef\u53e3\uff082002\uff09\u8fde\u63a5\u5230\u4f4d\u4e8e IP 127.0.0.1\uff08localhost\uff09\u7684\u4e3b\u670d\u52a1\u5668\uff09\uff0c\u5e76\u4e14\u8be5\u670d\u52a1\u5668\u5c06\u4f7f\u7528 GPU \u8bbe\u5907 0\u3002 \u5982\u679c\u6211\u4eec\u60f3\u4f7f\u7528\u53e6\u4e00\u4e2a GPU \u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u542f\u52a8\u53e6\u4e00\u4e2a\u8f85\u52a9\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -carla-rpc-port=4000 -carla-primary-host=127.0.0.1 -carla-primary-port=2002 -ini:[/Script/Engine.RendererSettings]:r.GraphicsAdapter=1 \u8be5\u8f85\u52a9\u670d\u52a1\u5668\u5c06\u4f7f\u7528\u7aef\u53e3 4000 \u4f5c\u4e3a RPC \u670d\u52a1\u5668\uff0c\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u7aef\u53e3\u51b2\u7a81\uff0c\u5e76\u5c06\u901a\u8fc7\u7aef\u53e3 2002 \u8fde\u63a5\u5230\u4f4d\u4e8e IP 127.0.0.1 \u7684\u4e3b\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u8be5\u670d\u52a1\u5668\u5c06\u4f7f\u7528 GPU \u8bbe\u5907 1\u3002","title":"\u8f85\u52a9\u670d\u52a1\u5668"},{"location":"adv_multigpu/#_3","text":"\u7b2c\u4e00\u4e2a\u4ece\u670d\u52a1\u5668\u8fde\u63a5\u5230\u4e3b\u670d\u52a1\u5668\u540e\uff0c\u7cfb\u7edf\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u503c\u4e3a 1/20 \u589e\u91cf\u79d2\u3002","title":"\u540c\u6b65\u6a21\u5f0f"},{"location":"adv_opendrive/","text":"OpenDRIVE\u72ec\u7acb\u6a21\u5f0f \u6b64\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5c06\u4efb\u4f55 OpenDRIVE \u6587\u4ef6\u4f5c\u4e3a CARLA \u5730\u56fe\u5f00\u7bb1\u5373\u7528\u3002\u4e3a\u6b64\uff0c\u6a21\u62df\u5668\u5c06\u81ea\u52a8\u751f\u6210\u9053\u8def\u7f51\u683c\u4f9b\u89d2\u8272\u5bfc\u822a\u3002 \u6982\u8ff0 \u8fd0\u884c\u72ec\u7acb\u5730\u56fe \u7f51\u683c\u751f\u6210 \u6982\u8ff0 \u6b64\u6a21\u5f0f\u4ec5\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u8fd0\u884c\u5b8c\u6574\u6a21\u62df\uff0c\u65e0\u9700\u4efb\u4f55\u989d\u5916\u7684\u51e0\u4f55\u56fe\u5f62\u6216\u8d44\u4ea7\u3002\u4e3a\u6b64\uff0c\u6a21\u62df\u5668\u91c7\u7528 OpenDRIVE \u6587\u4ef6\u5e76\u7a0b\u5e8f\u5316\u5730\u521b\u5efa\u65f6\u95f4 3D \u7f51\u683c\u6765\u8fd0\u884c\u6a21\u62df\u3002 \u751f\u6210\u7684\u7f51\u683c\u4ee5\u7b80\u7ea6\u7684\u65b9\u5f0f\u63cf\u8ff0\u4e86\u9053\u8def\u5b9a\u4e49\u3002\u6240\u6709\u5143\u7d20\u90fd\u5c06\u4e0e OpenDRIVE \u6587\u4ef6\u5bf9\u5e94\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u53ea\u6709 void\u3002\u4e3a\u9632\u6b62\u8f66\u8f86\u6389\u51fa\u8def\u9762\uff0c\u91c7\u53d6\u4e86\u4e24\u9879\u63aa\u65bd\u3002 \u5728\u8f66\u8f86\u6d41\u52a8\u6700\u590d\u6742\u7684\u8def\u53e3\uff0c\u8f66\u9053\u7a0d\u5bbd\u4e00\u4e9b\u3002 \u5728\u9053\u8def\u7684\u8fb9\u754c\u5904\u521b\u5efa\u4e86\u53ef\u89c1\u7684\u5899\u58c1\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u5b89\u5168\u63aa\u65bd\u3002 \u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u505c\u8f66\u70b9\u548c\u6536\u76ca\u5c06\u5373\u65f6\u751f\u6210\u3002\u884c\u4eba\u5c06\u5728\u5730\u56fe\u4e0a\u663e\u793a\u7684\u4eba\u884c\u9053\u548c\u4eba\u884c\u6a2a\u9053\u4e0a\u5bfc\u822a\u3002\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\uff0c\u4ee5\u53ca\u9053\u8def\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u90fd\u57fa\u4e8e OpenDRIVE \u6587\u4ef6\u3002\u7531\u4e8e\u72ec\u7acb\u6a21\u5f0f\u76f4\u63a5\u4f7f\u7528 .xodr \uff0c\u56e0\u6b64\u5176\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u4f1a\u5f71\u54cd\u5230\u6a21\u62df\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u8bb8\u591a\u8f66\u9053\u6df7\u5408\u7684\u8def\u53e3\u3002 \u91cd\u8981\u7684 \u4ed4\u7ec6\u68c0\u67e5 OpenDRIVE \u6587\u4ef6\u5c24\u4e3a\u91cd\u8981\u3002\u8fd0\u884c\u6a21\u62df\u65f6\uff0c\u5176\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u4f1a\u4f20\u64ad\u3002 \u8fd0\u884c\u72ec\u7acb\u5730\u56fe \u6253\u5f00 OpenDRIVE \u6587\u4ef6\u53ea\u9700\u901a\u8fc7 API \u8c03\u7528 client.generate_opendrive_world() \u3002\u8fd9\u5c06\u751f\u6210\u65b0\u5730\u56fe\uff0c\u5e76\u963b\u6b62\u6a21\u62df\uff0c\u76f4\u5230\u5b83\u51c6\u5907\u597d\u3002\u8be5\u65b9\u6cd5\u9700\u8981\u4e24\u4e2a\u53c2\u6570\u3002 opendrive \u662f\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32\u7684 OpenDRIVE \u6587\u4ef6\u7684\u5185\u5bb9\u3002 parameters \u662f\u4e00\u4e2a carla.OpendriveGenerationParameters \u5305\u542b\u7f51\u683c\u751f\u6210\u7684\u8bbe\u7f6e\u3002 \u8fd9\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684 \u3002 vertex_distance \uff08\u9ed8\u8ba4 2.0 \u7c73\uff09 - \u7f51\u683c\u9876\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u8ddd\u79bb\u8d8a\u5927\uff0c\u7f51\u683c\u8d8a\u4e0d\u51c6\u786e\u3002\u4f46\u662f\uff0c\u5982\u679c\u8ddd\u79bb\u592a\u5c0f\uff0c\u751f\u6210\u7684\u7f51\u683c\u5c06\u592a\u91cd\u800c\u65e0\u6cd5\u4f7f\u7528\u3002 max_road_length \uff08\u9ed8\u8ba4 50.0 \u7c73\uff09 - \u7f51\u683c\u7684\u4e00\u90e8\u5206\u7684\u6700\u5927\u957f\u5ea6\u3002\u7f51\u683c\u88ab\u5206\u6210\u51e0\u90e8\u5206\u4ee5\u51cf\u5c11\u6e32\u67d3\u5f00\u9500\u3002\u5982\u679c\u4e00\u90e8\u5206\u4e0d\u53ef\u89c1\uff0cUE \u5c06\u4e0d\u4f1a\u6e32\u67d3\u5b83\u3002\u90e8\u5206\u8d8a\u5c0f\uff0c\u5b83\u4eec\u88ab\u4e22\u5f03\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002\u4f46\u662f\uff0c\u5982\u679c\u90e8\u5206\u592a\u5c0f\uff0cUE \u9700\u8981\u7ba1\u7406\u7684\u5bf9\u8c61\u592a\u591a\uff0c\u6027\u80fd\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 wall_height \uff08\u9ed8\u8ba4\u4e3a 1.0 \u7c73\uff09 - \u5728\u9053\u8def\u8fb9\u754c\u4e0a\u521b\u5efa\u7684\u9644\u52a0\u5899\u7684\u9ad8\u5ea6\u3002\u8fd9\u4e9b\u53ef\u4ee5\u9632\u6b62\u8f66\u8f86\u5760\u5165\u865a\u7a7a\u3002 additional_width \uff08\u9ed8\u8ba4\u4e3a 0.6 \u7c73\uff0c\u6bcf\u8fb9 0.3\uff09 \u2014 \u5e94\u7528\u4e8e\u4ea4\u53c9\u8def\u53e3\u7684\u5c0f\u5bbd\u5ea6\u589e\u91cf\u3002\u8fd9\u662f\u9632\u6b62\u8f66\u8f86\u5760\u843d\u7684\u5b89\u5168\u63aa\u65bd\u3002 smooth_junctions (default True) \u2014 \u5982\u679c True \uff0cOpenDRIVE \u7684\u4e00\u4e9b\u4fe1\u606f\u5c06\u88ab\u91cd\u65b0\u89e3\u91ca\u4ee5\u5e73\u6ed1\u8fde\u63a5\u5904\u7684\u6700\u7ec8\u7f51\u683c\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u9632\u6b62\u5728\u4e0d\u540c\u8f66\u9053\u76f8\u9047\u65f6\u53ef\u80fd\u53d1\u751f\u7684\u4e00\u4e9b\u4e0d\u51c6\u786e\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a False \uff0c\u7f51\u683c\u5c06\u5b8c\u5168\u6309\u7167 OpenDRIVE \u4e2d\u7684\u63cf\u8ff0\u751f\u6210\u3002 enable_mesh_visibility (default True) \u2014 \u5982\u679c False \uff0c\u7f51\u683c\u5c06\u4e0d\u4f1a\u88ab\u6e32\u67d3\uff0c\u8fd9\u53ef\u4ee5\u4e3a\u6a21\u62df\u5668\u8282\u7701\u5927\u91cf\u6e32\u67d3\u5de5\u4f5c\u3002 \u4e3a\u4e86\u8f7b\u677e\u6d4b\u8bd5\u6b64\u529f\u80fd\uff0c PythonAPI/util/ \u4e2d\u7684 config.py \u811a\u672c\u6709\u4e00\u4e2a\u65b0\u53c2\u6570\uff0c -x \u6216 --xodr-path \u3002\u6b64\u53c2\u6570\u9700\u8981\u4e00\u4e2a\u5e26\u6709 .xodr \u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 path/example.xodr \u3002\u5982\u679c\u4f7f\u7528\u6b64\u811a\u672c\u751f\u6210\u7f51\u683c\uff0c\u5219\u4f7f\u7528\u7684\u53c2\u6570\u5c06\u59cb\u7ec8\u4e3a\u9ed8\u8ba4\u53c2\u6570\u3002 \u6b64\u529f\u80fd\u53ef\u4ee5\u4f7f\u7528 CARLA \u63d0\u4f9b\u7684\u65b0 TownBig \u8fdb\u884c\u6d4b\u8bd5\u3002 python3 config.py -x opendrive/TownBig.xodr \u91cd\u8981\u7684 client.generate_opendrive_world() \u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u7684\u5185\u5bb9\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32 \u3002\u76f8\u53cd\uff0c config.py \u811a\u672c\u9700\u8981 .xodr \u6587\u4ef6\u7684\u8def\u5f84 \u3002 \u7b14\u8bb0 \u5982\u679c\u9047\u5230 opendrive \u65e0\u6cd5\u6b63\u786e\u89e3\u6790 \u9519\u8bef\uff0c\u8bf7\u786e\u4fdd\u5bf9 CarlaUE4/Content/Carla/Maps/OpenDrive/ \u76ee\u5f55\u6709\u5199\u6743\u9650\u3002\u8fd9\u662f\u670d\u52a1\u5668\u6b63\u786e\u89e3\u6790 xodr \u6587\u4ef6\u6240\u5fc5\u9700\u7684\u3002 \u7f51\u683c\u751f\u6210 \u7f51\u683c\u7684\u751f\u6210\u662f\u8be5\u6a21\u5f0f\u7684\u5173\u952e\u8981\u7d20\u3002\u53ea\u6709\u5f53\u751f\u6210\u7684\u7f51\u683c\u662f\u5e73\u6ed1\u7684\u5e76\u4e14\u5b8c\u5168\u7b26\u5408\u5176\u5b9a\u4e49\u65f6\uff0c\u8be5\u529f\u80fd\u624d\u80fd\u6210\u529f\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u8fd9\u4e00\u6b65\u6b63\u5728\u4e0d\u65ad\u6539\u8fdb\u3002\u5728\u6700\u540e\u7684\u8fed\u4ee3\u4e2d\uff0c\u8fde\u63a5\u70b9\u5df2\u7ecf\u8fc7\u629b\u5149\u4ee5\u907f\u514d\u4e0d\u51c6\u786e \u53d1\u751f\uff0c\u5c24\u5176\u662f\u5728\u4e0d\u5e73\u5766\u7684\u8f66\u9053\u8fde\u63a5\u5904\u3002 \u5728\u751f\u6210\u4ea4\u6c47\u70b9\u7f51\u683c\u65f6\uff0c\u8f83\u9ad8\u7684\u8f66\u9053\u5f80\u5f80\u4f1a\u963b\u6321\u4e0b\u65b9\u7684\u8f66\u9053\u3002 smooth_junctions \u53c2\u6570\u53ef\u9632\u6b62\u6b64\u7c7b\u95ee\u9898\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u662f\u5c06\u6574\u4e2a\u5730\u56fe\u521b\u5efa\u4e3a\u4e00\u4e2a\u72ec\u7279\u7684\u7f51\u683c\uff0c\u800c\u662f\u521b\u5efa\u4e0d\u540c\u7684\u90e8\u5206\u3002\u901a\u8fc7\u5212\u5206\u7f51\u683c\uff0c\u6a21\u62df\u5668\u53ef\u4ee5\u907f\u514d\u6e32\u67d3\u4e0d\u53ef\u89c1\u7684\u90e8\u5206\uff0c\u5e76\u8282\u7701\u6210\u672c\u3002\u5de5\u4f5c\u66f4\u5c0f\u8fd8\u5141\u8bb8\u751f\u6210\u5de8\u5927\u7684\u5730\u56fe\u5e76\u5305\u542b\u53ef\u80fd\u51fa\u73b0\u5728\u7f51\u683c\u7684\u4e00\u5c0f\u90e8\u5206\u4e0a\u7684\u95ee\u9898\u3002 \u5173\u4e8e\u7f51\u683c\u751f\u6210\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5e94\u8003\u8651\u4e00\u4e9b\u56e0\u7d20\u3002 \u7ed3\u5e73\u6ed1 \u3002\u9ed8\u8ba4\u5e73\u6ed1\u53ef\u9632\u6b62\u4e0a\u8ff0\u503e\u659c\u8fde\u63a5\u5904\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5b83\u4f1a\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4fee\u6539\u539f\u59cb\u7f51\u683c\u3002\u5982\u679c\u613f\u610f\uff0c\u5c06 smooth_junctions \u8bbe\u7f6e\u4e3a False \u4ee5\u7981\u7528\u5e73\u6ed1\u3002 \u6a2a\u5411\u5761\u5ea6 \u3002\u6b64\u529f\u80fd\u5f53\u524d\u672a\u96c6\u6210\u5728 CARLA \u4e2d\u3002 \u4eba\u884c\u9053\u9ad8\u5ea6 \u3002\u76ee\u524d\uff0c\u6240\u6709\u4eba\u884c\u9053\u7684\u786c\u7f16\u7801\u90fd\u662f\u76f8\u540c\u7684\u3002\u4eba\u884c\u9053\u5fc5\u987b\u9ad8\u4e8e\u9053\u8def\u6807\u9ad8\u624d\u80fd\u68c0\u6d4b\u5230\u78b0\u649e\uff0c\u4f46 RoadRunner \u4e0d\u4f1a\u5c06\u6b64\u503c\u5bfc\u51fa\u5230 OpenDRIVE \u6587\u4ef6\u3002\u9ad8\u5ea6\u662f\u786c\u7f16\u7801\u7684\uff0c\u4ee5\u4fdd\u8bc1\u78b0\u649e\u3002 \u8fd9\u6db5\u76d6\u4e86\u5230\u76ee\u524d\u4e3a\u6b62\u5173\u4e8e OpenDRIVE \u72ec\u7acb\u6a21\u5f0f\u7684\u6240\u6709\u4fe1\u606f\u3002\u6293\u4f4f\u673a\u4f1a\u5e76\u4f7f\u7528\u4efb\u4f55 OpenDRIVE \u5730\u56fe\u5728 CARLA \u4e2d\u8fdb\u884c\u6d4b\u8bd5\u3002 \u8bba\u575b\u4e2d\u7684\u7591\u95ee\u548c\u5efa\u8bae\u3002 CARLA\u8bba\u575b","title":"OpenDRIVE \u72ec\u7acb\u6a21\u5f0f"},{"location":"adv_opendrive/#opendrive","text":"\u6b64\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5c06\u4efb\u4f55 OpenDRIVE \u6587\u4ef6\u4f5c\u4e3a CARLA \u5730\u56fe\u5f00\u7bb1\u5373\u7528\u3002\u4e3a\u6b64\uff0c\u6a21\u62df\u5668\u5c06\u81ea\u52a8\u751f\u6210\u9053\u8def\u7f51\u683c\u4f9b\u89d2\u8272\u5bfc\u822a\u3002 \u6982\u8ff0 \u8fd0\u884c\u72ec\u7acb\u5730\u56fe \u7f51\u683c\u751f\u6210","title":"OpenDRIVE\u72ec\u7acb\u6a21\u5f0f"},{"location":"adv_opendrive/#_1","text":"\u6b64\u6a21\u5f0f\u4ec5\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u8fd0\u884c\u5b8c\u6574\u6a21\u62df\uff0c\u65e0\u9700\u4efb\u4f55\u989d\u5916\u7684\u51e0\u4f55\u56fe\u5f62\u6216\u8d44\u4ea7\u3002\u4e3a\u6b64\uff0c\u6a21\u62df\u5668\u91c7\u7528 OpenDRIVE \u6587\u4ef6\u5e76\u7a0b\u5e8f\u5316\u5730\u521b\u5efa\u65f6\u95f4 3D \u7f51\u683c\u6765\u8fd0\u884c\u6a21\u62df\u3002 \u751f\u6210\u7684\u7f51\u683c\u4ee5\u7b80\u7ea6\u7684\u65b9\u5f0f\u63cf\u8ff0\u4e86\u9053\u8def\u5b9a\u4e49\u3002\u6240\u6709\u5143\u7d20\u90fd\u5c06\u4e0e OpenDRIVE \u6587\u4ef6\u5bf9\u5e94\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u53ea\u6709 void\u3002\u4e3a\u9632\u6b62\u8f66\u8f86\u6389\u51fa\u8def\u9762\uff0c\u91c7\u53d6\u4e86\u4e24\u9879\u63aa\u65bd\u3002 \u5728\u8f66\u8f86\u6d41\u52a8\u6700\u590d\u6742\u7684\u8def\u53e3\uff0c\u8f66\u9053\u7a0d\u5bbd\u4e00\u4e9b\u3002 \u5728\u9053\u8def\u7684\u8fb9\u754c\u5904\u521b\u5efa\u4e86\u53ef\u89c1\u7684\u5899\u58c1\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u5b89\u5168\u63aa\u65bd\u3002 \u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u505c\u8f66\u70b9\u548c\u6536\u76ca\u5c06\u5373\u65f6\u751f\u6210\u3002\u884c\u4eba\u5c06\u5728\u5730\u56fe\u4e0a\u663e\u793a\u7684\u4eba\u884c\u9053\u548c\u4eba\u884c\u6a2a\u9053\u4e0a\u5bfc\u822a\u3002\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\uff0c\u4ee5\u53ca\u9053\u8def\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u90fd\u57fa\u4e8e OpenDRIVE \u6587\u4ef6\u3002\u7531\u4e8e\u72ec\u7acb\u6a21\u5f0f\u76f4\u63a5\u4f7f\u7528 .xodr \uff0c\u56e0\u6b64\u5176\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u4f1a\u5f71\u54cd\u5230\u6a21\u62df\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u8bb8\u591a\u8f66\u9053\u6df7\u5408\u7684\u8def\u53e3\u3002 \u91cd\u8981\u7684 \u4ed4\u7ec6\u68c0\u67e5 OpenDRIVE \u6587\u4ef6\u5c24\u4e3a\u91cd\u8981\u3002\u8fd0\u884c\u6a21\u62df\u65f6\uff0c\u5176\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u4f1a\u4f20\u64ad\u3002","title":"\u6982\u8ff0"},{"location":"adv_opendrive/#_2","text":"\u6253\u5f00 OpenDRIVE \u6587\u4ef6\u53ea\u9700\u901a\u8fc7 API \u8c03\u7528 client.generate_opendrive_world() \u3002\u8fd9\u5c06\u751f\u6210\u65b0\u5730\u56fe\uff0c\u5e76\u963b\u6b62\u6a21\u62df\uff0c\u76f4\u5230\u5b83\u51c6\u5907\u597d\u3002\u8be5\u65b9\u6cd5\u9700\u8981\u4e24\u4e2a\u53c2\u6570\u3002 opendrive \u662f\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32\u7684 OpenDRIVE \u6587\u4ef6\u7684\u5185\u5bb9\u3002 parameters \u662f\u4e00\u4e2a carla.OpendriveGenerationParameters \u5305\u542b\u7f51\u683c\u751f\u6210\u7684\u8bbe\u7f6e\u3002 \u8fd9\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684 \u3002 vertex_distance \uff08\u9ed8\u8ba4 2.0 \u7c73\uff09 - \u7f51\u683c\u9876\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u8ddd\u79bb\u8d8a\u5927\uff0c\u7f51\u683c\u8d8a\u4e0d\u51c6\u786e\u3002\u4f46\u662f\uff0c\u5982\u679c\u8ddd\u79bb\u592a\u5c0f\uff0c\u751f\u6210\u7684\u7f51\u683c\u5c06\u592a\u91cd\u800c\u65e0\u6cd5\u4f7f\u7528\u3002 max_road_length \uff08\u9ed8\u8ba4 50.0 \u7c73\uff09 - \u7f51\u683c\u7684\u4e00\u90e8\u5206\u7684\u6700\u5927\u957f\u5ea6\u3002\u7f51\u683c\u88ab\u5206\u6210\u51e0\u90e8\u5206\u4ee5\u51cf\u5c11\u6e32\u67d3\u5f00\u9500\u3002\u5982\u679c\u4e00\u90e8\u5206\u4e0d\u53ef\u89c1\uff0cUE \u5c06\u4e0d\u4f1a\u6e32\u67d3\u5b83\u3002\u90e8\u5206\u8d8a\u5c0f\uff0c\u5b83\u4eec\u88ab\u4e22\u5f03\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002\u4f46\u662f\uff0c\u5982\u679c\u90e8\u5206\u592a\u5c0f\uff0cUE \u9700\u8981\u7ba1\u7406\u7684\u5bf9\u8c61\u592a\u591a\uff0c\u6027\u80fd\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 wall_height \uff08\u9ed8\u8ba4\u4e3a 1.0 \u7c73\uff09 - \u5728\u9053\u8def\u8fb9\u754c\u4e0a\u521b\u5efa\u7684\u9644\u52a0\u5899\u7684\u9ad8\u5ea6\u3002\u8fd9\u4e9b\u53ef\u4ee5\u9632\u6b62\u8f66\u8f86\u5760\u5165\u865a\u7a7a\u3002 additional_width \uff08\u9ed8\u8ba4\u4e3a 0.6 \u7c73\uff0c\u6bcf\u8fb9 0.3\uff09 \u2014 \u5e94\u7528\u4e8e\u4ea4\u53c9\u8def\u53e3\u7684\u5c0f\u5bbd\u5ea6\u589e\u91cf\u3002\u8fd9\u662f\u9632\u6b62\u8f66\u8f86\u5760\u843d\u7684\u5b89\u5168\u63aa\u65bd\u3002 smooth_junctions (default True) \u2014 \u5982\u679c True \uff0cOpenDRIVE \u7684\u4e00\u4e9b\u4fe1\u606f\u5c06\u88ab\u91cd\u65b0\u89e3\u91ca\u4ee5\u5e73\u6ed1\u8fde\u63a5\u5904\u7684\u6700\u7ec8\u7f51\u683c\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u9632\u6b62\u5728\u4e0d\u540c\u8f66\u9053\u76f8\u9047\u65f6\u53ef\u80fd\u53d1\u751f\u7684\u4e00\u4e9b\u4e0d\u51c6\u786e\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a False \uff0c\u7f51\u683c\u5c06\u5b8c\u5168\u6309\u7167 OpenDRIVE \u4e2d\u7684\u63cf\u8ff0\u751f\u6210\u3002 enable_mesh_visibility (default True) \u2014 \u5982\u679c False \uff0c\u7f51\u683c\u5c06\u4e0d\u4f1a\u88ab\u6e32\u67d3\uff0c\u8fd9\u53ef\u4ee5\u4e3a\u6a21\u62df\u5668\u8282\u7701\u5927\u91cf\u6e32\u67d3\u5de5\u4f5c\u3002 \u4e3a\u4e86\u8f7b\u677e\u6d4b\u8bd5\u6b64\u529f\u80fd\uff0c PythonAPI/util/ \u4e2d\u7684 config.py \u811a\u672c\u6709\u4e00\u4e2a\u65b0\u53c2\u6570\uff0c -x \u6216 --xodr-path \u3002\u6b64\u53c2\u6570\u9700\u8981\u4e00\u4e2a\u5e26\u6709 .xodr \u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 path/example.xodr \u3002\u5982\u679c\u4f7f\u7528\u6b64\u811a\u672c\u751f\u6210\u7f51\u683c\uff0c\u5219\u4f7f\u7528\u7684\u53c2\u6570\u5c06\u59cb\u7ec8\u4e3a\u9ed8\u8ba4\u53c2\u6570\u3002 \u6b64\u529f\u80fd\u53ef\u4ee5\u4f7f\u7528 CARLA \u63d0\u4f9b\u7684\u65b0 TownBig \u8fdb\u884c\u6d4b\u8bd5\u3002 python3 config.py -x opendrive/TownBig.xodr \u91cd\u8981\u7684 client.generate_opendrive_world() \u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u7684\u5185\u5bb9\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32 \u3002\u76f8\u53cd\uff0c config.py \u811a\u672c\u9700\u8981 .xodr \u6587\u4ef6\u7684\u8def\u5f84 \u3002 \u7b14\u8bb0 \u5982\u679c\u9047\u5230 opendrive \u65e0\u6cd5\u6b63\u786e\u89e3\u6790 \u9519\u8bef\uff0c\u8bf7\u786e\u4fdd\u5bf9 CarlaUE4/Content/Carla/Maps/OpenDrive/ \u76ee\u5f55\u6709\u5199\u6743\u9650\u3002\u8fd9\u662f\u670d\u52a1\u5668\u6b63\u786e\u89e3\u6790 xodr \u6587\u4ef6\u6240\u5fc5\u9700\u7684\u3002","title":"\u8fd0\u884c\u72ec\u7acb\u5730\u56fe"},{"location":"adv_opendrive/#_3","text":"\u7f51\u683c\u7684\u751f\u6210\u662f\u8be5\u6a21\u5f0f\u7684\u5173\u952e\u8981\u7d20\u3002\u53ea\u6709\u5f53\u751f\u6210\u7684\u7f51\u683c\u662f\u5e73\u6ed1\u7684\u5e76\u4e14\u5b8c\u5168\u7b26\u5408\u5176\u5b9a\u4e49\u65f6\uff0c\u8be5\u529f\u80fd\u624d\u80fd\u6210\u529f\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u8fd9\u4e00\u6b65\u6b63\u5728\u4e0d\u65ad\u6539\u8fdb\u3002\u5728\u6700\u540e\u7684\u8fed\u4ee3\u4e2d\uff0c\u8fde\u63a5\u70b9\u5df2\u7ecf\u8fc7\u629b\u5149\u4ee5\u907f\u514d\u4e0d\u51c6\u786e \u53d1\u751f\uff0c\u5c24\u5176\u662f\u5728\u4e0d\u5e73\u5766\u7684\u8f66\u9053\u8fde\u63a5\u5904\u3002 \u5728\u751f\u6210\u4ea4\u6c47\u70b9\u7f51\u683c\u65f6\uff0c\u8f83\u9ad8\u7684\u8f66\u9053\u5f80\u5f80\u4f1a\u963b\u6321\u4e0b\u65b9\u7684\u8f66\u9053\u3002 smooth_junctions \u53c2\u6570\u53ef\u9632\u6b62\u6b64\u7c7b\u95ee\u9898\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u662f\u5c06\u6574\u4e2a\u5730\u56fe\u521b\u5efa\u4e3a\u4e00\u4e2a\u72ec\u7279\u7684\u7f51\u683c\uff0c\u800c\u662f\u521b\u5efa\u4e0d\u540c\u7684\u90e8\u5206\u3002\u901a\u8fc7\u5212\u5206\u7f51\u683c\uff0c\u6a21\u62df\u5668\u53ef\u4ee5\u907f\u514d\u6e32\u67d3\u4e0d\u53ef\u89c1\u7684\u90e8\u5206\uff0c\u5e76\u8282\u7701\u6210\u672c\u3002\u5de5\u4f5c\u66f4\u5c0f\u8fd8\u5141\u8bb8\u751f\u6210\u5de8\u5927\u7684\u5730\u56fe\u5e76\u5305\u542b\u53ef\u80fd\u51fa\u73b0\u5728\u7f51\u683c\u7684\u4e00\u5c0f\u90e8\u5206\u4e0a\u7684\u95ee\u9898\u3002 \u5173\u4e8e\u7f51\u683c\u751f\u6210\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5e94\u8003\u8651\u4e00\u4e9b\u56e0\u7d20\u3002 \u7ed3\u5e73\u6ed1 \u3002\u9ed8\u8ba4\u5e73\u6ed1\u53ef\u9632\u6b62\u4e0a\u8ff0\u503e\u659c\u8fde\u63a5\u5904\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5b83\u4f1a\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4fee\u6539\u539f\u59cb\u7f51\u683c\u3002\u5982\u679c\u613f\u610f\uff0c\u5c06 smooth_junctions \u8bbe\u7f6e\u4e3a False \u4ee5\u7981\u7528\u5e73\u6ed1\u3002 \u6a2a\u5411\u5761\u5ea6 \u3002\u6b64\u529f\u80fd\u5f53\u524d\u672a\u96c6\u6210\u5728 CARLA \u4e2d\u3002 \u4eba\u884c\u9053\u9ad8\u5ea6 \u3002\u76ee\u524d\uff0c\u6240\u6709\u4eba\u884c\u9053\u7684\u786c\u7f16\u7801\u90fd\u662f\u76f8\u540c\u7684\u3002\u4eba\u884c\u9053\u5fc5\u987b\u9ad8\u4e8e\u9053\u8def\u6807\u9ad8\u624d\u80fd\u68c0\u6d4b\u5230\u78b0\u649e\uff0c\u4f46 RoadRunner \u4e0d\u4f1a\u5c06\u6b64\u503c\u5bfc\u51fa\u5230 OpenDRIVE \u6587\u4ef6\u3002\u9ad8\u5ea6\u662f\u786c\u7f16\u7801\u7684\uff0c\u4ee5\u4fdd\u8bc1\u78b0\u649e\u3002 \u8fd9\u6db5\u76d6\u4e86\u5230\u76ee\u524d\u4e3a\u6b62\u5173\u4e8e OpenDRIVE \u72ec\u7acb\u6a21\u5f0f\u7684\u6240\u6709\u4fe1\u606f\u3002\u6293\u4f4f\u673a\u4f1a\u5e76\u4f7f\u7528\u4efb\u4f55 OpenDRIVE \u5730\u56fe\u5728 CARLA \u4e2d\u8fdb\u884c\u6d4b\u8bd5\u3002 \u8bba\u575b\u4e2d\u7684\u7591\u95ee\u548c\u5efa\u8bae\u3002 CARLA\u8bba\u575b","title":"\u7f51\u683c\u751f\u6210"},{"location":"adv_procedural_building_tool/","text":"\u7b14\u8bb0 \u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177 \u76ee\u524d\u662f\u4e00\u4e2a \u5b9e\u9a8c\u6027\u529f\u80fd \uff0c\u73b0\u9636\u6bb5\u5c1a\u672a\u8003\u8651 \u6295\u5165\u751f\u4ea7 \u3002\u56e0\u6b64\u5b83\u53ea\u80fd\u7528\u4e8e\u5b9e\u9a8c\u7814\u7a76\u9879\u76ee\u3002 \u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177 \u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177 \u6709\u52a9\u4e8e\u751f\u6210\u865a\u62df\u4e09\u7ef4\u5efa\u7b51\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u754c\u9762\u5bf9\u5176\u5c3a\u5bf8\u548c\u88c5\u9970\u98ce\u683c\u8fdb\u884c\u8c03\u5236\uff0c\u4ee5\u521b\u5efa\u8fd1\u4e4e\u65e0\u9650\u7684\u53d8\u5316\u3002\u53ef\u4ee5\u901a\u8fc7\u754c\u9762\u9009\u62e9\u697c\u5c42\u7684\u5360\u5730\u9762\u79ef\u5c3a\u5bf8\u548c\u9ad8\u5ea6\u3002\u7136\u540e\u7528\u6237\u53ef\u4ee5\u4e3a\u5efa\u7b51\u5927\u5802\u3001\u4e3b\u4f53\u4ee5\u53ca\u9876\u5c42\u6216\u9601\u697c\u9009\u62e9\u591a\u79cd\u98ce\u683c\u3002\u53ef\u4ee5\u4ece Carla \u8d44\u6e90\u5e93\u4e2d\u4e3a\u89d2\u7a97\u548c\u9633\u53f0\u7b49\u529f\u80fd\u9009\u62e9\u5404\u79cd\u9762\u677f\u5143\u7d20\u6837\u5f0f\u3002 \u6253\u5f00\u5de5\u5177 \u57fa\u672c\u53c2\u6570 \u7f51\u683c\u53c2\u6570 \u7f51\u683c\u5143\u7d20 \u63d2\u69fd \u5916\u5899\u6750\u6599 \u70d8\u7119 \u6253\u5f00\u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177 \u9996\u5148\uff0c\u60a8\u9700\u8981\u5411\u573a\u666f\u6dfb\u52a0\u7a0b\u5e8f\u5efa\u7b51\u53c2\u4e0e\u8005\u3002\u5bfc\u822a\u5230 Content>Carla>Blueprints>LevelDesign \u5e76\u62d6\u52a8\u84dd\u56fe BP_ProceduralBuilding \u5230\u5730\u56fe\u4e2d\u3002\u5c06\u8d44\u4ea7\u79fb\u52a8\u5230\u60a8\u5e0c\u671b\u53ef\u89c6\u5316\u5efa\u7b51\u7269\u7684\u4f4d\u7f6e\u3002\u9009\u62e9\u4e00\u4e2a\u6709\u7a7a\u95f4\u7684\u5730\u65b9\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u7ed3\u679c\u3002\u7136\u540e\uff0c\u8981\u6253\u5f00\u8be5\u5de5\u5177\uff0c\u8bf7\u53f3\u952e\u5355\u51fb WD_ProceduralBuilding \u5c0f\u90e8\u4ef6\u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 Run editor utility widget \u6765\u542f\u52a8\u7a0b\u5e8f\u6784\u5efa\u5de5\u5177\u3002\u8fd9\u5c06\u6253\u5f00\u8be5\u5de5\u5177\u7684\u754c\u9762\u3002 \u7b14\u8bb0 \u60a8\u5fc5\u987b\u5728\u6253\u5f00\u5de5\u5177\u4e4b\u524d\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u5730\u56fe\u4e2d\u5fc5\u987b\u5b58\u5728 BP_ProceduralBuilding \u84dd\u56fe\u7684\u5b9e\u4f8b\uff0c\u5de5\u5177\u624d\u80fd\u8fd0\u884c\u3002\u60a8\u8fd8\u5fc5\u987b\u786e\u4fdd\u5728\u7ee7\u7eed\u4e4b\u524d\u5728\u4e16\u754c\u5927\u7eb2\u89c6\u56fe\uff08 World outliner \uff09\u4e2d\u9009\u62e9 BP_ProceduralBuilding \u5b9e\u4f53\u3002 \u57fa\u672c\u53c2\u6570 \u5728\u57fa\u672c\u53c2\u6570\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u5efa\u7b51\u7269\u7684\u57fa\u672c\u5c5e\u6027\uff0c\u4f8b\u5982\u5360\u5730\u9762\u79ef\u548c\u697c\u5c42\u9ad8\u5ea6\u3002 \u7b14\u8bb0 \u5728\u7f51\u683c\u53c2\u6570\u90e8\u5206\uff08 mesh parameters \uff09\u9009\u62e9\u7f51\u683c\u7247\u6bb5\u4e4b\u524d\uff0c\u8c03\u6574\u57fa\u672c\u53c2\u6570\u65f6\uff0c\u60a8\u4e0d\u4f1a\u5728\u865a\u5e7b\u5f15\u64ce\u89c6\u53e3\u4e2d\u770b\u5230\u4efb\u4f55\u53d8\u5316\u3002 \u53ef\u7528\u53c2\u6570\u5982\u4e0b\uff1a Seed : \u8bbe\u7f6e\u7a0b\u5e8f\u751f\u6210\u7684\u968f\u673a\u79cd\u5b50\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u5efa\u7b51\u7269\u5177\u6709\u76f8\u540c\u8bbe\u7f6e\u7684\u53d8\u5316\u3002 Num floors : \u8bbe\u7f6e\u5efa\u7b51\u7269\u7684\u5c42\u6570\u6216\u697c\u5c42\u6570\uff0c\u5e76\u4ece\u6b64\u5b9a\u4e49\u5efa\u7b51\u7269\u7684\u9ad8\u5ea6\u3002 Length X/Y : \u5b9a\u4e49\u5efa\u7b51\u7269\u5728 X \u548c Y \u7ef4\u5ea6\u4e0a\u7684\u5360\u5730\u9762\u79ef\u5927\u5c0f\u3002\u8fd9\u4e9b\u662f\u65e0\u5355\u4f4d\u7684\uff0c\u6570\u5b57\u8868\u793a\u91cd\u590d\u90e8\u5206\u7684\u6570\u91cf\uff0c\u6bcf\u4e2a\u90e8\u5206\u662f\u4e00\u5217\u7a97\u53e3\u3002 Create automatically : \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5efa\u7b51\u7269\u5c06\u5728\u89c6\u53e3\u4e2d\u81ea\u52a8\u66f4\u65b0\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u770b\u5230\u8c03\u6574\u7684\u6548\u679c\u3002 Corners : \u5141\u8bb8\u5c06\u89d2\u4ef6\u6dfb\u52a0\u5230\u5efa\u7b51\u7269\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728 Mesh parameters \u90e8\u5206\u4e2d\u9009\u62e9\u8fd9\u4e9b\u4ef6\u3002 Walls : \u5c06\u5efa\u7b51\u7269\u5de6/\u53f3/\u524d/\u540e\u7684\u4e2d\u95f4\u90e8\u5206\u66ff\u6362\u4e3a\u53ef\u4f7f\u7528\u7f51\u683c\u53c2\u6570\uff08 Mesh parameters \uff09\u83dc\u5355\u9009\u62e9\u7684\u66ff\u4ee3\u90e8\u5206\u3002 Doors : \u5141\u8bb8\u5728\u5927\u5385\u66fe\u653e\u7f6e\u95e8\u7684\u9635\u5217\u3002\u95e8\u653e\u7f6e\u5728\u9009\u5b9a\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 \u7f51\u683c\u53c2\u6570 \u5728\u754c\u9762\u7684\u201c\u7f51\u683c\u53c2\u6570(Mesh Parameters)\u201d\u9009\u9879\u5361\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u5c06\u7528\u4e8e\u8986\u76d6\u5efa\u7b51\u7269\u5916\u90e8\u7684\u7f51\u683c\u4ef6\u3002\u5efa\u7b51\u7269\u4e0d\u540c\u90e8\u5206\u7684\u7f51\u7247\u5206\u4e3a 5 \u7c7b\uff1a Lobby : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u5927\u5802\u7684\u7f51\u7247\u3002 Midsection : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u4e2d\u6bb5\u3001\u5927\u5802\u548c\u9876\u5c42\u4e4b\u95f4\u7684\u6bcf\u4e00\u5c42\u7684\u7f51\u72b6\u90e8\u4ef6\u3002 Penthouse : \u7528\u4e8e\u88c5\u9970\u9876\u5c42\u516c\u5bd3\u5c42\u7684\u7f51\u683c\u4ef6\u3002 Doors : \u4e3a\u5927\u5385\u6dfb\u52a0\u95e8\u7684\u7f51\u72b6\u90e8\u4ef6 Walls : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u5899\u58c1\u7684\u7f51\u7247 \u5728\u6bcf\u4e2a\u7c7b\u522b\u4e2d\uff0c\u60a8\u90fd\u4f1a\u53d1\u73b0\u8bb8\u591a\u7f51\u7247\u9009\u9879\u3002\u5355\u51fb\u4e00\u4e2a\u6216\u591a\u4e2a\u4f7f\u5176\u53d8\u4e3a\u7ea2\u8272\uff0c\u8fd9\u4e9b\u5c06\u88ab\u6dfb\u52a0\u5230\u5efa\u7b51\u7269\u7684\u76f8\u5e94\u90e8\u5206\u3002\u5982\u679c\u60a8\u9009\u62e9\u591a\u4e2a\u9009\u9879\uff0c\u8be5\u5de5\u5177\u5c06\u5728\u9009\u9879\u4e4b\u95f4\u968f\u673a\u4ea4\u66ff\u3002\u5f53\u60a8\u4e3a\u5efa\u7b51\u7269\u7684\u6bcf\u4e2a\u90e8\u5206\u9009\u62e9\u7f51\u683c\u7247\u6bb5\u65f6\uff0c\u5982\u679c\u60a8\u5728\u57fa\u672c\u53c2\u6570\u90e8\u5206\u4e2d\u9009\u62e9\u4e86\u81ea\u52a8\u521b\u5efa\uff08 Create automatically \uff09\uff0c\u60a8\u5c06\u5728\u7f16\u8f91\u5668\u89c6\u53e3\u4e2d\u770b\u5230\u5efa\u7b51\u7269\u6b63\u5728\u6210\u5f62\u3002 \u7f51\u683c\u5143\u7d20 \u5728\u6b64\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u5efa\u7b51\u7269\u7684\u66f4\u8be6\u7ec6\u5143\u7d20\uff0c\u4f8b\u5982\u7a97\u6237\u3001\u67f1\u5b50\u3001\u82b1\u76c6\u3001\u7a7a\u8c03\u88c5\u7f6e\u548c\u5929\u7ebf\u3002\u6bcf\u79cd\u7c7b\u578b\u7684\u88c5\u9970\u90fd\u6709\u7565\u5fae\u4e0d\u540c\u7684\u5c5e\u6027\u3002 \u5efa\u7b51\u7269\u7ec6\u8282\u7684\u88c5\u9970\u6709\u591a\u79cd\u7c7b\u578b\uff1a \u5782\u76f4/\u6c34\u5e73\u7a97\u6237\u7f51\u683c : \u8fd9\u4e9b\u7f51\u683c\u7247\u5b9a\u4e49\u4e86\u5efa\u7b51\u7269\u4e2d\u7a97\u6846\u7684\u6837\u5f0f\u3002\u5782\u76f4\u7a97\u6237\u7f51\u683c\u5c06\u5360\u636e\u6bd4\u5176\u5bbd\u5ea6\u9ad8\u7684\u7a97\u6237\u7a7a\u95f4\uff0c\u800c\u6c34\u5e73\u7a97\u6237\u7f51\u683c\u5c06\u5360\u636e\u6bd4\u5176\u9ad8\u5ea6\u66f4\u5bbd\u7684\u7a97\u6237\u7a7a\u95f4\u3002\u5982\u679c\u60a8\u9009\u62e9\u591a\u4e2a\u9009\u9879\uff0c\u5b83\u4eec\u5c06\u4ea4\u66ff\u51fa\u73b0\u3002 \u67f1\u7f51\u683c : \u8fd9\u4e9b\u6a21\u62df\u8de8\u8d8a\u5efa\u7b51\u7269\u9ad8\u5ea6\u7684\u7816\u780c\u67f1\u7ec6\u8282 \u9876\u90e8/\u5e95\u90e8\u7a97\u6237\u7ec6\u8282 : \u8fd9\u4e9b\u7f51\u683c\u7528\u95e8\u6963\u548c\u906e\u9633\u677f\u88c5\u9970\u7a97\u6237\u7684\u9876\u90e8\uff0c\u7528\u7a97\u53f0\u548c\u690d\u7269\u7bb1\u88c5\u9970\u7a97\u6237\u7684\u5e95\u90e8\u3002 Window columns : \u5206\u9694\u7a97\u6237\u7684\u7816\u780c\u67f1 Curtain meshes : \u5b89\u88c5\u5728\u7a97\u6237\u5185\u7684\u7a97\u5e18\u548c\u767e\u53f6\u7a97 Pot meshes : \u5728\u6307\u5b9a\u63d2\u5ea7\u70b9\u6dfb\u52a0\u5230\u7a97\u53f0\u548c\u690d\u7269\u7bb1\u7684\u82b1\u76c6 Air conditioner meshes : \u5728\u6307\u5b9a\u63d2\u5ea7\u70b9\u5904\u6dfb\u52a0\u5230\u7a97\u6237\u7684\u7a7a\u8c03\u88c5\u7f6e Pipe meshes : \u5782\u76f4\u5411\u4e0b\u5ef6\u4f38\u5230\u5efa\u7b51\u7269\u7684\u7ba1\u9053\uff0c\u6a21\u4eff\u5c4b\u9876\u7684\u6392\u6c34\u7ba1 Wire meshes : \u6cbf\u7740\u5efa\u7b51\u7269\u5782\u76f4\u5ef6\u4f38\u7684\u7535\u7ebf\uff0c\u6a21\u4eff\u7535\u89c6\u5929\u7ebf\u5ef6\u4f38\u548c\u95ea\u7535\u63a5\u5730\u7ebf Antenna meshes : \u4ece\u7a97\u6237\u4f38\u51fa\u7684\u7535\u89c6\u5929\u7ebf \u53c2\u6570\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a \u5e38\u7528\u53c2\u6570 : Percentage : \u63a7\u5236\u5c06\u653e\u7f6e\u5728\u5efa\u7b51\u7269\u4e0a\u7684\u4ef6\u6570\uff0c100% \u8868\u793a\u6240\u6709\u53ef\u7528\u7a7a\u95f4\u5c06\u88ab\u5360\u7528 Offset : \u8be5\u4f5c\u54c1\u76f8\u5bf9\u4e8e\u5efa\u7b51\u7269\u4e3b\u4f53\u7684\u7a7a\u95f4\u504f\u79fb Blinds and curtains : Min/Max size : \u9009\u62e9\u767e\u53f6\u7a97\u6216\u7a97\u5e18\u7684\u6700\u5c0f/\u6700\u5927\u957f\u5ea6\uff0c\u503c\u4e4b\u95f4\u968f\u673a\u53d8\u5316\u30021.0\u4e3a\u5168\u95ed\uff0c0.0\u4e3a\u5168\u5f00\u3002 Pipes and wires : Index : \u5b9a\u4e49\u5c06\u653e\u7f6e\u7ba1\u9053\u7684\u5efa\u7b51\u7269\u7684\u9762 Offset side/front : \u4ece\u5efa\u7b51\u7269\u6b63\u9762\u7684\u4e2d\u5fc3\u5411\u4f5c\u54c1\u6dfb\u52a0\u7a7a\u95f4\u504f\u79fb \u7b14\u8bb0 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5f53\u60a8\u9009\u62e9\u7ec6\u8282\u7f51\u683c\u90e8\u4ef6\uff08\u4f8b\u5982\u82b1\u76c6\u3001\u5929\u7ebf\u548c\u7a7a\u8c03\u88c5\u7f6e\uff09\u65f6\uff0c\u60a8\u770b\u4e0d\u5230\u5efa\u7b51\u7269\u6709\u4efb\u4f55\u53d8\u5316\u3002\u8fd9\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u90e8\u4ef6\u6ca1\u6709\u6dfb\u52a0\u60a8\u9009\u62e9\u7684\u90e8\u4ef6\u6240\u9700\u7684\u9002\u5f53\u5957\u63a5\u5b57\u3002\u8bf7\u53c2\u9605\u63d2\u69fd\u90e8\u5206\uff08 sockets section \uff09\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u63d2\u69fd\u3002 \u5957\u63a5\u5b57 \u63d2\u69fd\u662f\u951a\u70b9\uff0c\u7528\u4e8e\u5b9a\u4e49\u5c06\u7ec6\u8282\u7f51\u683c\u7269\u4f53\u653e\u7f6e\u5728\u53e6\u4e00\u4e2a\u7f51\u683c\u7269\u4f53\u4e0a\u7684\u4f4d\u7f6e\u3002\u8981\u5c06\u5957\u63a5\u5b57\u6dfb\u52a0\u5230\u7a0b\u5e8f\u5efa\u7b51\u4e2d\u7684\u7f51\u683c\u7269\u4f53\uff0c\u8bf7\u5728\u9009\u62e9\u7a0b\u5e8f\u5efa\u7b51\u7684\u60c5\u51b5\u4e0b\uff0c\u8f6c\u5230\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\uff08 details panel \uff09\uff0c\u901a\u5e38\u4f4d\u4e8e\u865a\u5e7b\u7f16\u8f91\u5668\u754c\u9762\u7684\u53f3\u4fa7\u3002\u5728\u90a3\u91cc\uff0c\u60a8\u5c06\u627e\u5230\u201c\u7f51\u683c\uff08 Meshes \uff09\u201d\u548c\u201c\u7ec6\u8282\u7f51\u683c\uff08 Detail meshes \uff09\u201d\u9762\u677f\u3002\u6253\u5f00\u76f8\u5173\u90e8\u5206\uff0c\u5728\u60a8\u8981\u653e\u7f6e\u63d2\u5ea7\u7684\u4f4d\u7f6e\u6253\u5f00\u7f51\u7247\u3002 \u627e\u5230\u8981\u5728\u5176\u4e0a\u653e\u7f6e\u5957\u63a5\u5b57\u7684\u7f51\u683c\uff0c\u7136\u540e\u53cc\u51fb\u8be5\u56fe\u6807\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u5c06\u5176\u6253\u5f00\u3002\u5355\u51fb\u201c\u521b\u5efa\u5957\u63a5\u5b57( create socket )\u201d\u4ee5\u6dfb\u52a0\u5957\u63a5\u5b57\u5e76\u4f7f\u7528\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a \u7a7a\u8c03\u673a\u7ec4\uff08Air conditioning unit\uff09\uff1a aa_* \u5929\u7ebf\uff08Antennas\uff09\uff1a ant_* \u82b1\u76c6\uff08Plant pots\uff09\uff1a pot_* \u5c06\u661f\u53f7\u66ff\u6362\u4e3a\u7d22\u5f15\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u6709\u591a\u5c11\u4e2a\u5957\u63a5\u5b57\uff0c\u5373 aa_0, aa_2, aa_3... \u5f53\u60a8\u5355\u51fb\u201c\u521b\u5efa\u5957\u63a5\u5b57( Create socket )\u201d\u65f6\uff0c\u5957\u63a5\u5b57\u5c06\u5728\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u4e09\u7ef4\u53e5\u67c4\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u5c06\u63d2\u69fd\u62d6\u52a8\u5230\u7f51\u683c\u4e0a\u7684\u6240\u9700\u4f4d\u7f6e\uff0c\u8fd9\u662f\u60a8\u7684\u7ec6\u8282\u90e8\u4ef6\u5c06\u663e\u793a\u8fde\u63a5\u5230\u5355\u5143\u7684\u4f4d\u7f6e\u3002 \u5916\u5899\u6750\u6599 \u5728\u5916\u89c2\u6750\u6599\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6d4f\u89c8\u548c\u9884\u89c8\u8981\u88c5\u9970\u5efa\u7b51\u7269\u5899\u58c1\u7684\u6750\u6599\u3002 \u70d8\u7119 \u5728\u70f9\u996a\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u9009\u62e9\u7684\u6240\u6709\u7f51\u683c\u7269\u4f53\u548c\u6750\u8d28\u7ec4\u5408\u5230\u5177\u6709\u5173\u8054\u6750\u8d28\u548c\u7eb9\u7406\u7684\u5355\u4e2a\u9759\u6001\u7f51\u683c\u7269\u4f53\u4e2d\u3002\u8fd8\u5c06\u4e3a LOD \u521b\u5efa\u5efa\u7b51\u7269\u7684 LOD \u7eb9\u7406\u3002\u5728\u754c\u9762\u4e2d\u6307\u5b9a\u5c06\u4fdd\u5b58\u65b0\u5efa\u7b51\u8d44\u6e90\u7684\u6587\u4ef6\u5939\u540d\u79f0\u3002 \u4e00\u65e6\u60a8\u5b8c\u6210\u4e86\u5efa\u7b51\u7269\u7684\u5236\u4f5c\uff0c\u60a8\u5c31\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6 Carla \u8d44\u4ea7\u4e00\u6837\u5c06\u5efa\u7b51\u7269\u7684\u5b9e\u4f8b\u653e\u7f6e\u5728\u5730\u56fe\u4e2d\u3002","title":"Adv procedural building tool"},{"location":"adv_procedural_building_tool/#_1","text":"\u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177 \u6709\u52a9\u4e8e\u751f\u6210\u865a\u62df\u4e09\u7ef4\u5efa\u7b51\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u754c\u9762\u5bf9\u5176\u5c3a\u5bf8\u548c\u88c5\u9970\u98ce\u683c\u8fdb\u884c\u8c03\u5236\uff0c\u4ee5\u521b\u5efa\u8fd1\u4e4e\u65e0\u9650\u7684\u53d8\u5316\u3002\u53ef\u4ee5\u901a\u8fc7\u754c\u9762\u9009\u62e9\u697c\u5c42\u7684\u5360\u5730\u9762\u79ef\u5c3a\u5bf8\u548c\u9ad8\u5ea6\u3002\u7136\u540e\u7528\u6237\u53ef\u4ee5\u4e3a\u5efa\u7b51\u5927\u5802\u3001\u4e3b\u4f53\u4ee5\u53ca\u9876\u5c42\u6216\u9601\u697c\u9009\u62e9\u591a\u79cd\u98ce\u683c\u3002\u53ef\u4ee5\u4ece Carla \u8d44\u6e90\u5e93\u4e2d\u4e3a\u89d2\u7a97\u548c\u9633\u53f0\u7b49\u529f\u80fd\u9009\u62e9\u5404\u79cd\u9762\u677f\u5143\u7d20\u6837\u5f0f\u3002 \u6253\u5f00\u5de5\u5177 \u57fa\u672c\u53c2\u6570 \u7f51\u683c\u53c2\u6570 \u7f51\u683c\u5143\u7d20 \u63d2\u69fd \u5916\u5899\u6750\u6599 \u70d8\u7119","title":"\u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177"},{"location":"adv_procedural_building_tool/#_2","text":"\u9996\u5148\uff0c\u60a8\u9700\u8981\u5411\u573a\u666f\u6dfb\u52a0\u7a0b\u5e8f\u5efa\u7b51\u53c2\u4e0e\u8005\u3002\u5bfc\u822a\u5230 Content>Carla>Blueprints>LevelDesign \u5e76\u62d6\u52a8\u84dd\u56fe BP_ProceduralBuilding \u5230\u5730\u56fe\u4e2d\u3002\u5c06\u8d44\u4ea7\u79fb\u52a8\u5230\u60a8\u5e0c\u671b\u53ef\u89c6\u5316\u5efa\u7b51\u7269\u7684\u4f4d\u7f6e\u3002\u9009\u62e9\u4e00\u4e2a\u6709\u7a7a\u95f4\u7684\u5730\u65b9\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u7ed3\u679c\u3002\u7136\u540e\uff0c\u8981\u6253\u5f00\u8be5\u5de5\u5177\uff0c\u8bf7\u53f3\u952e\u5355\u51fb WD_ProceduralBuilding \u5c0f\u90e8\u4ef6\u5e76\u4ece\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u9009\u62e9 Run editor utility widget \u6765\u542f\u52a8\u7a0b\u5e8f\u6784\u5efa\u5de5\u5177\u3002\u8fd9\u5c06\u6253\u5f00\u8be5\u5de5\u5177\u7684\u754c\u9762\u3002 \u7b14\u8bb0 \u60a8\u5fc5\u987b\u5728\u6253\u5f00\u5de5\u5177\u4e4b\u524d\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u5730\u56fe\u4e2d\u5fc5\u987b\u5b58\u5728 BP_ProceduralBuilding \u84dd\u56fe\u7684\u5b9e\u4f8b\uff0c\u5de5\u5177\u624d\u80fd\u8fd0\u884c\u3002\u60a8\u8fd8\u5fc5\u987b\u786e\u4fdd\u5728\u7ee7\u7eed\u4e4b\u524d\u5728\u4e16\u754c\u5927\u7eb2\u89c6\u56fe\uff08 World outliner \uff09\u4e2d\u9009\u62e9 BP_ProceduralBuilding \u5b9e\u4f53\u3002","title":"\u6253\u5f00\u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177"},{"location":"adv_procedural_building_tool/#_3","text":"\u5728\u57fa\u672c\u53c2\u6570\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u5efa\u7b51\u7269\u7684\u57fa\u672c\u5c5e\u6027\uff0c\u4f8b\u5982\u5360\u5730\u9762\u79ef\u548c\u697c\u5c42\u9ad8\u5ea6\u3002 \u7b14\u8bb0 \u5728\u7f51\u683c\u53c2\u6570\u90e8\u5206\uff08 mesh parameters \uff09\u9009\u62e9\u7f51\u683c\u7247\u6bb5\u4e4b\u524d\uff0c\u8c03\u6574\u57fa\u672c\u53c2\u6570\u65f6\uff0c\u60a8\u4e0d\u4f1a\u5728\u865a\u5e7b\u5f15\u64ce\u89c6\u53e3\u4e2d\u770b\u5230\u4efb\u4f55\u53d8\u5316\u3002 \u53ef\u7528\u53c2\u6570\u5982\u4e0b\uff1a Seed : \u8bbe\u7f6e\u7a0b\u5e8f\u751f\u6210\u7684\u968f\u673a\u79cd\u5b50\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u5efa\u7b51\u7269\u5177\u6709\u76f8\u540c\u8bbe\u7f6e\u7684\u53d8\u5316\u3002 Num floors : \u8bbe\u7f6e\u5efa\u7b51\u7269\u7684\u5c42\u6570\u6216\u697c\u5c42\u6570\uff0c\u5e76\u4ece\u6b64\u5b9a\u4e49\u5efa\u7b51\u7269\u7684\u9ad8\u5ea6\u3002 Length X/Y : \u5b9a\u4e49\u5efa\u7b51\u7269\u5728 X \u548c Y \u7ef4\u5ea6\u4e0a\u7684\u5360\u5730\u9762\u79ef\u5927\u5c0f\u3002\u8fd9\u4e9b\u662f\u65e0\u5355\u4f4d\u7684\uff0c\u6570\u5b57\u8868\u793a\u91cd\u590d\u90e8\u5206\u7684\u6570\u91cf\uff0c\u6bcf\u4e2a\u90e8\u5206\u662f\u4e00\u5217\u7a97\u53e3\u3002 Create automatically : \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5efa\u7b51\u7269\u5c06\u5728\u89c6\u53e3\u4e2d\u81ea\u52a8\u66f4\u65b0\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u770b\u5230\u8c03\u6574\u7684\u6548\u679c\u3002 Corners : \u5141\u8bb8\u5c06\u89d2\u4ef6\u6dfb\u52a0\u5230\u5efa\u7b51\u7269\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728 Mesh parameters \u90e8\u5206\u4e2d\u9009\u62e9\u8fd9\u4e9b\u4ef6\u3002 Walls : \u5c06\u5efa\u7b51\u7269\u5de6/\u53f3/\u524d/\u540e\u7684\u4e2d\u95f4\u90e8\u5206\u66ff\u6362\u4e3a\u53ef\u4f7f\u7528\u7f51\u683c\u53c2\u6570\uff08 Mesh parameters \uff09\u83dc\u5355\u9009\u62e9\u7684\u66ff\u4ee3\u90e8\u5206\u3002 Doors : \u5141\u8bb8\u5728\u5927\u5385\u66fe\u653e\u7f6e\u95e8\u7684\u9635\u5217\u3002\u95e8\u653e\u7f6e\u5728\u9009\u5b9a\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002","title":"\u57fa\u672c\u53c2\u6570"},{"location":"adv_procedural_building_tool/#_4","text":"\u5728\u754c\u9762\u7684\u201c\u7f51\u683c\u53c2\u6570(Mesh Parameters)\u201d\u9009\u9879\u5361\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u5c06\u7528\u4e8e\u8986\u76d6\u5efa\u7b51\u7269\u5916\u90e8\u7684\u7f51\u683c\u4ef6\u3002\u5efa\u7b51\u7269\u4e0d\u540c\u90e8\u5206\u7684\u7f51\u7247\u5206\u4e3a 5 \u7c7b\uff1a Lobby : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u5927\u5802\u7684\u7f51\u7247\u3002 Midsection : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u4e2d\u6bb5\u3001\u5927\u5802\u548c\u9876\u5c42\u4e4b\u95f4\u7684\u6bcf\u4e00\u5c42\u7684\u7f51\u72b6\u90e8\u4ef6\u3002 Penthouse : \u7528\u4e8e\u88c5\u9970\u9876\u5c42\u516c\u5bd3\u5c42\u7684\u7f51\u683c\u4ef6\u3002 Doors : \u4e3a\u5927\u5385\u6dfb\u52a0\u95e8\u7684\u7f51\u72b6\u90e8\u4ef6 Walls : \u7528\u4e8e\u88c5\u9970\u5efa\u7b51\u7269\u5899\u58c1\u7684\u7f51\u7247 \u5728\u6bcf\u4e2a\u7c7b\u522b\u4e2d\uff0c\u60a8\u90fd\u4f1a\u53d1\u73b0\u8bb8\u591a\u7f51\u7247\u9009\u9879\u3002\u5355\u51fb\u4e00\u4e2a\u6216\u591a\u4e2a\u4f7f\u5176\u53d8\u4e3a\u7ea2\u8272\uff0c\u8fd9\u4e9b\u5c06\u88ab\u6dfb\u52a0\u5230\u5efa\u7b51\u7269\u7684\u76f8\u5e94\u90e8\u5206\u3002\u5982\u679c\u60a8\u9009\u62e9\u591a\u4e2a\u9009\u9879\uff0c\u8be5\u5de5\u5177\u5c06\u5728\u9009\u9879\u4e4b\u95f4\u968f\u673a\u4ea4\u66ff\u3002\u5f53\u60a8\u4e3a\u5efa\u7b51\u7269\u7684\u6bcf\u4e2a\u90e8\u5206\u9009\u62e9\u7f51\u683c\u7247\u6bb5\u65f6\uff0c\u5982\u679c\u60a8\u5728\u57fa\u672c\u53c2\u6570\u90e8\u5206\u4e2d\u9009\u62e9\u4e86\u81ea\u52a8\u521b\u5efa\uff08 Create automatically \uff09\uff0c\u60a8\u5c06\u5728\u7f16\u8f91\u5668\u89c6\u53e3\u4e2d\u770b\u5230\u5efa\u7b51\u7269\u6b63\u5728\u6210\u5f62\u3002","title":"\u7f51\u683c\u53c2\u6570"},{"location":"adv_procedural_building_tool/#_5","text":"\u5728\u6b64\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u5efa\u7b51\u7269\u7684\u66f4\u8be6\u7ec6\u5143\u7d20\uff0c\u4f8b\u5982\u7a97\u6237\u3001\u67f1\u5b50\u3001\u82b1\u76c6\u3001\u7a7a\u8c03\u88c5\u7f6e\u548c\u5929\u7ebf\u3002\u6bcf\u79cd\u7c7b\u578b\u7684\u88c5\u9970\u90fd\u6709\u7565\u5fae\u4e0d\u540c\u7684\u5c5e\u6027\u3002 \u5efa\u7b51\u7269\u7ec6\u8282\u7684\u88c5\u9970\u6709\u591a\u79cd\u7c7b\u578b\uff1a \u5782\u76f4/\u6c34\u5e73\u7a97\u6237\u7f51\u683c : \u8fd9\u4e9b\u7f51\u683c\u7247\u5b9a\u4e49\u4e86\u5efa\u7b51\u7269\u4e2d\u7a97\u6846\u7684\u6837\u5f0f\u3002\u5782\u76f4\u7a97\u6237\u7f51\u683c\u5c06\u5360\u636e\u6bd4\u5176\u5bbd\u5ea6\u9ad8\u7684\u7a97\u6237\u7a7a\u95f4\uff0c\u800c\u6c34\u5e73\u7a97\u6237\u7f51\u683c\u5c06\u5360\u636e\u6bd4\u5176\u9ad8\u5ea6\u66f4\u5bbd\u7684\u7a97\u6237\u7a7a\u95f4\u3002\u5982\u679c\u60a8\u9009\u62e9\u591a\u4e2a\u9009\u9879\uff0c\u5b83\u4eec\u5c06\u4ea4\u66ff\u51fa\u73b0\u3002 \u67f1\u7f51\u683c : \u8fd9\u4e9b\u6a21\u62df\u8de8\u8d8a\u5efa\u7b51\u7269\u9ad8\u5ea6\u7684\u7816\u780c\u67f1\u7ec6\u8282 \u9876\u90e8/\u5e95\u90e8\u7a97\u6237\u7ec6\u8282 : \u8fd9\u4e9b\u7f51\u683c\u7528\u95e8\u6963\u548c\u906e\u9633\u677f\u88c5\u9970\u7a97\u6237\u7684\u9876\u90e8\uff0c\u7528\u7a97\u53f0\u548c\u690d\u7269\u7bb1\u88c5\u9970\u7a97\u6237\u7684\u5e95\u90e8\u3002 Window columns : \u5206\u9694\u7a97\u6237\u7684\u7816\u780c\u67f1 Curtain meshes : \u5b89\u88c5\u5728\u7a97\u6237\u5185\u7684\u7a97\u5e18\u548c\u767e\u53f6\u7a97 Pot meshes : \u5728\u6307\u5b9a\u63d2\u5ea7\u70b9\u6dfb\u52a0\u5230\u7a97\u53f0\u548c\u690d\u7269\u7bb1\u7684\u82b1\u76c6 Air conditioner meshes : \u5728\u6307\u5b9a\u63d2\u5ea7\u70b9\u5904\u6dfb\u52a0\u5230\u7a97\u6237\u7684\u7a7a\u8c03\u88c5\u7f6e Pipe meshes : \u5782\u76f4\u5411\u4e0b\u5ef6\u4f38\u5230\u5efa\u7b51\u7269\u7684\u7ba1\u9053\uff0c\u6a21\u4eff\u5c4b\u9876\u7684\u6392\u6c34\u7ba1 Wire meshes : \u6cbf\u7740\u5efa\u7b51\u7269\u5782\u76f4\u5ef6\u4f38\u7684\u7535\u7ebf\uff0c\u6a21\u4eff\u7535\u89c6\u5929\u7ebf\u5ef6\u4f38\u548c\u95ea\u7535\u63a5\u5730\u7ebf Antenna meshes : \u4ece\u7a97\u6237\u4f38\u51fa\u7684\u7535\u89c6\u5929\u7ebf \u53c2\u6570\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a \u5e38\u7528\u53c2\u6570 : Percentage : \u63a7\u5236\u5c06\u653e\u7f6e\u5728\u5efa\u7b51\u7269\u4e0a\u7684\u4ef6\u6570\uff0c100% \u8868\u793a\u6240\u6709\u53ef\u7528\u7a7a\u95f4\u5c06\u88ab\u5360\u7528 Offset : \u8be5\u4f5c\u54c1\u76f8\u5bf9\u4e8e\u5efa\u7b51\u7269\u4e3b\u4f53\u7684\u7a7a\u95f4\u504f\u79fb Blinds and curtains : Min/Max size : \u9009\u62e9\u767e\u53f6\u7a97\u6216\u7a97\u5e18\u7684\u6700\u5c0f/\u6700\u5927\u957f\u5ea6\uff0c\u503c\u4e4b\u95f4\u968f\u673a\u53d8\u5316\u30021.0\u4e3a\u5168\u95ed\uff0c0.0\u4e3a\u5168\u5f00\u3002 Pipes and wires : Index : \u5b9a\u4e49\u5c06\u653e\u7f6e\u7ba1\u9053\u7684\u5efa\u7b51\u7269\u7684\u9762 Offset side/front : \u4ece\u5efa\u7b51\u7269\u6b63\u9762\u7684\u4e2d\u5fc3\u5411\u4f5c\u54c1\u6dfb\u52a0\u7a7a\u95f4\u504f\u79fb \u7b14\u8bb0 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5f53\u60a8\u9009\u62e9\u7ec6\u8282\u7f51\u683c\u90e8\u4ef6\uff08\u4f8b\u5982\u82b1\u76c6\u3001\u5929\u7ebf\u548c\u7a7a\u8c03\u88c5\u7f6e\uff09\u65f6\uff0c\u60a8\u770b\u4e0d\u5230\u5efa\u7b51\u7269\u6709\u4efb\u4f55\u53d8\u5316\u3002\u8fd9\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u90e8\u4ef6\u6ca1\u6709\u6dfb\u52a0\u60a8\u9009\u62e9\u7684\u90e8\u4ef6\u6240\u9700\u7684\u9002\u5f53\u5957\u63a5\u5b57\u3002\u8bf7\u53c2\u9605\u63d2\u69fd\u90e8\u5206\uff08 sockets section \uff09\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u63d2\u69fd\u3002","title":"\u7f51\u683c\u5143\u7d20"},{"location":"adv_procedural_building_tool/#_6","text":"\u63d2\u69fd\u662f\u951a\u70b9\uff0c\u7528\u4e8e\u5b9a\u4e49\u5c06\u7ec6\u8282\u7f51\u683c\u7269\u4f53\u653e\u7f6e\u5728\u53e6\u4e00\u4e2a\u7f51\u683c\u7269\u4f53\u4e0a\u7684\u4f4d\u7f6e\u3002\u8981\u5c06\u5957\u63a5\u5b57\u6dfb\u52a0\u5230\u7a0b\u5e8f\u5efa\u7b51\u4e2d\u7684\u7f51\u683c\u7269\u4f53\uff0c\u8bf7\u5728\u9009\u62e9\u7a0b\u5e8f\u5efa\u7b51\u7684\u60c5\u51b5\u4e0b\uff0c\u8f6c\u5230\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\uff08 details panel \uff09\uff0c\u901a\u5e38\u4f4d\u4e8e\u865a\u5e7b\u7f16\u8f91\u5668\u754c\u9762\u7684\u53f3\u4fa7\u3002\u5728\u90a3\u91cc\uff0c\u60a8\u5c06\u627e\u5230\u201c\u7f51\u683c\uff08 Meshes \uff09\u201d\u548c\u201c\u7ec6\u8282\u7f51\u683c\uff08 Detail meshes \uff09\u201d\u9762\u677f\u3002\u6253\u5f00\u76f8\u5173\u90e8\u5206\uff0c\u5728\u60a8\u8981\u653e\u7f6e\u63d2\u5ea7\u7684\u4f4d\u7f6e\u6253\u5f00\u7f51\u7247\u3002 \u627e\u5230\u8981\u5728\u5176\u4e0a\u653e\u7f6e\u5957\u63a5\u5b57\u7684\u7f51\u683c\uff0c\u7136\u540e\u53cc\u51fb\u8be5\u56fe\u6807\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u5c06\u5176\u6253\u5f00\u3002\u5355\u51fb\u201c\u521b\u5efa\u5957\u63a5\u5b57( create socket )\u201d\u4ee5\u6dfb\u52a0\u5957\u63a5\u5b57\u5e76\u4f7f\u7528\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a \u7a7a\u8c03\u673a\u7ec4\uff08Air conditioning unit\uff09\uff1a aa_* \u5929\u7ebf\uff08Antennas\uff09\uff1a ant_* \u82b1\u76c6\uff08Plant pots\uff09\uff1a pot_* \u5c06\u661f\u53f7\u66ff\u6362\u4e3a\u7d22\u5f15\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u6709\u591a\u5c11\u4e2a\u5957\u63a5\u5b57\uff0c\u5373 aa_0, aa_2, aa_3... \u5f53\u60a8\u5355\u51fb\u201c\u521b\u5efa\u5957\u63a5\u5b57( Create socket )\u201d\u65f6\uff0c\u5957\u63a5\u5b57\u5c06\u5728\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u4e09\u7ef4\u53e5\u67c4\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u5c06\u63d2\u69fd\u62d6\u52a8\u5230\u7f51\u683c\u4e0a\u7684\u6240\u9700\u4f4d\u7f6e\uff0c\u8fd9\u662f\u60a8\u7684\u7ec6\u8282\u90e8\u4ef6\u5c06\u663e\u793a\u8fde\u63a5\u5230\u5355\u5143\u7684\u4f4d\u7f6e\u3002","title":"\u5957\u63a5\u5b57"},{"location":"adv_procedural_building_tool/#_7","text":"\u5728\u5916\u89c2\u6750\u6599\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6d4f\u89c8\u548c\u9884\u89c8\u8981\u88c5\u9970\u5efa\u7b51\u7269\u5899\u58c1\u7684\u6750\u6599\u3002","title":"\u5916\u5899\u6750\u6599"},{"location":"adv_procedural_building_tool/#_8","text":"\u5728\u70f9\u996a\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u9009\u62e9\u7684\u6240\u6709\u7f51\u683c\u7269\u4f53\u548c\u6750\u8d28\u7ec4\u5408\u5230\u5177\u6709\u5173\u8054\u6750\u8d28\u548c\u7eb9\u7406\u7684\u5355\u4e2a\u9759\u6001\u7f51\u683c\u7269\u4f53\u4e2d\u3002\u8fd8\u5c06\u4e3a LOD \u521b\u5efa\u5efa\u7b51\u7269\u7684 LOD \u7eb9\u7406\u3002\u5728\u754c\u9762\u4e2d\u6307\u5b9a\u5c06\u4fdd\u5b58\u65b0\u5efa\u7b51\u8d44\u6e90\u7684\u6587\u4ef6\u5939\u540d\u79f0\u3002 \u4e00\u65e6\u60a8\u5b8c\u6210\u4e86\u5efa\u7b51\u7269\u7684\u5236\u4f5c\uff0c\u60a8\u5c31\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6 Carla \u8d44\u4ea7\u4e00\u6837\u5c06\u5efa\u7b51\u7269\u7684\u5b9e\u4f8b\u653e\u7f6e\u5728\u5730\u56fe\u4e2d\u3002","title":"\u70d8\u7119"},{"location":"adv_ptv/","text":"PTV-Vissim \u8054\u5408\u4eff\u771f CARLA \u5f00\u53d1\u4e86\u4e0e PTV-Vissim \u7684\u534f\u540c\u4eff\u771f\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u968f\u610f\u5206\u914d\u4efb\u52a1\uff0c\u5e76\u5229\u7528\u6bcf\u4e2a\u6a21\u62df\u7684\u80fd\u529b\u6709\u5229\u4e8e\u7528\u6237\u3002 \u5fc5\u5907\u6761\u4ef6 \u8fd0\u884c\u534f\u540c\u4eff\u771f \u521b\u5efa\u65b0\u7f51\u7edc \u5fc5\u5907\u6761\u4ef6 \u4e3a\u4e86\u8fd0\u884c\u534f\u540c\u4eff\u771f\uff0c\u6709\u4e24\u4ef6\u4e8b\u662f\u5fc5\u8981\u7684\u3002 \u8d2d\u4e70 PTV-Vissim \u6a21\u62df\u5668 \u7684\u8bb8\u53ef\u8bc1\u3002\u9700\u8981\u83b7\u53d6\u9a7e\u9a76\u6a21\u62df\u5668\u754c\u9762\u63d2\u4ef6\u3002 \u5728 PTV-Vissim \u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\uff0c\u67e5\u627e DrivingSimulatorProxy.dll \u3002\u5c06\u5176\u79fb\u81f3 C:\\Windows\\System32 \u3002 \u8fd0\u884c\u8054\u5408\u4eff\u771f \u4e0e\u6b64\u529f\u80fd\u76f8\u5173\u7684\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u5728\u201cCo-Simulation/PTV-Vissim\u201d\u4e2d\u627e\u5230\u3002 CARLA \u63d0\u4f9b\u4e86\u4e00\u4e9b\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b Town01 \u548c Town03 \u7684\u7f51\u7edc\u3002 \u8981\u8fd0\u884c\u8054\u5408\u4eff\u771f\uff0c\u8bf7\u4f7f\u7528\u811a\u672c PTV-Vissim/run_synchronization.py \u3002\u8fd9\u6709\u4e00\u4e2a\u5305\u542b PTV-Vissim \u7f51\u7edc\u7684\u5f3a\u5236\u53c2\u6570\u548c\u4e00\u4e9b\u5176\u4ed6\u53ef\u9009\u53c2\u6570\u3002 vissim_network \u2014 vissim \u7f51\u7edc\u6587\u4ef6\u3002\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u81ea\u884c\u521b\u5efa\u7684 PTV-Vissim \u7f51\u7edc\u3002 --carla-host \uff08\u9ed8\u8ba4\u503c\uff1a127.0.0.1\uff09 \u2014 carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --carla-port \uff08\u9ed8\u8ba4\u503c\uff1a2000\uff09 \u8981\u76d1\u542c\u7684 TCP \u7aef\u53e3\u3002 --vissim-version \uff08\u9ed8\u8ba4\u503c\uff1a2020\uff09 \u2014 PTV-Vissim \u7248\u672c\u3002 --step-length (default: 0.05s) - \u4e3a\u6a21\u62df\u65f6\u95f4\u6b65\u8bbe\u7f6e\u56fa\u5b9a\u7684\u589e\u91cf\u79d2\u3002 --simulator-vehicles \uff08\u9ed8\u8ba4\u503c\uff1a1\uff09 \u2014 \u5c06\u5728 CARLA \u4e2d\u751f\u6210\u5e76\u4f20\u9012\u7ed9 PTV-Vissim \u7684\u8f66\u8f86\u6570\u91cf\u3002 python3 run_synchronization.py examples/Town03/Town03.inpx \u8b66\u544a \u8981\u505c\u6b62\u8054\u5408\u4eff\u771f\uff0c\u8bf7\u5728\u8fd0\u884c\u811a\u672c\u7684\u7ec8\u7aef\u4e2d\u6309 Ctrl+C \u3002 \u4e24\u4e2a\u6a21\u62df\u5c06\u540c\u6b65\u8fd0\u884c\u3002\u4e00\u4e2a\u6a21\u62df\u5668\u4e2d\u53d1\u751f\u7684\u52a8\u4f5c\u6216\u4e8b\u4ef6\u5c06\u4f20\u64ad\u5230\u53e6\u4e00\u4e2a\u6a21\u62df\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u529f\u80fd\u4ec5\u5305\u62ec\u8f66\u8f86\u79fb\u52a8\u548c\u751f\u6210\u3002\u7531\u4e8e PTV-Vissim \u7c7b\u578b\uff0c\u751f\u6210\u53d7\u5230\u9650\u5236\u3002 * \u5982\u679c\u8f66\u8f86\u5728 CARLA \u4e2d\u751f\u6210\uff0c\u5e76\u4e14 PTV-Vissim \u4e2d\u7684 Vehicle Type \u8bbe\u7f6e\u4e3a\u201c\u6c7d\u8f66\u201d\uff0c\u5b83\u5c06\u751f\u6210\u6c7d\u8f66\u3002\u4e0d\u7ba1\u5b83\u662f\u5426\u5728 CARLA \u4e2d\u4f5c\u4e3a\u6469\u6258\u8f66\u3002\u5728\u63d0\u4f9b\u7684\u793a\u4f8b\u4e2d\uff0c\u8f66\u8f86\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u201c\u6c7d\u8f66\u201d\u3002 * \u5982\u679c\u8f66\u8f86\u5728 PTV-Vissim \u4e2d\u751f\u6210\uff0cCARLA \u5c06\u4f7f\u7528\u76f8\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u3002\u5c3a\u5bf8\u548c\u7279\u6027\u5c06\u76f8\u4f3c\uff0c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u3002 \u521b\u5efa\u4e00\u4e2a\u65b0\u7f51\u7edc \u4e3a\u4e86\u8ba9\u65b0\u7684 PTV-Vissim \u7f51\u7edc\u4e0e CARLA \u4e00\u8d77\u8fd0\u884c\uff0c\u9700\u8981\u5b8c\u6210\u4e00\u4e9b\u8bbe\u7f6e\u3002 \u6fc0\u6d3b\u9a7e\u9a76\u6a21\u62df\u5668 \u3002\u8f6c\u5230 Base Data/Network setting/Driving simulator \u5e76\u542f\u7528\u8be5\u9009\u9879 \u6307\u5b9a\u8f66\u8f86\u548c\u884c\u4eba\u7c7b\u578b \u3002\u8fd9\u4e9b\u7c7b\u578b\u5c06\u5728 PTV-Vissim \u4e2d\u7528\u4e8e\u4e0e CARLA \u4e2d\u5b8c\u6210\u7684\u751f\u6210\u540c\u6b65\uff0c\u9ed8\u8ba4\u4e3a\u7a7a \u5c06\u7f51\u7edc\u5bfc\u51fa\u4e3a .inpx \u3002\u521b\u5efa\u7f51\u7edc\uff0c\u5c06\u5176\u5bfc\u51fa\uff0c\u7136\u540e\u4f7f\u7528 run_synchronization.py \u8fd0\u884c\u534f\u540c\u4eff\u771f \u5728 CARLA \u4e2d\u751f\u6210\u7684\u4efb\u4f55\u8f66\u8f86\u90fd\u5c06\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u5728 PTV-Vissim \u4e2d\u751f\u6210\u3002 \u8b66\u544a \u5982\u679c\u884c\u4eba\u548c\u8f66\u8f86\u7c7b\u578b\u4e3a\u7a7a\uff0cPTV-Vissim \u5c06\u5d29\u6e83\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f PTV-Vissim \u4e0e CARLA \u7684\u8054\u5408\u4eff\u771f\u7684\u5168\u90e8\u5185\u5bb9\u3002 \u6253\u5f00 CARLA \u5e76\u73a9\u5f04\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA\u8bba\u575b","title":"PTV-Vissim \u8054\u5408\u4eff\u771f"},{"location":"adv_ptv/#ptv-vissim","text":"CARLA \u5f00\u53d1\u4e86\u4e0e PTV-Vissim \u7684\u534f\u540c\u4eff\u771f\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u968f\u610f\u5206\u914d\u4efb\u52a1\uff0c\u5e76\u5229\u7528\u6bcf\u4e2a\u6a21\u62df\u7684\u80fd\u529b\u6709\u5229\u4e8e\u7528\u6237\u3002 \u5fc5\u5907\u6761\u4ef6 \u8fd0\u884c\u534f\u540c\u4eff\u771f \u521b\u5efa\u65b0\u7f51\u7edc","title":"PTV-Vissim \u8054\u5408\u4eff\u771f"},{"location":"adv_ptv/#_1","text":"\u4e3a\u4e86\u8fd0\u884c\u534f\u540c\u4eff\u771f\uff0c\u6709\u4e24\u4ef6\u4e8b\u662f\u5fc5\u8981\u7684\u3002 \u8d2d\u4e70 PTV-Vissim \u6a21\u62df\u5668 \u7684\u8bb8\u53ef\u8bc1\u3002\u9700\u8981\u83b7\u53d6\u9a7e\u9a76\u6a21\u62df\u5668\u754c\u9762\u63d2\u4ef6\u3002 \u5728 PTV-Vissim \u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\uff0c\u67e5\u627e DrivingSimulatorProxy.dll \u3002\u5c06\u5176\u79fb\u81f3 C:\\Windows\\System32 \u3002","title":"\u5fc5\u5907\u6761\u4ef6"},{"location":"adv_ptv/#_2","text":"\u4e0e\u6b64\u529f\u80fd\u76f8\u5173\u7684\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u5728\u201cCo-Simulation/PTV-Vissim\u201d\u4e2d\u627e\u5230\u3002 CARLA \u63d0\u4f9b\u4e86\u4e00\u4e9b\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b Town01 \u548c Town03 \u7684\u7f51\u7edc\u3002 \u8981\u8fd0\u884c\u8054\u5408\u4eff\u771f\uff0c\u8bf7\u4f7f\u7528\u811a\u672c PTV-Vissim/run_synchronization.py \u3002\u8fd9\u6709\u4e00\u4e2a\u5305\u542b PTV-Vissim \u7f51\u7edc\u7684\u5f3a\u5236\u53c2\u6570\u548c\u4e00\u4e9b\u5176\u4ed6\u53ef\u9009\u53c2\u6570\u3002 vissim_network \u2014 vissim \u7f51\u7edc\u6587\u4ef6\u3002\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u81ea\u884c\u521b\u5efa\u7684 PTV-Vissim \u7f51\u7edc\u3002 --carla-host \uff08\u9ed8\u8ba4\u503c\uff1a127.0.0.1\uff09 \u2014 carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --carla-port \uff08\u9ed8\u8ba4\u503c\uff1a2000\uff09 \u8981\u76d1\u542c\u7684 TCP \u7aef\u53e3\u3002 --vissim-version \uff08\u9ed8\u8ba4\u503c\uff1a2020\uff09 \u2014 PTV-Vissim \u7248\u672c\u3002 --step-length (default: 0.05s) - \u4e3a\u6a21\u62df\u65f6\u95f4\u6b65\u8bbe\u7f6e\u56fa\u5b9a\u7684\u589e\u91cf\u79d2\u3002 --simulator-vehicles \uff08\u9ed8\u8ba4\u503c\uff1a1\uff09 \u2014 \u5c06\u5728 CARLA \u4e2d\u751f\u6210\u5e76\u4f20\u9012\u7ed9 PTV-Vissim \u7684\u8f66\u8f86\u6570\u91cf\u3002 python3 run_synchronization.py examples/Town03/Town03.inpx \u8b66\u544a \u8981\u505c\u6b62\u8054\u5408\u4eff\u771f\uff0c\u8bf7\u5728\u8fd0\u884c\u811a\u672c\u7684\u7ec8\u7aef\u4e2d\u6309 Ctrl+C \u3002 \u4e24\u4e2a\u6a21\u62df\u5c06\u540c\u6b65\u8fd0\u884c\u3002\u4e00\u4e2a\u6a21\u62df\u5668\u4e2d\u53d1\u751f\u7684\u52a8\u4f5c\u6216\u4e8b\u4ef6\u5c06\u4f20\u64ad\u5230\u53e6\u4e00\u4e2a\u6a21\u62df\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u529f\u80fd\u4ec5\u5305\u62ec\u8f66\u8f86\u79fb\u52a8\u548c\u751f\u6210\u3002\u7531\u4e8e PTV-Vissim \u7c7b\u578b\uff0c\u751f\u6210\u53d7\u5230\u9650\u5236\u3002 * \u5982\u679c\u8f66\u8f86\u5728 CARLA \u4e2d\u751f\u6210\uff0c\u5e76\u4e14 PTV-Vissim \u4e2d\u7684 Vehicle Type \u8bbe\u7f6e\u4e3a\u201c\u6c7d\u8f66\u201d\uff0c\u5b83\u5c06\u751f\u6210\u6c7d\u8f66\u3002\u4e0d\u7ba1\u5b83\u662f\u5426\u5728 CARLA \u4e2d\u4f5c\u4e3a\u6469\u6258\u8f66\u3002\u5728\u63d0\u4f9b\u7684\u793a\u4f8b\u4e2d\uff0c\u8f66\u8f86\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u201c\u6c7d\u8f66\u201d\u3002 * \u5982\u679c\u8f66\u8f86\u5728 PTV-Vissim \u4e2d\u751f\u6210\uff0cCARLA \u5c06\u4f7f\u7528\u76f8\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u3002\u5c3a\u5bf8\u548c\u7279\u6027\u5c06\u76f8\u4f3c\uff0c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u3002","title":"\u8fd0\u884c\u8054\u5408\u4eff\u771f"},{"location":"adv_ptv/#_3","text":"\u4e3a\u4e86\u8ba9\u65b0\u7684 PTV-Vissim \u7f51\u7edc\u4e0e CARLA \u4e00\u8d77\u8fd0\u884c\uff0c\u9700\u8981\u5b8c\u6210\u4e00\u4e9b\u8bbe\u7f6e\u3002 \u6fc0\u6d3b\u9a7e\u9a76\u6a21\u62df\u5668 \u3002\u8f6c\u5230 Base Data/Network setting/Driving simulator \u5e76\u542f\u7528\u8be5\u9009\u9879 \u6307\u5b9a\u8f66\u8f86\u548c\u884c\u4eba\u7c7b\u578b \u3002\u8fd9\u4e9b\u7c7b\u578b\u5c06\u5728 PTV-Vissim \u4e2d\u7528\u4e8e\u4e0e CARLA \u4e2d\u5b8c\u6210\u7684\u751f\u6210\u540c\u6b65\uff0c\u9ed8\u8ba4\u4e3a\u7a7a \u5c06\u7f51\u7edc\u5bfc\u51fa\u4e3a .inpx \u3002\u521b\u5efa\u7f51\u7edc\uff0c\u5c06\u5176\u5bfc\u51fa\uff0c\u7136\u540e\u4f7f\u7528 run_synchronization.py \u8fd0\u884c\u534f\u540c\u4eff\u771f \u5728 CARLA \u4e2d\u751f\u6210\u7684\u4efb\u4f55\u8f66\u8f86\u90fd\u5c06\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u5728 PTV-Vissim \u4e2d\u751f\u6210\u3002 \u8b66\u544a \u5982\u679c\u884c\u4eba\u548c\u8f66\u8f86\u7c7b\u578b\u4e3a\u7a7a\uff0cPTV-Vissim \u5c06\u5d29\u6e83\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f PTV-Vissim \u4e0e CARLA \u7684\u8054\u5408\u4eff\u771f\u7684\u5168\u90e8\u5185\u5bb9\u3002 \u6253\u5f00 CARLA \u5e76\u73a9\u5f04\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA\u8bba\u575b","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7f51\u7edc"},{"location":"adv_recorder/","text":"Recorder \u6b64\u529f\u80fd\u5141\u8bb8\u8bb0\u5f55\u548c\u91cd\u65b0\u5236\u5b9a\u4ee5\u524d\u7684\u6a21\u62df\u3002\u6240\u6709\u53d1\u751f\u7684\u4e8b\u4ef6\u90fd\u8bb0\u5f55\u5728 recorder file \u4e2d\u3002\u6709\u4e00\u4e9b\u9ad8\u7ea7\u67e5\u8be2\u53ef\u4ee5\u8ddf\u8e2a\u548c\u7814\u7a76\u8fd9\u4e9b\u4e8b\u4ef6\u3002 Recording \u6a21\u62df\u64ad\u653e \u8bbe\u7f6e\u65f6\u95f4\u56e0\u5b50 \u5f55\u5236\u6587\u4ef6 \u67e5\u8be2 \u78b0\u649e \u88ab\u56f0\u4f4f\u7684\u89d2\u8272 \u793a\u4f8b Python \u811a\u672c Recording \u6240\u6709\u6570\u636e\u4ec5\u5199\u5165\u670d\u52a1\u5668\u7aef\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u4f7f\u7528 carla.Client \u7ba1\u7406\u8bb0\u5f55\u5668\u3002 \u6839\u636e\u8bb0\u5f55\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6570\u636e\uff0c\u6bcf\u5e27\u66f4\u65b0\u89d2\u8272\u3002\u5f53\u524d\u6a21\u62df\u4e2d\u51fa\u73b0\u5728\u5f55\u5236\u4e2d\u7684 Actor \u5c06\u88ab\u79fb\u52a8\u6216\u91cd\u65b0\u751f\u6210\u4ee5\u6a21\u62df\u5b83\u3002\u90a3\u4e9b\u6ca1\u6709\u51fa\u73b0\u5728\u5f55\u97f3\u4e2d\u7684\u5c06\u7ee7\u7eed\u4ed6\u4eec\u7684\u65b9\u5f0f\uff0c\u5c31\u597d\u50cf\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u4e00\u6837\u3002 \uff01\uff01\uff01\u91cd\u8981\u7684 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u4f46 \u884c\u4eba\u5c06\u505c\u6b62 \u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u5305\u62ec\u6709\u5173\u8bb8\u591a\u4e0d\u540c\u5143\u7d20\u7684\u4fe1\u606f\u3002 \u89d2\u8272 \u2014 \u521b\u5efa\u548c\u9500\u6bc1\u3001\u8fb9\u754c\u548c\u89e6\u53d1\u6846\u3002 \u4ea4\u901a\u706f \u2014 \u72b6\u6001\u53d8\u5316\u548c\u65f6\u95f4\u8bbe\u7f6e\u3002 \u8f66\u8f86 \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\u3001\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u5149\u72b6\u6001\u548c\u7269\u7406\u63a7\u5236\u3002 \u884c\u4eba \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4ee5\u53ca\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3002 \u706f\u5149 \u2014 \u6765\u81ea\u5efa\u7b51\u7269\u3001\u8857\u9053\u548c\u8f66\u8f86\u7684\u706f\u5149\u72b6\u6001\u3002 \u8981\u5f00\u59cb\u5f55\u5236\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u5728\u6587\u4ef6\u540d\u4e2d\u4f7f\u7528 \\ \u3001 / \u6216 : \u5b57\u7b26\u4f1a\u5c06\u5176\u5b9a\u4e49\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u7684\u8def\u5f84\uff0c\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 CarlaUE4/Saved \u4e2d\u3002 client.start_recorder(\"/home/carla/recording01.log\") \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bb0\u5f55\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u5b58\u50a8\u56de\u653e\u6a21\u62df\u6240\u9700\u7684\u4fe1\u606f\u3002\u4e3a\u4e86\u4fdd\u5b58\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5fc5\u987b\u5728\u5f00\u59cb\u5f55\u5236\u65f6\u914d\u7f6e\u53c2\u6570 additional_data \u3002 client.start_recorder(\"/home/carla/recording01.log\", True) \u7b14\u8bb0 \u5176\u4ed6\u6570\u636e\u5305\u62ec\uff1a\u8f66\u8f86\u548c\u884c\u4eba\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u7ea2\u7eff\u706f\u65f6\u95f4\u8bbe\u7f6e\u3001\u6267\u884c\u65f6\u95f4\u3001\u6f14\u5458\u7684\u89e6\u53d1\u5668\u548c\u8fb9\u754c\u6846\uff0c\u4ee5\u53ca\u8f66\u8f86\u7684\u7269\u7406\u63a7\u5236\u3002 \u8981\u505c\u6b62\u5f55\u97f3\uff0c\u8c03\u7528\u4e5f\u5f88\u7b80\u5355\u3002 client.stop_recorder() \u7b14\u8bb0 \u636e\u4f30\u8ba1\uff0c50 \u4e2a\u7ea2\u7eff\u706f\u548c 100 \u8f86\u8f66\u7684 1 \u5c0f\u65f6\u8bb0\u5f55\u5927\u7ea6\u9700\u8981 200MB \u5927\u5c0f\u3002 \u6a21\u62df\u64ad\u653e \u53ef\u4ee5\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u65f6\u5019\u5f00\u59cb\u64ad\u653e\u3002\u9664\u4e86\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 client.replay_file(\"recording01.log\", start, duration, camera) \u53c2\u6570 \u8bf4\u660e \u7b14\u8bb0 \u5f00\u59cb \u4ee5\u79d2\u4e3a\u5355\u4f4d\u8bb0\u5f55\u5f00\u59cb\u6a21\u62df\u7684\u65f6\u95f4\u3002 \u5982\u679c\u662f\u80af\u5b9a\u7684\uff0c\u65f6\u95f4\u5c06\u4ece\u8bb0\u5f55\u5f00\u59cb\u8ba1\u7b97\u3002 \u5982\u679c\u662f\u5426\u5b9a\u7684\uff0c\u5c06\u4ece\u6700\u540e\u8003\u8651\u3002 \u6301\u7eed\u65f6\u95f4 \u64ad\u653e\u79d2\u6570\u3002 0 \u662f\u6240\u6709\u7684\u5f55\u97f3\u3002 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u884c\u4eba\u5c06\u505c\u6b62\u3002 \u76f8\u673a \u76f8\u673a\u5c06\u805a\u7126\u7684\u6f14\u5458\u7684 ID\u3002 \u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c0\u201d\u4ee5\u8ba9\u89c2\u4f17\u81ea\u7531\u79fb\u52a8\u3002 \u8bbe\u7f6e\u65f6\u95f4\u56e0\u5b50 \u65f6\u95f4\u56e0\u7d20\u5c06\u51b3\u5b9a\u64ad\u653e\u901f\u5ea6\u3002\u5b83\u53ef\u4ee5\u968f\u65f6\u66f4\u6539\u800c\u65e0\u9700\u505c\u6b62\u56de\u653e\u3002 client.set_replayer_time_factor(2.0) \u53c2\u6570 \u9ed8\u8ba4 \u5feb\u52a8\u4f5c \u6162\u52a8\u4f5c time_factor 1.0 >1.0 ** <1.0 ** \u91cd\u8981\u7684 \u5982\u679c time_factor>2.0 \uff0cactors \u7684\u4f4d\u7f6e\u63d2\u503c\u88ab\u7981\u7528\u5e76\u4e14\u53ea\u662f\u66f4\u65b0\u3002\u884c\u4eba\u7684\u52a8\u753b\u4e0d\u53d7\u65f6\u95f4\u56e0\u7d20\u7684\u5f71\u54cd\u3002 \u5f53\u65f6\u95f4\u56e0\u7d20\u5728 20x \u5de6\u53f3\u65f6\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u6d41\u91cf\u3002 \u5f55\u5236\u6587\u4ef6 \u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684 API \u8c03\u7528\u6765\u68c0\u7d22\u8bb0\u5f55\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ea\u68c0\u7d22\u6ce8\u518c\u4e8b\u4ef6\u7684\u90a3\u4e9b\u5e27\u3002\u8bbe\u7f6e\u53c2\u6570 show_all \u5c06\u8fd4\u56de\u6bcf\u4e00\u5e27\u7684\u6240\u6709\u4fe1\u606f\u3002\u5173\u4e8e\u5982\u4f55\u5b58\u50a8\u6570\u636e\u7684\u7ec6\u8282\u5728 recorder's reference \u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e\u3002 # \u663e\u793a\u76f8\u5173\u5e27\u7684\u4fe1\u606f print (client.show_recorder_file_info (\"recording01.log\")) \u5f00\u653e\u4fe1\u606f. \u8bb0\u5f55\u6a21\u62df\u7684\u5730\u56fe\u3001\u65e5\u671f\u548c\u65f6\u95f4\u3002 Frame information. \u4efb\u4f55\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u4f8b\u5982\u89d2\u8272\u751f\u6210\u6216\u78b0\u649e\u3002\u5b83\u5305\u542b\u6f14\u5458\u7684 ID \u548c\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002 \u5173\u95ed\u4fe1\u606f. \u8bb0\u5f55\u7684\u5e27\u6570\u548c\u603b\u65f6\u95f4\u3002 Version: 1 Map: Town05 Date: 02/21/19 10:46:20 Frame 1 at 0 seconds Create 2190: spectator (0) at (-260, -200, 382.001) Create 2191: traffic.traffic_light (3) at (4255, 10020, 0) Create 2192: traffic.traffic_light (3) at (4025, 7860, 0) ... Create 2258: traffic.speed_limit.90 (0) at (21651.7, -1347.59, 15) Create 2259: traffic.speed_limit.90 (0) at (5357, 21457.1, 15) Frame 2 at 0.0254253 seconds Create 2276: vehicle.mini.cooperst (1) at (4347.63, -8409.51, 120) number_of_wheels = 4 object_type = color = 255,241,0 role_name = autopilot ... Frame 2350 at 60.2805 seconds Destroy 2276 Frame 2351 at 60.3057 seconds Destroy 2277 ... Frames: 2354 Duration: 60.3753 seconds \u67e5\u8be2 \u78b0\u649e \u8f66\u8f86\u5fc5\u987b\u6709\u4e00\u4e2a \u78b0\u649e\u68c0\u6d4b\u5668 \u4ee5\u8bb0\u5f55\u78b0\u649e\u3002\u8fd9\u4e9b\u53ef\u4ee5\u88ab\u67e5\u8be2\uff0c\u4f7f\u7528\u53c2\u6570\u6765\u8fc7\u6ee4\u78b0\u649e\u4e2d\u6d89\u53ca\u7684\u53c2\u4e0e\u8005\u7684\u7c7b\u578b\u3002\u4f8b\u5982\uff0c h \u6807\u8bc6 role_name = hero \u7684\u89d2\u8272\uff0c\u901a\u5e38\u5206\u914d\u7ed9\u7528\u6237\u7ba1\u7406\u7684\u8f66\u8f86\u3002\u6709\u4e00\u7ec4\u7279\u5b9a\u7684\u53c2\u4e0e\u8005\u7c7b\u578b\u53ef\u7528\u4e8e\u67e5\u8be2\u3002 h = Hero v = Vehicle w = Walker t = Traffic light o = Other a = Any \u7b14\u8bb0 manual_control.py \u811a\u672c\u4e3a \u81ea\u6211\u8f66\u8f86\u5206\u914d role_name = hero \u3002 \u78b0\u649e\u67e5\u8be2\u9700\u8981\u4e24\u4e2a\u6807\u5fd7\u6765\u8fc7\u6ee4\u78b0\u649e\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u663e\u793a\u8f66\u8f86\u4e0e\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u4e4b\u95f4\u7684\u78b0\u649e\u3002 print(client.show_recorder_collisions(\"recording01.log\",\"v\", \"a\")) \u8f93\u51fa\u603b\u7ed3\u4e86\u78b0\u649e\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u6240\u6d89\u53ca\u7684\u53c2\u4e0e\u8005\u7684\u7c7b\u578b\u3001ID \u548c\u63cf\u8ff0\u3002 Version: 1 Map: Town05 Date: 02/19/19 15:36:08 Time Types Id Actor 1 Id Actor 2 16 v v 122 vehicle.yamaha.yzf 118 vehicle.dodge_charger.police 27 v o 122 vehicle.yamaha.yzf 0 Frames: 790 Duration: 46 seconds \u91cd\u8981\u7684 \u56e0\u4e3a\u8bb0\u5f55\u78b0\u649e\u7684\u662f Hero \u6216 Ego \u8f66\u8f86\uff0c\u6240\u4ee5\u8fd9\u5c06\u59cb\u7ec8\u662f Actor 1 \u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8bb0\u5f55\u5668\u5e76\u5728\u4e8b\u4ef6\u53d1\u751f\u524d\u51e0\u79d2\u8bbe\u7f6e\u5b83\u6765\u91cd\u65b0\u5236\u5b9a\u78b0\u649e\u3002 client.replay_file(\"col2.log\", 13, 0, 122) \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56de\u653e\u663e\u793a\u4e86\u8fd9\u4e00\u70b9\u3002 \u88ab\u5361\u4f4f\u7684\u89d2\u8272 \u68c0\u6d4b\u5728\u5f55\u5236\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u7684\u8f66\u8f86\u3002\u5982\u679c\u89d2\u8272\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u79fb\u52a8\u6700\u5c0f\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a\u5b83\u88ab\u963b\u585e\u3002\u8be5\u5b9a\u4e49\u7531\u7528\u6237\u5728\u67e5\u8be2\u671f\u95f4\u8fdb\u884c\u3002 print(client.show_recorder_actors_blocked(\"recording01.log\", min_time, min_distance)) \u53c2\u6570 \u8bf4\u660e \u9ed8\u8ba4 min_time \u79fb\u52a8\u7684\u6700\u5c0f\u79d2\u6570`min_distance`\u3002 30 \u79d2\u3002 min_distance \u79fb\u52a8\u7684\u6700\u5c0f\u5398\u7c73\u6570\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u963b\u585e\u3002 10\u5398\u7c73\u3002 \u7b14\u8bb0 \u6709\u65f6\u8f66\u8f86\u5728\u7ea2\u7eff\u706f\u5904\u505c\u7559\u7684\u65f6\u95f4\u6bd4\u9884\u671f\u7684\u8981\u957f\u3002 \u4ee5\u4e0b\u793a\u4f8b\u8003\u8651\u8f66\u8f86\u5728 60 \u79d2\u5185\u79fb\u52a8\u4e0d\u5230 1 \u7c73\u65f6\u88ab\u5361\u4f4f\u3002 client.show_recorder_actors_blocked(\"col3.log\", 60, 100) \u8f93\u51fa\u5df2\u6392\u5e8f \u7531 duration \u8868\u793a\uff0c\u5b83\u8bf4\u660e\u4e86\u505c\u6b62\u88ab\u201c\u963b\u585e\u201d\u5e76\u79fb\u52a8 min_distance \u9700\u8981\u591a\u957f\u65f6\u95f4\u3002 Version: 1 Map: Town05 Date: 02/19/19 15:45:01 Time Id Actor Duration 36 173 vehicle.nissan.patrol 336 75 214 vehicle.chevrolet.impala 295 302 143 vehicle.bmw.grandtourer 67 Frames: 6985 Duration: 374 seconds \u8f66\u8f86 173 \u5728 36 \u79d2\u65f6\u505c\u6b62 336 \u79d2\u3002\u5728\u7b2c\u4e8c\u4e2a 36 \u4e4b\u524d\u51e0\u79d2\u949f\u91cd\u65b0\u6a21\u62df\u4ee5\u68c0\u67e5\u5b83\u3002 client.replay_file(\"col3.log\", 34, 0, 173) \u793a\u4f8b python \u811a\u672c PythonAPI/examples \u4e2d\u63d0\u4f9b\u7684\u4e00\u4e9b\u811a\u672c\u6709\u52a9\u4e8e\u8bb0\u5f55\u5668\u7684\u4f7f\u7528\u3002 start_recording.py \u5f00\u59cb\u5f55\u5236\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5f55\u5236\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5f00\u59cb\u65f6\u751f\u6210\u6f14\u5458\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -n \uff08\u53ef\u9009\uff09 \u4ea7\u751f\u7684\u8f66\u8f86\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 -t \uff08\u53ef\u9009\uff09 \u5f55\u5236\u7684\u6301\u7eed\u65f6\u95f4\u3002 start_replaying.py \u5f00\u59cb\u64ad\u653e\u5f55\u97f3\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5f00\u59cb\u65f6\u95f4\u3001\u6301\u7eed\u65f6\u95f4\u548c\u8981\u8ddf\u968f\u7684\u6f14\u5458\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -s \uff08\u53ef\u9009\uff09 \u8d77\u59cb\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 -d (\u53ef\u9009) \u671f\u95f4\u3002\u9ed8\u8ba4\u4e3a\u5168\u90e8\u3002 -c \uff08\u53ef\u9009\uff09 \u8981\u5173\u6ce8\u7684\u6f14\u5458\u7684 ID\u3002 show_recorder_file_info.py \u663e\u793a\u5f55\u5236\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4ec5\u663e\u793a\u8bb0\u5f55\u4e8b\u4ef6\u7684\u5e27\u3002\u4f46\u662f\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u663e\u793a\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -s \uff08\u53ef\u9009\uff09 \u6807\u8bb0\u4ee5\u663e\u793a\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002 show_recorder_collisions.py \u663e\u793a\u7c7b\u578b\u4e3a A \u548c B \u7684\u6f14\u5458\u7684\u4e24\u4e2a\u6807\u5fd7\u4e4b\u95f4\u8bb0\u5f55\u7684\u78b0\u649e\u3002 -t = vv \u5c06\u663e\u793a\u8f66\u8f86\u4e4b\u95f4\u7684\u6240\u6709\u78b0\u649e\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -t \u76f8\u5173\u89d2\u8272\u7684\u6807\u5fd7\u3002 h = hero v = vehicle w = walker t = traffic light o = other a = any show_recorder_actors_blocked.py \u5217\u51fa\u88ab\u8ba4\u4e3a\u88ab\u963b\u6b62\u7684\u8f66\u8f86\u3002\u5982\u679c\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u79fb\u52a8\u6700\u5c0f\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a Actors \u88ab\u963b\u6321\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -t \uff08\u53ef\u9009\uff09 \u662f\u65f6\u5019\u5728\u88ab\u8ba4\u4e3a\u88ab\u963b\u585e\u4e4b\u524d\u79fb\u52a8 -d \u4e86\u3002 -d (\u53ef\u9009) \u79fb\u52a8\u8ddd\u79bb\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u963b\u585e\u3002 \u73b0\u5728\u662f\u8bd5\u9a8c\u4e00\u6bb5\u65f6\u95f4\u7684\u65f6\u5019\u4e86\u3002\u4f7f\u7528\u8bb0\u5f55\u5668\u56de\u653e\u6a21\u62df\u3001\u8ffd\u6eaf\u4e8b\u4ef6\u3001\u8fdb\u884c\u66f4\u6539\u4ee5\u67e5\u770b\u65b0\u7ed3\u679c\u3002\u5728 CARLA \u8bba\u575b\u4e0a\u5c31\u6b64\u4e8b\u53d1\u8868\u610f\u89c1\u3002 CARLA\u8bba\u575b","title":"\u8bb0\u5f55\u5668"},{"location":"adv_recorder/#recorder","text":"\u6b64\u529f\u80fd\u5141\u8bb8\u8bb0\u5f55\u548c\u91cd\u65b0\u5236\u5b9a\u4ee5\u524d\u7684\u6a21\u62df\u3002\u6240\u6709\u53d1\u751f\u7684\u4e8b\u4ef6\u90fd\u8bb0\u5f55\u5728 recorder file \u4e2d\u3002\u6709\u4e00\u4e9b\u9ad8\u7ea7\u67e5\u8be2\u53ef\u4ee5\u8ddf\u8e2a\u548c\u7814\u7a76\u8fd9\u4e9b\u4e8b\u4ef6\u3002 Recording \u6a21\u62df\u64ad\u653e \u8bbe\u7f6e\u65f6\u95f4\u56e0\u5b50 \u5f55\u5236\u6587\u4ef6 \u67e5\u8be2 \u78b0\u649e \u88ab\u56f0\u4f4f\u7684\u89d2\u8272 \u793a\u4f8b Python \u811a\u672c","title":"Recorder"},{"location":"adv_recorder/#recording","text":"\u6240\u6709\u6570\u636e\u4ec5\u5199\u5165\u670d\u52a1\u5668\u7aef\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u4f7f\u7528 carla.Client \u7ba1\u7406\u8bb0\u5f55\u5668\u3002 \u6839\u636e\u8bb0\u5f55\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6570\u636e\uff0c\u6bcf\u5e27\u66f4\u65b0\u89d2\u8272\u3002\u5f53\u524d\u6a21\u62df\u4e2d\u51fa\u73b0\u5728\u5f55\u5236\u4e2d\u7684 Actor \u5c06\u88ab\u79fb\u52a8\u6216\u91cd\u65b0\u751f\u6210\u4ee5\u6a21\u62df\u5b83\u3002\u90a3\u4e9b\u6ca1\u6709\u51fa\u73b0\u5728\u5f55\u97f3\u4e2d\u7684\u5c06\u7ee7\u7eed\u4ed6\u4eec\u7684\u65b9\u5f0f\uff0c\u5c31\u597d\u50cf\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u4e00\u6837\u3002 \uff01\uff01\uff01\u91cd\u8981\u7684 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u4f46 \u884c\u4eba\u5c06\u505c\u6b62 \u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u5305\u62ec\u6709\u5173\u8bb8\u591a\u4e0d\u540c\u5143\u7d20\u7684\u4fe1\u606f\u3002 \u89d2\u8272 \u2014 \u521b\u5efa\u548c\u9500\u6bc1\u3001\u8fb9\u754c\u548c\u89e6\u53d1\u6846\u3002 \u4ea4\u901a\u706f \u2014 \u72b6\u6001\u53d8\u5316\u548c\u65f6\u95f4\u8bbe\u7f6e\u3002 \u8f66\u8f86 \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\u3001\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u5149\u72b6\u6001\u548c\u7269\u7406\u63a7\u5236\u3002 \u884c\u4eba \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4ee5\u53ca\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3002 \u706f\u5149 \u2014 \u6765\u81ea\u5efa\u7b51\u7269\u3001\u8857\u9053\u548c\u8f66\u8f86\u7684\u706f\u5149\u72b6\u6001\u3002 \u8981\u5f00\u59cb\u5f55\u5236\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u5728\u6587\u4ef6\u540d\u4e2d\u4f7f\u7528 \\ \u3001 / \u6216 : \u5b57\u7b26\u4f1a\u5c06\u5176\u5b9a\u4e49\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u7684\u8def\u5f84\uff0c\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 CarlaUE4/Saved \u4e2d\u3002 client.start_recorder(\"/home/carla/recording01.log\") \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bb0\u5f55\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u5b58\u50a8\u56de\u653e\u6a21\u62df\u6240\u9700\u7684\u4fe1\u606f\u3002\u4e3a\u4e86\u4fdd\u5b58\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5fc5\u987b\u5728\u5f00\u59cb\u5f55\u5236\u65f6\u914d\u7f6e\u53c2\u6570 additional_data \u3002 client.start_recorder(\"/home/carla/recording01.log\", True) \u7b14\u8bb0 \u5176\u4ed6\u6570\u636e\u5305\u62ec\uff1a\u8f66\u8f86\u548c\u884c\u4eba\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u7ea2\u7eff\u706f\u65f6\u95f4\u8bbe\u7f6e\u3001\u6267\u884c\u65f6\u95f4\u3001\u6f14\u5458\u7684\u89e6\u53d1\u5668\u548c\u8fb9\u754c\u6846\uff0c\u4ee5\u53ca\u8f66\u8f86\u7684\u7269\u7406\u63a7\u5236\u3002 \u8981\u505c\u6b62\u5f55\u97f3\uff0c\u8c03\u7528\u4e5f\u5f88\u7b80\u5355\u3002 client.stop_recorder() \u7b14\u8bb0 \u636e\u4f30\u8ba1\uff0c50 \u4e2a\u7ea2\u7eff\u706f\u548c 100 \u8f86\u8f66\u7684 1 \u5c0f\u65f6\u8bb0\u5f55\u5927\u7ea6\u9700\u8981 200MB \u5927\u5c0f\u3002","title":"Recording"},{"location":"adv_recorder/#_1","text":"\u53ef\u4ee5\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u65f6\u5019\u5f00\u59cb\u64ad\u653e\u3002\u9664\u4e86\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 client.replay_file(\"recording01.log\", start, duration, camera) \u53c2\u6570 \u8bf4\u660e \u7b14\u8bb0 \u5f00\u59cb \u4ee5\u79d2\u4e3a\u5355\u4f4d\u8bb0\u5f55\u5f00\u59cb\u6a21\u62df\u7684\u65f6\u95f4\u3002 \u5982\u679c\u662f\u80af\u5b9a\u7684\uff0c\u65f6\u95f4\u5c06\u4ece\u8bb0\u5f55\u5f00\u59cb\u8ba1\u7b97\u3002 \u5982\u679c\u662f\u5426\u5b9a\u7684\uff0c\u5c06\u4ece\u6700\u540e\u8003\u8651\u3002 \u6301\u7eed\u65f6\u95f4 \u64ad\u653e\u79d2\u6570\u3002 0 \u662f\u6240\u6709\u7684\u5f55\u97f3\u3002 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u884c\u4eba\u5c06\u505c\u6b62\u3002 \u76f8\u673a \u76f8\u673a\u5c06\u805a\u7126\u7684\u6f14\u5458\u7684 ID\u3002 \u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c0\u201d\u4ee5\u8ba9\u89c2\u4f17\u81ea\u7531\u79fb\u52a8\u3002","title":"\u6a21\u62df\u64ad\u653e"},{"location":"adv_recorder/#_2","text":"\u65f6\u95f4\u56e0\u7d20\u5c06\u51b3\u5b9a\u64ad\u653e\u901f\u5ea6\u3002\u5b83\u53ef\u4ee5\u968f\u65f6\u66f4\u6539\u800c\u65e0\u9700\u505c\u6b62\u56de\u653e\u3002 client.set_replayer_time_factor(2.0) \u53c2\u6570 \u9ed8\u8ba4 \u5feb\u52a8\u4f5c \u6162\u52a8\u4f5c time_factor 1.0 >1.0 ** <1.0 ** \u91cd\u8981\u7684 \u5982\u679c time_factor>2.0 \uff0cactors \u7684\u4f4d\u7f6e\u63d2\u503c\u88ab\u7981\u7528\u5e76\u4e14\u53ea\u662f\u66f4\u65b0\u3002\u884c\u4eba\u7684\u52a8\u753b\u4e0d\u53d7\u65f6\u95f4\u56e0\u7d20\u7684\u5f71\u54cd\u3002 \u5f53\u65f6\u95f4\u56e0\u7d20\u5728 20x \u5de6\u53f3\u65f6\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u6d41\u91cf\u3002","title":"\u8bbe\u7f6e\u65f6\u95f4\u56e0\u5b50"},{"location":"adv_recorder/#_3","text":"\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684 API \u8c03\u7528\u6765\u68c0\u7d22\u8bb0\u5f55\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ea\u68c0\u7d22\u6ce8\u518c\u4e8b\u4ef6\u7684\u90a3\u4e9b\u5e27\u3002\u8bbe\u7f6e\u53c2\u6570 show_all \u5c06\u8fd4\u56de\u6bcf\u4e00\u5e27\u7684\u6240\u6709\u4fe1\u606f\u3002\u5173\u4e8e\u5982\u4f55\u5b58\u50a8\u6570\u636e\u7684\u7ec6\u8282\u5728 recorder's reference \u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e\u3002 # \u663e\u793a\u76f8\u5173\u5e27\u7684\u4fe1\u606f print (client.show_recorder_file_info (\"recording01.log\")) \u5f00\u653e\u4fe1\u606f. \u8bb0\u5f55\u6a21\u62df\u7684\u5730\u56fe\u3001\u65e5\u671f\u548c\u65f6\u95f4\u3002 Frame information. \u4efb\u4f55\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u4f8b\u5982\u89d2\u8272\u751f\u6210\u6216\u78b0\u649e\u3002\u5b83\u5305\u542b\u6f14\u5458\u7684 ID \u548c\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002 \u5173\u95ed\u4fe1\u606f. \u8bb0\u5f55\u7684\u5e27\u6570\u548c\u603b\u65f6\u95f4\u3002 Version: 1 Map: Town05 Date: 02/21/19 10:46:20 Frame 1 at 0 seconds Create 2190: spectator (0) at (-260, -200, 382.001) Create 2191: traffic.traffic_light (3) at (4255, 10020, 0) Create 2192: traffic.traffic_light (3) at (4025, 7860, 0) ... Create 2258: traffic.speed_limit.90 (0) at (21651.7, -1347.59, 15) Create 2259: traffic.speed_limit.90 (0) at (5357, 21457.1, 15) Frame 2 at 0.0254253 seconds Create 2276: vehicle.mini.cooperst (1) at (4347.63, -8409.51, 120) number_of_wheels = 4 object_type = color = 255,241,0 role_name = autopilot ... Frame 2350 at 60.2805 seconds Destroy 2276 Frame 2351 at 60.3057 seconds Destroy 2277 ... Frames: 2354 Duration: 60.3753 seconds","title":"\u5f55\u5236\u6587\u4ef6"},{"location":"adv_recorder/#_4","text":"","title":"\u67e5\u8be2"},{"location":"adv_recorder/#_5","text":"\u8f66\u8f86\u5fc5\u987b\u6709\u4e00\u4e2a \u78b0\u649e\u68c0\u6d4b\u5668 \u4ee5\u8bb0\u5f55\u78b0\u649e\u3002\u8fd9\u4e9b\u53ef\u4ee5\u88ab\u67e5\u8be2\uff0c\u4f7f\u7528\u53c2\u6570\u6765\u8fc7\u6ee4\u78b0\u649e\u4e2d\u6d89\u53ca\u7684\u53c2\u4e0e\u8005\u7684\u7c7b\u578b\u3002\u4f8b\u5982\uff0c h \u6807\u8bc6 role_name = hero \u7684\u89d2\u8272\uff0c\u901a\u5e38\u5206\u914d\u7ed9\u7528\u6237\u7ba1\u7406\u7684\u8f66\u8f86\u3002\u6709\u4e00\u7ec4\u7279\u5b9a\u7684\u53c2\u4e0e\u8005\u7c7b\u578b\u53ef\u7528\u4e8e\u67e5\u8be2\u3002 h = Hero v = Vehicle w = Walker t = Traffic light o = Other a = Any \u7b14\u8bb0 manual_control.py \u811a\u672c\u4e3a \u81ea\u6211\u8f66\u8f86\u5206\u914d role_name = hero \u3002 \u78b0\u649e\u67e5\u8be2\u9700\u8981\u4e24\u4e2a\u6807\u5fd7\u6765\u8fc7\u6ee4\u78b0\u649e\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u663e\u793a\u8f66\u8f86\u4e0e\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u4e4b\u95f4\u7684\u78b0\u649e\u3002 print(client.show_recorder_collisions(\"recording01.log\",\"v\", \"a\")) \u8f93\u51fa\u603b\u7ed3\u4e86\u78b0\u649e\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u6240\u6d89\u53ca\u7684\u53c2\u4e0e\u8005\u7684\u7c7b\u578b\u3001ID \u548c\u63cf\u8ff0\u3002 Version: 1 Map: Town05 Date: 02/19/19 15:36:08 Time Types Id Actor 1 Id Actor 2 16 v v 122 vehicle.yamaha.yzf 118 vehicle.dodge_charger.police 27 v o 122 vehicle.yamaha.yzf 0 Frames: 790 Duration: 46 seconds \u91cd\u8981\u7684 \u56e0\u4e3a\u8bb0\u5f55\u78b0\u649e\u7684\u662f Hero \u6216 Ego \u8f66\u8f86\uff0c\u6240\u4ee5\u8fd9\u5c06\u59cb\u7ec8\u662f Actor 1 \u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8bb0\u5f55\u5668\u5e76\u5728\u4e8b\u4ef6\u53d1\u751f\u524d\u51e0\u79d2\u8bbe\u7f6e\u5b83\u6765\u91cd\u65b0\u5236\u5b9a\u78b0\u649e\u3002 client.replay_file(\"col2.log\", 13, 0, 122) \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56de\u653e\u663e\u793a\u4e86\u8fd9\u4e00\u70b9\u3002","title":"\u78b0\u649e"},{"location":"adv_recorder/#_6","text":"\u68c0\u6d4b\u5728\u5f55\u5236\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u7684\u8f66\u8f86\u3002\u5982\u679c\u89d2\u8272\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u79fb\u52a8\u6700\u5c0f\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a\u5b83\u88ab\u963b\u585e\u3002\u8be5\u5b9a\u4e49\u7531\u7528\u6237\u5728\u67e5\u8be2\u671f\u95f4\u8fdb\u884c\u3002 print(client.show_recorder_actors_blocked(\"recording01.log\", min_time, min_distance)) \u53c2\u6570 \u8bf4\u660e \u9ed8\u8ba4 min_time \u79fb\u52a8\u7684\u6700\u5c0f\u79d2\u6570`min_distance`\u3002 30 \u79d2\u3002 min_distance \u79fb\u52a8\u7684\u6700\u5c0f\u5398\u7c73\u6570\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u963b\u585e\u3002 10\u5398\u7c73\u3002 \u7b14\u8bb0 \u6709\u65f6\u8f66\u8f86\u5728\u7ea2\u7eff\u706f\u5904\u505c\u7559\u7684\u65f6\u95f4\u6bd4\u9884\u671f\u7684\u8981\u957f\u3002 \u4ee5\u4e0b\u793a\u4f8b\u8003\u8651\u8f66\u8f86\u5728 60 \u79d2\u5185\u79fb\u52a8\u4e0d\u5230 1 \u7c73\u65f6\u88ab\u5361\u4f4f\u3002 client.show_recorder_actors_blocked(\"col3.log\", 60, 100) \u8f93\u51fa\u5df2\u6392\u5e8f \u7531 duration \u8868\u793a\uff0c\u5b83\u8bf4\u660e\u4e86\u505c\u6b62\u88ab\u201c\u963b\u585e\u201d\u5e76\u79fb\u52a8 min_distance \u9700\u8981\u591a\u957f\u65f6\u95f4\u3002 Version: 1 Map: Town05 Date: 02/19/19 15:45:01 Time Id Actor Duration 36 173 vehicle.nissan.patrol 336 75 214 vehicle.chevrolet.impala 295 302 143 vehicle.bmw.grandtourer 67 Frames: 6985 Duration: 374 seconds \u8f66\u8f86 173 \u5728 36 \u79d2\u65f6\u505c\u6b62 336 \u79d2\u3002\u5728\u7b2c\u4e8c\u4e2a 36 \u4e4b\u524d\u51e0\u79d2\u949f\u91cd\u65b0\u6a21\u62df\u4ee5\u68c0\u67e5\u5b83\u3002 client.replay_file(\"col3.log\", 34, 0, 173)","title":"\u88ab\u5361\u4f4f\u7684\u89d2\u8272"},{"location":"adv_recorder/#python","text":"PythonAPI/examples \u4e2d\u63d0\u4f9b\u7684\u4e00\u4e9b\u811a\u672c\u6709\u52a9\u4e8e\u8bb0\u5f55\u5668\u7684\u4f7f\u7528\u3002 start_recording.py \u5f00\u59cb\u5f55\u5236\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5f55\u5236\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5f00\u59cb\u65f6\u751f\u6210\u6f14\u5458\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -n \uff08\u53ef\u9009\uff09 \u4ea7\u751f\u7684\u8f66\u8f86\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 -t \uff08\u53ef\u9009\uff09 \u5f55\u5236\u7684\u6301\u7eed\u65f6\u95f4\u3002 start_replaying.py \u5f00\u59cb\u64ad\u653e\u5f55\u97f3\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5f00\u59cb\u65f6\u95f4\u3001\u6301\u7eed\u65f6\u95f4\u548c\u8981\u8ddf\u968f\u7684\u6f14\u5458\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -s \uff08\u53ef\u9009\uff09 \u8d77\u59cb\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 -d (\u53ef\u9009) \u671f\u95f4\u3002\u9ed8\u8ba4\u4e3a\u5168\u90e8\u3002 -c \uff08\u53ef\u9009\uff09 \u8981\u5173\u6ce8\u7684\u6f14\u5458\u7684 ID\u3002 show_recorder_file_info.py \u663e\u793a\u5f55\u5236\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4ec5\u663e\u793a\u8bb0\u5f55\u4e8b\u4ef6\u7684\u5e27\u3002\u4f46\u662f\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u663e\u793a\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -s \uff08\u53ef\u9009\uff09 \u6807\u8bb0\u4ee5\u663e\u793a\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002 show_recorder_collisions.py \u663e\u793a\u7c7b\u578b\u4e3a A \u548c B \u7684\u6f14\u5458\u7684\u4e24\u4e2a\u6807\u5fd7\u4e4b\u95f4\u8bb0\u5f55\u7684\u78b0\u649e\u3002 -t = vv \u5c06\u663e\u793a\u8f66\u8f86\u4e4b\u95f4\u7684\u6240\u6709\u78b0\u649e\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -t \u76f8\u5173\u89d2\u8272\u7684\u6807\u5fd7\u3002 h = hero v = vehicle w = walker t = traffic light o = other a = any show_recorder_actors_blocked.py \u5217\u51fa\u88ab\u8ba4\u4e3a\u88ab\u963b\u6b62\u7684\u8f66\u8f86\u3002\u5982\u679c\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u79fb\u52a8\u6700\u5c0f\u8ddd\u79bb\uff0c\u5219\u8ba4\u4e3a Actors \u88ab\u963b\u6321\u3002 \u53c2\u6570 \u8bf4\u660e -f \u6587\u4ef6\u540d\u3002 -t \uff08\u53ef\u9009\uff09 \u662f\u65f6\u5019\u5728\u88ab\u8ba4\u4e3a\u88ab\u963b\u585e\u4e4b\u524d\u79fb\u52a8 -d \u4e86\u3002 -d (\u53ef\u9009) \u79fb\u52a8\u8ddd\u79bb\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u963b\u585e\u3002 \u73b0\u5728\u662f\u8bd5\u9a8c\u4e00\u6bb5\u65f6\u95f4\u7684\u65f6\u5019\u4e86\u3002\u4f7f\u7528\u8bb0\u5f55\u5668\u56de\u653e\u6a21\u62df\u3001\u8ffd\u6eaf\u4e8b\u4ef6\u3001\u8fdb\u884c\u66f4\u6539\u4ee5\u67e5\u770b\u65b0\u7ed3\u679c\u3002\u5728 CARLA \u8bba\u575b\u4e0a\u5c31\u6b64\u4e8b\u53d1\u8868\u610f\u89c1\u3002 CARLA\u8bba\u575b","title":"\u793a\u4f8b python \u811a\u672c"},{"location":"adv_rendering_options/","text":"\u6e32\u67d3\u9009\u9879 \u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Carla \u4e2d\u53ef\u7528\u7684\u4e0d\u540c\u6e32\u67d3\u9009\u9879\uff0c\u5305\u62ec\u8d28\u91cf\u7ea7\u522b\u3001\u65e0\u6e32\u67d3\u6a21\u5f0f\u548c\u79bb\u5c4f\u6a21\u5f0f\u3002\u5b83\u8fd8\u89e3\u91ca\u4e86 Carla 0.9.12 \u7248\u672c\u5728\u8fd9\u4e9b\u65b9\u9762\u4e0e\u4ee5\u524d\u7248\u672c\u7684\u4e0d\u540c\u4e4b\u5904\u3002 \u56fe\u5f62\u8d28\u91cf Vulkan \u56fe\u5f62 API \u8d28\u91cf\u7b49\u7ea7 \u65e0\u6e32\u67d3\u6a21\u5f0f \u79bb\u5c4f\u6a21\u5f0f \u79bb\u5c4f\u4e0e\u65e0\u6e32\u67d3 \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff08\u7248\u672c0.9.12+\uff09) \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff080.9.12\u4e4b\u524d\u7684\u7248\u672c\uff09 \u91cd\u8981 \u4e0b\u9762\u7684\u4e00\u4e9b\u547d\u4ee4\u9009\u9879\u5728 Carla \u6253\u5305\u7248\u672c\u4e2d\u5e76\u4e0d\u7b49\u6548\u3002\u8bf7\u9605\u8bfb \u547d\u4ee4\u884c\u9009\u9879 \u90e8\u5206\u4ee5\u4e86\u89e3\u6709\u5173\u6b64\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u56fe\u5f62\u8d28\u91cf Vulkan \u56fe\u5f62 API \u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u5728\u865a\u5e7b\u5f15\u64ce 4.26\u4e0a\u8fd0\u884c\uff0c\u4ec5\u652f\u6301 Vulkan \u56fe\u5f62API\u3002\u4ee5\u524d\u7248\u672c\u7684 Carla \u53ef\u4ee5\u914d\u7f6e\u4e3a\u4f7f\u7528 OpenGL\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u65e9\u671f\u7248\u672c\uff0c\u8bf7\u5728\u5c4f\u5e55\u53f3\u4e0b\u89d2\u9009\u62e9\u76f8\u5e94\u7684\u6587\u6863\u7248\u672c\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u8d28\u91cf\u7b49\u7ea7 CARLA \u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u56fe\u5f62\u8d28\u91cf\u7ea7\u522b\u3002 Epic \u662f\u9ed8\u8ba4\u7684\u5e76\u4e14\u662f\u6700\u8be6\u7ec6\u7684\u3002 Low \u4f1a\u7981\u7528\u6240\u6709\u540e\u5904\u7406\u548c\u9634\u5f71\uff0c\u5e76\u4e14\u7ed8\u56fe\u8ddd\u79bb\u8bbe\u7f6e\u4e3a 50m \u800c\u4e0d\u662f\u65e0\u9650\u3002 \u6a21\u62df\u5728 Low \u6a21\u5f0f\u4e0b\u8fd0\u884c\u901f\u5ea6\u660e\u663e\u66f4\u5feb\u3002\u8fd9\u5728\u5b58\u5728\u6280\u672f\u9650\u5236\u3001\u7cbe\u5ea6\u4e0d\u91cd\u8981\u7684\u60c5\u51b5\u4e0b\u6216\u8005\u5728\u5177\u6709\u66f4\u7b80\u5355\u6570\u636e\u6216\u4ec5\u6d89\u53ca\u63a5\u8fd1\u5143\u7d20\u7684\u6761\u4ef6\u4e0b\u8bad\u7ec3\u4ee3\u7406\u7684\u60c5\u51b5\u4e0b\u5f88\u6709\u5e2e\u52a9\u3002 \u4e0b\u56fe\u6bd4\u8f83\u4e86\u4e24\u79cd\u6a21\u5f0f\u3002Windows \u548c Linux \u6240\u4f7f\u7528\u7684\u6807\u5fd7\u662f\u76f8\u540c\u7684\u3002\u4f7f\u7528\u6784\u5efa\u65f6\u6ca1\u6709\u7b49\u6548\u9009\u9879\uff0c\u4f46\u865a\u5e7b\u7f16\u8f91\u5668\u6709\u81ea\u5df1\u7684\u8d28\u91cf\u8bbe\u7f6e\u3002\u8bbf\u95ee Settings/Engine Scalability Settings \u4ee5\u83b7\u5f97\u6240\u9700\u8d28\u91cf\u7684\u66f4\u5927\u5b9a\u5236\u3002 \u53f2\u8bd7\u6a21\u5f0f ./CarlaUE4.sh -quality-level=Epic \u53f2\u8bd7\u6a21\u5f0f\u622a\u56fe \u4f4e\u8d28\u91cf\u6a21\u5f0f ./CarlaUE4.sh -quality-level=Low \u4f4e\u8d28\u91cf\u6a21\u5f0f\u622a\u56fe \u91cd\u8981 \u5bfc\u81f4\u53f2\u8bd7\u6a21\u5f0f\u663e\u793a\u5f02\u5e38\u767d\u5ea6\u7684\u95ee\u9898\u5df2\u5f97\u5230\u4fee\u590d\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5220\u9664 GameUserSettings.ini \u3002\u5b83\u6b63\u5728\u4fdd\u5b58\u4ee5\u524d\u7684\u8bbe\u7f6e\uff0c\u5e76\u5c06\u5728\u4e0b\u6b21\u8fd0\u884c\u65f6\u518d\u6b21\u751f\u6210\u3002 Ubuntu \u8def\u5f84\uff1a ~/.config/Epic/CarlaUE4/Saved/Config/LinuxNoEditor/ Windows \u8def\u5f84\uff1a <Package folder>\\WindowsNoEditor\\CarlaUE4\\Saved\\Config\\WindowsNoEditor\\ \u65e0\u6e32\u67d3\u6a21\u5f0f \u6b64\u6a21\u5f0f\u7981\u7528\u6e32\u67d3\u3002\u865a\u5e7b\u5f15\u64ce\u5c06\u8df3\u8fc7\u6709\u5173\u56fe\u5f62\u7684\u6240\u6709\u5185\u5bb9\u3002\u6b64\u6a21\u5f0f\u53ef\u9632\u6b62\u6e32\u67d3\u5f00\u9500\u3002\u5b83\u6709\u5229\u4e8e\u5927\u91cf\u4ea4\u901a\u6a21\u62df\u548c\u975e\u5e38\u9ad8\u9891\u7387\u7684\u9053\u8def\u884c\u4e3a\u3002\u8981\u542f\u7528\u6216\u7981\u7528\u65e0\u6e32\u67d3\u6a21\u5f0f\uff0c\u8bf7\u66f4\u6539\u4e16\u754c\u8bbe\u7f6e\uff0c\u6216\u4f7f\u7528 /PythonAPI/util/config.py \u3002 \u4ee5\u4e0b\u662f\u5982\u4f55\u901a\u8fc7\u811a\u672c\u542f\u7528\u548c\u7981\u7528\u5b83\u7684\u793a\u4f8b\uff1a settings = world.get_settings() settings.no_rendering_mode = True world.apply_settings(settings) ... settings.no_rendering_mode = False world.apply_settings(settings) \u8981\u901a\u8fc7\u547d\u4ee4\u884c\u7981\u7528\u548c\u542f\u7528\u6e32\u67d3\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cd PythonAPI/util && python3 config.py --no-rendering cd PythonAPI/util && python3 config.py --rendering \u811a\u672c PythonAPI/examples/no_rendering_mode.py \u5c06\u542f\u7528\u65e0\u6e32\u67d3\u6a21\u5f0f\uff0c\u5e76\u4f7f\u7528\u7b80\u5355\u56fe\u5f62\u5229\u7528 Pygame \u521b\u5efa\u9e1f\u77b0\u56fe\uff1a cd PythonAPI/examples && python3 no_rendering_mode.py \u8b66\u544a \u5728\u65e0\u6e32\u67d3\u6a21\u5f0f\u4e0b\uff0c\u76f8\u673a\u548c GPU \u4f20\u611f\u5668\u5c06\u8fd4\u56de\u7a7a\u6570\u636e\u3002\u4e0d\u4f7f\u7528 GPU\u3002\u865a\u5e7b\u5f15\u64ce\u672a\u7ed8\u5236\u4efb\u4f55\u573a\u666f\u3002 \u79bb\u5c4f\u6a21\u5f0f \u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u5728\u865a\u5e7b\u5f15\u64ce 4.26 \u4e0a\u8fd0\u884c\uff0c\u8be5\u5f15\u64ce\u5f15\u5165\u4e86\u5bf9\u79bb\u5c4f\u6e32\u67d3\u7684\u652f\u6301\u3002\u5728 Carla \u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u79bb\u5c4f\u6e32\u67d3\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u56fe\u5f62 API\u3002 \u79bb\u5c4f\u4e0e\u65e0\u6e32\u67d3 \u4e86\u89e3\u65e0\u6e32\u67d3\u6a21\u5f0f( no-rendering mode )\u548c\u79bb\u5c4f\u6a21\u5f0f( off-screen mode )\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u91cd\u8981\uff1a \u65e0\u6e32\u67d3\u6a21\u5f0f\uff1a \u865a\u5e7b\u5f15\u64ce\u4e0d\u6e32\u67d3\u4efb\u4f55\u5185\u5bb9\u3002\u56fe\u5f62\u4e0d\u88ab\u8ba1\u7b97\u3002\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u8fd4\u56de\u7a7a\u6570\u636e\u3002 \u79bb\u5c4f\u6a21\u5f0f\uff1a \u865a\u5e7b\u5f15\u64ce\u6b63\u5e38\u5de5\u4f5c\uff0c\u8ba1\u7b97\u6e32\u67d3\uff0c\u4f46\u6ca1\u6709\u53ef\u7528\u7684\u663e\u793a\u3002\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u8fd4\u56de\u6570\u636e\u3002 \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff08\u7248\u672c0.9.12+\uff09 \u8981\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u542f\u52a8 CARLA\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -RenderOffScreen \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff080.9.12\u4e4b\u524d\u7684\u7248\u672c\uff09 \u5982\u679c\u60a8\u4f7f\u7528 OpenGL \u6216 Vulkan\uff0c\u5219\u4f7f\u7528\u79bb\u5c4f\u6a21\u5f0f\u4f1a\u6709\u6240\u4e0d\u540c\u3002 \u4f7f\u7528 OpenGL \uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5728 Linux \u4e2d\u4ee5\u79bb\u5c4f\u6a21\u5f0f\u8fd0\u884c\uff1a # Linux DISPLAY= ./CarlaUE4.sh -opengl Vulkan \u9700\u8981\u989d\u5916\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4f7f\u7528 X11 \u7f51\u7edc\u534f\u8bae\u4e0e\u663e\u793a X \u670d\u52a1\u5668\u901a\u4fe1\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u8bbe\u7f6e\u6ca1\u6709\u663e\u793a\u5c4f\u7684 Ubuntu 18.04 \u8ba1\u7b97\u673a\uff0c\u4ee5\u4fbf Carla \u53ef\u4ee5\u4e0e Vulkan \u4e00\u8d77\u8fd0\u884c\u3002 1. \u83b7\u53d6\u6700\u65b0\u7684 NVIDIA \u9a71\u52a8\u7a0b\u5e8f\uff1a wget http://download.nvidia.com/XFree86/Linux-x86_64/450.57/NVIDIA-Linux-x86_64-450.57.run 2. \u5b89\u88c5\u9a71\u52a8\uff1a sudo /bin/bash NVIDIA-Linux-x86_64-450.57.run --accept-license --no-questions --ui=none 3. \u5b89\u88c5 xserver \u76f8\u5173\u4f9d\u8d56\uff1a sudo apt-get install -y xserver-xorg mesa-utils libvulkan1 4. \u914d\u7f6e xserver\uff1a sudo nvidia-xconfig --preserve-busid -a --virtual=1280x1024 5. \u8bbe\u7f6e SDL_VIDEODRIVER \u53d8\u91cf\u3002 ENV SDL_VIDEODRIVER=x11 6. \u8fd0\u884c xserver\uff1a sudo X :0 & 7. \u8fd0\u884c Carla\uff1a DISPLAY=:0.GPU ./CarlaUE4.sh -vulkan Carla \u5728 \u8fd9\u91cc \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6267\u884c\u4e0a\u8ff0\u6240\u6709\u6b65\u9aa4\u7684 Dockerfile \u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u6216\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 Carla \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u6e32\u67d3\u9009\u9879"},{"location":"adv_rendering_options/#_1","text":"\u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Carla \u4e2d\u53ef\u7528\u7684\u4e0d\u540c\u6e32\u67d3\u9009\u9879\uff0c\u5305\u62ec\u8d28\u91cf\u7ea7\u522b\u3001\u65e0\u6e32\u67d3\u6a21\u5f0f\u548c\u79bb\u5c4f\u6a21\u5f0f\u3002\u5b83\u8fd8\u89e3\u91ca\u4e86 Carla 0.9.12 \u7248\u672c\u5728\u8fd9\u4e9b\u65b9\u9762\u4e0e\u4ee5\u524d\u7248\u672c\u7684\u4e0d\u540c\u4e4b\u5904\u3002 \u56fe\u5f62\u8d28\u91cf Vulkan \u56fe\u5f62 API \u8d28\u91cf\u7b49\u7ea7 \u65e0\u6e32\u67d3\u6a21\u5f0f \u79bb\u5c4f\u6a21\u5f0f \u79bb\u5c4f\u4e0e\u65e0\u6e32\u67d3 \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff08\u7248\u672c0.9.12+\uff09) \u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff080.9.12\u4e4b\u524d\u7684\u7248\u672c\uff09 \u91cd\u8981 \u4e0b\u9762\u7684\u4e00\u4e9b\u547d\u4ee4\u9009\u9879\u5728 Carla \u6253\u5305\u7248\u672c\u4e2d\u5e76\u4e0d\u7b49\u6548\u3002\u8bf7\u9605\u8bfb \u547d\u4ee4\u884c\u9009\u9879 \u90e8\u5206\u4ee5\u4e86\u89e3\u6709\u5173\u6b64\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f\u3002","title":"\u6e32\u67d3\u9009\u9879"},{"location":"adv_rendering_options/#_2","text":"","title":"\u56fe\u5f62\u8d28\u91cf"},{"location":"adv_rendering_options/#vulkan-api","text":"\u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u5728\u865a\u5e7b\u5f15\u64ce 4.26\u4e0a\u8fd0\u884c\uff0c\u4ec5\u652f\u6301 Vulkan \u56fe\u5f62API\u3002\u4ee5\u524d\u7248\u672c\u7684 Carla \u53ef\u4ee5\u914d\u7f6e\u4e3a\u4f7f\u7528 OpenGL\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u65e9\u671f\u7248\u672c\uff0c\u8bf7\u5728\u5c4f\u5e55\u53f3\u4e0b\u89d2\u9009\u62e9\u76f8\u5e94\u7684\u6587\u6863\u7248\u672c\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"Vulkan \u56fe\u5f62 API"},{"location":"adv_rendering_options/#_3","text":"CARLA \u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u56fe\u5f62\u8d28\u91cf\u7ea7\u522b\u3002 Epic \u662f\u9ed8\u8ba4\u7684\u5e76\u4e14\u662f\u6700\u8be6\u7ec6\u7684\u3002 Low \u4f1a\u7981\u7528\u6240\u6709\u540e\u5904\u7406\u548c\u9634\u5f71\uff0c\u5e76\u4e14\u7ed8\u56fe\u8ddd\u79bb\u8bbe\u7f6e\u4e3a 50m \u800c\u4e0d\u662f\u65e0\u9650\u3002 \u6a21\u62df\u5728 Low \u6a21\u5f0f\u4e0b\u8fd0\u884c\u901f\u5ea6\u660e\u663e\u66f4\u5feb\u3002\u8fd9\u5728\u5b58\u5728\u6280\u672f\u9650\u5236\u3001\u7cbe\u5ea6\u4e0d\u91cd\u8981\u7684\u60c5\u51b5\u4e0b\u6216\u8005\u5728\u5177\u6709\u66f4\u7b80\u5355\u6570\u636e\u6216\u4ec5\u6d89\u53ca\u63a5\u8fd1\u5143\u7d20\u7684\u6761\u4ef6\u4e0b\u8bad\u7ec3\u4ee3\u7406\u7684\u60c5\u51b5\u4e0b\u5f88\u6709\u5e2e\u52a9\u3002 \u4e0b\u56fe\u6bd4\u8f83\u4e86\u4e24\u79cd\u6a21\u5f0f\u3002Windows \u548c Linux \u6240\u4f7f\u7528\u7684\u6807\u5fd7\u662f\u76f8\u540c\u7684\u3002\u4f7f\u7528\u6784\u5efa\u65f6\u6ca1\u6709\u7b49\u6548\u9009\u9879\uff0c\u4f46\u865a\u5e7b\u7f16\u8f91\u5668\u6709\u81ea\u5df1\u7684\u8d28\u91cf\u8bbe\u7f6e\u3002\u8bbf\u95ee Settings/Engine Scalability Settings \u4ee5\u83b7\u5f97\u6240\u9700\u8d28\u91cf\u7684\u66f4\u5927\u5b9a\u5236\u3002","title":"\u8d28\u91cf\u7b49\u7ea7"},{"location":"adv_rendering_options/#_4","text":"./CarlaUE4.sh -quality-level=Epic \u53f2\u8bd7\u6a21\u5f0f\u622a\u56fe","title":"\u53f2\u8bd7\u6a21\u5f0f"},{"location":"adv_rendering_options/#_5","text":"./CarlaUE4.sh -quality-level=Low \u4f4e\u8d28\u91cf\u6a21\u5f0f\u622a\u56fe \u91cd\u8981 \u5bfc\u81f4\u53f2\u8bd7\u6a21\u5f0f\u663e\u793a\u5f02\u5e38\u767d\u5ea6\u7684\u95ee\u9898\u5df2\u5f97\u5230\u4fee\u590d\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5220\u9664 GameUserSettings.ini \u3002\u5b83\u6b63\u5728\u4fdd\u5b58\u4ee5\u524d\u7684\u8bbe\u7f6e\uff0c\u5e76\u5c06\u5728\u4e0b\u6b21\u8fd0\u884c\u65f6\u518d\u6b21\u751f\u6210\u3002 Ubuntu \u8def\u5f84\uff1a ~/.config/Epic/CarlaUE4/Saved/Config/LinuxNoEditor/ Windows \u8def\u5f84\uff1a <Package folder>\\WindowsNoEditor\\CarlaUE4\\Saved\\Config\\WindowsNoEditor\\","title":"\u4f4e\u8d28\u91cf\u6a21\u5f0f"},{"location":"adv_rendering_options/#_6","text":"\u6b64\u6a21\u5f0f\u7981\u7528\u6e32\u67d3\u3002\u865a\u5e7b\u5f15\u64ce\u5c06\u8df3\u8fc7\u6709\u5173\u56fe\u5f62\u7684\u6240\u6709\u5185\u5bb9\u3002\u6b64\u6a21\u5f0f\u53ef\u9632\u6b62\u6e32\u67d3\u5f00\u9500\u3002\u5b83\u6709\u5229\u4e8e\u5927\u91cf\u4ea4\u901a\u6a21\u62df\u548c\u975e\u5e38\u9ad8\u9891\u7387\u7684\u9053\u8def\u884c\u4e3a\u3002\u8981\u542f\u7528\u6216\u7981\u7528\u65e0\u6e32\u67d3\u6a21\u5f0f\uff0c\u8bf7\u66f4\u6539\u4e16\u754c\u8bbe\u7f6e\uff0c\u6216\u4f7f\u7528 /PythonAPI/util/config.py \u3002 \u4ee5\u4e0b\u662f\u5982\u4f55\u901a\u8fc7\u811a\u672c\u542f\u7528\u548c\u7981\u7528\u5b83\u7684\u793a\u4f8b\uff1a settings = world.get_settings() settings.no_rendering_mode = True world.apply_settings(settings) ... settings.no_rendering_mode = False world.apply_settings(settings) \u8981\u901a\u8fc7\u547d\u4ee4\u884c\u7981\u7528\u548c\u542f\u7528\u6e32\u67d3\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cd PythonAPI/util && python3 config.py --no-rendering cd PythonAPI/util && python3 config.py --rendering \u811a\u672c PythonAPI/examples/no_rendering_mode.py \u5c06\u542f\u7528\u65e0\u6e32\u67d3\u6a21\u5f0f\uff0c\u5e76\u4f7f\u7528\u7b80\u5355\u56fe\u5f62\u5229\u7528 Pygame \u521b\u5efa\u9e1f\u77b0\u56fe\uff1a cd PythonAPI/examples && python3 no_rendering_mode.py \u8b66\u544a \u5728\u65e0\u6e32\u67d3\u6a21\u5f0f\u4e0b\uff0c\u76f8\u673a\u548c GPU \u4f20\u611f\u5668\u5c06\u8fd4\u56de\u7a7a\u6570\u636e\u3002\u4e0d\u4f7f\u7528 GPU\u3002\u865a\u5e7b\u5f15\u64ce\u672a\u7ed8\u5236\u4efb\u4f55\u573a\u666f\u3002","title":"\u65e0\u6e32\u67d3\u6a21\u5f0f"},{"location":"adv_rendering_options/#_7","text":"\u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u5728\u865a\u5e7b\u5f15\u64ce 4.26 \u4e0a\u8fd0\u884c\uff0c\u8be5\u5f15\u64ce\u5f15\u5165\u4e86\u5bf9\u79bb\u5c4f\u6e32\u67d3\u7684\u652f\u6301\u3002\u5728 Carla \u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u79bb\u5c4f\u6e32\u67d3\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u56fe\u5f62 API\u3002","title":"\u79bb\u5c4f\u6a21\u5f0f"},{"location":"adv_rendering_options/#_8","text":"\u4e86\u89e3\u65e0\u6e32\u67d3\u6a21\u5f0f( no-rendering mode )\u548c\u79bb\u5c4f\u6a21\u5f0f( off-screen mode )\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u91cd\u8981\uff1a \u65e0\u6e32\u67d3\u6a21\u5f0f\uff1a \u865a\u5e7b\u5f15\u64ce\u4e0d\u6e32\u67d3\u4efb\u4f55\u5185\u5bb9\u3002\u56fe\u5f62\u4e0d\u88ab\u8ba1\u7b97\u3002\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u8fd4\u56de\u7a7a\u6570\u636e\u3002 \u79bb\u5c4f\u6a21\u5f0f\uff1a \u865a\u5e7b\u5f15\u64ce\u6b63\u5e38\u5de5\u4f5c\uff0c\u8ba1\u7b97\u6e32\u67d3\uff0c\u4f46\u6ca1\u6709\u53ef\u7528\u7684\u663e\u793a\u3002\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u8fd4\u56de\u6570\u636e\u3002","title":"\u79bb\u5c4f\u4e0e\u65e0\u6e32\u67d3"},{"location":"adv_rendering_options/#0912","text":"\u8981\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u542f\u52a8 CARLA\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./CarlaUE4.sh -RenderOffScreen","title":"\u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff08\u7248\u672c0.9.12+\uff09"},{"location":"adv_rendering_options/#0912_1","text":"\u5982\u679c\u60a8\u4f7f\u7528 OpenGL \u6216 Vulkan\uff0c\u5219\u4f7f\u7528\u79bb\u5c4f\u6a21\u5f0f\u4f1a\u6709\u6240\u4e0d\u540c\u3002 \u4f7f\u7528 OpenGL \uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5728 Linux \u4e2d\u4ee5\u79bb\u5c4f\u6a21\u5f0f\u8fd0\u884c\uff1a # Linux DISPLAY= ./CarlaUE4.sh -opengl Vulkan \u9700\u8981\u989d\u5916\u7684\u6b65\u9aa4\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4f7f\u7528 X11 \u7f51\u7edc\u534f\u8bae\u4e0e\u663e\u793a X \u670d\u52a1\u5668\u901a\u4fe1\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u8bbe\u7f6e\u6ca1\u6709\u663e\u793a\u5c4f\u7684 Ubuntu 18.04 \u8ba1\u7b97\u673a\uff0c\u4ee5\u4fbf Carla \u53ef\u4ee5\u4e0e Vulkan \u4e00\u8d77\u8fd0\u884c\u3002 1. \u83b7\u53d6\u6700\u65b0\u7684 NVIDIA \u9a71\u52a8\u7a0b\u5e8f\uff1a wget http://download.nvidia.com/XFree86/Linux-x86_64/450.57/NVIDIA-Linux-x86_64-450.57.run 2. \u5b89\u88c5\u9a71\u52a8\uff1a sudo /bin/bash NVIDIA-Linux-x86_64-450.57.run --accept-license --no-questions --ui=none 3. \u5b89\u88c5 xserver \u76f8\u5173\u4f9d\u8d56\uff1a sudo apt-get install -y xserver-xorg mesa-utils libvulkan1 4. \u914d\u7f6e xserver\uff1a sudo nvidia-xconfig --preserve-busid -a --virtual=1280x1024 5. \u8bbe\u7f6e SDL_VIDEODRIVER \u53d8\u91cf\u3002 ENV SDL_VIDEODRIVER=x11 6. \u8fd0\u884c xserver\uff1a sudo X :0 & 7. \u8fd0\u884c Carla\uff1a DISPLAY=:0.GPU ./CarlaUE4.sh -vulkan Carla \u5728 \u8fd9\u91cc \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6267\u884c\u4e0a\u8ff0\u6240\u6709\u6b65\u9aa4\u7684 Dockerfile \u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u6216\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 Carla \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u8bbe\u7f6e\u79bb\u5c4f\u6a21\u5f0f\uff080.9.12\u4e4b\u524d\u7684\u7248\u672c\uff09"},{"location":"adv_rss/","text":"\u8d23\u4efb\u654f\u611f\u5b89\u5168 CARLA \u5728\u5ba2\u6237\u7aef\u5e93\u4e2d\u96c6\u6210\u4e86 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u7684 C++ \u5e93 \u3002\u6b64\u529f\u80fd\u5141\u8bb8\u7528\u6237\u8c03\u67e5\u8d23\u4efb\u654f\u611f\u5b89\u5168(Responsibility Sensitive Safety, RSS)\u7684\u884c\u4e3a\uff0c\u800c\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002Carla \u5c06\u8d1f\u8d23\u63d0\u4f9b\u8f93\u5165\uff0c\u5e76\u5c06\u8f93\u51fa\u52a8\u6001\u5e94\u7528\u5230\u81ea\u52a8\u9a7e\u9a76(Autonomous Driving, AD) \u7cfb\u7edf\u3002 \u6982\u8ff0 \u7f16\u8bd1 \u4ee5\u6765 \u6784\u5efa \u5f53\u524d\u72b6\u6001 RssSensor RssRestrictor \u91cd\u8981 \u6b64\u529f\u80fd\u6b63\u5728\u5f00\u53d1\u4e2d\u3002\u76ee\u524d\uff0c\u5b83\u4ec5\u9002\u7528\u4e8e Linux \u7248\u672c\u3002 \u6982\u8ff0 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u5e93\u5b9e\u73b0\u4e86\u5b89\u5168\u4fdd\u8bc1\u7684\u6570\u5b66\u6a21\u578b\u3002\u5b83\u63a5\u6536\u4f20\u611f\u5668\u4fe1\u606f\uff0c\u5e76\u5411\u8f66\u8f86\u63a7\u5236\u5668\u63d0\u4f9b\u9650\u5236\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u8d23\u4efb\u654f\u611f\u5b89\u5168\u6a21\u5757\u4f7f\u7528\u4f20\u611f\u5668\u6570\u636e\u6765\u5b9a\u4e49 \u60c5\u51b5 \u3002\u60c5\u5883\u63cf\u8ff0\u4e86\u81ea\u6211\u8f66\u8f86\u4e0e\u73af\u5883\u5143\u7d20\u7684\u72b6\u6001\u3002\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u90fd\u4f1a\u8fdb\u884c\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u8ba1\u7b97\u9002\u5f53\u7684\u54cd\u5e94\u3002\u603b\u4f53\u54cd\u5e94\u662f\u6240\u6709\u54cd\u5e94\u7684\u7efc\u5408\u7ed3\u679c\u3002\u6709\u5173\u8be5\u5e93\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb \u6587\u6863 \uff0c\u5c24\u5176\u662f \u80cc\u666f\u90e8\u5206 \u3002 \u8fd9\u662f\u5728 CARLA \u4e2d\u4f7f\u7528\u4e24\u4e2a\u5143\u7d20\u5b9e\u73b0\u7684\u3002 RssSensor \u8d1f\u8d23\u60c5\u51b5\u5206\u6790\uff0c\u5e76\u4f7f\u7528 ad-rss-lib \u751f\u6210\u54cd\u5e94\u3002 RssRestrictor \u901a\u8fc7\u9650\u5236\u8f66\u8f86\u7684\u547d\u4ee4\u6765\u5e94\u7528\u54cd\u5e94\u3002 \u4e0b\u56fe\u63cf\u7ed8\u4e86 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u4e0e Carla \u67b6\u6784\u7684\u96c6\u6210\u3002 1. \u670d\u52a1\u5668 \u5c06\u76f8\u673a\u56fe\u50cf\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \uff08\u4ec5\u5f53\u5ba2\u6237\u9700\u8981\u53ef\u89c6\u5316\u65f6\uff09\u3002 \u4e3a RssSensor \u63d0\u4f9b\u4e16\u754c\u6570\u636e\u3002 \u5c06\u8f66\u8f86\u7684\u7269\u7406\u6a21\u578b\u53d1\u9001\u5230 RssRestrictor\u3002 \uff08\u4ec5\u5f53\u9ed8\u8ba4\u503c\u88ab\u8986\u76d6\u65f6\uff09\u3002 2. \u5ba2\u6237\u7aef \u4e3a RssSensor \u63d0\u4f9b\u4e00\u4e9b\u9700\u8981\u8003\u8651\u7684 \u53c2\u6570 \u3002 \u5411 RssResrictor \u53d1\u9001\u521d\u59cb carla.VehicleControl . 3. RssSensor \u4f7f\u7528 ad-rss-lib \u63d0\u53d6\u60c5\u5883\u3001\u6267\u884c\u5b89\u5168\u68c0\u67e5\u5e76\u751f\u6210\u54cd\u5e94\u3002 \u5411 RssRestrictor \u53d1\u9001\u5305\u542b\u6b63\u786e\u54cd\u5e94\u548c\u8981\u5e94\u7528\u7684\u52a0\u901f\u9650\u5236\u7684\u54cd\u5e94\u3002 4. RssRestrictor \u5982\u679c\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5219\u5c06\u54cd\u5e94\u5e94\u7528\u4e8e carla.VehicleControl \uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 Visualization of the RssSensor results. \u7f16\u8bd1 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u96c6\u6210\u5fc5\u987b\u4e0e Carla \u7684\u5176\u4f59\u90e8\u5206\u5206\u5f00\u6784\u5efa\u3002 ad-rss-lib \u9644\u5e26 LGPL-2.1 \u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u8fd9\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u5b83\u5fc5\u987b\u9759\u6001\u94fe\u63a5\u5230 libCarla \u3002 \u63d0\u9192\u4e00\u4e0b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u529f\u80fd\u4ec5\u9002\u7528\u4e8e Linux \u7248\u672c\u3002 \u4f9d\u8d56 \u6784\u5efa \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u53ca\u5176\u4f9d\u8d56\u9879\u8fd8\u9700\u8981\u5176\u4ed6\u5148\u51b3\u6761\u4ef6\u3002\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 Ubunutu (>= 16.04) \u63d0\u4f9b\u7684\u4f9d\u8d56\u9879\u3002 sudo apt-get install libgtest-dev libpython-dev libpugixml-dev libtbb-dev \u4f9d\u8d56\u9879\u662f\u4f7f\u7528 colcon \u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u5b89\u88c5\u5b83\u3002 pip3 install --user -U colcon-common-extensions Python \u7ed1\u5b9a\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4f9d\u8d56\u9879\u3002 sudo apt-get install castxml pip3 install --user pygccxml pyplusplus \u6784\u5efa \u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u5373\u53ef\u6784\u5efa\u5b8c\u6574\u7684\u4f9d\u8d56\u9879\u548c \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u7ec4\u4ef6\u96c6\u3002 \u7f16\u8bd1 LibCarla \u4ee5\u4f7f\u7528 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u3002 make LibCarla.client.rss \u7f16\u8bd1 PythonAPI \u4ee5\u5305\u542b \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u529f\u80fd\u3002 make PythonAPI.rss \u4f5c\u4e3a\u66ff\u4ee3\u65b9\u6848\uff0c\u53ef\u4ee5\u76f4\u63a5\u6784\u5efa\u5305\u3002 make package.rss \u5f53\u524d\u72b6\u6001 RssSensor carla.RssSensor \u5b8c\u5168\u652f\u6301 ad-rss-lib v4.2.0 \u529f\u80fd\u96c6 \uff0c\u5305\u62ec\u4ea4\u53c9\u8def\u53e3\u3001 stay on road \u652f\u6301\u548c unstructured constellations (e.g. with pedestrians) \u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u670d\u52a1\u5668\u4e3a\u4f20\u611f\u5668\u63d0\u4f9b\u4e86\u5468\u56f4\u73af\u5883\u7684\u771f\u5b9e\u6570\u636e\uff0c\u5305\u62ec\u5176\u4ed6\u4ea4\u901a\u53c2\u4e0e\u8005\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u7684\u72b6\u6001\u3002 RssRestrictor \u5f53\u5ba2\u6237\u4f46\u8c03\u7528\u65f6\uff0c carla.RssRestrictor \u5c06\u4fee\u6539\u8f66\u8f86\u63a7\u5236\u5668\uff0c\u4ee5\u901a\u8fc7\u7ed9\u5b9a\u7684\u54cd\u5e94\u6700\u597d\u5730\u8fbe\u5230\u6240\u9700\u7684\u52a0\u901f\u5ea6\u6216\u51cf\u901f\u5ea6\u3002 \u7531\u4e8e carla.VehicleControl \u5bf9\u8c61\u7684\u7ed3\u6784\uff0c\u6240\u5e94\u7528\u7684\u9650\u5236\u5177\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002\u8fd9\u4e9b\u63a7\u5236\u5668\u5305\u62ec\u6cb9\u95e8( throttle )\u3001\u5239\u8f66( brake )\u548c\u65b9\u5411\u76d8( streering )\u503c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6c7d\u8f66\u7269\u7406\u539f\u7406\u548c\u7b80\u5355\u7684\u63a7\u5236\u9009\u9879\uff0c\u8fd9\u4e9b\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u3002\u53ea\u9700\u901a\u8fc7\u671d\u5e73\u884c\u8f66\u9053\u65b9\u5411\u53cd\u5411\u8f6c\u5411\u5373\u53ef\u5728\u6a2a\u5411\u65b9\u5411\u8fdb\u884c\u9650\u5236\u5e72\u9884\u3002\u5982\u679c \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u8bf7\u6c42\u51cf\u901f\uff0c\u5236\u52a8\u5668\u5c06\u88ab\u6fc0\u6d3b\u3002\u8fd9\u53d6\u51b3\u4e8e carla.Vehicle \u63d0\u4f9b\u7684\u8f66\u8f86\u8d28\u91cf\u548c\u5236\u52a8\u626d\u77e9\u3002 \u7b14\u8bb0 \u5728\u81ea\u52a8\u8f66\u8f86\u63a7\u5236\u5668\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u8ba1\u5212\u7684\u8f68\u8ff9\u9002\u5e94\u9650\u5236\u3002\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u63a7\u5236\u73af\u8def\uff08>1KHz\uff09\u6765\u786e\u4fdd\u9075\u5faa\u8fd9\u4e9b\u8981\u6c42\u3002 \u8fd9\u5960\u5b9a\u4e86 Carla \u4e2d \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u4f20\u611f\u5668\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u67e5\u627e\u6709\u5173\u7279\u5b9a\u5c5e\u6027\u548c\u53c2\u6570\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6253\u5f00 Carla \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"\u8d23\u4efb\u654f\u611f\u5b89\u5168"},{"location":"adv_rss/#_1","text":"CARLA \u5728\u5ba2\u6237\u7aef\u5e93\u4e2d\u96c6\u6210\u4e86 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u7684 C++ \u5e93 \u3002\u6b64\u529f\u80fd\u5141\u8bb8\u7528\u6237\u8c03\u67e5\u8d23\u4efb\u654f\u611f\u5b89\u5168(Responsibility Sensitive Safety, RSS)\u7684\u884c\u4e3a\uff0c\u800c\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002Carla \u5c06\u8d1f\u8d23\u63d0\u4f9b\u8f93\u5165\uff0c\u5e76\u5c06\u8f93\u51fa\u52a8\u6001\u5e94\u7528\u5230\u81ea\u52a8\u9a7e\u9a76(Autonomous Driving, AD) \u7cfb\u7edf\u3002 \u6982\u8ff0 \u7f16\u8bd1 \u4ee5\u6765 \u6784\u5efa \u5f53\u524d\u72b6\u6001 RssSensor RssRestrictor \u91cd\u8981 \u6b64\u529f\u80fd\u6b63\u5728\u5f00\u53d1\u4e2d\u3002\u76ee\u524d\uff0c\u5b83\u4ec5\u9002\u7528\u4e8e Linux \u7248\u672c\u3002","title":"\u8d23\u4efb\u654f\u611f\u5b89\u5168"},{"location":"adv_rss/#_2","text":"\u8d23\u4efb\u654f\u611f\u5b89\u5168\u5e93\u5b9e\u73b0\u4e86\u5b89\u5168\u4fdd\u8bc1\u7684\u6570\u5b66\u6a21\u578b\u3002\u5b83\u63a5\u6536\u4f20\u611f\u5668\u4fe1\u606f\uff0c\u5e76\u5411\u8f66\u8f86\u63a7\u5236\u5668\u63d0\u4f9b\u9650\u5236\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u8d23\u4efb\u654f\u611f\u5b89\u5168\u6a21\u5757\u4f7f\u7528\u4f20\u611f\u5668\u6570\u636e\u6765\u5b9a\u4e49 \u60c5\u51b5 \u3002\u60c5\u5883\u63cf\u8ff0\u4e86\u81ea\u6211\u8f66\u8f86\u4e0e\u73af\u5883\u5143\u7d20\u7684\u72b6\u6001\u3002\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u90fd\u4f1a\u8fdb\u884c\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u8ba1\u7b97\u9002\u5f53\u7684\u54cd\u5e94\u3002\u603b\u4f53\u54cd\u5e94\u662f\u6240\u6709\u54cd\u5e94\u7684\u7efc\u5408\u7ed3\u679c\u3002\u6709\u5173\u8be5\u5e93\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb \u6587\u6863 \uff0c\u5c24\u5176\u662f \u80cc\u666f\u90e8\u5206 \u3002 \u8fd9\u662f\u5728 CARLA \u4e2d\u4f7f\u7528\u4e24\u4e2a\u5143\u7d20\u5b9e\u73b0\u7684\u3002 RssSensor \u8d1f\u8d23\u60c5\u51b5\u5206\u6790\uff0c\u5e76\u4f7f\u7528 ad-rss-lib \u751f\u6210\u54cd\u5e94\u3002 RssRestrictor \u901a\u8fc7\u9650\u5236\u8f66\u8f86\u7684\u547d\u4ee4\u6765\u5e94\u7528\u54cd\u5e94\u3002 \u4e0b\u56fe\u63cf\u7ed8\u4e86 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u4e0e Carla \u67b6\u6784\u7684\u96c6\u6210\u3002 1. \u670d\u52a1\u5668 \u5c06\u76f8\u673a\u56fe\u50cf\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \uff08\u4ec5\u5f53\u5ba2\u6237\u9700\u8981\u53ef\u89c6\u5316\u65f6\uff09\u3002 \u4e3a RssSensor \u63d0\u4f9b\u4e16\u754c\u6570\u636e\u3002 \u5c06\u8f66\u8f86\u7684\u7269\u7406\u6a21\u578b\u53d1\u9001\u5230 RssRestrictor\u3002 \uff08\u4ec5\u5f53\u9ed8\u8ba4\u503c\u88ab\u8986\u76d6\u65f6\uff09\u3002 2. \u5ba2\u6237\u7aef \u4e3a RssSensor \u63d0\u4f9b\u4e00\u4e9b\u9700\u8981\u8003\u8651\u7684 \u53c2\u6570 \u3002 \u5411 RssResrictor \u53d1\u9001\u521d\u59cb carla.VehicleControl . 3. RssSensor \u4f7f\u7528 ad-rss-lib \u63d0\u53d6\u60c5\u5883\u3001\u6267\u884c\u5b89\u5168\u68c0\u67e5\u5e76\u751f\u6210\u54cd\u5e94\u3002 \u5411 RssRestrictor \u53d1\u9001\u5305\u542b\u6b63\u786e\u54cd\u5e94\u548c\u8981\u5e94\u7528\u7684\u52a0\u901f\u9650\u5236\u7684\u54cd\u5e94\u3002 4. RssRestrictor \u5982\u679c\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5219\u5c06\u54cd\u5e94\u5e94\u7528\u4e8e carla.VehicleControl \uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 Visualization of the RssSensor results.","title":"\u6982\u8ff0"},{"location":"adv_rss/#_3","text":"\u8d23\u4efb\u654f\u611f\u5b89\u5168 \u96c6\u6210\u5fc5\u987b\u4e0e Carla \u7684\u5176\u4f59\u90e8\u5206\u5206\u5f00\u6784\u5efa\u3002 ad-rss-lib \u9644\u5e26 LGPL-2.1 \u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u8fd9\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u5b83\u5fc5\u987b\u9759\u6001\u94fe\u63a5\u5230 libCarla \u3002 \u63d0\u9192\u4e00\u4e0b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u529f\u80fd\u4ec5\u9002\u7528\u4e8e Linux \u7248\u672c\u3002","title":"\u7f16\u8bd1"},{"location":"adv_rss/#_4","text":"\u6784\u5efa \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u53ca\u5176\u4f9d\u8d56\u9879\u8fd8\u9700\u8981\u5176\u4ed6\u5148\u51b3\u6761\u4ef6\u3002\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 Ubunutu (>= 16.04) \u63d0\u4f9b\u7684\u4f9d\u8d56\u9879\u3002 sudo apt-get install libgtest-dev libpython-dev libpugixml-dev libtbb-dev \u4f9d\u8d56\u9879\u662f\u4f7f\u7528 colcon \u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u5b89\u88c5\u5b83\u3002 pip3 install --user -U colcon-common-extensions Python \u7ed1\u5b9a\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4f9d\u8d56\u9879\u3002 sudo apt-get install castxml pip3 install --user pygccxml pyplusplus","title":"\u4f9d\u8d56"},{"location":"adv_rss/#_5","text":"\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u5373\u53ef\u6784\u5efa\u5b8c\u6574\u7684\u4f9d\u8d56\u9879\u548c \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u7ec4\u4ef6\u96c6\u3002 \u7f16\u8bd1 LibCarla \u4ee5\u4f7f\u7528 \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u3002 make LibCarla.client.rss \u7f16\u8bd1 PythonAPI \u4ee5\u5305\u542b \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u529f\u80fd\u3002 make PythonAPI.rss \u4f5c\u4e3a\u66ff\u4ee3\u65b9\u6848\uff0c\u53ef\u4ee5\u76f4\u63a5\u6784\u5efa\u5305\u3002 make package.rss","title":"\u6784\u5efa"},{"location":"adv_rss/#_6","text":"","title":"\u5f53\u524d\u72b6\u6001"},{"location":"adv_rss/#rsssensor","text":"carla.RssSensor \u5b8c\u5168\u652f\u6301 ad-rss-lib v4.2.0 \u529f\u80fd\u96c6 \uff0c\u5305\u62ec\u4ea4\u53c9\u8def\u53e3\u3001 stay on road \u652f\u6301\u548c unstructured constellations (e.g. with pedestrians) \u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u670d\u52a1\u5668\u4e3a\u4f20\u611f\u5668\u63d0\u4f9b\u4e86\u5468\u56f4\u73af\u5883\u7684\u771f\u5b9e\u6570\u636e\uff0c\u5305\u62ec\u5176\u4ed6\u4ea4\u901a\u53c2\u4e0e\u8005\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u7684\u72b6\u6001\u3002","title":"RssSensor"},{"location":"adv_rss/#rssrestrictor","text":"\u5f53\u5ba2\u6237\u4f46\u8c03\u7528\u65f6\uff0c carla.RssRestrictor \u5c06\u4fee\u6539\u8f66\u8f86\u63a7\u5236\u5668\uff0c\u4ee5\u901a\u8fc7\u7ed9\u5b9a\u7684\u54cd\u5e94\u6700\u597d\u5730\u8fbe\u5230\u6240\u9700\u7684\u52a0\u901f\u5ea6\u6216\u51cf\u901f\u5ea6\u3002 \u7531\u4e8e carla.VehicleControl \u5bf9\u8c61\u7684\u7ed3\u6784\uff0c\u6240\u5e94\u7528\u7684\u9650\u5236\u5177\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002\u8fd9\u4e9b\u63a7\u5236\u5668\u5305\u62ec\u6cb9\u95e8( throttle )\u3001\u5239\u8f66( brake )\u548c\u65b9\u5411\u76d8( streering )\u503c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6c7d\u8f66\u7269\u7406\u539f\u7406\u548c\u7b80\u5355\u7684\u63a7\u5236\u9009\u9879\uff0c\u8fd9\u4e9b\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u3002\u53ea\u9700\u901a\u8fc7\u671d\u5e73\u884c\u8f66\u9053\u65b9\u5411\u53cd\u5411\u8f6c\u5411\u5373\u53ef\u5728\u6a2a\u5411\u65b9\u5411\u8fdb\u884c\u9650\u5236\u5e72\u9884\u3002\u5982\u679c \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u8bf7\u6c42\u51cf\u901f\uff0c\u5236\u52a8\u5668\u5c06\u88ab\u6fc0\u6d3b\u3002\u8fd9\u53d6\u51b3\u4e8e carla.Vehicle \u63d0\u4f9b\u7684\u8f66\u8f86\u8d28\u91cf\u548c\u5236\u52a8\u626d\u77e9\u3002 \u7b14\u8bb0 \u5728\u81ea\u52a8\u8f66\u8f86\u63a7\u5236\u5668\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u8ba1\u5212\u7684\u8f68\u8ff9\u9002\u5e94\u9650\u5236\u3002\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u63a7\u5236\u73af\u8def\uff08>1KHz\uff09\u6765\u786e\u4fdd\u9075\u5faa\u8fd9\u4e9b\u8981\u6c42\u3002 \u8fd9\u5960\u5b9a\u4e86 Carla \u4e2d \u8d23\u4efb\u654f\u611f\u5b89\u5168 \u4f20\u611f\u5668\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u67e5\u627e\u6709\u5173\u7279\u5b9a\u5c5e\u6027\u548c\u53c2\u6570\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6253\u5f00 Carla \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"RssRestrictor"},{"location":"adv_sumo/","text":"\u548c SUMO \u8fdb\u884c\u8054\u5408\u4eff\u771f Carla \u4e0e SUMO \u5f00\u53d1\u4e86\u8054\u5408\u4eff\u771f\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u968f\u610f\u5206\u914d\u4efb\u52a1\uff0c\u5e76\u5229\u7528\u6bcf\u4e2a\u4eff\u771f\u7684\u529f\u80fd\u6765\u652f\u6301\u7528\u6237\u3002 \u5fc5\u5907\u6761\u4ef6 \u8fd0\u884c\u81ea\u5b9a\u4e49\u8054\u5408\u4eff\u771f \u521b\u5efa CARLA vtypes \u521b\u5efa SUMO \u7f51\u7edc \u8fd0\u884c\u540c\u6b65 \u7531 SUMO \u63a7\u5236\u7684 NPC \u751f\u6210 \u5fc5\u5907\u6761\u4ef6 \u9996\u5148\uff0c\u9700\u8981 \u5b89\u88c5 SUMO \u624d\u80fd\u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002\u5efa\u8bae\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u800c\u4e0d\u662f\u7b80\u5355\u5b89\u88c5\uff0c\u56e0\u4e3a\u6709\u65b0\u529f\u80fd\u548c\u4fee\u590d\u53ef\u4ee5\u6539\u8fdb\u534f\u540c\u4eff\u771f\u3002 \u5b8c\u6210\u540e\uff0c\u8bbe\u7f6e SUMO \u73af\u5883\u53d8\u91cf\u3002 echo \"export SUMO_HOME=/usr/share/sumo\" >> ~/.bashrc && source ~/.bashrc SUMO \u5df2\u51c6\u5907\u597d\u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002 Co-Simulation/Sumo/examples \u4e2d\u6709\u4e00\u4e9b Town01 , Town04 \u548c Town05 \u7684\u793a\u4f8b\u3002\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u4e86\u4eff\u771f\u7684\u914d\u7f6e\uff08\u4f8b\u5982\u7f51\u7edc\u3001\u8def\u7ebf\u3001\u8f66\u8f86\u7c7b\u578b...\uff09\u3002\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\u6765\u6d4b\u8bd5\u8054\u5408\u4eff\u771f\u3002\u8be5\u811a\u672c\u6709\u4e0d\u540c\u7684\u9009\u9879\uff0c \u4e0b\u9762 \u5c06\u8be6\u7ec6\u4ecb\u7ecd\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4e3a Town04 \u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u3002 \u4f7f\u7528 Town04 \u8fd0\u884c Carla \u4eff\u771f\u3002 cd ~/carla ./CarlaUE4.sh cd PythonAPI/util python3 config.py --map Town04 \u7136\u540e\uff0c\u8fd0\u884c SUMO \u8054\u5408\u4eff\u771f\u793a\u4f8b\u3002 cd ~/carla/Co-Simulation/Sumo python3 run_synchronization.py examples/Town04.sumocfg --sumo-gui \u7b14\u8bb0 \u8fd0\u884c\u65f6\u5019\u53ef\u80fd\u62a5\u9519\uff1a module 'traci' has no attribute 'sumolib' \uff0c\u662f\u56e0\u4e3a sumolib \u662f\u72ec\u7acb\u7684\u5305\uff0c\u4e0d\u5728 traci \u91cc\u9762\uff0c\u9700\u8981\u628a carla/Co-Simulation/Sumo/sumo_integration/sumo_simulation.py \u7684304\u884c\u7684\u8fd9\u4e00\u53e5\u4ee3 sumo_net = traci.sumolib.net.readNet(net_file) \u7801\u6539\u6210 sumo_net = sumolib.net.readNet(net_file) \u3002 \u8fd0\u884c\u81ea\u5b9a\u4e49\u8054\u5408\u4eff\u771f \u521b\u5efa carla vtypes \u4f7f\u7528\u811a\u672c Co-Simulation/Sumo/util/create_sumo_vtypes.py \u7528\u6237\u53ef\u4ee5\u57fa\u4e8e Carla \u84dd\u56fe\u5e93\u521b\u5efa vtypes \uff0c\u76f8\u5f53\u4e8e Carla \u84dd\u56fe\u3002 --carla-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 Carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --carla-port (\u9ed8\u8ba4\u503c\uff1a2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 --output-file (\u9ed8\u8ba4\u503c\uff1acarlavtypes.rou.xml) \u2014 \u751f\u6210\u7684\u5305\u542b vtypes \u7684\u6587\u4ef6\u3002 \u8be5\u811a\u672c\u4f7f\u7528 data/vtypes.json \u5b58\u50a8\u7684\u4fe1\u606f\u6765\u521b\u5efa SUMO vtypes \u3002\u8fd9\u4e9b\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u6240\u8ff0\u6587\u4ef6\u6765\u4fee\u6539\u3002 \u8b66\u544a \u5fc5\u987b\u8fd0\u884c CARLA \u4eff\u771f\u624d\u80fd\u6267\u884c\u8be5\u811a\u672c\u3002 \u521b\u5efa SUMO \u7f51\u7edc \u521b\u5efa\u4e0e CARLA \u540c\u6b65\u7684 SUMO \u7f51\u7edc\u63a8\u8350\u65b9\u6cd5\u662f\u4f7f\u7528\u811a\u672c Co-Simulation/Sumo/util/netconvert_carla.py . \u8fd9\u5c31\u8981\u5229\u7528 SUMO \u63d0\u4f9b\u7684 netconvert \u5de5\u5177\u4e86\u3002\u4e3a\u4e86\u8fd0\u884c\u8be5\u811a\u672c\uff0c\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 xodr_file \u2014 OpenDRIVE \u6587\u4ef6 .xodr \u3002 --output' (\u9ed8\u8ba4\u503c\uff1a net.net.xml ) \u2014 \u8f93\u51fa\u6587\u4ef6 .net.xml \u3002 --guess-tls (\u9ed8\u8ba4\u503c\uff1afalse) \u2014 SUMO \u53ea\u80fd\u4e3a\u9053\u8def\u4e2d\u7684\u7279\u5b9a\u8f66\u9053\u8bbe\u7f6e\u4ea4\u901a\u706f\uff0c\u4f46 CARLA \u4e0d\u80fd\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0cSUMO \u5c06\u4e0d\u4f1a\u533a\u5206\u7279\u5b9a\u8f66\u9053\u7684\u4ea4\u901a\u4fe1\u53f7\u706f\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4fe1\u53f7\u706f\u5c06\u4e0e CARLA \u540c\u6b65\u3002 \u8be5\u811a\u672c\u7684\u8f93\u51fa\u5c06\u662f .net.xml \u53ef\u4ee5\u4f7f\u7528 NETEDIT \u8fdb\u884c\u7f16\u8f91\u7684\u3002\u4f7f\u7528\u5b83\u6765\u7f16\u8f91\u8def\u7ebf\u3001\u6dfb\u52a0\u9700\u6c42\uff0c\u5e76\u6700\u7ec8\u51c6\u5907\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u5b58\u4e3a .sumocfg \u3002 \u5728\u6b64\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u770b\u4e00\u773c Co-Simulation/Sumo/examples \u3002\u5bf9\u4e8e\u6bcf\u4e2a example.sumocfg \u6587\u4ef6\uff0c\u90fd\u6709\u591a\u4e2a\u540c\u540d\u7684\u76f8\u5173\u6587\u4ef6\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5305\u542b\u4e00\u4e2a\u8054\u5408\u4eff\u771f\u793a\u4f8b\u3002 \u8fd0\u884c\u540c\u6b65 \u4e00\u65e6\u4eff\u771f\u51c6\u5907\u5c31\u7eea\u5e76\u4fdd\u5b58\u4e3a .sumocfg \uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86\u3002\u6709\u4e00\u4e9b\u53ef\u9009\u53c2\u6570\u53ef\u4ee5\u66f4\u6539\u534f\u540c\u4eff\u771f\u7684\u8bbe\u7f6e\u3002 sumo_cfg_file \u2014 SUMO \u914d\u7f6e\u6587\u4ef6\u3002 --carla-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 Carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP --carla-port (\u9ed8\u8ba4\u503c\uff1a2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3 --sumo-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 SUMO \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --sumo-port (\u9ed8\u8ba4\u503c\uff1a8813) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 --sumo-gui \u2014 \u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\u4ee5\u53ef\u89c6\u5316 SUMO \u7684 GUI \u7248\u672c\u3002 --step-length (\u9ed8\u8ba4\u503c\uff1a0.05s) \u2014 \u8bbe\u7f6e\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u7684\u56fa\u5b9a\u589e\u91cf\u79d2\u3002 --sync-vehicle-lights (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u706f\u3002 --sync-vehicle-color (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u8f86\u989c\u8272\u3002 --sync-vehicle-all (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u6240\u6709\u8f66\u8f86\u5c5e\u6027\u3002 --tls-manager (\u9ed8\u8ba4\u503c\uff1anone) \u2014 \u9009\u62e9\u54ea\u4e2a\u6a21\u62df\u5668\u5e94\u7ba1\u7406\u4ea4\u901a\u706f\u3002\u53e6\u4e00\u4e2a\u5c06\u76f8\u5e94\u5730\u66f4\u65b0\u8fd9\u4e9b\u5185\u5bb9\u3002\u9009\u9879\u6709 carla , sumo \u548c none \u3002\u5982\u679c\u9009\u62e9 none \uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u5c06\u4e0d\u540c\u6b65\u3002\u6bcf\u8f86\u8f66\u53ea\u4f1a\u9075\u5b88\u751f\u6210\u5b83\u7684\u4eff\u771f\u5668\u4e2d\u7684\u4ea4\u901a\u706f\u3002 python3 run_synchronization.py <SUMOCFG FILE> --tls-manager carla --sumo-gui \u8b66\u544a \u8981\u505c\u6b62\u8054\u5408\u6a21\u62df\uff0c\u8bf7\u5728\u8fd0\u884c\u811a\u672c\u7684\u7ec8\u7aef\u6309 Ctrl+C \u3002 \u7531 SUMO \u63a7\u5236\u7684 NPC \u751f\u6210 \u4e0e SUMO \u7684\u8054\u5408\u4eff\u771f\u5e26\u6765\u4e86\u4e00\u9879\u9644\u52a0\u529f\u80fd\u3002\u8f66\u8f86\u53ef\u4ee5\u901a\u8fc7 SUMO \u5728 Carla \u4e2d\u751f\u6210\uff0c\u5e76\u7531\u540e\u8005\u8fdb\u884c\u7ba1\u7406\uff0c\u5c31\u50cf\u4ea4\u901a\u7ba1\u7406\u5668\u4e00\u6837\u3002 \u811a\u672c spawn_npc_sumo.py \u51e0\u4e4e\u7b49\u540c\u4e8e\u5df2\u77e5\u7684 generate_traffic.py \u3002\u8be5\u811a\u672c\u6839\u636e Carla \u4e2d\u7684\u6d3b\u52a8\u57ce\u9547\u81ea\u52a8\u5728\u4e34\u65f6\u6587\u4ef6\u5939\u4e2d\u751f\u6210 SUMO \u7f51\u7edc\u3002\u8be5\u811a\u672c\u5c06\u521b\u5efa\u968f\u673a\u8def\u7ebf\u5e76\u8ba9\u8f66\u8f86\u56db\u5904\u6f2b\u6e38\u3002 \u5f53\u811a\u672c\u8fd0\u884c\u540c\u6b65\u4eff\u5e76\u5728\u5176\u4e2d\u751f\u6210\u8f66\u8f86\u65f6\uff0c\u53c2\u6570\u4e0e run_synchronization.py \u548c generate_traffic.py \u4e2d\u51fa\u73b0\u7684\u53c2\u6570\u76f8\u540c\u3002 --host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --port (default: 2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 -n,--number-of-vehicles (\u9ed8\u8ba4\u503c\uff1a10) \u2014 \u751f\u6210\u7684\u8f66\u8f86\u6570\u91cf\u3002 --safe \u2014 \u907f\u514d\u751f\u6210\u8f66\u8f86\u5bb9\u6613\u53d1\u751f\u4e8b\u6545\u3002 --filterv (\u9ed8\u8ba4\u503c\uff1a\"vehicle. \")* \u2014 \u8fc7\u6ee4\u751f\u6210\u7684\u8f66\u8f86\u7684\u84dd\u56fe\u3002 --sumo-gui \u2014 \u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\u6765\u53ef\u89c6\u5316 SUMO\u3002 --step-length (\u9ed8\u8ba4\u503c\uff1a0.05s) \u2014 \u8bbe\u7f6e\u4eff\u771f\u65f6\u95f4\u6b65\u957f\u7684\u56fa\u5b9a\u589e\u91cf\u79d2\u3002 --sync-vehicle-lights (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u706f\u72b6\u6001\u3002 --sync-vehicle-color (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u8f86\u989c\u8272\u3002 --sync-vehicle-all (\u9ed8\u8ba4\u503c\uff1a False) \u2014 \u540c\u6b65\u6240\u6709\u8f66\u8f86\u5c5e\u6027\u3002 --tls-manager (\u9ed8\u8ba4\u503c\uff1a none) \u2014 \u9009\u62e9\u54ea\u4e2a\u6a21\u62df\u5668\u6765\u66f4\u6539\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002\u53e6\u4e00\u4e2a\u5c06\u76f8\u5e94\u5730\u66f4\u65b0\u5b83\u4eec\u3002\u5982\u679c\u662f none \uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u5c06\u4e0d\u540c\u6b65\u3002 # \u751f\u6210 10 \u8f86\u8f66\uff0c\u7531 SUMO \u7ba1\u7406\uff0c\u800c\u4e0d\u662f\u4ea4\u901a\u7ba1\u7406\u5668 python3 spawn_sumo_npc.py -n 10 --tls-manager carla --sumo-gui \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f\u4e0e Carla \u8fdb\u884c SUMO \u8054\u5408\u6a21\u62df\u7684\u5168\u90e8\u5185\u5bb9\u3002 \u6253\u5f00 Carla \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"SUMO \u8054\u5408\u4eff\u771f"},{"location":"adv_sumo/#sumo","text":"Carla \u4e0e SUMO \u5f00\u53d1\u4e86\u8054\u5408\u4eff\u771f\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u968f\u610f\u5206\u914d\u4efb\u52a1\uff0c\u5e76\u5229\u7528\u6bcf\u4e2a\u4eff\u771f\u7684\u529f\u80fd\u6765\u652f\u6301\u7528\u6237\u3002 \u5fc5\u5907\u6761\u4ef6 \u8fd0\u884c\u81ea\u5b9a\u4e49\u8054\u5408\u4eff\u771f \u521b\u5efa CARLA vtypes \u521b\u5efa SUMO \u7f51\u7edc \u8fd0\u884c\u540c\u6b65 \u7531 SUMO \u63a7\u5236\u7684 NPC \u751f\u6210","title":"\u548c SUMO \u8fdb\u884c\u8054\u5408\u4eff\u771f"},{"location":"adv_sumo/#_1","text":"\u9996\u5148\uff0c\u9700\u8981 \u5b89\u88c5 SUMO \u624d\u80fd\u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002\u5efa\u8bae\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u800c\u4e0d\u662f\u7b80\u5355\u5b89\u88c5\uff0c\u56e0\u4e3a\u6709\u65b0\u529f\u80fd\u548c\u4fee\u590d\u53ef\u4ee5\u6539\u8fdb\u534f\u540c\u4eff\u771f\u3002 \u5b8c\u6210\u540e\uff0c\u8bbe\u7f6e SUMO \u73af\u5883\u53d8\u91cf\u3002 echo \"export SUMO_HOME=/usr/share/sumo\" >> ~/.bashrc && source ~/.bashrc SUMO \u5df2\u51c6\u5907\u597d\u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002 Co-Simulation/Sumo/examples \u4e2d\u6709\u4e00\u4e9b Town01 , Town04 \u548c Town05 \u7684\u793a\u4f8b\u3002\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u4e86\u4eff\u771f\u7684\u914d\u7f6e\uff08\u4f8b\u5982\u7f51\u7edc\u3001\u8def\u7ebf\u3001\u8f66\u8f86\u7c7b\u578b...\uff09\u3002\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\u6765\u6d4b\u8bd5\u8054\u5408\u4eff\u771f\u3002\u8be5\u811a\u672c\u6709\u4e0d\u540c\u7684\u9009\u9879\uff0c \u4e0b\u9762 \u5c06\u8be6\u7ec6\u4ecb\u7ecd\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4e3a Town04 \u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u3002 \u4f7f\u7528 Town04 \u8fd0\u884c Carla \u4eff\u771f\u3002 cd ~/carla ./CarlaUE4.sh cd PythonAPI/util python3 config.py --map Town04 \u7136\u540e\uff0c\u8fd0\u884c SUMO \u8054\u5408\u4eff\u771f\u793a\u4f8b\u3002 cd ~/carla/Co-Simulation/Sumo python3 run_synchronization.py examples/Town04.sumocfg --sumo-gui \u7b14\u8bb0 \u8fd0\u884c\u65f6\u5019\u53ef\u80fd\u62a5\u9519\uff1a module 'traci' has no attribute 'sumolib' \uff0c\u662f\u56e0\u4e3a sumolib \u662f\u72ec\u7acb\u7684\u5305\uff0c\u4e0d\u5728 traci \u91cc\u9762\uff0c\u9700\u8981\u628a carla/Co-Simulation/Sumo/sumo_integration/sumo_simulation.py \u7684304\u884c\u7684\u8fd9\u4e00\u53e5\u4ee3 sumo_net = traci.sumolib.net.readNet(net_file) \u7801\u6539\u6210 sumo_net = sumolib.net.readNet(net_file) \u3002","title":"\u5fc5\u5907\u6761\u4ef6"},{"location":"adv_sumo/#_2","text":"","title":"\u8fd0\u884c\u81ea\u5b9a\u4e49\u8054\u5408\u4eff\u771f"},{"location":"adv_sumo/#carla-vtypes","text":"\u4f7f\u7528\u811a\u672c Co-Simulation/Sumo/util/create_sumo_vtypes.py \u7528\u6237\u53ef\u4ee5\u57fa\u4e8e Carla \u84dd\u56fe\u5e93\u521b\u5efa vtypes \uff0c\u76f8\u5f53\u4e8e Carla \u84dd\u56fe\u3002 --carla-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 Carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --carla-port (\u9ed8\u8ba4\u503c\uff1a2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 --output-file (\u9ed8\u8ba4\u503c\uff1acarlavtypes.rou.xml) \u2014 \u751f\u6210\u7684\u5305\u542b vtypes \u7684\u6587\u4ef6\u3002 \u8be5\u811a\u672c\u4f7f\u7528 data/vtypes.json \u5b58\u50a8\u7684\u4fe1\u606f\u6765\u521b\u5efa SUMO vtypes \u3002\u8fd9\u4e9b\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u6240\u8ff0\u6587\u4ef6\u6765\u4fee\u6539\u3002 \u8b66\u544a \u5fc5\u987b\u8fd0\u884c CARLA \u4eff\u771f\u624d\u80fd\u6267\u884c\u8be5\u811a\u672c\u3002","title":"\u521b\u5efa carla vtypes"},{"location":"adv_sumo/#sumo_1","text":"\u521b\u5efa\u4e0e CARLA \u540c\u6b65\u7684 SUMO \u7f51\u7edc\u63a8\u8350\u65b9\u6cd5\u662f\u4f7f\u7528\u811a\u672c Co-Simulation/Sumo/util/netconvert_carla.py . \u8fd9\u5c31\u8981\u5229\u7528 SUMO \u63d0\u4f9b\u7684 netconvert \u5de5\u5177\u4e86\u3002\u4e3a\u4e86\u8fd0\u884c\u8be5\u811a\u672c\uff0c\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 xodr_file \u2014 OpenDRIVE \u6587\u4ef6 .xodr \u3002 --output' (\u9ed8\u8ba4\u503c\uff1a net.net.xml ) \u2014 \u8f93\u51fa\u6587\u4ef6 .net.xml \u3002 --guess-tls (\u9ed8\u8ba4\u503c\uff1afalse) \u2014 SUMO \u53ea\u80fd\u4e3a\u9053\u8def\u4e2d\u7684\u7279\u5b9a\u8f66\u9053\u8bbe\u7f6e\u4ea4\u901a\u706f\uff0c\u4f46 CARLA \u4e0d\u80fd\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0cSUMO \u5c06\u4e0d\u4f1a\u533a\u5206\u7279\u5b9a\u8f66\u9053\u7684\u4ea4\u901a\u4fe1\u53f7\u706f\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4fe1\u53f7\u706f\u5c06\u4e0e CARLA \u540c\u6b65\u3002 \u8be5\u811a\u672c\u7684\u8f93\u51fa\u5c06\u662f .net.xml \u53ef\u4ee5\u4f7f\u7528 NETEDIT \u8fdb\u884c\u7f16\u8f91\u7684\u3002\u4f7f\u7528\u5b83\u6765\u7f16\u8f91\u8def\u7ebf\u3001\u6dfb\u52a0\u9700\u6c42\uff0c\u5e76\u6700\u7ec8\u51c6\u5907\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u5b58\u4e3a .sumocfg \u3002 \u5728\u6b64\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u770b\u4e00\u773c Co-Simulation/Sumo/examples \u3002\u5bf9\u4e8e\u6bcf\u4e2a example.sumocfg \u6587\u4ef6\uff0c\u90fd\u6709\u591a\u4e2a\u540c\u540d\u7684\u76f8\u5173\u6587\u4ef6\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5305\u542b\u4e00\u4e2a\u8054\u5408\u4eff\u771f\u793a\u4f8b\u3002","title":"\u521b\u5efa SUMO \u7f51\u7edc"},{"location":"adv_sumo/#_3","text":"\u4e00\u65e6\u4eff\u771f\u51c6\u5907\u5c31\u7eea\u5e76\u4fdd\u5b58\u4e3a .sumocfg \uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86\u3002\u6709\u4e00\u4e9b\u53ef\u9009\u53c2\u6570\u53ef\u4ee5\u66f4\u6539\u534f\u540c\u4eff\u771f\u7684\u8bbe\u7f6e\u3002 sumo_cfg_file \u2014 SUMO \u914d\u7f6e\u6587\u4ef6\u3002 --carla-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 Carla \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP --carla-port (\u9ed8\u8ba4\u503c\uff1a2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3 --sumo-host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 SUMO \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --sumo-port (\u9ed8\u8ba4\u503c\uff1a8813) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 --sumo-gui \u2014 \u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\u4ee5\u53ef\u89c6\u5316 SUMO \u7684 GUI \u7248\u672c\u3002 --step-length (\u9ed8\u8ba4\u503c\uff1a0.05s) \u2014 \u8bbe\u7f6e\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u7684\u56fa\u5b9a\u589e\u91cf\u79d2\u3002 --sync-vehicle-lights (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u706f\u3002 --sync-vehicle-color (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u8f86\u989c\u8272\u3002 --sync-vehicle-all (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u6240\u6709\u8f66\u8f86\u5c5e\u6027\u3002 --tls-manager (\u9ed8\u8ba4\u503c\uff1anone) \u2014 \u9009\u62e9\u54ea\u4e2a\u6a21\u62df\u5668\u5e94\u7ba1\u7406\u4ea4\u901a\u706f\u3002\u53e6\u4e00\u4e2a\u5c06\u76f8\u5e94\u5730\u66f4\u65b0\u8fd9\u4e9b\u5185\u5bb9\u3002\u9009\u9879\u6709 carla , sumo \u548c none \u3002\u5982\u679c\u9009\u62e9 none \uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u5c06\u4e0d\u540c\u6b65\u3002\u6bcf\u8f86\u8f66\u53ea\u4f1a\u9075\u5b88\u751f\u6210\u5b83\u7684\u4eff\u771f\u5668\u4e2d\u7684\u4ea4\u901a\u706f\u3002 python3 run_synchronization.py <SUMOCFG FILE> --tls-manager carla --sumo-gui \u8b66\u544a \u8981\u505c\u6b62\u8054\u5408\u6a21\u62df\uff0c\u8bf7\u5728\u8fd0\u884c\u811a\u672c\u7684\u7ec8\u7aef\u6309 Ctrl+C \u3002","title":"\u8fd0\u884c\u540c\u6b65"},{"location":"adv_sumo/#sumo-npc","text":"\u4e0e SUMO \u7684\u8054\u5408\u4eff\u771f\u5e26\u6765\u4e86\u4e00\u9879\u9644\u52a0\u529f\u80fd\u3002\u8f66\u8f86\u53ef\u4ee5\u901a\u8fc7 SUMO \u5728 Carla \u4e2d\u751f\u6210\uff0c\u5e76\u7531\u540e\u8005\u8fdb\u884c\u7ba1\u7406\uff0c\u5c31\u50cf\u4ea4\u901a\u7ba1\u7406\u5668\u4e00\u6837\u3002 \u811a\u672c spawn_npc_sumo.py \u51e0\u4e4e\u7b49\u540c\u4e8e\u5df2\u77e5\u7684 generate_traffic.py \u3002\u8be5\u811a\u672c\u6839\u636e Carla \u4e2d\u7684\u6d3b\u52a8\u57ce\u9547\u81ea\u52a8\u5728\u4e34\u65f6\u6587\u4ef6\u5939\u4e2d\u751f\u6210 SUMO \u7f51\u7edc\u3002\u8be5\u811a\u672c\u5c06\u521b\u5efa\u968f\u673a\u8def\u7ebf\u5e76\u8ba9\u8f66\u8f86\u56db\u5904\u6f2b\u6e38\u3002 \u5f53\u811a\u672c\u8fd0\u884c\u540c\u6b65\u4eff\u5e76\u5728\u5176\u4e2d\u751f\u6210\u8f66\u8f86\u65f6\uff0c\u53c2\u6570\u4e0e run_synchronization.py \u548c generate_traffic.py \u4e2d\u51fa\u73b0\u7684\u53c2\u6570\u76f8\u540c\u3002 --host (\u9ed8\u8ba4\u503c\uff1a127.0.0.1) \u2014 \u4e3b\u673a\u670d\u52a1\u5668\u7684 IP\u3002 --port (default: 2000) \u2014 \u8981\u4fa6\u542c\u7684 TCP \u7aef\u53e3\u3002 -n,--number-of-vehicles (\u9ed8\u8ba4\u503c\uff1a10) \u2014 \u751f\u6210\u7684\u8f66\u8f86\u6570\u91cf\u3002 --safe \u2014 \u907f\u514d\u751f\u6210\u8f66\u8f86\u5bb9\u6613\u53d1\u751f\u4e8b\u6545\u3002 --filterv (\u9ed8\u8ba4\u503c\uff1a\"vehicle. \")* \u2014 \u8fc7\u6ee4\u751f\u6210\u7684\u8f66\u8f86\u7684\u84dd\u56fe\u3002 --sumo-gui \u2014 \u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\u6765\u53ef\u89c6\u5316 SUMO\u3002 --step-length (\u9ed8\u8ba4\u503c\uff1a0.05s) \u2014 \u8bbe\u7f6e\u4eff\u771f\u65f6\u95f4\u6b65\u957f\u7684\u56fa\u5b9a\u589e\u91cf\u79d2\u3002 --sync-vehicle-lights (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u706f\u72b6\u6001\u3002 --sync-vehicle-color (\u9ed8\u8ba4\u503c\uff1aFalse) \u2014 \u540c\u6b65\u8f66\u8f86\u989c\u8272\u3002 --sync-vehicle-all (\u9ed8\u8ba4\u503c\uff1a False) \u2014 \u540c\u6b65\u6240\u6709\u8f66\u8f86\u5c5e\u6027\u3002 --tls-manager (\u9ed8\u8ba4\u503c\uff1a none) \u2014 \u9009\u62e9\u54ea\u4e2a\u6a21\u62df\u5668\u6765\u66f4\u6539\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002\u53e6\u4e00\u4e2a\u5c06\u76f8\u5e94\u5730\u66f4\u65b0\u5b83\u4eec\u3002\u5982\u679c\u662f none \uff0c\u4ea4\u901a\u4fe1\u53f7\u706f\u5c06\u4e0d\u540c\u6b65\u3002 # \u751f\u6210 10 \u8f86\u8f66\uff0c\u7531 SUMO \u7ba1\u7406\uff0c\u800c\u4e0d\u662f\u4ea4\u901a\u7ba1\u7406\u5668 python3 spawn_sumo_npc.py -n 10 --tls-manager carla --sumo-gui \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f\u4e0e Carla \u8fdb\u884c SUMO \u8054\u5408\u6a21\u62df\u7684\u5168\u90e8\u5185\u5bb9\u3002 \u6253\u5f00 Carla \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"\u7531 SUMO \u63a7\u5236\u7684 NPC \u751f\u6210"},{"location":"adv_synchrony_timestep/","text":"\u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u672c\u8282\u4ecb\u7ecd CARLA \u4e2d\u7684\u4e24\u4e2a\u57fa\u672c\u6982\u5ff5\u3002\u5b83\u4eec\u7684\u914d\u7f6e\u5b9a\u4e49\u4e86\u6a21\u62df\u4e2d\u7684\u65f6\u95f4\u5982\u4f55\u6d41\u901d\uff0c\u4ee5\u53ca\u670d\u52a1\u5668\u5982\u4f55\u4f7f\u6a21\u62df\u5411\u524d\u63a8\u8fdb \u4eff\u771f\u548c\u65f6\u95f4\u6b65\u957f \u53ef\u53d8\u65f6\u95f4\u6b65\u957f \u56fa\u5b9a\u65f6\u95f4\u6b65\u957f \u6a21\u62df\u8bb0\u5f55 \u7269\u7406\u5b50\u6b65 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65 \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u53ef\u80fd\u7684\u914d\u7f6e \u7269\u7406\u51b3\u5b9a\u8bba \u4eff\u771f\u65f6\u95f4\u6b65\u957f \u5b9e\u65f6\u548c\u6a21\u62df\u65f6\u95f4\u662f\u6709\u533a\u522b\u7684\u3002\u6a21\u62df\u4e16\u754c\u6709\u81ea\u5df1\u7684\u65f6\u949f\u548c\u65f6\u95f4\uff0c\u7531\u670d\u52a1\u5668\u6267\u884c\u3002\u8ba1\u7b97\u4e24\u4e2a\u4eff\u771f\u6b65\u9aa4\u9700\u8981\u4e00\u4e9b\u5b9e\u65f6\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u4e24\u4e2a\u6a21\u62df\u65f6\u523b\u4e4b\u95f4\u4e5f\u5b58\u5728\u65f6\u95f4\u8de8\u5ea6\uff0c\u5373\u65f6\u95f4\u6b65\u957f \u4e3a\u4e86\u6f84\u6e05\u8fd9\u4e00\u70b9\uff0c\u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u51e0\u6beb\u79d2\u6765\u8ba1\u7b97\u6a21\u62df\u7684\u4e24\u4e2a\u6b65\u9aa4\u3002\u4f46\u662f\uff0c\u8fd9\u4e24\u4e2a\u4eff\u771f\u65f6\u523b\u4e4b\u95f4\u7684\u65f6\u95f4\u6b65\u957f\u53ef\u4ee5\u914d\u7f6e\u4e3a\uff0c\u4f8b\u5982\uff0c\u59cb\u7ec8\u4e3a\u4e00\u79d2\u3002 \u65f6\u95f4\u6b65\u957f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u53ef\u53d8\u7684\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u7528\u6237\u7684\u504f\u597d\u3002 \u7b14\u8bb0 \u65f6\u95f4\u6b65\u957f\u548c\u540c\u6b65\u662f\u76f8\u4e92\u4ea4\u7ec7\u7684\u6982\u5ff5\u3002\u8bf7\u52a1\u5fc5\u9605\u8bfb\u8fd9\u4e24\u4e2a\u90e8\u5206\uff0c\u4ee5\u5145\u5206\u4e86\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u53ef\u53d8\u65f6\u95f4\u6b65\u957f CARLA\u4e2d\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002\u6b65\u9aa4\u4e4b\u95f4\u7684\u6a21\u62df\u65f6\u95f4\u5c06\u662f\u670d\u52a1\u5668\u8ba1\u7b97\u8fd9\u4e9b\u6b65\u9aa4\u6240\u9700\u7684\u65f6\u95f4\u3002 settings = world.get_settings() settings.fixed_delta_seconds = None # Set a variable time-step world.apply_settings(settings) PythonAPI/util/config.py \u4f7f\u7528\u53c2\u6570\u8bbe\u7f6e\u65f6\u95f4\u6b65\u957f\u3002\u96f6\u7b49\u4e8e\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 cd PythonAPI/util && python3 config.py --delta-seconds 0 \u56fa\u5b9a\u65f6\u95f4\u6b65\u957f \u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e4b\u95f4\u7ecf\u8fc7\u7684\u65f6\u95f4\u4fdd\u6301\u6052\u5b9a\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a 0.5 \u79d2\uff0c\u6bcf\u79d2\u5c06\u6709\u4e24\u4e2a\u6a21\u62df\u5e27\u3002\u4f7f\u7528\u76f8\u540c\u7684\u65f6\u95f4\u589e\u91cf\u5bf9\u4e8e\u4ece\u6a21\u62df\u4e2d\u83b7\u53d6\u6570\u636e\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u7269\u7406\u548c\u4f20\u611f\u5668\u6570\u636e\u5c06\u5bf9\u5e94\u4e8e\u6a21\u62df\u4e2d\u6613\u4e8e\u7406\u89e3\u7684\u65f6\u523b\u3002\u6b64\u5916\uff0c\u5982\u679c\u670d\u52a1\u5668\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u5728\u66f4\u5c11\u7684\u5b9e\u9645\u65f6\u95f4\u5185\u6a21\u62df\u66f4\u957f\u7684\u65f6\u95f4\u6bb5\u3002 \u53ef\u4ee5\u5728\u4e16\u754c\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u8981\u5c06\u6a21\u62df\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u4e3a0.05\u79d2\uff0c\u8bf7\u5e94\u7528\u4ee5\u4e0b\u8bbe\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u5668\u5c06\u82b1\u8d3920\u4e2a\u6b65\u9aa4\uff081/0.05\uff09\u6765\u91cd\u73b0\u6a21\u62df\u4e16\u754c\u4e2d\u7684\u4e00\u79d2\u3002 settings = world.get_settings() settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) \u8fd9\u4e5f\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u7684\u811a\u672c\u8fdb\u884c\u8bbe\u7f6e\u3002 PythonAPI/util/config.py cd PythonAPI/util && python3 config.py --delta-seconds 0.05 \u6a21\u62df\u8bb0\u5f55 CARLA\u5177\u6709 \u8bb0\u5f55\u5668 \u529f\u80fd\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6a21\u62df\uff0c\u7136\u540e\u91cd\u65b0\u6f14\u7ece\u3002\u4f46\u662f\uff0c\u5728\u5bfb\u627e\u7cbe\u5ea6\u65f6\uff0c\u9700\u8981\u8003\u8651\u4e00\u4e9b\u4e8b\u60c5\u3002 \u6709\u4e86 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff0c\u91cd\u6f14\u5b83\u5c31\u5f88\u5bb9\u6613\u4e86\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e0e\u539f\u59cb\u6a21\u62df\u76f8\u540c\u7684\u65f6\u95f4\u6b65\u957f\u3002 \u4f7f\u7528 \u53ef\u53d8\u7684\u65f6\u95f4\u6b65\u957f \uff0c\u4e8b\u60c5\u4f1a\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002 \u5982\u679c\u670d\u52a1\u5668\u4ee5\u53ef\u53d8\u7684\u65f6\u95f4\u6b65\u957f\u8fd0\u884c\uff0c\u5219\u65f6\u95f4\u6b65\u957f\u5c06\u4e0e\u539f\u59cb\u65f6\u95f4\u6b65\u957f\u4e0d\u540c\uff0c\u56e0\u4e3a\u903b\u8f91\u5468\u671f\u4f1a\u4e0d\u65f6\u53d8\u5316\u3002\u7136\u540e\uff0c\u5c06\u4f7f\u7528\u8bb0\u5f55\u7684\u6570\u636e\u5bf9\u4fe1\u606f\u8fdb\u884c\u63d2\u503c\u3002 \u5982\u679c \u670d\u52a1\u5668\u88ab\u8feb\u91cd\u73b0\u5b8c\u5168\u76f8\u540c\u7684\u65f6\u95f4 \u6b65\u957f\uff0c\u5219\u6a21\u62df\u7684\u6b65\u957f\u5c06\u76f8\u540c\uff0c\u4f46\u5b83\u4eec\u4e4b\u95f4\u7684\u5b9e\u65f6\u65f6\u95f4\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u65f6\u95f4\u6b65\u957f\u5e94\u9010\u4e00\u4f20\u9012\u3002\u8fd9\u4e9b\u539f\u59cb\u65f6\u95f4\u6b65\u957f\u662f\u539f\u59cb\u6a21\u62df\u5c3d\u53ef\u80fd\u5feb\u8fd0\u884c\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u8868\u793a\u8fd9\u4e9b\u6240\u9700\u7684\u65f6\u95f4\u5927\u591a\u4e0d\u540c\uff0c\u56e0\u6b64\u6a21\u62df\u5fc5\u7136\u4f1a\u4ee5\u5947\u602a\u7684\u65f6\u95f4\u6ce2\u52a8\u518d\u73b0\u3002 \u7269\u7406\u5b50\u6b65 \u4e3a\u4e86\u7cbe\u786e\u8ba1\u7b97\u7269\u7406\u6548\u679c\uff0c\u7269\u7406\u6a21\u62df\u5fc5\u987b\u5728\u975e\u5e38\u5c0f\u7684\u65f6\u95f4\u6b65\u5185\u8fdb\u884c\u3002\u5f53\u6211\u4eec\u5728\u6a21\u62df\u4e2d\u6bcf\u5e27\u6267\u884c\u591a\u6b21\u8ba1\u7b97\uff08\u4f8b\u5982\u4f20\u611f\u5668\u6e32\u67d3\uff0c\u8bfb\u53d6\u5b58\u50a8\u7b49\uff09\u65f6\uff0c\u65f6\u95f4\u6b65\u957f\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u8fd9\u4e2a\u9650\u5236\u4ec5\u53d1\u751f\u5728\u7269\u7406\u6a21\u62df\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ec5\u5bf9\u7269\u7406\u8ba1\u7b97\u5e94\u7528\u5b50\u6b65\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7269\u7406\u5b50\u6b65\u662f\u6253\u5f00\u7684\uff0c\u5e76\u4e14\u88ab\u8bbe\u5b9a\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\u6700\u592710\u4e2a\u7269\u7406\u5b50\u6b65\u6ca1\uff0c\u6bcf\u4e2a\u7269\u7406\u5b50\u6b65\u6700\u5927\u4e3a0.01\u79d2\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7API\u8c03\u6574\u8fd9\u4e9b\u8bbe\u5b9a\uff1a settings = world.get_settings() settings.substepping = True settings.max_substep_delta_time = 0.01 settings.max_substeps = 10 world.apply_settings(settings) \u6ce8\u610f\uff0c\u5f53\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u65f6\uff0c\u6211\u4eec\u8bbe\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u65f6\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u6761\u4ef6\u6765\u4fdd\u8bc1\u7269\u7406\u6a21\u62df\u7684\u51c6\u786e\u6027\uff1a fixed_delta_seconds <= max_substep_delta_time * max_substeps \u6ce8\u610f\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7269\u7406\u6a21\u62df\u7684\u51c6\u786e\u6027\uff0c\u5b50\u6b65\u7684\u65f6\u95f4\u95f4\u9694\u5e94\u8be5\u81f3\u5c11\u4f4e\u4e8e0.01666\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u4f4e\u4e8e0.01\u3002 \u4e3a\u4e86\u6f14\u793a\u6700\u4f73\u7269\u7406\u5b50\u6b65\u7684\u6548\u679c\uff0c\u8bf7\u8003\u8651\u4e0b\u9762\u7684\u56fe\u3002\u4e0b\u9762\u7684\u7b2c\u4e00\u4e2a\u56fe\u8868\u663e\u793a\u4e86\u5728\u4e0d\u540c\u56fa\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u7684\u6a21\u62df\u4e2d\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u7269\u7406\u589e\u91cf\u65f6\u95f4\u5728\u6240\u6709\u6a21\u62df\u4e2d\u90fd\u662f\u6052\u5b9a\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3a0.01\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u901f\u5ea6\u4e0d\u53d7\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u5dee\u5f02\u7684\u5f71\u54cd\u3002 \u7b2c\u4e8c\u5f20\u56fe\u663e\u793a\u4e86\u6a21\u62df\u4e2d\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u56fa\u5b9a\u4e3a0.04\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u7269\u7406\u589e\u91cf\u65f6\u95f4\u8d85\u8fc70.01\uff0c\u901f\u5ea6\u5e38\u6570\u5f00\u59cb\u51fa\u73b0\u504f\u5dee\uff0c\u968f\u7740\u7269\u7406\u589e\u91cf\u65f6\u95f4\u7684\u589e\u52a0\uff0c\u504f\u5dee\u7684\u4e25\u91cd\u7a0b\u5ea6\u4e5f\u5728\u589e\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u6d4b\u91cfz-\u52a0\u901f\u5ea6\u65f6\u663e\u793a\u7269\u7406\u589e\u91cf\u65f6\u95f4\u4e0e\u56fa\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u76f8\u540c\u7684\u5dee\u5f02\u7684\u5f71\u54cd\u6765\u518d\u6b21\u8bc1\u660e\u8fd9\u79cd\u504f\u5dee\uff0c\u53ea\u6709\u5f53\u7269\u7406\u589e\u91cf\u65f6\u95f4\u4e3a0.01\u6216\u66f4\u5c0f\u65f6\u624d\u4f1a\u53d1\u751f\u6536\u655b\u3002 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65 CARLA\u91c7\u7528\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u3002\u670d\u52a1\u5668\u8fd0\u884c\u6a21\u62df\uff0c\u5ba2\u6237\u7aef\u83b7\u53d6\u4fe1\u606f\u5e76\u5bf9\u4e16\u754c\u8fdb\u884c\u4fee\u6539\u3002\u672c\u8282\u6d89\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA\u4ee5\u5f02\u6b65\u6a21\u5f0f\u8fd0\u884c\u3002\u670d\u52a1\u5668\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u6a21\u62df\uff0c\u800c\u4e0d\u7b49\u5f85\u5ba2\u6237\u7aef\u3002\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u670d\u52a1\u5668\u5728\u66f4\u65b0\u5230\u4e0b\u4e00\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e4b\u524d\u4f1a\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u201cready to go\u201d\u7684\u6d88\u606f\u3002 \u7b14\u8bb0 \u540c\u65f6\u8fd0\u884c\u591a\u4e2aclient\u65f6\uff0c\u53ea\u80fd\u6709\u4e00\u4e2aclient\u5f00\u542f\u540c\u6b65\u6a21\u5f0f\uff0c\u56e0\u4e3aserver\u4f1a\u5bf9\u6bcf\u4e2a\u6536\u5230\u7684\u201cready to go\u201d\u4fe1\u606f\u8fdb\u884c\u53cd\u5e94\uff0c\u591a\u4e2aclient\u5f00\u542f\u540c\u6b65\u6a21\u5f0f\u5c06\u4f1a\u53d1\u9001\u8fc7\u591a\u201cready to go\u201d\u4fe1\u606f\u5bfc\u81f4\u540c\u6b65\u5931\u8d25\u3002 \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u53ea\u9700\u8981\u6539\u53d8 settings.synchronous_mode\u7684\u503c\u5373\u53ef\u3002 settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode world.apply_settings(settings) \u8b66\u544a \u5982\u679c\u542f\u7528\u4e86\u540c\u6b65\u6a21\u5f0f\uff0c\u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5219\u4e5f\u5fc5\u987b\u5c06\u5176\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb this \u4ee5\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u8981\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff0c\u53ea\u9700\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a false \u6216\u4f7f\u7528\u811a\u672c\u3002 PythonAPI/util/config.py . cd PythonAPI/util && python3 config.py --no-sync # Disables synchronous mode \u540c\u6b65\u6a21\u5f0f\u4e0d\u80fd\u901a\u8fc7\u811a\u672c\u542f\u7528\uff0c\u53ea\u80fd\u7981\u7528\u3002\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u5c06\u4f7f\u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u673a\u7684\u54cd\u5e94\u3002\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\uff0c\u7528\u6237\u4e0d\u80fd\u5728\u9700\u8981\u7684\u65f6\u5019\u53d1\u9001\u523b\u5ea6\u3002 \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u5728\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u8f83\u6162\u4ee5\u53ca\u9700\u8981\u4e0d\u540c\u5143\u7d20\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u5982\u4f20\u611f\u5668\u7b49\u60c5\u51b5\u4e0b\u5c24\u4e3a\u91cd\u8981\u3002\u5982\u679c\u5ba2\u6237\u7aef\u901f\u5ea6\u592a\u6162\u800c\u670d\u52a1\u5668\u4e0d\u7b49\u5f85\uff0c\u4fe1\u606f\u5c06\u4f1a\u6ea2\u51fa\u3002\u5ba2\u6237\u7aef\u5c06\u65e0\u6cd5\u7ba1\u7406\u6240\u6709\u5185\u5bb9\uff0c\u4fe1\u606f\u4f1a\u4e22\u5931\u6216\u6df7\u6dc6\u3002\u7c7b\u4f3c\u7684\u60c5\u51b5\u662f\uff0c\u5982\u679c\u6709\u5f88\u591a\u4f20\u611f\u5668\u548c\u5f02\u6b65\u64cd\u4f5c\uff0c\u5c06\u65e0\u6cd5\u786e\u5b9a\u6240\u6709\u4f20\u611f\u5668\u662f\u5426\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u6765\u81ea\u540c\u4e00\u65f6\u523b\u7684\u6570\u636e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6269\u5c55\u4e86\u524d\u4e00\u6bb5\u4ee3\u7801\u3002\u5ba2\u6237\u7aef\u521b\u5efa\u4e00\u4e2a\u76f8\u673a\u4f20\u611f\u5668\uff0c\u5c06\u5f53\u524d\u6b65\u9aa4\u7684\u56fe\u50cf\u6570\u636e\u5b58\u50a8\u5728\u961f\u5217\u4e2d\uff0c\u5e76\u5728\u4ece\u961f\u5217\u4e2d\u68c0\u7d22\u540e\u52fe\u9009\u670d\u52a1\u5668\u3002\u53ef\u4ee5 \u5728\u6b64\u5904 \u627e\u5230\u6709\u5173\u591a\u4e2a\u4f20\u611f\u5668\u7684\u66f4\u590d\u6742\u793a\u4f8b\u3002 settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) camera = world.spawn_actor(blueprint, transform) image_queue = queue.Queue() camera.listen(image_queue.put) while True: world.tick() image = image_queue.get() \u91cd\u8981 \u6765\u81ea\u57fa\u4e8eGPU\u7684\u4f20\u611f\u5668\uff08\u4e3b\u8981\u662f\u6444\u50cf\u5934\uff09\u7684\u91cd\u8981\u6570\u636e\u901a\u5e38\u4f1a\u5ef6\u8fdf\u51e0\u5e27\u3002\u5728\u8fd9\u91cc\uff0c\u540c\u6b65\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u4e16\u754c\u5177\u6709\u5f02\u6b65\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u7b49\u5f85\u670d\u52a1\u5668\u7684\u65f6\u95f4\u6b65\u8fdb\uff0c\u6216\u5728\u6536\u5230\u65f6\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002 # Wait for the next tick and retrieve the snapshot of the tick. world_snapshot = world.wait_for_tick() # Register a callback to get called every time we receive a new snapshot. world.on_tick(lambda world_snapshot: do_something(world_snapshot)) \u53ef\u80fd\u7684\u914d\u7f6e \u65f6\u95f4\u6b65\u957f\u548c\u540c\u6b65\u7684\u914d\u7f6e\uff0c\u5bfc\u81f4\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e9b\u53ef\u80fd\u6027\u7684\u7b80\u8981\u603b\u7ed3\u3002 \u56fa\u5b9a\u65f6\u95f4\u6b65\u957f \u53ef\u53d8\u65f6\u95f4\u6b65\u957f \u540c\u6b65\u6a21\u5f0f \u5ba2\u6237\u5b8c\u5168\u63a7\u5236\u6a21\u62df\u53ca\u5176\u4fe1\u606f\u3002 \u4e0d\u53ef\u9760\u6a21\u62df\u7684\u98ce\u9669\u3002 \u5f02\u6b65\u6a21\u5f0f \u8fd9\u662f\u5173\u4e8e\u4fe1\u606f\u7684\u597d\u65f6\u95f4\u53c2\u8003\uff0c\u670d\u52a1\u5668\u5c3d\u53ef\u80fd\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u8fd0\u884c\u3002 \u4e0d\u5bb9\u6613\u91cd\u590d\u7684\u6a21\u62df\u3002 \u540c\u6b65\u6a21\u5f0f+\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 \u8fd9\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u662f\u4e00\u79cd\u4e0d\u53ef\u53d6\u7684\u72b6\u6001\u3002\u5f53\u65f6\u95f4\u6b65\u957f\u5927\u4e8e 0.1 \u79d2\u65f6\uff0c\u7269\u7406\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u5982\u679c\u670d\u52a1\u5668\u5fc5\u987b\u7b49\u5f85\u5ba2\u6237\u7aef\u8ba1\u7b97\u6b65\u9aa4\uff0c\u5219\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4eff\u771f\u65f6\u95f4\u548c\u7269\u7406\u7279\u6027\u4e0d\u4f1a\u540c\u6b65\u3002\u6a21\u62df\u5c06\u4e0d\u53ef\u9760\u3002 \u5f02\u6b65\u6a21\u5f0f+\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 \u8fd9\u662f\u9ed8\u8ba4\u7684 CARLA \u72b6\u6001\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u662f\u5f02\u6b65\u7684\u3002\u6a21\u62df\u65f6\u95f4\u6839\u636e\u5b9e\u65f6\u6d41\u52a8\u3002\u91cd\u65b0\u6267\u884c\u6a21\u62df\u9700\u8981\u8003\u8651\u6d6e\u70b9\u6570\u7b97\u672f\u8bef\u5dee\uff0c\u4ee5\u53ca\u670d\u52a1\u5668\u4e4b\u95f4\u65f6\u95f4\u6b65\u957f\u7684\u53ef\u80fd\u5dee\u5f02\u3002 \u5f02\u6b65\u6a21\u5f0f+\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u3002 \u670d\u52a1\u5668\u5c06\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u3002\u68c0\u7d22\u5230\u7684\u4fe1\u606f\u5c06\u5f88\u5bb9\u6613\u4e0e\u6a21\u62df\u4e2d\u7684\u786e\u5207\u65f6\u523b\u76f8\u5173\u8054\u3002\u5982\u679c\u670d\u52a1\u5668\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u8fd9\u79cd\u914d\u7f6e\u53ef\u4ee5\u4ee5\u66f4\u4f4e\u7684\u5b9e\u65f6\u5ea6\u6a21\u62df\u957f\u65f6\u95f4\u3002 \u540c\u6b65\u6a21\u5f0f+\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u3002 \u5ba2\u6237\u7aef\u5c06\u7edf\u6cbb\u6a21\u62df\u3002\u65f6\u95f4\u6b65\u957f\u5c06\u662f\u56fa\u5b9a\u7684\u3002\u5728\u5ba2\u6237\u7aef\u53d1\u9001\u5373\u65f6\u62a5\u4ef7\u4e4b\u524d\uff0c\u670d\u52a1\u5668\u4e0d\u4f1a\u8ba1\u7b97\u4ee5\u4e0b\u6b65\u9aa4\u3002\u5f53\u540c\u6b65\u548c\u7cbe\u5ea6\u76f8\u5173\u65f6\uff0c\u8fd9\u662f\u6700\u4f73\u6a21\u5f0f\u3002\u5c24\u5176\u662f\u5728\u5904\u7406\u7f13\u6162\u7684\u5ba2\u6237\u7aef\u6216\u68c0\u7d22\u4fe1\u606f\u7684\u4e0d\u540c\u5143\u7d20\u65f6\u3002 \u8b66\u544a \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u5982\u679c\u670d\u52a1\u5668\u5fc5\u987b\u7b49\u5f85\u7528\u6237\uff0c\u5e76\u4e14\u5b83\u4f7f\u7528\u7684\u662f\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\uff0c\u5219\u65f6\u95f4\u6b65\u957f\u5c06\u592a\u5927\u3002\u7269\u7406\u5b66\u662f\u4e0d\u53ef\u9760\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\u5728\u65f6\u95f4\u6b65\u957f\u9650\u5236\u90e8\u5206\u6709\u66f4\u597d\u7684\u89e3\u91ca\u3002 \u7269\u7406\u786e\u5b9a\u6027 CARLA\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u652f\u6301\u7269\u7406\u548c\u78b0\u649e\u786e\u5b9a\u6027\uff1a \u540c\u6b65\u6a21\u5f0f\u548c\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u5fc5\u987b\u542f\u7528 \uff1a\u786e\u5b9a\u6027\u8981\u6c42\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u5b8c\u5168\u540c\u6b65\uff0c\u4ee5\u786e\u4fdd\u547d\u4ee4\u88ab\u6b63\u786e\u5e94\u7528\u5e76\u4ea7\u751f\u51c6\u786e\u548c\u53ef\u590d\u5236\u7684\u7ed3\u679c\u3002\u5fc5\u987b\u901a\u8fc7\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u6765\u5f3a\u5236\u6267\u884c\u6052\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u65f6\u95f4\u6b65\u957f\u5c06\u6839\u636e\u6a21\u62df\u6027\u80fd\u5728\u6bcf\u4e2a\u6b65\u9aa4\u81ea\u52a8\u8ba1\u7b97\u3002 \u5728\u52a0\u8f7d\u6216\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\u4e4b\u524d\uff0c\u5fc5\u987b\u542f\u7528\u540c\u6b65\u6a21\u5f0f\uff1a \u5982\u679c\u4e16\u754c\u4ece\u4e00\u5f00\u59cb\u5c31\u4e0d\u5904\u4e8e\u540c\u6b65\u6a21\u5f0f\uff0c\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u540c\u7684\u65f6\u95f4\u6233\u3002\u8fd9\u53ef\u80fd\u4f1a\u5728\u7269\u7406\u6a21\u62df\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u7b49\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e2d\u4ea7\u751f\u5fae\u5c0f\u7684\u5dee\u5f02\u3002 \u6bcf\u4e00\u6b21\u65b0\u7684\u91cd\u590d\u90fd\u5fc5\u987b\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\uff1a \u6bcf\u6b21\u8981\u91cd\u73b0\u6a21\u62df\u65f6\uff0c\u8bf7\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\u3002 \u547d\u4ee4 \u5e94\u8be5\u662f\u6279\u5904\u7406\u7684\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53d1\u51fa\u4e00\u4e2a\u547d\u4ee4\uff1a \u867d\u7136\u5f88\u5c11\u89c1\uff0c\u4f46\u5728\u7e41\u5fd9\u7684\u6a21\u62df\u6216\u8fc7\u8f7d\u7684\u670d\u52a1\u5668\u4e2d\uff0c\u5355\u4e2a\u53d1\u51fa\u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u4e22\u5931\u3002\u5982\u679c\u547d\u4ee4\u5728 apply_batch_sync \u547d\u4ee4\u4e2d\u6279\u5904\u7406\uff0c\u5219\u4fdd\u8bc1\u8be5\u547d\u4ee4\u88ab\u6267\u884c\u6216\u8fd4\u56de\u5931\u8d25\u54cd\u5e94\u3002 \u4ee5\u4e0b\u662f\u4e0a\u8ff0\u6b65\u9aa4\u7684\u793a\u4f8b\uff1a client = carla.Client(HOST, PORT) # connect to the server client.set_timeout(10.0) world = client.get_world() # Load the desired map client.load_world(\"Town10HD_Opt\") # Set synchronous mode settings new_settings = world.get_settings() new_settings.synchronous_mode = True new_settings.fixed_delta_seconds = 0.05 world.apply_settings(new_settings) client.reload_world(False) # reload map keeping the world settings # Set up the traffic manager traffic_manager = client.get_trafficmanager(TM_PORT) traffic_manager.set_synchronous_mode(True) traffic_manager.set_random_device_seed(SEED) # define TM seed for determinism # Spawn your vehicles, pedestrians, etc. # Simulation loop while True: # Your code world.tick() \u64ad\u653e\u529f\u80fd\u7684\u4e00\u4e2a\u5177\u4f53\u793a\u4f8b\uff1a client = carla.Client(HOST, PORT) # connect to the server client.set_timeout(10.0) world = client.get_world() # Load the desired map client.load_world(\"Town10HD_Opt\") # Set synchronous mode settings new_settings = world.get_settings() new_settings.synchronous_mode = True new_settings.fixed_delta_seconds = 0.05 world.apply_settings(new_settings) client.reload_world(False) # reload map keeping the world settings client.replay_file(FILE_TO_PLAY, 0, 0, 0, False) world.tick() # a tick is necessary for the server to process the replay_file command # Simulation loop while True: # Your code world.tick() \u8fd0\u884c\u8fd9\u4e9b\u6b65\u9aa4\u5c06\u786e\u4fdd\u6bcf\u6b21\u6a21\u62df\u8fd0\u884c\u7684\u7ed3\u679c\u76f8\u540c\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e\u6a21\u62df\u65f6\u95f4\u548c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65\u5728 CARLA \u4e2d\u7684\u4f5c\u7528\u7684\u5168\u90e8\u4fe1\u606f\u3002 Open CARLA and mess around for a while. Any suggestions or doubts are welcome in the forum. CARLA forum","title":"\u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f"},{"location":"adv_synchrony_timestep/#_1","text":"\u672c\u8282\u4ecb\u7ecd CARLA \u4e2d\u7684\u4e24\u4e2a\u57fa\u672c\u6982\u5ff5\u3002\u5b83\u4eec\u7684\u914d\u7f6e\u5b9a\u4e49\u4e86\u6a21\u62df\u4e2d\u7684\u65f6\u95f4\u5982\u4f55\u6d41\u901d\uff0c\u4ee5\u53ca\u670d\u52a1\u5668\u5982\u4f55\u4f7f\u6a21\u62df\u5411\u524d\u63a8\u8fdb \u4eff\u771f\u548c\u65f6\u95f4\u6b65\u957f \u53ef\u53d8\u65f6\u95f4\u6b65\u957f \u56fa\u5b9a\u65f6\u95f4\u6b65\u957f \u6a21\u62df\u8bb0\u5f55 \u7269\u7406\u5b50\u6b65 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65 \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u53ef\u80fd\u7684\u914d\u7f6e \u7269\u7406\u51b3\u5b9a\u8bba","title":"\u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f"},{"location":"adv_synchrony_timestep/#_2","text":"\u5b9e\u65f6\u548c\u6a21\u62df\u65f6\u95f4\u662f\u6709\u533a\u522b\u7684\u3002\u6a21\u62df\u4e16\u754c\u6709\u81ea\u5df1\u7684\u65f6\u949f\u548c\u65f6\u95f4\uff0c\u7531\u670d\u52a1\u5668\u6267\u884c\u3002\u8ba1\u7b97\u4e24\u4e2a\u4eff\u771f\u6b65\u9aa4\u9700\u8981\u4e00\u4e9b\u5b9e\u65f6\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u4e24\u4e2a\u6a21\u62df\u65f6\u523b\u4e4b\u95f4\u4e5f\u5b58\u5728\u65f6\u95f4\u8de8\u5ea6\uff0c\u5373\u65f6\u95f4\u6b65\u957f \u4e3a\u4e86\u6f84\u6e05\u8fd9\u4e00\u70b9\uff0c\u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u51e0\u6beb\u79d2\u6765\u8ba1\u7b97\u6a21\u62df\u7684\u4e24\u4e2a\u6b65\u9aa4\u3002\u4f46\u662f\uff0c\u8fd9\u4e24\u4e2a\u4eff\u771f\u65f6\u523b\u4e4b\u95f4\u7684\u65f6\u95f4\u6b65\u957f\u53ef\u4ee5\u914d\u7f6e\u4e3a\uff0c\u4f8b\u5982\uff0c\u59cb\u7ec8\u4e3a\u4e00\u79d2\u3002 \u65f6\u95f4\u6b65\u957f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u53ef\u53d8\u7684\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u7528\u6237\u7684\u504f\u597d\u3002 \u7b14\u8bb0 \u65f6\u95f4\u6b65\u957f\u548c\u540c\u6b65\u662f\u76f8\u4e92\u4ea4\u7ec7\u7684\u6982\u5ff5\u3002\u8bf7\u52a1\u5fc5\u9605\u8bfb\u8fd9\u4e24\u4e2a\u90e8\u5206\uff0c\u4ee5\u5145\u5206\u4e86\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"\u4eff\u771f\u65f6\u95f4\u6b65\u957f"},{"location":"adv_synchrony_timestep/#_3","text":"CARLA\u4e2d\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002\u6b65\u9aa4\u4e4b\u95f4\u7684\u6a21\u62df\u65f6\u95f4\u5c06\u662f\u670d\u52a1\u5668\u8ba1\u7b97\u8fd9\u4e9b\u6b65\u9aa4\u6240\u9700\u7684\u65f6\u95f4\u3002 settings = world.get_settings() settings.fixed_delta_seconds = None # Set a variable time-step world.apply_settings(settings) PythonAPI/util/config.py \u4f7f\u7528\u53c2\u6570\u8bbe\u7f6e\u65f6\u95f4\u6b65\u957f\u3002\u96f6\u7b49\u4e8e\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 cd PythonAPI/util && python3 config.py --delta-seconds 0","title":"\u53ef\u53d8\u65f6\u95f4\u6b65\u957f"},{"location":"adv_synchrony_timestep/#_4","text":"\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e4b\u95f4\u7ecf\u8fc7\u7684\u65f6\u95f4\u4fdd\u6301\u6052\u5b9a\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a 0.5 \u79d2\uff0c\u6bcf\u79d2\u5c06\u6709\u4e24\u4e2a\u6a21\u62df\u5e27\u3002\u4f7f\u7528\u76f8\u540c\u7684\u65f6\u95f4\u589e\u91cf\u5bf9\u4e8e\u4ece\u6a21\u62df\u4e2d\u83b7\u53d6\u6570\u636e\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u7269\u7406\u548c\u4f20\u611f\u5668\u6570\u636e\u5c06\u5bf9\u5e94\u4e8e\u6a21\u62df\u4e2d\u6613\u4e8e\u7406\u89e3\u7684\u65f6\u523b\u3002\u6b64\u5916\uff0c\u5982\u679c\u670d\u52a1\u5668\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u5728\u66f4\u5c11\u7684\u5b9e\u9645\u65f6\u95f4\u5185\u6a21\u62df\u66f4\u957f\u7684\u65f6\u95f4\u6bb5\u3002 \u53ef\u4ee5\u5728\u4e16\u754c\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u8981\u5c06\u6a21\u62df\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u4e3a0.05\u79d2\uff0c\u8bf7\u5e94\u7528\u4ee5\u4e0b\u8bbe\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a21\u62df\u5668\u5c06\u82b1\u8d3920\u4e2a\u6b65\u9aa4\uff081/0.05\uff09\u6765\u91cd\u73b0\u6a21\u62df\u4e16\u754c\u4e2d\u7684\u4e00\u79d2\u3002 settings = world.get_settings() settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) \u8fd9\u4e5f\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u7684\u811a\u672c\u8fdb\u884c\u8bbe\u7f6e\u3002 PythonAPI/util/config.py cd PythonAPI/util && python3 config.py --delta-seconds 0.05","title":"\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f"},{"location":"adv_synchrony_timestep/#_5","text":"CARLA\u5177\u6709 \u8bb0\u5f55\u5668 \u529f\u80fd\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6a21\u62df\uff0c\u7136\u540e\u91cd\u65b0\u6f14\u7ece\u3002\u4f46\u662f\uff0c\u5728\u5bfb\u627e\u7cbe\u5ea6\u65f6\uff0c\u9700\u8981\u8003\u8651\u4e00\u4e9b\u4e8b\u60c5\u3002 \u6709\u4e86 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff0c\u91cd\u6f14\u5b83\u5c31\u5f88\u5bb9\u6613\u4e86\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e0e\u539f\u59cb\u6a21\u62df\u76f8\u540c\u7684\u65f6\u95f4\u6b65\u957f\u3002 \u4f7f\u7528 \u53ef\u53d8\u7684\u65f6\u95f4\u6b65\u957f \uff0c\u4e8b\u60c5\u4f1a\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002 \u5982\u679c\u670d\u52a1\u5668\u4ee5\u53ef\u53d8\u7684\u65f6\u95f4\u6b65\u957f\u8fd0\u884c\uff0c\u5219\u65f6\u95f4\u6b65\u957f\u5c06\u4e0e\u539f\u59cb\u65f6\u95f4\u6b65\u957f\u4e0d\u540c\uff0c\u56e0\u4e3a\u903b\u8f91\u5468\u671f\u4f1a\u4e0d\u65f6\u53d8\u5316\u3002\u7136\u540e\uff0c\u5c06\u4f7f\u7528\u8bb0\u5f55\u7684\u6570\u636e\u5bf9\u4fe1\u606f\u8fdb\u884c\u63d2\u503c\u3002 \u5982\u679c \u670d\u52a1\u5668\u88ab\u8feb\u91cd\u73b0\u5b8c\u5168\u76f8\u540c\u7684\u65f6\u95f4 \u6b65\u957f\uff0c\u5219\u6a21\u62df\u7684\u6b65\u957f\u5c06\u76f8\u540c\uff0c\u4f46\u5b83\u4eec\u4e4b\u95f4\u7684\u5b9e\u65f6\u65f6\u95f4\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u65f6\u95f4\u6b65\u957f\u5e94\u9010\u4e00\u4f20\u9012\u3002\u8fd9\u4e9b\u539f\u59cb\u65f6\u95f4\u6b65\u957f\u662f\u539f\u59cb\u6a21\u62df\u5c3d\u53ef\u80fd\u5feb\u8fd0\u884c\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u8868\u793a\u8fd9\u4e9b\u6240\u9700\u7684\u65f6\u95f4\u5927\u591a\u4e0d\u540c\uff0c\u56e0\u6b64\u6a21\u62df\u5fc5\u7136\u4f1a\u4ee5\u5947\u602a\u7684\u65f6\u95f4\u6ce2\u52a8\u518d\u73b0\u3002","title":"\u6a21\u62df\u8bb0\u5f55"},{"location":"adv_synchrony_timestep/#_6","text":"\u4e3a\u4e86\u7cbe\u786e\u8ba1\u7b97\u7269\u7406\u6548\u679c\uff0c\u7269\u7406\u6a21\u62df\u5fc5\u987b\u5728\u975e\u5e38\u5c0f\u7684\u65f6\u95f4\u6b65\u5185\u8fdb\u884c\u3002\u5f53\u6211\u4eec\u5728\u6a21\u62df\u4e2d\u6bcf\u5e27\u6267\u884c\u591a\u6b21\u8ba1\u7b97\uff08\u4f8b\u5982\u4f20\u611f\u5668\u6e32\u67d3\uff0c\u8bfb\u53d6\u5b58\u50a8\u7b49\uff09\u65f6\uff0c\u65f6\u95f4\u6b65\u957f\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u8fd9\u4e2a\u9650\u5236\u4ec5\u53d1\u751f\u5728\u7269\u7406\u6a21\u62df\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ec5\u5bf9\u7269\u7406\u8ba1\u7b97\u5e94\u7528\u5b50\u6b65\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7269\u7406\u5b50\u6b65\u662f\u6253\u5f00\u7684\uff0c\u5e76\u4e14\u88ab\u8bbe\u5b9a\u4e3a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\u6700\u592710\u4e2a\u7269\u7406\u5b50\u6b65\u6ca1\uff0c\u6bcf\u4e2a\u7269\u7406\u5b50\u6b65\u6700\u5927\u4e3a0.01\u79d2\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7API\u8c03\u6574\u8fd9\u4e9b\u8bbe\u5b9a\uff1a settings = world.get_settings() settings.substepping = True settings.max_substep_delta_time = 0.01 settings.max_substeps = 10 world.apply_settings(settings) \u6ce8\u610f\uff0c\u5f53\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u65f6\uff0c\u6211\u4eec\u8bbe\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u65f6\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u6761\u4ef6\u6765\u4fdd\u8bc1\u7269\u7406\u6a21\u62df\u7684\u51c6\u786e\u6027\uff1a fixed_delta_seconds <= max_substep_delta_time * max_substeps \u6ce8\u610f\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7269\u7406\u6a21\u62df\u7684\u51c6\u786e\u6027\uff0c\u5b50\u6b65\u7684\u65f6\u95f4\u95f4\u9694\u5e94\u8be5\u81f3\u5c11\u4f4e\u4e8e0.01666\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u4f4e\u4e8e0.01\u3002 \u4e3a\u4e86\u6f14\u793a\u6700\u4f73\u7269\u7406\u5b50\u6b65\u7684\u6548\u679c\uff0c\u8bf7\u8003\u8651\u4e0b\u9762\u7684\u56fe\u3002\u4e0b\u9762\u7684\u7b2c\u4e00\u4e2a\u56fe\u8868\u663e\u793a\u4e86\u5728\u4e0d\u540c\u56fa\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u7684\u6a21\u62df\u4e2d\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u7269\u7406\u589e\u91cf\u65f6\u95f4\u5728\u6240\u6709\u6a21\u62df\u4e2d\u90fd\u662f\u6052\u5b9a\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3a0.01\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u901f\u5ea6\u4e0d\u53d7\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u5dee\u5f02\u7684\u5f71\u54cd\u3002 \u7b2c\u4e8c\u5f20\u56fe\u663e\u793a\u4e86\u6a21\u62df\u4e2d\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u56fa\u5b9a\u4e3a0.04\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u7269\u7406\u589e\u91cf\u65f6\u95f4\u8d85\u8fc70.01\uff0c\u901f\u5ea6\u5e38\u6570\u5f00\u59cb\u51fa\u73b0\u504f\u5dee\uff0c\u968f\u7740\u7269\u7406\u589e\u91cf\u65f6\u95f4\u7684\u589e\u52a0\uff0c\u504f\u5dee\u7684\u4e25\u91cd\u7a0b\u5ea6\u4e5f\u5728\u589e\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u6d4b\u91cfz-\u52a0\u901f\u5ea6\u65f6\u663e\u793a\u7269\u7406\u589e\u91cf\u65f6\u95f4\u4e0e\u56fa\u5b9a\u6a21\u62df\u65f6\u95f4\u6b65\u957f\u76f8\u540c\u7684\u5dee\u5f02\u7684\u5f71\u54cd\u6765\u518d\u6b21\u8bc1\u660e\u8fd9\u79cd\u504f\u5dee\uff0c\u53ea\u6709\u5f53\u7269\u7406\u589e\u91cf\u65f6\u95f4\u4e3a0.01\u6216\u66f4\u5c0f\u65f6\u624d\u4f1a\u53d1\u751f\u6536\u655b\u3002","title":"\u7269\u7406\u5b50\u6b65"},{"location":"adv_synchrony_timestep/#-","text":"CARLA\u91c7\u7528\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u3002\u670d\u52a1\u5668\u8fd0\u884c\u6a21\u62df\uff0c\u5ba2\u6237\u7aef\u83b7\u53d6\u4fe1\u606f\u5e76\u5bf9\u4e16\u754c\u8fdb\u884c\u4fee\u6539\u3002\u672c\u8282\u6d89\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA\u4ee5\u5f02\u6b65\u6a21\u5f0f\u8fd0\u884c\u3002\u670d\u52a1\u5668\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u6a21\u62df\uff0c\u800c\u4e0d\u7b49\u5f85\u5ba2\u6237\u7aef\u3002\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u670d\u52a1\u5668\u5728\u66f4\u65b0\u5230\u4e0b\u4e00\u4e2a\u6a21\u62df\u6b65\u9aa4\u4e4b\u524d\u4f1a\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u201cready to go\u201d\u7684\u6d88\u606f\u3002 \u7b14\u8bb0 \u540c\u65f6\u8fd0\u884c\u591a\u4e2aclient\u65f6\uff0c\u53ea\u80fd\u6709\u4e00\u4e2aclient\u5f00\u542f\u540c\u6b65\u6a21\u5f0f\uff0c\u56e0\u4e3aserver\u4f1a\u5bf9\u6bcf\u4e2a\u6536\u5230\u7684\u201cready to go\u201d\u4fe1\u606f\u8fdb\u884c\u53cd\u5e94\uff0c\u591a\u4e2aclient\u5f00\u542f\u540c\u6b65\u6a21\u5f0f\u5c06\u4f1a\u53d1\u9001\u8fc7\u591a\u201cready to go\u201d\u4fe1\u606f\u5bfc\u81f4\u540c\u6b65\u5931\u8d25\u3002","title":"\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65"},{"location":"adv_synchrony_timestep/#_7","text":"\u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u53ea\u9700\u8981\u6539\u53d8 settings.synchronous_mode\u7684\u503c\u5373\u53ef\u3002 settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode world.apply_settings(settings) \u8b66\u544a \u5982\u679c\u542f\u7528\u4e86\u540c\u6b65\u6a21\u5f0f\uff0c\u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5219\u4e5f\u5fc5\u987b\u5c06\u5176\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb this \u4ee5\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u8981\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff0c\u53ea\u9700\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a false \u6216\u4f7f\u7528\u811a\u672c\u3002 PythonAPI/util/config.py . cd PythonAPI/util && python3 config.py --no-sync # Disables synchronous mode \u540c\u6b65\u6a21\u5f0f\u4e0d\u80fd\u901a\u8fc7\u811a\u672c\u542f\u7528\uff0c\u53ea\u80fd\u7981\u7528\u3002\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u5c06\u4f7f\u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u673a\u7684\u54cd\u5e94\u3002\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\uff0c\u7528\u6237\u4e0d\u80fd\u5728\u9700\u8981\u7684\u65f6\u5019\u53d1\u9001\u523b\u5ea6\u3002","title":"\u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f"},{"location":"adv_synchrony_timestep/#_8","text":"\u540c\u6b65\u6a21\u5f0f\u5728\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u8f83\u6162\u4ee5\u53ca\u9700\u8981\u4e0d\u540c\u5143\u7d20\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u5982\u4f20\u611f\u5668\u7b49\u60c5\u51b5\u4e0b\u5c24\u4e3a\u91cd\u8981\u3002\u5982\u679c\u5ba2\u6237\u7aef\u901f\u5ea6\u592a\u6162\u800c\u670d\u52a1\u5668\u4e0d\u7b49\u5f85\uff0c\u4fe1\u606f\u5c06\u4f1a\u6ea2\u51fa\u3002\u5ba2\u6237\u7aef\u5c06\u65e0\u6cd5\u7ba1\u7406\u6240\u6709\u5185\u5bb9\uff0c\u4fe1\u606f\u4f1a\u4e22\u5931\u6216\u6df7\u6dc6\u3002\u7c7b\u4f3c\u7684\u60c5\u51b5\u662f\uff0c\u5982\u679c\u6709\u5f88\u591a\u4f20\u611f\u5668\u548c\u5f02\u6b65\u64cd\u4f5c\uff0c\u5c06\u65e0\u6cd5\u786e\u5b9a\u6240\u6709\u4f20\u611f\u5668\u662f\u5426\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u6765\u81ea\u540c\u4e00\u65f6\u523b\u7684\u6570\u636e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6269\u5c55\u4e86\u524d\u4e00\u6bb5\u4ee3\u7801\u3002\u5ba2\u6237\u7aef\u521b\u5efa\u4e00\u4e2a\u76f8\u673a\u4f20\u611f\u5668\uff0c\u5c06\u5f53\u524d\u6b65\u9aa4\u7684\u56fe\u50cf\u6570\u636e\u5b58\u50a8\u5728\u961f\u5217\u4e2d\uff0c\u5e76\u5728\u4ece\u961f\u5217\u4e2d\u68c0\u7d22\u540e\u52fe\u9009\u670d\u52a1\u5668\u3002\u53ef\u4ee5 \u5728\u6b64\u5904 \u627e\u5230\u6709\u5173\u591a\u4e2a\u4f20\u611f\u5668\u7684\u66f4\u590d\u6742\u793a\u4f8b\u3002 settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) camera = world.spawn_actor(blueprint, transform) image_queue = queue.Queue() camera.listen(image_queue.put) while True: world.tick() image = image_queue.get() \u91cd\u8981 \u6765\u81ea\u57fa\u4e8eGPU\u7684\u4f20\u611f\u5668\uff08\u4e3b\u8981\u662f\u6444\u50cf\u5934\uff09\u7684\u91cd\u8981\u6570\u636e\u901a\u5e38\u4f1a\u5ef6\u8fdf\u51e0\u5e27\u3002\u5728\u8fd9\u91cc\uff0c\u540c\u6b65\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u4e16\u754c\u5177\u6709\u5f02\u6b65\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u7b49\u5f85\u670d\u52a1\u5668\u7684\u65f6\u95f4\u6b65\u8fdb\uff0c\u6216\u5728\u6536\u5230\u65f6\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002 # Wait for the next tick and retrieve the snapshot of the tick. world_snapshot = world.wait_for_tick() # Register a callback to get called every time we receive a new snapshot. world.on_tick(lambda world_snapshot: do_something(world_snapshot))","title":"\u4f7f\u7528\u540c\u6b65\u6a21\u5f0f"},{"location":"adv_synchrony_timestep/#_9","text":"\u65f6\u95f4\u6b65\u957f\u548c\u540c\u6b65\u7684\u914d\u7f6e\uff0c\u5bfc\u81f4\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e9b\u53ef\u80fd\u6027\u7684\u7b80\u8981\u603b\u7ed3\u3002 \u56fa\u5b9a\u65f6\u95f4\u6b65\u957f \u53ef\u53d8\u65f6\u95f4\u6b65\u957f \u540c\u6b65\u6a21\u5f0f \u5ba2\u6237\u5b8c\u5168\u63a7\u5236\u6a21\u62df\u53ca\u5176\u4fe1\u606f\u3002 \u4e0d\u53ef\u9760\u6a21\u62df\u7684\u98ce\u9669\u3002 \u5f02\u6b65\u6a21\u5f0f \u8fd9\u662f\u5173\u4e8e\u4fe1\u606f\u7684\u597d\u65f6\u95f4\u53c2\u8003\uff0c\u670d\u52a1\u5668\u5c3d\u53ef\u80fd\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u8fd0\u884c\u3002 \u4e0d\u5bb9\u6613\u91cd\u590d\u7684\u6a21\u62df\u3002 \u540c\u6b65\u6a21\u5f0f+\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 \u8fd9\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u662f\u4e00\u79cd\u4e0d\u53ef\u53d6\u7684\u72b6\u6001\u3002\u5f53\u65f6\u95f4\u6b65\u957f\u5927\u4e8e 0.1 \u79d2\u65f6\uff0c\u7269\u7406\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u5982\u679c\u670d\u52a1\u5668\u5fc5\u987b\u7b49\u5f85\u5ba2\u6237\u7aef\u8ba1\u7b97\u6b65\u9aa4\uff0c\u5219\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4eff\u771f\u65f6\u95f4\u548c\u7269\u7406\u7279\u6027\u4e0d\u4f1a\u540c\u6b65\u3002\u6a21\u62df\u5c06\u4e0d\u53ef\u9760\u3002 \u5f02\u6b65\u6a21\u5f0f+\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u3002 \u8fd9\u662f\u9ed8\u8ba4\u7684 CARLA \u72b6\u6001\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u662f\u5f02\u6b65\u7684\u3002\u6a21\u62df\u65f6\u95f4\u6839\u636e\u5b9e\u65f6\u6d41\u52a8\u3002\u91cd\u65b0\u6267\u884c\u6a21\u62df\u9700\u8981\u8003\u8651\u6d6e\u70b9\u6570\u7b97\u672f\u8bef\u5dee\uff0c\u4ee5\u53ca\u670d\u52a1\u5668\u4e4b\u95f4\u65f6\u95f4\u6b65\u957f\u7684\u53ef\u80fd\u5dee\u5f02\u3002 \u5f02\u6b65\u6a21\u5f0f+\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u3002 \u670d\u52a1\u5668\u5c06\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u3002\u68c0\u7d22\u5230\u7684\u4fe1\u606f\u5c06\u5f88\u5bb9\u6613\u4e0e\u6a21\u62df\u4e2d\u7684\u786e\u5207\u65f6\u523b\u76f8\u5173\u8054\u3002\u5982\u679c\u670d\u52a1\u5668\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u8fd9\u79cd\u914d\u7f6e\u53ef\u4ee5\u4ee5\u66f4\u4f4e\u7684\u5b9e\u65f6\u5ea6\u6a21\u62df\u957f\u65f6\u95f4\u3002 \u540c\u6b65\u6a21\u5f0f+\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u3002 \u5ba2\u6237\u7aef\u5c06\u7edf\u6cbb\u6a21\u62df\u3002\u65f6\u95f4\u6b65\u957f\u5c06\u662f\u56fa\u5b9a\u7684\u3002\u5728\u5ba2\u6237\u7aef\u53d1\u9001\u5373\u65f6\u62a5\u4ef7\u4e4b\u524d\uff0c\u670d\u52a1\u5668\u4e0d\u4f1a\u8ba1\u7b97\u4ee5\u4e0b\u6b65\u9aa4\u3002\u5f53\u540c\u6b65\u548c\u7cbe\u5ea6\u76f8\u5173\u65f6\uff0c\u8fd9\u662f\u6700\u4f73\u6a21\u5f0f\u3002\u5c24\u5176\u662f\u5728\u5904\u7406\u7f13\u6162\u7684\u5ba2\u6237\u7aef\u6216\u68c0\u7d22\u4fe1\u606f\u7684\u4e0d\u540c\u5143\u7d20\u65f6\u3002 \u8b66\u544a \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u5982\u679c\u670d\u52a1\u5668\u5fc5\u987b\u7b49\u5f85\u7528\u6237\uff0c\u5e76\u4e14\u5b83\u4f7f\u7528\u7684\u662f\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\uff0c\u5219\u65f6\u95f4\u6b65\u957f\u5c06\u592a\u5927\u3002\u7269\u7406\u5b66\u662f\u4e0d\u53ef\u9760\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\u5728\u65f6\u95f4\u6b65\u957f\u9650\u5236\u90e8\u5206\u6709\u66f4\u597d\u7684\u89e3\u91ca\u3002","title":"\u53ef\u80fd\u7684\u914d\u7f6e"},{"location":"adv_synchrony_timestep/#_10","text":"CARLA\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u652f\u6301\u7269\u7406\u548c\u78b0\u649e\u786e\u5b9a\u6027\uff1a \u540c\u6b65\u6a21\u5f0f\u548c\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u5fc5\u987b\u542f\u7528 \uff1a\u786e\u5b9a\u6027\u8981\u6c42\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u5b8c\u5168\u540c\u6b65\uff0c\u4ee5\u786e\u4fdd\u547d\u4ee4\u88ab\u6b63\u786e\u5e94\u7528\u5e76\u4ea7\u751f\u51c6\u786e\u548c\u53ef\u590d\u5236\u7684\u7ed3\u679c\u3002\u5fc5\u987b\u901a\u8fc7\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u6765\u5f3a\u5236\u6267\u884c\u6052\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u65f6\u95f4\u6b65\u957f\u5c06\u6839\u636e\u6a21\u62df\u6027\u80fd\u5728\u6bcf\u4e2a\u6b65\u9aa4\u81ea\u52a8\u8ba1\u7b97\u3002 \u5728\u52a0\u8f7d\u6216\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\u4e4b\u524d\uff0c\u5fc5\u987b\u542f\u7528\u540c\u6b65\u6a21\u5f0f\uff1a \u5982\u679c\u4e16\u754c\u4ece\u4e00\u5f00\u59cb\u5c31\u4e0d\u5904\u4e8e\u540c\u6b65\u6a21\u5f0f\uff0c\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u540c\u7684\u65f6\u95f4\u6233\u3002\u8fd9\u53ef\u80fd\u4f1a\u5728\u7269\u7406\u6a21\u62df\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u7b49\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e2d\u4ea7\u751f\u5fae\u5c0f\u7684\u5dee\u5f02\u3002 \u6bcf\u4e00\u6b21\u65b0\u7684\u91cd\u590d\u90fd\u5fc5\u987b\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\uff1a \u6bcf\u6b21\u8981\u91cd\u73b0\u6a21\u62df\u65f6\uff0c\u8bf7\u91cd\u65b0\u52a0\u8f7d\u4e16\u754c\u3002 \u547d\u4ee4 \u5e94\u8be5\u662f\u6279\u5904\u7406\u7684\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53d1\u51fa\u4e00\u4e2a\u547d\u4ee4\uff1a \u867d\u7136\u5f88\u5c11\u89c1\uff0c\u4f46\u5728\u7e41\u5fd9\u7684\u6a21\u62df\u6216\u8fc7\u8f7d\u7684\u670d\u52a1\u5668\u4e2d\uff0c\u5355\u4e2a\u53d1\u51fa\u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u4e22\u5931\u3002\u5982\u679c\u547d\u4ee4\u5728 apply_batch_sync \u547d\u4ee4\u4e2d\u6279\u5904\u7406\uff0c\u5219\u4fdd\u8bc1\u8be5\u547d\u4ee4\u88ab\u6267\u884c\u6216\u8fd4\u56de\u5931\u8d25\u54cd\u5e94\u3002 \u4ee5\u4e0b\u662f\u4e0a\u8ff0\u6b65\u9aa4\u7684\u793a\u4f8b\uff1a client = carla.Client(HOST, PORT) # connect to the server client.set_timeout(10.0) world = client.get_world() # Load the desired map client.load_world(\"Town10HD_Opt\") # Set synchronous mode settings new_settings = world.get_settings() new_settings.synchronous_mode = True new_settings.fixed_delta_seconds = 0.05 world.apply_settings(new_settings) client.reload_world(False) # reload map keeping the world settings # Set up the traffic manager traffic_manager = client.get_trafficmanager(TM_PORT) traffic_manager.set_synchronous_mode(True) traffic_manager.set_random_device_seed(SEED) # define TM seed for determinism # Spawn your vehicles, pedestrians, etc. # Simulation loop while True: # Your code world.tick() \u64ad\u653e\u529f\u80fd\u7684\u4e00\u4e2a\u5177\u4f53\u793a\u4f8b\uff1a client = carla.Client(HOST, PORT) # connect to the server client.set_timeout(10.0) world = client.get_world() # Load the desired map client.load_world(\"Town10HD_Opt\") # Set synchronous mode settings new_settings = world.get_settings() new_settings.synchronous_mode = True new_settings.fixed_delta_seconds = 0.05 world.apply_settings(new_settings) client.reload_world(False) # reload map keeping the world settings client.replay_file(FILE_TO_PLAY, 0, 0, 0, False) world.tick() # a tick is necessary for the server to process the replay_file command # Simulation loop while True: # Your code world.tick() \u8fd0\u884c\u8fd9\u4e9b\u6b65\u9aa4\u5c06\u786e\u4fdd\u6bcf\u6b21\u6a21\u62df\u8fd0\u884c\u7684\u7ed3\u679c\u76f8\u540c\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e\u6a21\u62df\u65f6\u95f4\u548c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u540c\u6b65\u5728 CARLA \u4e2d\u7684\u4f5c\u7528\u7684\u5168\u90e8\u4fe1\u606f\u3002 Open CARLA and mess around for a while. Any suggestions or doubts are welcome in the forum. CARLA forum","title":"\u7269\u7406\u786e\u5b9a\u6027"},{"location":"adv_traffic_manager/","text":"\u4ea4\u901a\u7ba1\u7406\u5668 \u4ec0\u4e48\u662f\u4ea4\u901a\u7ba1\u7406\u5668\uff1f \u7ed3\u6784\u5316\u8bbe\u8ba1 \u7528\u6237\u5b9a\u5236 \u67b6\u6784 \u6982\u8ff0 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u8f66\u8f86\u6ce8\u518c\u8868 \u4eff\u771f\u72b6\u6001 \u63a7\u5236\u5faa\u73af \u5185\u5b58\u5730\u56fe \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 PID \u63a7\u5236\u5668 \u547d\u4ee4\u6570\u7ec4 \u63a7\u5236\u5faa\u73af\u7684\u9636\u6bb5 \u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668 \u8f66\u8f86\u884c\u4e3a\u8003\u8651\u56e0\u7d20 \u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668 \u914d\u7f6e\u81ea\u52a8\u9a7e\u9a76\u884c\u4e3a \u505c\u6b62\u4ea4\u901a\u7ba1\u7406\u5668 \u786e\u5b9a\u6027\u6a21\u5f0f \u6df7\u5408\u7269\u7406\u6a21\u5f0f \u8fd0\u884c\u591a\u4e2a\u6d41\u91cf\u7ba1\u7406\u5668 \u6d41\u91cf\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef \u591a\u5ba2\u6237\u7aef\u4eff\u771f \u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f \u591a\u91cd\u4eff\u771f \u540c\u6b65\u6a21\u5f0f \u5927\u5730\u56fe\u4e2d\u7684\u4ea4\u901a\u7ba1\u7406\u5668 \u4ec0\u4e48\u662f\u4ea4\u901a\u7ba1\u7406\u5668\uff1f \u4ea4\u901a\u7ba1\u7406\u5668 (Traffic Manager, TM) \u662f\u5728\u4eff\u771f\u4e2d\u4ee5\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u63a7\u5236\u8f66\u8f86\u7684\u6a21\u5757\u3002\u5176\u76ee\u6807\u662f\u5728\u6a21\u62df\u4e2d\u586b\u5145\u771f\u5b9e\u7684\u57ce\u5e02\u4ea4\u901a\u72b6\u51b5\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u884c\u4e3a\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7279\u5b9a\u7684\u5b66\u4e60\u73af\u5883\u3002 \u7ed3\u6784\u5316\u8bbe\u8ba1 \u4ea4\u901a\u7ba1\u7406\u5668\u6784\u5efa\u4e8e Carla \u7684\u5ba2\u6237\u7aef\u4e4b\u4e0a\u3002\u6267\u884c\u6d41\u7a0b\u5206\u4e3a\u591a\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u72ec\u7acb\u7684\u64cd\u4f5c\u548c\u76ee\u6807\u3002\u8fd9\u6709\u5229\u4e8e\u76f8\u4f4d\u76f8\u5173\u529f\u80fd\u548c\u6570\u636e\u7ed3\u6784\u7684\u5f00\u53d1\uff0c\u540c\u65f6\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002\u4e0e\u5176\u4ed6\u9636\u6bb5\u7684\u901a\u4fe1\u901a\u8fc7\u540c\u6b65\u6d88\u606f\u4f20\u9012\u8fdb\u884c\u7ba1\u7406\u3002\u4fe1\u606f\u671d\u4e00\u4e2a\u65b9\u5411\u6d41\u52a8\u3002 \u7528\u6237\u5b9a\u5236 \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5141\u8bb8\u3001\u5f3a\u5236\u6216\u9f13\u52b1\u7279\u5b9a\u884c\u4e3a\u7684\u53c2\u6570\u6765\u5bf9\u6d41\u91cf\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u63a7\u5236\u3002\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u6539\u53d8\u6d41\u91cf\u884c\u4e3a\uff0c\u65e0\u8bba\u662f\u5728\u7ebf\u8fd8\u662f\u79bb\u7ebf\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5141\u8bb8\u6c7d\u8f66\u5ffd\u7565\u901f\u5ea6\u9650\u5236\u6216\u5f3a\u5236\u53d8\u9053\u3002\u5728\u5c1d\u8bd5\u4eff\u771f\u73b0\u5b9e\u65f6\uff0c\u80fd\u591f\u5c1d\u8bd5\u5404\u79cd\u884c\u4e3a\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u9a7e\u9a76\u7cfb\u7edf\u9700\u8981\u5728\u7279\u5b9a\u548c\u975e\u5178\u578b\u60c5\u51b5\u4e0b\u8fdb\u884c\u8bad\u7ec3\u3002 \u67b6\u6784 \u6982\u8ff0 \u4e0a\u56fe\u662f\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5185\u90e8\u67b6\u6784\u793a\u610f\u56fe\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u7684 C++ \u4ee3\u7801\u53ef\u4ee5\u5728 LibCarla/source/carla/trafficmanager \u4e2d\u627e\u5230\u3002\u4ee5\u4e0b\u5404\u8282\u8be6\u7ec6\u89e3\u91ca\u4e86\u6bcf\u4e2a\u7ec4\u4ef6\u3002\u903b\u8f91\u6982\u8ff0\u5982\u4e0b\uff1a 1. \u5b58\u50a8\u5e76\u66f4\u65b0\u4eff\u771f\u7684\u5f53\u524d\u72b6\u6001\u3002 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 (Agent Lifecycle & State Management, ALSM) \u626b\u63cf\u4e16\u754c\uff0c\u8ddf\u8e2a\u6240\u6709\u5b58\u5728\u7684\u8f66\u8f86\u548c\u884c\u4eba\uff0c\u5e76\u6e05\u7406\u4e0d\u518d\u5b58\u5728\u7684\u6761\u76ee\u3002\u6240\u6709\u6570\u636e\u5747\u4ece\u670d\u52a1\u5668\u68c0\u7d22\u5e76\u7ecf\u8fc7\u591a\u4e2a \u9636\u6bb5 \u3002ALSM \u662f\u552f\u4e00\u8c03\u7528\u670d\u52a1\u5668\u7684\u7ec4\u4ef6\u3002 \u8f66\u8f86\u6ce8\u518c\u8868 \u5305\u542b\u4e00\u7cfb\u5217\u5904\u4e8e\u81ea\u52a8\u9a7e\u9a76\u72b6\u6001\u7684\u8f66\u8f86\uff08\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\uff09\u4ee5\u53ca\u4e00\u7cfb\u5217\u4e0d\u5904\u4e8e\u81ea\u52a8\u9a7e\u9a76\u72b6\u6001\uff08\u4e0d\u53d7\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u63a7\u5236\uff09\u7684\u884c\u4eba\u548c\u8f66\u8f86\u3002 \u4eff\u771f\u72b6\u6001 \u662f\u4eff\u771f\u4e2d\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u9644\u52a0\u4fe1\u606f\u7684\u7f13\u5b58\u5b58\u50a8\u3002 2. \u8ba1\u7b97\u6bcf\u8f86\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u8fd0\u52a8\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u6839\u636e \u4eff\u771f\u72b6\u6001 \u4e3a \u8f66\u8f86\u6ce8\u518c\u8868 \u4e2d\u7684\u6240\u6709\u8f66\u8f86\u751f\u6210\u53ef\u884c\u7684\u547d\u4ee4\u3002\u6bcf\u8f86\u8f66\u7684\u8ba1\u7b97\u90fd\u662f\u5355\u72ec\u8fdb\u884c\u7684\u3002\u8fd9\u4e9b\u8ba1\u7b97\u5206\u4e3a\u4e0d\u540c\u7684 \u9636\u6bb5 \u3002 \u63a7\u5236\u5faa\u73af \u901a\u8fc7\u5728\u9636\u6bb5\u4e4b\u95f4\u521b\u5efa\u540c\u6b65\u5c4f\u969c\u6765\u786e\u4fdd\u6240\u6709\u8ba1\u7b97\u7684\u4e00\u81f4\u6027\u3002\u5728\u5f53\u524d\u9636\u6bb5\u7684\u6240\u6709\u8f66\u8f86\u8ba1\u7b97\u5b8c\u6210\u4e4b\u524d\uff0c\u6ca1\u6709\u8f66\u8f86\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\u3002\u6bcf\u8f86\u8f66\u90fd\u4f1a\u7ecf\u5386\u4ee5\u4e0b\u9636\u6bb5\uff1a 2.1 - \u5b9a\u4f4d\u9636\u6bb5 \u8def\u5f84\u662f\u4f7f\u7528\u4ece \u5185\u5b58\u5730\u56fe \u4e2d\u6536\u96c6\u7684\u9644\u8fd1\u8def\u5f84\u70b9\u5217\u8868\u52a8\u6001\u521b\u5efa\u7684\uff0c\u5185\u5b58\u5730\u56fe\u662f\u4eff\u771f\u5730\u56fe\u4f5c\u4e3a\u8def\u5f84\u70b9\u7f51\u683c\u7684\u7b80\u5316\u3002\u8def\u53e3\u7684\u65b9\u5411\u662f\u968f\u673a\u9009\u62e9\u7684\u3002\u6bcf\u8f86\u8f66\u7684\u8def\u5f84\u5747\u7531\u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9(Path Buffers & Vehicle Tracking, PBVT ) \u7ec4\u4ef6\u5b58\u50a8\u548c\u7ef4\u62a4\uff0c\u4ee5\u4fbf\u5728\u672a\u6765\u9636\u6bb5\u8f7b\u677e\u8bbf\u95ee\u548c\u4fee\u6539\u3002 2.2 - \u78b0\u649e\u9636\u6bb5 \u8fb9\u754c\u6846\u5ef6\u4f38\u5230\u6bcf\u8f86\u8f66\u7684\u8def\u5f84\u4e0a\uff0c\u4ee5\u8bc6\u522b\u548c\u5bfc\u822a\u6f5c\u5728\u7684\u78b0\u649e\u5371\u9669\u3002 2.3 - \u4ea4\u901a\u706f\u9636\u6bb5 . \u4e0e\u78b0\u649e\u9636\u6bb5\u7c7b\u4f3c\uff0c\u4f1a\u8bc6\u522b\u7531\u4e8e\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u505c\u8f66\u6807\u5fd7\u548c\u8def\u53e3\u4f18\u5148\u7ea7\u800c\u5f71\u54cd\u6bcf\u8f86\u8f66\u8def\u5f84\u7684\u6f5c\u5728\u5371\u9669\u3002 2.4 - \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5 . \u8f66\u8f86\u8fd0\u52a8\u662f\u6839\u636e\u5b9a\u4e49\u7684\u8def\u5f84\u8ba1\u7b97\u7684\u3002 PID \u63a7\u5236\u5668 \u786e\u5b9a\u5982\u4f55\u5230\u8fbe\u76ee\u6807\u8def\u5f84\u70b9\u3002\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a Carla \u547d\u4ee4\u4ee5\u4f9b\u4e0b\u4e00\u6b65\u5e94\u7528\u3002 2.5 - \u8f66\u706f\u9636\u6bb5 . \u8f66\u706f\u6839\u636e\u73af\u5883\u56e0\u7d20\uff08\u4f8b\u5982\u9633\u5149\u548c\u96fe\u6216\u96e8\u7684\u5b58\u5728\uff09\u548c\u8f66\u8f86\u884c\u4e3a\uff08\u4f8b\u5982\uff0c\u5982\u679c\u8f66\u8f86\u5c06\u5728\u4e0b\u4e00\u4e2a\u8def\u53e3\u5de6\u8f6c/\u53f3\u8f6c\uff0c\u5219\u6253\u5f00\u65b9\u5411\u6307\u793a\u706f\uff1b\u5982\u679c\u5236\u52a8\uff0c\u5219\u6253\u5f00\u5239\u8f66\u706f\uff09\u3002 3. \u5728\u4eff\u771f\u4e2d\u5e94\u7528\u547d\u4ee4 \u4e0a\u4e00\u6b65\u751f\u6210\u7684\u547d\u4ee4\u88ab\u6536\u96c6\u5230 \u547d\u4ee4\u6570\u7ec4 \u4e2d\uff0c\u6279\u91cf\u53d1\u9001\u5230 Carla \u670d\u52a1\u5668\uff0c\u5728\u540c\u4e00\u5e27\u4e2d\u5e94\u7528\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u4e0a\u8ff0\u4ea4\u901a\u7ba1\u7406\u5668\u903b\u8f91\u4e2d\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u548c\u9636\u6bb5\u3002 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406\u3002\u5b83\u662f\u4ea4\u901a\u7ba1\u7406\u5668\u903b\u8f91\u5468\u671f\u7684\u7b2c\u4e00\u6b65\uff0c\u63d0\u4f9b\u4eff\u771f\u5f53\u524d\u72b6\u6001\u7684\u4e0a\u4e0b\u6587\u3002 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406\u7ec4\u4ef6\uff1a \u626b\u63cf\u4e16\u754c\u4ee5\u8ddf\u8e2a\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002\u5982\u679c\u542f\u7528\u7269\u7406\u529f\u80fd\uff0c\u5219\u901a\u8fc7 Vehicle.get_velocity() \u68c0\u7d22\u901f\u5ea6\u3002\u5426\u5219\uff0c\u5c06\u4f7f\u7528\u4f4d\u7f6e\u968f\u65f6\u95f4\u66f4\u65b0\u7684\u5386\u53f2\u8bb0\u5f55\u6765\u8ba1\u7b97\u901f\u5ea6\u3002 \u5b58\u50a8 \u4eff\u771f\u72b6\u6001 \u7ec4\u4ef6\u4e2d\u6bcf\u8f86\u8f66\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u9644\u52a0\u4fe1\u606f\uff08\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u8fb9\u754c\u6846\u7b49\uff09\u3002 \u66f4\u65b0 \u8f66\u8f86\u6ce8\u518c\u8868 \u4e2d\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u8f66\u8f86\u5217\u8868\u3002 \u66f4\u65b0 \u63a7\u5236\u5faa\u73af \u548c \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \u7ec4\u4ef6\u4e2d\u7684\u6761\u76ee\u4ee5\u5339\u914d\u8f66\u8f86\u6ce8\u518c\u8868\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a ALSM.h , ALSM.cpp . \u8f66\u8f86\u6ce8\u518c\u8868 \u8f66\u8f86\u6ce8\u518c\u8868\u8bb0\u5f55\u4eff\u771f\u4e2d\u7684\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u3002 \u8f66\u8f86\u6ce8\u518c\u8868\uff1a \u4ece \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u4f20\u9012\u6765\u6700\u65b0\u7684\u8f66\u8f86\u548c\u884c\u4eba\u5217\u8868\u3002 \u5c06\u6ce8\u518c\u5230\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u8f66\u8f86\u5b58\u50a8\u5728\u5355\u72ec\u7684\u6570\u7ec4\u4e2d\uff0c\u4ee5\u4fbf\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u8fdb\u884c\u8fed\u4ee3\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a MotionPlannerStage.cpp . \u4eff\u771f\u72b6\u6001 \u4eff\u771f\u72b6\u6001\u5b58\u50a8\u4eff\u771f\u4e2d\u6240\u6709\u8f66\u8f86\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5728\u540e\u671f\u9636\u6bb5\u8f7b\u677e\u8bbf\u95ee\u548c\u4fee\u6539\u3002 \u4eff\u771f\u72b6\u6001\uff1a \u4ece \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u63a5\u6536\u6570\u636e\uff0c\u5305\u62ec\u5f53\u524d\u53c2\u4e0e\u8005\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u4ea4\u901a\u706f\u72b6\u6001\u7b49\u3002 \u5c06\u6240\u6709\u4fe1\u606f\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u907f\u514d\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u5bf9\u670d\u52a1\u5668\u7684\u540e\u7eed\u8c03\u7528\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a SimulationState.cpp , SimulationState.h . \u63a7\u5236\u5faa\u73af \u63a7\u5236\u5faa\u73af\u7ba1\u7406\u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684\u8ba1\u7b97\uff0c\u4ee5\u4fbf\u5b83\u4eec\u540c\u6b65\u6267\u884c\u3002\u63a7\u5236\u5faa\u73af\u7531\u4e94\u4e2a\u4e0d\u540c\u7684 \u9636\u6bb5 \u7ec4\u6210;\u5b9a\u4f4d\uff0c\u78b0\u649e\uff0c\u4ea4\u901a\u706f\uff0c\u8fd0\u52a8\u89c4\u5212\u548c\u8f66\u8f86\u706f\u3002 \u63a7\u5236\u5faa\u73af: \u4ece \u8f66\u8f86\u6ce8\u518c\u8868 \u63a5\u6536TM-\u63a7\u5236\u7684\u8f66\u8f86\u6570\u7ec4\u3002 \u901a\u8fc7\u5faa\u73af\u904d\u5386\u6570\u7ec4\uff0c\u5206\u522b\u5bf9\u6bcf\u8f86\u8f66\u6267\u884c\u8ba1\u7b97\u3002 \u5c06\u8ba1\u7b97\u5206\u6210\u4e00\u7cfb\u5217\u7684 \u9636\u6bb5 \u3002 \u5728\u9636\u6bb5\u4e4b\u95f4\u521b\u5efa\u540c\u6b65\u5c4f\u969c\u4ee5\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002\u6240\u6709\u8f66\u8f86\u7684\u8ba1\u7b97\u5728\u4efb\u4f55\u8f66\u8f86\u79fb\u52a8\u5230\u4e0b\u4e00\u9636\u6bb5\u4e4b\u524d\u5b8c\u6210\uff0c\u786e\u4fdd\u6240\u6709\u8f66\u8f86\u5728\u540c\u4e00\u5e27\u4e2d\u66f4\u65b0\u3002 \u534f\u8c03\u5404 \u9636\u6bb5 \u4e4b\u95f4\u7684\u8fc7\u6e21\uff0c\u4f7f\u6240\u6709\u8ba1\u7b97\u540c\u6b65\u5b8c\u6210\u3002 \u5f53\u6700\u540e\u4e00\u4e2a\u9636\u6bb5( \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u548c \u8f66\u8f86\u706f\u5149\u9636\u6bb5 )\u5b8c\u6210\u65f6\uff0c\u5c06 \u547d\u4ee4\u6570\u7ec4 \u53d1\u9001\u5230\u670d\u52a1\u5668\uff0c\u56e0\u6b64\u5728\u547d\u4ee4\u8ba1\u7b97\u548c\u547d\u4ee4\u5e94\u7528\u4e4b\u95f4\u6ca1\u6709\u5e27\u5ef6\u8fdf\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficManagerLocal.cpp . \u5185\u5b58\u5730\u56fe \u5185\u5b58\u5730\u56fe\u662f\u5305\u542b\u5728 \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \u4e2d\u7684\u8f85\u52a9\u6a21\u5757\uff0c\u5728 \u5b9a\u4f4d\u9636\u6bb5 \u4f7f\u7528\u3002 \u5185\u5b58\u5730\u56fe: \u5c06\u5730\u56fe\u8f6c\u6362\u4e3a\u79bb\u6563\u8def\u5f84\u70b9\u7684\u7f51\u683c\u3002 \u5305\u542b\u7279\u5b9a\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8def\u70b9\uff0c\u5e76\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u6765\u8fde\u63a5\u8def\u70b9\u548c\u8bc6\u522b\u9053\u8def\u3001\u8def\u53e3\u7b49\u3002 \u901a\u8fc7\u8bc6\u522b\u8fd9\u4e9b\u5efa\u7b51\u7269\u7684 ID \u6765\u5feb\u901f\u5b9a\u4f4d\u9644\u8fd1\u533a\u57df\u7684\u8f66\u8f86\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: InMemoryMap.cpp and SimpleWaypoint.cpp . PBVT PBVT\u4ee3\u8868\u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9\u3002PBVT\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u6bcf\u8f86\u8f66\u7684\u9884\u671f\u8def\u5f84\uff0c\u5e76\u5141\u8bb8\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u8f7b\u677e\u8bbf\u95ee\u6570\u636e\u3002 PBVT: \u5305\u542b\u4e00\u4e2adeque\u5bf9\u8c61\u7684\u5730\u56fe\uff0c\u6bcf\u8f86\u8f66\u6709\u4e00\u4e2a\u5165\u53e3\u3002 \u5305\u542b\u6bcf\u8f86\u8f66\u7684\u4e00\u7ec4\u8def\u70b9\uff0c\u63cf\u8ff0\u5176\u5f53\u524d\u4f4d\u7f6e\u548c\u8fd1\u671f\u8def\u5f84\u3002 \u5305\u542b \u5b9a\u4f4d\u9636\u6bb5 \u4f7f\u7528\u7684 \u5185\u5b58\u5730\u56fe \uff0c\u7528\u4e8e\u5c06\u6bcf\u4e2a\u8f66\u8f86\u4e0e\u6700\u8fd1\u7684\u8def\u70b9\u548c\u53ef\u80fd\u7684\u91cd\u53e0\u8def\u5f84\u5173\u8054\u8d77\u6765\u3002 PID \u63a7\u5236\u5668 PID\u63a7\u5236\u5668\u662f\u5728 \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u6267\u884c\u8ba1\u7b97\u7684\u8f85\u52a9\u6a21\u5757\u3002 PID \u63a7\u5236\u5668: \u6839\u636e \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u6536\u96c6\u7684\u4fe1\u606f\uff0c\u4f30\u7b97\u8fbe\u5230\u76ee\u6807\u503c\u6240\u9700\u7684\u6cb9\u95e8\u3001\u5239\u8f66\u548c\u8f6c\u5411\u8f93\u5165\u3002 \u6839\u636e\u63a7\u5236\u5668\u7684\u5177\u4f53\u53c2\u6570\u5316\u8fdb\u884c\u8c03\u6574\u3002\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4fee\u6539\u53c2\u6570\u3002\u9605\u8bfb\u66f4\u591a\u5173\u4e8e PID\u63a7\u5236\u5668 \u7684\u4fe1\u606f\uff0c\u4e86\u89e3\u5982\u4f55\u8fdb\u884c\u4fee\u6539\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: PIDController.cpp . \u547d\u4ee4\u6570\u7ec4 \u547d\u4ee4\u6570\u7ec4\u8868\u793a TM \u903b\u8f91\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u6b65\u3002\u5b83\u63a5\u6536\u6240\u6709\u6ce8\u518c\u8f66\u8f86\u7684\u547d\u4ee4\u5e76\u5e94\u7528\u5b83\u4eec\u3002 \u547d\u4ee4\u6570\u7ec4: \u4ece \u8def\u5f84\u89c4\u5212\u9636\u6bb5 \u63a5\u6536\u4e00\u7cfb\u5217 carla.VehicleControl \u3002 \u6279\u5904\u7406\u8981\u5728\u540c\u4e00\u5e27\u5185\u5e94\u7528\u7684\u6240\u6709\u547d\u4ee4\u3002 \u5c06\u6279\u5904\u7406\u53d1\u9001\u5230\u5728 carla \u4e2d\u8c03\u7528 apply_batch \uff08\uff09 \u6216 apply_batch_synch\uff08\uff09 \u7684 CARLA \u670d\u52a1\u5668.\u5ba2\u6237\u7aef \uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6a21\u62df\u662f\u5206\u522b\u4ee5\u5f02\u6b65\u6a21\u5f0f\u8fd8\u662f\u540c\u6b65\u6a21\u5f0f\u8fd0\u884c\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficManagerLocal.cpp . \u63a7\u5236\u5faa\u73af\u7684\u9636\u6bb5 \u7b2c 1 \u9636\u6bb5 - \u5b9a\u4f4d\u9636\u6bb5 \u5b9a\u4f4d\u9636\u6bb5\u4e3aTM\u63a7\u5236\u7684\u8f66\u8f86\u5b9a\u4e49\u4e86\u8fd1\u672a\u6765\u7684\u8def\u5f84\u3002 \u672c\u5730\u5316\u9636\u6bb5\uff1a \u4ece \u4eff\u771f\u72b6\u6001 \u83b7\u53d6\u6240\u6709\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002 \u4f7f\u7528 \u5185\u5b58\u5730\u56fe \u5c06\u6bcf\u8f86\u8f66\u4e0e\u822a\u70b9\u5217\u8868\u76f8\u5173\u8054\uff0c\u8be5\u822a\u70b9\u5217\u8868\u6839\u636e\u5176\u8f68\u8ff9\u63cf\u8ff0\u5176\u5f53\u524d\u4f4d\u7f6e\u548c\u8fd1\u671f\u8def\u5f84\u3002\u8f66\u8f86\u884c\u9a76\u5f97\u8d8a\u5feb\uff0c\u5217\u8868\u5c31\u8d8a\u957f\u3002 \u6839\u636e\u89c4\u5212\u51b3\u7b56\u66f4\u65b0\u8def\u5f84\uff0c\u4f8b\u5982\u53d8\u9053\u3001\u9650\u901f\u3001\u4e0e\u524d\u65b9\u8f66\u8f86\u7684\u8ddd\u79bb\u53c2\u6570\u5316\u7b49\u3002 \u5c06\u6240\u6709\u8f66\u8f86\u7684\u8def\u5f84\u5b58\u50a8\u5728 PBVT \u6a21\u5757\u4e2d\u3002 \u76f8\u4e92\u6bd4\u8f83\u8def\u5f84\u4ee5\u4f30\u8ba1\u53ef\u80fd\u7684\u78b0\u649e\u60c5\u51b5\u3002\u7ed3\u679c\u5c06\u4f20\u9012\u5230\u78b0\u649e\u9636\u6bb5\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: LocalizationStage.cpp and LocalizationUtils.cpp . \u7b2c 2 \u9636\u6bb5 - \u78b0\u649e\u9636\u6bb5 \u78b0\u649e\u9636\u6bb5\u4f1a\u89e6\u53d1\u78b0\u649e\u5371\u9669\u3002 \u78b0\u649e\u9636\u6bb5\uff1a \u4ece \u5b9a\u4f4d\u9636\u6bb5 \u63a5\u6536\u8def\u5f84\u53ef\u80fd\u91cd\u53e0\u7684\u8f66\u8f86\u5bf9\u5217\u8868\u3002 \u524d\u65b9\u8def\u5f84\uff08\u6d4b\u5730\u7ebf\u8fb9\u754c\uff09\u6269\u5c55\u6bcf\u4e2a\u8f66\u8f86\u5bf9\u7684\u8fb9\u754c\u6846\uff0c\u4ee5\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u5b9e\u9645\u91cd\u53e0\u5e76\u786e\u5b9a\u78b0\u649e\u98ce\u9669\u662f\u5426\u771f\u5b9e\u3002 \u5c06\u6240\u6709\u53ef\u80fd\u7684\u78b0\u649e\u7684\u5371\u9669\u53d1\u9001\u5230 \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5 \uff0c\u4ee5\u76f8\u5e94\u5730\u4fee\u6539\u8def\u5f84\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: CollisionStage.cpp . \u7b2c\u4e09\u9636\u6bb5 - \u4ea4\u901a\u706f\u9636\u6bb5 \u4ea4\u901a\u4fe1\u53f7\u706f\u9636\u6bb5\u4f1a\u89e6\u53d1\u4ea4\u901a\u7ba1\u5236\u5668\u9020\u6210\u7684\u5371\u9669\uff0c\u4f8b\u5982\u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u505c\u8f66\u6807\u5fd7\u548c\u8def\u53e3\u7684\u4f18\u5148\u6743\u3002 \u4ea4\u901a\u706f\u9636\u6bb5\uff1a \u5982\u679c\u8f66\u8f86\u53d7\u5230\u9ec4\u8272\u6216\u7ea2\u8272\u4ea4\u901a\u4fe1\u53f7\u706f\u6216\u505c\u8f66\u6807\u5fd7\u7684\u5f71\u54cd\uff0c\u5219\u8bbe\u7f6e\u4ea4\u901a\u5371\u9669\u3002 \u5982\u679c\u8fb9\u754c\u6846\u4f4d\u4e8e\u65e0\u4fe1\u53f7\u706f\u7684\u4ea4\u6c47\u70b9\uff0c\u5219\u6cbf\u8f66\u8f86\u8def\u5f84\u5ef6\u4f38\u8fb9\u754c\u6846\u3002\u8def\u5f84\u91cd\u53e0\u7684\u8f66\u8f86\u9075\u5faa\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u987a\u5e8f\u79fb\u52a8\u3002\u7b49\u5f85\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficLightStage.cpp . \u7b2c 4 \u9636\u6bb5 - \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5 \u201c\u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5\u201d\uff08Motion Planner Stage\uff09 \u751f\u6210\u8981\u5e94\u7528\u4e8e\u8f66\u8f86\u7684 CARLA \u547d\u4ee4\u3002 \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5\uff1a \u6536\u96c6\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff08 \u4eff\u771f\u72b6\u6001 )\uff09\u3001\u8def\u5f84 \uff08 \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \uff09 \u548c\u5371\u9669\uff08 \u78b0\u649e \u9636\u6bb5\u548c \u4ea4\u901a\u4fe1\u53f7\u706f\u9636\u6bb5 \uff09\u3002 \u5bf9\u8f66\u8f86\u5e94\u5982\u4f55\u79fb\u52a8\u505a\u51fa\u9ad8\u7ea7\u51b3\u7b56\uff0c\u4f8b\u5982\uff0c\u8ba1\u7b97\u9632\u6b62\u78b0\u649e\u5371\u9669\u6240\u9700\u7684\u5236\u52a8\u5668\u3002 PID\u63a7\u5236\u5668 \u7528\u4e8e\u6839\u636e\u76ee\u6807\u503c\u4f30\u8ba1\u884c\u4e3a\u3002 \u5c06\u671f\u671b\u7684\u8fd0\u52a8\u8f6c\u5316\u4e3a\u9002\u7528\u4e8e\u8f66\u8f86\u7684 carla.VehicleControl\u3002 \u5c06\u751f\u6210\u7684CARLA\u547d\u4ee4\u53d1\u9001\u5230 \u547d\u4ee4\u6570\u7ec4 \u3002 \u76f8\u5173\u7684.cpp\u6587\u4ef6: MotionPlannerStage.cpp . \u7b2c 5 \u9636\u6bb5 - \u8f66\u706f\u9636\u6bb5 \u8f66\u706f\u9636\u6bb5\u6839\u636e\u8f66\u8f86\u72b6\u51b5\u548c\u5468\u56f4\u73af\u5883\u6fc0\u6d3b\u8f66\u706f\u3002 \u200b \u8f66\u706f\u9636\u6bb5: \u68c0\u7d22\u8f66\u8f86\u7684\u8ba1\u5212\u822a\u70b9\u3001\u6709\u5173\u8f66\u8f86\u706f\u5149\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u706f\u5149\u72b6\u6001\u548c\u8ba1\u5212\u5e94\u7528\u7684\u547d\u4ee4\uff09\u548c\u5929\u6c14\u72b6\u51b5\u3002 \u786e\u5b9a\u8f66\u706f\u7684\u65b0\u72b6\u6001: \u5982\u679c\u8f66\u8f86\u8ba1\u5212\u5728\u4e0b\u4e00\u4e2a\u8def\u53e3\u5de6\u8f6c/\u53f3\u8f6c\uff0c\u5219\u6253\u5f00\u95ea\u5149\u706f\u3002 \u5982\u679c\u5e94\u7528\u7684\u547d\u4ee4\u8981\u6c42\u8f66\u8f86\u5236\u52a8\uff0c\u5219\u6253\u5f00\u505c\u8f66\u706f\u3002 \u4ece\u65e5\u843d\u5230\u9ece\u660e\u6216\u5728\u5927\u96e8\u4e2d\u6253\u5f00\u8fd1\u5149\u706f\u548c\u4f4d\u7f6e\u706f\u3002 \u5728\u5927\u96fe\u6761\u4ef6\u4e0b\u6253\u5f00\u96fe\u706f\u3002 \u5982\u679c\u8f66\u706f\u72b6\u6001\u5df2\u66f4\u6539\uff0c\u8bf7\u66f4\u65b0\u8f66\u706f\u72b6\u6001\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: VehicleLightStage.cpp . \u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668 \u8f66\u8f86\u884c\u4e3a\u6ce8\u610f\u4e8b\u9879 TM \u5b9e\u73b0\u4e86\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u65f6\u5fc5\u987b\u8003\u8651\u7684\u4e00\u822c\u884c\u4e3a\u6a21\u5f0f\uff1a \u8f66\u8f86\u4e0d\u662f\u4ee5\u76ee\u6807\u4e3a\u5bfc\u5411\u7684 \uff0c\u5b83\u4eec\u9075\u5faa\u52a8\u6001\u4ea7\u751f\u7684\u8f68\u8ff9\uff0c\u5e76\u5728\u63a5\u8fd1\u8def\u53e3\u65f6\u968f\u673a\u9009\u62e9\u8def\u5f84\u3002\u4ed6\u4eec\u7684\u9053\u8def\u662f\u65e0\u6b62\u5883\u7684\u3002 \u9664\u975e\u8bbe\u7f6e\u4e86\u4efb\u4f55\u5176\u4ed6\u503c\uff0c \u5426\u5219\u8f66\u8f86\u7684\u76ee\u6807\u901f\u5ea6\u662f\u5176\u5f53\u524d\u901f\u5ea6\u9650\u5236\u7684 70%\u3002 \u8def\u53e3\u4f18\u5148\u6743\u4e0d\u9075\u5b88\u4ea4\u901a\u6cd5\u89c4\u3002 TM \u5728\u8def\u53e3\u4f7f\u7528\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\u7cfb\u7edf\u3002\u6b64\u9650\u5236\u7684\u89e3\u51b3\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u540c\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u73af\u5f62\u4ea4\u53c9\u8def\u53e3\u5185\u7684\u8f66\u8f86\u8ba9\u6b65\u7ed9\u8bd5\u56fe\u8fdb\u5165\u7684\u8f66\u8f86\u3002 TM \u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7 Python API \u8fdb\u884c\u8c03\u6574\u3002\u6709\u5173\u5177\u4f53\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 Python API \u6587\u6863 \u7684 TM \u90e8\u5206\u3002\u4ee5\u4e0b\u662f\u901a\u8fc7 API \u5b9e\u73b0\u7684\u529f\u80fd\u7684\u4e00\u822c\u6458\u8981\uff1a \u4e3b\u9898 \u63cf\u8ff0 \u5e38\u89c4: - \u521b\u5efa\u8fde\u63a5\u5230\u7aef\u53e3\u7684TM\u5b9e\u4f8b\u3002 - \u68c0\u7d22TM\u8fde\u63a5\u7684\u7aef\u53e3\u3002 \u5b89\u5168\u6761\u4ef6: - \u8bbe\u7f6e\u505c\u6b62\u8f66\u8f86\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u5bf9\u4e8e\u5355\u4e2a\u8f66\u8f86\u6216\u8005\u6240\u6709\u8f66\u8f86\uff09\u3002\u8fd9\u5c06\u5f71\u54cd\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\u3002 - \u5c06\u6240\u9700\u901f\u5ea6\u8bbe\u7f6e\u4e3a\u5f53\u524d\u901f\u5ea6\u73b0\u72b6\u7684\u767e\u5206\u6bd4\uff08\u5bf9\u4e8e\u5355\u4e2a\u8f66\u8f86\u6216\u6240\u6709\u8f66\u8f86\uff09\u3002 - \u91cd\u7f6e\u4ea4\u901a\u4fe1\u53f7\u706f\u3002 \u78b0\u649e\u7ba1\u7406: - \u542f\u7528/\u7981\u7528\u8f66\u8f86\u4e0e\u7279\u5b9a\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u8f66\u8f86\u3002 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u6b65\u884c\u8005 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u4ea4\u901a\u706f\u3002 \u53d8\u9053: - \u5f3a\u5236\u53d8\u9053\uff0c\u5ffd\u7565\u53ef\u80fd\u7684\u78b0\u649e\u3002 - \u542f\u7528/\u7981\u7528\u8f66\u8f86\u7684\u53d8\u9053\u3002 \u6df7\u5408\u7269\u7406\u6a21\u5f0f: - \u542f\u7528/\u7981\u7528\u6df7\u5408\u7269\u7406\u6a21\u5f0f\u3002 - \u66f4\u6539\u542f\u7528\u7269\u7406\u7684\u534a\u5f84\u3002 \u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668 \u7b14\u8bb0 TM \u8bbe\u8ba1\u4e3a\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528 TM \u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u4e0d\u826f\u7ed3\u679c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u540c\u6b65\u6a21\u5f0f \u3002 TM \u5b9e\u4f8b\u7531 carla \u521b\u5efa.\u5ba2\u6237\u7aef \uff0c\u4f20\u9012\u8981\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u7f3a\u7701\u7aef\u53e3\u4e3a 8000 \u3002 \u8981\u521b\u5efa TM \u5b9e\u4f8b\uff1a tm = client.get_trafficmanager(port) \u8981\u4e3a\u4e00\u7ec4\u8f66\u8f86\u542f\u7528 autopilot\uff0c\u8bf7\u68c0\u7d22 TM \u5b9e\u4f8b\u7684\u7aef\u53e3\u5e76\u8bbe\u7f6eset_autopilot\u4e3aTrue \uff0c\u540c\u65f6\u4f20\u9012 TM \u7aef\u53e3\u3002\u5982\u679c\u672a\u63d0\u4f9b\u7aef\u53e3\uff0c\u5b83\u5c06\u5c1d\u8bd5\u8fde\u63a5\u5230\u9ed8\u8ba4\u7aef\u53e3 \uff088000\uff09 \u4e2d\u7684 TM\u3002\u5982\u679c TM \u4e0d\u5b58\u5728\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u3002 tm_port = tm.get_port() for v in vehicles_list: v.set_autopilot(True,tm_port) \u7b14\u8bb0 \u5728\u591a\u5ba2\u6237\u7aef\u60c5\u51b5\u4e0b\u521b\u5efa\u6216\u8fde\u63a5\u5230 TM \u4e0e\u4e0a\u8ff0\u793a\u4f8b\u4e0d\u540c\u3002 /PythonAPI/examples \u4e2d\u7684 generate_traffic.py \u811a\u672c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793a\u4f8b\uff0c \u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u4f5c\u4e3a\u811a\u672c\u53c2\u6570\u4f20\u9012\u7684\u7aef\u53e3\u521b\u5efa TM \u5b9e\u4f8b\uff0c\u5e76\u901a\u8fc7\u6279\u91cf\u5c06\u81ea\u52a8\u9a7e\u9a76\u4eea\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u503c\u6765\u6ce8\u518c\u751f\u6210\u7684\u6bcf\u8f86\u8f66\u3002 traffic_manager = client.get_trafficmanager(args.tm-port) tm_port = traffic_manager.get_port() ... batch.append(SpawnActor(blueprint, transform).then(SetAutopilot(FutureActor, True,tm_port))) ... traffic_manager.global_percentage_speed_difference(30.0) \u914d\u7f6e autopilot \u884c\u4e3a \u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a TM \u5b9e\u4f8b\uff0c\u5e76\u4e3a\u7279\u5b9a\u8f66\u8f86\u914d\u7f6e\u5371\u9669\u884c\u4e3a\uff0c\u4f7f\u5176\u5ffd\u7565\u6240\u6709\u4ea4\u901a\u4fe1\u53f7\u706f\uff0c\u4e0d\u4e0e\u5176\u4ed6\u8f66\u8f86\u4fdd\u6301\u5b89\u5168\u8ddd\u79bb\uff0c\u5e76\u4ee5\u6bd4\u5f53\u524d\u9650\u901f\u5feb 20% \u7684\u901f\u5ea6\u884c\u9a76\uff1a tm = client.get_trafficmanager(port) tm_port = tm.get_port() for v in my_vehicles: v.set_autopilot(True,tm_port) danger_car = my_vehicles[0] tm.ignore_lights_percentage(danger_car,100) tm.distance_to_leading_vehicle(danger_car,0) tm.vehicle_percentage_speed_difference(danger_car,-20) \u4ee5\u4e0b\u793a\u4f8b\u5c06\u76f8\u540c\u7684\u8f66\u8f86\u5217\u8868\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u4eea\uff0c\u4f46\u5c06\u5176\u914d\u7f6e\u4e3a\u9002\u5ea6\u9a7e\u9a76\u884c\u4e3a\u3002\u8f66\u8f86\u7684\u884c\u9a76\u901f\u5ea6\u6bd4\u5f53\u524d\u9650\u901f\u6162 80%\uff0c\u4e0e\u5176\u4ed6\u8f66\u8f86\u4e4b\u95f4\u81f3\u5c11\u7559\u51fa 5 \u7c73\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u4ece\u4e0d\u8fdb\u884c\u53d8\u9053\uff1a tm = client.get_trafficmanager(port) tm_port = tm.get_port() for v in my_vehicles: v.set_autopilot(True,tm_port) danger_car = my_vehicles[0] tm.global_distance_to_leading_vehicle(5) tm.global_percentage_speed_difference(80) for v in my_vehicles: tm.auto_lane_change(v,False) \u59d4\u6d3e\u4ea4\u901a\u7ba1\u7406\u5668\u81ea\u52a8\u66f4\u65b0\u8f66\u706f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTM \u7ba1\u7406\u7684\u8f66\u8f86\u7684\u8f66\u706f\uff08\u5239\u8f66\u706f\u3001\u8f6c\u5411\u706f\u7b49\uff09\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u3002\u53ef\u4ee5\u59d4\u6258 TM \u6765\u66f4\u65b0\u7ed9\u5b9a\u8f66\u8f86\u53c2\u4e0e\u8005\u7684\u8f66\u706f\uff1a tm = client.get_trafficmanager(port) for actor in my_vehicles: tm.update_vehicle_lights(actor, True) \u8f66\u706f\u7ba1\u7406\u5fc5\u987b\u6309\u6bcf\u8f86\u8f66\u8fdb\u884c\u6307\u5b9a\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u90fd\u53ef\u4ee5\u6709\u5e26\u548c\u4e0d\u5e26\u81ea\u52a8\u706f\u7ba1\u7406\u7684\u8f66\u8f86\u3002 \u505c\u6b62\u4ea4\u901a\u7ba1\u7406\u5668 TM \u4e0d\u662f\u4e00\u4e2a\u9700\u8981\u88ab\u6467\u6bc1\u7684\u53c2\u4e0e\u8005;\u5f53\u521b\u5efa\u5b83\u7684\u5ba2\u6237\u7aef\u505c\u6b62\u65f6\uff0c\u5b83\u5c06\u505c\u6b62\u3002\u8fd9\u662f\u7531 API \u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u7528\u6237\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5728\u5173\u95ed TM \u65f6\uff0c\u7528\u6237\u5fc5\u987b\u6467\u6bc1\u7531\u5b83\u63a7\u5236\u7684\u8f66\u8f86\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5728\u5730\u56fe\u4e0a\u4fdd\u6301\u4e0d\u52a8\u3002 generate_traffic.py \u811a\u672c\u4f1a\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c: client.apply_batch([carla.command.DestroyActor(x) for x in vehicles_list]) \u8b66\u544a \u5173\u95ed TM-Server \u5c06\u5173\u95ed\u8fde\u63a5\u5230\u5b83\u7684 TM-Clients \u3002 \u8981\u4e86\u89e3 TM-Server \u548c TM-Client \u4e4b\u95f4\u7684\u533a\u522b, \u8bf7\u9605\u8bfb Running multiple Traffic Managers \u3002 \u786e\u5b9a\u6027\u6a21\u5f0f \u5728\u786e\u5b9a\u6027\u6a21\u5f0f\u4e0b\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u5728\u76f8\u540c\u6761\u4ef6\u4e0b\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u548c\u884c\u4e3a\u3002\u4e0d\u8981\u5c06\u786e\u5b9a\u6027\u8bba\u8bef\u8ba4\u4e3a\u662f\u8bb0\u5f55\u5668\u3002\u867d\u7136\u8bb0\u5f55\u5668\u5141\u8bb8\u60a8\u5b58\u50a8\u4eff\u771f\u65e5\u5fd7\u4ee5\u8fdb\u884c\u56de\u653e\uff0c\u4f46\u786e\u5b9a\u6027\u53ef\u786e\u4fdd\u53ea\u8981\u7ef4\u6301\u76f8\u540c\u7684\u6761\u4ef6\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5728\u811a\u672c\u7684\u4e0d\u540c\u6267\u884c\u8fc7\u7a0b\u4e2d\u59cb\u7ec8\u5177\u6709\u76f8\u540c\u7684\u8f93\u51fa\u3002 \u786e\u5b9a\u6027\u6a21\u5f0f \u4ec5\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b \u53ef\u7528\u3002\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\uff0c\u5bf9\u4eff\u771f\u7684\u63a7\u5236\u8f83\u5c11\uff0c\u5e76\u4e14\u65e0\u6cd5\u5b9e\u73b0\u786e\u5b9a\u6027\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u9605\u8bfb \u540c\u6b65\u6a21\u5f0f \u90e8\u5206\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8981\u542f\u7528\u786e\u5b9a\u6027\u6a21\u5f0f\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a my_tm.set_random_device_seed(seed_value) seed_value \u662f\u4e00\u4e2a\u5c06\u751f\u6210\u968f\u673a\u6570\u7684\u6570\u5b57\u7684 int \u79cd\u5b50\u6570\u3002\u8be5\u503c\u672c\u8eab\u5e76\u4e0d\u76f8\u5173\uff0c\u4f46\u76f8\u540c\u7684\u503c\u5c06\u59cb\u7ec8\u5bfc\u81f4\u76f8\u540c\u7684\u8f93\u51fa\u3002\u5177\u6709\u76f8\u540c\u6761\u4ef6\u3001\u4f7f\u7528\u76f8\u540c\u79cd\u5b50\u503c\u7684\u4e24\u6b21\u4eff\u771f\u5c06\u662f\u786e\u5b9a\u6027\u7684\u3002 \u4e3a\u4e86\u4fdd\u6301\u591a\u6b21\u4eff\u771f\u8fd0\u884c\u7684\u786e\u5b9a\u6027\uff0c \u5fc5\u987b\u4e3a\u6bcf\u6b21\u4eff\u771f\u8bbe\u7f6e\u79cd\u5b50 \u3002\u4f8b\u5982\uff0c\u6bcf\u6b21 \u91cd\u65b0\u52a0\u8f7d \u4e16\u754c\u65f6\uff0c\u90fd\u5fc5\u987b\u91cd\u65b0\u8bbe\u7f6e\u79cd\u5b50\uff1a client.reload_world() my_tm.set_random_device_seed(seed_value) \u53ef\u4ee5\u901a\u8fc7\u5c06\u79cd\u5b50\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u6765\u5728\u793a\u4f8b\u811a\u672c generate_traffic.py \u4e2d\u6d4b\u8bd5\u786e\u5b9a\u6027\u6a21\u5f0f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528 50 \u4e2a\u81ea\u52a8\u9a7e\u9a76\u53c2\u4e0e\u8005\u586b\u5145\u5730\u56fe\uff0c\u5e76\u5c06\u79cd\u5b50\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c 9 \uff1a cd PythonAPI/examples python3 generate_traffic.py -n 50 --seed 9 \u8b66\u544a \u5728\u542f\u7528\u786e\u5b9a\u6027\u6a21\u5f0f\u4e4b\u524d\uff0cCarla \u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u5fc5\u987b\u5904\u4e8e\u540c\u6b65\u6a21\u5f0f\u3002\u5728\u6b64\u5904\u9605\u8bfb\u6709\u5173\u4ea4\u901a\u7ba1\u7406\u5668\u4e2d\u540c\u6b65\u6a21\u5f0f\u7684 \u66f4\u591a\u4fe1\u606f \u3002 \u6df7\u5408\u7269\u7406\u6a21\u5f0f \u6df7\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u7981\u7528\u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u6216\u6807\u8bb0\u4e3a \u82f1\u96c4 \u7684\u8f66\u8f86\u7279\u5b9a\u534a\u5f84\u4e4b\u5916\u7684\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u5927\u591a\u6570\u7269\u7406\u8ba1\u7b97\u3002\u8fd9\u6d88\u9664\u4e86\u4eff\u771f\u4e2d\u7684\u8f66\u8f86\u7269\u7406\u74f6\u9888\u3002\u7269\u7406\u529f\u80fd\u88ab\u7981\u7528\u7684\u8f66\u8f86\u5c06\u901a\u8fc7\u9690\u5f62\u4f20\u9001\u79fb\u52a8\u3002\u7ef4\u6301\u7ebf\u6027\u52a0\u901f\u5ea6\u7684\u57fa\u672c\u8ba1\u7b97\uff0c\u4ee5\u786e\u4fdd\u4f4d\u7f6e\u66f4\u65b0\u548c\u8f66\u8f86\u901f\u5ea6\u4fdd\u6301\u771f\u5b9e\uff0c\u5e76\u4e14\u8f66\u8f86\u4e0a\u7269\u7406\u8ba1\u7b97\u7684\u5207\u6362\u662f\u6d41\u7545\u7684\u3002 \u6df7\u5408\u6a21\u5f0f\u4f7f\u7528 Actor.set_simulate_physics() \u65b9\u6cd5\u6765\u5207\u6362\u7269\u7406\u8ba1\u7b97\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u7981\u7528\u7684\u3002\u6709\u4e24\u4e2a\u9009\u9879\u53ef\u4ee5\u542f\u7528\u5b83\uff1a TrafficManager.set_hybrid_physics_mode(True) \u2014 \u6b64\u65b9\u6cd5\u4e3a\u8c03\u7528\u5b83\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5bf9\u8c61\u542f\u7528\u6df7\u5408\u6a21\u5f0f\u3002 \u4ee5 --hybrid \u6807\u5fd7\u8fd0\u884c generate_traffic.py \u2014 \u6b64\u793a\u4f8b\u811a\u672c\u521b\u5efa\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u5728\u81ea\u52a8\u9a7e\u9a76\u4eea\u4e2d\u751f\u6210\u8f66\u8f86\u3002\u5f53\u6807\u5fd7 --hybrid \u4f5c\u4e3a\u811a\u672c\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5b83\u5c06\u8fd9\u4e9b\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u6df7\u5408\u6a21\u5f0f\u3002 \u8981\u4fee\u6539\u6df7\u5408\u6a21\u5f0f\u7684\u884c\u4e3a\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u53c2\u6570\uff1a Radius (\u9ed8\u8ba4 = 50 \u7c73) \u2014 \u534a\u5f84\u76f8\u5bf9\u4e8e\u6807\u8bb0\u6709 \u82f1\u96c4 \u7684\u8f66\u8f86\u3002\u8be5\u534a\u5f84\u5185\u7684\u6240\u6709\u8f66\u8f86\u90fd\u5c06\u542f\u7528\u7269\u7406\u529f\u80fd\uff1b\u534a\u5f84\u4e4b\u5916\u7684\u8f66\u8f86\u5c06\u7981\u7528\u7269\u7406\u529f\u80fd\u3002\u4f7f\u7528 traffic_manager.set_hybrid_physics_radius(r) \u4fee\u6539\u534a\u5f84\u7684\u5927\u5c0f\u3002 Hero vehicle \u2014 \u5e26\u6709\u6807\u8bb0 role_name='hero' \u7684\u8f66\u8f86\u4f5c\u4e3a\u534a\u5f84\u7684\u4e2d\u5fc3\u3002 \u5982\u679c\u6ca1\u6709\u82f1\u96c4\u8f66\u8f86\uff0c \u6240\u6709\u8f66\u8f86\u7684\u7269\u7406\u529f\u80fd\u5c06\u88ab\u7981\u7528\u3002 \u5982\u679c\u6709\u4e0d\u6b62\u4e00\u8f86\u82f1\u96c4\u8f66\u8f86\uff0c \u5219\u4f1a\u8003\u8651\u6240\u6709\u82f1\u96c4\u8f66\u8f86\u7684\u534a\u5f84\uff0c\u4ece\u800c\u5728\u542f\u7528\u7269\u7406\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e0d\u540c\u7684\u5f71\u54cd\u533a\u57df\u3002 \u4e0b\u9762\u7684\u526a\u8f91\u663e\u793a\u4e86\u6df7\u5408\u6a21\u5f0f\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u65f6\u5982\u4f55\u542f\u7528\u548c\u7981\u7528\u7269\u7406\u529f\u80fd\u3002 \u82f1\u96c4\u8f66\u8f86 \u6807\u6709 \u7ea2\u8272\u65b9\u5757 \u3002 \u7981\u7528\u7269\u7406\u529f\u80fd \u7684\u8f66\u8f86\u6807\u6709 \u84dd\u8272\u65b9\u5757 \u3002\u5f53\u5728\u82f1\u96c4\u8f66\u8f86\u7684\u5f71\u54cd\u534a\u5f84\u5185\u65f6\uff0c \u542f\u7528\u7269\u7406\u529f\u80fd \u5e76\u4e14\u6807\u7b7e\u53d8\u4e3a \u7eff\u8272 \u3002 \u8fd0\u884c\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668 \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef Carla \u5ba2\u6237\u7aef\u901a\u8fc7\u5411\u670d\u52a1\u5668\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u7aef\u53e3\u6765\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u3002\u5982\u679c\u672a\u6307\u5b9a\u7aef\u53e3\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4 8000 \u7aef\u53e3\u3002\u5982\u679c\u5728\u540c\u4e00\u7aef\u53e3\u4e0a\u521b\u5efa\u66f4\u591a\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5b83\u4eec\u5c06\u6210\u4e3a \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef \uff0c\u800c\u539f\u59cb\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u6210\u4e3a \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef \u3002\u8fd9\u4e9b\u6807\u9898\u5b9a\u4e49\u4e86\u4ea4\u901a\u7ba1\u7406\u5668\u5728\u4eff\u771f\u4e2d\u7684\u884c\u4e3a\u65b9\u5f0f\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef \u5982\u679c\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef\u662f\u7b2c\u4e00\u4e2a\u8fde\u63a5\u5230\u7a7a\u95f2\u7aef\u53e3\u7684\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u7136\u540e\u5176\u4ed6\u4ea4\u901a\u7ba1\u7406\u5668\uff08\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef\uff09\u8fde\u63a5\u5230\u5b83\u6b63\u5728\u8fd0\u884c\u7684\u540c\u4e00\u7aef\u53e3\uff0c\u5219\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u5c06\u89c4\u5b9a\u6240\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u7684\u884c\u4e3a \uff0c\u4f8b\u5982\uff0c\u5982\u679c \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef \u505c\u6b62\uff0c\u5219\u6240\u6709 \u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef \u5c06\u505c\u6b62\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e24\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002\u6bcf\u4e2a\u7aef\u53e3\u90fd\u8fde\u63a5\u5230\u4e0d\u540c\u4e14\u90fd\u672a\u4f7f\u7528\u7684\u7aef\u53e3\uff1a tm01 = client01.get_trafficmanager() # tm01 --> tm01 (p=8000) tm02 = client02.get_trafficmanager(5000) # tm02(p=5000) --> tm02 (p=5000) \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef \u5f53\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\uff08\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\uff09\u5360\u7528\u7684\u7aef\u53e3\u65f6\uff0c\u5c31\u4f1a\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u7684\u884c\u4e3a\u5c06\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u51b3\u5b9a\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e24\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e00\u4e2a\u90fd\u4e0e\u4e0a\u4e00\u8282\u4e2d\u521b\u5efa\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u8fde\u63a5\u3002 tm03 = client03.get_trafficmanager() # tm03 --> tm01 (p=8000). tm04 = client04.get_trafficmanager(5000) # tm04(p=5000) --> tm02 (p=5000) Carla \u670d\u52a1\u5668\u901a\u8fc7\u5b58\u50a8\u94fe\u63a5\u5230\u5b83\u4eec\u7684\u7aef\u53e3\u548c\u5ba2\u6237\u7aef IP\uff08\u5bf9\u7528\u6237\u9690\u85cf\uff09\u6765\u4fdd\u5b58\u6240\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u7684\u5bc4\u5b58\u5668\u3002\u76ee\u524d\u65e0\u6cd5\u68c0\u67e5\u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u521b\u5efa\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u3002\u5c1d\u8bd5\u521b\u5efa\u5b9e\u4f8b\u65f6\u59cb\u7ec8\u4f1a\u5c1d\u8bd5\u8fde\u63a5\uff0c\u5e76\u4e14\u5b83\u5c06\u521b\u5efa\u65b0\u7684 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u6216 \u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef \u3002 \u591a\u5ba2\u6237\u7aef\u4eff\u771f \u5728\u591a\u5ba2\u6237\u7aef\u6a21\u62df\u4e2d\uff0c\u5728\u540c\u4e00\u7aef\u53e3\u4e0a\u521b\u5efa\u591a\u4e2aTM\u3002\u7b2c\u4e00\u4e2a TM \u5c06\u662f TM \u670d\u52a1\u5668\uff0c\u5176\u4f59\u7684\u5c06\u662f\u8fde\u63a5\u5230\u5b83\u7684 TM \u5ba2\u6237\u7aef\u3002TM-Server \u5c06\u89c4\u5b9a\u6240\u6709 TM \u5b9e\u4f8b\u7684\u884c\u4e3a\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 terminal 2: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Client \u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f \u5728\u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f\u4e2d\uff0c\u5728\u4e0d\u540c\u7684\u7aef\u53e3\u4e0a\u521b\u5efa\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u3002\u6bcf\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u90fd\u4f1a\u63a7\u5236\u81ea\u5df1\u7684\u884c\u4e3a\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 terminal 2: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server A terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4550 # TM-Server B \u591a\u91cd\u4eff\u771f \u591a\u91cd\u4eff\u771f\u662f\u6307\u591a\u4e2a Carla \u670d\u52a1\u5668\u540c\u65f6\u8fd0\u884c\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u9700\u8981\u8fde\u63a5\u5230\u76f8\u5173\u7684 Carla \u670d\u52a1\u5668\u7aef\u53e3\u3002\u53ea\u8981\u8ba1\u7b97\u80fd\u529b\u5141\u8bb8\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u53ef\u4ee5\u4e00\u6b21\u8fd0\u884c\u591a\u4e2a\u4eff\u771f\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 # simulation A terminal 2: ./CarlaUE4.sh -carla-rpc-port=5000 # simulation B terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server A connected to simulation A terminal 4: python3 generate_traffic.py --port 5000 --tm-port 5050 # TM-Server B connected to simulation B \u591a\u91cd\u4eff\u771f\u7684\u6982\u5ff5\u72ec\u7acb\u4e8e\u4ea4\u901a\u7ba1\u7406\u5668\u672c\u8eab\u3002\u4e0a\u9762\u7684\u793a\u4f8b\u5e76\u884c\u8fd0\u884c\u4e24\u4e2a Carla \u4eff\u771f A \u548c B\u3002\u5728\u6bcf\u4e2a\u4eff\u771f\u4e2d\uff0c\u90fd\u72ec\u7acb\u521b\u5efa\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002\u4eff\u771f A \u53ef\u4ee5\u8fd0\u884c\u591a\u5ba2\u6237\u7aef\u4ea4\u901a\u7ba1\u7406\u7a0b\u5e8f\uff0c\u800c\u4eff\u771f B \u5219\u8fd0\u884c\u591a\u4ea4\u901a\u7ba1\u7406\u5668\u6216\u6839\u672c\u4e0d\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u4e0a\u8ff0\u8bbe\u7f6e\u6700\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u662f\u5ba2\u6237\u7aef\u5c1d\u8bd5\u8fde\u63a5\u5230\u672a\u5728\u6240\u9009\u4eff\u771f\u4e0a\u8fd0\u884c\u7684\u73b0\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c06\u4f1a\u51fa\u73b0\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u4e14\u8fde\u63a5\u5c06\u88ab\u4e2d\u6b62\uff0c\u4ee5\u9632\u6b62\u4eff\u771f\u4e4b\u95f4\u7684\u5e72\u6270\u3002 \u540c\u6b65\u6a21\u5f0f \u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u8ba1\u4e3a\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002Carla \u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u5e94\u8bbe\u7f6e\u4e3a\u540c\u6b65\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u4e0d\u826f\u7ed3\u679c \uff0c\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u5f02\u6b65\u6a21\u5f0f\uff0c\u5219\u4eff\u771f\u5e94\u81f3\u5c11\u4ee5 20-30 fps \u8fd0\u884c\u3002 \u4e0b\u9762\u7684\u811a\u672c\u6f14\u793a\u4e86\u5982\u4f55\u5c06\u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff1a ... # Set the simulation to sync mode init_settings = world.get_settings() settings = world.get_settings() settings.synchronous_mode = True # After that, set the TM to sync mode my_tm.set_synchronous_mode(True) ... # Tick the world in the same client world.apply_settings(init_settings) world.tick() ... # Always disable sync mode before the script ends to prevent the server blocking whilst waiting for a tick settings.synchronous_mode = False my_tm.set_synchronous_mode(False) \u793a\u4f8b\u811a\u672c generate_traffic.py \u542f\u52a8\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u7528\u8f66\u8f86\u548c\u884c\u4eba\u586b\u5145\u5730\u56fe\u3002\u5b83\u81ea\u52a8\u5c06\u4ea4\u901a\u7ba1\u7406\u5668\u548c Carla \u670d\u52a1\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff1a cd PythonAPI/examples python3 generate_traffic.py -n 50 \u5982\u679c\u9700\u8981\u5f02\u6b65\u6a21\u5f0f\uff0c\u8bf7\u5728\u8fd0\u884c\u4e0a\u8ff0\u547d\u4ee4\u65f6\u4f7f\u7528 --async \u6807\u5fd7\u3002 \u5982\u679c\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff0c\u540c\u6b65\u5c06\u4f1a\u5931\u8d25\u3002\u8bf7\u9075\u5faa\u4ee5\u4e0b\u51c6\u5219\u4ee5\u907f\u514d\u51fa\u73b0\u95ee\u9898\uff1a \u5728 \u591a\u5ba2\u6237\u7aef \u60c5\u51b5\u4e0b\uff0c\u53ea\u6709 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u5e94\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 \u5728 \u591a\u4ea4\u901a\u7ba1\u7406\u5668 \u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u5c06\u4e00\u53f0 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 ScenarioRunner \u6a21\u5757 \u81ea\u52a8\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\u3002ScenarioRunner \u5185\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 \u8b66\u544a \u5728\u7ba1\u7406\u65f6\u949f\u7684\u811a\u672c\u5b8c\u6210\u4e4b\u524d\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff08\u5bf9\u4e8e\u4e16\u754c\u548c\u4ea4\u901a\u7ba1\u7406\u5668\uff09\uff0c\u4ee5\u9632\u6b62\u670d\u52a1\u5668\u963b\u585e\uff0c\u6c38\u8fdc\u7b49\u5f85\u65f6\u949f\u3002 \u5927\u5730\u56fe\u4e2d\u7684\u4ea4\u901a\u7ba1\u7406\u5668 \u8981\u4e86\u89e3\u4ea4\u901a\u7ba1\u7406\u5668\u5982\u4f55\u5728\u5927\u5730\u56fe\u4e0a\u5de5\u4f5c\uff0c\u8bf7\u52a1\u5fc5\u9996\u5148\u9605\u8bfb \u6b64\u5904 \u7684\u6587\u6863\u6765\u719f\u6089\u5927\u5730\u56fe\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u5728\u5927\u5730\u56fe\u4e2d\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u662f\u5426\u5b58\u5728\u82f1\u96c4\u8f66\u8f86\uff1a \u4e0d\u5b58\u5728\u82f1\u96c4\u8f66\u8f86 \u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u90fd\u5c06\u88ab\u89c6\u4e3a\u4f11\u7720\u53c2\u4e0e\u8005\u3002\u4f11\u7720\u7684\u81ea\u52a8\u9a7e\u9a76\u53c2\u4e0e\u8005\u5c06\u50cf\u6df7\u5408\u6a21\u5f0f\u4e00\u6837\u5728\u5730\u56fe\u4e0a\u79fb\u52a8\u3002\u7531\u4e8e\u6ca1\u6709\u82f1\u96c4\u8f66\u8f86\u6765\u89e6\u53d1\u5730\u56fe\u74e6\u7247\u6d41\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6e32\u67d3\u8f66\u8f86\u3002 \u5448\u73b0\u82f1\u96c4\u8f66\u8f86 \u5f53\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u8d85\u8fc7 actor_active_distance \u5b9a\u4e49\u7684\u503c\u65f6\uff0c\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001actor_active_distance\u3002\u8981\u8bbe\u7f6e\u6b64\u503c\uff0c\u8bf7\u4f7f\u7528 Python API\uff1a settings = world.get_settings() # Actors will become dormant 2km away from the ego vehicle settings.actor_active_distance = 2000 world.apply_settings(settings) \u5728\u4ea4\u901a\u7ba1\u7406\u5668\u4e2d\uff0c\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5728\u82f1\u96c4\u8f66\u8f86\u5468\u56f4\u4e0d\u65ad\u91cd\u751f\uff0c\u800c\u4e0d\u662f\u5728\u5730\u56fe\u7684\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4f11\u7720\u72b6\u6001\u3002\u53ef\u4ee5\u4f7f\u7528 set_respawn_dormant_vehicles Python API \u4e2d\u7684\u65b9\u6cd5\u914d\u7f6e\u6b64\u9009\u9879\u3002\u8f66\u8f86\u5c06\u5728\u82f1\u96c4\u8f66\u8f86\u7684\u7528\u6237\u5b9a\u4e49\u8ddd\u79bb\u5185\u91cd\u751f\u3002\u53ef\u91cd\u751f\u8ddd\u79bb\u7684\u4e0a\u4e0b\u8fb9\u754c\u53ef\u4ee5\u4f7f\u7528 set_boundaries_respawn_dormant_vehicles \u65b9\u6cd5\u8bbe\u7f6e\u3002\u6ce8\u610f\uff0c\u4e0a\u8ddd\u79bb\u4e0d\u4f1a\u5927\u4e8e\u5927\u5730\u56fe\u7684\u74e6\u7247\u6d41\u8ddd\u79bb\uff0c\u8ddd\u79bb\u6700\u5c0f\u4e3a 20m\u3002 \u8981\u4f7f\u82f1\u96c4\u8f66\u8f86 25 \u7c73\u548c 700 \u7c73\u8303\u56f4\u5185\u7684\u4f11\u7720\u8f66\u8f86\u91cd\u751f\uff1a my_tm.set_respawn_dormant_vehicles(True) my_tm.set_boundaries_respawn_dormant_vehicles(25,700) \u5982\u679c\u78b0\u649e\u963b\u6b62\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u91cd\u751f\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u91cd\u8bd5\u4e0b\u4e00\u4e2a\u4eff\u771f\u6b65\u9aa4\u3002 \u5982\u679c\u4f11\u7720\u8f66\u8f86\u6ca1\u6709\u91cd\u751f\uff0c\u5b83\u4eec\u7684\u884c\u4e3a\u5c06\u53d6\u51b3\u4e8e\u662f\u5426\u542f\u7528\u6df7\u5408\u6a21\u5f0f\u3002\u5982\u679c\u542f\u7528\u4e86\u6df7\u5408\u6a21\u5f0f\uff0c\u5219\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u5c06\u5728\u5730\u56fe\u4e0a\u4f20\u9001\u3002\u5982\u679c\u672a\u542f\u7528\u6df7\u5408\u6a21\u5f0f\uff0c\u5219\u4e0d\u4f1a\u8ba1\u7b97\u4f11\u7720\u53c2\u4e0e\u8005\u7684\u7269\u7406\u7279\u6027\uff0c\u5e76\u4e14\u5b83\u4eec\u5c06\u4fdd\u6301\u5728\u539f\u4f4d\u7f6e\uff0c\u76f4\u5230\u4e0d\u518d\u4f11\u7720\u3002 If you have any questions about the TM, then you can ask in the forum . CARLA forum","title":"\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#_1","text":"\u4ec0\u4e48\u662f\u4ea4\u901a\u7ba1\u7406\u5668\uff1f \u7ed3\u6784\u5316\u8bbe\u8ba1 \u7528\u6237\u5b9a\u5236 \u67b6\u6784 \u6982\u8ff0 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u8f66\u8f86\u6ce8\u518c\u8868 \u4eff\u771f\u72b6\u6001 \u63a7\u5236\u5faa\u73af \u5185\u5b58\u5730\u56fe \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 PID \u63a7\u5236\u5668 \u547d\u4ee4\u6570\u7ec4 \u63a7\u5236\u5faa\u73af\u7684\u9636\u6bb5 \u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668 \u8f66\u8f86\u884c\u4e3a\u8003\u8651\u56e0\u7d20 \u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668 \u914d\u7f6e\u81ea\u52a8\u9a7e\u9a76\u884c\u4e3a \u505c\u6b62\u4ea4\u901a\u7ba1\u7406\u5668 \u786e\u5b9a\u6027\u6a21\u5f0f \u6df7\u5408\u7269\u7406\u6a21\u5f0f \u8fd0\u884c\u591a\u4e2a\u6d41\u91cf\u7ba1\u7406\u5668 \u6d41\u91cf\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef \u591a\u5ba2\u6237\u7aef\u4eff\u771f \u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f \u591a\u91cd\u4eff\u771f \u540c\u6b65\u6a21\u5f0f \u5927\u5730\u56fe\u4e2d\u7684\u4ea4\u901a\u7ba1\u7406\u5668","title":"\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#_2","text":"\u4ea4\u901a\u7ba1\u7406\u5668 (Traffic Manager, TM) \u662f\u5728\u4eff\u771f\u4e2d\u4ee5\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u63a7\u5236\u8f66\u8f86\u7684\u6a21\u5757\u3002\u5176\u76ee\u6807\u662f\u5728\u6a21\u62df\u4e2d\u586b\u5145\u771f\u5b9e\u7684\u57ce\u5e02\u4ea4\u901a\u72b6\u51b5\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u884c\u4e3a\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7279\u5b9a\u7684\u5b66\u4e60\u73af\u5883\u3002","title":"\u4ec0\u4e48\u662f\u4ea4\u901a\u7ba1\u7406\u5668\uff1f"},{"location":"adv_traffic_manager/#_3","text":"\u4ea4\u901a\u7ba1\u7406\u5668\u6784\u5efa\u4e8e Carla \u7684\u5ba2\u6237\u7aef\u4e4b\u4e0a\u3002\u6267\u884c\u6d41\u7a0b\u5206\u4e3a\u591a\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u72ec\u7acb\u7684\u64cd\u4f5c\u548c\u76ee\u6807\u3002\u8fd9\u6709\u5229\u4e8e\u76f8\u4f4d\u76f8\u5173\u529f\u80fd\u548c\u6570\u636e\u7ed3\u6784\u7684\u5f00\u53d1\uff0c\u540c\u65f6\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002\u4e0e\u5176\u4ed6\u9636\u6bb5\u7684\u901a\u4fe1\u901a\u8fc7\u540c\u6b65\u6d88\u606f\u4f20\u9012\u8fdb\u884c\u7ba1\u7406\u3002\u4fe1\u606f\u671d\u4e00\u4e2a\u65b9\u5411\u6d41\u52a8\u3002","title":"\u7ed3\u6784\u5316\u8bbe\u8ba1"},{"location":"adv_traffic_manager/#_4","text":"\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5141\u8bb8\u3001\u5f3a\u5236\u6216\u9f13\u52b1\u7279\u5b9a\u884c\u4e3a\u7684\u53c2\u6570\u6765\u5bf9\u6d41\u91cf\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u63a7\u5236\u3002\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u6539\u53d8\u6d41\u91cf\u884c\u4e3a\uff0c\u65e0\u8bba\u662f\u5728\u7ebf\u8fd8\u662f\u79bb\u7ebf\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5141\u8bb8\u6c7d\u8f66\u5ffd\u7565\u901f\u5ea6\u9650\u5236\u6216\u5f3a\u5236\u53d8\u9053\u3002\u5728\u5c1d\u8bd5\u4eff\u771f\u73b0\u5b9e\u65f6\uff0c\u80fd\u591f\u5c1d\u8bd5\u5404\u79cd\u884c\u4e3a\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u9a7e\u9a76\u7cfb\u7edf\u9700\u8981\u5728\u7279\u5b9a\u548c\u975e\u5178\u578b\u60c5\u51b5\u4e0b\u8fdb\u884c\u8bad\u7ec3\u3002","title":"\u7528\u6237\u5b9a\u5236"},{"location":"adv_traffic_manager/#_5","text":"","title":"\u67b6\u6784"},{"location":"adv_traffic_manager/#_6","text":"\u4e0a\u56fe\u662f\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5185\u90e8\u67b6\u6784\u793a\u610f\u56fe\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u7684 C++ \u4ee3\u7801\u53ef\u4ee5\u5728 LibCarla/source/carla/trafficmanager \u4e2d\u627e\u5230\u3002\u4ee5\u4e0b\u5404\u8282\u8be6\u7ec6\u89e3\u91ca\u4e86\u6bcf\u4e2a\u7ec4\u4ef6\u3002\u903b\u8f91\u6982\u8ff0\u5982\u4e0b\uff1a 1. \u5b58\u50a8\u5e76\u66f4\u65b0\u4eff\u771f\u7684\u5f53\u524d\u72b6\u6001\u3002 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 (Agent Lifecycle & State Management, ALSM) \u626b\u63cf\u4e16\u754c\uff0c\u8ddf\u8e2a\u6240\u6709\u5b58\u5728\u7684\u8f66\u8f86\u548c\u884c\u4eba\uff0c\u5e76\u6e05\u7406\u4e0d\u518d\u5b58\u5728\u7684\u6761\u76ee\u3002\u6240\u6709\u6570\u636e\u5747\u4ece\u670d\u52a1\u5668\u68c0\u7d22\u5e76\u7ecf\u8fc7\u591a\u4e2a \u9636\u6bb5 \u3002ALSM \u662f\u552f\u4e00\u8c03\u7528\u670d\u52a1\u5668\u7684\u7ec4\u4ef6\u3002 \u8f66\u8f86\u6ce8\u518c\u8868 \u5305\u542b\u4e00\u7cfb\u5217\u5904\u4e8e\u81ea\u52a8\u9a7e\u9a76\u72b6\u6001\u7684\u8f66\u8f86\uff08\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\uff09\u4ee5\u53ca\u4e00\u7cfb\u5217\u4e0d\u5904\u4e8e\u81ea\u52a8\u9a7e\u9a76\u72b6\u6001\uff08\u4e0d\u53d7\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u63a7\u5236\uff09\u7684\u884c\u4eba\u548c\u8f66\u8f86\u3002 \u4eff\u771f\u72b6\u6001 \u662f\u4eff\u771f\u4e2d\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u9644\u52a0\u4fe1\u606f\u7684\u7f13\u5b58\u5b58\u50a8\u3002 2. \u8ba1\u7b97\u6bcf\u8f86\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u8fd0\u52a8\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u6839\u636e \u4eff\u771f\u72b6\u6001 \u4e3a \u8f66\u8f86\u6ce8\u518c\u8868 \u4e2d\u7684\u6240\u6709\u8f66\u8f86\u751f\u6210\u53ef\u884c\u7684\u547d\u4ee4\u3002\u6bcf\u8f86\u8f66\u7684\u8ba1\u7b97\u90fd\u662f\u5355\u72ec\u8fdb\u884c\u7684\u3002\u8fd9\u4e9b\u8ba1\u7b97\u5206\u4e3a\u4e0d\u540c\u7684 \u9636\u6bb5 \u3002 \u63a7\u5236\u5faa\u73af \u901a\u8fc7\u5728\u9636\u6bb5\u4e4b\u95f4\u521b\u5efa\u540c\u6b65\u5c4f\u969c\u6765\u786e\u4fdd\u6240\u6709\u8ba1\u7b97\u7684\u4e00\u81f4\u6027\u3002\u5728\u5f53\u524d\u9636\u6bb5\u7684\u6240\u6709\u8f66\u8f86\u8ba1\u7b97\u5b8c\u6210\u4e4b\u524d\uff0c\u6ca1\u6709\u8f66\u8f86\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\u3002\u6bcf\u8f86\u8f66\u90fd\u4f1a\u7ecf\u5386\u4ee5\u4e0b\u9636\u6bb5\uff1a 2.1 - \u5b9a\u4f4d\u9636\u6bb5 \u8def\u5f84\u662f\u4f7f\u7528\u4ece \u5185\u5b58\u5730\u56fe \u4e2d\u6536\u96c6\u7684\u9644\u8fd1\u8def\u5f84\u70b9\u5217\u8868\u52a8\u6001\u521b\u5efa\u7684\uff0c\u5185\u5b58\u5730\u56fe\u662f\u4eff\u771f\u5730\u56fe\u4f5c\u4e3a\u8def\u5f84\u70b9\u7f51\u683c\u7684\u7b80\u5316\u3002\u8def\u53e3\u7684\u65b9\u5411\u662f\u968f\u673a\u9009\u62e9\u7684\u3002\u6bcf\u8f86\u8f66\u7684\u8def\u5f84\u5747\u7531\u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9(Path Buffers & Vehicle Tracking, PBVT ) \u7ec4\u4ef6\u5b58\u50a8\u548c\u7ef4\u62a4\uff0c\u4ee5\u4fbf\u5728\u672a\u6765\u9636\u6bb5\u8f7b\u677e\u8bbf\u95ee\u548c\u4fee\u6539\u3002 2.2 - \u78b0\u649e\u9636\u6bb5 \u8fb9\u754c\u6846\u5ef6\u4f38\u5230\u6bcf\u8f86\u8f66\u7684\u8def\u5f84\u4e0a\uff0c\u4ee5\u8bc6\u522b\u548c\u5bfc\u822a\u6f5c\u5728\u7684\u78b0\u649e\u5371\u9669\u3002 2.3 - \u4ea4\u901a\u706f\u9636\u6bb5 . \u4e0e\u78b0\u649e\u9636\u6bb5\u7c7b\u4f3c\uff0c\u4f1a\u8bc6\u522b\u7531\u4e8e\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u505c\u8f66\u6807\u5fd7\u548c\u8def\u53e3\u4f18\u5148\u7ea7\u800c\u5f71\u54cd\u6bcf\u8f86\u8f66\u8def\u5f84\u7684\u6f5c\u5728\u5371\u9669\u3002 2.4 - \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5 . \u8f66\u8f86\u8fd0\u52a8\u662f\u6839\u636e\u5b9a\u4e49\u7684\u8def\u5f84\u8ba1\u7b97\u7684\u3002 PID \u63a7\u5236\u5668 \u786e\u5b9a\u5982\u4f55\u5230\u8fbe\u76ee\u6807\u8def\u5f84\u70b9\u3002\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a Carla \u547d\u4ee4\u4ee5\u4f9b\u4e0b\u4e00\u6b65\u5e94\u7528\u3002 2.5 - \u8f66\u706f\u9636\u6bb5 . \u8f66\u706f\u6839\u636e\u73af\u5883\u56e0\u7d20\uff08\u4f8b\u5982\u9633\u5149\u548c\u96fe\u6216\u96e8\u7684\u5b58\u5728\uff09\u548c\u8f66\u8f86\u884c\u4e3a\uff08\u4f8b\u5982\uff0c\u5982\u679c\u8f66\u8f86\u5c06\u5728\u4e0b\u4e00\u4e2a\u8def\u53e3\u5de6\u8f6c/\u53f3\u8f6c\uff0c\u5219\u6253\u5f00\u65b9\u5411\u6307\u793a\u706f\uff1b\u5982\u679c\u5236\u52a8\uff0c\u5219\u6253\u5f00\u5239\u8f66\u706f\uff09\u3002 3. \u5728\u4eff\u771f\u4e2d\u5e94\u7528\u547d\u4ee4 \u4e0a\u4e00\u6b65\u751f\u6210\u7684\u547d\u4ee4\u88ab\u6536\u96c6\u5230 \u547d\u4ee4\u6570\u7ec4 \u4e2d\uff0c\u6279\u91cf\u53d1\u9001\u5230 Carla \u670d\u52a1\u5668\uff0c\u5728\u540c\u4e00\u5e27\u4e2d\u5e94\u7528\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u4e0a\u8ff0\u4ea4\u901a\u7ba1\u7406\u5668\u903b\u8f91\u4e2d\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u548c\u9636\u6bb5\u3002","title":"\u6982\u8ff0"},{"location":"adv_traffic_manager/#_7","text":"\u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406\u3002\u5b83\u662f\u4ea4\u901a\u7ba1\u7406\u5668\u903b\u8f91\u5468\u671f\u7684\u7b2c\u4e00\u6b65\uff0c\u63d0\u4f9b\u4eff\u771f\u5f53\u524d\u72b6\u6001\u7684\u4e0a\u4e0b\u6587\u3002 \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406\u7ec4\u4ef6\uff1a \u626b\u63cf\u4e16\u754c\u4ee5\u8ddf\u8e2a\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002\u5982\u679c\u542f\u7528\u7269\u7406\u529f\u80fd\uff0c\u5219\u901a\u8fc7 Vehicle.get_velocity() \u68c0\u7d22\u901f\u5ea6\u3002\u5426\u5219\uff0c\u5c06\u4f7f\u7528\u4f4d\u7f6e\u968f\u65f6\u95f4\u66f4\u65b0\u7684\u5386\u53f2\u8bb0\u5f55\u6765\u8ba1\u7b97\u901f\u5ea6\u3002 \u5b58\u50a8 \u4eff\u771f\u72b6\u6001 \u7ec4\u4ef6\u4e2d\u6bcf\u8f86\u8f66\u548c\u884c\u4eba\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u9644\u52a0\u4fe1\u606f\uff08\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u8fb9\u754c\u6846\u7b49\uff09\u3002 \u66f4\u65b0 \u8f66\u8f86\u6ce8\u518c\u8868 \u4e2d\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u8f66\u8f86\u5217\u8868\u3002 \u66f4\u65b0 \u63a7\u5236\u5faa\u73af \u548c \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \u7ec4\u4ef6\u4e2d\u7684\u6761\u76ee\u4ee5\u5339\u914d\u8f66\u8f86\u6ce8\u518c\u8868\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a ALSM.h , ALSM.cpp .","title":"\u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406"},{"location":"adv_traffic_manager/#_8","text":"\u8f66\u8f86\u6ce8\u518c\u8868\u8bb0\u5f55\u4eff\u771f\u4e2d\u7684\u6240\u6709\u8f66\u8f86\u548c\u884c\u4eba\u3002 \u8f66\u8f86\u6ce8\u518c\u8868\uff1a \u4ece \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u4f20\u9012\u6765\u6700\u65b0\u7684\u8f66\u8f86\u548c\u884c\u4eba\u5217\u8868\u3002 \u5c06\u6ce8\u518c\u5230\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u8f66\u8f86\u5b58\u50a8\u5728\u5355\u72ec\u7684\u6570\u7ec4\u4e2d\uff0c\u4ee5\u4fbf\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u8fdb\u884c\u8fed\u4ee3\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a MotionPlannerStage.cpp .","title":"\u8f66\u8f86\u6ce8\u518c\u8868"},{"location":"adv_traffic_manager/#_9","text":"\u4eff\u771f\u72b6\u6001\u5b58\u50a8\u4eff\u771f\u4e2d\u6240\u6709\u8f66\u8f86\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5728\u540e\u671f\u9636\u6bb5\u8f7b\u677e\u8bbf\u95ee\u548c\u4fee\u6539\u3002 \u4eff\u771f\u72b6\u6001\uff1a \u4ece \u4ee3\u7406\u7684\u751f\u547d\u5468\u671f\u548c\u72b6\u6001\u7ba1\u7406 \u63a5\u6536\u6570\u636e\uff0c\u5305\u62ec\u5f53\u524d\u53c2\u4e0e\u8005\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u4ea4\u901a\u706f\u5f71\u54cd\u3001\u4ea4\u901a\u706f\u72b6\u6001\u7b49\u3002 \u5c06\u6240\u6709\u4fe1\u606f\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u907f\u514d\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u5bf9\u670d\u52a1\u5668\u7684\u540e\u7eed\u8c03\u7528\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6\uff1a SimulationState.cpp , SimulationState.h .","title":"\u4eff\u771f\u72b6\u6001"},{"location":"adv_traffic_manager/#_10","text":"\u63a7\u5236\u5faa\u73af\u7ba1\u7406\u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684\u8ba1\u7b97\uff0c\u4ee5\u4fbf\u5b83\u4eec\u540c\u6b65\u6267\u884c\u3002\u63a7\u5236\u5faa\u73af\u7531\u4e94\u4e2a\u4e0d\u540c\u7684 \u9636\u6bb5 \u7ec4\u6210;\u5b9a\u4f4d\uff0c\u78b0\u649e\uff0c\u4ea4\u901a\u706f\uff0c\u8fd0\u52a8\u89c4\u5212\u548c\u8f66\u8f86\u706f\u3002 \u63a7\u5236\u5faa\u73af: \u4ece \u8f66\u8f86\u6ce8\u518c\u8868 \u63a5\u6536TM-\u63a7\u5236\u7684\u8f66\u8f86\u6570\u7ec4\u3002 \u901a\u8fc7\u5faa\u73af\u904d\u5386\u6570\u7ec4\uff0c\u5206\u522b\u5bf9\u6bcf\u8f86\u8f66\u6267\u884c\u8ba1\u7b97\u3002 \u5c06\u8ba1\u7b97\u5206\u6210\u4e00\u7cfb\u5217\u7684 \u9636\u6bb5 \u3002 \u5728\u9636\u6bb5\u4e4b\u95f4\u521b\u5efa\u540c\u6b65\u5c4f\u969c\u4ee5\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002\u6240\u6709\u8f66\u8f86\u7684\u8ba1\u7b97\u5728\u4efb\u4f55\u8f66\u8f86\u79fb\u52a8\u5230\u4e0b\u4e00\u9636\u6bb5\u4e4b\u524d\u5b8c\u6210\uff0c\u786e\u4fdd\u6240\u6709\u8f66\u8f86\u5728\u540c\u4e00\u5e27\u4e2d\u66f4\u65b0\u3002 \u534f\u8c03\u5404 \u9636\u6bb5 \u4e4b\u95f4\u7684\u8fc7\u6e21\uff0c\u4f7f\u6240\u6709\u8ba1\u7b97\u540c\u6b65\u5b8c\u6210\u3002 \u5f53\u6700\u540e\u4e00\u4e2a\u9636\u6bb5( \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u548c \u8f66\u8f86\u706f\u5149\u9636\u6bb5 )\u5b8c\u6210\u65f6\uff0c\u5c06 \u547d\u4ee4\u6570\u7ec4 \u53d1\u9001\u5230\u670d\u52a1\u5668\uff0c\u56e0\u6b64\u5728\u547d\u4ee4\u8ba1\u7b97\u548c\u547d\u4ee4\u5e94\u7528\u4e4b\u95f4\u6ca1\u6709\u5e27\u5ef6\u8fdf\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficManagerLocal.cpp .","title":"\u63a7\u5236\u5faa\u73af"},{"location":"adv_traffic_manager/#_11","text":"\u5185\u5b58\u5730\u56fe\u662f\u5305\u542b\u5728 \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \u4e2d\u7684\u8f85\u52a9\u6a21\u5757\uff0c\u5728 \u5b9a\u4f4d\u9636\u6bb5 \u4f7f\u7528\u3002 \u5185\u5b58\u5730\u56fe: \u5c06\u5730\u56fe\u8f6c\u6362\u4e3a\u79bb\u6563\u8def\u5f84\u70b9\u7684\u7f51\u683c\u3002 \u5305\u542b\u7279\u5b9a\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8def\u70b9\uff0c\u5e76\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u6765\u8fde\u63a5\u8def\u70b9\u548c\u8bc6\u522b\u9053\u8def\u3001\u8def\u53e3\u7b49\u3002 \u901a\u8fc7\u8bc6\u522b\u8fd9\u4e9b\u5efa\u7b51\u7269\u7684 ID \u6765\u5feb\u901f\u5b9a\u4f4d\u9644\u8fd1\u533a\u57df\u7684\u8f66\u8f86\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: InMemoryMap.cpp and SimpleWaypoint.cpp .","title":"\u5185\u5b58\u5730\u56fe"},{"location":"adv_traffic_manager/#pbvt","text":"PBVT\u4ee3\u8868\u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9\u3002PBVT\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u6bcf\u8f86\u8f66\u7684\u9884\u671f\u8def\u5f84\uff0c\u5e76\u5141\u8bb8\u5728 \u63a7\u5236\u5faa\u73af \u671f\u95f4\u8f7b\u677e\u8bbf\u95ee\u6570\u636e\u3002 PBVT: \u5305\u542b\u4e00\u4e2adeque\u5bf9\u8c61\u7684\u5730\u56fe\uff0c\u6bcf\u8f86\u8f66\u6709\u4e00\u4e2a\u5165\u53e3\u3002 \u5305\u542b\u6bcf\u8f86\u8f66\u7684\u4e00\u7ec4\u8def\u70b9\uff0c\u63cf\u8ff0\u5176\u5f53\u524d\u4f4d\u7f6e\u548c\u8fd1\u671f\u8def\u5f84\u3002 \u5305\u542b \u5b9a\u4f4d\u9636\u6bb5 \u4f7f\u7528\u7684 \u5185\u5b58\u5730\u56fe \uff0c\u7528\u4e8e\u5c06\u6bcf\u4e2a\u8f66\u8f86\u4e0e\u6700\u8fd1\u7684\u8def\u70b9\u548c\u53ef\u80fd\u7684\u91cd\u53e0\u8def\u5f84\u5173\u8054\u8d77\u6765\u3002","title":"PBVT"},{"location":"adv_traffic_manager/#pid","text":"PID\u63a7\u5236\u5668\u662f\u5728 \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u6267\u884c\u8ba1\u7b97\u7684\u8f85\u52a9\u6a21\u5757\u3002 PID \u63a7\u5236\u5668: \u6839\u636e \u8fd0\u52a8\u89c4\u5212\u9636\u6bb5 \u6536\u96c6\u7684\u4fe1\u606f\uff0c\u4f30\u7b97\u8fbe\u5230\u76ee\u6807\u503c\u6240\u9700\u7684\u6cb9\u95e8\u3001\u5239\u8f66\u548c\u8f6c\u5411\u8f93\u5165\u3002 \u6839\u636e\u63a7\u5236\u5668\u7684\u5177\u4f53\u53c2\u6570\u5316\u8fdb\u884c\u8c03\u6574\u3002\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4fee\u6539\u53c2\u6570\u3002\u9605\u8bfb\u66f4\u591a\u5173\u4e8e PID\u63a7\u5236\u5668 \u7684\u4fe1\u606f\uff0c\u4e86\u89e3\u5982\u4f55\u8fdb\u884c\u4fee\u6539\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: PIDController.cpp .","title":"PID \u63a7\u5236\u5668"},{"location":"adv_traffic_manager/#_12","text":"\u547d\u4ee4\u6570\u7ec4\u8868\u793a TM \u903b\u8f91\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u6b65\u3002\u5b83\u63a5\u6536\u6240\u6709\u6ce8\u518c\u8f66\u8f86\u7684\u547d\u4ee4\u5e76\u5e94\u7528\u5b83\u4eec\u3002 \u547d\u4ee4\u6570\u7ec4: \u4ece \u8def\u5f84\u89c4\u5212\u9636\u6bb5 \u63a5\u6536\u4e00\u7cfb\u5217 carla.VehicleControl \u3002 \u6279\u5904\u7406\u8981\u5728\u540c\u4e00\u5e27\u5185\u5e94\u7528\u7684\u6240\u6709\u547d\u4ee4\u3002 \u5c06\u6279\u5904\u7406\u53d1\u9001\u5230\u5728 carla \u4e2d\u8c03\u7528 apply_batch \uff08\uff09 \u6216 apply_batch_synch\uff08\uff09 \u7684 CARLA \u670d\u52a1\u5668.\u5ba2\u6237\u7aef \uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6a21\u62df\u662f\u5206\u522b\u4ee5\u5f02\u6b65\u6a21\u5f0f\u8fd8\u662f\u540c\u6b65\u6a21\u5f0f\u8fd0\u884c\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficManagerLocal.cpp .","title":"\u547d\u4ee4\u6570\u7ec4"},{"location":"adv_traffic_manager/#_13","text":"","title":"\u63a7\u5236\u5faa\u73af\u7684\u9636\u6bb5"},{"location":"adv_traffic_manager/#1-","text":"\u5b9a\u4f4d\u9636\u6bb5\u4e3aTM\u63a7\u5236\u7684\u8f66\u8f86\u5b9a\u4e49\u4e86\u8fd1\u672a\u6765\u7684\u8def\u5f84\u3002 \u672c\u5730\u5316\u9636\u6bb5\uff1a \u4ece \u4eff\u771f\u72b6\u6001 \u83b7\u53d6\u6240\u6709\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002 \u4f7f\u7528 \u5185\u5b58\u5730\u56fe \u5c06\u6bcf\u8f86\u8f66\u4e0e\u822a\u70b9\u5217\u8868\u76f8\u5173\u8054\uff0c\u8be5\u822a\u70b9\u5217\u8868\u6839\u636e\u5176\u8f68\u8ff9\u63cf\u8ff0\u5176\u5f53\u524d\u4f4d\u7f6e\u548c\u8fd1\u671f\u8def\u5f84\u3002\u8f66\u8f86\u884c\u9a76\u5f97\u8d8a\u5feb\uff0c\u5217\u8868\u5c31\u8d8a\u957f\u3002 \u6839\u636e\u89c4\u5212\u51b3\u7b56\u66f4\u65b0\u8def\u5f84\uff0c\u4f8b\u5982\u53d8\u9053\u3001\u9650\u901f\u3001\u4e0e\u524d\u65b9\u8f66\u8f86\u7684\u8ddd\u79bb\u53c2\u6570\u5316\u7b49\u3002 \u5c06\u6240\u6709\u8f66\u8f86\u7684\u8def\u5f84\u5b58\u50a8\u5728 PBVT \u6a21\u5757\u4e2d\u3002 \u76f8\u4e92\u6bd4\u8f83\u8def\u5f84\u4ee5\u4f30\u8ba1\u53ef\u80fd\u7684\u78b0\u649e\u60c5\u51b5\u3002\u7ed3\u679c\u5c06\u4f20\u9012\u5230\u78b0\u649e\u9636\u6bb5\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: LocalizationStage.cpp and LocalizationUtils.cpp .","title":"\u7b2c 1 \u9636\u6bb5 - \u5b9a\u4f4d\u9636\u6bb5"},{"location":"adv_traffic_manager/#2-","text":"\u78b0\u649e\u9636\u6bb5\u4f1a\u89e6\u53d1\u78b0\u649e\u5371\u9669\u3002 \u78b0\u649e\u9636\u6bb5\uff1a \u4ece \u5b9a\u4f4d\u9636\u6bb5 \u63a5\u6536\u8def\u5f84\u53ef\u80fd\u91cd\u53e0\u7684\u8f66\u8f86\u5bf9\u5217\u8868\u3002 \u524d\u65b9\u8def\u5f84\uff08\u6d4b\u5730\u7ebf\u8fb9\u754c\uff09\u6269\u5c55\u6bcf\u4e2a\u8f66\u8f86\u5bf9\u7684\u8fb9\u754c\u6846\uff0c\u4ee5\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u5b9e\u9645\u91cd\u53e0\u5e76\u786e\u5b9a\u78b0\u649e\u98ce\u9669\u662f\u5426\u771f\u5b9e\u3002 \u5c06\u6240\u6709\u53ef\u80fd\u7684\u78b0\u649e\u7684\u5371\u9669\u53d1\u9001\u5230 \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5 \uff0c\u4ee5\u76f8\u5e94\u5730\u4fee\u6539\u8def\u5f84\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: CollisionStage.cpp .","title":"\u7b2c 2 \u9636\u6bb5 - \u78b0\u649e\u9636\u6bb5"},{"location":"adv_traffic_manager/#-","text":"\u4ea4\u901a\u4fe1\u53f7\u706f\u9636\u6bb5\u4f1a\u89e6\u53d1\u4ea4\u901a\u7ba1\u5236\u5668\u9020\u6210\u7684\u5371\u9669\uff0c\u4f8b\u5982\u4ea4\u901a\u4fe1\u53f7\u706f\u3001\u505c\u8f66\u6807\u5fd7\u548c\u8def\u53e3\u7684\u4f18\u5148\u6743\u3002 \u4ea4\u901a\u706f\u9636\u6bb5\uff1a \u5982\u679c\u8f66\u8f86\u53d7\u5230\u9ec4\u8272\u6216\u7ea2\u8272\u4ea4\u901a\u4fe1\u53f7\u706f\u6216\u505c\u8f66\u6807\u5fd7\u7684\u5f71\u54cd\uff0c\u5219\u8bbe\u7f6e\u4ea4\u901a\u5371\u9669\u3002 \u5982\u679c\u8fb9\u754c\u6846\u4f4d\u4e8e\u65e0\u4fe1\u53f7\u706f\u7684\u4ea4\u6c47\u70b9\uff0c\u5219\u6cbf\u8f66\u8f86\u8def\u5f84\u5ef6\u4f38\u8fb9\u754c\u6846\u3002\u8def\u5f84\u91cd\u53e0\u7684\u8f66\u8f86\u9075\u5faa\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u987a\u5e8f\u79fb\u52a8\u3002\u7b49\u5f85\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: TrafficLightStage.cpp .","title":"\u7b2c\u4e09\u9636\u6bb5 - \u4ea4\u901a\u706f\u9636\u6bb5"},{"location":"adv_traffic_manager/#4-","text":"\u201c\u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5\u201d\uff08Motion Planner Stage\uff09 \u751f\u6210\u8981\u5e94\u7528\u4e8e\u8f66\u8f86\u7684 CARLA \u547d\u4ee4\u3002 \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5\uff1a \u6536\u96c6\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff08 \u4eff\u771f\u72b6\u6001 )\uff09\u3001\u8def\u5f84 \uff08 \u8def\u5f84\u7f13\u5b58\u548c\u8f66\u8f86\u8f68\u8ff9 \uff09 \u548c\u5371\u9669\uff08 \u78b0\u649e \u9636\u6bb5\u548c \u4ea4\u901a\u4fe1\u53f7\u706f\u9636\u6bb5 \uff09\u3002 \u5bf9\u8f66\u8f86\u5e94\u5982\u4f55\u79fb\u52a8\u505a\u51fa\u9ad8\u7ea7\u51b3\u7b56\uff0c\u4f8b\u5982\uff0c\u8ba1\u7b97\u9632\u6b62\u78b0\u649e\u5371\u9669\u6240\u9700\u7684\u5236\u52a8\u5668\u3002 PID\u63a7\u5236\u5668 \u7528\u4e8e\u6839\u636e\u76ee\u6807\u503c\u4f30\u8ba1\u884c\u4e3a\u3002 \u5c06\u671f\u671b\u7684\u8fd0\u52a8\u8f6c\u5316\u4e3a\u9002\u7528\u4e8e\u8f66\u8f86\u7684 carla.VehicleControl\u3002 \u5c06\u751f\u6210\u7684CARLA\u547d\u4ee4\u53d1\u9001\u5230 \u547d\u4ee4\u6570\u7ec4 \u3002 \u76f8\u5173\u7684.cpp\u6587\u4ef6: MotionPlannerStage.cpp .","title":"\u7b2c 4 \u9636\u6bb5 - \u8fd0\u52a8\u89c4\u5212\u5668\u9636\u6bb5"},{"location":"adv_traffic_manager/#5-","text":"\u8f66\u706f\u9636\u6bb5\u6839\u636e\u8f66\u8f86\u72b6\u51b5\u548c\u5468\u56f4\u73af\u5883\u6fc0\u6d3b\u8f66\u706f\u3002 \u200b \u8f66\u706f\u9636\u6bb5: \u68c0\u7d22\u8f66\u8f86\u7684\u8ba1\u5212\u822a\u70b9\u3001\u6709\u5173\u8f66\u8f86\u706f\u5149\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u706f\u5149\u72b6\u6001\u548c\u8ba1\u5212\u5e94\u7528\u7684\u547d\u4ee4\uff09\u548c\u5929\u6c14\u72b6\u51b5\u3002 \u786e\u5b9a\u8f66\u706f\u7684\u65b0\u72b6\u6001: \u5982\u679c\u8f66\u8f86\u8ba1\u5212\u5728\u4e0b\u4e00\u4e2a\u8def\u53e3\u5de6\u8f6c/\u53f3\u8f6c\uff0c\u5219\u6253\u5f00\u95ea\u5149\u706f\u3002 \u5982\u679c\u5e94\u7528\u7684\u547d\u4ee4\u8981\u6c42\u8f66\u8f86\u5236\u52a8\uff0c\u5219\u6253\u5f00\u505c\u8f66\u706f\u3002 \u4ece\u65e5\u843d\u5230\u9ece\u660e\u6216\u5728\u5927\u96e8\u4e2d\u6253\u5f00\u8fd1\u5149\u706f\u548c\u4f4d\u7f6e\u706f\u3002 \u5728\u5927\u96fe\u6761\u4ef6\u4e0b\u6253\u5f00\u96fe\u706f\u3002 \u5982\u679c\u8f66\u706f\u72b6\u6001\u5df2\u66f4\u6539\uff0c\u8bf7\u66f4\u65b0\u8f66\u706f\u72b6\u6001\u3002 \u76f8\u5173\u7684 .cpp \u6587\u4ef6: VehicleLightStage.cpp .","title":"\u7b2c 5 \u9636\u6bb5 - \u8f66\u706f\u9636\u6bb5"},{"location":"adv_traffic_manager/#_14","text":"","title":"\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#_15","text":"TM \u5b9e\u73b0\u4e86\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u65f6\u5fc5\u987b\u8003\u8651\u7684\u4e00\u822c\u884c\u4e3a\u6a21\u5f0f\uff1a \u8f66\u8f86\u4e0d\u662f\u4ee5\u76ee\u6807\u4e3a\u5bfc\u5411\u7684 \uff0c\u5b83\u4eec\u9075\u5faa\u52a8\u6001\u4ea7\u751f\u7684\u8f68\u8ff9\uff0c\u5e76\u5728\u63a5\u8fd1\u8def\u53e3\u65f6\u968f\u673a\u9009\u62e9\u8def\u5f84\u3002\u4ed6\u4eec\u7684\u9053\u8def\u662f\u65e0\u6b62\u5883\u7684\u3002 \u9664\u975e\u8bbe\u7f6e\u4e86\u4efb\u4f55\u5176\u4ed6\u503c\uff0c \u5426\u5219\u8f66\u8f86\u7684\u76ee\u6807\u901f\u5ea6\u662f\u5176\u5f53\u524d\u901f\u5ea6\u9650\u5236\u7684 70%\u3002 \u8def\u53e3\u4f18\u5148\u6743\u4e0d\u9075\u5b88\u4ea4\u901a\u6cd5\u89c4\u3002 TM \u5728\u8def\u53e3\u4f7f\u7528\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\u7cfb\u7edf\u3002\u6b64\u9650\u5236\u7684\u89e3\u51b3\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u540c\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u73af\u5f62\u4ea4\u53c9\u8def\u53e3\u5185\u7684\u8f66\u8f86\u8ba9\u6b65\u7ed9\u8bd5\u56fe\u8fdb\u5165\u7684\u8f66\u8f86\u3002 TM \u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7 Python API \u8fdb\u884c\u8c03\u6574\u3002\u6709\u5173\u5177\u4f53\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 Python API \u6587\u6863 \u7684 TM \u90e8\u5206\u3002\u4ee5\u4e0b\u662f\u901a\u8fc7 API \u5b9e\u73b0\u7684\u529f\u80fd\u7684\u4e00\u822c\u6458\u8981\uff1a \u4e3b\u9898 \u63cf\u8ff0 \u5e38\u89c4: - \u521b\u5efa\u8fde\u63a5\u5230\u7aef\u53e3\u7684TM\u5b9e\u4f8b\u3002 - \u68c0\u7d22TM\u8fde\u63a5\u7684\u7aef\u53e3\u3002 \u5b89\u5168\u6761\u4ef6: - \u8bbe\u7f6e\u505c\u6b62\u8f66\u8f86\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u5bf9\u4e8e\u5355\u4e2a\u8f66\u8f86\u6216\u8005\u6240\u6709\u8f66\u8f86\uff09\u3002\u8fd9\u5c06\u5f71\u54cd\u6700\u5c0f\u79fb\u52a8\u8ddd\u79bb\u3002 - \u5c06\u6240\u9700\u901f\u5ea6\u8bbe\u7f6e\u4e3a\u5f53\u524d\u901f\u5ea6\u73b0\u72b6\u7684\u767e\u5206\u6bd4\uff08\u5bf9\u4e8e\u5355\u4e2a\u8f66\u8f86\u6216\u6240\u6709\u8f66\u8f86\uff09\u3002 - \u91cd\u7f6e\u4ea4\u901a\u4fe1\u53f7\u706f\u3002 \u78b0\u649e\u7ba1\u7406: - \u542f\u7528/\u7981\u7528\u8f66\u8f86\u4e0e\u7279\u5b9a\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u5176\u4ed6\u8f66\u8f86\u3002 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u6b65\u884c\u8005 - \u8ba9\u8f66\u8f86\u5ffd\u7565\u6240\u6709\u4ea4\u901a\u706f\u3002 \u53d8\u9053: - \u5f3a\u5236\u53d8\u9053\uff0c\u5ffd\u7565\u53ef\u80fd\u7684\u78b0\u649e\u3002 - \u542f\u7528/\u7981\u7528\u8f66\u8f86\u7684\u53d8\u9053\u3002 \u6df7\u5408\u7269\u7406\u6a21\u5f0f: - \u542f\u7528/\u7981\u7528\u6df7\u5408\u7269\u7406\u6a21\u5f0f\u3002 - \u66f4\u6539\u542f\u7528\u7269\u7406\u7684\u534a\u5f84\u3002","title":"\u8f66\u8f86\u884c\u4e3a\u6ce8\u610f\u4e8b\u9879"},{"location":"adv_traffic_manager/#_16","text":"\u7b14\u8bb0 TM \u8bbe\u8ba1\u4e3a\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528 TM \u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u4e0d\u826f\u7ed3\u679c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u540c\u6b65\u6a21\u5f0f \u3002 TM \u5b9e\u4f8b\u7531 carla \u521b\u5efa.\u5ba2\u6237\u7aef \uff0c\u4f20\u9012\u8981\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u7f3a\u7701\u7aef\u53e3\u4e3a 8000 \u3002 \u8981\u521b\u5efa TM \u5b9e\u4f8b\uff1a tm = client.get_trafficmanager(port) \u8981\u4e3a\u4e00\u7ec4\u8f66\u8f86\u542f\u7528 autopilot\uff0c\u8bf7\u68c0\u7d22 TM \u5b9e\u4f8b\u7684\u7aef\u53e3\u5e76\u8bbe\u7f6eset_autopilot\u4e3aTrue \uff0c\u540c\u65f6\u4f20\u9012 TM \u7aef\u53e3\u3002\u5982\u679c\u672a\u63d0\u4f9b\u7aef\u53e3\uff0c\u5b83\u5c06\u5c1d\u8bd5\u8fde\u63a5\u5230\u9ed8\u8ba4\u7aef\u53e3 \uff088000\uff09 \u4e2d\u7684 TM\u3002\u5982\u679c TM \u4e0d\u5b58\u5728\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u3002 tm_port = tm.get_port() for v in vehicles_list: v.set_autopilot(True,tm_port) \u7b14\u8bb0 \u5728\u591a\u5ba2\u6237\u7aef\u60c5\u51b5\u4e0b\u521b\u5efa\u6216\u8fde\u63a5\u5230 TM \u4e0e\u4e0a\u8ff0\u793a\u4f8b\u4e0d\u540c\u3002 /PythonAPI/examples \u4e2d\u7684 generate_traffic.py \u811a\u672c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793a\u4f8b\uff0c \u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u4f5c\u4e3a\u811a\u672c\u53c2\u6570\u4f20\u9012\u7684\u7aef\u53e3\u521b\u5efa TM \u5b9e\u4f8b\uff0c\u5e76\u901a\u8fc7\u6279\u91cf\u5c06\u81ea\u52a8\u9a7e\u9a76\u4eea\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u503c\u6765\u6ce8\u518c\u751f\u6210\u7684\u6bcf\u8f86\u8f66\u3002 traffic_manager = client.get_trafficmanager(args.tm-port) tm_port = traffic_manager.get_port() ... batch.append(SpawnActor(blueprint, transform).then(SetAutopilot(FutureActor, True,tm_port))) ... traffic_manager.global_percentage_speed_difference(30.0)","title":"\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#autopilot","text":"\u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a TM \u5b9e\u4f8b\uff0c\u5e76\u4e3a\u7279\u5b9a\u8f66\u8f86\u914d\u7f6e\u5371\u9669\u884c\u4e3a\uff0c\u4f7f\u5176\u5ffd\u7565\u6240\u6709\u4ea4\u901a\u4fe1\u53f7\u706f\uff0c\u4e0d\u4e0e\u5176\u4ed6\u8f66\u8f86\u4fdd\u6301\u5b89\u5168\u8ddd\u79bb\uff0c\u5e76\u4ee5\u6bd4\u5f53\u524d\u9650\u901f\u5feb 20% \u7684\u901f\u5ea6\u884c\u9a76\uff1a tm = client.get_trafficmanager(port) tm_port = tm.get_port() for v in my_vehicles: v.set_autopilot(True,tm_port) danger_car = my_vehicles[0] tm.ignore_lights_percentage(danger_car,100) tm.distance_to_leading_vehicle(danger_car,0) tm.vehicle_percentage_speed_difference(danger_car,-20) \u4ee5\u4e0b\u793a\u4f8b\u5c06\u76f8\u540c\u7684\u8f66\u8f86\u5217\u8868\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u4eea\uff0c\u4f46\u5c06\u5176\u914d\u7f6e\u4e3a\u9002\u5ea6\u9a7e\u9a76\u884c\u4e3a\u3002\u8f66\u8f86\u7684\u884c\u9a76\u901f\u5ea6\u6bd4\u5f53\u524d\u9650\u901f\u6162 80%\uff0c\u4e0e\u5176\u4ed6\u8f66\u8f86\u4e4b\u95f4\u81f3\u5c11\u7559\u51fa 5 \u7c73\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u4ece\u4e0d\u8fdb\u884c\u53d8\u9053\uff1a tm = client.get_trafficmanager(port) tm_port = tm.get_port() for v in my_vehicles: v.set_autopilot(True,tm_port) danger_car = my_vehicles[0] tm.global_distance_to_leading_vehicle(5) tm.global_percentage_speed_difference(80) for v in my_vehicles: tm.auto_lane_change(v,False)","title":"\u914d\u7f6e autopilot \u884c\u4e3a"},{"location":"adv_traffic_manager/#_17","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTM \u7ba1\u7406\u7684\u8f66\u8f86\u7684\u8f66\u706f\uff08\u5239\u8f66\u706f\u3001\u8f6c\u5411\u706f\u7b49\uff09\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u3002\u53ef\u4ee5\u59d4\u6258 TM \u6765\u66f4\u65b0\u7ed9\u5b9a\u8f66\u8f86\u53c2\u4e0e\u8005\u7684\u8f66\u706f\uff1a tm = client.get_trafficmanager(port) for actor in my_vehicles: tm.update_vehicle_lights(actor, True) \u8f66\u706f\u7ba1\u7406\u5fc5\u987b\u6309\u6bcf\u8f86\u8f66\u8fdb\u884c\u6307\u5b9a\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u90fd\u53ef\u4ee5\u6709\u5e26\u548c\u4e0d\u5e26\u81ea\u52a8\u706f\u7ba1\u7406\u7684\u8f66\u8f86\u3002","title":"\u59d4\u6d3e\u4ea4\u901a\u7ba1\u7406\u5668\u81ea\u52a8\u66f4\u65b0\u8f66\u706f"},{"location":"adv_traffic_manager/#_18","text":"TM \u4e0d\u662f\u4e00\u4e2a\u9700\u8981\u88ab\u6467\u6bc1\u7684\u53c2\u4e0e\u8005;\u5f53\u521b\u5efa\u5b83\u7684\u5ba2\u6237\u7aef\u505c\u6b62\u65f6\uff0c\u5b83\u5c06\u505c\u6b62\u3002\u8fd9\u662f\u7531 API \u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u7528\u6237\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5728\u5173\u95ed TM \u65f6\uff0c\u7528\u6237\u5fc5\u987b\u6467\u6bc1\u7531\u5b83\u63a7\u5236\u7684\u8f66\u8f86\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5728\u5730\u56fe\u4e0a\u4fdd\u6301\u4e0d\u52a8\u3002 generate_traffic.py \u811a\u672c\u4f1a\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c: client.apply_batch([carla.command.DestroyActor(x) for x in vehicles_list]) \u8b66\u544a \u5173\u95ed TM-Server \u5c06\u5173\u95ed\u8fde\u63a5\u5230\u5b83\u7684 TM-Clients \u3002 \u8981\u4e86\u89e3 TM-Server \u548c TM-Client \u4e4b\u95f4\u7684\u533a\u522b, \u8bf7\u9605\u8bfb Running multiple Traffic Managers \u3002","title":"\u505c\u6b62\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#_19","text":"\u5728\u786e\u5b9a\u6027\u6a21\u5f0f\u4e0b\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u5728\u76f8\u540c\u6761\u4ef6\u4e0b\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u548c\u884c\u4e3a\u3002\u4e0d\u8981\u5c06\u786e\u5b9a\u6027\u8bba\u8bef\u8ba4\u4e3a\u662f\u8bb0\u5f55\u5668\u3002\u867d\u7136\u8bb0\u5f55\u5668\u5141\u8bb8\u60a8\u5b58\u50a8\u4eff\u771f\u65e5\u5fd7\u4ee5\u8fdb\u884c\u56de\u653e\uff0c\u4f46\u786e\u5b9a\u6027\u53ef\u786e\u4fdd\u53ea\u8981\u7ef4\u6301\u76f8\u540c\u7684\u6761\u4ef6\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5728\u811a\u672c\u7684\u4e0d\u540c\u6267\u884c\u8fc7\u7a0b\u4e2d\u59cb\u7ec8\u5177\u6709\u76f8\u540c\u7684\u8f93\u51fa\u3002 \u786e\u5b9a\u6027\u6a21\u5f0f \u4ec5\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b \u53ef\u7528\u3002\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\uff0c\u5bf9\u4eff\u771f\u7684\u63a7\u5236\u8f83\u5c11\uff0c\u5e76\u4e14\u65e0\u6cd5\u5b9e\u73b0\u786e\u5b9a\u6027\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u9605\u8bfb \u540c\u6b65\u6a21\u5f0f \u90e8\u5206\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8981\u542f\u7528\u786e\u5b9a\u6027\u6a21\u5f0f\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a my_tm.set_random_device_seed(seed_value) seed_value \u662f\u4e00\u4e2a\u5c06\u751f\u6210\u968f\u673a\u6570\u7684\u6570\u5b57\u7684 int \u79cd\u5b50\u6570\u3002\u8be5\u503c\u672c\u8eab\u5e76\u4e0d\u76f8\u5173\uff0c\u4f46\u76f8\u540c\u7684\u503c\u5c06\u59cb\u7ec8\u5bfc\u81f4\u76f8\u540c\u7684\u8f93\u51fa\u3002\u5177\u6709\u76f8\u540c\u6761\u4ef6\u3001\u4f7f\u7528\u76f8\u540c\u79cd\u5b50\u503c\u7684\u4e24\u6b21\u4eff\u771f\u5c06\u662f\u786e\u5b9a\u6027\u7684\u3002 \u4e3a\u4e86\u4fdd\u6301\u591a\u6b21\u4eff\u771f\u8fd0\u884c\u7684\u786e\u5b9a\u6027\uff0c \u5fc5\u987b\u4e3a\u6bcf\u6b21\u4eff\u771f\u8bbe\u7f6e\u79cd\u5b50 \u3002\u4f8b\u5982\uff0c\u6bcf\u6b21 \u91cd\u65b0\u52a0\u8f7d \u4e16\u754c\u65f6\uff0c\u90fd\u5fc5\u987b\u91cd\u65b0\u8bbe\u7f6e\u79cd\u5b50\uff1a client.reload_world() my_tm.set_random_device_seed(seed_value) \u53ef\u4ee5\u901a\u8fc7\u5c06\u79cd\u5b50\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u6765\u5728\u793a\u4f8b\u811a\u672c generate_traffic.py \u4e2d\u6d4b\u8bd5\u786e\u5b9a\u6027\u6a21\u5f0f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528 50 \u4e2a\u81ea\u52a8\u9a7e\u9a76\u53c2\u4e0e\u8005\u586b\u5145\u5730\u56fe\uff0c\u5e76\u5c06\u79cd\u5b50\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c 9 \uff1a cd PythonAPI/examples python3 generate_traffic.py -n 50 --seed 9 \u8b66\u544a \u5728\u542f\u7528\u786e\u5b9a\u6027\u6a21\u5f0f\u4e4b\u524d\uff0cCarla \u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u5fc5\u987b\u5904\u4e8e\u540c\u6b65\u6a21\u5f0f\u3002\u5728\u6b64\u5904\u9605\u8bfb\u6709\u5173\u4ea4\u901a\u7ba1\u7406\u5668\u4e2d\u540c\u6b65\u6a21\u5f0f\u7684 \u66f4\u591a\u4fe1\u606f \u3002","title":"\u786e\u5b9a\u6027\u6a21\u5f0f"},{"location":"adv_traffic_manager/#_20","text":"\u6df7\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u7981\u7528\u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u6216\u6807\u8bb0\u4e3a \u82f1\u96c4 \u7684\u8f66\u8f86\u7279\u5b9a\u534a\u5f84\u4e4b\u5916\u7684\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u5927\u591a\u6570\u7269\u7406\u8ba1\u7b97\u3002\u8fd9\u6d88\u9664\u4e86\u4eff\u771f\u4e2d\u7684\u8f66\u8f86\u7269\u7406\u74f6\u9888\u3002\u7269\u7406\u529f\u80fd\u88ab\u7981\u7528\u7684\u8f66\u8f86\u5c06\u901a\u8fc7\u9690\u5f62\u4f20\u9001\u79fb\u52a8\u3002\u7ef4\u6301\u7ebf\u6027\u52a0\u901f\u5ea6\u7684\u57fa\u672c\u8ba1\u7b97\uff0c\u4ee5\u786e\u4fdd\u4f4d\u7f6e\u66f4\u65b0\u548c\u8f66\u8f86\u901f\u5ea6\u4fdd\u6301\u771f\u5b9e\uff0c\u5e76\u4e14\u8f66\u8f86\u4e0a\u7269\u7406\u8ba1\u7b97\u7684\u5207\u6362\u662f\u6d41\u7545\u7684\u3002 \u6df7\u5408\u6a21\u5f0f\u4f7f\u7528 Actor.set_simulate_physics() \u65b9\u6cd5\u6765\u5207\u6362\u7269\u7406\u8ba1\u7b97\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u7981\u7528\u7684\u3002\u6709\u4e24\u4e2a\u9009\u9879\u53ef\u4ee5\u542f\u7528\u5b83\uff1a TrafficManager.set_hybrid_physics_mode(True) \u2014 \u6b64\u65b9\u6cd5\u4e3a\u8c03\u7528\u5b83\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5bf9\u8c61\u542f\u7528\u6df7\u5408\u6a21\u5f0f\u3002 \u4ee5 --hybrid \u6807\u5fd7\u8fd0\u884c generate_traffic.py \u2014 \u6b64\u793a\u4f8b\u811a\u672c\u521b\u5efa\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u5728\u81ea\u52a8\u9a7e\u9a76\u4eea\u4e2d\u751f\u6210\u8f66\u8f86\u3002\u5f53\u6807\u5fd7 --hybrid \u4f5c\u4e3a\u811a\u672c\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5b83\u5c06\u8fd9\u4e9b\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u6df7\u5408\u6a21\u5f0f\u3002 \u8981\u4fee\u6539\u6df7\u5408\u6a21\u5f0f\u7684\u884c\u4e3a\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u53c2\u6570\uff1a Radius (\u9ed8\u8ba4 = 50 \u7c73) \u2014 \u534a\u5f84\u76f8\u5bf9\u4e8e\u6807\u8bb0\u6709 \u82f1\u96c4 \u7684\u8f66\u8f86\u3002\u8be5\u534a\u5f84\u5185\u7684\u6240\u6709\u8f66\u8f86\u90fd\u5c06\u542f\u7528\u7269\u7406\u529f\u80fd\uff1b\u534a\u5f84\u4e4b\u5916\u7684\u8f66\u8f86\u5c06\u7981\u7528\u7269\u7406\u529f\u80fd\u3002\u4f7f\u7528 traffic_manager.set_hybrid_physics_radius(r) \u4fee\u6539\u534a\u5f84\u7684\u5927\u5c0f\u3002 Hero vehicle \u2014 \u5e26\u6709\u6807\u8bb0 role_name='hero' \u7684\u8f66\u8f86\u4f5c\u4e3a\u534a\u5f84\u7684\u4e2d\u5fc3\u3002 \u5982\u679c\u6ca1\u6709\u82f1\u96c4\u8f66\u8f86\uff0c \u6240\u6709\u8f66\u8f86\u7684\u7269\u7406\u529f\u80fd\u5c06\u88ab\u7981\u7528\u3002 \u5982\u679c\u6709\u4e0d\u6b62\u4e00\u8f86\u82f1\u96c4\u8f66\u8f86\uff0c \u5219\u4f1a\u8003\u8651\u6240\u6709\u82f1\u96c4\u8f66\u8f86\u7684\u534a\u5f84\uff0c\u4ece\u800c\u5728\u542f\u7528\u7269\u7406\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e0d\u540c\u7684\u5f71\u54cd\u533a\u57df\u3002 \u4e0b\u9762\u7684\u526a\u8f91\u663e\u793a\u4e86\u6df7\u5408\u6a21\u5f0f\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u65f6\u5982\u4f55\u542f\u7528\u548c\u7981\u7528\u7269\u7406\u529f\u80fd\u3002 \u82f1\u96c4\u8f66\u8f86 \u6807\u6709 \u7ea2\u8272\u65b9\u5757 \u3002 \u7981\u7528\u7269\u7406\u529f\u80fd \u7684\u8f66\u8f86\u6807\u6709 \u84dd\u8272\u65b9\u5757 \u3002\u5f53\u5728\u82f1\u96c4\u8f66\u8f86\u7684\u5f71\u54cd\u534a\u5f84\u5185\u65f6\uff0c \u542f\u7528\u7269\u7406\u529f\u80fd \u5e76\u4e14\u6807\u7b7e\u53d8\u4e3a \u7eff\u8272 \u3002","title":"\u6df7\u5408\u7269\u7406\u6a21\u5f0f"},{"location":"adv_traffic_manager/#_21","text":"","title":"\u8fd0\u884c\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"adv_traffic_manager/#_22","text":"Carla \u5ba2\u6237\u7aef\u901a\u8fc7\u5411\u670d\u52a1\u5668\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u7aef\u53e3\u6765\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u3002\u5982\u679c\u672a\u6307\u5b9a\u7aef\u53e3\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4 8000 \u7aef\u53e3\u3002\u5982\u679c\u5728\u540c\u4e00\u7aef\u53e3\u4e0a\u521b\u5efa\u66f4\u591a\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5b83\u4eec\u5c06\u6210\u4e3a \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef \uff0c\u800c\u539f\u59cb\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u6210\u4e3a \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef \u3002\u8fd9\u4e9b\u6807\u9898\u5b9a\u4e49\u4e86\u4ea4\u901a\u7ba1\u7406\u5668\u5728\u4eff\u771f\u4e2d\u7684\u884c\u4e3a\u65b9\u5f0f\u3002","title":"\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef"},{"location":"adv_traffic_manager/#_23","text":"\u5982\u679c\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef\u662f\u7b2c\u4e00\u4e2a\u8fde\u63a5\u5230\u7a7a\u95f2\u7aef\u53e3\u7684\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u7136\u540e\u5176\u4ed6\u4ea4\u901a\u7ba1\u7406\u5668\uff08\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef\uff09\u8fde\u63a5\u5230\u5b83\u6b63\u5728\u8fd0\u884c\u7684\u540c\u4e00\u7aef\u53e3\uff0c\u5219\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u5c06\u89c4\u5b9a\u6240\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u7684\u884c\u4e3a \uff0c\u4f8b\u5982\uff0c\u5982\u679c \u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef \u505c\u6b62\uff0c\u5219\u6240\u6709 \u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef \u5c06\u505c\u6b62\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e24\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002\u6bcf\u4e2a\u7aef\u53e3\u90fd\u8fde\u63a5\u5230\u4e0d\u540c\u4e14\u90fd\u672a\u4f7f\u7528\u7684\u7aef\u53e3\uff1a tm01 = client01.get_trafficmanager() # tm01 --> tm01 (p=8000) tm02 = client02.get_trafficmanager(5000) # tm02(p=5000) --> tm02 (p=5000)","title":"\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u670d\u52a1\u7aef"},{"location":"adv_traffic_manager/#_24","text":"\u5f53\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\uff08\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\uff09\u5360\u7528\u7684\u7aef\u53e3\u65f6\uff0c\u5c31\u4f1a\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u7684\u884c\u4e3a\u5c06\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u51b3\u5b9a\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e24\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e00\u4e2a\u90fd\u4e0e\u4e0a\u4e00\u8282\u4e2d\u521b\u5efa\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u8fde\u63a5\u3002 tm03 = client03.get_trafficmanager() # tm03 --> tm01 (p=8000). tm04 = client04.get_trafficmanager(5000) # tm04(p=5000) --> tm02 (p=5000) Carla \u670d\u52a1\u5668\u901a\u8fc7\u5b58\u50a8\u94fe\u63a5\u5230\u5b83\u4eec\u7684\u7aef\u53e3\u548c\u5ba2\u6237\u7aef IP\uff08\u5bf9\u7528\u6237\u9690\u85cf\uff09\u6765\u4fdd\u5b58\u6240\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u7684\u5bc4\u5b58\u5668\u3002\u76ee\u524d\u65e0\u6cd5\u68c0\u67e5\u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u521b\u5efa\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u3002\u5c1d\u8bd5\u521b\u5efa\u5b9e\u4f8b\u65f6\u59cb\u7ec8\u4f1a\u5c1d\u8bd5\u8fde\u63a5\uff0c\u5e76\u4e14\u5b83\u5c06\u521b\u5efa\u65b0\u7684 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u6216 \u4ea4\u901a\u7ba1\u7406\u5668\u5ba2\u6237\u7aef \u3002","title":"\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u5ba2\u6237\u7aef"},{"location":"adv_traffic_manager/#_25","text":"\u5728\u591a\u5ba2\u6237\u7aef\u6a21\u62df\u4e2d\uff0c\u5728\u540c\u4e00\u7aef\u53e3\u4e0a\u521b\u5efa\u591a\u4e2aTM\u3002\u7b2c\u4e00\u4e2a TM \u5c06\u662f TM \u670d\u52a1\u5668\uff0c\u5176\u4f59\u7684\u5c06\u662f\u8fde\u63a5\u5230\u5b83\u7684 TM \u5ba2\u6237\u7aef\u3002TM-Server \u5c06\u89c4\u5b9a\u6240\u6709 TM \u5b9e\u4f8b\u7684\u884c\u4e3a\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 terminal 2: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Client","title":"\u591a\u5ba2\u6237\u7aef\u4eff\u771f"},{"location":"adv_traffic_manager/#_26","text":"\u5728\u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f\u4e2d\uff0c\u5728\u4e0d\u540c\u7684\u7aef\u53e3\u4e0a\u521b\u5efa\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u3002\u6bcf\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u5b9e\u4f8b\u90fd\u4f1a\u63a7\u5236\u81ea\u5df1\u7684\u884c\u4e3a\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 terminal 2: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server A terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4550 # TM-Server B","title":"\u591a\u4ea4\u901a\u7ba1\u7406\u5668\u4eff\u771f"},{"location":"adv_traffic_manager/#_27","text":"\u591a\u91cd\u4eff\u771f\u662f\u6307\u591a\u4e2a Carla \u670d\u52a1\u5668\u540c\u65f6\u8fd0\u884c\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u9700\u8981\u8fde\u63a5\u5230\u76f8\u5173\u7684 Carla \u670d\u52a1\u5668\u7aef\u53e3\u3002\u53ea\u8981\u8ba1\u7b97\u80fd\u529b\u5141\u8bb8\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u53ef\u4ee5\u4e00\u6b21\u8fd0\u884c\u591a\u4e2a\u4eff\u771f\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff1a terminal 1: ./CarlaUE4.sh -carla-rpc-port=4000 # simulation A terminal 2: ./CarlaUE4.sh -carla-rpc-port=5000 # simulation B terminal 3: python3 generate_traffic.py --port 4000 --tm-port 4050 # TM-Server A connected to simulation A terminal 4: python3 generate_traffic.py --port 5000 --tm-port 5050 # TM-Server B connected to simulation B \u591a\u91cd\u4eff\u771f\u7684\u6982\u5ff5\u72ec\u7acb\u4e8e\u4ea4\u901a\u7ba1\u7406\u5668\u672c\u8eab\u3002\u4e0a\u9762\u7684\u793a\u4f8b\u5e76\u884c\u8fd0\u884c\u4e24\u4e2a Carla \u4eff\u771f A \u548c B\u3002\u5728\u6bcf\u4e2a\u4eff\u771f\u4e2d\uff0c\u90fd\u72ec\u7acb\u521b\u5efa\u4e00\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef\u3002\u4eff\u771f A \u53ef\u4ee5\u8fd0\u884c\u591a\u5ba2\u6237\u7aef\u4ea4\u901a\u7ba1\u7406\u7a0b\u5e8f\uff0c\u800c\u4eff\u771f B \u5219\u8fd0\u884c\u591a\u4ea4\u901a\u7ba1\u7406\u5668\u6216\u6839\u672c\u4e0d\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u4e0a\u8ff0\u8bbe\u7f6e\u6700\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u662f\u5ba2\u6237\u7aef\u5c1d\u8bd5\u8fde\u63a5\u5230\u672a\u5728\u6240\u9009\u4eff\u771f\u4e0a\u8fd0\u884c\u7684\u73b0\u6709\u4ea4\u901a\u7ba1\u7406\u5668\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c06\u4f1a\u51fa\u73b0\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u4e14\u8fde\u63a5\u5c06\u88ab\u4e2d\u6b62\uff0c\u4ee5\u9632\u6b62\u4eff\u771f\u4e4b\u95f4\u7684\u5e72\u6270\u3002","title":"\u591a\u91cd\u4eff\u771f"},{"location":"adv_traffic_manager/#_28","text":"\u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u8ba1\u4e3a\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002Carla \u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u5e94\u8bbe\u7f6e\u4e3a\u540c\u6b65\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u4e0d\u826f\u7ed3\u679c \uff0c\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u5f02\u6b65\u6a21\u5f0f\uff0c\u5219\u4eff\u771f\u5e94\u81f3\u5c11\u4ee5 20-30 fps \u8fd0\u884c\u3002 \u4e0b\u9762\u7684\u811a\u672c\u6f14\u793a\u4e86\u5982\u4f55\u5c06\u670d\u52a1\u5668\u548c\u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff1a ... # Set the simulation to sync mode init_settings = world.get_settings() settings = world.get_settings() settings.synchronous_mode = True # After that, set the TM to sync mode my_tm.set_synchronous_mode(True) ... # Tick the world in the same client world.apply_settings(init_settings) world.tick() ... # Always disable sync mode before the script ends to prevent the server blocking whilst waiting for a tick settings.synchronous_mode = False my_tm.set_synchronous_mode(False) \u793a\u4f8b\u811a\u672c generate_traffic.py \u542f\u52a8\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u7528\u8f66\u8f86\u548c\u884c\u4eba\u586b\u5145\u5730\u56fe\u3002\u5b83\u81ea\u52a8\u5c06\u4ea4\u901a\u7ba1\u7406\u5668\u548c Carla \u670d\u52a1\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff1a cd PythonAPI/examples python3 generate_traffic.py -n 50 \u5982\u679c\u9700\u8981\u5f02\u6b65\u6a21\u5f0f\uff0c\u8bf7\u5728\u8fd0\u884c\u4e0a\u8ff0\u547d\u4ee4\u65f6\u4f7f\u7528 --async \u6807\u5fd7\u3002 \u5982\u679c\u591a\u4e2a\u4ea4\u901a\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\uff0c\u540c\u6b65\u5c06\u4f1a\u5931\u8d25\u3002\u8bf7\u9075\u5faa\u4ee5\u4e0b\u51c6\u5219\u4ee5\u907f\u514d\u51fa\u73b0\u95ee\u9898\uff1a \u5728 \u591a\u5ba2\u6237\u7aef \u60c5\u51b5\u4e0b\uff0c\u53ea\u6709 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u5e94\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 \u5728 \u591a\u4ea4\u901a\u7ba1\u7406\u5668 \u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u5c06\u4e00\u53f0 \u4ea4\u901a\u7ba1\u7406\u5668\u670d\u52a1\u7aef \u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 ScenarioRunner \u6a21\u5757 \u81ea\u52a8\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\u3002ScenarioRunner \u5185\u7684\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 \u8b66\u544a \u5728\u7ba1\u7406\u65f6\u949f\u7684\u811a\u672c\u5b8c\u6210\u4e4b\u524d\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff08\u5bf9\u4e8e\u4e16\u754c\u548c\u4ea4\u901a\u7ba1\u7406\u5668\uff09\uff0c\u4ee5\u9632\u6b62\u670d\u52a1\u5668\u963b\u585e\uff0c\u6c38\u8fdc\u7b49\u5f85\u65f6\u949f\u3002","title":"\u540c\u6b65\u6a21\u5f0f"},{"location":"adv_traffic_manager/#_29","text":"\u8981\u4e86\u89e3\u4ea4\u901a\u7ba1\u7406\u5668\u5982\u4f55\u5728\u5927\u5730\u56fe\u4e0a\u5de5\u4f5c\uff0c\u8bf7\u52a1\u5fc5\u9996\u5148\u9605\u8bfb \u6b64\u5904 \u7684\u6587\u6863\u6765\u719f\u6089\u5927\u5730\u56fe\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u5728\u5927\u5730\u56fe\u4e2d\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u662f\u5426\u5b58\u5728\u82f1\u96c4\u8f66\u8f86\uff1a \u4e0d\u5b58\u5728\u82f1\u96c4\u8f66\u8f86 \u6240\u6709\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u90fd\u5c06\u88ab\u89c6\u4e3a\u4f11\u7720\u53c2\u4e0e\u8005\u3002\u4f11\u7720\u7684\u81ea\u52a8\u9a7e\u9a76\u53c2\u4e0e\u8005\u5c06\u50cf\u6df7\u5408\u6a21\u5f0f\u4e00\u6837\u5728\u5730\u56fe\u4e0a\u79fb\u52a8\u3002\u7531\u4e8e\u6ca1\u6709\u82f1\u96c4\u8f66\u8f86\u6765\u89e6\u53d1\u5730\u56fe\u74e6\u7247\u6d41\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6e32\u67d3\u8f66\u8f86\u3002 \u5448\u73b0\u82f1\u96c4\u8f66\u8f86 \u5f53\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u8d85\u8fc7 actor_active_distance \u5b9a\u4e49\u7684\u503c\u65f6\uff0c\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001actor_active_distance\u3002\u8981\u8bbe\u7f6e\u6b64\u503c\uff0c\u8bf7\u4f7f\u7528 Python API\uff1a settings = world.get_settings() # Actors will become dormant 2km away from the ego vehicle settings.actor_active_distance = 2000 world.apply_settings(settings) \u5728\u4ea4\u901a\u7ba1\u7406\u5668\u4e2d\uff0c\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5728\u82f1\u96c4\u8f66\u8f86\u5468\u56f4\u4e0d\u65ad\u91cd\u751f\uff0c\u800c\u4e0d\u662f\u5728\u5730\u56fe\u7684\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4f11\u7720\u72b6\u6001\u3002\u53ef\u4ee5\u4f7f\u7528 set_respawn_dormant_vehicles Python API \u4e2d\u7684\u65b9\u6cd5\u914d\u7f6e\u6b64\u9009\u9879\u3002\u8f66\u8f86\u5c06\u5728\u82f1\u96c4\u8f66\u8f86\u7684\u7528\u6237\u5b9a\u4e49\u8ddd\u79bb\u5185\u91cd\u751f\u3002\u53ef\u91cd\u751f\u8ddd\u79bb\u7684\u4e0a\u4e0b\u8fb9\u754c\u53ef\u4ee5\u4f7f\u7528 set_boundaries_respawn_dormant_vehicles \u65b9\u6cd5\u8bbe\u7f6e\u3002\u6ce8\u610f\uff0c\u4e0a\u8ddd\u79bb\u4e0d\u4f1a\u5927\u4e8e\u5927\u5730\u56fe\u7684\u74e6\u7247\u6d41\u8ddd\u79bb\uff0c\u8ddd\u79bb\u6700\u5c0f\u4e3a 20m\u3002 \u8981\u4f7f\u82f1\u96c4\u8f66\u8f86 25 \u7c73\u548c 700 \u7c73\u8303\u56f4\u5185\u7684\u4f11\u7720\u8f66\u8f86\u91cd\u751f\uff1a my_tm.set_respawn_dormant_vehicles(True) my_tm.set_boundaries_respawn_dormant_vehicles(25,700) \u5982\u679c\u78b0\u649e\u963b\u6b62\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u91cd\u751f\uff0c\u4ea4\u901a\u7ba1\u7406\u5668\u5c06\u91cd\u8bd5\u4e0b\u4e00\u4e2a\u4eff\u771f\u6b65\u9aa4\u3002 \u5982\u679c\u4f11\u7720\u8f66\u8f86\u6ca1\u6709\u91cd\u751f\uff0c\u5b83\u4eec\u7684\u884c\u4e3a\u5c06\u53d6\u51b3\u4e8e\u662f\u5426\u542f\u7528\u6df7\u5408\u6a21\u5f0f\u3002\u5982\u679c\u542f\u7528\u4e86\u6df7\u5408\u6a21\u5f0f\uff0c\u5219\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u5c06\u5728\u5730\u56fe\u4e0a\u4f20\u9001\u3002\u5982\u679c\u672a\u542f\u7528\u6df7\u5408\u6a21\u5f0f\uff0c\u5219\u4e0d\u4f1a\u8ba1\u7b97\u4f11\u7720\u53c2\u4e0e\u8005\u7684\u7269\u7406\u7279\u6027\uff0c\u5e76\u4e14\u5b83\u4eec\u5c06\u4fdd\u6301\u5728\u539f\u4f4d\u7f6e\uff0c\u76f4\u5230\u4e0d\u518d\u4f11\u7720\u3002 If you have any questions about the TM, then you can ask in the forum . CARLA forum","title":"\u5927\u5730\u56fe\u4e2d\u7684\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"bp_library/","text":"\u84dd\u56fe\u5e93 \u84dd\u56fe\u5e93 ( carla.BlueprintLibrary ) \u662f Carla \u4e2d\u7528\u4e8e\u53ef\u7528\u7684\u6240\u6709\u5185\u5bb9 carla.ActorBlueprint \u53ca\u5176\u5c5e\u6027 ( carla.ActorAttribute ) \u7684\u6458\u8981\u3002 \u4ee5\u4e0b\u662f\u6253\u5370\u6240\u6709\u53c2\u4e0e\u8005\u84dd\u56fe\u53ca\u5176\u5c5e\u6027\u7684\u793a\u4f8b\u4ee3\u7801\uff1a blueprints = [bp for bp in world.get_blueprint_library().filter('*')] for blueprint in blueprints: print(blueprint.id) for attr in blueprint: print(' - {}'.format(attr)) \u67e5\u770b \u84dd\u56fe\u7684\u4ecb\u7ecd \u3002 \u63a7\u5236\u5668 controller.ai.walker \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 \u4f20\u611f\u5668 sensor.camera.depth \u4f20\u611f\u5668 fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.camera.dvs \u5c5e\u6027\uff1a black_clip ( Float ) - \u53ef\u4fee\u6539 blade_count ( Int ) - \u53ef\u4fee\u6539 bloom_intensity ( Float ) - \u53ef\u4fee\u6539 blur_amount ( Float ) - \u53ef\u4fee\u6539 blur_radius ( Float ) - \u53ef\u4fee\u6539 calibration_constant ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_intensity ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_offset ( Float ) - \u53ef\u4fee\u6539 enable_postprocess_effects ( Bool ) - \u53ef\u4fee\u6539 exposure_compensation ( Float ) - \u53ef\u4fee\u6539 exposure_max_bright ( Float ) - \u53ef\u4fee\u6539 exposure_min_bright ( Float ) - \u53ef\u4fee\u6539 exposure_mode ( String ) - \u53ef\u4fee\u6539 exposure_speed_down ( Float ) - \u53ef\u4fee\u6539 exposure_speed_up ( Float ) - \u53ef\u4fee\u6539 focal_distance ( Float ) - \u53ef\u4fee\u6539 fov ( Float ) - \u53ef\u4fee\u6539 fstop ( Float ) - \u53ef\u4fee\u6539 gamma ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 iso ( Float ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_flare_intensity ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 log_eps ( Float ) - \u53ef\u4fee\u6539 min_fstop ( Float ) - \u53ef\u4fee\u6539 motion_blur_intensity ( Float ) - \u53ef\u4fee\u6539 motion_blur_max_distortion ( Float ) - \u53ef\u4fee\u6539 motion_blur_min_object_screen_size ( Float ) - \u53ef\u4fee\u6539 negative_threshold ( Float ) - \u53ef\u4fee\u6539 positive_threshold ( Float ) - \u53ef\u4fee\u6539 refractory_period_ns ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 shoulder ( Float ) - \u53ef\u4fee\u6539 shutter_speed ( Float ) - \u53ef\u4fee\u6539 sigma_negative_threshold ( Float ) - \u53ef\u4fee\u6539 sigma_positive_threshold ( Float ) - \u53ef\u4fee\u6539 slope ( Float ) - \u53ef\u4fee\u6539 temp ( Float ) - \u53ef\u4fee\u6539 tint ( Float ) - \u53ef\u4fee\u6539 toe ( Float ) - \u53ef\u4fee\u6539 use_log ( Bool ) - \u53ef\u4fee\u6539 white_clip ( Float ) - \u53ef\u4fee\u6539 sensor.camera.optical_flow \u5c5e\u6027\uff1a fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.camera.rgb \u5c5e\u6027\uff1a black_clip ( Float ) - \u53ef\u4fee\u6539 blade_count ( Int ) - \u53ef\u4fee\u6539 bloom_intensity ( Float ) - \u53ef\u4fee\u6539 blur_amount ( Float ) - \u53ef\u4fee\u6539 blur_radius ( Float ) - \u53ef\u4fee\u6539 calibration_constant ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_intensity ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_offset ( Float ) - \u53ef\u4fee\u6539 enable_postprocess_effects ( Bool ) - \u53ef\u4fee\u6539 exposure_compensation ( Float ) - \u53ef\u4fee\u6539 exposure_max_bright ( Float ) - \u53ef\u4fee\u6539 exposure_min_bright ( Float ) - \u53ef\u4fee\u6539 exposure_mode ( String ) - \u53ef\u4fee\u6539 exposure_speed_down ( Float ) - \u53ef\u4fee\u6539 exposure_speed_up ( Float ) - \u53ef\u4fee\u6539 focal_distance ( Float ) - \u53ef\u4fee\u6539 fov ( Float ) - \u53ef\u4fee\u6539 fstop ( Float ) - \u53ef\u4fee\u6539 gamma ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 iso ( Float ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_flare_intensity ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 min_fstop ( Float ) - \u53ef\u4fee\u6539 motion_blur_intensity ( Float ) - \u53ef\u4fee\u6539 motion_blur_max_distortion ( Float ) - \u53ef\u4fee\u6539 motion_blur_min_object_screen_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 shoulder ( Float ) - \u53ef\u4fee\u6539 shutter_speed ( Float ) - \u53ef\u4fee\u6539 slope ( Float ) - \u53ef\u4fee\u6539 temp ( Float ) - \u53ef\u4fee\u6539 tint ( Float ) - \u53ef\u4fee\u6539 toe ( Float ) - \u53ef\u4fee\u6539 white_clip ( Float ) - \u53ef\u4fee\u6539 sensor.camera.semantic_segmentation \u5c5e\u6027\uff1a fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.lidar.ray_cast \u5c5e\u6027\uff1a atmosphere_attenuation_rate ( Float ) - \u53ef\u4fee\u6539 channels ( Int ) - \u53ef\u4fee\u6539 dropoff_general_rate ( Float ) - \u53ef\u4fee\u6539 dropoff_intensity_limit ( Float ) - \u53ef\u4fee\u6539 dropoff_zero_intensity ( Float ) - \u53ef\u4fee\u6539 horizontal_fov ( Float ) - \u53ef\u4fee\u6539 lower_fov ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 noise_stddev ( Float ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 rotation_frequency ( Float ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 upper_fov ( Float ) - \u53ef\u4fee\u6539 sensor.lidar.ray_cast_semantic \u5c5e\u6027\uff1a channels ( Int ) - \u53ef\u4fee\u6539 horizontal_fov ( Float ) - \u53ef\u4fee\u6539 lower_fov ( Float ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 rotation_frequency ( Float ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 upper_fov ( Float ) - \u53ef\u4fee\u6539 sensor.other.collision \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 sensor.other.gnss \u5c5e\u6027\uff1a noise_alt_bias ( Float ) - \u53ef\u4fee\u6539 noise_alt_stddev ( Float ) - \u53ef\u4fee\u6539 noise_lat_bias ( Float ) - \u53ef\u4fee\u6539 noise_lat_stddev ( Float ) - \u53ef\u4fee\u6539 noise_lon_bias ( Float ) - \u53ef\u4fee\u6539 noise_lon_stddev ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.imu \u5c5e\u6027\uff1a noise_accel_stddev_x ( Float ) - \u53ef\u4fee\u6539 noise_accel_stddev_y ( Float ) - \u53ef\u4fee\u6539 noise_accel_stddev_z ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_x ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_y ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_z ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_x ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_y ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_z ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.lane_invasion \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 sensor.other.obstacle \u5c5e\u6027\uff1a debug_linetrace ( Bool ) - \u53ef\u4fee\u6539 distance ( Float ) - \u53ef\u4fee\u6539 hit_radius ( Float ) - \u53ef\u4fee\u6539 only_dynamics ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.radar \u5c5e\u6027\uff1a horizontal_fov ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 vertical_fov ( Float ) - \u53ef\u4fee\u6539 sensor.other.rss \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 static static.prop.advertisement \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.atm \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.barbeque \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.barrel \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bike helmet \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bin \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.briefcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.busstop \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.calibrator \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.chainbarrier \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.chainbarrierend \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.clothcontainer \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.clothesline \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.colacan \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.constructioncone \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.container \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.doghouse \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.fountain \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage06 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.gardenlamp \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.glasscontainer \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.gnome \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.guitarcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.ironplank \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.kiosk_01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.mailbox \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.maptable \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.mesh \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 static.prop.mobile \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.motorhelmet \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.omri-0 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.omri-1 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.pergola \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot06 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot07 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot08 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plasticbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plasticchair \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plastictable \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.platformgarbage01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.purse \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingcart \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingtrolley \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.slide \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetbarrier \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetfountain \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.swing \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.swingcouch \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.table \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficcone01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficcone02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficwarning \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trampoline \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.travelcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.vendingmachine \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.wateringcan \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.trigger.friction \u5c5e\u6027\uff1a extent_x ( Float ) - \u53ef\u4fee\u6539 extent_y ( Float ) - \u53ef\u4fee\u6539 extent_z ( Float ) - \u53ef\u4fee\u6539 friction ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 vehicle vehicle.audi.a2 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.audi.etron \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.audi.tt \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.bh.crossbike \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.bmw.grandtourer \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.carlamotors.carlacola \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.carlamotors.firetruck \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.chevrolet.impala \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.citroen.c3 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.diamondback.century \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_police \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_police_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.ambulance \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.crown \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.mustang \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.gazelle.omafiets \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.harley-davidson.low_rider \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.jeep.wrangler_rubicon \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.kawasaki.ninja \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.lincoln.mkz_2017 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.lincoln.mkz_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.coupe \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.coupe_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.sprinter \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.micro.microlino \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mini.cooper_s \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mini.cooper_s_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.micra \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.patrol \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.patrol_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.seat.leon \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.tesla.cybertruck \u5c5e\u6027\uff1a generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.tesla.model3 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.toyota.prius \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.vespa.zx125 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.volkswagen.t2 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.volkswagen.t2_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.yamaha.yzf \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 walker walker.pedestrian.0001 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0002 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0003 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0004 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0005 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0006 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0007 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0008 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0009 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0010 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0011 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0012 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0013 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0014 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0015 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0016 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0017 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0018 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0019 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0020 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0021 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0022 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0023 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0024 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0025 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0026 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0027 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0028 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0029 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0030 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0031 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0032 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0033 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0034 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0035 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0036 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0037 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0038 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0039 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0040 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0041 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0042 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0043 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0044 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0045 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0046 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0047 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0048 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539","title":"\u84dd\u56fe\u5e93"},{"location":"bp_library/#_1","text":"\u84dd\u56fe\u5e93 ( carla.BlueprintLibrary ) \u662f Carla \u4e2d\u7528\u4e8e\u53ef\u7528\u7684\u6240\u6709\u5185\u5bb9 carla.ActorBlueprint \u53ca\u5176\u5c5e\u6027 ( carla.ActorAttribute ) \u7684\u6458\u8981\u3002 \u4ee5\u4e0b\u662f\u6253\u5370\u6240\u6709\u53c2\u4e0e\u8005\u84dd\u56fe\u53ca\u5176\u5c5e\u6027\u7684\u793a\u4f8b\u4ee3\u7801\uff1a blueprints = [bp for bp in world.get_blueprint_library().filter('*')] for blueprint in blueprints: print(blueprint.id) for attr in blueprint: print(' - {}'.format(attr)) \u67e5\u770b \u84dd\u56fe\u7684\u4ecb\u7ecd \u3002","title":"\u84dd\u56fe\u5e93"},{"location":"bp_library/#_2","text":"controller.ai.walker \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539","title":"\u63a7\u5236\u5668"},{"location":"bp_library/#_3","text":"sensor.camera.depth \u4f20\u611f\u5668 fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.camera.dvs \u5c5e\u6027\uff1a black_clip ( Float ) - \u53ef\u4fee\u6539 blade_count ( Int ) - \u53ef\u4fee\u6539 bloom_intensity ( Float ) - \u53ef\u4fee\u6539 blur_amount ( Float ) - \u53ef\u4fee\u6539 blur_radius ( Float ) - \u53ef\u4fee\u6539 calibration_constant ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_intensity ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_offset ( Float ) - \u53ef\u4fee\u6539 enable_postprocess_effects ( Bool ) - \u53ef\u4fee\u6539 exposure_compensation ( Float ) - \u53ef\u4fee\u6539 exposure_max_bright ( Float ) - \u53ef\u4fee\u6539 exposure_min_bright ( Float ) - \u53ef\u4fee\u6539 exposure_mode ( String ) - \u53ef\u4fee\u6539 exposure_speed_down ( Float ) - \u53ef\u4fee\u6539 exposure_speed_up ( Float ) - \u53ef\u4fee\u6539 focal_distance ( Float ) - \u53ef\u4fee\u6539 fov ( Float ) - \u53ef\u4fee\u6539 fstop ( Float ) - \u53ef\u4fee\u6539 gamma ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 iso ( Float ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_flare_intensity ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 log_eps ( Float ) - \u53ef\u4fee\u6539 min_fstop ( Float ) - \u53ef\u4fee\u6539 motion_blur_intensity ( Float ) - \u53ef\u4fee\u6539 motion_blur_max_distortion ( Float ) - \u53ef\u4fee\u6539 motion_blur_min_object_screen_size ( Float ) - \u53ef\u4fee\u6539 negative_threshold ( Float ) - \u53ef\u4fee\u6539 positive_threshold ( Float ) - \u53ef\u4fee\u6539 refractory_period_ns ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 shoulder ( Float ) - \u53ef\u4fee\u6539 shutter_speed ( Float ) - \u53ef\u4fee\u6539 sigma_negative_threshold ( Float ) - \u53ef\u4fee\u6539 sigma_positive_threshold ( Float ) - \u53ef\u4fee\u6539 slope ( Float ) - \u53ef\u4fee\u6539 temp ( Float ) - \u53ef\u4fee\u6539 tint ( Float ) - \u53ef\u4fee\u6539 toe ( Float ) - \u53ef\u4fee\u6539 use_log ( Bool ) - \u53ef\u4fee\u6539 white_clip ( Float ) - \u53ef\u4fee\u6539 sensor.camera.optical_flow \u5c5e\u6027\uff1a fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.camera.rgb \u5c5e\u6027\uff1a black_clip ( Float ) - \u53ef\u4fee\u6539 blade_count ( Int ) - \u53ef\u4fee\u6539 bloom_intensity ( Float ) - \u53ef\u4fee\u6539 blur_amount ( Float ) - \u53ef\u4fee\u6539 blur_radius ( Float ) - \u53ef\u4fee\u6539 calibration_constant ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_intensity ( Float ) - \u53ef\u4fee\u6539 chromatic_aberration_offset ( Float ) - \u53ef\u4fee\u6539 enable_postprocess_effects ( Bool ) - \u53ef\u4fee\u6539 exposure_compensation ( Float ) - \u53ef\u4fee\u6539 exposure_max_bright ( Float ) - \u53ef\u4fee\u6539 exposure_min_bright ( Float ) - \u53ef\u4fee\u6539 exposure_mode ( String ) - \u53ef\u4fee\u6539 exposure_speed_down ( Float ) - \u53ef\u4fee\u6539 exposure_speed_up ( Float ) - \u53ef\u4fee\u6539 focal_distance ( Float ) - \u53ef\u4fee\u6539 fov ( Float ) - \u53ef\u4fee\u6539 fstop ( Float ) - \u53ef\u4fee\u6539 gamma ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 iso ( Float ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_flare_intensity ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 min_fstop ( Float ) - \u53ef\u4fee\u6539 motion_blur_intensity ( Float ) - \u53ef\u4fee\u6539 motion_blur_max_distortion ( Float ) - \u53ef\u4fee\u6539 motion_blur_min_object_screen_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 shoulder ( Float ) - \u53ef\u4fee\u6539 shutter_speed ( Float ) - \u53ef\u4fee\u6539 slope ( Float ) - \u53ef\u4fee\u6539 temp ( Float ) - \u53ef\u4fee\u6539 tint ( Float ) - \u53ef\u4fee\u6539 toe ( Float ) - \u53ef\u4fee\u6539 white_clip ( Float ) - \u53ef\u4fee\u6539 sensor.camera.semantic_segmentation \u5c5e\u6027\uff1a fov ( Float ) - \u53ef\u4fee\u6539 image_size_x ( Int ) - \u53ef\u4fee\u6539 image_size_y ( Int ) - \u53ef\u4fee\u6539 lens_circle_falloff ( Float ) - \u53ef\u4fee\u6539 lens_circle_multiplier ( Float ) - \u53ef\u4fee\u6539 lens_k ( Float ) - \u53ef\u4fee\u6539 lens_kcube ( Float ) - \u53ef\u4fee\u6539 lens_x_size ( Float ) - \u53ef\u4fee\u6539 lens_y_size ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.lidar.ray_cast \u5c5e\u6027\uff1a atmosphere_attenuation_rate ( Float ) - \u53ef\u4fee\u6539 channels ( Int ) - \u53ef\u4fee\u6539 dropoff_general_rate ( Float ) - \u53ef\u4fee\u6539 dropoff_intensity_limit ( Float ) - \u53ef\u4fee\u6539 dropoff_zero_intensity ( Float ) - \u53ef\u4fee\u6539 horizontal_fov ( Float ) - \u53ef\u4fee\u6539 lower_fov ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 noise_stddev ( Float ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 rotation_frequency ( Float ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 upper_fov ( Float ) - \u53ef\u4fee\u6539 sensor.lidar.ray_cast_semantic \u5c5e\u6027\uff1a channels ( Int ) - \u53ef\u4fee\u6539 horizontal_fov ( Float ) - \u53ef\u4fee\u6539 lower_fov ( Float ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 rotation_frequency ( Float ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 upper_fov ( Float ) - \u53ef\u4fee\u6539 sensor.other.collision \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 sensor.other.gnss \u5c5e\u6027\uff1a noise_alt_bias ( Float ) - \u53ef\u4fee\u6539 noise_alt_stddev ( Float ) - \u53ef\u4fee\u6539 noise_lat_bias ( Float ) - \u53ef\u4fee\u6539 noise_lat_stddev ( Float ) - \u53ef\u4fee\u6539 noise_lon_bias ( Float ) - \u53ef\u4fee\u6539 noise_lon_stddev ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.imu \u5c5e\u6027\uff1a noise_accel_stddev_x ( Float ) - \u53ef\u4fee\u6539 noise_accel_stddev_y ( Float ) - \u53ef\u4fee\u6539 noise_accel_stddev_z ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_x ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_y ( Float ) - \u53ef\u4fee\u6539 noise_gyro_bias_z ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_x ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_y ( Float ) - \u53ef\u4fee\u6539 noise_gyro_stddev_z ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.lane_invasion \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 sensor.other.obstacle \u5c5e\u6027\uff1a debug_linetrace ( Bool ) - \u53ef\u4fee\u6539 distance ( Float ) - \u53ef\u4fee\u6539 hit_radius ( Float ) - \u53ef\u4fee\u6539 only_dynamics ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 sensor.other.radar \u5c5e\u6027\uff1a horizontal_fov ( Float ) - \u53ef\u4fee\u6539 noise_seed ( Int ) - \u53ef\u4fee\u6539 points_per_second ( Int ) - \u53ef\u4fee\u6539 range ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 sensor_tick ( Float ) - \u53ef\u4fee\u6539 vertical_fov ( Float ) - \u53ef\u4fee\u6539 sensor.other.rss \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539","title":"\u4f20\u611f\u5668"},{"location":"bp_library/#static","text":"static.prop.advertisement \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.atm \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.barbeque \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.barrel \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bench03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bike helmet \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.bin \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.box03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.briefcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.brokentile04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.busstop \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.calibrator \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.chainbarrier \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.chainbarrierend \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.clothcontainer \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.clothesline \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.colacan \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.constructioncone \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.container \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.creasedbox03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.dirtdebris03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.doghouse \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.fountain \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.garbage06 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.gardenlamp \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.glasscontainer \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.gnome \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.guitarcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.ironplank \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.kiosk_01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.mailbox \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.maptable \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.mesh \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 static.prop.mobile \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.motorhelmet \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.omri-0 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.omri-1 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.pergola \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot06 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot07 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plantpot08 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plasticbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plasticchair \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.plastictable \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.platformgarbage01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.purse \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingcart \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.shoppingtrolley \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.slide \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetbarrier \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetfountain \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.streetsign04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.swing \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.swingcouch \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.table \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficcone01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficcone02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trafficwarning \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trampoline \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashbag \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan01 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan02 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan03 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan04 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.trashcan05 \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.travelcase \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.vendingmachine \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.prop.wateringcan \u5c5e\u6027\uff1a role_name ( String ) - \u53ef\u4fee\u6539 size ( String ) static.trigger.friction \u5c5e\u6027\uff1a extent_x ( Float ) - \u53ef\u4fee\u6539 extent_y ( Float ) - \u53ef\u4fee\u6539 extent_z ( Float ) - \u53ef\u4fee\u6539 friction ( Float ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539","title":"static"},{"location":"bp_library/#vehicle","text":"vehicle.audi.a2 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.audi.etron \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.audi.tt \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.bh.crossbike \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.bmw.grandtourer \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.carlamotors.carlacola \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.carlamotors.firetruck \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.chevrolet.impala \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.citroen.c3 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.diamondback.century \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_police \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.dodge.charger_police_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.ambulance \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.crown \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.ford.mustang \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.gazelle.omafiets \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.harley-davidson.low_rider \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.jeep.wrangler_rubicon \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.kawasaki.ninja \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.lincoln.mkz_2017 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.lincoln.mkz_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.coupe \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.coupe_2020 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mercedes.sprinter \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.micro.microlino \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mini.cooper_s \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.mini.cooper_s_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.micra \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.patrol \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.nissan.patrol_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.seat.leon \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.tesla.cybertruck \u5c5e\u6027\uff1a generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.tesla.model3 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.toyota.prius \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.vespa.zx125 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.volkswagen.t2 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.volkswagen.t2_2021 \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539 vehicle.yamaha.yzf \u5c5e\u6027\uff1a color ( RGBColor ) - \u53ef\u4fee\u6539 driver_id ( Int ) - \u53ef\u4fee\u6539 generation ( Int ) number_of_wheels ( Int ) object_type ( String ) role_name ( String ) - \u53ef\u4fee\u6539 sticky_control ( Bool ) - \u53ef\u4fee\u6539","title":"vehicle"},{"location":"bp_library/#walker","text":"walker.pedestrian.0001 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0002 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0003 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0004 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0005 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0006 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0007 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0008 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0009 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0010 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0011 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0012 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0013 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0014 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0015 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0016 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0017 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0018 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0019 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0020 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0021 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0022 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0023 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0024 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0025 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0026 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0027 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0028 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0029 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0030 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0031 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0032 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0033 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0034 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0035 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0036 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0037 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0038 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0039 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0040 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0041 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0042 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0043 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0044 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0045 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0046 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0047 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539 walker.pedestrian.0048 \u5c5e\u6027\uff1a age ( String ) gender ( String ) generation ( Int ) is_invincible ( Bool ) - \u53ef\u4fee\u6539 role_name ( String ) - \u53ef\u4fee\u6539 speed ( Float ) - \u53ef\u4fee\u6539","title":"walker"},{"location":"build_carla/","text":"\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla \u7528\u6237\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla \u4ee5\u7528\u4e8e\u5f00\u53d1\u76ee\u7684\u3002\u5982\u679c\u60a8\u60f3\u8981\u5411 Carla \u6dfb\u52a0\u989d\u5916\u7684\u7279\u6027\u6216\u529f\u80fd\uff0c\u6216\u8005\u60f3\u8981\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u521b\u5efa\u8d44\u6e90\u6216\u64cd\u4f5c\u5730\u56fe\uff0c\u5219\u5efa\u8bae\u60a8\u8fd9\u6837\u505a\u3002 \u6784\u5efa\u8bf4\u660e\u9002\u7528\u4e8e Linux \u548c Windows\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728 Docker \u5bb9\u5668\u4e2d\u6784\u5efa Carla\uff0c\u4ee5\u4fbf\u90e8\u7f72\u5728 AWS\u3001Azure \u6216 Google \u4e91\u670d\u52a1\u4e2d\u3002\u8bbf\u95ee Carla GitHub \u5e76\u514b\u9686\u5b58\u50a8\u5e93\u3002 Linux \u6784\u5efa Windows \u6784\u5efa Docker \u5e26\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u66f4\u65b0 Carla \u6784\u5efa\u7cfb\u7edf \u5e38\u89c1\u95ee\u9898","title":"\u6784\u5efa Carla"},{"location":"build_carla/#carla","text":"\u7528\u6237\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla \u4ee5\u7528\u4e8e\u5f00\u53d1\u76ee\u7684\u3002\u5982\u679c\u60a8\u60f3\u8981\u5411 Carla \u6dfb\u52a0\u989d\u5916\u7684\u7279\u6027\u6216\u529f\u80fd\uff0c\u6216\u8005\u60f3\u8981\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u521b\u5efa\u8d44\u6e90\u6216\u64cd\u4f5c\u5730\u56fe\uff0c\u5219\u5efa\u8bae\u60a8\u8fd9\u6837\u505a\u3002 \u6784\u5efa\u8bf4\u660e\u9002\u7528\u4e8e Linux \u548c Windows\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728 Docker \u5bb9\u5668\u4e2d\u6784\u5efa Carla\uff0c\u4ee5\u4fbf\u90e8\u7f72\u5728 AWS\u3001Azure \u6216 Google \u4e91\u670d\u52a1\u4e2d\u3002\u8bbf\u95ee Carla GitHub \u5e76\u514b\u9686\u5b58\u50a8\u5e93\u3002 Linux \u6784\u5efa Windows \u6784\u5efa Docker \u5e26\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u66f4\u65b0 Carla \u6784\u5efa\u7cfb\u7edf \u5e38\u89c1\u95ee\u9898","title":"\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla"},{"location":"build_docker/","text":"Docker \u4e2d\u7684 Carla \u7528\u6237\u53ef\u4ee5\u62c9\u53d6\u57fa\u4e8e Carla \u7248\u672c\u7684\u6620\u50cf\u4ee5\u5728 Docker \u5bb9\u5668\u4e2d\u8fd0\u884c\u3002\u8fd9\u5bf9\u4e8e\u4ee5\u4e0b\u7528\u6237\u5f88\u6709\u7528\uff1a \u60f3\u8981\u8fd0\u884c Carla \u800c\u4e0d\u9700\u8981\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\u9879 \u8fd0\u884c\u591a\u4e2a Carla \u670d\u52a1\u5668\u5e76\u6267\u884c GPU \u6620\u5c04 \u5728\u6ca1\u6709\u663e\u793a\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c Carla \u670d\u52a1\u5668 \u672c\u6559\u7a0b\u4ecb\u7ecd\u4e86\u8fd0\u884c Carla \u56fe\u50cf\u7684\u8981\u6c42\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 OpenGL \u548c Vulkan \u56fe\u5f62 API \u8fd0\u884c\u56fe\u50cf\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c Carla \u79bb\u5c4f\u6a21\u5f0f \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u60a8\u9700\u8981\u5b89\u88c5\uff1a Docker: \u6309\u7167 \u6b64\u5904 \u7684\u5b89\u88c5\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002Follow the installation instructions here . NVIDIA Container Toolkit: NVIDIA \u5bb9\u5668\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5e93\u548c\u5de5\u5177\u96c6\uff0c\u53ef\u5c06 NVIDIA \u56fe\u5f62\u8bbe\u5907\u516c\u5f00\u7ed9 Linux \u5bb9\u5668\u3002\u5b83\u4e13\u4e3a\u5728 Linux \u4e3b\u673a\u7cfb\u7edf\u6216\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf\u7248\u672c 2 \u4e0b\u7684 Linux \u53d1\u884c\u7248\u4e2d\u8fd0\u884c\u7684 Linux \u5bb9\u5668\u800c\u8bbe\u8ba1\u3002 nvidia-docker2 \u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u5b89\u88c5\u8be5\u8f6f\u4ef6\u5305\u3002 \u7b14\u8bb0 Docker \u9700\u8981 sudo \u624d\u80fd\u8fd0\u884c\u3002\u6309\u7167 \u672c\u6307\u5357 \u5c06\u7528\u6237\u6dfb\u52a0\u5230 docker sudo \u7ec4\u3002 \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c Carla 1. \u62c9\u53d6 Carla \u955c\u50cf\u3002 \u60a8\u53ef\u4ee5\u63d0\u53d6\u6700\u65b0\u7684 CARLA \u6620\u50cf\u6216\u7279\u5b9a\u7684\u53d1\u884c\u7248\u672c\u3002\u6700\u65b0\u955c\u50cf\u662f\u6307 \u6700\u65b0\u7684\u6253\u5305\u7248\u672c \u3002\u8981\u62c9\u53d6\u6620\u50cf\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\uff1a # \u62c9\u53d6\u6700\u65b0\u7684\u955c\u50cf docker pull carlasim/carla:latest # \u62c9\u53d6\u7279\u5b9a\u7684\u7248\u672c docker pull carlasim/carla:0.9.12 2. \u8fd0\u884c Carla \u5bb9\u5668\u3002 \u4e0d\u540c\u7248\u672c\u7684 CARLA \u652f\u6301\u4e0d\u540c\u7684\u56fe\u5f62 API\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd Docker \u955c\u50cf\u7684\u8fd0\u884c\u6761\u4ef6\uff1a 0.9.12 \u4ec5\u652f\u6301 Vulkan 0.9.7+ \u540c\u65f6\u652f\u6301 Vulkan \u548c OpenGL\u3002 Carla 0.9.12 \u8981\u4f7f\u7528\u663e\u793a\u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -e DISPLAY=$DISPLAY carlasim/carla:0.9.12 /bin/bash ./CarlaUE4.sh \u8981\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -v /tmp/.X11-unix:/tmp/.X11-unix:rw carlasim/carla:0.9.12 /bin/bash ./CarlaUE4.sh -RenderOffScreen Carla 0.9.7 \u81f3 0.9.11 \u8981\u4f7f\u7528 Vulkan \u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -e DISPLAY=$DISPLAY -e SDL_VIDEODRIVER=x11 -v /tmp/.X11-unix:/tmp/.X11-unix:rw carlasim/carla:0.9.11 /bin/bash ./CarlaUE4.sh -vulkan <-additonal-carla-flags> \u7b14\u8bb0 \u53ea\u8981\u60a8\u7684\u8ba1\u7b97\u673a\u6709\u663e\u793a\u5668\uff0c\u6b64\u547d\u4ee4\u5c06\u5141\u8bb8\u60a8\u4f7f\u7528 Vulkan \u8fd0\u884c CARLA \u6620\u50cf\u3002\u6709\u5173\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u8fd0\u884c Vulkan \u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6e32\u67d3\u6587\u6863 \u3002 \u8981\u4f7f\u7528 OpenGL \u8fd0\u884c Carla\uff1a docker run -e DISPLAY=$DISPLAY --net=host --gpus all --runtime=nvidia carlasim/carla:<version> /bin/bash CarlaUE4.sh -opengl <-additonal-carla-flags> 3. \uff08\u53ef\u9009\uff09\u914d\u7f6e Docker \u6807\u5fd7\u3002 \u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528\u4e86\u4e00\u4e9b Docker \u6807\u5fd7\uff0c\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u9700\u8981\u8fdb\u884c\u914d\u7f6e\uff1a Networking: --net=host \u53c2\u6570\u5c06\u5141\u8bb8\u5bb9\u5668\u5171\u4eab\u4e3b\u673a\u7684\u6574\u4e2a\u7f51\u7edc\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u4e3b\u673a\u4e0a\u7684\u7279\u5b9a\u7aef\u53e3 \u6620\u5c04\u5230\u5bb9\u5668\u7aef\u53e3 \uff0c\u8bf7\u4f7f\u7528\u6807\u5fd7 -p <host-ports>:<container-ports> \u3002 GPUs: \u60a8\u53ef\u4ee5\u4f7f\u7528 --gpus all \u9009\u62e9\u6709\u6240 GPU\uff0c\u6216\u8005\u4f7f\u7528 --gpus '\"device=<gpu_01>,<gpu_02>\"' \u4f7f\u7528\u7279\u5b9a GPU\u3002 \u6d4f\u89c8 \u6b64\u5904 \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u79bb\u5c4f\u6a21\u5f0f \u5982\u679c\u60a8\u5728\u6ca1\u6709\u663e\u793a\u5668\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c Carla\uff0c\u5219 OpenGL \u4e0d\u9700\u8981\u914d\u7f6e\uff0c\u4f46\u662f\u60a8\u9700\u8981\u6267\u884c\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\u624d\u80fd\u4f7f\u7528 Carla 0.9.12 \u4e4b\u524d\u7684 Vulkan \u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u6709\u5173\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6e32\u67d3\u6587\u6863 \u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u6216\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 Carla \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"Docker \u4e2d\u7684 Carla"},{"location":"build_docker/#docker-carla","text":"\u7528\u6237\u53ef\u4ee5\u62c9\u53d6\u57fa\u4e8e Carla \u7248\u672c\u7684\u6620\u50cf\u4ee5\u5728 Docker \u5bb9\u5668\u4e2d\u8fd0\u884c\u3002\u8fd9\u5bf9\u4e8e\u4ee5\u4e0b\u7528\u6237\u5f88\u6709\u7528\uff1a \u60f3\u8981\u8fd0\u884c Carla \u800c\u4e0d\u9700\u8981\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\u9879 \u8fd0\u884c\u591a\u4e2a Carla \u670d\u52a1\u5668\u5e76\u6267\u884c GPU \u6620\u5c04 \u5728\u6ca1\u6709\u663e\u793a\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c Carla \u670d\u52a1\u5668 \u672c\u6559\u7a0b\u4ecb\u7ecd\u4e86\u8fd0\u884c Carla \u56fe\u50cf\u7684\u8981\u6c42\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 OpenGL \u548c Vulkan \u56fe\u5f62 API \u8fd0\u884c\u56fe\u50cf\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c Carla \u79bb\u5c4f\u6a21\u5f0f","title":"Docker \u4e2d\u7684 Carla"},{"location":"build_docker/#_1","text":"\u60a8\u9700\u8981\u5b89\u88c5\uff1a Docker: \u6309\u7167 \u6b64\u5904 \u7684\u5b89\u88c5\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002Follow the installation instructions here . NVIDIA Container Toolkit: NVIDIA \u5bb9\u5668\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5e93\u548c\u5de5\u5177\u96c6\uff0c\u53ef\u5c06 NVIDIA \u56fe\u5f62\u8bbe\u5907\u516c\u5f00\u7ed9 Linux \u5bb9\u5668\u3002\u5b83\u4e13\u4e3a\u5728 Linux \u4e3b\u673a\u7cfb\u7edf\u6216\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf\u7248\u672c 2 \u4e0b\u7684 Linux \u53d1\u884c\u7248\u4e2d\u8fd0\u884c\u7684 Linux \u5bb9\u5668\u800c\u8bbe\u8ba1\u3002 nvidia-docker2 \u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u5b89\u88c5\u8be5\u8f6f\u4ef6\u5305\u3002 \u7b14\u8bb0 Docker \u9700\u8981 sudo \u624d\u80fd\u8fd0\u884c\u3002\u6309\u7167 \u672c\u6307\u5357 \u5c06\u7528\u6237\u6dfb\u52a0\u5230 docker sudo \u7ec4\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"build_docker/#carla","text":"1. \u62c9\u53d6 Carla \u955c\u50cf\u3002 \u60a8\u53ef\u4ee5\u63d0\u53d6\u6700\u65b0\u7684 CARLA \u6620\u50cf\u6216\u7279\u5b9a\u7684\u53d1\u884c\u7248\u672c\u3002\u6700\u65b0\u955c\u50cf\u662f\u6307 \u6700\u65b0\u7684\u6253\u5305\u7248\u672c \u3002\u8981\u62c9\u53d6\u6620\u50cf\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\uff1a # \u62c9\u53d6\u6700\u65b0\u7684\u955c\u50cf docker pull carlasim/carla:latest # \u62c9\u53d6\u7279\u5b9a\u7684\u7248\u672c docker pull carlasim/carla:0.9.12 2. \u8fd0\u884c Carla \u5bb9\u5668\u3002 \u4e0d\u540c\u7248\u672c\u7684 CARLA \u652f\u6301\u4e0d\u540c\u7684\u56fe\u5f62 API\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd Docker \u955c\u50cf\u7684\u8fd0\u884c\u6761\u4ef6\uff1a 0.9.12 \u4ec5\u652f\u6301 Vulkan 0.9.7+ \u540c\u65f6\u652f\u6301 Vulkan \u548c OpenGL\u3002 Carla 0.9.12 \u8981\u4f7f\u7528\u663e\u793a\u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -e DISPLAY=$DISPLAY carlasim/carla:0.9.12 /bin/bash ./CarlaUE4.sh \u8981\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -v /tmp/.X11-unix:/tmp/.X11-unix:rw carlasim/carla:0.9.12 /bin/bash ./CarlaUE4.sh -RenderOffScreen Carla 0.9.7 \u81f3 0.9.11 \u8981\u4f7f\u7528 Vulkan \u8fd0\u884c Carla\uff1a sudo docker run --privileged --gpus all --net=host -e DISPLAY=$DISPLAY -e SDL_VIDEODRIVER=x11 -v /tmp/.X11-unix:/tmp/.X11-unix:rw carlasim/carla:0.9.11 /bin/bash ./CarlaUE4.sh -vulkan <-additonal-carla-flags> \u7b14\u8bb0 \u53ea\u8981\u60a8\u7684\u8ba1\u7b97\u673a\u6709\u663e\u793a\u5668\uff0c\u6b64\u547d\u4ee4\u5c06\u5141\u8bb8\u60a8\u4f7f\u7528 Vulkan \u8fd0\u884c CARLA \u6620\u50cf\u3002\u6709\u5173\u5728\u79bb\u5c4f\u6a21\u5f0f\u4e0b\u8fd0\u884c Vulkan \u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6e32\u67d3\u6587\u6863 \u3002 \u8981\u4f7f\u7528 OpenGL \u8fd0\u884c Carla\uff1a docker run -e DISPLAY=$DISPLAY --net=host --gpus all --runtime=nvidia carlasim/carla:<version> /bin/bash CarlaUE4.sh -opengl <-additonal-carla-flags> 3. \uff08\u53ef\u9009\uff09\u914d\u7f6e Docker \u6807\u5fd7\u3002 \u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528\u4e86\u4e00\u4e9b Docker \u6807\u5fd7\uff0c\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u9700\u8981\u8fdb\u884c\u914d\u7f6e\uff1a Networking: --net=host \u53c2\u6570\u5c06\u5141\u8bb8\u5bb9\u5668\u5171\u4eab\u4e3b\u673a\u7684\u6574\u4e2a\u7f51\u7edc\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u4e3b\u673a\u4e0a\u7684\u7279\u5b9a\u7aef\u53e3 \u6620\u5c04\u5230\u5bb9\u5668\u7aef\u53e3 \uff0c\u8bf7\u4f7f\u7528\u6807\u5fd7 -p <host-ports>:<container-ports> \u3002 GPUs: \u60a8\u53ef\u4ee5\u4f7f\u7528 --gpus all \u9009\u62e9\u6709\u6240 GPU\uff0c\u6216\u8005\u4f7f\u7528 --gpus '\"device=<gpu_01>,<gpu_02>\"' \u4f7f\u7528\u7279\u5b9a GPU\u3002 \u6d4f\u89c8 \u6b64\u5904 \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c Carla"},{"location":"build_docker/#_2","text":"\u5982\u679c\u60a8\u5728\u6ca1\u6709\u663e\u793a\u5668\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c Carla\uff0c\u5219 OpenGL \u4e0d\u9700\u8981\u914d\u7f6e\uff0c\u4f46\u662f\u60a8\u9700\u8981\u6267\u884c\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\u624d\u80fd\u4f7f\u7528 Carla 0.9.12 \u4e4b\u524d\u7684 Vulkan \u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u6709\u5173\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6e32\u67d3\u6587\u6863 \u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u6216\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 Carla \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"\u79bb\u5c4f\u6a21\u5f0f"},{"location":"build_docker_unreal/","text":"Build Unreal Engine and CARLA in Docker This guide explains how Unreal Engine and CARLA can be built from scratch using Docker. The resulting image can then used to create CARLA packages or to prepare assets for use in a CARLA package. This process should not be confused with the pre-built CARLA Docker image used to run CARLA on multiple servers or without a display. The documentation for that can be found here . Before you begin System Requirements Software requirements Building the images Next Steps: Packages Before you begin System Requirements You will need to meet the following system requirements: 64-bit version of Docker is Ubuntu 16.04+ Minimum 8GB of RAM Minimum 600GB available disk space for the initial container build process Software requirements Docker: Install Docker by following the installation instructions here . Python : You will need to have Python 3.6 or higher installed and properly set in your system Path. For installation instructions and Python documentation, check here . Unreal Engine GitHub Access : Starting with version 0.9.12, CARLA uses a modified fork of Unreal Engine 4.26. This fork contains patches specific to CARLA. This will be downloaded during the Docker build process. For this download, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. You will need to log in to your account during the build process. CARLA: The Dockerfiles and tools needed to build Unreal Engine for CARLA and CARLA itself are located in the Util/Docker directory of the CARLA source repository. If you don't already have it, download the repository using the following command: git clone https://github.com/carla-simulator/carla Building the images The following steps will each take a long time. 1. Build the CARLA prerequisites image. The following command will build an image called carla-prerequisites using Prerequisites.Dockerfile . In this build we install the compiler and required tools, download the Unreal Engine 4.26 fork and compile it. You will need to provide your login details as build arguments for the download of Unreal Engine to be successful: docker build --build-arg EPIC_USER=<GitHubUserName> --build-arg EPIC_PASS=<GitHubPassword> -t carla-prerequisites -f Prerequisites.Dockerfile . 2. Build the final CARLA image. The following command will use the image created in the previous step to build the final CARLA image based on the current master branch (latest release) of the CARLA repository: docker build -t carla -f Carla.Dockerfile . If you would like to build a specific branch or tag of the CARLA repository, run the following command: docker build -t carla -f Carla.Dockerfile . --build-arg GIT_BRANCH=<branch_or_tag_name> Next Steps: Packages The CARLA image created in this guide is used to create standalone CARLA packages or to package assets such as maps or meshes so they can be used in a CARLA package. This is achieved through the use of the docker_tools.py script found in Util/Docker . This script uses docker-py to work with the Docker image. The docker_tools.py script can be used to: Create a CARLA package : Find the tutorial here Cook assets to be consumed in a CARLA package: Find the tutorial here Prepare a map so it's ready for use in a CARLA package: Find the tutorial here Any issues or doubts related with this topic can be posted in the CARLA forum. CARLA forum","title":"\u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c Carla"},{"location":"build_docker_unreal/#build-unreal-engine-and-carla-in-docker","text":"This guide explains how Unreal Engine and CARLA can be built from scratch using Docker. The resulting image can then used to create CARLA packages or to prepare assets for use in a CARLA package. This process should not be confused with the pre-built CARLA Docker image used to run CARLA on multiple servers or without a display. The documentation for that can be found here . Before you begin System Requirements Software requirements Building the images Next Steps: Packages","title":"Build Unreal Engine and CARLA in Docker"},{"location":"build_docker_unreal/#before-you-begin","text":"","title":"Before you begin"},{"location":"build_docker_unreal/#system-requirements","text":"You will need to meet the following system requirements: 64-bit version of Docker is Ubuntu 16.04+ Minimum 8GB of RAM Minimum 600GB available disk space for the initial container build process","title":"System Requirements"},{"location":"build_docker_unreal/#software-requirements","text":"Docker: Install Docker by following the installation instructions here . Python : You will need to have Python 3.6 or higher installed and properly set in your system Path. For installation instructions and Python documentation, check here . Unreal Engine GitHub Access : Starting with version 0.9.12, CARLA uses a modified fork of Unreal Engine 4.26. This fork contains patches specific to CARLA. This will be downloaded during the Docker build process. For this download, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. You will need to log in to your account during the build process. CARLA: The Dockerfiles and tools needed to build Unreal Engine for CARLA and CARLA itself are located in the Util/Docker directory of the CARLA source repository. If you don't already have it, download the repository using the following command: git clone https://github.com/carla-simulator/carla","title":"Software requirements"},{"location":"build_docker_unreal/#building-the-images","text":"The following steps will each take a long time. 1. Build the CARLA prerequisites image. The following command will build an image called carla-prerequisites using Prerequisites.Dockerfile . In this build we install the compiler and required tools, download the Unreal Engine 4.26 fork and compile it. You will need to provide your login details as build arguments for the download of Unreal Engine to be successful: docker build --build-arg EPIC_USER=<GitHubUserName> --build-arg EPIC_PASS=<GitHubPassword> -t carla-prerequisites -f Prerequisites.Dockerfile . 2. Build the final CARLA image. The following command will use the image created in the previous step to build the final CARLA image based on the current master branch (latest release) of the CARLA repository: docker build -t carla -f Carla.Dockerfile . If you would like to build a specific branch or tag of the CARLA repository, run the following command: docker build -t carla -f Carla.Dockerfile . --build-arg GIT_BRANCH=<branch_or_tag_name>","title":"Building the images"},{"location":"build_docker_unreal/#next-steps-packages","text":"The CARLA image created in this guide is used to create standalone CARLA packages or to package assets such as maps or meshes so they can be used in a CARLA package. This is achieved through the use of the docker_tools.py script found in Util/Docker . This script uses docker-py to work with the Docker image. The docker_tools.py script can be used to: Create a CARLA package : Find the tutorial here Cook assets to be consumed in a CARLA package: Find the tutorial here Prepare a map so it's ready for use in a CARLA package: Find the tutorial here Any issues or doubts related with this topic can be posted in the CARLA forum. CARLA forum","title":"Next Steps: Packages"},{"location":"build_faq/","text":"\u5e38\u95ee\u7684\u95ee\u9898 \u6b64\u5904\u5217\u51fa\u4e86\u6709\u5173 Carla \u5b89\u88c5\u548c\u6784\u5efa\u7684\u4e00\u4e9b\u6700\u5e38\u89c1\u95ee\u9898\u3002\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728\u8be5\u9879\u76ee\u7684 GitHub issues \u627e\u5230\u3002\u5982\u679c\u60a8\u6ca1\u6709\u53d1\u73b0\u6b64\u5904\u5217\u51fa\u7684\u7591\u95ee\uff0c\u8bf7\u67e5\u770b\u8bba\u575b\u5e76\u968f\u65f6\u63d0\u95ee\u3002 Carla \u8bba\u575b \u7cfb\u7edf\u8981\u6c42 \u6784\u5efa Carla \u6240\u9700\u7684\u78c1\u76d8\u7a7a\u95f4\u3002 \u8fd0\u884c Carla \u7684\u63a8\u8350\u786c\u4ef6\u3002 Linux \u6784\u5efa \u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.sh\u201d\u811a\u672c\u3002 \u201cmake launch\u201d \u5728 Linux \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 \u514b\u9686\u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u663e\u793a\u9519\u8bef\u3002 AttributeError: module 'carla' has no attribute 'Client' when running a script. \u65e0\u6cd5\u8fd0\u884c\u793a\u4f8b\u811a\u672c\u6216 \"RuntimeError: rpc::rpc_error during call in function version\". Windows \u6784\u5efa \u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.exe\u201d\u3002 CarlaUE4 \u65e0\u6cd5\u7f16\u8bd1\u3002\u5c1d\u8bd5\u4ece\u6e90\u624b\u52a8\u91cd\u5efa\u5b83\u3002 \u5373\u4f7f CMake \u5df2\u6b63\u786e\u5b89\u88c5\uff0c\u4e5f\u4f1a\u663e\u793a CMake \u9519\u8bef\u3002 Error C2440, C2672\uff1a\u7f16\u8bd1\u5668\u7248\u672c\u3002 \u201cmake launch\u201d\u5728 Windows \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 Make \u7f3a\u5c11 libintl3.dll \u6216/\u548c libiconv2.dll\u3002 \u6a21\u5757\u7f3a\u5931\u6216\u4f7f\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u7248\u672c\u6784\u5efa\u3002 \u5728 PythonAPI/carla \u4e2d\u5c3d\u7ba1\u6210\u529f\u8f93\u51fa\u6d88\u606f\uff0c\u4f46\u6ca1\u6709 dist \u6587\u4ef6\u5939 \u8fd0\u884c Carla \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u65f6 FPS \u901f\u7387\u8f83\u4f4e\u3002 \u65e0\u6cd5\u8fd0\u884c\u811a\u672c\u3002 \u5f53\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u65f6\u94fe\u63a5\u5230\u4eff\u771f\u5668\u3002 \u65e0\u6cd5\u8fd0\u884c CARLA\uff0c\u65e0\u8bba\u662f\u4e8c\u8fdb\u5236\u8fd8\u662f\u6e90\u4ee3\u7801\u6784\u5efa\u3002 ImportError: DLL load failed: The specified module could not be found. ImportError: DLL load failed while importing libcarla: %1 is not a valid Win32 app. ImportError: No module named 'carla' \u5176\u4ed6 Fatal error: 'version.h' has been modified since the precompiled header. \u521b\u5efa Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002 \u6211\u53ef\u4ee5\u5728 Linux \u8ba1\u7b97\u673a\u4e0a\u6253\u5305\u9002\u7528\u4e8e Windows \u7684 CARLA\uff0c\u53cd\u4e4b\u4ea6\u7136\u5417\uff1f \u5982\u4f55\u5378\u8f7d Carla \u5ba2\u6237\u7aef\u5e93\uff1f \u7cfb\u7edf\u8981\u6c42 \u6784\u5efa Carla \u6240\u9700\u7684\u78c1\u76d8\u7a7a\u95f4\u3002 \u5efa\u8bae\u81f3\u5c11\u6709 170GB \u53ef\u7528\u7a7a\u95f4\u3002\u6784\u5efa Carla \u9700\u8981\u5927\u7ea6 35GB \u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u52a0\u4e0a\u865a\u5e7b\u5f15\u64ce\u5927\u7ea6\u9700\u8981 95-135GB\u3002 \u8fd0\u884c Carla \u7684\u63a8\u8350\u786c\u4ef6\u3002 Carla \u662f\u4e00\u6b3e\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u8f6f\u4ef6\u3002\u5b83\u81f3\u5c11\u9700\u8981 6GB GPU\uff0c\u6216\u8005\u66f4\u597d\u7684\u662f\u80fd\u591f\u8fd0\u884c\u865a\u5e7b\u5f15\u64ce\u7684\u4e13\u7528 GPU\u3002 \u770b\u770b \u865a\u5e7b\u5f15\u64ce\u63a8\u8350\u7684\u786c\u4ef6 \u3002 Linux \u6784\u5efa \u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.sh\u201d\u811a\u672c\u3002 Carla \u7684\u6e90\u7248\u672c\u4e2d\u6ca1\u6709 CarlaUE4.sh \u811a\u672c\u3002\u6309\u7167 \u6784\u5efa\u8bf4\u660e \u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla\u3002 \u8981\u4f7f\u7528 CarlaUE4.sh \u8fd0\u884c Carla\uff0c\u8bf7\u6309\u7167 \u5feb\u901f\u542f\u52a8\u5b89\u88c5 \u8fdb\u884c\u64cd\u4f5c\u3002 \u201cmake launch\u201d\u5728 Linux \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 \u5728\u6784\u5efa\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u62d6\u51fa\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u5e76\u4f1a\u50cf\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u3002\u4ee5\u4e0b\u662f\u6700\u53ef\u80fd\u7684\u539f\u56e0\u5217\u8868\uff1a \u8fd0\u884c\u865a\u5e7b\u5f15\u64ce 4.26\u3002 \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u65f6\u53ef\u80fd\u51fa\u73b0\u67d0\u4e9b\u95ee\u9898\u3002\u5c1d\u8bd5\u5355\u72ec\u8fd0\u884c\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u662f 4.26 \u7248\u672c\u3002 \u4e0b\u8f7d\u8d44\u4ea7\u3002 \u5982\u679c\u6ca1\u6709\u89c6\u89c9\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\u6b64\u6b65\u9aa4\u662f\u5f3a\u5236\u6027\u7684\u3002 UE4_ROOT \u672a\u5b9a\u4e49\u3002 \u5883\u53d8\u91cf\u672a\u8bbe\u7f6e\u3002\u8bf7\u8bb0\u4f4f\u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230 ~/.bashrc \u6216 ~/.profile \u6765\u4f7f\u5176\u5728\u4f1a\u8bdd\u8303\u56f4\u5185\u6301\u4e45\u5b58\u5728\u3002\u5426\u5219\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2a\u65b0 shell \u8fdb\u884c\u8bbe\u7f6e\u3002\u8fd0\u884c export UE4_ROOT=<path_to_unreal_4-26> \u8bbe\u7f6e\u8fd9\u6b21\u7684\u53d8\u91cf\u3002 \u68c0\u67e5\u4f9d\u8d56\u3002 \u786e\u4fdd\u4e00\u5207\u90fd\u5b89\u88c5\u6b63\u786e\u3002\u4e5f\u8bb8\u5176\u4e2d\u4e00\u4e2a\u547d\u4ee4\u88ab\u8df3\u8fc7\u3001\u4e0d\u6210\u529f\u6216\u8005\u4f9d\u8d56\u9879\u4e0d\u9002\u5408\u7cfb\u7edf\u3002 \u5220\u9664 Carla \u5e76\u518d\u6b21\u514b\u9686\u5b83\u3002 \u4ee5\u9632\u4e07\u4e00\u51fa\u4e86\u95ee\u9898\u3002\u5220\u9664 Carla \u5e76\u91cd\u65b0\u514b\u9686\u6216\u4e0b\u8f7d\u3002 \u6ee1\u8db3\u7cfb\u7edf\u8981\u6c42\u3002 Ubuntu \u7248\u672c\u5e94\u4e3a 16.04 \u6216\u66f4\u9ad8\u7248\u672c\u3002Carla \u9700\u8981\u5927\u7ea6 170GB \u7684\u78c1\u76d8\u7a7a\u95f4\u548c\u4e00\u4e2a\u4e13\u7528 GPU\uff08\u6216\u81f3\u5c11\u4e00\u4e2a 6GB\uff09\u624d\u80fd\u8fd0\u884c\u3002 \u7cfb\u7edf\u663e\u793a\u4e0e Carla \u51b2\u7a81\u7684\u5176\u4ed6\u7279\u5b9a\u539f\u56e0\u53ef\u80fd\u4f1a\u53d1\u751f\u3002\u8bf7\u5c06\u8fd9\u4e9b\u5185\u5bb9\u53d1\u5e03\u5230 \u8bba\u575b \u4e0a\uff0c\u4ee5\u4fbf\u56e2\u961f\u53ef\u4ee5\u66f4\u591a\u5730\u4e86\u89e3\u5b83\u4eec\u3002 \u514b\u9686\u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u663e\u793a\u9519\u8bef\u3002 1. \u865a\u5e7b\u5f15\u64ce\u5e10\u53f7\u662f\u5426\u5df2\u6fc0\u6d3b\uff1f \u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u662f\u79c1\u6709\u7684\u3002\u4e3a\u4e86\u514b\u9686\u5b83\uff0c\u8bf7\u521b\u5efa\u865a \u5e7b\u5f15\u64ce\u5e10 \u6237\uff0c\u6fc0\u6d3b\u5b83\uff08\u68c0\u67e5\u9a8c\u8bc1\u90ae\u4ef6\uff09\uff0c\u7136\u540e \u94fe\u63a5\u60a8\u7684 GitHub \u5e10\u6237\u3002 2. git\u662f\u5426\u5b89\u88c5\u6b63\u786e\uff1f \u6709\u65f6\u9519\u8bef\u8868\u660e\u4e0e https \u534f\u8bae\u4e0d\u517c\u5bb9\u3002\u901a\u8fc7\u5378\u8f7d\u5e76\u91cd\u65b0\u5b89\u88c5 git \u5373\u53ef\u8f7b\u677e\u89e3\u51b3\u3002\u6253\u5f00\u7ec8\u7aef\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo apt-get remove git # \u5378\u8f7d git sudo apt install git-all # \u5b89\u88c5 git AttributeError: module 'carla' has no attribute 'Client' when running a script. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 pip3 install -Iv setuptools==47.3.1 \u5e76\u518d\u6b21\u6784\u5efa PythonAPI\u3002 make PythonAPI \u5c1d\u8bd5\u6784\u5efa\u6587\u6863\u6765\u6d4b\u8bd5\u4e00\u5207\u662f\u5426\u6b63\u5e38\u8fd0\u884c\u3002\u5e94\u8be5\u4f1a\u663e\u793a\u6210\u529f\u7684\u6d88\u606f\u3002 make PythonAPI.docs \u65e0\u6cd5\u8fd0\u884c\u793a\u4f8b\u811a\u672c\u6216 \"RuntimeError: rpc::rpc_error during call in function version\". \u5982\u679c\u8fd0\u884c\u811a\u672c\u8fd4\u56de\u4e0e\u6b64\u7c7b\u4f3c\u7684\u8f93\u51fa\uff0c\u5219\u8bf4\u660e PythonAPI \u4e2d\u7684 .egg \u6587\u4ef6\u5b58\u5728\u95ee\u9898\u3002 \u91cd\u8981 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12+\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u3002\u5982\u679c\u60a8\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\uff08 .whl \u6216 PyPi \u4e0b\u8f7d\uff09\u7684\u8f83\u65b0\u65b9\u6cd5\u4e4b\u4e00\uff0c\u672c\u8282\u4e2d\u7684\u4fe1\u606f\u5c06\u4e0e\u60a8\u65e0\u5173\u3002 \u9996\u5148\uff0c\u6253\u5f00 <root_carla>/PythonAPI/carla/dist \u3002 \u5e94\u8be5\u6709\u4e00\u4e2a\u548c\u4f60\u6b63\u5728\u4f7f\u7528\u76f8\u5bf9\u5e94\u7684 Carla \u548c Python \u54cd\u5e94\u7684 .egg \u6587\u4ef6\uff08\u7c7b\u4f3c\u4e8e carla-0.X.X-pyX.X-linux-x86_64.egg \uff09\u3002\u786e\u4fdd\u8be5\u6587\u4ef6\u4e0e\u60a8\u6b63\u5728\u4f7f\u7528\u7684 Python \u7248\u672c\u5339\u914d\u3002\u8981\u68c0\u67e5\u60a8\u7684 Python \u7248\u672c\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002 python3 --version # \u6216\u8005\u5bf9\u4e8e Python 2 python --version \u5982\u679c\u6587\u4ef6\u4e22\u5931\u6216\u8005\u60a8\u8ba4\u4e3a\u5b83\u53ef\u80fd\u5df2\u635f\u574f\uff0c\u8bf7\u5c1d\u8bd5\u518d\u6b21\u91cd\u5efa\u3002 make clean make PythonAPI make launch \u73b0\u5728\u518d\u6b21\u5c1d\u8bd5\u793a\u4f8b\u811a\u672c\u4e4b\u4e00\u3002 cd PythonAPI/examples python3 dynamic_weather.py \u5982\u679c\u9519\u8bef\u4ecd\u7136\u5b58\u5728\uff0c\u5219\u95ee\u9898\u53ef\u80fd\u4e0e\u60a8\u7684 PythonPATH \u6709\u5173\u3002\u8fd9\u4e9b\u811a\u672c\u4f1a\u81ea\u52a8\u67e5\u627e .egg \u4e0e\u6784\u5efa\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\uff0c\u60a8\u7684 PythonPATH \u4e2d\u53ef\u80fd\u5b58\u5728\u53e6\u4e00\u4e2a .egg \u6587\u4ef6\u5e72\u6270\u8be5\u8fc7\u7a0b\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u663e\u793a PythonPATH \u7684\u5185\u5bb9\u3002 echo $PYTHONPATH \u5728\u7c7b\u4f3c\u4e8e PythonAPI/carla/dist \u7684\u8def\u5f84\u4e0b\u67e5\u627e\u53e6\u4e00\u4e2a .egg \u6587\u4ef6\uff0c\u5e76\u5220\u9664\u5b83\u4eec\u3002\u5b83\u4eec\u53ef\u80fd\u5c5e\u4e8e Carla \u5b89\u88c5\u7684\u5176\u4ed6\u5b9e\u4f8b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u8fd8\u901a\u8fc7 apt-get \u5b89\u88c5\u4e86 Carla \uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5220\u9664\uff0c\u5e76\u4e14 PythonPATH \u4e5f\u4f1a\u88ab\u6e05\u7406\u3002 sudo apt-get purge carla-simulator \u6700\u7ec8\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 ~/.bashrc \uff0c\u5c06PythonPATH\u4e0b\u4f60\u6784\u5efa\u7684 .egg \u6587\u4ef6\u6dfb\u52a0\u8fdb\u6765\u3002\u8fd9\u4e0d\u662f\u63a8\u8350\u7684\u65b9\u5f0f\u3002\u6700\u597d\u6709\u4e00\u4e2a\u660e\u786e\u7684 PythonPATH\uff0c\u53ea\u9700\u5728\u811a\u672c\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684 .egg \u6587\u4ef6\u8def\u5f84\u5373\u53ef\u3002 \u9996\u5148\uff0c\u6253\u5f00 ~/.bashrc . gedit ~/.bashrc \u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230 ~/.bashrc \u3002\u5b83\u4eec\u5b58\u50a8\u6784\u5efa\u7684 .egg \u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u4fbfPython\u53ef\u4ee5\u81ea\u52a8\u627e\u5230\u5b83\u3002\u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u91cd\u7f6e\u7ec8\u7aef\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\u3002 export PYTHONPATH=$PYTHONPATH:\"${CARLA_ROOT}/PythonAPI/carla/dist/$(ls ${CARLA_ROOT}/PythonAPI/carla/dist | grep py3.)\" export PYTHONPATH=$PYTHONPATH:${CARLA_ROOT}/PythonAPI/carla \u6e05\u7406 PythonPATH \u6216\u6dfb\u52a0\u6784\u5efa\u7684 .egg \u6587\u4ef6\u8def\u5f84\u540e\uff0c\u6240\u6709\u793a\u4f8b\u811a\u672c\u90fd\u5e94\u8be5\u6b63\u5e38\u5de5\u4f5c\u3002 Windows \u6784\u5efa \u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.exe\u201d\u3002 Carla \u7684\u6e90\u7248\u672c\u4e2d\u6ca1\u6709 CarlaUE4.exe \u53ef\u6267\u884c\u6587\u4ef6\u3002\u6309\u7167\u6784\u5efa\u8bf4\u660e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla\u3002\u8981\u76f4\u63a5\u83b7\u53d6 CarlaUE4.exe \uff0c\u8bf7\u6309\u7167 \u5feb\u901f\u5165\u95e8 \u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002 CarlaUE4 could not be compiled. Try rebuilding it from source manually. \u5c1d\u8bd5\u6784\u5efa Carla \u65f6\u51fa\u73b0\u95ee\u9898\u3002\u4f7f\u7528 Visual Studio \u91cd\u65b0\u6784\u5efa\u4ee5\u53d1\u73b0\u53d1\u751f\u4e86\u4ec0\u4e48\u3002 1. \u8f6c\u5230 carla/Unreal/CarlaUE4 \u5e76\u53f3\u952e\u5355\u51fb CarlaUE4.uproject \u3002 2. \u5355\u51fb Generate Visual Studio project files \u3002 3. \u4f7f\u7528 Visual Studio 2019 \u6253\u5f00\u751f\u6210\u7684\u6587\u4ef6\u3002 4. \u4f7f\u7528 Visual Studio \u7f16\u8bd1\u9879\u76ee\u3002\u5feb\u6377\u952e\u662fF7\u3002\u6784\u5efa\u5c06\u5931\u8d25\uff0c\u4f46\u53d1\u73b0\u7684\u95ee\u9898\u5c06\u663e\u793a\u5728\u4e0b\u9762\u3002 \u4e0d\u540c\u7684\u95ee\u9898\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u6b64\u7279\u5b9a\u9519\u8bef\u6d88\u606f\u3002\u7528\u6237 @tamakoji \u89e3\u51b3\u4e86\u4e00\u4e2a\u7ecf\u5e38\u51fa\u73b0\u7684\u60c5\u51b5\uff0c\u5373\u6e90\u4ee3\u7801\u672a\u6b63\u786e\u514b\u9686\u4e14\u65e0\u6cd5\u8bbe\u7f6e Carla \u7248\u672c\uff08\u4ece git \u5c06\u5176\u4e0b\u8f7d\u4e3a .zip \u65f6\uff09\u3002 \u68c0\u67e5 Build/CMakeLists.txt.in . \u5982\u679c\u663e\u793a\uff1a set(CARLA_VERSION ) \uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a 1. \u8f6c\u5230 Setup.bat \u7b2c 198 \u884c\u3002 2. Update the line from: for /f %%i in ('git describe --tags --dirty --always') do set carla_version=%%i \u4e3a\uff1a for /f %%i in ('git describe --tags --dirty --always') do set carla_version=\"0.9.9\" \u5373\u4f7f CMake \u5df2\u6b63\u786e\u5b89\u88c5\uff0c\u4e5f\u4f1a\u663e\u793a CMake \u9519\u8bef\u3002 \u5f53\u5c1d\u8bd5\u4f7f\u7528 make \u547d\u4ee4\u6784\u5efa\u670d\u52a1\u5668\u6216\u5ba2\u6237\u7aef\u65f6\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002\u5373\u4f7f CMake \u5df2\u5b89\u88c5\u3001\u66f4\u65b0\u5e76\u6dfb\u52a0\u5230\u73af\u5883\u8def\u5f84\u4e2d\u3002Visual Studio \u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u51b2\u7a81\u3002 \u53ea\u7559\u4e0bVS2019\uff0c\u5176\u4f59\u7684\u5f7b\u5e95\u5220\u9664\u3002 Error C2440, C2672: compiler version. \u7531\u4e8e\u4e0e\u5176\u4ed6 Visual Studio \u6216 Microsoft \u7f16\u8bd1\u5668\u7248\u672c\u51b2\u7a81\uff0c\u8be5\u6784\u5efa\u672a\u4f7f\u7528 2019 \u7f16\u8bd1\u5668\u3002\u5378\u8f7d\u8fd9\u4e9b\u5e76\u518d\u6b21\u91cd\u5efa\u3002 Visual Studio \u4e0d\u64c5\u957f\u6446\u8131\u81ea\u8eab\u3002\u8981\u4ece\u8ba1\u7b97\u673a\u4e2d\u5f7b\u5e95\u6e05\u9664 Visual Studio\uff0c\u8bf7\u8f6c\u5230 Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout \u5e76\u8fd0\u884c .\\InstallCleanup.exe -full \u3002\u8fd9\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002 \u8981\u4fdd\u7559\u5176\u4ed6 Visual Studio \u7248\u672c\uff0c\u8bf7\u901a\u8fc7\u6dfb\u52a0\u4ee5\u4e0b\u884c\u8fdb\u884c\u7f16\u8f91 %appdata%\\Unreal Engine\\UnrealBuildTool\\BuildConfiguration.xml \uff1a <VCProjectFileGenerator> <Version>VisualStudio2019</Version> </VCProjectFileGenerator> <WindowsPlatform> <Compiler>VisualStudio2019</Compiler> </WindowsPlatform> \u201cmake launch\u201d\u5728 Windows \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 \u5728\u6784\u5efa\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u62d6\u51fa\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u5e76\u50cf\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u3002\u4ee5\u4e0b\u662f\u6700\u53ef\u80fd\u7684\u539f\u56e0\u5217\u8868\uff1a \u91cd\u65b0\u542f\u52a8\u8ba1\u7b97\u673a\u3002 Windows \u6784\u5efa\u671f\u95f4\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\u3002\u91cd\u65b0\u542f\u52a8\u5e76\u786e\u4fdd\u6240\u6709\u5185\u5bb9\u5747\u5df2\u6b63\u786e\u66f4\u65b0\u3002 \u8fd0\u884c\u865a\u5e7b\u5f15\u64ce 4.26\u3002 \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u65f6\u53ef\u80fd\u51fa\u73b0\u67d0\u4e9b\u95ee\u9898\u3002\u8fd0\u884c\u7f16\u8f91\u5668\u5e76\u68c0\u67e5\u662f\u5426\u4f7f\u7528\u4e86 4.26 \u7248\u672c\u3002 \u4e0b\u8f7d\u8d44\u4ea7\u3002 \u5982\u679c\u6ca1\u6709\u89c6\u89c9\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\u6b64\u6b65\u9aa4\u662f\u5f3a\u5236\u6027\u7684\u3002 Visual Studio 2019. \u5982\u679c\u5b89\u88c5\u6216\u6700\u8fd1\u5378\u8f7d\u4e86\u5176\u4ed6\u7248\u672c\u7684 Visual Studio\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002\u8981\u4ece\u8ba1\u7b97\u673a\u4e2d\u5f7b\u5e95\u6e05\u9664 Visual Studio\uff0c\u8bf7\u8f6c\u5230 Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout \u5e76\u8fd0\u884c .\\InstallCleanup.exe -full \u3002 \u5220\u9664 Carla \u5e76\u518d\u6b21\u514b\u9686\u5b83\u3002 \u4ee5\u9632\u4e07\u4e00\u51fa\u4e86\u95ee\u9898\u3002\u5220\u9664 CARLA \u5e76\u91cd\u65b0\u514b\u9686\u6216\u4e0b\u8f7d\u3002 \u6ee1\u8db3\u7cfb\u7edf\u8981\u6c42\u3002 Carla \u9700\u8981\u5927\u7ea6 170GB \u7684\u78c1\u76d8\u7a7a\u95f4\u548c\u4e00\u4e2a\u4e13\u7528 GPU\uff08\u6216\u81f3\u5c11\u4e00\u4e2a 6GB\uff09\u624d\u80fd\u8fd0\u884c\u3002 \u7cfb\u7edf\u663e\u793a\u4e0e Carla \u51b2\u7a81\u7684\u5176\u4ed6\u7279\u5b9a\u539f\u56e0\u53ef\u80fd\u4f1a\u53d1\u751f\u3002\u8bf7\u5c06\u8fd9\u4e9b\u5185\u5bb9\u53d1\u5e03\u5230 \u8bba\u575b \u4e0a\uff0c\u4ee5\u4fbf\u56e2\u961f\u53ef\u4ee5\u66f4\u591a\u5730\u4e86\u89e3\u5b83\u4eec\u3002 Make \u7f3a\u5c11 libintl3.dll \u6216/\u548c libiconv2.dll\u3002 \u4e0b\u8f7d \u4f9d\u8d56\u9879 \u5e76\u5c06 bin \u5185\u5bb9\u89e3\u538b\u5230 make \u5b89\u88c5\u8def\u5f84\u4e2d\u3002 Modules are missing or built with a different engine version. \u5355\u51fb on Accept \u4ee5\u91cd\u5efa\u5b83\u4eec\u3002 \u5c3d\u7ba1\u6210\u529f\u8f93\u51fa\u6d88\u606f\uff0c\u4f46\u5728 PythonAPI/carla \u4e2d\u6ca1\u6709 dist \u6587\u4ef6\u5939\u3002 \u5728 Windows \u4e2d\uff0c make PythonAPI \u547d\u4ee4\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u6761\u6d88\u606f\uff0c\u8868\u660e Python API \u5b89\u88c5\u6210\u529f\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u672a\u6210\u529f\u3002\u5982\u679c\u770b\u5230\u6b64\u8f93\u51fa\u540e\u76ee\u5f55 PythonAPI/carla \u4e2d\u6ca1\u6709 dist \u6587\u4ef6\u5939\uff0c\u8bf7\u67e5\u770b\u4e0a\u9762\u7684\u547d\u4ee4\u8f93\u51fa\u3002\u5f88\u53ef\u80fd\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u9700\u8981\u5728\u66f4\u6b63\u9519\u8bef\u5e76\u8fd0\u884c make clean \u540e\u91cd\u8bd5\u6784\u5efa\u3002 \u8fd0\u884c Carla \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u65f6 FPS \u901f\u7387\u8f83\u4f4e\u3002 \u865a\u5e7b4\u7f16\u8f91\u5668\u5728\u5931\u7126\u65f6\u4f1a\u8fdb\u5165\u4f4e\u6027\u80fd\u6a21\u5f0f\u3002 \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e->\u6027\u80fd\u201d \uff08 Edit/Editor Preferences/Performance \uff09\uff0c\u7136\u540e\u7981\u7528\u201c\u5904\u4e8e\u80cc\u666f\u4e2d\u65f6\u5360\u7528\u8f83\u5c11 CPU\u201d\u9009\u9879\u3002 \u65e0\u6cd5\u8fd0\u884c\u811a\u672c\u3002 \u6709\u4e9b\u811a\u672c\u6709\u8981\u6c42\u3002\u8fd9\u4e9b\u5217\u5728\u540d\u4e3a Requirements.txt \u7684\u6587\u4ef6\u4e2d\uff0c\u4e0e\u811a\u672c\u672c\u8eab\u4f4d\u4e8e\u540c\u4e00\u8def\u5f84\u4e2d\u3002\u8bf7\u52a1\u5fc5\u68c0\u67e5\u8fd9\u4e9b\u4ee5\u4fbf\u8fd0\u884c\u811a\u672c\u3002\u5176\u4e2d\u5927\u591a\u6570\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684 pip \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u3002 \u6709\u65f6\u5728 Windows \u4e0a\uff0c\u811a\u672c\u65e0\u6cd5\u4ec5\u4f7f\u7528 > script_name.py \u8fd0\u884c\u3002\u5c1d\u8bd5\u6dfb\u52a0. Try adding > python3 script_name.py \uff0c\u5e76\u786e\u4fdd\u4f4d\u4e8e\u6b63\u786e\u7684\u76ee\u5f55\u4e2d\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u65f6\u8fde\u63a5\u5230\u6a21\u62df\u5668\u3002 \u5355\u51fb\u201c\u8fd0\u884c\u201d\uff08 Play \uff09\u5e76\u7b49\u5f85\u573a\u666f\u52a0\u8f7d\u3002\u6b64\u65f6\uff0cPython \u5ba2\u6237\u7aef\u53ef\u4ee5\u50cf\u72ec\u7acb\u4eff\u771f\u5668\u4e00\u6837\u8fde\u63a5\u5230\u6a21\u62df\u5668\u3002 \u65e0\u6cd5\u8fd0\u884c Carla\uff0c\u65e0\u8bba\u662f\u4e8c\u8fdb\u5236\u8fd8\u662f\u6e90\u4ee3\u7801\u6784\u5efa\u3002 NVIDIA \u9a71\u52a8\u7a0b\u5e8f\u53ef\u80fd\u5df2\u8fc7\u65f6\u3002\u786e\u4fdd\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5982\u679c\u95ee\u9898\u4ecd\u672a\u89e3\u51b3\uff0c\u8bf7\u67e5\u770b \u8bba\u575b \u5e76\u53d1\u5e03\u5177\u4f53\u95ee\u9898\u3002 ImportError: DLL load failed: The specified module could not be found. \u6240\u9700\u7684\u5e93\u4e4b\u4e00\u5c1a\u672a\u6b63\u786e\u5b89\u88c5\u3002\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6cd5\uff0c\u8bf7\u8f6c\u81f3 carla\\Build\\zlib-source\\build \u5e76\u5728\u811a\u672c\u7684\u8def\u5f84\u4e2d\u590d\u5236\u540d\u4e3a zlib.dll \u7684\u6587\u4ef6\u3002 ImportError: DLL load failed while importing libcarla: %1 is not a valid Win32 app. 32 \u4f4d Python \u7248\u672c\u5728\u5c1d\u8bd5\u8fd0\u884c\u811a\u672c\u65f6\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u5378\u8f7d\u5b83\u5e76\u4ec5\u4fdd\u7559\u6240\u9700\u7684 Python3 x64\u3002 ImportError: No module named 'carla' \u51fa\u73b0\u6b64\u9519\u8bef\u7684\u539f\u56e0\u662f Python \u627e\u4e0d\u5230 Carla \u5e93\u3002Carla \u5e93\u5305\u542b\u5728\u4f4d\u4e8e PythonAPI/carla/dist \u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a .egg \u6587\u4ef6\u4e2d\uff0c\u6240\u6709\u793a\u4f8b\u811a\u672c\u90fd\u5c06\u5728\u6b64\u76ee\u5f55\u4e2d\u67e5\u627e\u5b83\u3002\u8be5 .egg \u6587\u4ef6\u9075\u5faacarla- -py - .egg \u547d\u540d\u6cd5\u3002 \u91cd\u8981 Carla \u4ec5\u5728 0.9.12 \u4e4b\u524d\u7684\u7248\u672c\u4e2d\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\u6587\u4ef6 .egg \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12+\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u3002\u5982\u679c\u60a8\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\uff08 .whl \u6216 PyPi \u4e0b\u8f7d\uff09\u7684\u8f83\u65b0\u65b9\u6cd5\u4e4b\u4e00\uff0c\u672c\u8282\u4e2d\u7684\u4fe1\u606f\u5c06\u4e0e\u60a8\u65e0\u5173\u3002 \u5728 \u5feb\u901f\u5165\u95e8\u6559\u7a0b \u4e2d\u9605\u8bfb\u6709\u5173\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u7684\u65b0\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6253\u5305\u7248\u672c\u7684 Carla\uff0c\u5219\u4f1a\u6709\u591a\u4e2a .egg \u6587\u4ef6\uff0c\u5bf9\u5e94\u4e0d\u540c\u7248\u672c\u7684 Python\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e Carla \u7684\u7248\u672c\u3002\u786e\u4fdd\u60a8\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b Python \u7248\u672c\u4e4b\u4e00\u8fd0\u884c\u811a\u672c\u3002\u8981\u68c0\u67e5\u9ed8\u8ba4\u7684 Python \u7248\u672c\uff0c\u8bf7\u5728\u547d\u4ee4\u884c\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a python3 --version # \u6216\u8005 python --version \u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Python\uff0c\u5219\u8be5 .egg \u6587\u4ef6\u5c06\u6839\u636e\u7cfb\u7edf\u4e0a\u7684\u9ed8\u8ba4 Python \u7248\u672c\u6784\u5efa\u3002\u5728 Linux \u4e2d\uff0c\u8fd9\u5c06\u662f\u8fd4\u56de\u7684\u9ed8\u8ba4 Python \u7248\u672c\uff1a /usr/bin/env python3 --version # \u6216\u8005\u5982\u679c\u4f60\u6307\u5b9a ARGS=\"--python-version=2\" /usr/bin/env python2 --version \u5728 Windows \u4e2d\uff0c\u5b83\u5c06\u6210\u4e3a\u4ee5\u4e0b\u529f\u80fd\u7684\u9ed8\u8ba4 Python \u7248\u672c\uff1a py -3 --version \u786e\u4fdd\u60a8\u4f7f\u7528\u4e0e\u60a8\u7684 .egg \u6587\u4ef6\u5bf9\u5e94\u7684 Python \u7248\u672c\u8fd0\u884c\u811a\u672c.egg\u3002\u5728 Linux \u4e2d\uff0c\u60a8\u53ef\u80fd\u8fd8\u9700\u8981\u5c06 Python \u8def\u5f84\u8bbe\u7f6e\u4e3a\u6307\u5411 Carla\u3002\u4e3a\u6b64\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a export PYTHONPATH=$PYTHONPATH:<path/to/carla/>/PythonAPI/carla/dist/<your_egg_file> # \u68c0\u67e5\u73b0\u5728 Carla \u662f\u5426\u80fd\u53d1\u73b0 python3 -c 'import carla;print(\"Success\")' \u8bf7\u6ce8\u610f\uff0c\u865a\u62df\u73af\u5883\u6216 Conda \u7b49\u5176\u4ed6 Python \u73af\u5883\u53ef\u80fd\u4f1a\u4f7f Carla \u7684\u5b89\u88c5\u53d8\u5f97\u590d\u6742\u3002\u786e\u4fdd\u60a8\u5df2\u76f8\u5e94\u5730\u8bbe\u7f6e Python \u9ed8\u8ba4\u503c\u548c\u8def\u5f84\u3002 \u5176\u4ed6 Fatal error: 'version.h' has been modified since the precompiled header. \u7531\u4e8e Linux \u66f4\u65b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u65f6\u5e38\u53d1\u751f\u3002Makefile \u4e2d\u6709\u4e00\u4e2a\u9488\u5bf9\u6b64\u95ee\u9898\u7684\u7279\u6b8a\u76ee\u6807\u3002\u867d\u7136\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u89e3\u51b3\u4e86\u95ee\u9898\uff1a make hard-clean make CarlaUE4Editor \u521b\u5efa Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002 \u5728 Linux \u4e2d\uff0c\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c make package \u3002\u8be5\u5305\u5c06\u5305\u62ec\u9879\u76ee\u548c Python API \u6a21\u5757\u3002 \u6216\u8005\uff0c\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7f16\u8bd1 Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002\u6253\u5f00 CarlaUE4 \u9879\u76ee\uff0c\u8f6c\u5230\u83dc\u5355 File/Package Project \uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u5e73\u53f0\u3002\u53ef\u80fd\u8fd8\u8981\u7b49\u4e00\u4e0b\u3002 \u6211\u53ef\u4ee5\u5728 Linux \u8ba1\u7b97\u673a\u4e0a\u6253\u5305\u9002\u7528\u4e8e Windows \u7684 Carla\uff0c\u53cd\u4e4b\u4ea6\u7136\u5417\uff1f \u867d\u7136\u6b64\u529f\u80fd\u9002\u7528\u4e8e\u865a\u5e7b\u5f15\u64ce\uff0c\u4f46\u5728 Carla \u4e2d\u4e0d\u53ef\u7528\u3002\u6211\u4eec\u6709\u8bb8\u591a\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u7684\u4f9d\u8d56\u9879\u3002 \u5982\u4f55\u5378\u8f7d Carla \u5ba2\u6237\u7aef\u5e93\uff1f \u5982\u679c\u60a8\u4f7f\u7528 pip/pip3 \u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5378\u8f7d\uff1a # Python 3 pip3 uninstall carla # Python 2 pip uninstall carla","title":"\u5e38\u95ee\u7684\u95ee\u9898"},{"location":"build_faq/#_1","text":"\u6b64\u5904\u5217\u51fa\u4e86\u6709\u5173 Carla \u5b89\u88c5\u548c\u6784\u5efa\u7684\u4e00\u4e9b\u6700\u5e38\u89c1\u95ee\u9898\u3002\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728\u8be5\u9879\u76ee\u7684 GitHub issues \u627e\u5230\u3002\u5982\u679c\u60a8\u6ca1\u6709\u53d1\u73b0\u6b64\u5904\u5217\u51fa\u7684\u7591\u95ee\uff0c\u8bf7\u67e5\u770b\u8bba\u575b\u5e76\u968f\u65f6\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u5e38\u95ee\u7684\u95ee\u9898"},{"location":"build_faq/#_2","text":"\u6784\u5efa Carla \u6240\u9700\u7684\u78c1\u76d8\u7a7a\u95f4\u3002 \u8fd0\u884c Carla \u7684\u63a8\u8350\u786c\u4ef6\u3002","title":"\u7cfb\u7edf\u8981\u6c42"},{"location":"build_faq/#linux","text":"\u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.sh\u201d\u811a\u672c\u3002 \u201cmake launch\u201d \u5728 Linux \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 \u514b\u9686\u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u663e\u793a\u9519\u8bef\u3002 AttributeError: module 'carla' has no attribute 'Client' when running a script. \u65e0\u6cd5\u8fd0\u884c\u793a\u4f8b\u811a\u672c\u6216 \"RuntimeError: rpc::rpc_error during call in function version\".","title":"Linux \u6784\u5efa"},{"location":"build_faq/#windows","text":"\u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.exe\u201d\u3002 CarlaUE4 \u65e0\u6cd5\u7f16\u8bd1\u3002\u5c1d\u8bd5\u4ece\u6e90\u624b\u52a8\u91cd\u5efa\u5b83\u3002 \u5373\u4f7f CMake \u5df2\u6b63\u786e\u5b89\u88c5\uff0c\u4e5f\u4f1a\u663e\u793a CMake \u9519\u8bef\u3002 Error C2440, C2672\uff1a\u7f16\u8bd1\u5668\u7248\u672c\u3002 \u201cmake launch\u201d\u5728 Windows \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002 Make \u7f3a\u5c11 libintl3.dll \u6216/\u548c libiconv2.dll\u3002 \u6a21\u5757\u7f3a\u5931\u6216\u4f7f\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u7248\u672c\u6784\u5efa\u3002 \u5728 PythonAPI/carla \u4e2d\u5c3d\u7ba1\u6210\u529f\u8f93\u51fa\u6d88\u606f\uff0c\u4f46\u6ca1\u6709 dist \u6587\u4ef6\u5939","title":"Windows \u6784\u5efa"},{"location":"build_faq/#carla","text":"\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u65f6 FPS \u901f\u7387\u8f83\u4f4e\u3002 \u65e0\u6cd5\u8fd0\u884c\u811a\u672c\u3002 \u5f53\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u65f6\u94fe\u63a5\u5230\u4eff\u771f\u5668\u3002 \u65e0\u6cd5\u8fd0\u884c CARLA\uff0c\u65e0\u8bba\u662f\u4e8c\u8fdb\u5236\u8fd8\u662f\u6e90\u4ee3\u7801\u6784\u5efa\u3002 ImportError: DLL load failed: The specified module could not be found. ImportError: DLL load failed while importing libcarla: %1 is not a valid Win32 app. ImportError: No module named 'carla'","title":"\u8fd0\u884c Carla"},{"location":"build_faq/#_3","text":"Fatal error: 'version.h' has been modified since the precompiled header. \u521b\u5efa Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002 \u6211\u53ef\u4ee5\u5728 Linux \u8ba1\u7b97\u673a\u4e0a\u6253\u5305\u9002\u7528\u4e8e Windows \u7684 CARLA\uff0c\u53cd\u4e4b\u4ea6\u7136\u5417\uff1f \u5982\u4f55\u5378\u8f7d Carla \u5ba2\u6237\u7aef\u5e93\uff1f","title":"\u5176\u4ed6"},{"location":"build_faq/#_4","text":"","title":"\u7cfb\u7edf\u8981\u6c42"},{"location":"build_faq/#carla_1","text":"\u5efa\u8bae\u81f3\u5c11\u6709 170GB \u53ef\u7528\u7a7a\u95f4\u3002\u6784\u5efa Carla \u9700\u8981\u5927\u7ea6 35GB \u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u52a0\u4e0a\u865a\u5e7b\u5f15\u64ce\u5927\u7ea6\u9700\u8981 95-135GB\u3002","title":"\u6784\u5efa Carla \u6240\u9700\u7684\u78c1\u76d8\u7a7a\u95f4\u3002"},{"location":"build_faq/#carla_2","text":"Carla \u662f\u4e00\u6b3e\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u8f6f\u4ef6\u3002\u5b83\u81f3\u5c11\u9700\u8981 6GB GPU\uff0c\u6216\u8005\u66f4\u597d\u7684\u662f\u80fd\u591f\u8fd0\u884c\u865a\u5e7b\u5f15\u64ce\u7684\u4e13\u7528 GPU\u3002 \u770b\u770b \u865a\u5e7b\u5f15\u64ce\u63a8\u8350\u7684\u786c\u4ef6 \u3002","title":"\u8fd0\u884c Carla \u7684\u63a8\u8350\u786c\u4ef6\u3002"},{"location":"build_faq/#linux_1","text":"","title":"Linux \u6784\u5efa"},{"location":"build_faq/#github-carlaue4sh","text":"Carla \u7684\u6e90\u7248\u672c\u4e2d\u6ca1\u6709 CarlaUE4.sh \u811a\u672c\u3002\u6309\u7167 \u6784\u5efa\u8bf4\u660e \u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla\u3002 \u8981\u4f7f\u7528 CarlaUE4.sh \u8fd0\u884c Carla\uff0c\u8bf7\u6309\u7167 \u5feb\u901f\u542f\u52a8\u5b89\u88c5 \u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.sh\u201d\u811a\u672c\u3002"},{"location":"build_faq/#make-launch-linux","text":"\u5728\u6784\u5efa\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u62d6\u51fa\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u5e76\u4f1a\u50cf\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u3002\u4ee5\u4e0b\u662f\u6700\u53ef\u80fd\u7684\u539f\u56e0\u5217\u8868\uff1a \u8fd0\u884c\u865a\u5e7b\u5f15\u64ce 4.26\u3002 \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u65f6\u53ef\u80fd\u51fa\u73b0\u67d0\u4e9b\u95ee\u9898\u3002\u5c1d\u8bd5\u5355\u72ec\u8fd0\u884c\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u662f 4.26 \u7248\u672c\u3002 \u4e0b\u8f7d\u8d44\u4ea7\u3002 \u5982\u679c\u6ca1\u6709\u89c6\u89c9\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\u6b64\u6b65\u9aa4\u662f\u5f3a\u5236\u6027\u7684\u3002 UE4_ROOT \u672a\u5b9a\u4e49\u3002 \u5883\u53d8\u91cf\u672a\u8bbe\u7f6e\u3002\u8bf7\u8bb0\u4f4f\u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230 ~/.bashrc \u6216 ~/.profile \u6765\u4f7f\u5176\u5728\u4f1a\u8bdd\u8303\u56f4\u5185\u6301\u4e45\u5b58\u5728\u3002\u5426\u5219\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2a\u65b0 shell \u8fdb\u884c\u8bbe\u7f6e\u3002\u8fd0\u884c export UE4_ROOT=<path_to_unreal_4-26> \u8bbe\u7f6e\u8fd9\u6b21\u7684\u53d8\u91cf\u3002 \u68c0\u67e5\u4f9d\u8d56\u3002 \u786e\u4fdd\u4e00\u5207\u90fd\u5b89\u88c5\u6b63\u786e\u3002\u4e5f\u8bb8\u5176\u4e2d\u4e00\u4e2a\u547d\u4ee4\u88ab\u8df3\u8fc7\u3001\u4e0d\u6210\u529f\u6216\u8005\u4f9d\u8d56\u9879\u4e0d\u9002\u5408\u7cfb\u7edf\u3002 \u5220\u9664 Carla \u5e76\u518d\u6b21\u514b\u9686\u5b83\u3002 \u4ee5\u9632\u4e07\u4e00\u51fa\u4e86\u95ee\u9898\u3002\u5220\u9664 Carla \u5e76\u91cd\u65b0\u514b\u9686\u6216\u4e0b\u8f7d\u3002 \u6ee1\u8db3\u7cfb\u7edf\u8981\u6c42\u3002 Ubuntu \u7248\u672c\u5e94\u4e3a 16.04 \u6216\u66f4\u9ad8\u7248\u672c\u3002Carla \u9700\u8981\u5927\u7ea6 170GB \u7684\u78c1\u76d8\u7a7a\u95f4\u548c\u4e00\u4e2a\u4e13\u7528 GPU\uff08\u6216\u81f3\u5c11\u4e00\u4e2a 6GB\uff09\u624d\u80fd\u8fd0\u884c\u3002 \u7cfb\u7edf\u663e\u793a\u4e0e Carla \u51b2\u7a81\u7684\u5176\u4ed6\u7279\u5b9a\u539f\u56e0\u53ef\u80fd\u4f1a\u53d1\u751f\u3002\u8bf7\u5c06\u8fd9\u4e9b\u5185\u5bb9\u53d1\u5e03\u5230 \u8bba\u575b \u4e0a\uff0c\u4ee5\u4fbf\u56e2\u961f\u53ef\u4ee5\u66f4\u591a\u5730\u4e86\u89e3\u5b83\u4eec\u3002","title":"\u201cmake launch\u201d\u5728 Linux \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002"},{"location":"build_faq/#_5","text":"1. \u865a\u5e7b\u5f15\u64ce\u5e10\u53f7\u662f\u5426\u5df2\u6fc0\u6d3b\uff1f \u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u662f\u79c1\u6709\u7684\u3002\u4e3a\u4e86\u514b\u9686\u5b83\uff0c\u8bf7\u521b\u5efa\u865a \u5e7b\u5f15\u64ce\u5e10 \u6237\uff0c\u6fc0\u6d3b\u5b83\uff08\u68c0\u67e5\u9a8c\u8bc1\u90ae\u4ef6\uff09\uff0c\u7136\u540e \u94fe\u63a5\u60a8\u7684 GitHub \u5e10\u6237\u3002 2. git\u662f\u5426\u5b89\u88c5\u6b63\u786e\uff1f \u6709\u65f6\u9519\u8bef\u8868\u660e\u4e0e https \u534f\u8bae\u4e0d\u517c\u5bb9\u3002\u901a\u8fc7\u5378\u8f7d\u5e76\u91cd\u65b0\u5b89\u88c5 git \u5373\u53ef\u8f7b\u677e\u89e3\u51b3\u3002\u6253\u5f00\u7ec8\u7aef\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo apt-get remove git # \u5378\u8f7d git sudo apt install git-all # \u5b89\u88c5 git","title":"\u514b\u9686\u865a\u5e7b\u5f15\u64ce\u5b58\u50a8\u5e93\u663e\u793a\u9519\u8bef\u3002"},{"location":"build_faq/#attributeerror-module-carla-has-no-attribute-client-when-running-a-script","text":"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 pip3 install -Iv setuptools==47.3.1 \u5e76\u518d\u6b21\u6784\u5efa PythonAPI\u3002 make PythonAPI \u5c1d\u8bd5\u6784\u5efa\u6587\u6863\u6765\u6d4b\u8bd5\u4e00\u5207\u662f\u5426\u6b63\u5e38\u8fd0\u884c\u3002\u5e94\u8be5\u4f1a\u663e\u793a\u6210\u529f\u7684\u6d88\u606f\u3002 make PythonAPI.docs","title":"AttributeError: module 'carla' has no attribute 'Client' when running a script."},{"location":"build_faq/#runtimeerror-rpcrpc_error-during-call-in-function-version","text":"\u5982\u679c\u8fd0\u884c\u811a\u672c\u8fd4\u56de\u4e0e\u6b64\u7c7b\u4f3c\u7684\u8f93\u51fa\uff0c\u5219\u8bf4\u660e PythonAPI \u4e2d\u7684 .egg \u6587\u4ef6\u5b58\u5728\u95ee\u9898\u3002 \u91cd\u8981 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12+\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u3002\u5982\u679c\u60a8\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\uff08 .whl \u6216 PyPi \u4e0b\u8f7d\uff09\u7684\u8f83\u65b0\u65b9\u6cd5\u4e4b\u4e00\uff0c\u672c\u8282\u4e2d\u7684\u4fe1\u606f\u5c06\u4e0e\u60a8\u65e0\u5173\u3002 \u9996\u5148\uff0c\u6253\u5f00 <root_carla>/PythonAPI/carla/dist \u3002 \u5e94\u8be5\u6709\u4e00\u4e2a\u548c\u4f60\u6b63\u5728\u4f7f\u7528\u76f8\u5bf9\u5e94\u7684 Carla \u548c Python \u54cd\u5e94\u7684 .egg \u6587\u4ef6\uff08\u7c7b\u4f3c\u4e8e carla-0.X.X-pyX.X-linux-x86_64.egg \uff09\u3002\u786e\u4fdd\u8be5\u6587\u4ef6\u4e0e\u60a8\u6b63\u5728\u4f7f\u7528\u7684 Python \u7248\u672c\u5339\u914d\u3002\u8981\u68c0\u67e5\u60a8\u7684 Python \u7248\u672c\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002 python3 --version # \u6216\u8005\u5bf9\u4e8e Python 2 python --version \u5982\u679c\u6587\u4ef6\u4e22\u5931\u6216\u8005\u60a8\u8ba4\u4e3a\u5b83\u53ef\u80fd\u5df2\u635f\u574f\uff0c\u8bf7\u5c1d\u8bd5\u518d\u6b21\u91cd\u5efa\u3002 make clean make PythonAPI make launch \u73b0\u5728\u518d\u6b21\u5c1d\u8bd5\u793a\u4f8b\u811a\u672c\u4e4b\u4e00\u3002 cd PythonAPI/examples python3 dynamic_weather.py \u5982\u679c\u9519\u8bef\u4ecd\u7136\u5b58\u5728\uff0c\u5219\u95ee\u9898\u53ef\u80fd\u4e0e\u60a8\u7684 PythonPATH \u6709\u5173\u3002\u8fd9\u4e9b\u811a\u672c\u4f1a\u81ea\u52a8\u67e5\u627e .egg \u4e0e\u6784\u5efa\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\uff0c\u60a8\u7684 PythonPATH \u4e2d\u53ef\u80fd\u5b58\u5728\u53e6\u4e00\u4e2a .egg \u6587\u4ef6\u5e72\u6270\u8be5\u8fc7\u7a0b\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u663e\u793a PythonPATH \u7684\u5185\u5bb9\u3002 echo $PYTHONPATH \u5728\u7c7b\u4f3c\u4e8e PythonAPI/carla/dist \u7684\u8def\u5f84\u4e0b\u67e5\u627e\u53e6\u4e00\u4e2a .egg \u6587\u4ef6\uff0c\u5e76\u5220\u9664\u5b83\u4eec\u3002\u5b83\u4eec\u53ef\u80fd\u5c5e\u4e8e Carla \u5b89\u88c5\u7684\u5176\u4ed6\u5b9e\u4f8b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u8fd8\u901a\u8fc7 apt-get \u5b89\u88c5\u4e86 Carla \uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5220\u9664\uff0c\u5e76\u4e14 PythonPATH \u4e5f\u4f1a\u88ab\u6e05\u7406\u3002 sudo apt-get purge carla-simulator \u6700\u7ec8\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 ~/.bashrc \uff0c\u5c06PythonPATH\u4e0b\u4f60\u6784\u5efa\u7684 .egg \u6587\u4ef6\u6dfb\u52a0\u8fdb\u6765\u3002\u8fd9\u4e0d\u662f\u63a8\u8350\u7684\u65b9\u5f0f\u3002\u6700\u597d\u6709\u4e00\u4e2a\u660e\u786e\u7684 PythonPATH\uff0c\u53ea\u9700\u5728\u811a\u672c\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684 .egg \u6587\u4ef6\u8def\u5f84\u5373\u53ef\u3002 \u9996\u5148\uff0c\u6253\u5f00 ~/.bashrc . gedit ~/.bashrc \u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230 ~/.bashrc \u3002\u5b83\u4eec\u5b58\u50a8\u6784\u5efa\u7684 .egg \u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u4fbfPython\u53ef\u4ee5\u81ea\u52a8\u627e\u5230\u5b83\u3002\u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u91cd\u7f6e\u7ec8\u7aef\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\u3002 export PYTHONPATH=$PYTHONPATH:\"${CARLA_ROOT}/PythonAPI/carla/dist/$(ls ${CARLA_ROOT}/PythonAPI/carla/dist | grep py3.)\" export PYTHONPATH=$PYTHONPATH:${CARLA_ROOT}/PythonAPI/carla \u6e05\u7406 PythonPATH \u6216\u6dfb\u52a0\u6784\u5efa\u7684 .egg \u6587\u4ef6\u8def\u5f84\u540e\uff0c\u6240\u6709\u793a\u4f8b\u811a\u672c\u90fd\u5e94\u8be5\u6b63\u5e38\u5de5\u4f5c\u3002","title":"\u65e0\u6cd5\u8fd0\u884c\u793a\u4f8b\u811a\u672c\u6216 \"RuntimeError: rpc::rpc_error during call in function version\"."},{"location":"build_faq/#windows_1","text":"","title":"Windows \u6784\u5efa"},{"location":"build_faq/#github-carlaue4exe","text":"Carla \u7684\u6e90\u7248\u672c\u4e2d\u6ca1\u6709 CarlaUE4.exe \u53ef\u6267\u884c\u6587\u4ef6\u3002\u6309\u7167\u6784\u5efa\u8bf4\u660e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Carla\u3002\u8981\u76f4\u63a5\u83b7\u53d6 CarlaUE4.exe \uff0c\u8bf7\u6309\u7167 \u5feb\u901f\u5165\u95e8 \u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u4ece GitHub \u4e0b\u8f7d\u65f6\u4e0d\u4f1a\u51fa\u73b0\u201cCarlaUE4.exe\u201d\u3002"},{"location":"build_faq/#carlaue4-could-not-be-compiled-try-rebuilding-it-from-source-manually","text":"\u5c1d\u8bd5\u6784\u5efa Carla \u65f6\u51fa\u73b0\u95ee\u9898\u3002\u4f7f\u7528 Visual Studio \u91cd\u65b0\u6784\u5efa\u4ee5\u53d1\u73b0\u53d1\u751f\u4e86\u4ec0\u4e48\u3002 1. \u8f6c\u5230 carla/Unreal/CarlaUE4 \u5e76\u53f3\u952e\u5355\u51fb CarlaUE4.uproject \u3002 2. \u5355\u51fb Generate Visual Studio project files \u3002 3. \u4f7f\u7528 Visual Studio 2019 \u6253\u5f00\u751f\u6210\u7684\u6587\u4ef6\u3002 4. \u4f7f\u7528 Visual Studio \u7f16\u8bd1\u9879\u76ee\u3002\u5feb\u6377\u952e\u662fF7\u3002\u6784\u5efa\u5c06\u5931\u8d25\uff0c\u4f46\u53d1\u73b0\u7684\u95ee\u9898\u5c06\u663e\u793a\u5728\u4e0b\u9762\u3002 \u4e0d\u540c\u7684\u95ee\u9898\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u6b64\u7279\u5b9a\u9519\u8bef\u6d88\u606f\u3002\u7528\u6237 @tamakoji \u89e3\u51b3\u4e86\u4e00\u4e2a\u7ecf\u5e38\u51fa\u73b0\u7684\u60c5\u51b5\uff0c\u5373\u6e90\u4ee3\u7801\u672a\u6b63\u786e\u514b\u9686\u4e14\u65e0\u6cd5\u8bbe\u7f6e Carla \u7248\u672c\uff08\u4ece git \u5c06\u5176\u4e0b\u8f7d\u4e3a .zip \u65f6\uff09\u3002 \u68c0\u67e5 Build/CMakeLists.txt.in . \u5982\u679c\u663e\u793a\uff1a set(CARLA_VERSION ) \uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a 1. \u8f6c\u5230 Setup.bat \u7b2c 198 \u884c\u3002 2. Update the line from: for /f %%i in ('git describe --tags --dirty --always') do set carla_version=%%i \u4e3a\uff1a for /f %%i in ('git describe --tags --dirty --always') do set carla_version=\"0.9.9\"","title":"CarlaUE4 could not be compiled. Try rebuilding it from source manually."},{"location":"build_faq/#cmake-cmake","text":"\u5f53\u5c1d\u8bd5\u4f7f\u7528 make \u547d\u4ee4\u6784\u5efa\u670d\u52a1\u5668\u6216\u5ba2\u6237\u7aef\u65f6\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002\u5373\u4f7f CMake \u5df2\u5b89\u88c5\u3001\u66f4\u65b0\u5e76\u6dfb\u52a0\u5230\u73af\u5883\u8def\u5f84\u4e2d\u3002Visual Studio \u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u51b2\u7a81\u3002 \u53ea\u7559\u4e0bVS2019\uff0c\u5176\u4f59\u7684\u5f7b\u5e95\u5220\u9664\u3002","title":"\u5373\u4f7f CMake \u5df2\u6b63\u786e\u5b89\u88c5\uff0c\u4e5f\u4f1a\u663e\u793a CMake \u9519\u8bef\u3002"},{"location":"build_faq/#error-c2440-c2672-compiler-version","text":"\u7531\u4e8e\u4e0e\u5176\u4ed6 Visual Studio \u6216 Microsoft \u7f16\u8bd1\u5668\u7248\u672c\u51b2\u7a81\uff0c\u8be5\u6784\u5efa\u672a\u4f7f\u7528 2019 \u7f16\u8bd1\u5668\u3002\u5378\u8f7d\u8fd9\u4e9b\u5e76\u518d\u6b21\u91cd\u5efa\u3002 Visual Studio \u4e0d\u64c5\u957f\u6446\u8131\u81ea\u8eab\u3002\u8981\u4ece\u8ba1\u7b97\u673a\u4e2d\u5f7b\u5e95\u6e05\u9664 Visual Studio\uff0c\u8bf7\u8f6c\u5230 Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout \u5e76\u8fd0\u884c .\\InstallCleanup.exe -full \u3002\u8fd9\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002 \u8981\u4fdd\u7559\u5176\u4ed6 Visual Studio \u7248\u672c\uff0c\u8bf7\u901a\u8fc7\u6dfb\u52a0\u4ee5\u4e0b\u884c\u8fdb\u884c\u7f16\u8f91 %appdata%\\Unreal Engine\\UnrealBuildTool\\BuildConfiguration.xml \uff1a <VCProjectFileGenerator> <Version>VisualStudio2019</Version> </VCProjectFileGenerator> <WindowsPlatform> <Compiler>VisualStudio2019</Compiler> </WindowsPlatform>","title":"Error C2440, C2672: compiler version."},{"location":"build_faq/#make-launch-windows","text":"\u5728\u6784\u5efa\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u62d6\u51fa\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u5e76\u50cf\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u3002\u4ee5\u4e0b\u662f\u6700\u53ef\u80fd\u7684\u539f\u56e0\u5217\u8868\uff1a \u91cd\u65b0\u542f\u52a8\u8ba1\u7b97\u673a\u3002 Windows \u6784\u5efa\u671f\u95f4\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\u3002\u91cd\u65b0\u542f\u52a8\u5e76\u786e\u4fdd\u6240\u6709\u5185\u5bb9\u5747\u5df2\u6b63\u786e\u66f4\u65b0\u3002 \u8fd0\u884c\u865a\u5e7b\u5f15\u64ce 4.26\u3002 \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u65f6\u53ef\u80fd\u51fa\u73b0\u67d0\u4e9b\u95ee\u9898\u3002\u8fd0\u884c\u7f16\u8f91\u5668\u5e76\u68c0\u67e5\u662f\u5426\u4f7f\u7528\u4e86 4.26 \u7248\u672c\u3002 \u4e0b\u8f7d\u8d44\u4ea7\u3002 \u5982\u679c\u6ca1\u6709\u89c6\u89c9\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\u6b64\u6b65\u9aa4\u662f\u5f3a\u5236\u6027\u7684\u3002 Visual Studio 2019. \u5982\u679c\u5b89\u88c5\u6216\u6700\u8fd1\u5378\u8f7d\u4e86\u5176\u4ed6\u7248\u672c\u7684 Visual Studio\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002\u8981\u4ece\u8ba1\u7b97\u673a\u4e2d\u5f7b\u5e95\u6e05\u9664 Visual Studio\uff0c\u8bf7\u8f6c\u5230 Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout \u5e76\u8fd0\u884c .\\InstallCleanup.exe -full \u3002 \u5220\u9664 Carla \u5e76\u518d\u6b21\u514b\u9686\u5b83\u3002 \u4ee5\u9632\u4e07\u4e00\u51fa\u4e86\u95ee\u9898\u3002\u5220\u9664 CARLA \u5e76\u91cd\u65b0\u514b\u9686\u6216\u4e0b\u8f7d\u3002 \u6ee1\u8db3\u7cfb\u7edf\u8981\u6c42\u3002 Carla \u9700\u8981\u5927\u7ea6 170GB \u7684\u78c1\u76d8\u7a7a\u95f4\u548c\u4e00\u4e2a\u4e13\u7528 GPU\uff08\u6216\u81f3\u5c11\u4e00\u4e2a 6GB\uff09\u624d\u80fd\u8fd0\u884c\u3002 \u7cfb\u7edf\u663e\u793a\u4e0e Carla \u51b2\u7a81\u7684\u5176\u4ed6\u7279\u5b9a\u539f\u56e0\u53ef\u80fd\u4f1a\u53d1\u751f\u3002\u8bf7\u5c06\u8fd9\u4e9b\u5185\u5bb9\u53d1\u5e03\u5230 \u8bba\u575b \u4e0a\uff0c\u4ee5\u4fbf\u56e2\u961f\u53ef\u4ee5\u66f4\u591a\u5730\u4e86\u89e3\u5b83\u4eec\u3002","title":"\u201cmake launch\u201d\u5728 Windows \u4e0a\u4e0d\u8d77\u4f5c\u7528\u3002"},{"location":"build_faq/#make-libintl3dll-libiconv2dll","text":"\u4e0b\u8f7d \u4f9d\u8d56\u9879 \u5e76\u5c06 bin \u5185\u5bb9\u89e3\u538b\u5230 make \u5b89\u88c5\u8def\u5f84\u4e2d\u3002","title":"Make \u7f3a\u5c11 libintl3.dll \u6216/\u548c libiconv2.dll\u3002"},{"location":"build_faq/#modules-are-missing-or-built-with-a-different-engine-version","text":"\u5355\u51fb on Accept \u4ee5\u91cd\u5efa\u5b83\u4eec\u3002","title":"Modules are missing or built with a different engine version."},{"location":"build_faq/#pythonapicarladist","text":"\u5728 Windows \u4e2d\uff0c make PythonAPI \u547d\u4ee4\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u6761\u6d88\u606f\uff0c\u8868\u660e Python API \u5b89\u88c5\u6210\u529f\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u672a\u6210\u529f\u3002\u5982\u679c\u770b\u5230\u6b64\u8f93\u51fa\u540e\u76ee\u5f55 PythonAPI/carla \u4e2d\u6ca1\u6709 dist \u6587\u4ef6\u5939\uff0c\u8bf7\u67e5\u770b\u4e0a\u9762\u7684\u547d\u4ee4\u8f93\u51fa\u3002\u5f88\u53ef\u80fd\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u9700\u8981\u5728\u66f4\u6b63\u9519\u8bef\u5e76\u8fd0\u884c make clean \u540e\u91cd\u8bd5\u6784\u5efa\u3002","title":"\u5c3d\u7ba1\u6210\u529f\u8f93\u51fa\u6d88\u606f\uff0c\u4f46\u5728PythonAPI/carla\u4e2d\u6ca1\u6709dist\u6587\u4ef6\u5939\u3002"},{"location":"build_faq/#carla_3","text":"","title":"\u8fd0\u884c Carla"},{"location":"build_faq/#fps","text":"\u865a\u5e7b4\u7f16\u8f91\u5668\u5728\u5931\u7126\u65f6\u4f1a\u8fdb\u5165\u4f4e\u6027\u80fd\u6a21\u5f0f\u3002 \u8f6c\u5230\u201c\u7f16\u8f91->\u7f16\u8f91\u5668\u504f\u597d\u8bbe\u7f6e->\u6027\u80fd\u201d \uff08 Edit/Editor Preferences/Performance \uff09\uff0c\u7136\u540e\u7981\u7528\u201c\u5904\u4e8e\u80cc\u666f\u4e2d\u65f6\u5360\u7528\u8f83\u5c11 CPU\u201d\u9009\u9879\u3002","title":"\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u65f6 FPS \u901f\u7387\u8f83\u4f4e\u3002"},{"location":"build_faq/#_6","text":"\u6709\u4e9b\u811a\u672c\u6709\u8981\u6c42\u3002\u8fd9\u4e9b\u5217\u5728\u540d\u4e3a Requirements.txt \u7684\u6587\u4ef6\u4e2d\uff0c\u4e0e\u811a\u672c\u672c\u8eab\u4f4d\u4e8e\u540c\u4e00\u8def\u5f84\u4e2d\u3002\u8bf7\u52a1\u5fc5\u68c0\u67e5\u8fd9\u4e9b\u4ee5\u4fbf\u8fd0\u884c\u811a\u672c\u3002\u5176\u4e2d\u5927\u591a\u6570\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684 pip \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u3002 \u6709\u65f6\u5728 Windows \u4e0a\uff0c\u811a\u672c\u65e0\u6cd5\u4ec5\u4f7f\u7528 > script_name.py \u8fd0\u884c\u3002\u5c1d\u8bd5\u6dfb\u52a0. Try adding > python3 script_name.py \uff0c\u5e76\u786e\u4fdd\u4f4d\u4e8e\u6b63\u786e\u7684\u76ee\u5f55\u4e2d\u3002","title":"\u65e0\u6cd5\u8fd0\u884c\u811a\u672c\u3002"},{"location":"build_faq/#_7","text":"\u5355\u51fb\u201c\u8fd0\u884c\u201d\uff08 Play \uff09\u5e76\u7b49\u5f85\u573a\u666f\u52a0\u8f7d\u3002\u6b64\u65f6\uff0cPython \u5ba2\u6237\u7aef\u53ef\u4ee5\u50cf\u72ec\u7acb\u4eff\u771f\u5668\u4e00\u6837\u8fde\u63a5\u5230\u6a21\u62df\u5668\u3002","title":"\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u8fd0\u884c\u65f6\u8fde\u63a5\u5230\u6a21\u62df\u5668\u3002"},{"location":"build_faq/#carla_4","text":"NVIDIA \u9a71\u52a8\u7a0b\u5e8f\u53ef\u80fd\u5df2\u8fc7\u65f6\u3002\u786e\u4fdd\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5982\u679c\u95ee\u9898\u4ecd\u672a\u89e3\u51b3\uff0c\u8bf7\u67e5\u770b \u8bba\u575b \u5e76\u53d1\u5e03\u5177\u4f53\u95ee\u9898\u3002","title":"\u65e0\u6cd5\u8fd0\u884c Carla\uff0c\u65e0\u8bba\u662f\u4e8c\u8fdb\u5236\u8fd8\u662f\u6e90\u4ee3\u7801\u6784\u5efa\u3002"},{"location":"build_faq/#importerror-dll-load-failed-the-specified-module-could-not-be-found","text":"\u6240\u9700\u7684\u5e93\u4e4b\u4e00\u5c1a\u672a\u6b63\u786e\u5b89\u88c5\u3002\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6cd5\uff0c\u8bf7\u8f6c\u81f3 carla\\Build\\zlib-source\\build \u5e76\u5728\u811a\u672c\u7684\u8def\u5f84\u4e2d\u590d\u5236\u540d\u4e3a zlib.dll \u7684\u6587\u4ef6\u3002","title":"ImportError: DLL load failed: The specified module could not be found."},{"location":"build_faq/#importerror-dll-load-failed-while-importing-libcarla-1-is-not-a-valid-win32-app","text":"32 \u4f4d Python \u7248\u672c\u5728\u5c1d\u8bd5\u8fd0\u884c\u811a\u672c\u65f6\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u5378\u8f7d\u5b83\u5e76\u4ec5\u4fdd\u7559\u6240\u9700\u7684 Python3 x64\u3002","title":"ImportError: DLL load failed while importing libcarla: %1 is not a valid Win32 app."},{"location":"build_faq/#importerror-no-module-named-carla","text":"\u51fa\u73b0\u6b64\u9519\u8bef\u7684\u539f\u56e0\u662f Python \u627e\u4e0d\u5230 Carla \u5e93\u3002Carla \u5e93\u5305\u542b\u5728\u4f4d\u4e8e PythonAPI/carla/dist \u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a .egg \u6587\u4ef6\u4e2d\uff0c\u6240\u6709\u793a\u4f8b\u811a\u672c\u90fd\u5c06\u5728\u6b64\u76ee\u5f55\u4e2d\u67e5\u627e\u5b83\u3002\u8be5 .egg \u6587\u4ef6\u9075\u5faacarla- -py - .egg \u547d\u540d\u6cd5\u3002 \u91cd\u8981 Carla \u4ec5\u5728 0.9.12 \u4e4b\u524d\u7684\u7248\u672c\u4e2d\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\u6587\u4ef6 .egg \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12+\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u3002\u5982\u679c\u60a8\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\uff08 .whl \u6216 PyPi \u4e0b\u8f7d\uff09\u7684\u8f83\u65b0\u65b9\u6cd5\u4e4b\u4e00\uff0c\u672c\u8282\u4e2d\u7684\u4fe1\u606f\u5c06\u4e0e\u60a8\u65e0\u5173\u3002 \u5728 \u5feb\u901f\u5165\u95e8\u6559\u7a0b \u4e2d\u9605\u8bfb\u6709\u5173\u4f7f\u7528/\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\u7684\u65b0\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u6253\u5305\u7248\u672c\u7684 Carla\uff0c\u5219\u4f1a\u6709\u591a\u4e2a .egg \u6587\u4ef6\uff0c\u5bf9\u5e94\u4e0d\u540c\u7248\u672c\u7684 Python\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e Carla \u7684\u7248\u672c\u3002\u786e\u4fdd\u60a8\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b Python \u7248\u672c\u4e4b\u4e00\u8fd0\u884c\u811a\u672c\u3002\u8981\u68c0\u67e5\u9ed8\u8ba4\u7684 Python \u7248\u672c\uff0c\u8bf7\u5728\u547d\u4ee4\u884c\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a python3 --version # \u6216\u8005 python --version \u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa Python\uff0c\u5219\u8be5 .egg \u6587\u4ef6\u5c06\u6839\u636e\u7cfb\u7edf\u4e0a\u7684\u9ed8\u8ba4 Python \u7248\u672c\u6784\u5efa\u3002\u5728 Linux \u4e2d\uff0c\u8fd9\u5c06\u662f\u8fd4\u56de\u7684\u9ed8\u8ba4 Python \u7248\u672c\uff1a /usr/bin/env python3 --version # \u6216\u8005\u5982\u679c\u4f60\u6307\u5b9a ARGS=\"--python-version=2\" /usr/bin/env python2 --version \u5728 Windows \u4e2d\uff0c\u5b83\u5c06\u6210\u4e3a\u4ee5\u4e0b\u529f\u80fd\u7684\u9ed8\u8ba4 Python \u7248\u672c\uff1a py -3 --version \u786e\u4fdd\u60a8\u4f7f\u7528\u4e0e\u60a8\u7684 .egg \u6587\u4ef6\u5bf9\u5e94\u7684 Python \u7248\u672c\u8fd0\u884c\u811a\u672c.egg\u3002\u5728 Linux \u4e2d\uff0c\u60a8\u53ef\u80fd\u8fd8\u9700\u8981\u5c06 Python \u8def\u5f84\u8bbe\u7f6e\u4e3a\u6307\u5411 Carla\u3002\u4e3a\u6b64\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a export PYTHONPATH=$PYTHONPATH:<path/to/carla/>/PythonAPI/carla/dist/<your_egg_file> # \u68c0\u67e5\u73b0\u5728 Carla \u662f\u5426\u80fd\u53d1\u73b0 python3 -c 'import carla;print(\"Success\")' \u8bf7\u6ce8\u610f\uff0c\u865a\u62df\u73af\u5883\u6216 Conda \u7b49\u5176\u4ed6 Python \u73af\u5883\u53ef\u80fd\u4f1a\u4f7f Carla \u7684\u5b89\u88c5\u53d8\u5f97\u590d\u6742\u3002\u786e\u4fdd\u60a8\u5df2\u76f8\u5e94\u5730\u8bbe\u7f6e Python \u9ed8\u8ba4\u503c\u548c\u8def\u5f84\u3002","title":"ImportError: No module named 'carla'"},{"location":"build_faq/#_8","text":"","title":"\u5176\u4ed6"},{"location":"build_faq/#fatal-error-versionh-has-been-modified-since-the-precompiled-header","text":"\u7531\u4e8e Linux \u66f4\u65b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u65f6\u5e38\u53d1\u751f\u3002Makefile \u4e2d\u6709\u4e00\u4e2a\u9488\u5bf9\u6b64\u95ee\u9898\u7684\u7279\u6b8a\u76ee\u6807\u3002\u867d\u7136\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u89e3\u51b3\u4e86\u95ee\u9898\uff1a make hard-clean make CarlaUE4Editor","title":"Fatal error: 'version.h' has been modified since the precompiled header."},{"location":"build_faq/#carla_5","text":"\u5728 Linux \u4e2d\uff0c\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c make package \u3002\u8be5\u5305\u5c06\u5305\u62ec\u9879\u76ee\u548c Python API \u6a21\u5757\u3002 \u6216\u8005\uff0c\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u7f16\u8bd1 Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002\u6253\u5f00 CarlaUE4 \u9879\u76ee\uff0c\u8f6c\u5230\u83dc\u5355 File/Package Project \uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u5e73\u53f0\u3002\u53ef\u80fd\u8fd8\u8981\u7b49\u4e00\u4e0b\u3002","title":"\u521b\u5efa Carla \u7684\u4e8c\u8fdb\u5236\u7248\u672c\u3002"},{"location":"build_faq/#linux-windows-carla","text":"\u867d\u7136\u6b64\u529f\u80fd\u9002\u7528\u4e8e\u865a\u5e7b\u5f15\u64ce\uff0c\u4f46\u5728 Carla \u4e2d\u4e0d\u53ef\u7528\u3002\u6211\u4eec\u6709\u8bb8\u591a\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u7684\u4f9d\u8d56\u9879\u3002","title":"\u6211\u53ef\u4ee5\u5728 Linux \u8ba1\u7b97\u673a\u4e0a\u6253\u5305\u9002\u7528\u4e8e Windows \u7684 Carla\uff0c\u53cd\u4e4b\u4ea6\u7136\u5417\uff1f"},{"location":"build_faq/#carla_6","text":"\u5982\u679c\u60a8\u4f7f\u7528 pip/pip3 \u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5378\u8f7d\uff1a # Python 3 pip3 uninstall carla # Python 2 pip uninstall carla","title":"\u5982\u4f55\u5378\u8f7d Carla \u5ba2\u6237\u7aef\u5e93\uff1f"},{"location":"build_linux/","text":"Linux \u7cfb\u7edf\u4e0a\u7684\u6784\u5efa \u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Linux \u4e0a\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002\u6709\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u8981\u6c42\u548c\u6240\u9700\u8f6f\u4ef6\u7684\u5b89\u88c5\uff0c\u7b2c\u4e8c\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u6784\u5efa\u548c\u8fd0\u884c CARLA\u3002 \u6784\u5efa\u8fc7\u7a0b\u5f88\u957f\uff084\u5c0f\u65f6\u6216\u66f4\u957f\u65f6\u95f4\uff09\u5e76\u4e14\u6d89\u53ca\u591a\u79cd\u8f6f\u4ef6\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u59cb\u4e4b\u524d\u5b8c\u6574\u9605\u8bfb\u8be5\u6307\u5357\u3002 If you come across errors or difficulties then have a look at the F.A.Q. page which offers solutions for the most common complications. Alternatively, use the CARLA forum to post any queries you may have. Part One: Prerequisites System requirements Software requirements Unreal Engine Part Two: Build CARLA Clone the CARLA repository Get assets Set Unreal Engine environment variable Build CARLA Other make commands Part One: Prerequisites System requirements Ubuntu 18.04. CARLA provides support for previous Ubuntu versions up to 16.04. However proper compilers are needed for Unreal Engine to work properly. Dependencies for Ubuntu 18.04 and previous versions are listed separatedly below. Make sure to install the ones corresponding to your system. 130 GB disk space. Carla will take around 31 GB and Unreal Engine will take around 91 GB so have about 130 GB free to account for both of these plus additional minor software installations. An adequate GPU. CARLA aims for realistic simulations, so the server needs at least a 6 GB GPU although 8 GB is recommended. A dedicated GPU is highly recommended for machine learning. Two TCP ports and good internet connection. 2000 and 2001 by default. Make sure that these ports are not blocked by firewalls or any other applications. ..warning:: If you are upgrading from CARLA 0.9.12 to 0.9.13 : you must first upgrade the CARLA fork of the UE4 engine to the latest version. See the Unreal Engine section for details on upgrading UE4 Software requirements CARLA requires many different kinds of software to run. Some are built during the CARLA build process itself, such as Boost.Python . Others are binaries that should be installed before starting the build ( cmake , clang , different versions of Python , etc.). To install these requirements, run the following commands: sudo apt-get update && sudo apt-get install wget software-properties-common && sudo add-apt-repository ppa:ubuntu-toolchain-r/test && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - && sudo apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main\" && sudo apt-get update Warning The following commands depend on your Ubuntu version. Make sure to choose accordingly. Ubuntu 18.04 . sudo apt-get install build-essential clang-8 lld-8 g++-7 cmake ninja-build libvulkan1 python python-pip python-dev python3-dev python3-pip libpng-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync libxml2-dev git Previous Ubuntu versions. sudo apt-get install build-essential clang-8 lld-8 g++-7 cmake ninja-build libvulkan1 python python-pip python-dev python3-dev python3-pip libpng16-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync libxml2-dev git All Ubuntu systems . To avoid compatibility issues between Unreal Engine and the CARLA dependencies, use the same compiler version and C++ runtime library to compile everything. The CARLA team uses clang-8 and LLVM's libc++. Change the default clang version to compile Unreal Engine and the CARLA dependencies. sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-8/bin/clang++ 180 && sudo update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-8/bin/clang 180 Starting with CARLA 0.9.12, users have the option to install the CARLA Python API using pip or pip3 . Version 20.3 or higher is required. To check if you have a suitable version, run the following command: # For Python 3 pip3 -V # For Python 2 pip -V If you need to upgrade: # For Python 3 pip3 install --upgrade pip # For Python 2 pip install --upgrade pip You must install the following Python dependencies: pip install --user setuptools && pip3 install --user -Iv setuptools==47.3.1 && pip install --user distro && pip3 install --user distro && pip install --user wheel && pip3 install --user wheel auditwheel Unreal Engine Starting with version 0.9.12, CARLA uses a modified fork of Unreal Engine 4.26. This fork contains patches specific to CARLA. Be aware that to download this fork of Unreal Engine, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. 1. Clone the content for CARLA's fork of Unreal Engine 4.26 to your local computer: git clone --depth 1 -b carla https://github.com/CarlaUnreal/UnrealEngine.git ~/UnrealEngine_4.26 2. Navigate into the directory where you cloned the repository: cd ~/UnrealEngine_4.26 3. Make the build. This may take an hour or two depending on your system. ./Setup.sh && ./GenerateProjectFiles.sh && make 4. Open the Editor to check that Unreal Engine has been installed properly. cd ~/UnrealEngine_4.26/Engine/Binaries/Linux && ./UE4Editor Part Two: Build CARLA Note Downloading aria2 with sudo apt-get install aria2 will speed up the following commands. Clone the CARLA repository CARLA repository The button above will take you to the official repository of the project. Either download from there and extract it locally or clone it using the following command: git clone https://github.com/carla-simulator/carla Note The master branch contains the current release of CARLA with the latest fixes and features. Previous CARLA versions are tagged with the version name. Always remember to check the current branch in git with the command git branch . Get assets You will need to download the latest assets to work with the current version of CARLA. We provide a script to automate this process. To use the script, run the following command in the CARLA root folder: ./Update.sh The assets will be downloaded and extracted to the appropriate location. Important To download the assets currently in development, visit Update CARLA and read Get development assets . To download the assets for a specific version of CARLA: From the root CARLA directory, navigate to \\Util\\ContentVersions.txt . This document contains the links to the assets for all CARLA releases. Extract the assets in Unreal\\CarlaUE4\\Content\\Carla . If the path doesn't exist, create it. Extract the file with a command similar to the following: tar -xvzf <assets_file_name>.tar.gz.tar -C C:\\path\\to\\carla\\Unreal\\CarlaUE4\\Content\\Carla Set Unreal Engine environment variable For CARLA to find the correct installation of Unreal Engine, we need to set the CARLA environment variable. To set the variable for this session only: export UE4_ROOT=~/UnrealEngine_4.26 To set the variable so it persists across sessions: 1. Open ~/.bashrc or ./profile . gedit ~/.bashrc # or gedit ~/.profile 2. Add the following line to the bottom of the file: export UE4_ROOT=~/UnrealEngine_4.26 3. Save the file and reset the terminal. Build CARLA This section outlines the commands to build CARLA. All commands should be run in the root CARLA folder. There are two parts to the build process for CARLA, compiling the client and compiling the server. Warning Make sure to run make PythonAPI to prepare the client and make launch for the server. Alternatively make LibCarla will prepare the CARLA library to be imported anywhere. 1. Compile the Python API client : The Python API client grants control over the simulation. Compilation of the Python API client is required the first time you build CARLA and again after you perform any updates. After the client is compiled, you will be able to run scripts to interact with the simulation. The following command compiles the Python API client: make PythonAPI Optionally, to compile the PythonAPI for a specific version of Python, run the below command in the root CARLA directory. # Delete versions as required make PythonAPI ARGS=\"--python-version=2.7, 3.6, 3.7, 3.8\" The CARLA client library will be built in two distinct, mutually exclusive forms. This gives users the freedom to choose which form they prefer to run the CARLA client code. The two forms include .egg files and .whl files. Choose one of the following options below to use the client library: A. .egg file The .egg file does not need to be installed. All of CARLA's example scripts automatically look for this file when importing CARLA. If you previously installed a CARLA .whl , the .whl will take precedence over an .egg file. B. .whl file The .whl file should be installed using pip or pip3 : # Python 3 pip3 install <path/to/wheel>.whl # Python 2 pip install <path/to/wheel>.whl This .whl file cannot be distributed as it is built specifically for your OS. Warning Issues can arise through the use of different methods to install the CARLA client library and having different versions of CARLA on your system. It is recommended to use virtual environments when installing the .whl and to uninstall any previously installed client libraries before installing new ones. 2. Compile the server : The following command compiles and launches Unreal Engine. Run this command each time you want to launch the server or use the Unreal Engine editor: make launch The project may ask to build other instances such as UE4Editor-Carla.dll the first time. Agree in order to open the project. During the first launch, the editor may show warnings regarding shaders and mesh distance fields. These take some time to be loaded and the map will not show properly until then. 3. Start the simulation : Press Play to start the server simulation. The camera can be moved with WASD keys and rotated by clicking the scene while moving the mouse around. Test the simulator using the example scripts inside PythonAPI\\examples . With the simulator running, open a new terminal for each script and run the following commands to spawn some life into the town and create a weather cycle: # Terminal A cd PythonAPI/examples python3 -m pip install -r requirements.txt python3 generate_traffic.py # Terminal B cd PythonAPI/examples python3 dynamic_weather.py Important If the simulation is running at a very low FPS rate, go to Edit -> Editor preferences -> Performance in the Unreal Engine editor and disable Use less CPU when in background . Other make commands There are more make commands that you may find useful. Find them in the table below: Command Description make help Prints all available commands. make launch Launches CARLA server in Editor window. make PythonAPI Builds the CARLA client. make LibCarla Prepares the CARLA library to be imported anywhere. make package Builds CARLA and creates a packaged version for distribution. make clean Deletes all the binaries and temporals generated by the build system. make rebuild make clean and make launch both in one command. Read the F.A.Q. page or post in the CARLA forum for any issues regarding this guide. Up next, learn how to update the CARLA build or take your first steps in the simulation, and learn some core concepts. Update CARLA First steps","title":"Linux \u6784\u5efa"},{"location":"build_linux/#linux","text":"\u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Linux \u4e0a\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002\u6709\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u8981\u6c42\u548c\u6240\u9700\u8f6f\u4ef6\u7684\u5b89\u88c5\uff0c\u7b2c\u4e8c\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u6784\u5efa\u548c\u8fd0\u884c CARLA\u3002 \u6784\u5efa\u8fc7\u7a0b\u5f88\u957f\uff084\u5c0f\u65f6\u6216\u66f4\u957f\u65f6\u95f4\uff09\u5e76\u4e14\u6d89\u53ca\u591a\u79cd\u8f6f\u4ef6\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u59cb\u4e4b\u524d\u5b8c\u6574\u9605\u8bfb\u8be5\u6307\u5357\u3002 If you come across errors or difficulties then have a look at the F.A.Q. page which offers solutions for the most common complications. Alternatively, use the CARLA forum to post any queries you may have. Part One: Prerequisites System requirements Software requirements Unreal Engine Part Two: Build CARLA Clone the CARLA repository Get assets Set Unreal Engine environment variable Build CARLA Other make commands","title":"Linux \u7cfb\u7edf\u4e0a\u7684\u6784\u5efa"},{"location":"build_linux/#part-one-prerequisites","text":"","title":"Part One: Prerequisites"},{"location":"build_linux/#system-requirements","text":"Ubuntu 18.04. CARLA provides support for previous Ubuntu versions up to 16.04. However proper compilers are needed for Unreal Engine to work properly. Dependencies for Ubuntu 18.04 and previous versions are listed separatedly below. Make sure to install the ones corresponding to your system. 130 GB disk space. Carla will take around 31 GB and Unreal Engine will take around 91 GB so have about 130 GB free to account for both of these plus additional minor software installations. An adequate GPU. CARLA aims for realistic simulations, so the server needs at least a 6 GB GPU although 8 GB is recommended. A dedicated GPU is highly recommended for machine learning. Two TCP ports and good internet connection. 2000 and 2001 by default. Make sure that these ports are not blocked by firewalls or any other applications. ..warning:: If you are upgrading from CARLA 0.9.12 to 0.9.13 : you must first upgrade the CARLA fork of the UE4 engine to the latest version. See the Unreal Engine section for details on upgrading UE4","title":"System requirements"},{"location":"build_linux/#software-requirements","text":"CARLA requires many different kinds of software to run. Some are built during the CARLA build process itself, such as Boost.Python . Others are binaries that should be installed before starting the build ( cmake , clang , different versions of Python , etc.). To install these requirements, run the following commands: sudo apt-get update && sudo apt-get install wget software-properties-common && sudo add-apt-repository ppa:ubuntu-toolchain-r/test && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - && sudo apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main\" && sudo apt-get update Warning The following commands depend on your Ubuntu version. Make sure to choose accordingly. Ubuntu 18.04 . sudo apt-get install build-essential clang-8 lld-8 g++-7 cmake ninja-build libvulkan1 python python-pip python-dev python3-dev python3-pip libpng-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync libxml2-dev git Previous Ubuntu versions. sudo apt-get install build-essential clang-8 lld-8 g++-7 cmake ninja-build libvulkan1 python python-pip python-dev python3-dev python3-pip libpng16-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync libxml2-dev git All Ubuntu systems . To avoid compatibility issues between Unreal Engine and the CARLA dependencies, use the same compiler version and C++ runtime library to compile everything. The CARLA team uses clang-8 and LLVM's libc++. Change the default clang version to compile Unreal Engine and the CARLA dependencies. sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-8/bin/clang++ 180 && sudo update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-8/bin/clang 180 Starting with CARLA 0.9.12, users have the option to install the CARLA Python API using pip or pip3 . Version 20.3 or higher is required. To check if you have a suitable version, run the following command: # For Python 3 pip3 -V # For Python 2 pip -V If you need to upgrade: # For Python 3 pip3 install --upgrade pip # For Python 2 pip install --upgrade pip You must install the following Python dependencies: pip install --user setuptools && pip3 install --user -Iv setuptools==47.3.1 && pip install --user distro && pip3 install --user distro && pip install --user wheel && pip3 install --user wheel auditwheel","title":"Software requirements"},{"location":"build_linux/#unreal-engine","text":"Starting with version 0.9.12, CARLA uses a modified fork of Unreal Engine 4.26. This fork contains patches specific to CARLA. Be aware that to download this fork of Unreal Engine, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. 1. Clone the content for CARLA's fork of Unreal Engine 4.26 to your local computer: git clone --depth 1 -b carla https://github.com/CarlaUnreal/UnrealEngine.git ~/UnrealEngine_4.26 2. Navigate into the directory where you cloned the repository: cd ~/UnrealEngine_4.26 3. Make the build. This may take an hour or two depending on your system. ./Setup.sh && ./GenerateProjectFiles.sh && make 4. Open the Editor to check that Unreal Engine has been installed properly. cd ~/UnrealEngine_4.26/Engine/Binaries/Linux && ./UE4Editor","title":"Unreal Engine"},{"location":"build_linux/#part-two-build-carla","text":"Note Downloading aria2 with sudo apt-get install aria2 will speed up the following commands.","title":"Part Two: Build CARLA"},{"location":"build_linux/#clone-the-carla-repository","text":"CARLA repository The button above will take you to the official repository of the project. Either download from there and extract it locally or clone it using the following command: git clone https://github.com/carla-simulator/carla Note The master branch contains the current release of CARLA with the latest fixes and features. Previous CARLA versions are tagged with the version name. Always remember to check the current branch in git with the command git branch .","title":"Clone the CARLA repository"},{"location":"build_linux/#get-assets","text":"You will need to download the latest assets to work with the current version of CARLA. We provide a script to automate this process. To use the script, run the following command in the CARLA root folder: ./Update.sh The assets will be downloaded and extracted to the appropriate location. Important To download the assets currently in development, visit Update CARLA and read Get development assets . To download the assets for a specific version of CARLA: From the root CARLA directory, navigate to \\Util\\ContentVersions.txt . This document contains the links to the assets for all CARLA releases. Extract the assets in Unreal\\CarlaUE4\\Content\\Carla . If the path doesn't exist, create it. Extract the file with a command similar to the following: tar -xvzf <assets_file_name>.tar.gz.tar -C C:\\path\\to\\carla\\Unreal\\CarlaUE4\\Content\\Carla","title":"Get assets"},{"location":"build_linux/#set-unreal-engine-environment-variable","text":"For CARLA to find the correct installation of Unreal Engine, we need to set the CARLA environment variable. To set the variable for this session only: export UE4_ROOT=~/UnrealEngine_4.26 To set the variable so it persists across sessions: 1. Open ~/.bashrc or ./profile . gedit ~/.bashrc # or gedit ~/.profile 2. Add the following line to the bottom of the file: export UE4_ROOT=~/UnrealEngine_4.26 3. Save the file and reset the terminal.","title":"Set Unreal Engine environment variable"},{"location":"build_linux/#build-carla","text":"This section outlines the commands to build CARLA. All commands should be run in the root CARLA folder. There are two parts to the build process for CARLA, compiling the client and compiling the server. Warning Make sure to run make PythonAPI to prepare the client and make launch for the server. Alternatively make LibCarla will prepare the CARLA library to be imported anywhere. 1. Compile the Python API client : The Python API client grants control over the simulation. Compilation of the Python API client is required the first time you build CARLA and again after you perform any updates. After the client is compiled, you will be able to run scripts to interact with the simulation. The following command compiles the Python API client: make PythonAPI Optionally, to compile the PythonAPI for a specific version of Python, run the below command in the root CARLA directory. # Delete versions as required make PythonAPI ARGS=\"--python-version=2.7, 3.6, 3.7, 3.8\" The CARLA client library will be built in two distinct, mutually exclusive forms. This gives users the freedom to choose which form they prefer to run the CARLA client code. The two forms include .egg files and .whl files. Choose one of the following options below to use the client library: A. .egg file The .egg file does not need to be installed. All of CARLA's example scripts automatically look for this file when importing CARLA. If you previously installed a CARLA .whl , the .whl will take precedence over an .egg file. B. .whl file The .whl file should be installed using pip or pip3 : # Python 3 pip3 install <path/to/wheel>.whl # Python 2 pip install <path/to/wheel>.whl This .whl file cannot be distributed as it is built specifically for your OS. Warning Issues can arise through the use of different methods to install the CARLA client library and having different versions of CARLA on your system. It is recommended to use virtual environments when installing the .whl and to uninstall any previously installed client libraries before installing new ones. 2. Compile the server : The following command compiles and launches Unreal Engine. Run this command each time you want to launch the server or use the Unreal Engine editor: make launch The project may ask to build other instances such as UE4Editor-Carla.dll the first time. Agree in order to open the project. During the first launch, the editor may show warnings regarding shaders and mesh distance fields. These take some time to be loaded and the map will not show properly until then. 3. Start the simulation : Press Play to start the server simulation. The camera can be moved with WASD keys and rotated by clicking the scene while moving the mouse around. Test the simulator using the example scripts inside PythonAPI\\examples . With the simulator running, open a new terminal for each script and run the following commands to spawn some life into the town and create a weather cycle: # Terminal A cd PythonAPI/examples python3 -m pip install -r requirements.txt python3 generate_traffic.py # Terminal B cd PythonAPI/examples python3 dynamic_weather.py Important If the simulation is running at a very low FPS rate, go to Edit -> Editor preferences -> Performance in the Unreal Engine editor and disable Use less CPU when in background .","title":"Build CARLA"},{"location":"build_linux/#other-make-commands","text":"There are more make commands that you may find useful. Find them in the table below: Command Description make help Prints all available commands. make launch Launches CARLA server in Editor window. make PythonAPI Builds the CARLA client. make LibCarla Prepares the CARLA library to be imported anywhere. make package Builds CARLA and creates a packaged version for distribution. make clean Deletes all the binaries and temporals generated by the build system. make rebuild make clean and make launch both in one command. Read the F.A.Q. page or post in the CARLA forum for any issues regarding this guide. Up next, learn how to update the CARLA build or take your first steps in the simulation, and learn some core concepts. Update CARLA First steps","title":"Other make commands"},{"location":"build_system/","text":"\u6784\u5efa\u7cfb\u7edf \u8bbe\u7f6e LibCarla CarlaUE4 \u548c Carla \u63d2\u4ef6 PythonAPI 0.9.12+ \u7248\u672c 0.9.12 \u4e4b\u524d\u7684\u7248\u672c \u672c\u6587\u6863\u662f\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u8fd9\u91cc\u4ec5\u8003\u8651 Linux \u6784\u5efa\u7cfb\u7edf\u3002 \u8bbe\u7f6e\u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u90e8\u5206\u662f\u7f16\u8bd1\u6240\u6709\u4f9d\u8d56\u9879\u548c\u6a21\u5757\uff0c\u4f7f\u5176\u4e0e a) \u670d\u52a1\u5668\u7aef\u7684\u865a\u5e7b\u5f15\u64ce \u548c b) \u5ba2\u6237\u7aef\u7684 Python \u517c\u5bb9\u3002 \u76ee\u6807\u662f\u80fd\u591f\u4ece\u5355\u72ec\u7684 Python \u8fdb\u7a0b\u8c03\u7528\u865a\u5e7b\u5f15\u64ce\u7684\u51fd\u6570\u3002 \u5728 Linux \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 clang-8.0 \u548c C++14 \u6807\u51c6\u7f16\u8bd1 Carla \u548c\u6240\u6709\u4f9d\u8d56\u9879\u3002\u7136\u800c\uff0c\u6211\u4eec\u6839\u636e\u4ee3\u7801\u7684\u4f7f\u7528\u4f4d\u7f6e\u6765\u94fe\u63a5\u4e0d\u540c\u7684\u8fd0\u884c\u65f6 C++ \u5e93\uff0c\u56e0\u4e3a\u6240\u6709\u5c06\u4e0e\u865a\u5e7b\u5f15\u64ce\u94fe\u63a5\u7684\u4ee3\u7801\u90fd\u9700\u8981\u4f7f\u7528 libc++ \u8fdb\u884c\u7f16\u8bd1\u3002 \u8bbe\u7f6e \u547d\u4ee4 make setup \u83b7\u53d6\u5e76\u7f16\u8bd1\u4f9d\u8d56\u9879 llvm-8 (libc++ and libc++abi) rpclib-2.2.1 (twice, with libstdc++ and libc++) boost-1.72.0 (headers and boost_python for libstdc++) googletest-1.8.1 (with libc++) LibCarla \u4f7f\u7528 CMake \u7f16\u8bd1\uff08\u6700\u4f4e\u7248\u672c\u9700\u8981 CMake 3.9\uff09\u3002 \u547d\u4ee4 make LibCarla \u4e24\u79cd\u914d\u7f6e\uff1a \u670d\u52a1\u5668 \u5ba2\u6237\u7aef \u5355\u5143\u6d4b\u8bd5 \u662f \u5426 \u8981\u6c42 rpclib, gtest, boost rpclib, boost \u6807\u51c6\u8fd0\u884c\u65f6 LLVM's libc++ \u9ed8\u8ba4 libstdc++ \u8f93\u51fa headers and test exes ibcarla_client.a Required by Carla plugin PythonAPI CarlaUE4 \u548c Carla \u63d2\u4ef6 \u4e24\u8005\u5747\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u5de5\u5177\u5728\u540c\u4e00\u6b65\u9aa4\u8fdb\u884c\u7f16\u8bd1\u3002\u5b83\u4eec\u9700\u8981 UE4_ROOT \u73af\u5883\u53d8\u91cf\u3002 \u547d\u4ee4 make CarlaUE4Editor \u8981\u542f\u52a8\u865a\u5e7b\u5f15\u64ce\u7684\u7f16\u8f91\u5668\uff0c\u8bf7\u8fd0\u884c make launch \u7f16\u8bd1 0.9.15 \u65f6\u5019\u51fa\u73b0 carla/Unreal/CarlaUE4/Plugins/CarlaTools/Source/CarlaTools/Private/Online/CustomFileDownloader.cpp(11): fatal rror C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cOSM2ODR.h\u201d: No such file or directory \u89e3\u51b3\uff1a\u5c060.9.14 build \u4e2d\u7684 carla\\Build\\osm2odr-visualstudio \u590d\u5236\u8fc7\u6765\u3002 PythonAPI 0.9.12+ \u7248\u672c \u4f7f\u7528 Python \u7684 setuptools (\"setup.py\") \u7f16\u8bd1\u3002 \u76ee\u524d\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\uff1aPython, libpython-dev, \u548c libboost-python-dev, pip>=20.3, wheel, \u548c auditwheel\u3002 \u547d\u4ee4\uff1a make PythonAPI \u521b\u5efa\u4e24\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5305\u542b\u5ba2\u6237\u7aef\u5e93\u5e76\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u4e0a\u652f\u6301\u7684 Python \u7248\u672c\u3002\u4e00\u4e2a\u6587\u4ef6\u662f .whl \u6587\u4ef6\uff0c\u53e6\u4e00\u4e2a\u6587\u4ef6\u662f .egg \u6587\u4ef6\u3002\u8fd9\u5141\u8bb8\u9009\u62e9\u4e24\u79cd\u4e0d\u540c\u7684\u3001\u4e92\u65a5\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\u3002 A. .whl \u6587\u4ef6 .whl \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a pip install <wheel_file>.whl \u65e0\u9700\u50cf\u4ee5\u524d\u7248\u672c\u6216 .egg \u6587\u4ef6\u4e2d\u90a3\u6837\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u5bfc\u5165\u5e93\u8def\u5f84 (\u8bf7\u53c2\u9605 __0.9.12_\u4e4b\u524d\u7684\u7248\u672c_ ); import carla \u5c31\u8db3\u591f\u4e86\u3002 B. .egg \u6587\u4ef6 \u8bf7\u53c2\u9605 0.9.12 \u4e4b\u524d\u7684\u7248\u672c \u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 0.9.12 \u4e4b\u524d\u7684\u7248\u672c \u4f7f\u7528 Python \u7684 setuptools (\"setup.py\")\u7f16\u8bd1\u3002 \u76ee\u524d\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\uff1a Python, libpython-dev, \u548c libboost-python-dev\u3002 \u547d\u4ee4 make PythonAPI \u5b83\u521b\u9020\u4e86\u4e24\u4e2a \"egg\" \u5305 PythonAPI/dist/carla-X.X.X-py2.7-linux-x86_64.egg PythonAPI/dist/carla-X.X.X-py3.7-linux-x86_64.egg \u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u8be5\u5305\u76f4\u63a5\u5bfc\u5165\u5230 Python \u811a\u672c\u4e2d\u3002 #!/usr/bin/env python import sys sys.path.append( 'PythonAPI/dist/carla-X.X.X-py%d.%d-linux-x86_64.egg' % (sys.version_info.major, sys.version_info.minor)) import carla # ... \u6216\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528 easy_install \u5b89\u88c5 easy_install2 --user --no-deps PythonAPI/dist/carla-X.X.X-py2.7-linux-x86_64.egg easy_install3 --user --no-deps PythonAPI/dist/carla-X.X.X-py3.7-linux-x86_64.egg","title":"\u6784\u5efa\u7cfb\u7edf"},{"location":"build_system/#_1","text":"\u8bbe\u7f6e LibCarla CarlaUE4 \u548c Carla \u63d2\u4ef6 PythonAPI 0.9.12+ \u7248\u672c 0.9.12 \u4e4b\u524d\u7684\u7248\u672c \u672c\u6587\u6863\u662f\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u8fd9\u91cc\u4ec5\u8003\u8651 Linux \u6784\u5efa\u7cfb\u7edf\u3002 \u8bbe\u7f6e\u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u90e8\u5206\u662f\u7f16\u8bd1\u6240\u6709\u4f9d\u8d56\u9879\u548c\u6a21\u5757\uff0c\u4f7f\u5176\u4e0e a) \u670d\u52a1\u5668\u7aef\u7684\u865a\u5e7b\u5f15\u64ce \u548c b) \u5ba2\u6237\u7aef\u7684 Python \u517c\u5bb9\u3002 \u76ee\u6807\u662f\u80fd\u591f\u4ece\u5355\u72ec\u7684 Python \u8fdb\u7a0b\u8c03\u7528\u865a\u5e7b\u5f15\u64ce\u7684\u51fd\u6570\u3002 \u5728 Linux \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 clang-8.0 \u548c C++14 \u6807\u51c6\u7f16\u8bd1 Carla \u548c\u6240\u6709\u4f9d\u8d56\u9879\u3002\u7136\u800c\uff0c\u6211\u4eec\u6839\u636e\u4ee3\u7801\u7684\u4f7f\u7528\u4f4d\u7f6e\u6765\u94fe\u63a5\u4e0d\u540c\u7684\u8fd0\u884c\u65f6 C++ \u5e93\uff0c\u56e0\u4e3a\u6240\u6709\u5c06\u4e0e\u865a\u5e7b\u5f15\u64ce\u94fe\u63a5\u7684\u4ee3\u7801\u90fd\u9700\u8981\u4f7f\u7528 libc++ \u8fdb\u884c\u7f16\u8bd1\u3002","title":"\u6784\u5efa\u7cfb\u7edf"},{"location":"build_system/#_2","text":"\u547d\u4ee4 make setup \u83b7\u53d6\u5e76\u7f16\u8bd1\u4f9d\u8d56\u9879 llvm-8 (libc++ and libc++abi) rpclib-2.2.1 (twice, with libstdc++ and libc++) boost-1.72.0 (headers and boost_python for libstdc++) googletest-1.8.1 (with libc++)","title":"\u8bbe\u7f6e"},{"location":"build_system/#libcarla","text":"\u4f7f\u7528 CMake \u7f16\u8bd1\uff08\u6700\u4f4e\u7248\u672c\u9700\u8981 CMake 3.9\uff09\u3002 \u547d\u4ee4 make LibCarla \u4e24\u79cd\u914d\u7f6e\uff1a \u670d\u52a1\u5668 \u5ba2\u6237\u7aef \u5355\u5143\u6d4b\u8bd5 \u662f \u5426 \u8981\u6c42 rpclib, gtest, boost rpclib, boost \u6807\u51c6\u8fd0\u884c\u65f6 LLVM's libc++ \u9ed8\u8ba4 libstdc++ \u8f93\u51fa headers and test exes ibcarla_client.a Required by Carla plugin PythonAPI","title":"LibCarla"},{"location":"build_system/#carlaue4-carla","text":"\u4e24\u8005\u5747\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u5de5\u5177\u5728\u540c\u4e00\u6b65\u9aa4\u8fdb\u884c\u7f16\u8bd1\u3002\u5b83\u4eec\u9700\u8981 UE4_ROOT \u73af\u5883\u53d8\u91cf\u3002 \u547d\u4ee4 make CarlaUE4Editor \u8981\u542f\u52a8\u865a\u5e7b\u5f15\u64ce\u7684\u7f16\u8f91\u5668\uff0c\u8bf7\u8fd0\u884c make launch \u7f16\u8bd1 0.9.15 \u65f6\u5019\u51fa\u73b0 carla/Unreal/CarlaUE4/Plugins/CarlaTools/Source/CarlaTools/Private/Online/CustomFileDownloader.cpp(11): fatal rror C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cOSM2ODR.h\u201d: No such file or directory \u89e3\u51b3\uff1a\u5c060.9.14 build \u4e2d\u7684 carla\\Build\\osm2odr-visualstudio \u590d\u5236\u8fc7\u6765\u3002","title":"CarlaUE4 \u548c Carla \u63d2\u4ef6"},{"location":"build_system/#pythonapi","text":"","title":"PythonAPI"},{"location":"build_system/#0912","text":"\u4f7f\u7528 Python \u7684 setuptools (\"setup.py\") \u7f16\u8bd1\u3002 \u76ee\u524d\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\uff1aPython, libpython-dev, \u548c libboost-python-dev, pip>=20.3, wheel, \u548c auditwheel\u3002 \u547d\u4ee4\uff1a make PythonAPI \u521b\u5efa\u4e24\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5305\u542b\u5ba2\u6237\u7aef\u5e93\u5e76\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u4e0a\u652f\u6301\u7684 Python \u7248\u672c\u3002\u4e00\u4e2a\u6587\u4ef6\u662f .whl \u6587\u4ef6\uff0c\u53e6\u4e00\u4e2a\u6587\u4ef6\u662f .egg \u6587\u4ef6\u3002\u8fd9\u5141\u8bb8\u9009\u62e9\u4e24\u79cd\u4e0d\u540c\u7684\u3001\u4e92\u65a5\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u5ba2\u6237\u7aef\u5e93\u3002 A. .whl \u6587\u4ef6 .whl \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a pip install <wheel_file>.whl \u65e0\u9700\u50cf\u4ee5\u524d\u7248\u672c\u6216 .egg \u6587\u4ef6\u4e2d\u90a3\u6837\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u5bfc\u5165\u5e93\u8def\u5f84 (\u8bf7\u53c2\u9605 __0.9.12_\u4e4b\u524d\u7684\u7248\u672c_ ); import carla \u5c31\u8db3\u591f\u4e86\u3002 B. .egg \u6587\u4ef6 \u8bf7\u53c2\u9605 0.9.12 \u4e4b\u524d\u7684\u7248\u672c \u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002","title":"0.9.12+ \u7248\u672c"},{"location":"build_system/#0912_1","text":"\u4f7f\u7528 Python \u7684 setuptools (\"setup.py\")\u7f16\u8bd1\u3002 \u76ee\u524d\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\uff1a Python, libpython-dev, \u548c libboost-python-dev\u3002 \u547d\u4ee4 make PythonAPI \u5b83\u521b\u9020\u4e86\u4e24\u4e2a \"egg\" \u5305 PythonAPI/dist/carla-X.X.X-py2.7-linux-x86_64.egg PythonAPI/dist/carla-X.X.X-py3.7-linux-x86_64.egg \u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u8be5\u5305\u76f4\u63a5\u5bfc\u5165\u5230 Python \u811a\u672c\u4e2d\u3002 #!/usr/bin/env python import sys sys.path.append( 'PythonAPI/dist/carla-X.X.X-py%d.%d-linux-x86_64.egg' % (sys.version_info.major, sys.version_info.minor)) import carla # ... \u6216\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528 easy_install \u5b89\u88c5 easy_install2 --user --no-deps PythonAPI/dist/carla-X.X.X-py2.7-linux-x86_64.egg easy_install3 --user --no-deps PythonAPI/dist/carla-X.X.X-py3.7-linux-x86_64.egg","title":"0.9.12 \u4e4b\u524d\u7684\u7248\u672c"},{"location":"build_update/","text":"\u66f4\u65b0 Carla \u66f4\u65b0\u547d\u4ee4\u6458\u8981 \u83b7\u53d6\u6700\u65b0\u7684\u4e8c\u8fdb\u5236\u7248\u672c \u66f4\u65b0 Linux \u548c Windows \u6784\u5efa \u6e05\u9664\u6784\u5efa \u4ece origin \u62c9\u53d6 \u4e0b\u8f7d\u8d44\u4ea7 \u542f\u52a8\u670d\u52a1\u5668 \u83b7\u53d6\u5f00\u53d1\u8d44\u4ea7 \u8981\u53d1\u5e03\u610f\u5916\u95ee\u9898\u3001\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u8bf7\u968f\u65f6\u767b\u5f55 CARLA \u8bba\u575b\u3002 CARLA \u8bba\u575b \u66f4\u65b0\u547d\u4ee4\u6458\u8981 \u663e\u793a\u66f4\u65b0 CARLA \u7684\u547d\u4ee4\u884c # \u66f4\u65b0 CARLA \u5305\u7684\u53d1\u884c\u7248\u3002 # 1. \u5220\u9664\u5f53\u524d\u7684\u7248\u672c\u3002 # 2. \u6309\u7167\u5feb\u901f\u5f00\u59cb\u5b89\u88c5\u6216\u4e00\u4e2a\u4e00\u4e2a\u60f3\u8981\u7684\u7248\u672c\u3002 # \u66f4\u65b0 Linux \u6784\u5efa\u3002 git checkout master make clean git pull origin master ./Update.sh # \u66f4\u65b0 Windows \u6784\u5efa\u3002 git checkout master make clean git pull origin master # \u64e6\u9664 `Unreal\\CarlaUE4\\Content\\Carla` \u4e2d\u7684\u5185\u5bb9\u3002 # \u8f6c\u81f3 `\\Util\\ContentVersions.txt`. # \u4e0b\u8f7d\u6700\u65b0\u7684\u8d44\u4ea7\u5185\u5bb9\u3002 # \u5728 `Unreal\\CarlaUE4\\Content\\Carla` \u4e2d\u89e3\u538b\u51fa\u65b0\u7684\u8d44\u4ea7\u5185\u5bb9\u3002 # \u83b7\u53d6\u5f00\u53d1\u7248\u672c\u7684\u8d44\u4ea7 # \u5220\u9664\u5305\u542b\u4e4b\u524d\u8d44\u4ea7\u7684 `/Carla` \u6587\u4ef6\u5939\u3002 # \u8f6c\u81f3\u4e3b Carla \u76ee\u5f55\u3002 git clone https://bitbucket.org/carla-simulator/carla-content Unreal/CarlaUE4/Content/Carla \u83b7\u53d6\u6700\u65b0\u7684\u4e8c\u8fdb\u5236\u7248\u672c \u4e8c\u8fdb\u5236\u7248\u672c\u5df2\u9884\u5148\u6253\u5305\uff0c\u56e0\u6b64\u4e0e Carla \u7684\u7279\u5b9a\u7248\u672c\u76f8\u5173\u8054\u3002\u8981\u83b7\u53d6\u6700\u65b0\u7248\u672c\uff0c\u8bf7\u5220\u9664\u4e4b\u524d\u7684\u7248\u672c\uff0c\u7136\u540e\u6309\u7167 \u5feb\u901f\u542f\u52a8\u5b89\u88c5 \u6765\u83b7\u53d6\u6240\u9700\u7684\u7248\u672c\u3002 \u7248\u672c\u5217\u5728 Carla \u4ed3\u5e93\u7684 Development \u4e2d\u3002\u8fd8\u6709\u4e00\u4e2a\u9ad8\u5ea6\u5b9e\u9a8c\u6027\u7684 Nightly build \uff0c\u5176\u4e2d\u5305\u542b Carla \u7684\u6700\u65b0\u72b6\u6001\u3002 Get releases Get the nightly build \u66f4\u65b0 Linux \u548c Windows \u6784\u5efa \u66f4\u65b0\u524d\u8bf7\u786e\u4fdd\u4f4d\u4e8e\u672c\u5730 master \u5206\u652f\u3002\u7136\u540e\uff0c\u5c06\u66f4\u6539 merge \u6216rebase \u5230\u5176\u4ed6\u5206\u652f\u5e76\u89e3\u51b3\u53ef\u80fd\u7684\u51b2\u7a81\u3002 git checkout master \u6e05\u7406\u6784\u5efa \u8f6c\u5230\u4e3b CARLA \u6587\u4ef6\u5939\u5e76\u5220\u9664\u5148\u524d\u6784\u5efa\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u4e34\u65f6\u6587\u4ef6\u3002 make clean \u4ece origin \u62c9\u53d6 \u4ece CARLA \u5b58\u50a8\u5e93\u4e2d master \u5206\u652f\u83b7\u53d6\u5f53\u524d\u7248\u672c\u3002 git pull origin master \u4e0b\u8f7d\u8d44\u4ea7 Linux. ./Update.sh Windows. 1. \u5220\u9664 Unreal\\CarlaUE4\\Content\\Carla \u4e2d\u4e4b\u524d\u7684\u5185\u5bb9\u3002 2. \u8f6c\u81f3 \\Util\\ContentVersions.txt \u3002 3. \u4e0b\u8f7d\u6700\u65b0\u7684 latest \u7684\u5185\u5bb9\u3002 4. \u5728 Unreal\\CarlaUE4\\Content\\Carla \u62bd\u53d6\u65b0\u7684\u5185\u5bb9\u3002 \u7b14\u8bb0 \u4e3a\u4e86\u4e0e CARLA \u56e2\u961f\u6b63\u5728\u5f00\u53d1\u7684\u9879\u76ee\u5408\u4f5c\uff0c\u8bf7 \u83b7\u53d6\u4e0b\u9762\u7684\u5f00\u53d1\u8d44\u4ea7 \u3002 \u542f\u52a8\u670d\u52a1\u5668 \u5728\u65c1\u89c2\u8005\u89c6\u56fe\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u3002 make launch \u83b7\u53d6\u5f00\u53d1\u7248\u7684\u8d44\u4ea7 Carla \u56e2\u961f\u4f7f\u7528\u4ecd\u5728\u5f00\u53d1\u4e2d\u7684\u8d44\u4ea7\u3002\u8fd9\u4e9b\u6a21\u578b\u548c\u5730\u56fe\u6709\u4e00\u4e2a \u516c\u5171 git \u5b58\u50a8\u5e93 \uff0cCarla \u56e2\u961f\u5b9a\u671f\u5728\u5176\u4e2d\u63a8\u9001\u6700\u65b0\u66f4\u65b0\u3002\u8d44\u4ea7\u5c1a\u672a\u5b8c\u6210\uff0c\u4ec5\u5efa\u8bae\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u5b83\u4eec\u3002 \u4e3a\u4e86\u5904\u7406\u8fd9\u4e2a\u5b58\u50a8\u5e93\uff0c\u5efa\u8bae\u5b89\u88c5 git-lfs \u3002\u5b58\u50a8\u5e93\u4f1a\u5b9a\u671f\u4fee\u6539\uff0c\u5e76\u4e14 git-lfs \u5904\u7406\u5927\u578b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u901f\u5ea6\u66f4\u5feb\u3002 \u8981\u514b\u9686\u5b58\u50a8\u5e93\uff0c\u8bf7 \u8f6c\u5230\u4e3b CARLA \u76ee\u5f55 \u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 git clone https://bitbucket.org/carla-simulator/carla-content Unreal/CarlaUE4/Content/Carla \u8b66\u544a \u5728\u514b\u9686\u5b58\u50a8\u5e93\u4e4b\u524d\u5220\u9664\u5305\u542b\u8d44\u4ea7\u7684 /Carla \u6587\u4ef6\u5939\u3002\u5426\u5219\uff0c\u5c06\u663e\u793a\u9519\u8bef\u3002","title":"\u66f4\u65b0 Carla"},{"location":"build_update/#carla","text":"\u66f4\u65b0\u547d\u4ee4\u6458\u8981 \u83b7\u53d6\u6700\u65b0\u7684\u4e8c\u8fdb\u5236\u7248\u672c \u66f4\u65b0 Linux \u548c Windows \u6784\u5efa \u6e05\u9664\u6784\u5efa \u4ece origin \u62c9\u53d6 \u4e0b\u8f7d\u8d44\u4ea7 \u542f\u52a8\u670d\u52a1\u5668 \u83b7\u53d6\u5f00\u53d1\u8d44\u4ea7 \u8981\u53d1\u5e03\u610f\u5916\u95ee\u9898\u3001\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u8bf7\u968f\u65f6\u767b\u5f55 CARLA \u8bba\u575b\u3002 CARLA \u8bba\u575b","title":"\u66f4\u65b0 Carla"},{"location":"build_update/#_1","text":"\u663e\u793a\u66f4\u65b0 CARLA \u7684\u547d\u4ee4\u884c # \u66f4\u65b0 CARLA \u5305\u7684\u53d1\u884c\u7248\u3002 # 1. \u5220\u9664\u5f53\u524d\u7684\u7248\u672c\u3002 # 2. \u6309\u7167\u5feb\u901f\u5f00\u59cb\u5b89\u88c5\u6216\u4e00\u4e2a\u4e00\u4e2a\u60f3\u8981\u7684\u7248\u672c\u3002 # \u66f4\u65b0 Linux \u6784\u5efa\u3002 git checkout master make clean git pull origin master ./Update.sh # \u66f4\u65b0 Windows \u6784\u5efa\u3002 git checkout master make clean git pull origin master # \u64e6\u9664 `Unreal\\CarlaUE4\\Content\\Carla` \u4e2d\u7684\u5185\u5bb9\u3002 # \u8f6c\u81f3 `\\Util\\ContentVersions.txt`. # \u4e0b\u8f7d\u6700\u65b0\u7684\u8d44\u4ea7\u5185\u5bb9\u3002 # \u5728 `Unreal\\CarlaUE4\\Content\\Carla` \u4e2d\u89e3\u538b\u51fa\u65b0\u7684\u8d44\u4ea7\u5185\u5bb9\u3002 # \u83b7\u53d6\u5f00\u53d1\u7248\u672c\u7684\u8d44\u4ea7 # \u5220\u9664\u5305\u542b\u4e4b\u524d\u8d44\u4ea7\u7684 `/Carla` \u6587\u4ef6\u5939\u3002 # \u8f6c\u81f3\u4e3b Carla \u76ee\u5f55\u3002 git clone https://bitbucket.org/carla-simulator/carla-content Unreal/CarlaUE4/Content/Carla","title":"\u66f4\u65b0\u547d\u4ee4\u6458\u8981"},{"location":"build_update/#_2","text":"\u4e8c\u8fdb\u5236\u7248\u672c\u5df2\u9884\u5148\u6253\u5305\uff0c\u56e0\u6b64\u4e0e Carla \u7684\u7279\u5b9a\u7248\u672c\u76f8\u5173\u8054\u3002\u8981\u83b7\u53d6\u6700\u65b0\u7248\u672c\uff0c\u8bf7\u5220\u9664\u4e4b\u524d\u7684\u7248\u672c\uff0c\u7136\u540e\u6309\u7167 \u5feb\u901f\u542f\u52a8\u5b89\u88c5 \u6765\u83b7\u53d6\u6240\u9700\u7684\u7248\u672c\u3002 \u7248\u672c\u5217\u5728 Carla \u4ed3\u5e93\u7684 Development \u4e2d\u3002\u8fd8\u6709\u4e00\u4e2a\u9ad8\u5ea6\u5b9e\u9a8c\u6027\u7684 Nightly build \uff0c\u5176\u4e2d\u5305\u542b Carla \u7684\u6700\u65b0\u72b6\u6001\u3002 Get releases Get the nightly build","title":"\u83b7\u53d6\u6700\u65b0\u7684\u4e8c\u8fdb\u5236\u7248\u672c"},{"location":"build_update/#linux-windows","text":"\u66f4\u65b0\u524d\u8bf7\u786e\u4fdd\u4f4d\u4e8e\u672c\u5730 master \u5206\u652f\u3002\u7136\u540e\uff0c\u5c06\u66f4\u6539 merge \u6216rebase \u5230\u5176\u4ed6\u5206\u652f\u5e76\u89e3\u51b3\u53ef\u80fd\u7684\u51b2\u7a81\u3002 git checkout master","title":"\u66f4\u65b0 Linux \u548c Windows \u6784\u5efa"},{"location":"build_update/#_3","text":"\u8f6c\u5230\u4e3b CARLA \u6587\u4ef6\u5939\u5e76\u5220\u9664\u5148\u524d\u6784\u5efa\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u4e34\u65f6\u6587\u4ef6\u3002 make clean","title":"\u6e05\u7406\u6784\u5efa"},{"location":"build_update/#origin","text":"\u4ece CARLA \u5b58\u50a8\u5e93\u4e2d master \u5206\u652f\u83b7\u53d6\u5f53\u524d\u7248\u672c\u3002 git pull origin master","title":"\u4ece origin \u62c9\u53d6"},{"location":"build_update/#_4","text":"Linux. ./Update.sh Windows. 1. \u5220\u9664 Unreal\\CarlaUE4\\Content\\Carla \u4e2d\u4e4b\u524d\u7684\u5185\u5bb9\u3002 2. \u8f6c\u81f3 \\Util\\ContentVersions.txt \u3002 3. \u4e0b\u8f7d\u6700\u65b0\u7684 latest \u7684\u5185\u5bb9\u3002 4. \u5728 Unreal\\CarlaUE4\\Content\\Carla \u62bd\u53d6\u65b0\u7684\u5185\u5bb9\u3002 \u7b14\u8bb0 \u4e3a\u4e86\u4e0e CARLA \u56e2\u961f\u6b63\u5728\u5f00\u53d1\u7684\u9879\u76ee\u5408\u4f5c\uff0c\u8bf7 \u83b7\u53d6\u4e0b\u9762\u7684\u5f00\u53d1\u8d44\u4ea7 \u3002","title":"\u4e0b\u8f7d\u8d44\u4ea7"},{"location":"build_update/#_5","text":"\u5728\u65c1\u89c2\u8005\u89c6\u56fe\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u3002 make launch","title":"\u542f\u52a8\u670d\u52a1\u5668"},{"location":"build_update/#_6","text":"Carla \u56e2\u961f\u4f7f\u7528\u4ecd\u5728\u5f00\u53d1\u4e2d\u7684\u8d44\u4ea7\u3002\u8fd9\u4e9b\u6a21\u578b\u548c\u5730\u56fe\u6709\u4e00\u4e2a \u516c\u5171 git \u5b58\u50a8\u5e93 \uff0cCarla \u56e2\u961f\u5b9a\u671f\u5728\u5176\u4e2d\u63a8\u9001\u6700\u65b0\u66f4\u65b0\u3002\u8d44\u4ea7\u5c1a\u672a\u5b8c\u6210\uff0c\u4ec5\u5efa\u8bae\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u5b83\u4eec\u3002 \u4e3a\u4e86\u5904\u7406\u8fd9\u4e2a\u5b58\u50a8\u5e93\uff0c\u5efa\u8bae\u5b89\u88c5 git-lfs \u3002\u5b58\u50a8\u5e93\u4f1a\u5b9a\u671f\u4fee\u6539\uff0c\u5e76\u4e14 git-lfs \u5904\u7406\u5927\u578b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u901f\u5ea6\u66f4\u5feb\u3002 \u8981\u514b\u9686\u5b58\u50a8\u5e93\uff0c\u8bf7 \u8f6c\u5230\u4e3b CARLA \u76ee\u5f55 \u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 git clone https://bitbucket.org/carla-simulator/carla-content Unreal/CarlaUE4/Content/Carla \u8b66\u544a \u5728\u514b\u9686\u5b58\u50a8\u5e93\u4e4b\u524d\u5220\u9664\u5305\u542b\u8d44\u4ea7\u7684 /Carla \u6587\u4ef6\u5939\u3002\u5426\u5219\uff0c\u5c06\u663e\u793a\u9519\u8bef\u3002","title":"\u83b7\u53d6\u5f00\u53d1\u7248\u7684\u8d44\u4ea7"},{"location":"build_windows/","text":"Windows \u4e0b\u7684\u6784\u5efa \u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Windows \u4e0a\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002\u6709\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u8981\u6c42\u548c\u6240\u9700\u8f6f\u4ef6\u7684\u5b89\u88c5\uff0c\u7b2c\u4e8c\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u6784\u5efa\u548c\u8fd0\u884c CARLA\u3002 \u6784\u5efa\u8fc7\u7a0b\u5f88\u957f\uff084\u5c0f\u65f6\u6216\u66f4\u957f\u65f6\u95f4\uff09\u5e76\u4e14\u6d89\u53ca\u591a\u79cd\u8f6f\u4ef6\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u59cb\u4e4b\u524d\u5b8c\u6574\u9605\u8bfb\u8be5\u6307\u5357\u3002 \u5982\u679c\u60a8\u9047\u5230\u9519\u8bef\u6216\u56f0\u96be\uff0c\u8bf7\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u6700\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6216\u8005\uff0c\u4f7f\u7528 CARLA \u8bba\u575b \u53d1\u5e03\u60a8\u53ef\u80fd\u6709\u7684\u4efb\u4f55\u7591\u95ee\u3002 \u7b2c\u4e00\u90e8\u5206\uff1a\u5148\u51b3\u6761\u4ef6 \u7cfb\u7edf\u8981\u6c42 \u8f6f\u4ef6\u8981\u6c42 \u57fa\u7840\u8f6f\u4ef6\u5b89\u88c5 Python \u4f9d\u8d56\u9879 \u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5 Visual Studio 2019 \u865a\u5e7b\u5f15\u64ce \u7b2c\u4e8c\u90e8\u5206\uff1a\u6784\u5efa Carla \u514b\u9686 Carla \u4ed3\u5e93 \u83b7\u53d6\u8d44\u4ea7 \u8bbe\u7f6e\u865a\u5e7b\u5f15\u64ce\u73af\u5883\u53d8\u91cf \u6784\u5efa Carla \u5176\u4ed6 make \u547d\u4ee4 \u7b2c\u4e00\u90e8\u5206\uff1a\u5148\u51b3\u6761\u4ef6 \u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u627e\u5230\u5f00\u59cb\u6784\u5efa Carla \u4e4b\u524d\u6240\u9700\u7684\u7cfb\u7edf\u8981\u6c42\u3001\u6b21\u8981\u548c\u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5\u4ee5\u53ca Python \u4f9d\u8d56\u9879\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u7cfb\u7edf\u8981\u6c42 64 \u4f4d\u64cd\u4f5c\u7cfb\u7edf\u3002 \u6a21\u62df\u5668\u5e94\u5728\u4efb\u4f55 64 \u4f4d Windows \u7cfb\u7edf\u4e2d\u8fd0\u884c\u3002 165 GB \u78c1\u76d8\u7a7a\u95f4\u3002 CARLA \u672c\u8eab\u5c06\u5360\u7528\u5927\u7ea6 32 GB\uff0c\u76f8\u5173\u7684\u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5\uff08\u5305\u62ec\u865a\u5e7b\u5f15\u64ce\uff09\u5c06\u5360\u7528\u5927\u7ea6 133 GB\u3002 \u8db3\u591f\u7684 GPU\u3002 CARLA \u65e8\u5728\u5b9e\u73b0\u771f\u5b9e\u6a21\u62df\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u81f3\u5c11\u9700\u8981 6 GB GPU\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 8 GB\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u4e13\u7528 GPU \u8fdb\u884c\u673a\u5668\u5b66\u4e60\u3002 \u4e24\u4e2a TCP \u7aef\u53e3\u548c\u826f\u597d\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002 \u9ed8\u8ba4\u7aef\u53e3\u4e3a 2000 \u548c 2001 \u3002 \u786e\u4fdd\u8fd9\u4e9b\u7aef\u53e3\u672a\u88ab\u9632\u706b\u5899\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u963b\u6b62\u3002 ..\u8b66\u544a:: \u5982\u679c\u60a8\u8981\u4ece CARLA 0.9.12 \u5347\u7ea7\u5230 0.9.13 : \u60a8\u5fc5\u987b\u9996\u5148\u5c06\u865a\u5e7b\u5f15\u64ce 4 \u7684 CARLA \u5206\u652f\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u3002\u6709\u5173\u5347\u7ea7\u865a\u5e7b\u5f15\u64ce 4 \u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u865a\u5e7b\u5f15\u64ce \u90e8\u5206\u3002 \u8f6f\u4ef6\u8981\u6c42 \u57fa\u7840\u8f6f\u4ef6\u5b89\u88c5 CMake \u4ece\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u6807\u51c6\u6784\u5efa\u6587\u4ef6\u3002 Git \u662f\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406 Carla \u5b58\u50a8\u5e93\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 Make \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5fc5\u987b\u4f7f\u7528 Make \u7684 3.81 \u7248\u672c \uff0c\u5426\u5219\u6784\u5efa\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\u5982\u679c\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684 Make\uff0c\u8bf7\u68c0\u67e5\u6784\u5efa CARLA \u65f6\u5728 PATH \u4e2d\u4f7f\u7528\u7684\u7248\u672c\u662f\u5426\u4e3a 3.81\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6765\u68c0\u67e5\u9ed8\u8ba4\u7684 Make \u7248\u672c make --version \u3002 7Zip \u4e00\u6b3e\u6587\u4ef6\u538b\u7f29\u8f6f\u4ef6\u3002\u8fd9\u662f\u81ea\u52a8\u89e3\u538b\u7f29\u8d44\u4ea7\u6587\u4ef6\u6240\u5fc5\u9700\u7684\uff0c\u5e76\u9632\u6b62\u5728\u6784\u5efa\u671f\u95f4\u7531\u4e8e\u9519\u8bef\u6216\u90e8\u5206\u63d0\u53d6\u5927\u6587\u4ef6\u800c\u51fa\u73b0\u9519\u8bef\u3002 Python3 x64 \u662f CARLA \u4e2d\u7684\u4e3b\u8981\u811a\u672c\u8bed\u8a00\u3002\u5b89\u88c5 x32 \u7248\u672c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\uff0c\u56e0\u6b64\u5f3a\u70c8\u5efa\u8bae\u5378\u8f7d\u5b83\u3002 \u91cd\u8981 \u786e\u4fdd\u5c06\u4e0a\u8ff0\u7a0b\u5e8f\u6dfb\u52a0\u5230 \u73af\u5883\u8def\u5f84 \u4e2d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6dfb\u52a0\u7684\u8def\u5f84\u5e94\u4e0e\u7a0b\u5e8f\u7684 bin \u76ee\u5f55\u76f8\u5bf9\u5e94\u3002 Python \u4f9d\u8d56\u9879 \u4ece CARLA 0.9.12 \u5f00\u59cb\uff0c\u7528\u4e8e\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 pip3 \u6765\u5b89\u88c5 Carla \u7684 Python API\u3002\u8981\u68c0\u67e5\u60a8\u662f\u5426\u6709\u5408\u9002\u7684\u7248\u672c\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a pip3 -V \u5982\u679c\u60a8\u9700\u8981\u5347\u7ea7\uff1a pip3 install --upgrade pip \u60a8\u5fc5\u987b\u5b89\u88c5\u4ee5\u4e0b Python \u4f9d\u8d56\u9879\uff1a pip3 install --user setuptools pip3 install --user wheel \u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5 Visual Studio 2019 \u4ece \u6b64\u5904 \u83b7\u53d6 2019 \u7248 Visual Studio \u3002\u9009\u62e9 \u793e\u533a \u4f5c\u4e3a\u514d\u8d39\u7248\u672c\u3002\u4f7f\u7528 Visual Studio \u5b89\u88c5\u7a0b\u5e8f \u5b89\u88c5\u4e09\u4e2a\u9644\u52a0\u5143\u7d20\uff1a Windows 8.1 SDK. Select it in the Installation details section on the right or go to the Indivdual Components tab and look under the SDKs, libraries, and frameworks heading. x64 Visual C++ Toolset. In the Workloads section, choose Desktop development with C++ . This will enable a x64 command prompt that will be used for the build. Check that it has been installed correctly by pressing the Windows button and searching for x64 . Be careful not to open a x86_x64 prompt . .NET framework 4.6.2 . In the Workloads section, choose .NET desktop development and then in the Installation details panel on the right, select .NET Framework 4.6.2 development tools . This is required to build Unreal Engine. \u91cd\u8981 Other Visual Studio versions may cause conflict. Even if these have been uninstalled, some registers may persist. To completely clean Visual Studio from the computer, go to Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout and run .\\InstallCleanup.exe -full \u547d\u4ee4\u884c\u53c2\u6570\u5b89\u88c5 \u3002 \u865a\u5e7b\u5f15\u64ce \u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce 4.26 \u7684\u4fee\u6539\u7248\u3002\u8be5\u5206\u652f\u5305\u542b Carla \u7279\u5b9a\u7684\u8865\u4e01\u3002 Be aware that to download this fork of Unreal Engine, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. To build the modified version of Unreal Engine: 1. In a terminal, navigate to the location you want to save Unreal Engine and clone the carla branch: git clone --depth 1 -b carla https://github.com/CarlaUnreal/UnrealEngine.git . \u7b14\u8bb0 \u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u5c3d\u53ef\u80fd\u9760\u8fd1 C:\\\\ \uff0c\u56e0\u4e3a\u5982\u679c\u8def\u5f84\u8d85\u8fc7\u4e00\u5b9a\u957f\u5ea6\uff0c Setup.bat \u5219\u4f1a\u5728\u6b65\u9aa4 3 \u4e2d\u8fd4\u56de\u9519\u8bef\u3002 2. \u8fd0\u884c\u914d\u7f6e\u811a\u672c\uff1a Setup.bat GenerateProjectFiles.bat 3. \u7f16\u8bd1\u4fee\u6539\u540e\u7684\u5f15\u64ce\uff1a Open the UE4.sln file inside the source folder with Visual Studio 2019. In the build bar ensure that you have selected 'Development Editor', 'Win64' and 'UnrealBuildTool' options. Check this guide if you need any help. In the solution explorer, right-click UE4 and select Build . 4. Once the solution is compiled you can open the engine to check that everything was installed correctly by launching the executable Engine\\Binaries\\Win64\\UE4Editor.exe . Note If the installation was successful, this should be recognised by Unreal Engine's version selector. You can check this by right-clicking on any .uproject file and selecting Switch Unreal Engine version . You should see a pop-up showing Source Build at PATH where PATH is the installation path that you have chosen. If you can not see this selector or the Generate Visual Studio project files when you right-click on .uproject files, something went wrong with the Unreal Engine installation and you will likely need to reinstall it correctly. Important A lot has happened so far. It is highly advisable to restart the computer before continuing. \u7b2c\u4e8c\u90e8\u5206\uff1a\u6784\u5efa Carla \u514b\u9686 Carla \u5b58\u50a8\u5e93 CARLA repository The button above will take you to the official repository of the project. Either download from there and extract it locally or clone it using the following command: git clone https://github.com/carla-simulator/carla Note The master branch contains the current release of CARLA with the latest fixes and features. Previous CARLA versions are tagged with the version name. Always remember to check the current branch in git with the command git branch . Get assets Download the latest assets to work with the current version of CARLA by running the following command in the CARLA root folder: Update.bat The assets will be downloaded and extracted to the appropriate location if have 7zip installed. If you do not have this software installed, you will need to manually extract the file contents to Unreal\\CarlaUE4\\Content\\Carla . To download the assets for a specific version of CARLA: From the root CARLA directory, navigate to \\Util\\ContentVersions.txt . This document contains the links to the assets for all CARLA releases. Extract the assets in Unreal\\CarlaUE4\\Content\\Carla . If the path doesn't exist, create it. Extract the file with a command similar to the following: tar -xvzf <assets_file_name>.tar.gz.tar -C C:\\path\\to\\carla\\Unreal\\CarlaUE4\\Content\\Carla Set Unreal Engine environment variable It is necessary to set an environment variable so that CARLA can find the Unreal Engine installation folder. This allows users to choose which specific version of Unreal Engine is to be used. If no environment variable is specified, then CARLA will search for Unreal Engine in the windows registry and use the first version it finds there. To set the environment variable: Open Windows Control Panel and go to Advanced System Settings or search for Advanced System Settings in the Windows search bar. On the Advanced panel open Environment Variables... . Click New... to create the variable. Name the variable UE4_ROOT and choose the path to the installation folder of the desired Unreal Engine installation. Build CARLA This section outlines the commands to build CARLA. All commands should be run in the root CARLA folder. Commands should be executed via the x64 Native Tools Command Prompt for VS 2019 . Open this by clicking the Windows key and searching for x64 . There are two parts to the build process for CARLA, compiling the client and compiling the server. 1. Compile the Python API client : The Python API client grants control over the simulation. Compilation of the Python API client is required the first time you build CARLA and again after you perform any updates. After the client is compiled, you will be able to run scripts to interact with the simulation. The following command compiles the Python API client: make PythonAPI The CARLA client library will be built in two distinct, mutually exclusive forms. This gives users the freedom to choose which form they prefer to run the CARLA client code. The two forms include .egg files and .whl files. Choose one of the following options below to use the client library: A. .egg file The .egg file does not need to be installed. All of CARLA's example scripts automatically look for this file when importing CARLA. If you previously installed a CARLA .whl , the .whl will take precedence over an .egg file. B. .whl file The .whl file should be installed using pip3 : pip3 install <path/to/wheel>.whl This .whl file cannot be distributed as it is built specifically for your OS. Warning Issues can arise through the use of different methods to install the CARLA client library and having different versions of CARLA on your system. It is recommended to use virtual environments when installing the .whl and to uninstall any previously installed client libraries before installing new ones. 2. Compile the server : The following command compiles and launches Unreal Engine. Run this command each time you want to launch the server or use the Unreal Engine editor: make launch The project may ask to build other instances such as UE4Editor-Carla.dll the first time. Agree in order to open the project. During the first launch, the editor may show warnings regarding shaders and mesh distance fields. These take some time to be loaded and the map will not show properly until then. 3. Start the simulation : Press Play to start the server simulation. The camera can be moved with WASD keys and rotated by clicking the scene while moving the mouse around. Test the simulator using the example scripts inside PythonAPI\\examples . With the simulator running, open a new terminal for each script and run the following commands to spawn some life into the town and create a weather cycle: # Terminal A cd PythonAPI\\examples pip3 install -r requirements.txt python3 generate_traffic.py # Terminal B cd PythonAPI\\examples python3 dynamic_weather.py Important If the simulation is running at a very low FPS rate, go to Edit -> Editor preferences -> Performance in the Unreal Engine editor and disable Use less CPU when in background . Other make commands There are more make commands that you may find useful. Find them in the table below: Command Description make help Prints all available commands. make launch Launches CARLA server in Editor window. make PythonAPI Builds the CARLA client. make LibCarla Prepares the CARLA library to be imported anywhere. make package Builds CARLA and creates a packaged version for distribution. make clean Deletes all the binaries and temporals generated by the build system. make rebuild make clean and make launch both in one command. Read the F.A.Q. page or post in the CARLA forum for any issues regarding this guide. Now that you have built CARLA, learn how to update the CARLA build or take your first steps in the simulation, and learn some core concepts. Update CARLA First steps","title":"Windows \u6784\u5efa"},{"location":"build_windows/#windows","text":"\u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Windows \u4e0a\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002\u6709\u4e24\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u8981\u6c42\u548c\u6240\u9700\u8f6f\u4ef6\u7684\u5b89\u88c5\uff0c\u7b2c\u4e8c\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5b9e\u9645\u6784\u5efa\u548c\u8fd0\u884c CARLA\u3002 \u6784\u5efa\u8fc7\u7a0b\u5f88\u957f\uff084\u5c0f\u65f6\u6216\u66f4\u957f\u65f6\u95f4\uff09\u5e76\u4e14\u6d89\u53ca\u591a\u79cd\u8f6f\u4ef6\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u59cb\u4e4b\u524d\u5b8c\u6574\u9605\u8bfb\u8be5\u6307\u5357\u3002 \u5982\u679c\u60a8\u9047\u5230\u9519\u8bef\u6216\u56f0\u96be\uff0c\u8bf7\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u6700\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6216\u8005\uff0c\u4f7f\u7528 CARLA \u8bba\u575b \u53d1\u5e03\u60a8\u53ef\u80fd\u6709\u7684\u4efb\u4f55\u7591\u95ee\u3002 \u7b2c\u4e00\u90e8\u5206\uff1a\u5148\u51b3\u6761\u4ef6 \u7cfb\u7edf\u8981\u6c42 \u8f6f\u4ef6\u8981\u6c42 \u57fa\u7840\u8f6f\u4ef6\u5b89\u88c5 Python \u4f9d\u8d56\u9879 \u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5 Visual Studio 2019 \u865a\u5e7b\u5f15\u64ce \u7b2c\u4e8c\u90e8\u5206\uff1a\u6784\u5efa Carla \u514b\u9686 Carla \u4ed3\u5e93 \u83b7\u53d6\u8d44\u4ea7 \u8bbe\u7f6e\u865a\u5e7b\u5f15\u64ce\u73af\u5883\u53d8\u91cf \u6784\u5efa Carla \u5176\u4ed6 make \u547d\u4ee4","title":"Windows \u4e0b\u7684\u6784\u5efa"},{"location":"build_windows/#_1","text":"\u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u627e\u5230\u5f00\u59cb\u6784\u5efa Carla \u4e4b\u524d\u6240\u9700\u7684\u7cfb\u7edf\u8981\u6c42\u3001\u6b21\u8981\u548c\u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5\u4ee5\u53ca Python \u4f9d\u8d56\u9879\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u7b2c\u4e00\u90e8\u5206\uff1a\u5148\u51b3\u6761\u4ef6"},{"location":"build_windows/#_2","text":"64 \u4f4d\u64cd\u4f5c\u7cfb\u7edf\u3002 \u6a21\u62df\u5668\u5e94\u5728\u4efb\u4f55 64 \u4f4d Windows \u7cfb\u7edf\u4e2d\u8fd0\u884c\u3002 165 GB \u78c1\u76d8\u7a7a\u95f4\u3002 CARLA \u672c\u8eab\u5c06\u5360\u7528\u5927\u7ea6 32 GB\uff0c\u76f8\u5173\u7684\u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5\uff08\u5305\u62ec\u865a\u5e7b\u5f15\u64ce\uff09\u5c06\u5360\u7528\u5927\u7ea6 133 GB\u3002 \u8db3\u591f\u7684 GPU\u3002 CARLA \u65e8\u5728\u5b9e\u73b0\u771f\u5b9e\u6a21\u62df\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u81f3\u5c11\u9700\u8981 6 GB GPU\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 8 GB\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u4e13\u7528 GPU \u8fdb\u884c\u673a\u5668\u5b66\u4e60\u3002 \u4e24\u4e2a TCP \u7aef\u53e3\u548c\u826f\u597d\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002 \u9ed8\u8ba4\u7aef\u53e3\u4e3a 2000 \u548c 2001 \u3002 \u786e\u4fdd\u8fd9\u4e9b\u7aef\u53e3\u672a\u88ab\u9632\u706b\u5899\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u963b\u6b62\u3002 ..\u8b66\u544a:: \u5982\u679c\u60a8\u8981\u4ece CARLA 0.9.12 \u5347\u7ea7\u5230 0.9.13 : \u60a8\u5fc5\u987b\u9996\u5148\u5c06\u865a\u5e7b\u5f15\u64ce 4 \u7684 CARLA \u5206\u652f\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u3002\u6709\u5173\u5347\u7ea7\u865a\u5e7b\u5f15\u64ce 4 \u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u865a\u5e7b\u5f15\u64ce \u90e8\u5206\u3002","title":"\u7cfb\u7edf\u8981\u6c42"},{"location":"build_windows/#_3","text":"","title":"\u8f6f\u4ef6\u8981\u6c42"},{"location":"build_windows/#_4","text":"CMake \u4ece\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u6807\u51c6\u6784\u5efa\u6587\u4ef6\u3002 Git \u662f\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406 Carla \u5b58\u50a8\u5e93\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 Make \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5fc5\u987b\u4f7f\u7528 Make \u7684 3.81 \u7248\u672c \uff0c\u5426\u5219\u6784\u5efa\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\u5982\u679c\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684 Make\uff0c\u8bf7\u68c0\u67e5\u6784\u5efa CARLA \u65f6\u5728 PATH \u4e2d\u4f7f\u7528\u7684\u7248\u672c\u662f\u5426\u4e3a 3.81\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6765\u68c0\u67e5\u9ed8\u8ba4\u7684 Make \u7248\u672c make --version \u3002 7Zip \u4e00\u6b3e\u6587\u4ef6\u538b\u7f29\u8f6f\u4ef6\u3002\u8fd9\u662f\u81ea\u52a8\u89e3\u538b\u7f29\u8d44\u4ea7\u6587\u4ef6\u6240\u5fc5\u9700\u7684\uff0c\u5e76\u9632\u6b62\u5728\u6784\u5efa\u671f\u95f4\u7531\u4e8e\u9519\u8bef\u6216\u90e8\u5206\u63d0\u53d6\u5927\u6587\u4ef6\u800c\u51fa\u73b0\u9519\u8bef\u3002 Python3 x64 \u662f CARLA \u4e2d\u7684\u4e3b\u8981\u811a\u672c\u8bed\u8a00\u3002\u5b89\u88c5 x32 \u7248\u672c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\uff0c\u56e0\u6b64\u5f3a\u70c8\u5efa\u8bae\u5378\u8f7d\u5b83\u3002 \u91cd\u8981 \u786e\u4fdd\u5c06\u4e0a\u8ff0\u7a0b\u5e8f\u6dfb\u52a0\u5230 \u73af\u5883\u8def\u5f84 \u4e2d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6dfb\u52a0\u7684\u8def\u5f84\u5e94\u4e0e\u7a0b\u5e8f\u7684 bin \u76ee\u5f55\u76f8\u5bf9\u5e94\u3002","title":"\u57fa\u7840\u8f6f\u4ef6\u5b89\u88c5"},{"location":"build_windows/#python","text":"\u4ece CARLA 0.9.12 \u5f00\u59cb\uff0c\u7528\u4e8e\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 pip3 \u6765\u5b89\u88c5 Carla \u7684 Python API\u3002\u8981\u68c0\u67e5\u60a8\u662f\u5426\u6709\u5408\u9002\u7684\u7248\u672c\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a pip3 -V \u5982\u679c\u60a8\u9700\u8981\u5347\u7ea7\uff1a pip3 install --upgrade pip \u60a8\u5fc5\u987b\u5b89\u88c5\u4ee5\u4e0b Python \u4f9d\u8d56\u9879\uff1a pip3 install --user setuptools pip3 install --user wheel","title":"Python \u4f9d\u8d56\u9879"},{"location":"build_windows/#_5","text":"","title":"\u4e3b\u8981\u8f6f\u4ef6\u5b89\u88c5"},{"location":"build_windows/#visual-studio-2019","text":"\u4ece \u6b64\u5904 \u83b7\u53d6 2019 \u7248 Visual Studio \u3002\u9009\u62e9 \u793e\u533a \u4f5c\u4e3a\u514d\u8d39\u7248\u672c\u3002\u4f7f\u7528 Visual Studio \u5b89\u88c5\u7a0b\u5e8f \u5b89\u88c5\u4e09\u4e2a\u9644\u52a0\u5143\u7d20\uff1a Windows 8.1 SDK. Select it in the Installation details section on the right or go to the Indivdual Components tab and look under the SDKs, libraries, and frameworks heading. x64 Visual C++ Toolset. In the Workloads section, choose Desktop development with C++ . This will enable a x64 command prompt that will be used for the build. Check that it has been installed correctly by pressing the Windows button and searching for x64 . Be careful not to open a x86_x64 prompt . .NET framework 4.6.2 . In the Workloads section, choose .NET desktop development and then in the Installation details panel on the right, select .NET Framework 4.6.2 development tools . This is required to build Unreal Engine. \u91cd\u8981 Other Visual Studio versions may cause conflict. Even if these have been uninstalled, some registers may persist. To completely clean Visual Studio from the computer, go to Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\layout and run .\\InstallCleanup.exe -full \u547d\u4ee4\u884c\u53c2\u6570\u5b89\u88c5 \u3002","title":"Visual Studio 2019"},{"location":"build_windows/#_6","text":"\u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCarla \u4f7f\u7528\u865a\u5e7b\u5f15\u64ce 4.26 \u7684\u4fee\u6539\u7248\u3002\u8be5\u5206\u652f\u5305\u542b Carla \u7279\u5b9a\u7684\u8865\u4e01\u3002 Be aware that to download this fork of Unreal Engine, you need to have a GitHub account linked to Unreal Engine's account . If you don't have this set up, please follow this guide before going any further. To build the modified version of Unreal Engine: 1. In a terminal, navigate to the location you want to save Unreal Engine and clone the carla branch: git clone --depth 1 -b carla https://github.com/CarlaUnreal/UnrealEngine.git . \u7b14\u8bb0 \u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u5c3d\u53ef\u80fd\u9760\u8fd1 C:\\\\ \uff0c\u56e0\u4e3a\u5982\u679c\u8def\u5f84\u8d85\u8fc7\u4e00\u5b9a\u957f\u5ea6\uff0c Setup.bat \u5219\u4f1a\u5728\u6b65\u9aa4 3 \u4e2d\u8fd4\u56de\u9519\u8bef\u3002 2. \u8fd0\u884c\u914d\u7f6e\u811a\u672c\uff1a Setup.bat GenerateProjectFiles.bat 3. \u7f16\u8bd1\u4fee\u6539\u540e\u7684\u5f15\u64ce\uff1a Open the UE4.sln file inside the source folder with Visual Studio 2019. In the build bar ensure that you have selected 'Development Editor', 'Win64' and 'UnrealBuildTool' options. Check this guide if you need any help. In the solution explorer, right-click UE4 and select Build . 4. Once the solution is compiled you can open the engine to check that everything was installed correctly by launching the executable Engine\\Binaries\\Win64\\UE4Editor.exe . Note If the installation was successful, this should be recognised by Unreal Engine's version selector. You can check this by right-clicking on any .uproject file and selecting Switch Unreal Engine version . You should see a pop-up showing Source Build at PATH where PATH is the installation path that you have chosen. If you can not see this selector or the Generate Visual Studio project files when you right-click on .uproject files, something went wrong with the Unreal Engine installation and you will likely need to reinstall it correctly. Important A lot has happened so far. It is highly advisable to restart the computer before continuing.","title":"\u865a\u5e7b\u5f15\u64ce"},{"location":"build_windows/#carla","text":"","title":"\u7b2c\u4e8c\u90e8\u5206\uff1a\u6784\u5efa Carla"},{"location":"build_windows/#carla_1","text":"CARLA repository The button above will take you to the official repository of the project. Either download from there and extract it locally or clone it using the following command: git clone https://github.com/carla-simulator/carla Note The master branch contains the current release of CARLA with the latest fixes and features. Previous CARLA versions are tagged with the version name. Always remember to check the current branch in git with the command git branch .","title":"\u514b\u9686 Carla \u5b58\u50a8\u5e93"},{"location":"build_windows/#get-assets","text":"Download the latest assets to work with the current version of CARLA by running the following command in the CARLA root folder: Update.bat The assets will be downloaded and extracted to the appropriate location if have 7zip installed. If you do not have this software installed, you will need to manually extract the file contents to Unreal\\CarlaUE4\\Content\\Carla . To download the assets for a specific version of CARLA: From the root CARLA directory, navigate to \\Util\\ContentVersions.txt . This document contains the links to the assets for all CARLA releases. Extract the assets in Unreal\\CarlaUE4\\Content\\Carla . If the path doesn't exist, create it. Extract the file with a command similar to the following: tar -xvzf <assets_file_name>.tar.gz.tar -C C:\\path\\to\\carla\\Unreal\\CarlaUE4\\Content\\Carla","title":"Get assets"},{"location":"build_windows/#set-unreal-engine-environment-variable","text":"It is necessary to set an environment variable so that CARLA can find the Unreal Engine installation folder. This allows users to choose which specific version of Unreal Engine is to be used. If no environment variable is specified, then CARLA will search for Unreal Engine in the windows registry and use the first version it finds there. To set the environment variable: Open Windows Control Panel and go to Advanced System Settings or search for Advanced System Settings in the Windows search bar. On the Advanced panel open Environment Variables... . Click New... to create the variable. Name the variable UE4_ROOT and choose the path to the installation folder of the desired Unreal Engine installation.","title":"Set Unreal Engine environment variable"},{"location":"build_windows/#build-carla","text":"This section outlines the commands to build CARLA. All commands should be run in the root CARLA folder. Commands should be executed via the x64 Native Tools Command Prompt for VS 2019 . Open this by clicking the Windows key and searching for x64 . There are two parts to the build process for CARLA, compiling the client and compiling the server. 1. Compile the Python API client : The Python API client grants control over the simulation. Compilation of the Python API client is required the first time you build CARLA and again after you perform any updates. After the client is compiled, you will be able to run scripts to interact with the simulation. The following command compiles the Python API client: make PythonAPI The CARLA client library will be built in two distinct, mutually exclusive forms. This gives users the freedom to choose which form they prefer to run the CARLA client code. The two forms include .egg files and .whl files. Choose one of the following options below to use the client library: A. .egg file The .egg file does not need to be installed. All of CARLA's example scripts automatically look for this file when importing CARLA. If you previously installed a CARLA .whl , the .whl will take precedence over an .egg file. B. .whl file The .whl file should be installed using pip3 : pip3 install <path/to/wheel>.whl This .whl file cannot be distributed as it is built specifically for your OS. Warning Issues can arise through the use of different methods to install the CARLA client library and having different versions of CARLA on your system. It is recommended to use virtual environments when installing the .whl and to uninstall any previously installed client libraries before installing new ones. 2. Compile the server : The following command compiles and launches Unreal Engine. Run this command each time you want to launch the server or use the Unreal Engine editor: make launch The project may ask to build other instances such as UE4Editor-Carla.dll the first time. Agree in order to open the project. During the first launch, the editor may show warnings regarding shaders and mesh distance fields. These take some time to be loaded and the map will not show properly until then. 3. Start the simulation : Press Play to start the server simulation. The camera can be moved with WASD keys and rotated by clicking the scene while moving the mouse around. Test the simulator using the example scripts inside PythonAPI\\examples . With the simulator running, open a new terminal for each script and run the following commands to spawn some life into the town and create a weather cycle: # Terminal A cd PythonAPI\\examples pip3 install -r requirements.txt python3 generate_traffic.py # Terminal B cd PythonAPI\\examples python3 dynamic_weather.py Important If the simulation is running at a very low FPS rate, go to Edit -> Editor preferences -> Performance in the Unreal Engine editor and disable Use less CPU when in background .","title":"Build CARLA"},{"location":"build_windows/#other-make-commands","text":"There are more make commands that you may find useful. Find them in the table below: Command Description make help Prints all available commands. make launch Launches CARLA server in Editor window. make PythonAPI Builds the CARLA client. make LibCarla Prepares the CARLA library to be imported anywhere. make package Builds CARLA and creates a packaged version for distribution. make clean Deletes all the binaries and temporals generated by the build system. make rebuild make clean and make launch both in one command. Read the F.A.Q. page or post in the CARLA forum for any issues regarding this guide. Now that you have built CARLA, learn how to update the CARLA build or take your first steps in the simulation, and learn some core concepts. Update CARLA First steps","title":"Other make commands"},{"location":"catalogue/","text":"Carla \u76ee\u5f55 Carla \u4eff\u771f\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u4e09\u7ef4\u8d44\u4ea7\u5e93\u6765\u586b\u5145\u60a8\u7684\u81ea\u4e3b\u4ee3\u7406\u7684\u865a\u62df\u73af\u5883\u3002\u4e09\u7ef4\u8d44\u6e90\u5e93\u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u4f9b\u9009\u62e9\u7684\u9884\u6784\u5efa\u5730\u56fe\u3001\u7528\u4e8e\u4ea4\u901a\u4eff\u771f\u7684\u5404\u79cd\u8f66\u8f86\u6a21\u578b\u4ee5\u53ca\u884c\u4eba\u548c\u5176\u4ed6\u7ed3\u6784\u6216\u969c\u788d\u7269\u7684\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6dfb\u52a0\u5230\u60a8\u7684\u6a21\u62df\u4e2d\u3002\u8be5\u76ee\u5f55\u8bb0\u5f55\u4e86\u53ef\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u4e09\u7ef4\u8d44\u6e90\u3002 \u8f66\u8f86\u76ee\u5f55 \u884c\u4eba\u76ee\u5f55 \u9053\u5177\u76ee\u5f55 \u5730\u56fe Carla \u6a21\u62df\u5668\u63d0\u4f9b 10 \u4e2a\u9884\u6784\u5efa\u5730\u56fe\u53ef\u4f9b\u9009\u62e9\uff0c\u4e3a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u81ea\u4e3b\u4ee3\u7406\u63d0\u4f9b\u4e86\u591a\u79cd\u73af\u5883\u3002 \u57ce\u9547 \u6982\u51b5 Town01 \u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u9547\uff0c\u6709\u4e00\u6761\u6cb3\u6d41\u548c\u51e0\u5ea7\u6865\u6881\u3002 Town02 \u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u9547\uff0c\u4f4f\u5b85\u548c\u5546\u4e1a\u5efa\u7b51\u6df7\u5408\u5728\u4e00\u8d77\u3002 Town03 \u66f4\u5927\u7684\u57ce\u5e02\u5730\u56fe\uff0c\u5e26\u6709\u73af\u5c9b\u548c\u5927\u578b\u8def\u53e3\u3002 Town04 \u4e00\u5ea7\u9576\u5d4c\u5728\u7fa4\u5c71\u4e4b\u4e2d\u7684\u5c0f\u9547\uff0c\u6709\u4e00\u6761\u7279\u6b8a\u7684\u201c8 \u5b57\u5f62\u201d \u65e0\u9650 \u516c\u8def\u3002 Town05 \u65b9\u5f62\u7f51\u683c\u57ce\u9547\uff0c\u6709\u5341\u5b57\u8def\u53e3\u548c\u4e00\u5ea7\u6865\u6881\u3002\u6bcf\u4e2a\u65b9\u5411\u6709\u591a\u4e2a\u8f66\u9053\u3002\u5bf9\u4e8e\u6267\u884c\u53d8\u9053\u5f88\u6709\u7528\u3002 Town06 \u957f\u7684\u591a\u8f66\u9053\u9ad8\u901f\u516c\u8def\uff0c\u6709\u8bb8\u591a\u9ad8\u901f\u516c\u8def\u5165\u53e3\u548c\u51fa\u53e3\u3002\u5b83\u8fd8\u6709\u4e00\u4e2a \u5bc6\u6b47\u6839\u5de6\u7ffc \u3002 Town07 \u4e61\u6751\u73af\u5883\uff0c\u9053\u8def\u72ed\u7a84\uff0c\u6709\u7389\u7c73\u3001\u8c37\u4ed3\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea2\u7eff\u706f\u3002 Town08 \u7528\u4e8e \u6392\u884c\u699c \u6311\u6218\u7684\u79d8\u5bc6\u201c\u770b\u4e0d\u89c1\u201d\u5c0f\u9547\u3002 Town09 \u7528\u4e8e \u6392\u884c\u699c \u6311\u6218\u7684\u79d8\u5bc6\u201c\u770b\u4e0d\u89c1\u201d\u5c0f\u9547\u3002 Town10 \u5e02\u4e2d\u5fc3\u7684\u57ce\u5e02\u73af\u5883\uff0c\u62e5\u6709\u6469\u5929\u5927\u697c\u3001\u4f4f\u5b85\u697c\u548c\u6d77\u6ee8\u957f\u5eca\u3002 Town11 \u672a\u88c5\u9970\u7684\u5927\u5730\u56fe\u3002\u7528\u4f5c\u5927\u5730\u56fe\u529f\u80fd\u7684\u6982\u5ff5\u8bc1\u660e\u3002 Town12 \u4e00\u5f20\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u533a\u57df\u7684\u5927\u5730\u56fe\uff0c\u5305\u62ec\u9ad8\u5c42\u5efa\u7b51\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u73af\u5883\u3002 Town13 \u4e00\u5f20\u4e0e 12 \u53f7\u9547\u89c4\u6a21\u76f8\u4f3c\u7684\u5927\u5730\u56fe\uff0c\u4f46\u5177\u6709\u9c9c\u660e\u7684\u7279\u8272\u3002 Town15 \u57fa\u4e8e\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u9053\u8def\u5e03\u5c40\u7684\u5730\u56fe\u3002 \u8f66\u8f86 Carla \u63d0\u4f9b\u5404\u79cd\u8f66\u8f86\uff0c\u4ee5\u53ca\u73b0\u5b9e\u4e16\u754c\u6c7d\u8f66\u3001\u5361\u8f66\u548c\u81ea\u884c\u8f66\u7684\u9ad8\u4fdd\u771f\u6a21\u578b\uff0c\u7528\u4e8e\u5728\u6a21\u62df\u4e2d\u590d\u5236\u4ea4\u901a\u3002\u5728 \u8f66\u8f86\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u8f86\u3002 \u884c\u4eba Carla \u7684\u8d44\u4ea7\u5e93\u5305\u542b\u5404\u79cd\u884c\u4eba\uff0c\u53ef\u6a21\u62df\u4ee3\u7406\u5468\u56f4\u4e09\u7ef4\u73af\u5883\u4e2d\u7684\u4eba\u6d41\u91cf\u3002\u5728 \u884c\u4eba\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u60f3\u8981\u7684\u884c\u4eba\u3002 \u9053\u5177 Carla \u7684\u9053\u5177\u6a21\u62df\u4e86\u60a8\u53ef\u80fd\u5728\u9053\u8def\u4e0a\u6216\u9053\u8def\u9644\u8fd1\u53d1\u73b0\u7684\u5404\u79cd\u7ed3\u6784\u548c\u7269\u54c1\uff0c\u4f8b\u5982\u4fe1\u606f\u4ead\u3001\u96d5\u50cf\u3001\u957f\u51f3\u3001\u76d2\u5b50\u3001\u5783\u573e\u7bb1\u3001\u788e\u7247\u6216\u5783\u573e\u3002\u8fd9\u4e9b\u9053\u5177\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u653e\u7f6e\u5728\u6a21\u62df\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5728 \u9053\u5177\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u7684\u9053\u5177\u3002","title":"Carla \u76ee\u5f55"},{"location":"catalogue/#carla","text":"Carla \u4eff\u771f\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u4e09\u7ef4\u8d44\u4ea7\u5e93\u6765\u586b\u5145\u60a8\u7684\u81ea\u4e3b\u4ee3\u7406\u7684\u865a\u62df\u73af\u5883\u3002\u4e09\u7ef4\u8d44\u6e90\u5e93\u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u4f9b\u9009\u62e9\u7684\u9884\u6784\u5efa\u5730\u56fe\u3001\u7528\u4e8e\u4ea4\u901a\u4eff\u771f\u7684\u5404\u79cd\u8f66\u8f86\u6a21\u578b\u4ee5\u53ca\u884c\u4eba\u548c\u5176\u4ed6\u7ed3\u6784\u6216\u969c\u788d\u7269\u7684\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6dfb\u52a0\u5230\u60a8\u7684\u6a21\u62df\u4e2d\u3002\u8be5\u76ee\u5f55\u8bb0\u5f55\u4e86\u53ef\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u4e09\u7ef4\u8d44\u6e90\u3002 \u8f66\u8f86\u76ee\u5f55 \u884c\u4eba\u76ee\u5f55 \u9053\u5177\u76ee\u5f55","title":"Carla \u76ee\u5f55"},{"location":"catalogue/#_1","text":"Carla \u6a21\u62df\u5668\u63d0\u4f9b 10 \u4e2a\u9884\u6784\u5efa\u5730\u56fe\u53ef\u4f9b\u9009\u62e9\uff0c\u4e3a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u81ea\u4e3b\u4ee3\u7406\u63d0\u4f9b\u4e86\u591a\u79cd\u73af\u5883\u3002 \u57ce\u9547 \u6982\u51b5 Town01 \u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u9547\uff0c\u6709\u4e00\u6761\u6cb3\u6d41\u548c\u51e0\u5ea7\u6865\u6881\u3002 Town02 \u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u9547\uff0c\u4f4f\u5b85\u548c\u5546\u4e1a\u5efa\u7b51\u6df7\u5408\u5728\u4e00\u8d77\u3002 Town03 \u66f4\u5927\u7684\u57ce\u5e02\u5730\u56fe\uff0c\u5e26\u6709\u73af\u5c9b\u548c\u5927\u578b\u8def\u53e3\u3002 Town04 \u4e00\u5ea7\u9576\u5d4c\u5728\u7fa4\u5c71\u4e4b\u4e2d\u7684\u5c0f\u9547\uff0c\u6709\u4e00\u6761\u7279\u6b8a\u7684\u201c8 \u5b57\u5f62\u201d \u65e0\u9650 \u516c\u8def\u3002 Town05 \u65b9\u5f62\u7f51\u683c\u57ce\u9547\uff0c\u6709\u5341\u5b57\u8def\u53e3\u548c\u4e00\u5ea7\u6865\u6881\u3002\u6bcf\u4e2a\u65b9\u5411\u6709\u591a\u4e2a\u8f66\u9053\u3002\u5bf9\u4e8e\u6267\u884c\u53d8\u9053\u5f88\u6709\u7528\u3002 Town06 \u957f\u7684\u591a\u8f66\u9053\u9ad8\u901f\u516c\u8def\uff0c\u6709\u8bb8\u591a\u9ad8\u901f\u516c\u8def\u5165\u53e3\u548c\u51fa\u53e3\u3002\u5b83\u8fd8\u6709\u4e00\u4e2a \u5bc6\u6b47\u6839\u5de6\u7ffc \u3002 Town07 \u4e61\u6751\u73af\u5883\uff0c\u9053\u8def\u72ed\u7a84\uff0c\u6709\u7389\u7c73\u3001\u8c37\u4ed3\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea2\u7eff\u706f\u3002 Town08 \u7528\u4e8e \u6392\u884c\u699c \u6311\u6218\u7684\u79d8\u5bc6\u201c\u770b\u4e0d\u89c1\u201d\u5c0f\u9547\u3002 Town09 \u7528\u4e8e \u6392\u884c\u699c \u6311\u6218\u7684\u79d8\u5bc6\u201c\u770b\u4e0d\u89c1\u201d\u5c0f\u9547\u3002 Town10 \u5e02\u4e2d\u5fc3\u7684\u57ce\u5e02\u73af\u5883\uff0c\u62e5\u6709\u6469\u5929\u5927\u697c\u3001\u4f4f\u5b85\u697c\u548c\u6d77\u6ee8\u957f\u5eca\u3002 Town11 \u672a\u88c5\u9970\u7684\u5927\u5730\u56fe\u3002\u7528\u4f5c\u5927\u5730\u56fe\u529f\u80fd\u7684\u6982\u5ff5\u8bc1\u660e\u3002 Town12 \u4e00\u5f20\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u533a\u57df\u7684\u5927\u5730\u56fe\uff0c\u5305\u62ec\u9ad8\u5c42\u5efa\u7b51\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u73af\u5883\u3002 Town13 \u4e00\u5f20\u4e0e 12 \u53f7\u9547\u89c4\u6a21\u76f8\u4f3c\u7684\u5927\u5730\u56fe\uff0c\u4f46\u5177\u6709\u9c9c\u660e\u7684\u7279\u8272\u3002 Town15 \u57fa\u4e8e\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u9053\u8def\u5e03\u5c40\u7684\u5730\u56fe\u3002","title":"\u5730\u56fe"},{"location":"catalogue/#_2","text":"Carla \u63d0\u4f9b\u5404\u79cd\u8f66\u8f86\uff0c\u4ee5\u53ca\u73b0\u5b9e\u4e16\u754c\u6c7d\u8f66\u3001\u5361\u8f66\u548c\u81ea\u884c\u8f66\u7684\u9ad8\u4fdd\u771f\u6a21\u578b\uff0c\u7528\u4e8e\u5728\u6a21\u62df\u4e2d\u590d\u5236\u4ea4\u901a\u3002\u5728 \u8f66\u8f86\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u8f86\u3002","title":"\u8f66\u8f86"},{"location":"catalogue/#_3","text":"Carla \u7684\u8d44\u4ea7\u5e93\u5305\u542b\u5404\u79cd\u884c\u4eba\uff0c\u53ef\u6a21\u62df\u4ee3\u7406\u5468\u56f4\u4e09\u7ef4\u73af\u5883\u4e2d\u7684\u4eba\u6d41\u91cf\u3002\u5728 \u884c\u4eba\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u60f3\u8981\u7684\u884c\u4eba\u3002","title":"\u884c\u4eba"},{"location":"catalogue/#_4","text":"Carla \u7684\u9053\u5177\u6a21\u62df\u4e86\u60a8\u53ef\u80fd\u5728\u9053\u8def\u4e0a\u6216\u9053\u8def\u9644\u8fd1\u53d1\u73b0\u7684\u5404\u79cd\u7ed3\u6784\u548c\u7269\u54c1\uff0c\u4f8b\u5982\u4fe1\u606f\u4ead\u3001\u96d5\u50cf\u3001\u957f\u51f3\u3001\u76d2\u5b50\u3001\u5783\u573e\u7bb1\u3001\u788e\u7247\u6216\u5783\u573e\u3002\u8fd9\u4e9b\u9053\u5177\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u653e\u7f6e\u5728\u6a21\u62df\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5728 \u9053\u5177\u76ee\u5f55 \u4e2d\u6d4f\u89c8\u5e76\u9009\u62e9\u60a8\u7684\u9053\u5177\u3002","title":"\u9053\u5177"},{"location":"catalogue_pedestrians/","text":"\u884c\u4eba\u76ee\u5f55 \u6210\u5e74\u4eba \u6210\u5e74\u884c\u4eba - 1 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u53d8\u4f53 5 \u53d8\u4f53 6 \u6210\u5e74\u884c\u4eba - 2 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u6210\u5e74\u884c\u4eba - 3 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 4 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 5 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 6 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 7 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 8 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 9 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 10 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u6210\u5e74\u884c\u4eba - 11 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 12 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 13 \u53d8\u4f53 1 \u6210\u5e74\u884c\u4eba - 14 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 15 \u53d8\u4f53 1 \u53d8\u4f53 2 \u5c0f\u5b69 \u5c0f\u5b69\u884c\u4eba - 1 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u5c0f\u5b69\u884c\u4eba - 2 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u5c0f\u5b69\u884c\u4eba - 3 \u53d8\u4f53 1 \u5c0f\u5b69\u884c\u4eba - 4 \u53d8\u4f53 1 \u8b66\u5bdf \u8b66\u5bdf - 1 \u8b66\u5bdf - 2 \u6210\u5e74\u4eba \u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0001 \u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0005 \u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0006 \u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 4 \u84dd\u56fe ID : walker.pedestrian.0007 \u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 5 \u84dd\u56fe ID : walker.pedestrian.0008 \u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0004 \u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0003 \u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0002 \u6210\u5e74\u884c\u4eba 3 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0015 \u6210\u5e74\u884c\u4eba 3 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0019 \u6210\u5e74\u884c\u4eba 4 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0016 \u6210\u5e74\u884c\u4eba 4 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0017 \u6210\u5e74\u884c\u4eba 5 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0026 \u6210\u5e74\u884c\u4eba 5 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0018 \u6210\u5e74\u884c\u4eba 6 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0021 \u6210\u5e74\u884c\u4eba 6 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0020 \u6210\u5e74\u884c\u4eba 7 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0023 \u6210\u5e74\u884c\u4eba 7 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0022 \u6210\u5e74\u884c\u4eba 8 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0024 \u6210\u5e74\u884c\u4eba 8 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0025 \u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0027 \u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0029 \u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0028 \u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0041 \u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0040 \u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0033 \u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 4 \u84dd\u56fe ID : walker.pedestrian.0031 \u6210\u5e74\u884c\u4eba 11 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0034 \u6210\u5e74\u884c\u4eba 11 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0038 \u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0035 \u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0036 \u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0037 \u6210\u5e74\u884c\u4eba 13 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0039 \u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0042 \u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0043 \u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0044 \u6210\u5e74\u884c\u4eba 15 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0047 \u6210\u5e74\u884c\u4eba 15 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0046 Children Child pedestrian 1 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0011 Child pedestrian 1 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0010 Child pedestrian 1 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0009 Child pedestrian 2 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0014 Child pedestrian 2 - \u53d8\u4f53 2 \u84dd\u56fe ID : walker.pedestrian.0013 Child pedestrian 2 - \u53d8\u4f53 3 \u84dd\u56fe ID : walker.pedestrian.0012 Child pedestrian 3 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0048 Child pedestrian 4 - \u53d8\u4f53 1 \u84dd\u56fe ID : walker.pedestrian.0049 \u8b66\u5bdf \u8b66\u5bdf 1 \u84dd\u56fe ID : walker.pedestrian.0030 \u8b66\u5bdf 2 \u84dd\u56fe ID : walker.pedestrian.0032","title":"\u884c\u4eba\u76ee\u5f55"},{"location":"catalogue_pedestrians/#_1","text":"","title":"\u884c\u4eba\u76ee\u5f55"},{"location":"catalogue_pedestrians/#_2","text":"\u6210\u5e74\u884c\u4eba - 1 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u53d8\u4f53 5 \u53d8\u4f53 6 \u6210\u5e74\u884c\u4eba - 2 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u6210\u5e74\u884c\u4eba - 3 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 4 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 5 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 6 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 7 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 8 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 9 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 10 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u53d8\u4f53 4 \u6210\u5e74\u884c\u4eba - 11 \u53d8\u4f53 1 \u53d8\u4f53 2 \u6210\u5e74\u884c\u4eba - 12 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 13 \u53d8\u4f53 1 \u6210\u5e74\u884c\u4eba - 14 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u6210\u5e74\u884c\u4eba - 15 \u53d8\u4f53 1 \u53d8\u4f53 2","title":"\u6210\u5e74\u4eba"},{"location":"catalogue_pedestrians/#_3","text":"\u5c0f\u5b69\u884c\u4eba - 1 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u5c0f\u5b69\u884c\u4eba - 2 \u53d8\u4f53 1 \u53d8\u4f53 2 \u53d8\u4f53 3 \u5c0f\u5b69\u884c\u4eba - 3 \u53d8\u4f53 1 \u5c0f\u5b69\u884c\u4eba - 4 \u53d8\u4f53 1","title":"\u5c0f\u5b69"},{"location":"catalogue_pedestrians/#_4","text":"\u8b66\u5bdf - 1 \u8b66\u5bdf - 2","title":"\u8b66\u5bdf"},{"location":"catalogue_pedestrians/#_5","text":"","title":"\u6210\u5e74\u4eba"},{"location":"catalogue_pedestrians/#1-1","text":"\u84dd\u56fe ID : walker.pedestrian.0001","title":"\u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#1-2","text":"\u84dd\u56fe ID : walker.pedestrian.0005","title":"\u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#1-3","text":"\u84dd\u56fe ID : walker.pedestrian.0006","title":"\u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#1-4","text":"\u84dd\u56fe ID : walker.pedestrian.0007","title":"\u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 4"},{"location":"catalogue_pedestrians/#1-5","text":"\u84dd\u56fe ID : walker.pedestrian.0008","title":"\u6210\u5e74\u884c\u4eba 1 - \u53d8\u4f53 5"},{"location":"catalogue_pedestrians/#2-1","text":"\u84dd\u56fe ID : walker.pedestrian.0004","title":"\u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#2-2","text":"\u84dd\u56fe ID : walker.pedestrian.0003","title":"\u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#2-3","text":"\u84dd\u56fe ID : walker.pedestrian.0002","title":"\u6210\u5e74\u884c\u4eba 2 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#3-1","text":"\u84dd\u56fe ID : walker.pedestrian.0015","title":"\u6210\u5e74\u884c\u4eba 3 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#3-2","text":"\u84dd\u56fe ID : walker.pedestrian.0019","title":"\u6210\u5e74\u884c\u4eba 3 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#4-1","text":"\u84dd\u56fe ID : walker.pedestrian.0016","title":"\u6210\u5e74\u884c\u4eba 4 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#4-2","text":"\u84dd\u56fe ID : walker.pedestrian.0017","title":"\u6210\u5e74\u884c\u4eba 4 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#5-1","text":"\u84dd\u56fe ID : walker.pedestrian.0026","title":"\u6210\u5e74\u884c\u4eba 5 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#5-2","text":"\u84dd\u56fe ID : walker.pedestrian.0018","title":"\u6210\u5e74\u884c\u4eba 5 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#6-1","text":"\u84dd\u56fe ID : walker.pedestrian.0021","title":"\u6210\u5e74\u884c\u4eba 6 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#6-2","text":"\u84dd\u56fe ID : walker.pedestrian.0020","title":"\u6210\u5e74\u884c\u4eba 6 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#7-1","text":"\u84dd\u56fe ID : walker.pedestrian.0023","title":"\u6210\u5e74\u884c\u4eba 7 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#7-2","text":"\u84dd\u56fe ID : walker.pedestrian.0022","title":"\u6210\u5e74\u884c\u4eba 7 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#8-1","text":"\u84dd\u56fe ID : walker.pedestrian.0024","title":"\u6210\u5e74\u884c\u4eba 8 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#8-2","text":"\u84dd\u56fe ID : walker.pedestrian.0025","title":"\u6210\u5e74\u884c\u4eba 8 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#9-1","text":"\u84dd\u56fe ID : walker.pedestrian.0027","title":"\u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#9-2","text":"\u84dd\u56fe ID : walker.pedestrian.0029","title":"\u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#9-3","text":"\u84dd\u56fe ID : walker.pedestrian.0028","title":"\u6210\u5e74\u884c\u4eba 9 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#10-1","text":"\u84dd\u56fe ID : walker.pedestrian.0041","title":"\u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#10-2","text":"\u84dd\u56fe ID : walker.pedestrian.0040","title":"\u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#10-3","text":"\u84dd\u56fe ID : walker.pedestrian.0033","title":"\u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#10-4","text":"\u84dd\u56fe ID : walker.pedestrian.0031","title":"\u6210\u5e74\u884c\u4eba 10 - \u53d8\u4f53 4"},{"location":"catalogue_pedestrians/#11-1","text":"\u84dd\u56fe ID : walker.pedestrian.0034","title":"\u6210\u5e74\u884c\u4eba 11 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#11-2","text":"\u84dd\u56fe ID : walker.pedestrian.0038","title":"\u6210\u5e74\u884c\u4eba 11 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#12-1","text":"\u84dd\u56fe ID : walker.pedestrian.0035","title":"\u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#12-2","text":"\u84dd\u56fe ID : walker.pedestrian.0036","title":"\u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#12-3","text":"\u84dd\u56fe ID : walker.pedestrian.0037","title":"\u6210\u5e74\u884c\u4eba 12 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#13-1","text":"\u84dd\u56fe ID : walker.pedestrian.0039","title":"\u6210\u5e74\u884c\u4eba 13 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#14-1","text":"\u84dd\u56fe ID : walker.pedestrian.0042","title":"\u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#14-2","text":"\u84dd\u56fe ID : walker.pedestrian.0043","title":"\u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#14-3","text":"\u84dd\u56fe ID : walker.pedestrian.0044","title":"\u6210\u5e74\u884c\u4eba 14 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#15-1","text":"\u84dd\u56fe ID : walker.pedestrian.0047","title":"\u6210\u5e74\u884c\u4eba 15 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#15-2","text":"\u84dd\u56fe ID : walker.pedestrian.0046","title":"\u6210\u5e74\u884c\u4eba 15 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#children","text":"","title":"Children"},{"location":"catalogue_pedestrians/#child-pedestrian-1-1","text":"\u84dd\u56fe ID : walker.pedestrian.0011","title":"Child pedestrian 1 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#child-pedestrian-1-2","text":"\u84dd\u56fe ID : walker.pedestrian.0010","title":"Child pedestrian 1 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#child-pedestrian-1-3","text":"\u84dd\u56fe ID : walker.pedestrian.0009","title":"Child pedestrian 1 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#child-pedestrian-2-1","text":"\u84dd\u56fe ID : walker.pedestrian.0014","title":"Child pedestrian 2 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#child-pedestrian-2-2","text":"\u84dd\u56fe ID : walker.pedestrian.0013","title":"Child pedestrian 2 - \u53d8\u4f53 2"},{"location":"catalogue_pedestrians/#child-pedestrian-2-3","text":"\u84dd\u56fe ID : walker.pedestrian.0012","title":"Child pedestrian 2 - \u53d8\u4f53 3"},{"location":"catalogue_pedestrians/#child-pedestrian-3-1","text":"\u84dd\u56fe ID : walker.pedestrian.0048","title":"Child pedestrian 3 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#child-pedestrian-4-1","text":"\u84dd\u56fe ID : walker.pedestrian.0049","title":"Child pedestrian 4 - \u53d8\u4f53 1"},{"location":"catalogue_pedestrians/#_6","text":"","title":"\u8b66\u5bdf"},{"location":"catalogue_pedestrians/#1","text":"\u84dd\u56fe ID : walker.pedestrian.0030","title":"\u8b66\u5bdf 1"},{"location":"catalogue_pedestrians/#2","text":"\u84dd\u56fe ID : walker.pedestrian.0032","title":"\u8b66\u5bdf 2"},{"location":"catalogue_props/","text":"\u9053\u5177\u76ee\u5f55 \u5bb9\u5668 \u6876 \u6876 \u7bb1\u5b50 \u7bb1\u5b50 \u5e03\u5236\u5bb9\u5668 \u5783\u573e\u7bb1 \u73bb\u7483\u5bb9\u5668 \u76d2\u5b50 \u76d2\u5b50 01 \u76d2\u5b50 02 \u76d2\u5b50 03 \u6298\u75d5\u76d2 01 \u6298\u75d5\u76d2 02 \u6298\u75d5\u76d2 03 \u5783\u573e \u888b\u5b50 \u5783\u573e\u888b \u5783\u573e \u53ef\u4e50\u7f50 \u5783\u573e 01 \u5783\u573e 02 \u5783\u573e 03 \u5783\u573e 04 \u5783\u573e 05 \u5783\u573e 06 \u5e73\u53f0 \u5783\u573e\u5e73\u53f0 01 \u5783\u573e\u6876 \u5783\u573e\u6876 01 \u5783\u573e\u6876 02 \u5783\u573e\u6876 03 \u5783\u573e\u6876 04 \u5783\u573e\u6876 05 \u516c\u56ed / \u82b1\u56ed \u5bb6\u5177 \u957f\u51f3 03 \u5ead\u9662\u706f \u51c9\u68da \u5851\u6599\u6905 \u5851\u6599\u684c \u6ed1\u68af \u79cb\u5343 \u79cb\u5343\u6c99\u53d1 \u684c\u5b50 \u8e66\u5e8a \u6742\u9879 \u70e7\u70e4\u67b6 \u667e\u8863\u7ef3 \u72d7\u7a9d \u4f8f\u5112 \u55b7\u58f6 \u5176\u4ed6 \u5e72\u8349\u6346 \u5907\u7528\u5e72\u8349\u6346 \u82b1\u76c6 \u82b1\u76c6 01 \u82b1\u76c6 02 \u82b1\u76c6 03 \u82b1\u76c6 04 \u82b1\u76c6 05 \u82b1\u76c6 06 \u82b1\u76c6 07 \u82b1\u76c6 08 \u4e2a\u4eba\u7684 \u888b \u5851\u6599\u888b \u8d2d\u7269\u888b \u63a8\u8f66 \u8d2d\u7269\u8f66 \u8d2d\u7269\u624b\u63a8\u8f66 \u7bb1 \u516c\u6587\u5305 \u5409\u4ed6\u76d2 \u65c5\u884c\u7bb1 \u8863\u670d \u81ea\u884c\u8f66\u5934\u76d4 \u6469\u6258\u8f66\u5934\u76d4 \u4e2a\u4eba\u5f71\u54cd \u624b\u673a \u94b1\u5305 \u8def \u969c\u788d\u7269 \u8857\u9053\u62a4\u680f \u9525\u4f53 \u5efa\u7b51\u9525\u4f53 \u4ea4\u901a\u9525 01 \u4ea4\u901a\u9525 02 \u65bd\u5de5 \u94c1\u677f \u65bd\u5de5\u8b66\u793a \u788e\u7247 \u788e\u74e6 01 \u788e\u74e6 02 \u788e\u74e6 03 \u788e\u74e6 04 \u6c61\u57a2 / \u788e\u7247 01 \u6c61\u57a2 / \u788e\u7247 02 \u6c61\u57a2 / \u788e\u7247 03 \u6807\u5fd7 \u4ea4\u901a\u8b66\u544a \u4e8b\u6545\u8b66\u544a \u4eba\u884c\u9053 \u969c\u788d\u7269 \u94fe\u6805\u680f \u94fe\u6805\u680f\u672b\u7aef \u957f\u51f3 \u957f\u51f3 01 \u957f\u51f3 02 Commercial \u9910\u8f66 \u4fe1\u606f\u4ead 01 \u7eaa\u5ff5\u7891 \u55b7\u6cc9 \u7eaa\u5ff5\u7891 \u5730\u56fe\u8868 \u6807\u5fd7 \u5e7f\u544a \u8def\u724c \u8def\u724c 01 \u8def\u724c 04 \u8fd0\u8f93 \u516c\u4ea4\u8f66\u7ad9 \u5907\u7528\u516c\u4ea4\u8f66\u7ad9 \u516c\u7528 \u81ea\u52a8\u63d0\u6b3e\u673a \u90ae\u7bb1 \u8857\u5934\u55b7\u6cc9 \u552e\u8d27\u673a \u516c\u7528 \u6821\u51c6 \u6821\u51c6\u5668 \u5bb9\u5668 \u6876 \u84dd\u56fe ID : static.prop.barrel \u5783\u573e\u6876 \u84dd\u56fe ID : static.prop.bin \u5e03\u5236\u5bb9\u5668 \u84dd\u56fe ID : static.prop.clothcontainer \u5783\u573e\u7bb1 \u84dd\u56fe ID : static.prop.container \u73bb\u7483\u5bb9\u5668 \u84dd\u56fe ID : static.prop.glasscontainer \u76d2\u5b50 01 \u84dd\u56fe ID : static.prop.box01 \u76d2\u5b50 02 \u84dd\u56fe ID : static.prop.box02 \u76d2\u5b50 03 \u84dd\u56fe ID : static.prop.box03 \u6298\u75d5\u76d2 01 \u84dd\u56fe ID : static.prop.creasedbox01 \u6298\u75d5\u76d2 02 \u84dd\u56fe ID : static.prop.creasedbox02 \u6298\u75d5\u76d2 03 \u84dd\u56fe ID : static.prop.creasedbox03 \u5783\u573e \u5783\u573e\u888b \u84dd\u56fe ID : static.prop.trashbag \u53ef\u4e50\u7f50 \u84dd\u56fe ID : static.prop.colacan \u5783\u573e 01 \u84dd\u56fe ID : static.prop.garbage01 \u5783\u573e 02 \u84dd\u56fe ID : static.prop.garbage02 \u5783\u573e 03 \u84dd\u56fe ID : static.prop.garbage03 \u5783\u573e 04 \u84dd\u56fe ID : static.prop.garbage04 \u5783\u573e 05 \u84dd\u56fe ID : static.prop.garbage05 \u5783\u573e 06 \u84dd\u56fe ID : static.prop.garbage06 \u5783\u573e\u5e73\u53f0 01 \u84dd\u56fe ID : static.prop.platformgarbage01 \u5783\u573e\u6876 01 \u84dd\u56fe ID : static.prop.trashcan01 \u5783\u573e\u6876 02 \u84dd\u56fe ID : static.prop.trashcan02 \u5783\u573e\u6876 03 \u84dd\u56fe ID : static.prop.trashcan03 \u5783\u573e\u6876 04 \u84dd\u56fe ID : static.prop.trashcan04 \u5783\u573e\u6876 05 \u84dd\u56fe ID : static.prop.trashcan05 \u516c\u56ed / \u82b1\u56ed \u957f\u51f3 03 \u84dd\u56fe ID : static.prop.bench03 \u5ead\u9662\u706f \u84dd\u56fe ID : static.prop.gardenlamp \u51c9\u68da \u84dd\u56fe ID : static.prop.pergola \u5851\u6599\u6905 \u84dd\u56fe ID : static.prop.plasticchair \u5851\u6599\u684c \u84dd\u56fe ID : static.prop.plastictable \u6ed1\u68af \u84dd\u56fe ID : static.prop.slide \u79cb\u5343 \u84dd\u56fe ID : static.prop.swing \u79cb\u5343\u6c99\u53d1 \u84dd\u56fe ID : static.prop.swingcouch \u684c\u5b50 \u84dd\u56fe ID : static.prop.table \u8e66\u5e8a \u84dd\u56fe ID : static.prop.trampoline \u70e7\u70e4\u67b6 \u84dd\u56fe ID : static.prop.barbeque \u667e\u8863\u7ef3 \u84dd\u56fe ID : static.prop.clothesline \u72d7\u7a9d \u84dd\u56fe ID : static.prop.doghouse \u4f8f\u5112 \u84dd\u56fe ID : static.prop.gnome \u55b7\u58f6 \u84dd\u56fe ID : static.prop.wateringcan \u5e72\u8349\u6346 \u84dd\u56fe ID : static.prop.haybale \u5e72\u8349\u6346\u5907\u7528 \u84dd\u56fe ID : static.prop.haybalelb \u82b1\u76c6 01 \u84dd\u56fe ID : static.prop.plantpot01 \u82b1\u76c6 02 \u84dd\u56fe ID : static.prop.plantpot02 \u82b1\u76c6 03 \u84dd\u56fe ID : static.prop.plantpot03 \u82b1\u76c6 04 \u84dd\u56fe ID : static.prop.plantpot04 \u82b1\u76c6 05 \u84dd\u56fe ID : static.prop.plantpot05 \u82b1\u76c6 06 \u84dd\u56fe ID : static.prop.plantpot06 \u82b1\u76c6 07 \u84dd\u56fe ID : static.prop.plantpot07 \u82b1\u76c6 08 \u84dd\u56fe ID : static.prop.plantpot08 \u4e2a\u4eba\u7684 \u5851\u6599\u888b \u84dd\u56fe ID : static.prop.plasticbag \u8d2d\u7269\u888b \u84dd\u56fe ID : static.prop.shoppingbag \u8d2d\u7269\u8f66 \u84dd\u56fe ID : static.prop.shoppingcart \u8d2d\u7269\u624b\u63a8\u8f66 \u84dd\u56fe ID : static.prop.shoppingtrolley \u516c\u6587\u5305 \u84dd\u56fe ID : static.prop.briefcase \u5409\u4ed6\u76d2 \u84dd\u56fe ID : static.prop.guitarcase \u65c5\u884c\u7bb1 \u84dd\u56fe ID : static.prop.travelcase \u81ea\u884c\u8f66\u5934\u76d4 \u84dd\u56fe ID : static.prop.bike helmet \u6469\u6258\u8f66\u5934\u76d4 \u84dd\u56fe ID : static.prop.motorhelmet \u624b\u673a \u84dd\u56fe ID : static.prop.mobile \u94b1\u5305 \u84dd\u56fe ID : static.prop.purse \u8def \u8857\u9053\u62a4\u680f \u84dd\u56fe ID : static.prop.streetbarrier \u5efa\u7b51\u9525\u4f53 \u84dd\u56fe ID : static.prop.constructioncone \u4ea4\u901a\u9525 01 \u84dd\u56fe ID : static.prop.trafficcone01 \u4ea4\u901a\u9525 02 \u84dd\u56fe ID : static.prop.trafficcone02 \u94c1\u677f \u84dd\u56fe ID : static.prop.ironplank \u65bd\u5de5\u8b66\u793a \u84dd\u56fe ID : static.prop.warningconstruction \u788e\u74e6 01 \u84dd\u56fe ID : static.prop.brokentile01 \u788e\u74e6 02 \u84dd\u56fe ID : static.prop.brokentile02 \u788e\u74e6 03 \u84dd\u56fe ID : static.prop.brokentile03 \u788e\u74e6 04 \u84dd\u56fe ID : static.prop.brokentile04 \u6c61\u57a2 / \u788e\u7247 01 \u84dd\u56fe ID : static.prop.dirtdebris01 \u6c61\u57a2 / \u788e\u7247 02 \u84dd\u56fe ID : static.prop.dirtdebris02 \u6c61\u57a2 / \u788e\u7247 03 \u84dd\u56fe ID : static.prop.dirtdebris03 \u4ea4\u901a\u8b66\u544a \u84dd\u56fe ID : static.prop.trafficwarning \u4e8b\u6545\u8b66\u544a \u84dd\u56fe ID : static.prop.warningaccident \u4eba\u884c\u9053 \u94fe\u6805\u680f \u84dd\u56fe ID : static.prop.chainbarrier \u94fe\u6805\u680f\u672b\u7aef \u84dd\u56fe ID : static.prop.chainbarrierend \u957f\u51f3 01 \u84dd\u56fe ID : static.prop.bench01 \u957f\u51f3 02 \u84dd\u56fe ID : static.prop.bench02 \u9910\u8f66 \u84dd\u56fe ID : static.prop.foodcart \u4fe1\u606f\u4ead 01 \u84dd\u56fe ID : static.prop.kiosk_01 \u55b7\u6cc9 \u84dd\u56fe ID : static.prop.fountain \u5730\u56fe\u8868 \u84dd\u56fe ID : static.prop.maptable \u5e7f\u544a \u84dd\u56fe ID : static.prop.advertisement \u8def\u724c \u84dd\u56fe ID : static.prop.streetsign \u8def\u724c 01 \u84dd\u56fe ID : static.prop.streetsign01 \u8def\u724c 04 \u84dd\u56fe ID : static.prop.streetsign04 \u516c\u4ea4\u8f66\u7ad9 \u84dd\u56fe ID : static.prop.busstop \u5907\u7528\u516c\u4ea4\u8f66\u7ad9 \u84dd\u56fe ID : static.prop.busstoplb \u81ea\u52a8\u63d0\u6b3e\u673a \u84dd\u56fe ID : static.prop.atm \u90ae\u7bb1 \u84dd\u56fe ID : static.prop.mailbox \u8857\u5934\u55b7\u6cc9 \u84dd\u56fe ID : static.prop.streetfountain \u552e\u8d27\u673a \u84dd\u56fe ID : static.prop.vendingmachine \u516c\u7528 \u6821\u51c6\u5668 \u84dd\u56fe ID : static.prop.calibrator","title":"\u9053\u5177\u76ee\u5f55"},{"location":"catalogue_props/#_1","text":"","title":"\u9053\u5177\u76ee\u5f55"},{"location":"catalogue_props/#_2","text":"\u6876 \u6876 \u7bb1\u5b50 \u7bb1\u5b50 \u5e03\u5236\u5bb9\u5668 \u5783\u573e\u7bb1 \u73bb\u7483\u5bb9\u5668 \u76d2\u5b50 \u76d2\u5b50 01 \u76d2\u5b50 02 \u76d2\u5b50 03 \u6298\u75d5\u76d2 01 \u6298\u75d5\u76d2 02 \u6298\u75d5\u76d2 03","title":"\u5bb9\u5668"},{"location":"catalogue_props/#_3","text":"\u888b\u5b50 \u5783\u573e\u888b \u5783\u573e \u53ef\u4e50\u7f50 \u5783\u573e 01 \u5783\u573e 02 \u5783\u573e 03 \u5783\u573e 04 \u5783\u573e 05 \u5783\u573e 06 \u5e73\u53f0 \u5783\u573e\u5e73\u53f0 01 \u5783\u573e\u6876 \u5783\u573e\u6876 01 \u5783\u573e\u6876 02 \u5783\u573e\u6876 03 \u5783\u573e\u6876 04 \u5783\u573e\u6876 05","title":"\u5783\u573e"},{"location":"catalogue_props/#_4","text":"\u5bb6\u5177 \u957f\u51f3 03 \u5ead\u9662\u706f \u51c9\u68da \u5851\u6599\u6905 \u5851\u6599\u684c \u6ed1\u68af \u79cb\u5343 \u79cb\u5343\u6c99\u53d1 \u684c\u5b50 \u8e66\u5e8a \u6742\u9879 \u70e7\u70e4\u67b6 \u667e\u8863\u7ef3 \u72d7\u7a9d \u4f8f\u5112 \u55b7\u58f6 \u5176\u4ed6 \u5e72\u8349\u6346 \u5907\u7528\u5e72\u8349\u6346 \u82b1\u76c6 \u82b1\u76c6 01 \u82b1\u76c6 02 \u82b1\u76c6 03 \u82b1\u76c6 04 \u82b1\u76c6 05 \u82b1\u76c6 06 \u82b1\u76c6 07 \u82b1\u76c6 08","title":"\u516c\u56ed / \u82b1\u56ed"},{"location":"catalogue_props/#_5","text":"\u888b \u5851\u6599\u888b \u8d2d\u7269\u888b \u63a8\u8f66 \u8d2d\u7269\u8f66 \u8d2d\u7269\u624b\u63a8\u8f66 \u7bb1 \u516c\u6587\u5305 \u5409\u4ed6\u76d2 \u65c5\u884c\u7bb1 \u8863\u670d \u81ea\u884c\u8f66\u5934\u76d4 \u6469\u6258\u8f66\u5934\u76d4 \u4e2a\u4eba\u5f71\u54cd \u624b\u673a \u94b1\u5305","title":"\u4e2a\u4eba\u7684"},{"location":"catalogue_props/#_6","text":"\u969c\u788d\u7269 \u8857\u9053\u62a4\u680f \u9525\u4f53 \u5efa\u7b51\u9525\u4f53 \u4ea4\u901a\u9525 01 \u4ea4\u901a\u9525 02 \u65bd\u5de5 \u94c1\u677f \u65bd\u5de5\u8b66\u793a \u788e\u7247 \u788e\u74e6 01 \u788e\u74e6 02 \u788e\u74e6 03 \u788e\u74e6 04 \u6c61\u57a2 / \u788e\u7247 01 \u6c61\u57a2 / \u788e\u7247 02 \u6c61\u57a2 / \u788e\u7247 03 \u6807\u5fd7 \u4ea4\u901a\u8b66\u544a \u4e8b\u6545\u8b66\u544a","title":"\u8def"},{"location":"catalogue_props/#_7","text":"\u969c\u788d\u7269 \u94fe\u6805\u680f \u94fe\u6805\u680f\u672b\u7aef \u957f\u51f3 \u957f\u51f3 01 \u957f\u51f3 02 Commercial \u9910\u8f66 \u4fe1\u606f\u4ead 01 \u7eaa\u5ff5\u7891 \u55b7\u6cc9 \u7eaa\u5ff5\u7891 \u5730\u56fe\u8868 \u6807\u5fd7 \u5e7f\u544a \u8def\u724c \u8def\u724c 01 \u8def\u724c 04 \u8fd0\u8f93 \u516c\u4ea4\u8f66\u7ad9 \u5907\u7528\u516c\u4ea4\u8f66\u7ad9 \u516c\u7528 \u81ea\u52a8\u63d0\u6b3e\u673a \u90ae\u7bb1 \u8857\u5934\u55b7\u6cc9 \u552e\u8d27\u673a","title":"\u4eba\u884c\u9053"},{"location":"catalogue_props/#_8","text":"\u6821\u51c6 \u6821\u51c6\u5668","title":"\u516c\u7528"},{"location":"catalogue_props/#_9","text":"","title":"\u5bb9\u5668"},{"location":"catalogue_props/#_10","text":"\u84dd\u56fe ID : static.prop.barrel","title":"\u6876"},{"location":"catalogue_props/#_11","text":"\u84dd\u56fe ID : static.prop.bin","title":"\u5783\u573e\u6876"},{"location":"catalogue_props/#_12","text":"\u84dd\u56fe ID : static.prop.clothcontainer","title":"\u5e03\u5236\u5bb9\u5668"},{"location":"catalogue_props/#_13","text":"\u84dd\u56fe ID : static.prop.container","title":"\u5783\u573e\u7bb1"},{"location":"catalogue_props/#_14","text":"\u84dd\u56fe ID : static.prop.glasscontainer","title":"\u73bb\u7483\u5bb9\u5668"},{"location":"catalogue_props/#01","text":"\u84dd\u56fe ID : static.prop.box01","title":"\u76d2\u5b50 01"},{"location":"catalogue_props/#02","text":"\u84dd\u56fe ID : static.prop.box02","title":"\u76d2\u5b50 02"},{"location":"catalogue_props/#03","text":"\u84dd\u56fe ID : static.prop.box03","title":"\u76d2\u5b50 03"},{"location":"catalogue_props/#01_1","text":"\u84dd\u56fe ID : static.prop.creasedbox01","title":"\u6298\u75d5\u76d2 01"},{"location":"catalogue_props/#02_1","text":"\u84dd\u56fe ID : static.prop.creasedbox02","title":"\u6298\u75d5\u76d2 02"},{"location":"catalogue_props/#03_1","text":"\u84dd\u56fe ID : static.prop.creasedbox03","title":"\u6298\u75d5\u76d2 03"},{"location":"catalogue_props/#_15","text":"","title":"\u5783\u573e"},{"location":"catalogue_props/#_16","text":"\u84dd\u56fe ID : static.prop.trashbag","title":"\u5783\u573e\u888b"},{"location":"catalogue_props/#_17","text":"\u84dd\u56fe ID : static.prop.colacan","title":"\u53ef\u4e50\u7f50"},{"location":"catalogue_props/#01_2","text":"\u84dd\u56fe ID : static.prop.garbage01","title":"\u5783\u573e 01"},{"location":"catalogue_props/#02_2","text":"\u84dd\u56fe ID : static.prop.garbage02","title":"\u5783\u573e 02"},{"location":"catalogue_props/#03_2","text":"\u84dd\u56fe ID : static.prop.garbage03","title":"\u5783\u573e 03"},{"location":"catalogue_props/#04","text":"\u84dd\u56fe ID : static.prop.garbage04","title":"\u5783\u573e 04"},{"location":"catalogue_props/#05","text":"\u84dd\u56fe ID : static.prop.garbage05","title":"\u5783\u573e 05"},{"location":"catalogue_props/#06","text":"\u84dd\u56fe ID : static.prop.garbage06","title":"\u5783\u573e 06"},{"location":"catalogue_props/#01_3","text":"\u84dd\u56fe ID : static.prop.platformgarbage01","title":"\u5783\u573e\u5e73\u53f0 01"},{"location":"catalogue_props/#01_4","text":"\u84dd\u56fe ID : static.prop.trashcan01","title":"\u5783\u573e\u6876 01"},{"location":"catalogue_props/#02_3","text":"\u84dd\u56fe ID : static.prop.trashcan02","title":"\u5783\u573e\u6876 02"},{"location":"catalogue_props/#03_3","text":"\u84dd\u56fe ID : static.prop.trashcan03","title":"\u5783\u573e\u6876 03"},{"location":"catalogue_props/#04_1","text":"\u84dd\u56fe ID : static.prop.trashcan04","title":"\u5783\u573e\u6876 04"},{"location":"catalogue_props/#05_1","text":"\u84dd\u56fe ID : static.prop.trashcan05","title":"\u5783\u573e\u6876 05"},{"location":"catalogue_props/#_18","text":"","title":"\u516c\u56ed / \u82b1\u56ed"},{"location":"catalogue_props/#03_4","text":"\u84dd\u56fe ID : static.prop.bench03","title":"\u957f\u51f3 03"},{"location":"catalogue_props/#_19","text":"\u84dd\u56fe ID : static.prop.gardenlamp","title":"\u5ead\u9662\u706f"},{"location":"catalogue_props/#_20","text":"\u84dd\u56fe ID : static.prop.pergola","title":"\u51c9\u68da"},{"location":"catalogue_props/#_21","text":"\u84dd\u56fe ID : static.prop.plasticchair","title":"\u5851\u6599\u6905"},{"location":"catalogue_props/#_22","text":"\u84dd\u56fe ID : static.prop.plastictable","title":"\u5851\u6599\u684c"},{"location":"catalogue_props/#_23","text":"\u84dd\u56fe ID : static.prop.slide","title":"\u6ed1\u68af"},{"location":"catalogue_props/#_24","text":"\u84dd\u56fe ID : static.prop.swing","title":"\u79cb\u5343"},{"location":"catalogue_props/#_25","text":"\u84dd\u56fe ID : static.prop.swingcouch","title":"\u79cb\u5343\u6c99\u53d1"},{"location":"catalogue_props/#_26","text":"\u84dd\u56fe ID : static.prop.table","title":"\u684c\u5b50"},{"location":"catalogue_props/#_27","text":"\u84dd\u56fe ID : static.prop.trampoline","title":"\u8e66\u5e8a"},{"location":"catalogue_props/#_28","text":"\u84dd\u56fe ID : static.prop.barbeque","title":"\u70e7\u70e4\u67b6"},{"location":"catalogue_props/#_29","text":"\u84dd\u56fe ID : static.prop.clothesline","title":"\u667e\u8863\u7ef3"},{"location":"catalogue_props/#_30","text":"\u84dd\u56fe ID : static.prop.doghouse","title":"\u72d7\u7a9d"},{"location":"catalogue_props/#_31","text":"\u84dd\u56fe ID : static.prop.gnome","title":"\u4f8f\u5112"},{"location":"catalogue_props/#_32","text":"\u84dd\u56fe ID : static.prop.wateringcan","title":"\u55b7\u58f6"},{"location":"catalogue_props/#_33","text":"\u84dd\u56fe ID : static.prop.haybale","title":"\u5e72\u8349\u6346"},{"location":"catalogue_props/#_34","text":"\u84dd\u56fe ID : static.prop.haybalelb","title":"\u5e72\u8349\u6346\u5907\u7528"},{"location":"catalogue_props/#01_5","text":"\u84dd\u56fe ID : static.prop.plantpot01","title":"\u82b1\u76c6 01"},{"location":"catalogue_props/#02_4","text":"\u84dd\u56fe ID : static.prop.plantpot02","title":"\u82b1\u76c6 02"},{"location":"catalogue_props/#03_5","text":"\u84dd\u56fe ID : static.prop.plantpot03","title":"\u82b1\u76c6 03"},{"location":"catalogue_props/#04_2","text":"\u84dd\u56fe ID : static.prop.plantpot04","title":"\u82b1\u76c6 04"},{"location":"catalogue_props/#05_2","text":"\u84dd\u56fe ID : static.prop.plantpot05","title":"\u82b1\u76c6 05"},{"location":"catalogue_props/#06_1","text":"\u84dd\u56fe ID : static.prop.plantpot06","title":"\u82b1\u76c6 06"},{"location":"catalogue_props/#07","text":"\u84dd\u56fe ID : static.prop.plantpot07","title":"\u82b1\u76c6 07"},{"location":"catalogue_props/#08","text":"\u84dd\u56fe ID : static.prop.plantpot08","title":"\u82b1\u76c6 08"},{"location":"catalogue_props/#_35","text":"","title":"\u4e2a\u4eba\u7684"},{"location":"catalogue_props/#_36","text":"\u84dd\u56fe ID : static.prop.plasticbag","title":"\u5851\u6599\u888b"},{"location":"catalogue_props/#_37","text":"\u84dd\u56fe ID : static.prop.shoppingbag","title":"\u8d2d\u7269\u888b"},{"location":"catalogue_props/#_38","text":"\u84dd\u56fe ID : static.prop.shoppingcart","title":"\u8d2d\u7269\u8f66"},{"location":"catalogue_props/#_39","text":"\u84dd\u56fe ID : static.prop.shoppingtrolley","title":"\u8d2d\u7269\u624b\u63a8\u8f66"},{"location":"catalogue_props/#_40","text":"\u84dd\u56fe ID : static.prop.briefcase","title":"\u516c\u6587\u5305"},{"location":"catalogue_props/#_41","text":"\u84dd\u56fe ID : static.prop.guitarcase","title":"\u5409\u4ed6\u76d2"},{"location":"catalogue_props/#_42","text":"\u84dd\u56fe ID : static.prop.travelcase","title":"\u65c5\u884c\u7bb1"},{"location":"catalogue_props/#_43","text":"\u84dd\u56fe ID : static.prop.bike helmet","title":"\u81ea\u884c\u8f66\u5934\u76d4"},{"location":"catalogue_props/#_44","text":"\u84dd\u56fe ID : static.prop.motorhelmet","title":"\u6469\u6258\u8f66\u5934\u76d4"},{"location":"catalogue_props/#_45","text":"\u84dd\u56fe ID : static.prop.mobile","title":"\u624b\u673a"},{"location":"catalogue_props/#_46","text":"\u84dd\u56fe ID : static.prop.purse","title":"\u94b1\u5305"},{"location":"catalogue_props/#_47","text":"","title":"\u8def"},{"location":"catalogue_props/#_48","text":"\u84dd\u56fe ID : static.prop.streetbarrier","title":"\u8857\u9053\u62a4\u680f"},{"location":"catalogue_props/#_49","text":"\u84dd\u56fe ID : static.prop.constructioncone","title":"\u5efa\u7b51\u9525\u4f53"},{"location":"catalogue_props/#01_6","text":"\u84dd\u56fe ID : static.prop.trafficcone01","title":"\u4ea4\u901a\u9525 01"},{"location":"catalogue_props/#02_5","text":"\u84dd\u56fe ID : static.prop.trafficcone02","title":"\u4ea4\u901a\u9525 02"},{"location":"catalogue_props/#_50","text":"\u84dd\u56fe ID : static.prop.ironplank","title":"\u94c1\u677f"},{"location":"catalogue_props/#_51","text":"\u84dd\u56fe ID : static.prop.warningconstruction","title":"\u65bd\u5de5\u8b66\u793a"},{"location":"catalogue_props/#01_7","text":"\u84dd\u56fe ID : static.prop.brokentile01","title":"\u788e\u74e6 01"},{"location":"catalogue_props/#02_6","text":"\u84dd\u56fe ID : static.prop.brokentile02","title":"\u788e\u74e6 02"},{"location":"catalogue_props/#03_6","text":"\u84dd\u56fe ID : static.prop.brokentile03","title":"\u788e\u74e6 03"},{"location":"catalogue_props/#04_3","text":"\u84dd\u56fe ID : static.prop.brokentile04","title":"\u788e\u74e6 04"},{"location":"catalogue_props/#01_8","text":"\u84dd\u56fe ID : static.prop.dirtdebris01","title":"\u6c61\u57a2 / \u788e\u7247 01"},{"location":"catalogue_props/#02_7","text":"\u84dd\u56fe ID : static.prop.dirtdebris02","title":"\u6c61\u57a2 / \u788e\u7247 02"},{"location":"catalogue_props/#03_7","text":"\u84dd\u56fe ID : static.prop.dirtdebris03","title":"\u6c61\u57a2 / \u788e\u7247 03"},{"location":"catalogue_props/#_52","text":"\u84dd\u56fe ID : static.prop.trafficwarning","title":"\u4ea4\u901a\u8b66\u544a"},{"location":"catalogue_props/#_53","text":"\u84dd\u56fe ID : static.prop.warningaccident","title":"\u4e8b\u6545\u8b66\u544a"},{"location":"catalogue_props/#_54","text":"","title":"\u4eba\u884c\u9053"},{"location":"catalogue_props/#_55","text":"\u84dd\u56fe ID : static.prop.chainbarrier","title":"\u94fe\u6805\u680f"},{"location":"catalogue_props/#_56","text":"\u84dd\u56fe ID : static.prop.chainbarrierend","title":"\u94fe\u6805\u680f\u672b\u7aef"},{"location":"catalogue_props/#01_9","text":"\u84dd\u56fe ID : static.prop.bench01","title":"\u957f\u51f3 01"},{"location":"catalogue_props/#02_8","text":"\u84dd\u56fe ID : static.prop.bench02","title":"\u957f\u51f3 02"},{"location":"catalogue_props/#_57","text":"\u84dd\u56fe ID : static.prop.foodcart","title":"\u9910\u8f66"},{"location":"catalogue_props/#01_10","text":"\u84dd\u56fe ID : static.prop.kiosk_01","title":"\u4fe1\u606f\u4ead 01"},{"location":"catalogue_props/#_58","text":"\u84dd\u56fe ID : static.prop.fountain","title":"\u55b7\u6cc9"},{"location":"catalogue_props/#_59","text":"\u84dd\u56fe ID : static.prop.maptable","title":"\u5730\u56fe\u8868"},{"location":"catalogue_props/#_60","text":"\u84dd\u56fe ID : static.prop.advertisement","title":"\u5e7f\u544a"},{"location":"catalogue_props/#_61","text":"\u84dd\u56fe ID : static.prop.streetsign","title":"\u8def\u724c"},{"location":"catalogue_props/#01_11","text":"\u84dd\u56fe ID : static.prop.streetsign01","title":"\u8def\u724c 01"},{"location":"catalogue_props/#04_4","text":"\u84dd\u56fe ID : static.prop.streetsign04","title":"\u8def\u724c 04"},{"location":"catalogue_props/#_62","text":"\u84dd\u56fe ID : static.prop.busstop","title":"\u516c\u4ea4\u8f66\u7ad9"},{"location":"catalogue_props/#_63","text":"\u84dd\u56fe ID : static.prop.busstoplb","title":"\u5907\u7528\u516c\u4ea4\u8f66\u7ad9"},{"location":"catalogue_props/#_64","text":"\u84dd\u56fe ID : static.prop.atm","title":"\u81ea\u52a8\u63d0\u6b3e\u673a"},{"location":"catalogue_props/#_65","text":"\u84dd\u56fe ID : static.prop.mailbox","title":"\u90ae\u7bb1"},{"location":"catalogue_props/#_66","text":"\u84dd\u56fe ID : static.prop.streetfountain","title":"\u8857\u5934\u55b7\u6cc9"},{"location":"catalogue_props/#_67","text":"\u84dd\u56fe ID : static.prop.vendingmachine","title":"\u552e\u8d27\u673a"},{"location":"catalogue_props/#_68","text":"","title":"\u516c\u7528"},{"location":"catalogue_props/#_69","text":"\u84dd\u56fe ID : static.prop.calibrator","title":"\u6821\u51c6\u5668"},{"location":"catalogue_vehicles/","text":"\u8f66\u8f86\u76ee\u5f55 \u7b2c 2 \u4ee3 \u8f66 \u9053\u5947 - Charger 2020 \u9053\u5947 - Police Charger 2020 \u798f\u7279 - \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09 \u6797\u80af - MKZ 2020 \u6885\u8d5b\u5fb7\u65af - Coupe 2020 \u8ff7\u4f60 - Cooper S 2021 \u5c3c\u6851 - Patrol 2021 \u5361\u8f66 CARLA Motors - \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09 CARLA Motors - \u6d88\u9632\u8f66 \u7279\u65af\u62c9 - Cybertruck \u9762\u5305\u8f66 \u798f\u7279 - \u6551\u62a4\u8f66 \u6885\u8d5b\u5fb7\u65af - Sprinter \u5927\u4f17 - T2 2021 \u5df4\u58eb \u4e09\u83f1 - Fusorosa \u7b2c\u4e00\u4ee3 \u8f66 \u5965\u8fea - A2 \u5965\u8fea - E-Tron \u5965\u8fea - TT \u5b9d\u9a6c - \u591a\u529f\u80fd\u65c5\u884c\u8f66 \u96ea\u4f5b\u5170 - Impala \u96ea\u94c1\u9f99 - C3 \u9053\u5947 - Police Charger \u798f\u7279 - Mustang \u5409\u666e\u8f66 - Wrangler Rubicon \u6797\u80af - MKZ 2017 \u6885\u8d5b\u5fb7\u65af - Coupe \u5fae\u578b\u8f66 - Microlino \u8ff7\u4f60 - Cooper S \u5c3c\u6851 - Micra \u5c3c\u6851 - Patrol Seat - Leon \u7279\u65af\u62c9 - Model 3 Toyota - Prius \u5361\u8f66 CARLA Motors - CarlaCola \u9762\u5305\u8f66 \u5927\u4f17 - T2 \u6469\u6258\u8f66 \u54c8\u96f7\u6234\u7ef4\u68ee - Low Rider Kawasaki - Ninja Vespa - ZX 125 Yamaha - YZF \u81ea\u884c\u8f66 BH - \u8d8a\u91ce\u81ea\u884c\u8f66 \u5927\u540d\u81ea\u884c\u8f66 - Century Gazelle - Omafiets \u68c0\u67e5\u6a21\u62df\u5668\u4e2d\u7684\u8f66\u8f86 \u8981\u68c0\u67e5\u76ee\u5f55\u4e2d\u7684\u8f66\u8f86\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff0c\u4ece\u4e0b\u9762\u7684\u8f66\u8f86\u8be6\u7ec6\u4fe1\u606f\u4e2d\u68c0\u7d22\u84dd\u56fe ID \u5e76\u5c06\u5176\u7c98\u8d34\u5230\u884c\u4e2d bp_lib.find('blueprint.id.goes_here') \uff1a client = carla.Client('localhost', 2000) world = client.get_world() bp_lib = world.get_blueprint_library() spectator = world.get_spectator() # \u8bbe\u7f6e\u8f66\u8f86\u53d8\u6362 vehicle_loc = carla.Location(x=-46.9, y=20.0, z=0.2) vehicle_rot = carla.Rotation(pitch=0.0, yaw=142.0, roll=0.0) vehicle_trans = carla.Transform(vehicle_loc,vehicle_rot) # \u5728\u8fd9\u91cc\u7c98\u8d34\u84dd\u56fe ID vehicle_bp = bp_lib.find('vehicle.lincoln.mkz_2020') # \u8bbe\u7f6e\u89c6\u89d2\u53d8\u6362 camera_loc = carla.Location(x=-48.7, y=24.8, z=1.7) camera_rot = carla.Rotation(pitch=-13.4, yaw=-75.7, roll=0.0) camera_trans = carla.Transform(camera_loc,camera_rot) # \u751f\u6210\u8f66\u8f86 vehicle = world.spawn_actor(vehicle_bp, vehicle_trans) # \u79fb\u52a8\u89c2\u5bdf\u8005 spectator.set_transform(camera_trans) \u5728\u5c1d\u8bd5\u751f\u6210\u53e6\u4e00\u8f86\u8f66\u4e4b\u524d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6467\u6bc1\u8be5\u8f66\u8f86\u4ee5\u907f\u514d\u78b0\u649e\uff1a vehicle.destroy() \u8f66 \u5965\u8fea - A2 \u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : A2 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.a2 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5965\u8fea - E-Tron \u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : E-Tron \u7c7b\u522b : SUV \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.etron \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5965\u8fea - TT \u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : TT \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.tt \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5b9d\u9a6c - \u591a\u529f\u80fd\u65c5\u884c\u8f66 \u5236\u9020\u5546 : \u5b9d\u9a6c \u578b\u53f7 : \u591a\u529f\u80fd\u65c5\u884c\u8f66 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.bmw.grandtourer \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u96ea\u4f5b\u5170 - Impala \u5236\u9020\u5546 : \u96ea\u4f5b\u5170 \u578b\u53f7 : Impala \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.chevrolet.impala \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u96ea\u94c1\u9f99 - C3 \u5236\u9020\u5546 : \u96ea\u94c1\u9f99 \u578b\u53f7 : C3 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.citroen.c3 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u9053\u5947 - Charger 2020 \u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Charger 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.dodge.charger_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u9053\u5947 - Police Charger \u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Police Charger \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.dodge.charger_police \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u9053\u5947 - Police Charger 2020 \u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Police Charger 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.dodge.charger_police_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u798f\u7279 - \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09 \u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.ford.crown \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : taxi \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u798f\u7279 - Mustang \u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : Mustang \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.ford.mustang \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5409\u666e\u8f66 - Wrangler Rubicon \u5236\u9020\u5546 : \u5409\u666e\u8f66 \u578b\u53f7 : Wrangler Rubicon \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.jeep.wrangler_rubicon \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u6797\u80af - MKZ 2017 \u5236\u9020\u5546 : \u6797\u80af \u578b\u53f7 : MKZ 2017 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.lincoln.mkz_2017 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u6797\u80af - MKZ 2020 \u5236\u9020\u5546 : \u6797\u80af \u578b\u53f7 : MKZ 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.lincoln.mkz_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u6885\u8d5b\u5fb7\u65af - Coupe \u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Coupe \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.mercedes.coupe \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u6885\u8d5b\u5fb7\u65af - Coupe 2020 \u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Coupe 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mercedes.coupe_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u5fae\u578b\u8f66 - Microlino \u5236\u9020\u5546 : \u5fae\u578b\u8f66 \u578b\u53f7 : Microlino \u7c7b\u522b : \u5fae\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.micro.microlino \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u8ff7\u4f60 - Cooper S \u5236\u9020\u5546 : \u8ff7\u4f60 \u578b\u53f7 : Cooper S \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.mini.cooper_s \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u8ff7\u4f60 - Cooper S 2021 \u5236\u9020\u5546 : \u8ff7\u4f60 \u578b\u53f7 : Cooper S 2021 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mini.cooper_s_2021 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u5c3c\u6851 - Micra \u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Micra \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.nissan.micra \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5c3c\u6851 - Patrol \u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Patrol \u7c7b\u522b : SUV \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.nissan.patrol \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5c3c\u6851 - Patrol 2021 \u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Patrol 2021 \u7c7b\u522b : SUV \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.nissan.patrol_2021 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True Seat - Leon \u5236\u9020\u5546 : Seat \u578b\u53f7 : Leon \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.seat.leon \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u7279\u65af\u62c9 - Model 3 \u5236\u9020\u5546 : \u7279\u65af\u62c9 \u578b\u53f7 : Model 3 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.tesla.model3 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False Toyota - Prius \u5236\u9020\u5546 : Toyota \u578b\u53f7 : Prius \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.toyota.prius \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5361\u8f66 CARLA Motors - CarlaCola \u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : CarlaCola \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.carlamotors.carlacola \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False CARLA Motors - \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09 \u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09 \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.carlamotors.european_hgv \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False CARLA Motors - Firetruck \u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : Firetruck \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.carlamotors.firetruck \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u7279\u65af\u62c9 - Cybertruck \u5236\u9020\u5546 : \u7279\u65af\u62c9 \u578b\u53f7 : Cybertruck \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.tesla.cybertruck \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u9762\u5305\u8f66 \u798f\u7279 - \u6551\u62a4\u8f66 \u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : \u6551\u62a4\u8f66 \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.ford.ambulance \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u6885\u8d5b\u5fb7\u65af - Sprinter \u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Sprinter \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mercedes.sprinter \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u5927\u4f17 - T2 \u5236\u9020\u5546 : \u5927\u4f17 \u578b\u53f7 : T2 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.volkswagen.t2 \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5927\u4f17 - T2 2021 \u5236\u9020\u5546 : \u5927\u4f17 \u578b\u53f7 : T2 2021 \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.volkswagen.t2_2021 \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True \u5df4\u58eb \u4e09\u83f1 - Fusorosa \u5236\u9020\u5546 : \u4e09\u83f1 \u578b\u53f7 : Fusorosa \u7c7b\u522b : \u5df4\u58eb \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mitsubishi.fusorosa \u57fa\u672c\u7c7b\u578b : \u5df4\u58eb \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : False \u6469\u6258\u8f66 \u54c8\u96f7\u6234\u7ef4\u68ee - Low Rider \u5236\u9020\u5546 : \u54c8\u96f7\u6234\u7ef4\u68ee \u578b\u53f7 : Low Rider \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.harley-davidson.low_rider \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False Kawasaki - Ninja \u5236\u9020\u5546 : Kawasaki \u578b\u53f7 : Ninja \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.kawasaki.ninja \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False Vespa - ZX 125 \u5236\u9020\u5546 : Vespa \u578b\u53f7 : ZX 125 \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.vespa.zx125 \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False Yamaha - YZF \u5236\u9020\u5546 : Yamaha \u578b\u53f7 : YZF \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.yamaha.yzf \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u81ea\u884c\u8f66 BH - \u8d8a\u91ce\u81ea\u884c\u8f66 \u5236\u9020\u5546 : BH \u578b\u53f7 : \u8d8a\u91ce\u81ea\u884c\u8f66 \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.bh.crossbike \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False \u5927\u540d\u81ea\u884c\u8f66 - Century \u5236\u9020\u5546 : \u5927\u540d\u81ea\u884c\u8f66 \u578b\u53f7 : Century \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.diamondback.century \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False Gazelle - Omafiets \u5236\u9020\u5546 : Gazelle \u578b\u53f7 : Omafiets \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.gazelle.omafiets \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Catalogue vehicles"},{"location":"catalogue_vehicles/#_1","text":"","title":"\u8f66\u8f86\u76ee\u5f55"},{"location":"catalogue_vehicles/#2","text":"\u8f66 \u9053\u5947 - Charger 2020 \u9053\u5947 - Police Charger 2020 \u798f\u7279 - \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09 \u6797\u80af - MKZ 2020 \u6885\u8d5b\u5fb7\u65af - Coupe 2020 \u8ff7\u4f60 - Cooper S 2021 \u5c3c\u6851 - Patrol 2021 \u5361\u8f66 CARLA Motors - \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09 CARLA Motors - \u6d88\u9632\u8f66 \u7279\u65af\u62c9 - Cybertruck \u9762\u5305\u8f66 \u798f\u7279 - \u6551\u62a4\u8f66 \u6885\u8d5b\u5fb7\u65af - Sprinter \u5927\u4f17 - T2 2021 \u5df4\u58eb \u4e09\u83f1 - Fusorosa","title":"\u7b2c 2 \u4ee3"},{"location":"catalogue_vehicles/#_2","text":"\u8f66 \u5965\u8fea - A2 \u5965\u8fea - E-Tron \u5965\u8fea - TT \u5b9d\u9a6c - \u591a\u529f\u80fd\u65c5\u884c\u8f66 \u96ea\u4f5b\u5170 - Impala \u96ea\u94c1\u9f99 - C3 \u9053\u5947 - Police Charger \u798f\u7279 - Mustang \u5409\u666e\u8f66 - Wrangler Rubicon \u6797\u80af - MKZ 2017 \u6885\u8d5b\u5fb7\u65af - Coupe \u5fae\u578b\u8f66 - Microlino \u8ff7\u4f60 - Cooper S \u5c3c\u6851 - Micra \u5c3c\u6851 - Patrol Seat - Leon \u7279\u65af\u62c9 - Model 3 Toyota - Prius \u5361\u8f66 CARLA Motors - CarlaCola \u9762\u5305\u8f66 \u5927\u4f17 - T2 \u6469\u6258\u8f66 \u54c8\u96f7\u6234\u7ef4\u68ee - Low Rider Kawasaki - Ninja Vespa - ZX 125 Yamaha - YZF \u81ea\u884c\u8f66 BH - \u8d8a\u91ce\u81ea\u884c\u8f66 \u5927\u540d\u81ea\u884c\u8f66 - Century Gazelle - Omafiets","title":"\u7b2c\u4e00\u4ee3"},{"location":"catalogue_vehicles/#_3","text":"\u8981\u68c0\u67e5\u76ee\u5f55\u4e2d\u7684\u8f66\u8f86\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff0c\u4ece\u4e0b\u9762\u7684\u8f66\u8f86\u8be6\u7ec6\u4fe1\u606f\u4e2d\u68c0\u7d22\u84dd\u56fe ID \u5e76\u5c06\u5176\u7c98\u8d34\u5230\u884c\u4e2d bp_lib.find('blueprint.id.goes_here') \uff1a client = carla.Client('localhost', 2000) world = client.get_world() bp_lib = world.get_blueprint_library() spectator = world.get_spectator() # \u8bbe\u7f6e\u8f66\u8f86\u53d8\u6362 vehicle_loc = carla.Location(x=-46.9, y=20.0, z=0.2) vehicle_rot = carla.Rotation(pitch=0.0, yaw=142.0, roll=0.0) vehicle_trans = carla.Transform(vehicle_loc,vehicle_rot) # \u5728\u8fd9\u91cc\u7c98\u8d34\u84dd\u56fe ID vehicle_bp = bp_lib.find('vehicle.lincoln.mkz_2020') # \u8bbe\u7f6e\u89c6\u89d2\u53d8\u6362 camera_loc = carla.Location(x=-48.7, y=24.8, z=1.7) camera_rot = carla.Rotation(pitch=-13.4, yaw=-75.7, roll=0.0) camera_trans = carla.Transform(camera_loc,camera_rot) # \u751f\u6210\u8f66\u8f86 vehicle = world.spawn_actor(vehicle_bp, vehicle_trans) # \u79fb\u52a8\u89c2\u5bdf\u8005 spectator.set_transform(camera_trans) \u5728\u5c1d\u8bd5\u751f\u6210\u53e6\u4e00\u8f86\u8f66\u4e4b\u524d\uff0c\u4e0d\u8981\u5fd8\u8bb0\u6467\u6bc1\u8be5\u8f66\u8f86\u4ee5\u907f\u514d\u78b0\u649e\uff1a vehicle.destroy()","title":"\u68c0\u67e5\u6a21\u62df\u5668\u4e2d\u7684\u8f66\u8f86"},{"location":"catalogue_vehicles/#_4","text":"","title":"\u8f66"},{"location":"catalogue_vehicles/#-a2","text":"\u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : A2 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.a2 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5965\u8fea - A2"},{"location":"catalogue_vehicles/#-e-tron","text":"\u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : E-Tron \u7c7b\u522b : SUV \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.etron \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5965\u8fea - E-Tron"},{"location":"catalogue_vehicles/#-tt","text":"\u5236\u9020\u5546 : \u5965\u8fea \u578b\u53f7 : TT \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.audi.tt \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5965\u8fea - TT"},{"location":"catalogue_vehicles/#-","text":"\u5236\u9020\u5546 : \u5b9d\u9a6c \u578b\u53f7 : \u591a\u529f\u80fd\u65c5\u884c\u8f66 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.bmw.grandtourer \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5b9d\u9a6c - \u591a\u529f\u80fd\u65c5\u884c\u8f66"},{"location":"catalogue_vehicles/#-impala","text":"\u5236\u9020\u5546 : \u96ea\u4f5b\u5170 \u578b\u53f7 : Impala \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.chevrolet.impala \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u96ea\u4f5b\u5170 - Impala"},{"location":"catalogue_vehicles/#-c3","text":"\u5236\u9020\u5546 : \u96ea\u94c1\u9f99 \u578b\u53f7 : C3 \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.citroen.c3 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u96ea\u94c1\u9f99 - C3"},{"location":"catalogue_vehicles/#-charger-2020","text":"\u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Charger 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.dodge.charger_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u9053\u5947 - Charger 2020"},{"location":"catalogue_vehicles/#-police-charger","text":"\u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Police Charger \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.dodge.charger_police \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u9053\u5947 - Police Charger"},{"location":"catalogue_vehicles/#-police-charger-2020","text":"\u5236\u9020\u5546 : \u9053\u5947 \u578b\u53f7 : Police Charger 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.dodge.charger_police_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u9053\u5947 - Police Charger 2020"},{"location":"catalogue_vehicles/#-_1","text":"\u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.ford.crown \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : taxi \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u798f\u7279 - \u7687\u51a0\uff08\u51fa\u79df\u8f66\uff09"},{"location":"catalogue_vehicles/#-mustang","text":"\u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : Mustang \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.ford.mustang \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u798f\u7279 - Mustang"},{"location":"catalogue_vehicles/#-wrangler-rubicon","text":"\u5236\u9020\u5546 : \u5409\u666e\u8f66 \u578b\u53f7 : Wrangler Rubicon \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.jeep.wrangler_rubicon \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5409\u666e\u8f66 - Wrangler Rubicon"},{"location":"catalogue_vehicles/#-mkz-2017","text":"\u5236\u9020\u5546 : \u6797\u80af \u578b\u53f7 : MKZ 2017 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.lincoln.mkz_2017 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u6797\u80af - MKZ 2017"},{"location":"catalogue_vehicles/#-mkz-2020","text":"\u5236\u9020\u5546 : \u6797\u80af \u578b\u53f7 : MKZ 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.lincoln.mkz_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u6797\u80af - MKZ 2020"},{"location":"catalogue_vehicles/#-coupe","text":"\u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Coupe \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.mercedes.coupe \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u6885\u8d5b\u5fb7\u65af - Coupe"},{"location":"catalogue_vehicles/#-coupe-2020","text":"\u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Coupe 2020 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mercedes.coupe_2020 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u6885\u8d5b\u5fb7\u65af - Coupe 2020"},{"location":"catalogue_vehicles/#-microlino","text":"\u5236\u9020\u5546 : \u5fae\u578b\u8f66 \u578b\u53f7 : Microlino \u7c7b\u522b : \u5fae\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.micro.microlino \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5fae\u578b\u8f66 - Microlino"},{"location":"catalogue_vehicles/#-cooper-s","text":"\u5236\u9020\u5546 : \u8ff7\u4f60 \u578b\u53f7 : Cooper S \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.mini.cooper_s \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u8ff7\u4f60 - Cooper S"},{"location":"catalogue_vehicles/#-cooper-s-2021","text":"\u5236\u9020\u5546 : \u8ff7\u4f60 \u578b\u53f7 : Cooper S 2021 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mini.cooper_s_2021 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u8ff7\u4f60 - Cooper S 2021"},{"location":"catalogue_vehicles/#-micra","text":"\u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Micra \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.nissan.micra \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5c3c\u6851 - Micra"},{"location":"catalogue_vehicles/#-patrol","text":"\u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Patrol \u7c7b\u522b : SUV \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.nissan.patrol \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5c3c\u6851 - Patrol"},{"location":"catalogue_vehicles/#-patrol-2021","text":"\u5236\u9020\u5546 : \u5c3c\u6851 \u578b\u53f7 : Patrol 2021 \u7c7b\u522b : SUV \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.nissan.patrol_2021 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u5c3c\u6851 - Patrol 2021"},{"location":"catalogue_vehicles/#seat-leon","text":"\u5236\u9020\u5546 : Seat \u578b\u53f7 : Leon \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.seat.leon \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Seat - Leon"},{"location":"catalogue_vehicles/#-model-3","text":"\u5236\u9020\u5546 : \u7279\u65af\u62c9 \u578b\u53f7 : Model 3 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.tesla.model3 \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u7279\u65af\u62c9 - Model 3"},{"location":"catalogue_vehicles/#toyota-prius","text":"\u5236\u9020\u5546 : Toyota \u578b\u53f7 : Prius \u7c7b\u522b : \u7d27\u51d1\u578b\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.toyota.prius \u57fa\u672c\u7c7b\u578b : \u5c0f\u6c7d\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Toyota - Prius"},{"location":"catalogue_vehicles/#_5","text":"","title":"\u5361\u8f66"},{"location":"catalogue_vehicles/#carla-motors-carlacola","text":"\u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : CarlaCola \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.carlamotors.carlacola \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"CARLA Motors - CarlaCola"},{"location":"catalogue_vehicles/#carla-motors-hgv","text":"\u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09 \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.carlamotors.european_hgv \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"CARLA Motors - \u6b27\u6d32 HGV\uff08\u9a7e\u9a76\u5ba4\u4f4d\u4e8e\u53d1\u52a8\u673a\u4e0a\u65b9\uff09"},{"location":"catalogue_vehicles/#carla-motors-firetruck","text":"\u5236\u9020\u5546 : CARLA Motors \u578b\u53f7 : Firetruck \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.carlamotors.firetruck \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"CARLA Motors - Firetruck"},{"location":"catalogue_vehicles/#-cybertruck","text":"\u5236\u9020\u5546 : \u7279\u65af\u62c9 \u578b\u53f7 : Cybertruck \u7c7b\u522b : \u5361\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.tesla.cybertruck \u57fa\u672c\u7c7b\u578b : \u5361\u8f66 \u7279\u6b8a\u7c7b\u578b : \u7535\u52a8 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u7279\u65af\u62c9 - Cybertruck"},{"location":"catalogue_vehicles/#_6","text":"","title":"\u9762\u5305\u8f66"},{"location":"catalogue_vehicles/#-_2","text":"\u5236\u9020\u5546 : \u798f\u7279 \u578b\u53f7 : \u6551\u62a4\u8f66 \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.ford.ambulance \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u7279\u6b8a\u7c7b\u578b : \u6551\u9669\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u798f\u7279 - \u6551\u62a4\u8f66"},{"location":"catalogue_vehicles/#-sprinter","text":"\u5236\u9020\u5546 : \u6885\u8d5b\u5fb7\u65af \u578b\u53f7 : Sprinter \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mercedes.sprinter \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u6885\u8d5b\u5fb7\u65af - Sprinter"},{"location":"catalogue_vehicles/#-t2","text":"\u5236\u9020\u5546 : \u5927\u4f17 \u578b\u53f7 : T2 \u7c7b\u522b : \u6807\u51c6 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.volkswagen.t2 \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5927\u4f17 - T2"},{"location":"catalogue_vehicles/#-t2-2021","text":"\u5236\u9020\u5546 : \u5927\u4f17 \u578b\u53f7 : T2 2021 \u7c7b\u522b : \u9762\u5305\u8f66 \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.volkswagen.t2_2021 \u57fa\u672c\u7c7b\u578b : \u9762\u5305\u8f66 \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : True","title":"\u5927\u4f17 - T2 2021"},{"location":"catalogue_vehicles/#_7","text":"","title":"\u5df4\u58eb"},{"location":"catalogue_vehicles/#-fusorosa","text":"\u5236\u9020\u5546 : \u4e09\u83f1 \u578b\u53f7 : Fusorosa \u7c7b\u522b : \u5df4\u58eb \u4e16\u4ee3 : 2 \u84dd\u56fe ID : vehicle.mitsubishi.fusorosa \u57fa\u672c\u7c7b\u578b : \u5df4\u58eb \u6709\u706f : True \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u4e09\u83f1 - Fusorosa"},{"location":"catalogue_vehicles/#_8","text":"","title":"\u6469\u6258\u8f66"},{"location":"catalogue_vehicles/#-low-rider","text":"\u5236\u9020\u5546 : \u54c8\u96f7\u6234\u7ef4\u68ee \u578b\u53f7 : Low Rider \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.harley-davidson.low_rider \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u54c8\u96f7\u6234\u7ef4\u68ee - Low Rider"},{"location":"catalogue_vehicles/#kawasaki-ninja","text":"\u5236\u9020\u5546 : Kawasaki \u578b\u53f7 : Ninja \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.kawasaki.ninja \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Kawasaki - Ninja"},{"location":"catalogue_vehicles/#vespa-zx-125","text":"\u5236\u9020\u5546 : Vespa \u578b\u53f7 : ZX 125 \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.vespa.zx125 \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Vespa - ZX 125"},{"location":"catalogue_vehicles/#yamaha-yzf","text":"\u5236\u9020\u5546 : Yamaha \u578b\u53f7 : YZF \u7c7b\u522b : \u6469\u6258\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.yamaha.yzf \u57fa\u672c\u7c7b\u578b : \u6469\u6258\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Yamaha - YZF"},{"location":"catalogue_vehicles/#_9","text":"","title":"\u81ea\u884c\u8f66"},{"location":"catalogue_vehicles/#bh-","text":"\u5236\u9020\u5546 : BH \u578b\u53f7 : \u8d8a\u91ce\u81ea\u884c\u8f66 \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.bh.crossbike \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"BH - \u8d8a\u91ce\u81ea\u884c\u8f66"},{"location":"catalogue_vehicles/#-century","text":"\u5236\u9020\u5546 : \u5927\u540d\u81ea\u884c\u8f66 \u578b\u53f7 : Century \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.diamondback.century \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"\u5927\u540d\u81ea\u884c\u8f66 - Century"},{"location":"catalogue_vehicles/#gazelle-omafiets","text":"\u5236\u9020\u5546 : Gazelle \u578b\u53f7 : Omafiets \u7c7b\u522b : \u81ea\u884c\u8f66 \u4e16\u4ee3 : 1 \u84dd\u56fe ID : vehicle.gazelle.omafiets \u57fa\u672c\u7c7b\u578b : \u81ea\u884c\u8f66 \u6709\u706f : False \u6709\u6253\u5f00\u7684\u95e8 : False","title":"Gazelle - Omafiets"},{"location":"cont_code_of_conduct/","text":"\u8d21\u732e\u8005\u5951\u7ea6\u884c\u4e3a\u51c6\u5219 \u6211\u4eec\u7684\u627f\u8bfa \u6211\u4eec\u7684\u6807\u51c6 \u6211\u4eec\u7684\u8d23\u4efb \u8303\u56f4 \u6267\u884c \u5f52\u5c5e \u6211\u4eec\u7684\u627f\u8bfa \u4e3a\u4e86\u8425\u9020\u4e00\u4e2a\u5f00\u653e\u548c\u70ed\u60c5\u7684\u73af\u5883\uff0c\u6211\u4eec\u4f5c\u4e3a\u8d21\u732e\u8005\u548c\u7ef4\u62a4\u8005\u627f\u8bfa\u8ba9\u6bcf\u4e2a\u4eba\u53c2\u4e0e\u6211\u4eec\u7684\u9879\u76ee\u548c\u793e\u533a\u6210\u4e3a\u65e0\u9a9a\u6270\u7684\u4f53\u9a8c\uff0c\u65e0\u8bba\u5e74\u9f84\u3001\u4f53\u578b\u3001\u6b8b\u75be\u3001\u79cd\u65cf\u3001\u6027\u522b\u8ba4\u540c\u548c\u8868\u8fbe\uff0c\u7ecf\u9a8c\u6c34\u5e73\u3001\u6559\u80b2\u7a0b\u5ea6\u3001\u793e\u4f1a\u7ecf\u6d4e\u5730\u4f4d\u3001\u56fd\u7c4d\u3001\u4e2a\u4eba\u5916\u8868\u3001\u79cd\u65cf\u3001\u5b97\u6559\u6216\u6027\u8ba4\u540c\u548c\u53d6\u5411\u3002 \u6211\u4eec\u7684\u6807\u51c6 \u6709\u52a9\u4e8e\u521b\u9020\u79ef\u6781\u73af\u5883\u7684\u884c\u4e3a\u793a\u4f8b\u5305\u62ec\uff1a \u4f7f\u7528\u6b22\u8fce\u548c\u5305\u5bb9\u7684\u8bed\u8a00 \u5c0a\u91cd\u4e0d\u540c\u7684\u89c2\u70b9\u548c\u7ecf\u9a8c \u4f18\u96c5\u5730\u63a5\u53d7\u5efa\u8bbe\u6027\u7684\u6279\u8bc4 \u4e13\u6ce8\u4e8e\u5bf9\u793e\u533a\u6700\u6709\u5229\u7684\u4e8b\u60c5 \u5bf9\u5176\u4ed6\u793e\u533a\u6210\u5458\u8868\u73b0\u51fa\u540c\u60c5\u5fc3 \u53c2\u4e0e\u8005\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u793a\u4f8b\u5305\u62ec\uff1a \u4f7f\u7528\u6027\u8bed\u8a00\u6216\u56fe\u50cf\u4ee5\u53ca\u4e0d\u53d7\u6b22\u8fce\u7684\u6027\u5173\u6ce8\u6216\u6311\u9017 \u6076\u641e\u3001\u4fae\u8fb1/\u8d2c\u635f\u8bc4\u8bba\u4ee5\u53ca\u4e2a\u4eba\u6216\u653f\u6cbb\u653b\u51fb \u516c\u5f00\u6216\u79c1\u4eba\u9a9a\u6270 \u672a\u7ecf\u660e\u786e\u8bb8\u53ef\uff0c\u53d1\u5e03\u4ed6\u4eba\u7684\u79c1\u4eba\u4fe1\u606f\uff0c\u4f8b\u5982\u5b9e\u9645\u5730\u5740\u6216\u7535\u5b50\u5730\u5740 \u5728\u4e13\u4e1a\u73af\u5883\u4e2d\u53ef\u80fd\u88ab\u5408\u7406\u5730\u8ba4\u4e3a\u4e0d\u9002\u5f53\u7684\u5176\u4ed6\u884c\u4e3a \u6211\u4eec\u7684\u8d23\u4efb \u9879\u76ee\u7ef4\u62a4\u8005\u6709\u8d23\u4efb\u9610\u660e\u53ef\u63a5\u53d7\u884c\u4e3a\u7684\u6807\u51c6\uff0c\u5e76\u5e94\u9488\u5bf9\u4efb\u4f55\u4e0d\u53ef\u63a5\u53d7\u884c\u4e3a\u7684\u60c5\u51b5\u91c7\u53d6\u9002\u5f53\u548c\u516c\u5e73\u7684\u7ea0\u6b63\u63aa\u65bd\u3002 \u9879\u76ee\u7ef4\u62a4\u8005\u6709\u6743\u5229\u548c\u8d23\u4efb\u5220\u9664\u3001\u7f16\u8f91\u6216\u62d2\u7edd\u4e0d\u7b26\u5408\u672c\u884c\u4e3a\u51c6\u5219\u7684\u8bc4\u8bba\u3001\u63d0\u4ea4\u3001\u4ee3\u7801\u3001\u7ef4\u57fa\u7f16\u8f91\u3001\u95ee\u9898\u548c\u5176\u4ed6\u8d21\u732e\uff0c\u6216\u8005\u6682\u65f6\u6216\u6c38\u4e45\u7981\u6b62\u4efb\u4f55\u8d21\u732e\u8005\u7684\u5176\u4ed6\u884c\u4e3a\u4ed6\u4eec\u8ba4\u4e3a\u4e0d\u6070\u5f53\u3001\u5177\u6709\u5a01\u80c1\u6027\u3001\u5192\u72af\u6027\u6216\u6709\u5bb3\u3002 \u8303\u56f4 \u5f53\u4e2a\u4eba\u4ee3\u8868\u9879\u76ee\u6216\u5176\u793e\u533a\u65f6\uff0c\u672c\u884c\u4e3a\u51c6\u5219\u9002\u7528\u4e8e\u9879\u76ee\u7a7a\u95f4\u548c\u516c\u5171\u7a7a\u95f4\u3002\u4ee3\u8868\u9879\u76ee\u6216\u793e\u533a\u7684\u793a\u4f8b\u5305\u62ec\u4f7f\u7528\u5b98\u65b9\u9879\u76ee\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u901a\u8fc7\u5b98\u65b9\u793e\u4ea4\u5a92\u4f53\u5e10\u6237\u53d1\u5e16\u6216\u5728\u7ebf\u4e0a\u6216\u7ebf\u4e0b\u6d3b\u52a8\u4e2d\u62c5\u4efb\u6307\u5b9a\u4ee3\u8868\u3002\u9879\u76ee\u7684\u8868\u793a\u53ef\u4ee5\u7531\u9879\u76ee\u7ef4\u62a4\u8005\u8fdb\u4e00\u6b65\u5b9a\u4e49\u548c\u6f84\u6e05\u3002 \u6267\u884c \u53ef\u4ee5\u901a\u8fc7 info-carla@osvf.org \u8054\u7cfb\u9879\u76ee\u56e2\u961f\u6765\u4e3e\u62a5\u8fb1\u9a82\u3001\u9a9a\u6270\u6216\u5176\u4ed6\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u3002\u6240\u6709\u6295\u8bc9\u90fd\u5c06\u63a5\u53d7\u5ba1\u67e5\u548c\u8c03\u67e5\uff0c\u5e76\u5c06\u6839\u636e\u5177\u4f53\u60c5\u51b5\u505a\u51fa\u5fc5\u8981\u4e14\u9002\u5f53\u7684\u56de\u5e94\u3002\u9879\u76ee\u56e2\u961f\u6709\u4e49\u52a1\u5bf9\u4e8b\u4ef6\u62a5\u544a\u8005\u4fdd\u5bc6\u3002\u5177\u4f53\u6267\u884c\u653f\u7b56\u7684\u66f4\u591a\u7ec6\u8282\u53ef\u80fd\u4f1a\u5355\u72ec\u53d1\u5e03\u3002 \u4e0d\u5584\u610f\u5730\u9075\u5b88\u6216\u6267\u884c\u884c\u4e3a\u51c6\u5219\u7684\u9879\u76ee\u7ef4\u62a4\u8005\u53ef\u80fd\u4f1a\u9762\u4e34\u9879\u76ee\u9886\u5bfc\u5c42\u5176\u4ed6\u6210\u5458\u786e\u5b9a\u7684\u6682\u65f6\u6216\u6c38\u4e45\u7684\u5f71\u54cd\u3002 \u5f52\u5c5e \u672c\u884c\u4e3a\u51c6\u5219\u6539\u7f16\u81ea \u8d21\u732e\u8005\u5951\u7ea6 1.4 \u7248\uff0c\u53ef\u4ece https://www.contributor-covenant.org/version/1/4/code-of-conduct.html \u83b7\u53d6\u3002","title":"\u884c\u4e3a\u51c6\u5219"},{"location":"cont_code_of_conduct/#_1","text":"\u6211\u4eec\u7684\u627f\u8bfa \u6211\u4eec\u7684\u6807\u51c6 \u6211\u4eec\u7684\u8d23\u4efb \u8303\u56f4 \u6267\u884c \u5f52\u5c5e","title":"\u8d21\u732e\u8005\u5951\u7ea6\u884c\u4e3a\u51c6\u5219"},{"location":"cont_code_of_conduct/#_2","text":"\u4e3a\u4e86\u8425\u9020\u4e00\u4e2a\u5f00\u653e\u548c\u70ed\u60c5\u7684\u73af\u5883\uff0c\u6211\u4eec\u4f5c\u4e3a\u8d21\u732e\u8005\u548c\u7ef4\u62a4\u8005\u627f\u8bfa\u8ba9\u6bcf\u4e2a\u4eba\u53c2\u4e0e\u6211\u4eec\u7684\u9879\u76ee\u548c\u793e\u533a\u6210\u4e3a\u65e0\u9a9a\u6270\u7684\u4f53\u9a8c\uff0c\u65e0\u8bba\u5e74\u9f84\u3001\u4f53\u578b\u3001\u6b8b\u75be\u3001\u79cd\u65cf\u3001\u6027\u522b\u8ba4\u540c\u548c\u8868\u8fbe\uff0c\u7ecf\u9a8c\u6c34\u5e73\u3001\u6559\u80b2\u7a0b\u5ea6\u3001\u793e\u4f1a\u7ecf\u6d4e\u5730\u4f4d\u3001\u56fd\u7c4d\u3001\u4e2a\u4eba\u5916\u8868\u3001\u79cd\u65cf\u3001\u5b97\u6559\u6216\u6027\u8ba4\u540c\u548c\u53d6\u5411\u3002","title":"\u6211\u4eec\u7684\u627f\u8bfa"},{"location":"cont_code_of_conduct/#_3","text":"\u6709\u52a9\u4e8e\u521b\u9020\u79ef\u6781\u73af\u5883\u7684\u884c\u4e3a\u793a\u4f8b\u5305\u62ec\uff1a \u4f7f\u7528\u6b22\u8fce\u548c\u5305\u5bb9\u7684\u8bed\u8a00 \u5c0a\u91cd\u4e0d\u540c\u7684\u89c2\u70b9\u548c\u7ecf\u9a8c \u4f18\u96c5\u5730\u63a5\u53d7\u5efa\u8bbe\u6027\u7684\u6279\u8bc4 \u4e13\u6ce8\u4e8e\u5bf9\u793e\u533a\u6700\u6709\u5229\u7684\u4e8b\u60c5 \u5bf9\u5176\u4ed6\u793e\u533a\u6210\u5458\u8868\u73b0\u51fa\u540c\u60c5\u5fc3 \u53c2\u4e0e\u8005\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u793a\u4f8b\u5305\u62ec\uff1a \u4f7f\u7528\u6027\u8bed\u8a00\u6216\u56fe\u50cf\u4ee5\u53ca\u4e0d\u53d7\u6b22\u8fce\u7684\u6027\u5173\u6ce8\u6216\u6311\u9017 \u6076\u641e\u3001\u4fae\u8fb1/\u8d2c\u635f\u8bc4\u8bba\u4ee5\u53ca\u4e2a\u4eba\u6216\u653f\u6cbb\u653b\u51fb \u516c\u5f00\u6216\u79c1\u4eba\u9a9a\u6270 \u672a\u7ecf\u660e\u786e\u8bb8\u53ef\uff0c\u53d1\u5e03\u4ed6\u4eba\u7684\u79c1\u4eba\u4fe1\u606f\uff0c\u4f8b\u5982\u5b9e\u9645\u5730\u5740\u6216\u7535\u5b50\u5730\u5740 \u5728\u4e13\u4e1a\u73af\u5883\u4e2d\u53ef\u80fd\u88ab\u5408\u7406\u5730\u8ba4\u4e3a\u4e0d\u9002\u5f53\u7684\u5176\u4ed6\u884c\u4e3a","title":"\u6211\u4eec\u7684\u6807\u51c6"},{"location":"cont_code_of_conduct/#_4","text":"\u9879\u76ee\u7ef4\u62a4\u8005\u6709\u8d23\u4efb\u9610\u660e\u53ef\u63a5\u53d7\u884c\u4e3a\u7684\u6807\u51c6\uff0c\u5e76\u5e94\u9488\u5bf9\u4efb\u4f55\u4e0d\u53ef\u63a5\u53d7\u884c\u4e3a\u7684\u60c5\u51b5\u91c7\u53d6\u9002\u5f53\u548c\u516c\u5e73\u7684\u7ea0\u6b63\u63aa\u65bd\u3002 \u9879\u76ee\u7ef4\u62a4\u8005\u6709\u6743\u5229\u548c\u8d23\u4efb\u5220\u9664\u3001\u7f16\u8f91\u6216\u62d2\u7edd\u4e0d\u7b26\u5408\u672c\u884c\u4e3a\u51c6\u5219\u7684\u8bc4\u8bba\u3001\u63d0\u4ea4\u3001\u4ee3\u7801\u3001\u7ef4\u57fa\u7f16\u8f91\u3001\u95ee\u9898\u548c\u5176\u4ed6\u8d21\u732e\uff0c\u6216\u8005\u6682\u65f6\u6216\u6c38\u4e45\u7981\u6b62\u4efb\u4f55\u8d21\u732e\u8005\u7684\u5176\u4ed6\u884c\u4e3a\u4ed6\u4eec\u8ba4\u4e3a\u4e0d\u6070\u5f53\u3001\u5177\u6709\u5a01\u80c1\u6027\u3001\u5192\u72af\u6027\u6216\u6709\u5bb3\u3002","title":"\u6211\u4eec\u7684\u8d23\u4efb"},{"location":"cont_code_of_conduct/#_5","text":"\u5f53\u4e2a\u4eba\u4ee3\u8868\u9879\u76ee\u6216\u5176\u793e\u533a\u65f6\uff0c\u672c\u884c\u4e3a\u51c6\u5219\u9002\u7528\u4e8e\u9879\u76ee\u7a7a\u95f4\u548c\u516c\u5171\u7a7a\u95f4\u3002\u4ee3\u8868\u9879\u76ee\u6216\u793e\u533a\u7684\u793a\u4f8b\u5305\u62ec\u4f7f\u7528\u5b98\u65b9\u9879\u76ee\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u901a\u8fc7\u5b98\u65b9\u793e\u4ea4\u5a92\u4f53\u5e10\u6237\u53d1\u5e16\u6216\u5728\u7ebf\u4e0a\u6216\u7ebf\u4e0b\u6d3b\u52a8\u4e2d\u62c5\u4efb\u6307\u5b9a\u4ee3\u8868\u3002\u9879\u76ee\u7684\u8868\u793a\u53ef\u4ee5\u7531\u9879\u76ee\u7ef4\u62a4\u8005\u8fdb\u4e00\u6b65\u5b9a\u4e49\u548c\u6f84\u6e05\u3002","title":"\u8303\u56f4"},{"location":"cont_code_of_conduct/#_6","text":"\u53ef\u4ee5\u901a\u8fc7 info-carla@osvf.org \u8054\u7cfb\u9879\u76ee\u56e2\u961f\u6765\u4e3e\u62a5\u8fb1\u9a82\u3001\u9a9a\u6270\u6216\u5176\u4ed6\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u3002\u6240\u6709\u6295\u8bc9\u90fd\u5c06\u63a5\u53d7\u5ba1\u67e5\u548c\u8c03\u67e5\uff0c\u5e76\u5c06\u6839\u636e\u5177\u4f53\u60c5\u51b5\u505a\u51fa\u5fc5\u8981\u4e14\u9002\u5f53\u7684\u56de\u5e94\u3002\u9879\u76ee\u56e2\u961f\u6709\u4e49\u52a1\u5bf9\u4e8b\u4ef6\u62a5\u544a\u8005\u4fdd\u5bc6\u3002\u5177\u4f53\u6267\u884c\u653f\u7b56\u7684\u66f4\u591a\u7ec6\u8282\u53ef\u80fd\u4f1a\u5355\u72ec\u53d1\u5e03\u3002 \u4e0d\u5584\u610f\u5730\u9075\u5b88\u6216\u6267\u884c\u884c\u4e3a\u51c6\u5219\u7684\u9879\u76ee\u7ef4\u62a4\u8005\u53ef\u80fd\u4f1a\u9762\u4e34\u9879\u76ee\u9886\u5bfc\u5c42\u5176\u4ed6\u6210\u5458\u786e\u5b9a\u7684\u6682\u65f6\u6216\u6c38\u4e45\u7684\u5f71\u54cd\u3002","title":"\u6267\u884c"},{"location":"cont_code_of_conduct/#_7","text":"\u672c\u884c\u4e3a\u51c6\u5219\u6539\u7f16\u81ea \u8d21\u732e\u8005\u5951\u7ea6 1.4 \u7248\uff0c\u53ef\u4ece https://www.contributor-covenant.org/version/1/4/code-of-conduct.html \u83b7\u53d6\u3002","title":"\u5f52\u5c5e"},{"location":"cont_coding_standard/","text":"\u7f16\u7801\u6807\u51c6 \u4e00\u822c Python C++ \u4e00\u822c \u4f7f\u7528\u7a7a\u683c\uff0c\u800c\u4e0d\u662f\u5236\u8868\u7b26\u3002 \u907f\u514d\u6dfb\u52a0\u5c3e\u968f\u7a7a\u683c\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u5dee\u5f02\u4e2d\u4ea7\u751f\u566a\u97f3\u3002 Python \u6ce8\u91ca\u4e0d\u5e94\u8d85\u8fc7 80 \u5217\uff0c\u4ee3\u7801\u4e0d\u5e94\u8d85\u8fc7 120 \u5217\u3002 \u6240\u6709\u4ee3\u7801\u5fc5\u987b\u4e0e Python 2.7 \u548c 3.7 \u517c\u5bb9\u3002 Pylint \u4e0d\u5e94\u7ed9\u51fa\u4efb\u4f55\u9519\u8bef\u6216\u8b66\u544a\uff08\u5f88\u5c11\u6709\u4f8b\u5916\u9002\u7528\u4e8e\u5916\u90e8\u7c7b\uff0c\u5982 numpy \u548c pygame \uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684 .pylintrc \uff09\u3002 Python \u4ee3\u7801\u9075\u5faa PEP8 \u98ce\u683c\u6307\u5357 \uff08 autopep8 \u5c3d\u53ef\u80fd\u4f7f\u7528\uff09\u3002 C++ \u6ce8\u91ca\u4e0d\u5e94\u8d85\u8fc7 80 \u5217\uff0c\u5982\u679c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u6e05\u6670\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\u4ee3\u7801\u53ef\u80fd\u4f1a\u7a0d\u5fae\u8d85\u51fa\u6b64\u9650\u5236\u3002 \u7f16\u8bd1\u4e0d\u5e94\u7ed9\u51fa\u4efb\u4f55\u9519\u8bef\u6216\u8b66\u544a ( clang++-8 -Wall -Wextra -std=C++14 -Wno-missing-braces ). \u7981\u6b62\u4f7f\u7528 throw \uff0c\u8bf7\u6539\u4e3a\u4f7f\u7528 carla::throw_exception \u3002 \u865a\u5e7b C++ \u4ee3\u7801\uff08CarlaUE4 \u548c Carla \u63d2\u4ef6\uff09\u9075\u5faa \u865a\u5e7b\u5f15\u64ce\u7684\u7f16\u7801\u6807\u51c6 \uff0c\u4f46\u4f7f\u7528\u7a7a\u683c\u800c\u4e0d\u662f\u5236\u8868\u7b26\u3002 LibCarla \u4f7f\u7528 \u8c37\u6b4c\u98ce\u683c\u6307\u5357 \u7684\u53d8\u4f53\u3002 \u5982\u679c\u4ee3\u7801\u5728\u670d\u52a1\u5668\u7aef\u4f7f\u7528\uff0c\u5219\u5e94\u5c06 try-catch \u5757\u7684\u4f7f\u7528 #ifndef LIBCARLA_NO_EXCEPTIONS \u62ec\u8d77\u6765 \u3002","title":"\u7f16\u7801\u6807\u51c6"},{"location":"cont_coding_standard/#_1","text":"\u4e00\u822c Python C++","title":"\u7f16\u7801\u6807\u51c6"},{"location":"cont_coding_standard/#_2","text":"\u4f7f\u7528\u7a7a\u683c\uff0c\u800c\u4e0d\u662f\u5236\u8868\u7b26\u3002 \u907f\u514d\u6dfb\u52a0\u5c3e\u968f\u7a7a\u683c\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u5dee\u5f02\u4e2d\u4ea7\u751f\u566a\u97f3\u3002","title":"\u4e00\u822c"},{"location":"cont_coding_standard/#python","text":"\u6ce8\u91ca\u4e0d\u5e94\u8d85\u8fc7 80 \u5217\uff0c\u4ee3\u7801\u4e0d\u5e94\u8d85\u8fc7 120 \u5217\u3002 \u6240\u6709\u4ee3\u7801\u5fc5\u987b\u4e0e Python 2.7 \u548c 3.7 \u517c\u5bb9\u3002 Pylint \u4e0d\u5e94\u7ed9\u51fa\u4efb\u4f55\u9519\u8bef\u6216\u8b66\u544a\uff08\u5f88\u5c11\u6709\u4f8b\u5916\u9002\u7528\u4e8e\u5916\u90e8\u7c7b\uff0c\u5982 numpy \u548c pygame \uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684 .pylintrc \uff09\u3002 Python \u4ee3\u7801\u9075\u5faa PEP8 \u98ce\u683c\u6307\u5357 \uff08 autopep8 \u5c3d\u53ef\u80fd\u4f7f\u7528\uff09\u3002","title":"Python"},{"location":"cont_coding_standard/#c","text":"\u6ce8\u91ca\u4e0d\u5e94\u8d85\u8fc7 80 \u5217\uff0c\u5982\u679c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u6e05\u6670\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\u4ee3\u7801\u53ef\u80fd\u4f1a\u7a0d\u5fae\u8d85\u51fa\u6b64\u9650\u5236\u3002 \u7f16\u8bd1\u4e0d\u5e94\u7ed9\u51fa\u4efb\u4f55\u9519\u8bef\u6216\u8b66\u544a ( clang++-8 -Wall -Wextra -std=C++14 -Wno-missing-braces ). \u7981\u6b62\u4f7f\u7528 throw \uff0c\u8bf7\u6539\u4e3a\u4f7f\u7528 carla::throw_exception \u3002 \u865a\u5e7b C++ \u4ee3\u7801\uff08CarlaUE4 \u548c Carla \u63d2\u4ef6\uff09\u9075\u5faa \u865a\u5e7b\u5f15\u64ce\u7684\u7f16\u7801\u6807\u51c6 \uff0c\u4f46\u4f7f\u7528\u7a7a\u683c\u800c\u4e0d\u662f\u5236\u8868\u7b26\u3002 LibCarla \u4f7f\u7528 \u8c37\u6b4c\u98ce\u683c\u6307\u5357 \u7684\u53d8\u4f53\u3002 \u5982\u679c\u4ee3\u7801\u5728\u670d\u52a1\u5668\u7aef\u4f7f\u7528\uff0c\u5219\u5e94\u5c06 try-catch \u5757\u7684\u4f7f\u7528 #ifndef LIBCARLA_NO_EXCEPTIONS \u62ec\u8d77\u6765 \u3002","title":"C++"},{"location":"cont_contribution_guidelines/","text":"\u4e3a Carla \u505a\u51fa\u8d21\u732e Carla \u56e2\u961f\u5f88\u9ad8\u5174\u63a5\u53d7\u4efb\u4f55\u613f\u610f\u5408\u4f5c\u7684\u4eba\u7684\u8d21\u732e\u3002\u6839\u636e\u8d21\u732e\u8005\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u4e3a\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002\u8be5\u56e2\u961f\u5c06\u5c3d\u6700\u5927\u52aa\u529b\u5c06\u8d21\u732e\u6210\u529f\u6574\u5408\u5230 Carla \u4e2d\u3002 \u770b\u770b\u5427\uff0c\u4e0d\u8981\u72b9\u8c6b\uff01 \u62a5\u544a\u9519\u8bef \u8bf7\u6c42\u529f\u80fd \u4ee3\u7801\u8d21\u732e \u4e86\u89e3\u865a\u5e7b\u5f15\u64ce \u5f00\u59cb\u4e4b\u524d \u7f16\u7801\u6807\u51c6 \u63d0\u4ea4 \u6e05\u5355 \u827a\u672f\u8d21\u732e \u6587\u6863\u8d21\u732e \u62a5\u544a\u9519\u8bef \u53ef\u4ee5\u5728 GitHub \u4e0a\u7684 issue \u90e8\u5206 \u62a5\u544a\u95ee\u9898\u3002\u5728\u62a5\u544a\u65b0\u9519\u8bef\u4e4b\u524d\uff0c\u8bf7\u52a1\u5fc5\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\u3002 1. \u68c0\u67e5\u662f\u5426\u5df2\u62a5\u544a\u95ee\u9898\u3002 \u5728 GitHub \u4e0a\u7684\u540c\u4e00\u95ee\u9898\u90e8\u5206\u67e5\u627e\u5b83\u3002 2. \u9605\u8bfb\u6587\u6863\u3002 \u786e\u4fdd\u95ee\u9898\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5bf9 Carla \u5e94\u8be5\u5982\u4f55\u5de5\u4f5c\u7684\u8bef\u89e3\u3002\u9605\u8bfb \u6587\u6863 \u4e2d\u4e0e\u8be5\u95ee\u9898\u76f8\u5173\u7684\u9875\u9762\u5e76\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\u3002 \u8bf7\u6c42\u529f\u80fd \u65b0\u529f\u80fd\u7684\u60f3\u6cd5\u4e5f\u662f\u4e00\u79cd\u5f88\u597d\u7684\u8d21\u732e\u65b9\u5f0f\u3002\u4efb\u4f55\u53ef\u4ee5\u6539\u5584\u7528\u6237\u4f53\u9a8c\u7684\u5efa\u8bae\u90fd\u53ef\u4ee5\u5728 \u6b64\u5904 \u7684\u76f8\u5e94 GitHub \u90e8\u5206\u63d0\u4ea4\u3002 \u4ee3\u7801\u8d21\u732e \u5728\u5f00\u59cb\u52a8\u624b\u7f16\u7801\u4e4b\u524d\uff0c\u8bf7\u67e5\u770b issue \u677f\u5757 \u4ee5\u4e86\u89e3\u56e2\u961f\u5df2\u7ecf\u5728\u505a\u4ec0\u4e48\uff0c\u4ee5\u907f\u514d\u91cd\u53e0\u3002\u5982\u6709\u7591\u95ee\u6216\u8ba8\u8bba\u5982\u4f55\u7ee7\u7eed\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u4e4b\u4e00\uff08\u6216\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 carla.simulator@gmail.com \uff09\u3002 \u4e3a\u4e86\u5f00\u59cb\u5de5\u4f5c\uff0c\u8bf7 \u521b\u5efa CARLA \u5b58\u50a8\u5e93\u7684\u5206\u53c9 \uff0c\u5e76\u5c06\u6240\u8ff0\u5206\u53c9\u514b\u9686\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u3002\u8bf7\u8bb0\u4f4f\u4f7f\u60a8\u7684\u5206\u53c9\u4e0e\u539f\u59cb\u5b58\u50a8\u5e93 \u4fdd\u6301\u540c\u6b65 \u3002 \u4e86\u89e3\u865a\u5e7b\u5f15\u64ce \u6709\u5173\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce 4 \u8fdb\u884c C++ \u7f16\u7a0b\u7684\u57fa\u672c\u4ecb\u7ecd\uff0c\u8bf7\u53c2\u9605 Unreal \u7684 C++ \u7f16\u7a0b\u6559\u7a0b \u3002\u7f51\u4e0a\u8fd8\u6709\u5176\u4ed6\u9009\u9879\uff0c\u5176\u4e2d\u4e00\u4e9b\u4e0d\u662f\u514d\u8d39\u7684\u3002 Udemy \u7684\u865a\u5e7b C++ \u8bfe\u7a0b \u975e\u5e38\u5b8c\u6574\uff0c\u5e76\u4e14\u901a\u5e38\u63d0\u4f9b\u4ef7\u683c\u975e\u5e38\u5b9e\u60e0\u7684\u4f18\u60e0\u3002 \u5f00\u59cb\u4e4b\u524d \u67e5\u770b Carla \u8bbe\u8ba1 \u6587\u6863\uff0c\u4e86\u89e3\u7ec4\u6210 Carla \u7684\u4e0d\u540c\u6a21\u5757\u3002\u9009\u62e9\u6700\u5408\u9002\u7684\u4e00\u4e2a\u6765\u5bb9\u7eb3\u65b0\u529f\u80fd\u3002\u5982\u679c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4efb\u4f55\u7591\u95ee\uff0c \u8bf7\u968f\u65f6\u8054\u7cfb Discord \u670d\u52a1\u5668 \u4e2d\u7684\u56e2\u961f\u3002 \u7f16\u7801\u6807\u51c6 \u63d0\u4ea4\u65b0\u4ee3\u7801\u65f6 \u9075\u5faa\u5f53\u524d\u7684 \u7f16\u7801\u6807\u51c6 \u3002 \u63d0\u4ea4 \u8d21\u732e\u548c\u65b0\u529f\u80fd\u4e0d\u4f1a\u76f4\u63a5\u5408\u5e76\u5230 master \u5206\u652f\uff0c\u800c\u662f\u5408\u5e76\u5230\u540d\u4e3a dev \u7684\u4e2d\u95f4\u5206\u652f\u3002\u8fd9\u79cd Gitflow \u5206\u652f\u6a21\u578b\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u7ef4\u62a4\u7a33\u5b9a\u7684\u4e3b\u5206\u652f\u3002\u8be5\u6a21\u578b\u9700\u8981\u7279\u5b9a\u7684\u8d21\u732e\u5de5\u4f5c\u6d41\u7a0b\u3002 \u59cb\u7ec8\u8ba9\u60a8\u7684 dev \u5206\u652f\u66f4\u65b0\u6700\u65b0\u7684\u66f4\u6539\u3002 \u4ece\u540d\u4e3a username/name_of_the_contribution \u7684 dev \u5b50\u5206\u652f\u4e2d\u5f00\u53d1\u8d21\u732e\u3002 \u8d21\u732e\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u4ece\u60a8\u7684\u5206\u652f\u5411 dev \u63d0\u4ea4\u62c9\u53d6\u8bf7\u6c42\uff08pull-request\uff09\u3002\u586b\u5199\u63cf\u8ff0\u65f6\u5c3d\u91cf\u5177\u6709\u63cf\u8ff0\u6027\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u5408\u5e76\u4e4b\u524d\uff0c\u65b0\u4ee3\u7801\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u68c0\u67e5\u3002\u68c0\u67e5\u7531\u6301\u7eed\u96c6\u6210\u7cfb\u7edf\u81ea\u52a8\u8fd0\u884c\u3002\u5982\u679c\u68c0\u67e5\u6210\u529f\uff0c\u5c06\u4f1a\u51fa\u73b0\u7eff\u8272\u52fe\u53f7\u3002\u5982\u679c\u6709\u7ea2\u8272\u6807\u8bb0\uff0c\u8bf7\u76f8\u5e94\u66f4\u6b63\u4ee3\u7801\u3002 \u4e00\u65e6\u8d21\u732e\u88ab\u5408\u5e76\u5230 dev \u4e2d\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5176\u4f59\u65b0\u529f\u80fd\u4e00\u8d77\u8fdb\u884c\u6d4b\u8bd5\u3002\u5230\u4e0b\u4e00\u4e2a\u7248\u672c\u65f6\uff0c\u8be5 dev \u5206\u652f\u5c06\u5408\u5e76\u5230 master \uff0c\u5e76\u4e14\u8d21\u732e\u5c06\u53ef\u7528\u5e76\u516c\u5e03\u3002 \u6e05\u5355 [ ] \u60a8\u7684\u5206\u652f\u5df2\u4e0e dev \u5206\u652f\u4fdd\u6301\u540c\u6b65\uff0c\u5e76\u901a\u8fc7\u6700\u65b0\u66f4\u6539\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002 [ ] \u5982\u6709\u5fc5\u8981\uff0c\u6269\u5c55 README/\u6587\u6863\u3002 [ ] \u4ee3\u7801\u7f16\u8bd1\u6b63\u786e\u3002 [ ] \u6240\u6709\u6d4b\u8bd5\u5747\u901a\u8fc7 make check \u3002 \u827a\u672f\u8d21\u732e \u827a\u672f\u8d21\u732e\u5305\u62ec\u8f66\u8f86\u3001\u884c\u4eba\u3001\u5730\u56fe\u6216 Carla \u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u8d44\u4ea7\u3002\u8fd9\u4e9b\u5b58\u50a8\u5728 BitBucket \u5b58\u50a8\u5e93\u4e2d\uff0c\u8be5\u5b58\u50a8\u5e93\u6709\u4e00\u4e9b\u5e10\u6237\u7a7a\u95f4\u9650\u5236\u3002\u51fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u8d21\u732e\u8005\u5fc5\u987b\u4e0e Carla \u56e2\u961f\u8054\u7cfb\uff0c\u5e76\u8981\u6c42\u4ed6\u4eec\u5728\u5185\u5bb9\u5b58\u50a8\u5e93\u4e0a\u4e3a\u8d21\u732e\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002 1. \u521b\u5efaBitBucket\u8d26\u6237\u3002 \u8bbf\u95ee Bitbucket \u9875\u9762 . 2. \u8054\u7cfb\u827a\u672f\u56e2\u961f\u4ee5\u83b7\u53d6\u5185\u5bb9\u5b58\u50a8\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u52a0\u5165 Discord \u670d\u52a1\u5668 \u3002\u8f6c\u81f3 \u8d21\u732e\u8005 \u9891\u9053\u5e76\u8bf7\u6c42\u8bbf\u95ee\u5185\u5bb9\u5b58\u50a8\u5e93\u3002 3. \u5c06\u4e3a\u6bcf\u4e2a\u8d21\u732e\u8005\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002 \u8be5\u5206\u652f\u5c06\u88ab\u547d\u540d\u4e3a contributors/contributor_name \u3002\u8be5\u7528\u6237\u6240\u505a\u7684\u6240\u6709\u8d21\u732e\u90fd\u5e94\u5728\u76f8\u5e94\u7684\u5206\u652f\u4e2d\u505a\u51fa\u3002 4. \u6784\u5efa CARLA\u3002 \u4e3a\u4e86\u505a\u51fa\u8d21\u732e\uff0cCarla \u6784\u5efa\u662f\u5fc5\u8981\u7684\u3002\u6309\u7167\u8bf4\u660e\u5728 Linux \u6216 Windows \u4e2d\u6784\u5efa\u3002 5. \u4e0b\u8f7d\u5185\u5bb9\u5b58\u50a8\u5e93\u3002 \u6309\u7167\u8bf4\u660e\u66f4\u65b0 \u6b64\u5904 \u7684\u5185\u5bb9\u3002 6. \u66f4\u65b0\u5206\u652f\u4ee5\u4e0e master \u540c\u6b65\u3002 \u5206\u652f\u5e94\u59cb\u7ec8\u4f7f\u7528 master \u4e2d\u7684\u6700\u65b0\u66f4\u6539\u8fdb\u884c\u66f4\u65b0\u3002 7. \u4e0a\u4f20\u8d21\u732e\u3002 \u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\u5e76\u5c06\u5206\u652f\u63a8\u9001\u5230 origin\u3002 8. \u7b49\u5f85\u7f8e\u672f\u7ec4\u5ba1\u6838\u3002 \u4e00\u65e6\u8d21\u732e\u4e0a\u4f20\uff0c\u56e2\u961f\u5c06\u68c0\u67e5\u4e0e master \u5408\u5e76\u7684\u4e00\u5207\u662f\u5426\u51c6\u5907\u597d\u3002 \u6587\u6863\u8d21\u732e \u5982\u679c\u67d0\u4e9b\u6587\u6863\u7f3a\u5931\u3001\u6a21\u7cca\u6216\u4e0d\u7cbe\u786e\uff0c\u5219\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u9519\u8bef\u4e00\u6837\u8fdb\u884c\u62a5\u544a\uff08\u8bf7\u9605\u8bfb\u4e0a\u4e00\u8282\u6709\u5173 \u5982\u4f55\u62a5\u544a\u9519\u8bef \uff09\u3002\u4f46\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u6587\u6863\u6765\u505a\u51fa\u8d21\u732e\u3002 \u8be5\u6587\u6863\u662f\u7528 Markdown \u548c HTML \u6807\u7b7e\u6df7\u5408\u7f16\u5199\u7684\uff0c\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684 CSS \u4ee3\u7801\u7528\u4e8e\u8868\u683c\u6216 town slider \u7b49\u529f\u80fd\u3002\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5f00\u59cb\u7f16\u5199\u6587\u6863\u3002 \u91cd\u8981 \u8981\u63d0\u4ea4\u6587\u6863\u8d21\u732e\uff0c\u8bf7\u9075\u5faa\u4e0a\u9762 \u4ee3\u7801\u8d21\u732e \u4e2d\u89e3\u91ca\u7684\u76f8\u540c\u5de5\u4f5c\u6d41\u7a0b\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8d21\u732e\u662f\u5728\u6765\u81ea dev \u5206\u652f\u7684\u5b50\u5206\u652f\u4e2d\u505a\u51fa\u7684\uff0c\u5e76\u5408\u5e76\u5230\u8be5\u5206\u652f\u3002 1. \u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002 \u6309\u7167\u6587\u6863\u4e2d\u7684\u6b65\u9aa4\u5728 Linux \u6216 Windows \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 2. \u5b89\u88c5 MkDocs . MkDocs \u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u6587\u6863\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u3002 sudo pip install mkdocs 3. \u53ef\u89c6\u5316\u6587\u6863\u3002 \u5728\u4e3b CARLA \u6587\u4ef6\u5939\u4e2d\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5e76\u5355\u51fb\u7ec8\u7aef\u4e2d\u663e\u793a\u7684\u94fe\u63a5 (http://127.0.0.1:8000) \u4ee5\u6253\u5f00\u6587\u6863\u7684\u672c\u5730\u53ef\u89c6\u5316\u3002 mkdocs serve 4. \u521b\u5efagit\u5206\u652f\u3002 \u521b\u5efa\u65b0\u5206\u652f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f4d\u4e8e dev \u5206\u652f\u4e2d\uff08\u66f4\u65b0\u5230\u6700\u65b0\u66f4\u6539\uff09\u3002 git checkout -b <contributor_name>/<branch_name> 5. \u7f16\u5199\u6587\u6863\u3002 \u6309\u7167 \u6587\u6863\u6807\u51c6 \u9875\u9762\u4e2d\u7684\u6307\u5357\u7f16\u8f91\u6587\u4ef6\u3002 6. \u63d0\u4ea4\u66f4\u6539\u3002 \u5728 GitHub \u5b58\u50a8\u5e93\u4e2d\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5efa\u8bae\u7684\u5ba1\u9605\u8005\u3002\u586b\u5199\u62c9\u53d6\u8bf7\u6c42\u63cf\u8ff0\u65f6\uff0c\u8bf7\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u5177\u6709\u63cf\u8ff0\u6027\u3002 7. \u7b49\u5f85\u5ba1\u6838\u3002 \u56e2\u961f\u5c06\u68c0\u67e5\u5408\u5e76\u6216\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u662f\u5426\u5df2\u51c6\u5907\u597d\u3002 \u8b66\u544a \u672c\u5730\u5b58\u50a8\u5e93\u5fc5\u987b\u4f7f\u7528 dev \u5206\u652f\u4e2d\u7684\u6700\u65b0\u66f4\u65b0\u8fdb\u884c\u66f4\u65b0\u3002","title":"\u8d21\u732e\u6307\u5357"},{"location":"cont_contribution_guidelines/#carla","text":"Carla \u56e2\u961f\u5f88\u9ad8\u5174\u63a5\u53d7\u4efb\u4f55\u613f\u610f\u5408\u4f5c\u7684\u4eba\u7684\u8d21\u732e\u3002\u6839\u636e\u8d21\u732e\u8005\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u4e3a\u9879\u76ee\u505a\u51fa\u8d21\u732e\u3002\u8be5\u56e2\u961f\u5c06\u5c3d\u6700\u5927\u52aa\u529b\u5c06\u8d21\u732e\u6210\u529f\u6574\u5408\u5230 Carla \u4e2d\u3002 \u770b\u770b\u5427\uff0c\u4e0d\u8981\u72b9\u8c6b\uff01 \u62a5\u544a\u9519\u8bef \u8bf7\u6c42\u529f\u80fd \u4ee3\u7801\u8d21\u732e \u4e86\u89e3\u865a\u5e7b\u5f15\u64ce \u5f00\u59cb\u4e4b\u524d \u7f16\u7801\u6807\u51c6 \u63d0\u4ea4 \u6e05\u5355 \u827a\u672f\u8d21\u732e \u6587\u6863\u8d21\u732e","title":"\u4e3a Carla \u505a\u51fa\u8d21\u732e"},{"location":"cont_contribution_guidelines/#_1","text":"\u53ef\u4ee5\u5728 GitHub \u4e0a\u7684 issue \u90e8\u5206 \u62a5\u544a\u95ee\u9898\u3002\u5728\u62a5\u544a\u65b0\u9519\u8bef\u4e4b\u524d\uff0c\u8bf7\u52a1\u5fc5\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\u3002 1. \u68c0\u67e5\u662f\u5426\u5df2\u62a5\u544a\u95ee\u9898\u3002 \u5728 GitHub \u4e0a\u7684\u540c\u4e00\u95ee\u9898\u90e8\u5206\u67e5\u627e\u5b83\u3002 2. \u9605\u8bfb\u6587\u6863\u3002 \u786e\u4fdd\u95ee\u9898\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5bf9 Carla \u5e94\u8be5\u5982\u4f55\u5de5\u4f5c\u7684\u8bef\u89e3\u3002\u9605\u8bfb \u6587\u6863 \u4e2d\u4e0e\u8be5\u95ee\u9898\u76f8\u5173\u7684\u9875\u9762\u5e76\u67e5\u770b \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\u3002","title":"\u62a5\u544a\u9519\u8bef"},{"location":"cont_contribution_guidelines/#_2","text":"\u65b0\u529f\u80fd\u7684\u60f3\u6cd5\u4e5f\u662f\u4e00\u79cd\u5f88\u597d\u7684\u8d21\u732e\u65b9\u5f0f\u3002\u4efb\u4f55\u53ef\u4ee5\u6539\u5584\u7528\u6237\u4f53\u9a8c\u7684\u5efa\u8bae\u90fd\u53ef\u4ee5\u5728 \u6b64\u5904 \u7684\u76f8\u5e94 GitHub \u90e8\u5206\u63d0\u4ea4\u3002","title":"\u8bf7\u6c42\u529f\u80fd"},{"location":"cont_contribution_guidelines/#_3","text":"\u5728\u5f00\u59cb\u52a8\u624b\u7f16\u7801\u4e4b\u524d\uff0c\u8bf7\u67e5\u770b issue \u677f\u5757 \u4ee5\u4e86\u89e3\u56e2\u961f\u5df2\u7ecf\u5728\u505a\u4ec0\u4e48\uff0c\u4ee5\u907f\u514d\u91cd\u53e0\u3002\u5982\u6709\u7591\u95ee\u6216\u8ba8\u8bba\u5982\u4f55\u7ee7\u7eed\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u4e4b\u4e00\uff08\u6216\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 carla.simulator@gmail.com \uff09\u3002 \u4e3a\u4e86\u5f00\u59cb\u5de5\u4f5c\uff0c\u8bf7 \u521b\u5efa CARLA \u5b58\u50a8\u5e93\u7684\u5206\u53c9 \uff0c\u5e76\u5c06\u6240\u8ff0\u5206\u53c9\u514b\u9686\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u3002\u8bf7\u8bb0\u4f4f\u4f7f\u60a8\u7684\u5206\u53c9\u4e0e\u539f\u59cb\u5b58\u50a8\u5e93 \u4fdd\u6301\u540c\u6b65 \u3002","title":"\u4ee3\u7801\u8d21\u732e"},{"location":"cont_contribution_guidelines/#_4","text":"\u6709\u5173\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce 4 \u8fdb\u884c C++ \u7f16\u7a0b\u7684\u57fa\u672c\u4ecb\u7ecd\uff0c\u8bf7\u53c2\u9605 Unreal \u7684 C++ \u7f16\u7a0b\u6559\u7a0b \u3002\u7f51\u4e0a\u8fd8\u6709\u5176\u4ed6\u9009\u9879\uff0c\u5176\u4e2d\u4e00\u4e9b\u4e0d\u662f\u514d\u8d39\u7684\u3002 Udemy \u7684\u865a\u5e7b C++ \u8bfe\u7a0b \u975e\u5e38\u5b8c\u6574\uff0c\u5e76\u4e14\u901a\u5e38\u63d0\u4f9b\u4ef7\u683c\u975e\u5e38\u5b9e\u60e0\u7684\u4f18\u60e0\u3002","title":"\u4e86\u89e3\u865a\u5e7b\u5f15\u64ce"},{"location":"cont_contribution_guidelines/#_5","text":"\u67e5\u770b Carla \u8bbe\u8ba1 \u6587\u6863\uff0c\u4e86\u89e3\u7ec4\u6210 Carla \u7684\u4e0d\u540c\u6a21\u5757\u3002\u9009\u62e9\u6700\u5408\u9002\u7684\u4e00\u4e2a\u6765\u5bb9\u7eb3\u65b0\u529f\u80fd\u3002\u5982\u679c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4efb\u4f55\u7591\u95ee\uff0c \u8bf7\u968f\u65f6\u8054\u7cfb Discord \u670d\u52a1\u5668 \u4e2d\u7684\u56e2\u961f\u3002","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"cont_contribution_guidelines/#_6","text":"\u63d0\u4ea4\u65b0\u4ee3\u7801\u65f6 \u9075\u5faa\u5f53\u524d\u7684 \u7f16\u7801\u6807\u51c6 \u3002","title":"\u7f16\u7801\u6807\u51c6"},{"location":"cont_contribution_guidelines/#_7","text":"\u8d21\u732e\u548c\u65b0\u529f\u80fd\u4e0d\u4f1a\u76f4\u63a5\u5408\u5e76\u5230 master \u5206\u652f\uff0c\u800c\u662f\u5408\u5e76\u5230\u540d\u4e3a dev \u7684\u4e2d\u95f4\u5206\u652f\u3002\u8fd9\u79cd Gitflow \u5206\u652f\u6a21\u578b\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u7ef4\u62a4\u7a33\u5b9a\u7684\u4e3b\u5206\u652f\u3002\u8be5\u6a21\u578b\u9700\u8981\u7279\u5b9a\u7684\u8d21\u732e\u5de5\u4f5c\u6d41\u7a0b\u3002 \u59cb\u7ec8\u8ba9\u60a8\u7684 dev \u5206\u652f\u66f4\u65b0\u6700\u65b0\u7684\u66f4\u6539\u3002 \u4ece\u540d\u4e3a username/name_of_the_contribution \u7684 dev \u5b50\u5206\u652f\u4e2d\u5f00\u53d1\u8d21\u732e\u3002 \u8d21\u732e\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u4ece\u60a8\u7684\u5206\u652f\u5411 dev \u63d0\u4ea4\u62c9\u53d6\u8bf7\u6c42\uff08pull-request\uff09\u3002\u586b\u5199\u63cf\u8ff0\u65f6\u5c3d\u91cf\u5177\u6709\u63cf\u8ff0\u6027\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u5408\u5e76\u4e4b\u524d\uff0c\u65b0\u4ee3\u7801\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u68c0\u67e5\u3002\u68c0\u67e5\u7531\u6301\u7eed\u96c6\u6210\u7cfb\u7edf\u81ea\u52a8\u8fd0\u884c\u3002\u5982\u679c\u68c0\u67e5\u6210\u529f\uff0c\u5c06\u4f1a\u51fa\u73b0\u7eff\u8272\u52fe\u53f7\u3002\u5982\u679c\u6709\u7ea2\u8272\u6807\u8bb0\uff0c\u8bf7\u76f8\u5e94\u66f4\u6b63\u4ee3\u7801\u3002 \u4e00\u65e6\u8d21\u732e\u88ab\u5408\u5e76\u5230 dev \u4e2d\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5176\u4f59\u65b0\u529f\u80fd\u4e00\u8d77\u8fdb\u884c\u6d4b\u8bd5\u3002\u5230\u4e0b\u4e00\u4e2a\u7248\u672c\u65f6\uff0c\u8be5 dev \u5206\u652f\u5c06\u5408\u5e76\u5230 master \uff0c\u5e76\u4e14\u8d21\u732e\u5c06\u53ef\u7528\u5e76\u516c\u5e03\u3002","title":"\u63d0\u4ea4"},{"location":"cont_contribution_guidelines/#_8","text":"[ ] \u60a8\u7684\u5206\u652f\u5df2\u4e0e dev \u5206\u652f\u4fdd\u6301\u540c\u6b65\uff0c\u5e76\u901a\u8fc7\u6700\u65b0\u66f4\u6539\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002 [ ] \u5982\u6709\u5fc5\u8981\uff0c\u6269\u5c55 README/\u6587\u6863\u3002 [ ] \u4ee3\u7801\u7f16\u8bd1\u6b63\u786e\u3002 [ ] \u6240\u6709\u6d4b\u8bd5\u5747\u901a\u8fc7 make check \u3002","title":"\u6e05\u5355"},{"location":"cont_contribution_guidelines/#_9","text":"\u827a\u672f\u8d21\u732e\u5305\u62ec\u8f66\u8f86\u3001\u884c\u4eba\u3001\u5730\u56fe\u6216 Carla \u4e2d\u4f7f\u7528\u7684\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u8d44\u4ea7\u3002\u8fd9\u4e9b\u5b58\u50a8\u5728 BitBucket \u5b58\u50a8\u5e93\u4e2d\uff0c\u8be5\u5b58\u50a8\u5e93\u6709\u4e00\u4e9b\u5e10\u6237\u7a7a\u95f4\u9650\u5236\u3002\u51fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u8d21\u732e\u8005\u5fc5\u987b\u4e0e Carla \u56e2\u961f\u8054\u7cfb\uff0c\u5e76\u8981\u6c42\u4ed6\u4eec\u5728\u5185\u5bb9\u5b58\u50a8\u5e93\u4e0a\u4e3a\u8d21\u732e\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002 1. \u521b\u5efaBitBucket\u8d26\u6237\u3002 \u8bbf\u95ee Bitbucket \u9875\u9762 . 2. \u8054\u7cfb\u827a\u672f\u56e2\u961f\u4ee5\u83b7\u53d6\u5185\u5bb9\u5b58\u50a8\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u52a0\u5165 Discord \u670d\u52a1\u5668 \u3002\u8f6c\u81f3 \u8d21\u732e\u8005 \u9891\u9053\u5e76\u8bf7\u6c42\u8bbf\u95ee\u5185\u5bb9\u5b58\u50a8\u5e93\u3002 3. \u5c06\u4e3a\u6bcf\u4e2a\u8d21\u732e\u8005\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002 \u8be5\u5206\u652f\u5c06\u88ab\u547d\u540d\u4e3a contributors/contributor_name \u3002\u8be5\u7528\u6237\u6240\u505a\u7684\u6240\u6709\u8d21\u732e\u90fd\u5e94\u5728\u76f8\u5e94\u7684\u5206\u652f\u4e2d\u505a\u51fa\u3002 4. \u6784\u5efa CARLA\u3002 \u4e3a\u4e86\u505a\u51fa\u8d21\u732e\uff0cCarla \u6784\u5efa\u662f\u5fc5\u8981\u7684\u3002\u6309\u7167\u8bf4\u660e\u5728 Linux \u6216 Windows \u4e2d\u6784\u5efa\u3002 5. \u4e0b\u8f7d\u5185\u5bb9\u5b58\u50a8\u5e93\u3002 \u6309\u7167\u8bf4\u660e\u66f4\u65b0 \u6b64\u5904 \u7684\u5185\u5bb9\u3002 6. \u66f4\u65b0\u5206\u652f\u4ee5\u4e0e master \u540c\u6b65\u3002 \u5206\u652f\u5e94\u59cb\u7ec8\u4f7f\u7528 master \u4e2d\u7684\u6700\u65b0\u66f4\u6539\u8fdb\u884c\u66f4\u65b0\u3002 7. \u4e0a\u4f20\u8d21\u732e\u3002 \u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\u5e76\u5c06\u5206\u652f\u63a8\u9001\u5230 origin\u3002 8. \u7b49\u5f85\u7f8e\u672f\u7ec4\u5ba1\u6838\u3002 \u4e00\u65e6\u8d21\u732e\u4e0a\u4f20\uff0c\u56e2\u961f\u5c06\u68c0\u67e5\u4e0e master \u5408\u5e76\u7684\u4e00\u5207\u662f\u5426\u51c6\u5907\u597d\u3002","title":"\u827a\u672f\u8d21\u732e"},{"location":"cont_contribution_guidelines/#_10","text":"\u5982\u679c\u67d0\u4e9b\u6587\u6863\u7f3a\u5931\u3001\u6a21\u7cca\u6216\u4e0d\u7cbe\u786e\uff0c\u5219\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u9519\u8bef\u4e00\u6837\u8fdb\u884c\u62a5\u544a\uff08\u8bf7\u9605\u8bfb\u4e0a\u4e00\u8282\u6709\u5173 \u5982\u4f55\u62a5\u544a\u9519\u8bef \uff09\u3002\u4f46\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u6587\u6863\u6765\u505a\u51fa\u8d21\u732e\u3002 \u8be5\u6587\u6863\u662f\u7528 Markdown \u548c HTML \u6807\u7b7e\u6df7\u5408\u7f16\u5199\u7684\uff0c\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684 CSS \u4ee3\u7801\u7528\u4e8e\u8868\u683c\u6216 town slider \u7b49\u529f\u80fd\u3002\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5f00\u59cb\u7f16\u5199\u6587\u6863\u3002 \u91cd\u8981 \u8981\u63d0\u4ea4\u6587\u6863\u8d21\u732e\uff0c\u8bf7\u9075\u5faa\u4e0a\u9762 \u4ee3\u7801\u8d21\u732e \u4e2d\u89e3\u91ca\u7684\u76f8\u540c\u5de5\u4f5c\u6d41\u7a0b\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8d21\u732e\u662f\u5728\u6765\u81ea dev \u5206\u652f\u7684\u5b50\u5206\u652f\u4e2d\u505a\u51fa\u7684\uff0c\u5e76\u5408\u5e76\u5230\u8be5\u5206\u652f\u3002 1. \u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\u3002 \u6309\u7167\u6587\u6863\u4e2d\u7684\u6b65\u9aa4\u5728 Linux \u6216 Windows \u4e0a\u8fdb\u884c\u6784\u5efa\u3002 2. \u5b89\u88c5 MkDocs . MkDocs \u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u6587\u6863\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u3002 sudo pip install mkdocs 3. \u53ef\u89c6\u5316\u6587\u6863\u3002 \u5728\u4e3b CARLA \u6587\u4ef6\u5939\u4e2d\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5e76\u5355\u51fb\u7ec8\u7aef\u4e2d\u663e\u793a\u7684\u94fe\u63a5 (http://127.0.0.1:8000) \u4ee5\u6253\u5f00\u6587\u6863\u7684\u672c\u5730\u53ef\u89c6\u5316\u3002 mkdocs serve 4. \u521b\u5efagit\u5206\u652f\u3002 \u521b\u5efa\u65b0\u5206\u652f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f4d\u4e8e dev \u5206\u652f\u4e2d\uff08\u66f4\u65b0\u5230\u6700\u65b0\u66f4\u6539\uff09\u3002 git checkout -b <contributor_name>/<branch_name> 5. \u7f16\u5199\u6587\u6863\u3002 \u6309\u7167 \u6587\u6863\u6807\u51c6 \u9875\u9762\u4e2d\u7684\u6307\u5357\u7f16\u8f91\u6587\u4ef6\u3002 6. \u63d0\u4ea4\u66f4\u6539\u3002 \u5728 GitHub \u5b58\u50a8\u5e93\u4e2d\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5efa\u8bae\u7684\u5ba1\u9605\u8005\u3002\u586b\u5199\u62c9\u53d6\u8bf7\u6c42\u63cf\u8ff0\u65f6\uff0c\u8bf7\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u5177\u6709\u63cf\u8ff0\u6027\u3002 7. \u7b49\u5f85\u5ba1\u6838\u3002 \u56e2\u961f\u5c06\u68c0\u67e5\u5408\u5e76\u6216\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u662f\u5426\u5df2\u51c6\u5907\u597d\u3002 \u8b66\u544a \u672c\u5730\u5b58\u50a8\u5e93\u5fc5\u987b\u4f7f\u7528 dev \u5206\u652f\u4e2d\u7684\u6700\u65b0\u66f4\u65b0\u8fdb\u884c\u66f4\u65b0\u3002","title":"\u6587\u6863\u8d21\u732e"},{"location":"cont_doc_standard/","text":"\u6587\u6863\u6807\u51c6 \u672c\u6587\u6863\u5c06\u4f5c\u4e3a\u4e3a\u6587\u6863\u505a\u51fa\u8d21\u732e\u800c\u9700\u8981\u9075\u5faa\u7684\u4e00\u4e9b\u89c4\u5219\u7684\u6307\u5357\u548c\u793a\u4f8b\u3002 \u6587\u6863\u7ed3\u6784 \u89c4\u5219 \u4f8b\u5916\u60c5\u51b5 \u6587\u6863\u7ed3\u6784 \u6211\u4eec\u548c extra.css \u4e00\u8d77\uff0c\u6df7\u5408\u4f7f\u7528 Markdown \u548c HTML \u6807\u7b7e\u6765\u81ea\u5b9a\u4e49\u6587\u6863\u548c\u6587\u4ef6\u3002\u8981\u66f4\u65b0 Python API \u6587\u6863\uff0c\u60a8\u9700\u8981\u7f16\u8f91 carla/PythonAPI/docs/ \u5185\u90e8\u76f8\u5e94\u7684 YAML \u6587\u4ef6\u5e76\u8fd0\u884c doc_gen.py \u6216 make PythonAPI.docs \uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539 Markdown\u3002 \u8fd9\u5c06\u5728 carla/Docs/ \u4e2d\u91cd\u65b0\u751f\u6210\u76f8\u5e94\u7684 Markdown \u6587\u4ef6\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u5176\u8f93\u5165\u5230 mkdocs . \u89c4\u5219 \u5404\u8282\u4e4b\u95f4\u548c\u6587\u6863\u672b\u5c3e\u59cb\u7ec8\u7559\u6709\u7a7a\u884c\u3002 \u9664 HTML \u76f8\u5173\u5185\u5bb9\u3001Markdown \u8868\u683c\u3001\u4ee3\u7801\u7247\u6bb5\u548c\u5f15\u7528\u94fe\u63a5\u5916\uff0c\u4e66\u5199\u4e0d\u5e94\u8d85\u8fc7 100 \u5217\u3002 \u5982\u679c\u5185\u8054\u94fe\u63a5\u8d85\u51fa\u9650\u5236\uff0c\u8bf7\u4f7f\u7528\u5f15\u7528\u7684 [name][reference_link] markdown \u7b26\u53f7 [reference_link]: https:// \uff0c\u800c\u4e0d\u662f [name](https://) \u3002 \u4f7f\u7528 <br> \u8fdb\u884c\u5185\u8054\u8df3\u8f6c\uff0c\u800c\u4e0d\u662f\u5728\u884c\u5c3e\u7559\u4e0b\u4e24\u4e2a\u7a7a\u683c\u3002 \u5728\u65b0\u9875\u9762\u7684\u5f00\u5934\u4f7f\u7528 <h1>Title</h1> \uff0c\u4ee5\u5236\u4f5c\u6807\u9898\u6216 <hx>Heading<hx> \u5236\u4f5c \u4e0d\u4f1a\u663e\u793a \u5728\u5bfc\u822a\u680f\u4e0a\u7684\u6807\u9898\u3002 \u4f7f\u7528 ------ \u5f3a\u8c03\u6807\u9898\u6216 # \u5c42\u6b21\u7ed3\u6784\u4e0b\u5212\u7ebf\u6765\u5236\u4f5c\u6807\u9898\u5e76\u5c06\u5176\u663e\u793a\u5728\u5bfc\u822a\u680f\u4e2d\u3002 \u4f8b\u5916\u60c5\u51b5 \u901a\u8fc7 Python \u811a\u672c\u751f\u6210\u7684\u6587\u6863\uff0c\u4f8b\u5982 PythonAPI \u53c2\u8003 \u65b9\u4fbf\u7684 markdown cheatsheet \u3002","title":"\u6587\u6863\u6807\u51c6"},{"location":"cont_doc_standard/#_1","text":"\u672c\u6587\u6863\u5c06\u4f5c\u4e3a\u4e3a\u6587\u6863\u505a\u51fa\u8d21\u732e\u800c\u9700\u8981\u9075\u5faa\u7684\u4e00\u4e9b\u89c4\u5219\u7684\u6307\u5357\u548c\u793a\u4f8b\u3002 \u6587\u6863\u7ed3\u6784 \u89c4\u5219 \u4f8b\u5916\u60c5\u51b5","title":"\u6587\u6863\u6807\u51c6"},{"location":"cont_doc_standard/#_2","text":"\u6211\u4eec\u548c extra.css \u4e00\u8d77\uff0c\u6df7\u5408\u4f7f\u7528 Markdown \u548c HTML \u6807\u7b7e\u6765\u81ea\u5b9a\u4e49\u6587\u6863\u548c\u6587\u4ef6\u3002\u8981\u66f4\u65b0 Python API \u6587\u6863\uff0c\u60a8\u9700\u8981\u7f16\u8f91 carla/PythonAPI/docs/ \u5185\u90e8\u76f8\u5e94\u7684 YAML \u6587\u4ef6\u5e76\u8fd0\u884c doc_gen.py \u6216 make PythonAPI.docs \uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539 Markdown\u3002 \u8fd9\u5c06\u5728 carla/Docs/ \u4e2d\u91cd\u65b0\u751f\u6210\u76f8\u5e94\u7684 Markdown \u6587\u4ef6\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u5176\u8f93\u5165\u5230 mkdocs .","title":"\u6587\u6863\u7ed3\u6784"},{"location":"cont_doc_standard/#_3","text":"\u5404\u8282\u4e4b\u95f4\u548c\u6587\u6863\u672b\u5c3e\u59cb\u7ec8\u7559\u6709\u7a7a\u884c\u3002 \u9664 HTML \u76f8\u5173\u5185\u5bb9\u3001Markdown \u8868\u683c\u3001\u4ee3\u7801\u7247\u6bb5\u548c\u5f15\u7528\u94fe\u63a5\u5916\uff0c\u4e66\u5199\u4e0d\u5e94\u8d85\u8fc7 100 \u5217\u3002 \u5982\u679c\u5185\u8054\u94fe\u63a5\u8d85\u51fa\u9650\u5236\uff0c\u8bf7\u4f7f\u7528\u5f15\u7528\u7684 [name][reference_link] markdown \u7b26\u53f7 [reference_link]: https:// \uff0c\u800c\u4e0d\u662f [name](https://) \u3002 \u4f7f\u7528 <br> \u8fdb\u884c\u5185\u8054\u8df3\u8f6c\uff0c\u800c\u4e0d\u662f\u5728\u884c\u5c3e\u7559\u4e0b\u4e24\u4e2a\u7a7a\u683c\u3002 \u5728\u65b0\u9875\u9762\u7684\u5f00\u5934\u4f7f\u7528 <h1>Title</h1> \uff0c\u4ee5\u5236\u4f5c\u6807\u9898\u6216 <hx>Heading<hx> \u5236\u4f5c \u4e0d\u4f1a\u663e\u793a \u5728\u5bfc\u822a\u680f\u4e0a\u7684\u6807\u9898\u3002 \u4f7f\u7528 ------ \u5f3a\u8c03\u6807\u9898\u6216 # \u5c42\u6b21\u7ed3\u6784\u4e0b\u5212\u7ebf\u6765\u5236\u4f5c\u6807\u9898\u5e76\u5c06\u5176\u663e\u793a\u5728\u5bfc\u822a\u680f\u4e2d\u3002","title":"\u89c4\u5219"},{"location":"cont_doc_standard/#_4","text":"\u901a\u8fc7 Python \u811a\u672c\u751f\u6210\u7684\u6587\u6863\uff0c\u4f8b\u5982 PythonAPI \u53c2\u8003 \u65b9\u4fbf\u7684 markdown cheatsheet \u3002","title":"\u4f8b\u5916\u60c5\u51b5"},{"location":"content_authoring_large_maps/","text":"\u4e3a CARLA \u521b\u5efa\u5927\u5730\u56fe CARLA \u4e2d\u5927\u5730\u56fe\uff08\u5982\u57ce\u9547 11 \u548c 12\uff09\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u6807\u51c6\u5730\u56fe\uff08\u5982\u57ce\u9547 10\uff09\u4e0d\u540c\u3002\u5730\u56fe\u88ab\u5212\u5206\u4e3a\u56fe\u5757\uff0c\u5373\u5730\u56fe\u7684\u7ec6\u5206\uff0c\u901a\u5e38\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u7ea6 1 \u81f3 2 \u516c\u91cc\u3002\u8fd9\u4e9b\u56fe\u5757\u5212\u5206\u4e86\u5730\u56fe\uff0c\u4ee5\u4fbf\u4ec5\u5c06\u9700\u8981\u7684\u5730\u56fe\u90e8\u5206\u52a0\u8f7d\u5230\u56fe\u5f62\u5185\u5b58\u4e2d\u4ee5\u8fdb\u884c\u9ad8\u6548\u6e32\u67d3\u3002\u4e0d\u9700\u8981\u7684\u56fe\u5757\u4fdd\u6301\u4f11\u7720\u72b6\u6001\u5e76\u51c6\u5907\u5728\u9700\u8981\u65f6\u52a0\u8f7d\u3002\u901a\u5e38\uff0c\u4f1a\u52a0\u8f7d\u81ea\u6211\u8f66\u8f86\u4f4d\u7f6e\u4e2d\u7684\u56fe\u5757\u65c1\u8fb9\u7684\u56fe\u5757\uff0c\u4f46\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u52a0\u8f7d\u66f4\u591a\u56fe\u5757\u3002\u5f53 CARLA \u542f\u52a8\u65f6\uff0c\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u4fee\u6539\u6b64\u884c\u4e3a\u3002 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe RoadRunner \u662f\u63a8\u8350\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165 CARLA \u7684\u5927\u5730\u56fe\u7684\u8f6f\u4ef6\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528 RoadRunner \u521b\u5efa\u5927\u5730\u56fe\u4ee5\u53ca\u5982\u4f55\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u5bfc\u5165\u548c\u5904\u7406\u5927\u5730\u56fe\u3002 \u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5927\u5730\u56fe \u5c06\u5927\u5730\u56fe\u5bfc\u5165 CARLA \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 \u8fdb\u884c\u5bfc\u5165 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5904\u7406\u5927\u5730\u56fe \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe \u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe \u5982\u4f55\u5728 RoadRunner \u4e2d\u6784\u5efa\u590d\u6742\u5730\u56fe\u7684\u5177\u4f53\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c RoadRunner \u6587\u6863 \u4e2d\u63d0\u4f9b\u4e86\u89c6\u9891\u6559\u7a0b\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe\u4e0e\u6784\u5efa\u6807\u51c6\u5730\u56fe\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u6bd4\u4f8b\u66f4\u5927\u3002\u5dee\u5f02\u4e3b\u8981\u5728\u4e8e\u5730\u56fe\u7684\u5bfc\u51fa\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u5f20\u5927\u7ea6 1.2 \u516c\u91cc\u5927\u5c0f\u7684\u5927\u5730\u56fe\u3002\u5f53\u6211\u4eec\u5bfc\u51fa\u5b83\u65f6\uff0c\u5b83\u4f1a\u88ab\u5206\u5272\u6210\u56fe\u5757\uff0c\u6211\u4eec\u5c06\u9009\u62e9 700m \u7684\u56fe\u5757\u5927\u5c0f\uff0c\u56e0\u6b64\u5730\u56fe\u5e94\u8be5\u5206\u5272\u6210\u5927\u7ea6 4 \u4e2a\u56fe\u5757\u3002 \u5982\u679c\u60a8\u6b63\u5728\u6784\u5efa\u5e26\u6709\u9ad8\u7a0b\u7684\u5927\u5730\u56fe\uff0c\u5efa\u8bae\u7684\u5730\u56fe\u6700\u5927\u5c3a\u5bf8\u4e3a 20x20 km 2 \u3002\u5927\u4e8e\u6b64\u5927\u5c0f\u7684\u5730\u56fe\u53ef\u80fd\u4f1a\u5bfc\u81f4 RoadRunner \u5728\u5bfc\u51fa\u65f6\u5d29\u6e83\u3002 \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5927\u5730\u56fe \u4ee5\u4e0b\u662f\u4ece RoadRunner \u5bfc\u51fa\u81ea\u5b9a\u4e49\u5927\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002 \u901a\u8fc7\u5355\u51fb\u4e16\u754c\u8bbe\u7f6e\u5de5\u5177\uff08 World settings tool \uff09\u5e76\u62d6\u52a8\u84dd\u8272\u8fb9\u754c\u6846\u7684\u8fb9\u7f18\u4ee5\u5305\u542b\u8981\u5bfc\u51fa\u7684\u6574\u4e2a\u533a\u57df\uff0c\u786e\u4fdd\u9009\u62e9\u5bfc\u51fa\u5b8c\u6574\u5730\u56fe\u3002\u51c6\u5907\u597d\u540e\uff0c\u5355\u51fb\u201c\u5e94\u7528\u4e16\u754c\u66f4\u6539\u201d\uff08 Apply World Changes \uff09\u3002 \u4f7f\u7528\u573a\u666f\u5bfc\u51fa\u9884\u89c8\u5de5\u5177\u6709\u52a9\u4e8e\u4e86\u89e3\u5982\u4f55\u5c06\u5730\u56fe\u5212\u5206\u4e3a\u56fe\u5757\u4ee5\u4f9b\u5bfc\u51fa\u3002\u8c03\u6574\u201c\u5e73\u94fa\u9009\u9879\u201d\uff08 Tiling Options \uff09\u83dc\u5355\u4e2d\u7684\u201c\u5e73\u94fa\u5927\u5c0f\u201d\uff08 Tile Size \uff09\u53c2\u6570\uff0c\u627e\u5230\u9002\u5408\u60a8\u5730\u56fe\u7684\u5e73\u94fa\u5927\u5c0f\uff0c\u6309\u201c\u5237\u65b0\u573a\u666f\u201d\uff08 Refresh Scene \uff09\u67e5\u770b\u8c03\u6574\u7684\u5f71\u54cd\u3002 \u7b14\u8bb0 Tile size : \u60a8\u4f7f\u7528\u7684\u56fe\u5757\u5927\u5c0f\u662f\u4e00\u4e2a\u5224\u65ad\u8c03\u7528\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u5728 CARLA \u4e2d\u4f7f\u7528\u65f6\u80fd\u591f\u6709\u6548\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u7684\u5730\u56fe\u5305\u542b\u5bc6\u96c6\u7684 3D \u8d44\u6e90\uff08\u4f8b\u5982\u5efa\u7b51\u7269\u548c\u690d\u88ab\uff09\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d7\u76ca\u4e8e\u8f83\u5c0f\u7684\u56fe\u5757\u5927\u5c0f\uff0c\u4ee5\u9632\u6b62\u52a0\u8f7d\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u6784\u5efa\u5730\u56fe\u6240\u9700\u5de5\u4f5c\u7684\u590d\u6742\u6027\u3002CARLA \u5f15\u64ce\u652f\u6301\u7684\u6700\u5927\u74e6\u7247\u5c3a\u5bf8\u4e3a 2 \u516c\u91cc\uff0c\u6211\u4eec\u5efa\u8bae\u74e6\u7247\u5c3a\u5bf8\u4e3a 1 \u516c\u91cc\u5de6\u53f3\u3002 \u5f53\u60a8\u51c6\u5907\u597d\u5bfc\u51fa\u65f6\uff1a 1. \u5bfc\u51fa .fbx \u51e0\u4f55\u6587\u4ef6\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> Firebox (.fbx) 2. \u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff1a \u68c0\u67e5\u4ee5\u4e0b\u9009\u9879\uff1a \u901a\u8fc7\u5206\u6bb5\u5206\u5272 \uff08 Split by Segmentation \uff09: \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u6765\u5212\u5206\u7f51\u683c\u5e76\u6539\u8fdb\u884c\u4eba\u5bfc\u822a\u3002 \u4e8c\u7ef4\u7eb9\u7406\u7684\u529b\u91cf \uff08 Power of Two Texture Dimensions \uff09: \u63d0\u9ad8\u6027\u80fd\u3002 \u5d4c\u5165\u7eb9\u7406 \uff08 Embed Textures \uff09: \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 \u5bfc\u51fa\u5230\u56fe\u5757 \uff08 Export to Tiles \uff09: \u9009\u62e9\u56fe\u5757\u7684\u5927\u5c0f\u3002CARLA \u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5c3a\u5bf8\u4e3a 2000 x 2000\u3002 \u5bfc\u51fa\u5355\u4e2a\u56fe\u5757 \uff08 Export Individual Tiles \uff09: \u751f\u6210\u5728 CARLA \u4e2d\u6d41\u5f0f\u4f20\u8f93\u5927\u5730\u56fe\u6240\u9700\u7684\u5355\u4e2a\u56fe\u5757\u3002 3. \u5bfc\u51fa .xodr OpenDrive \u5730\u56fe\u6587\u4ef6\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> OpendDRIVE (.xodr) \u5728\u60a8\u9009\u62e9\u5bfc\u51fa\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u73b0\u5728\u5c06\u6709\u51e0\u4e2a\u65b0\u6587\u4ef6\uff0c\u4e00\u4e2a .xodr \u6587\u4ef6\u548c\u51e0\u4e2a .fbx \u6587\u4ef6\uff1a \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u6587\u4ef6\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u6839\u3002 \u73b0\u5728\u60a8\u5df2\u7ecf\u5728 Roadrunner \u4e2d\u521b\u5efa\u4e86\u5927\u5730\u56fe\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u5bfc\u5165 CARLA \u4e2d\u3002RoadRunner \u521b\u5efa\u7684\u6587\u4ef6\u5e94\u8f6c\u79fb\u5230\u7528\u4e8e\u6784\u5efa CARLA \u7684\u6839\u76ee\u5f55\u7684 Import \u76ee\u5f55\u5185\u3002 \u5c06\u5927\u5730\u56fe\u5bfc\u5165 CARLA RoadRunner \u4e2d\u751f\u6210\u7684\u5927\u5730\u56fe\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u7684\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\uff0c\u5e76\u6253\u5305\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u5206\u53d1\u548c\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u4e0e\u6807\u51c6\u5730\u56fe\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86\u56fe\u5757\u548c\u6279\u91cf\u5bfc\u5165\u7684\u7279\u5b9a\u672f\u8bed\u3002 \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u6240\u6709\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u5e94\u653e\u7f6e\u5728 CARLA \u6839\u76ee\u5f55\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e9b\u6587\u4ef6\u5e94\u5305\u62ec\uff1a \u591a\u4e2a .fbx \u6587\u4ef6\u4e2d\u7684\u5730\u56fe\u7f51\u683c\u4ee3\u8868\u5730\u56fe\u7684\u4e0d\u540c\u56fe\u5757\u3002 OpenDRIVE \u5b9a\u4e49\u4f4d\u4e8e\u5355\u4e2a .xodr \u6587\u4ef6\u4e2d\u3002 \u8b66\u544a \u60a8\u4e0d\u80fd\u540c\u65f6\u5bfc\u5165\u5927\u5730\u56fe\u548c\u6807\u51c6\u5730\u56fe\u3002 \u5730\u56fe\u56fe\u5757\u7684\u547d\u540d\u7ea6\u5b9a\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2a\u5730\u56fe\u56fe\u5757\u5e94\u6839\u636e\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a <mapName>_Tile_<x-coordinate>_<y-coordinate>.fbx \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRoadRunner \u5e94\u7b26\u5408\u6b64\u547d\u540d\u7ea6\u5b9a\uff0c\u4f46\u5728\u51c6\u5907\u5bfc\u5165 CARLA \u4e4b\u524d\u503c\u5f97\u4ed4\u7ec6\u68c0\u67e5\uff0c\u56e0\u4e3a\u6b64\u9636\u6bb5\u5f15\u8d77\u7684\u95ee\u9898\u7a0d\u540e\u4fee\u590d\u8d77\u6765\u53ef\u80fd\u4f1a\u5f88\u4e4f\u5473\u3002\u6700\u7ec8\u5730\u56fe\u4e2d\u7684\u56fe\u5757\u5c06\u5982\u4e0b\u56fe\u6240\u793a\u6392\u5217\uff1a \u751f\u6210\u7684 Import \u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2a\u5305\u542b\u7531\u56db\u4e2a\u56fe\u5757\u7ec4\u6210\u7684\u5927\u5730\u56fe\u7684\u5305\uff0c\u5176\u7ed3\u6784\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\uff1a Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 LargeMap_Tile_0_0.fbx \u251c\u2500\u2500 LargeMap_Tile_0_1.fbx \u251c\u2500\u2500 LargeMap_Tile_1_0.fbx \u251c\u2500\u2500 LargeMap_Tile_1_1.fbx \u2514\u2500\u2500 LargeMap.xodr \u7b14\u8bb0 package.json \u6587\u4ef6\u5e76\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u5982\u679c\u672a\u521b\u5efa package.json \u6587\u4ef6\uff0c\u81ea\u52a8\u5bfc\u5165\u8fc7\u7a0b\u5c06\u521b\u5efa\u4e00\u4e2a\u3002package.json\u5728\u4e0b\u4e00\u8282\u4e2d\u4e86\u89e3\u6709\u5173\u6784\u5efa\u81ea\u5df1 package.json \u7684\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 .json \u63cf\u8ff0\u662f\u5728\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u9009\u62e9\u624b\u52a8\u521b\u5efa\u63cf\u8ff0\u3002\u73b0\u6709 .json \u63cf\u8ff0\u5c06\u8986\u76d6\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u4efb\u4f55\u503c\u3002 \u8be5 .json \u6587\u4ef6\u5e94\u521b\u5efa\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u6587\u4ef6\u540d\u5c06\u662f\u5305\u5206\u53d1\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u63cf\u8ff0\u4e86 \u5730\u56fe \u548c \u9053\u5177 \u7684 JSON \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a name: \u5730\u56fe\u7684\u540d\u79f0\u3002\u8fd9\u5fc5\u987b\u4e0e\u548c .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c.xodr\u3002 xodr: .xodr \u6587\u4ef6\u7684\u8def\u5f84 use_carla_materials: \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 CARLA \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u6599\u3002 tile_size: \u56fe\u5757\u7684\u5927\u5c0f\u3002\u9ed8\u8ba4\u503c\u4e3a 2000 (2kmx2km)\u3002 tiles: \u7ec4\u6210\u6574\u4e2a\u5730\u56fe\u7684 .fbx tile\u6587\u4ef6\u7684\u5217\u8868\u3002 Props \u5c5e\u4e8e\u672c\u6559\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u8bf7\u53c2\u9605 \u672c \u6559\u7a0b\u4e86\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u9053\u5177\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"LargeMap\", \"xodr\": \"./LargeMap.xodr\", \"use_carla_materials\": true, \"tile_size\": 700, \"tiles\": [ \"./LargeMap_Tile_0_0.fbx\", \"./LargeMap_Tile_0_1.fbx\", \"./LargeMap_Tile_1_0.fbx\", \"./LargeMap_Tile_1_1.fbx\" ] } ], \"props\": [] } \u8fdb\u884c\u5bfc\u5165 \u5c06\u6240\u6709\u6587\u4ef6\u653e\u5165\u8be5 Import \u6587\u4ef6\u5939\u540e\uff0c\u5728\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make import \u6839\u636e\u60a8\u7684\u7cfb\u7edf\uff0c\u865a\u5e7b\u5f15\u64ce\u53ef\u80fd\u4f1a\u6d88\u8017\u592a\u591a\u5185\u5b58\u800c\u65e0\u6cd5\u4e00\u6b21\u5bfc\u5165\u6240\u6709\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9009\u62e9\u6279\u91cf\u5bfc\u5165\u6587\u4ef6\uff1a make import ARGS=\"--batch-size=200\" \u8be5 make import \u547d\u4ee4\u8fd8\u5b58\u5728\u4e24\u4e2a\u6807\u5fd7\uff1a --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u5bfc\u5165\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002 \u4ec5\u5f53\u60a8\u4e0d\u63d0\u4f9b\u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u6240\u6709\u6587\u4ef6\u90fd\u5c06\u88ab\u5bfc\u5165\u5e76\u51c6\u5907\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\u5730\u56fe\u5305\u5c06\u5728 Unreal/CarlaUE4/Content \u4e2d\u521b\u5efa\u3002\u5c06\u521b\u5efa\u4e00\u4e2a\u5e95\u56fe\u56fe\u5757 \uff0c\u4f5c\u4e3a\u6240\u6709\u56fe\u5757\u7684\u6d41\u7ea7\u522b\u3002\u57fa\u7840\u56fe\u5757\u5c06\u5305\u542b\u5929\u7a7a\u3001\u5929\u6c14\u548c\u5927\u5730\u56fe\u53c2\u4e0e\u8005\uff0c\u5e76\u51c6\u5907\u597d\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u3002 \u7b14\u8bb0 \u76ee\u524d\u4e0d\u5efa\u8bae\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4e3a\u6807\u51c6\u5730\u56fe\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5de5\u5177\uff0c\u4f8b\u5982\u9053\u8def\u753b\u5bb6\u3001\u7a0b\u5e8f\u5efa\u7b51\u7b49\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5904\u7406\u5927\u5730\u56fe \u73b0\u5728\u60a8\u5df2\u5bfc\u5165\u65b0\u5730\u56fe\uff0c\u60a8\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u9ed8\u8ba4\u547d\u540d map_package \u6587\u4ef6\u5939\u5185\u627e\u5230\u8be5\u5730\u56fe\u3002\u5982\u679c\u60a8\u5728\u5bfc\u5165\u547d\u4ee4\u4e2d\u4f7f\u7528\u53c2\u6570 \"--package=<package_name>\" \uff0c\u8be5\u6587\u4ef6\u5939\u5c06\u6709\u4e00\u4e2a\u5907\u7528\u540d\u79f0\u3002\u5728\u6b64\u6587\u4ef6\u5939\u5185\uff0c\u6253\u5f00\u8be5 Maps \u6587\u4ef6\u5939\u5e76\u6253\u5f00\u8be5\u6587\u4ef6\u5939\u5185\u7684\u6587\u4ef6\u5939\u3002\u5728\u91cc\u9762\u4f60\u4f1a\u53d1\u73b0\u51e0\u4e2a\u6a59\u8272\u7684\u5173\u5361\u6587\u4ef6\u3002 \u6574\u4e2a\u5730\u56fe\u5c06\u6709\u4e00\u4e2a\u5173\u5361\u6587\u4ef6\uff0c\u800c\u4ece RoadRunner \u5bfc\u51fa\u7684\u6bcf\u4e2a\u56fe\u5757\u5c06\u6709\u4e00\u4e2a\u5173\u5361\u6587\u4ef6\u3002\u8981\u5c06\u5efa\u7b51\u7269\u548c\u690d\u88ab\u7b49\u8d44\u4ea7\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d\uff0c\u8bf7\u53cc\u51fb\u8981\u5904\u7406\u7684\u56fe\u5757\u7684\u5173\u5361\u6587\u4ef6\uff08\u4f8b\u5982\u672c\u4f8b\u4e2d LargeMap_Tile_0_0 \uff09\uff0c\u4ee5\u4fbf\u5c06\u5176\u52a0\u8f7d\u5230\u7f16\u8f91\u5668\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u56fe\u5757\u6ca1\u6709\u4efb\u4f55\u7167\u660e\u8bbe\u7f6e\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u5c06\u89c6\u56fe\u6a21\u5f0f\u4ece \u66f4\u6539 Lit \u4e3a Unlit \u624d\u80fd\u5728\u52a0\u8f7d\u56fe\u5757\u540e\u770b\u5230\u5b83\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u6309\u7167 \u4e0e\u6807\u51c6\u5730\u56fe\u76f8\u540c\u7684\u8fc7\u7a0b \u5411\u5730\u56fe\u6dfb\u52a0\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u786e\u4fdd\u4fdd\u5b58\u5bf9\u6b63\u5728\u5904\u7406\u7684\u56fe\u5757\u6240\u505a\u7684\u4fee\u6539\uff0c\u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u56fe\u5757\u5e76\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u60a8\u65e0\u6cd5\u4e00\u6b21\u6027\u5904\u7406\u6574\u4e2a\u5730\u56fe\uff0c\u56e0\u6b64\u52a0\u8f7d\uff08\u901a\u8fc7\u53cc\u51fb\uff09\u6574\u4e2a\u5730\u56fe\u7684\u5173\u5361\u6587\u4ef6\uff08\u540e\u9762\u4e0d\u5e26\u540e\u7f00 \u7684\u6587\u4ef6 _Tile_X_Y \uff09\u5bf9\u4e8e\u88c5\u9970\u5730\u56fe\u5c06\u6ca1\u6709\u7528\u5904\u3002 \u52a0\u8f7d\u6574\u4e2a\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f \u5982\u679c\u60a8\u60f3\u52a0\u8f7d\u5730\u56fe\u5e76\u5f00\u59cb\u4eff\u771f\u8fdb\u884c\u5b9e\u9a8c\uff0c\u60a8\u5e94\u8be5\u52a0\u8f7d\u6574\u4e2a\u5730\u56fe\u7684\u5173\u5361\u6587\u4ef6\u3002\u53cc\u51fb\u5e26\u6709\u6839\u5730\u56fe\u540d\u79f0\u7684\u5173\u5361\u6587\u4ef6\uff08\u540e\u9762\u4e0d\u5e26\u540e\u7f00\u7684\u6587\u4ef6 _Tile_X_Y \uff09\u5e76\u7b49\u5f85\u5176\u52a0\u8f7d\u3002\u5bf9\u4e8e\u975e\u5e38\u5927\u7684\u5730\u56fe\uff0c\u52a0\u8f7d\u6709\u65f6\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u751a\u81f3\u51e0\u5206\u949f\u3002\u52a0\u8f7d\u540e\uff0c\u5355\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u5de5\u5177\u680f\u4e2d\u7684\u64ad\u653e\u9009\u9879\u3002\u4eff\u771f\u73b0\u5728\u5c06\u4ece\u60a8\u7684\u65b0\u5927\u5730\u56fe\u5f00\u59cb\u3002 \u7b14\u8bb0 \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u4ece\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u8fd0\u884c\u4eff\u771f\uff0c\u5efa\u8bae\u5728\u5f00\u59cb\u4eff\u771f\u4e4b\u524d\u5148\u9010\u4e2a\u52a0\u8f7d\u6bcf\u4e2a\u56fe\u5757\uff08\u901a\u8fc7\u53cc\u51fb\u5b83\u4eec\uff09\uff0c\u76f4\u5230\u52a0\u8f7d\u5b8c\u6240\u6709\u56fe\u5757\u3002\u8fd9\u4f1a\u5728\u540e\u53f0\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982\u70d8\u7119\u7f51\u683c\u8ddd\u79bb\u573a\u548c\u56fe\u5757\u7684\u7740\u8272\u5668\u3002\u5982\u679c\u60a8\u4e00\u5f00\u59cb\u4e0d\u9010\u4e00\u52a0\u8f7d\u56fe\u5757\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u6267\u884c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u865a\u5e7b\u5f15\u64ce\u6302\u8d77\u6216\u5d29\u6e83\u3002 \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe \u8981\u6253\u5305\u5927\u5730\u56fe\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u4f7f\u7528\uff0c\u8bf7\u9075\u5faa\u4e0e\u6807\u51c6\u5730\u56fe\u76f8\u540c\u7684\u8fc7\u7a0b - \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make package ARGS=\"--packages=<mapPackage>\" \u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002Linux \u4e0b\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \u548c Windows\u4e0b\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u6587\u4ef6\u5939\u4e2d\u3002\u7136\u540e\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u53d1\u548c\u6253\u5305\u4ee5\u5728\u72ec\u7acb\u7684 CARLA \u5305\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u5bfc\u5165\u548c\u6253\u5305\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"Content authoring large maps"},{"location":"content_authoring_large_maps/#carla","text":"CARLA \u4e2d\u5927\u5730\u56fe\uff08\u5982\u57ce\u9547 11 \u548c 12\uff09\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u6807\u51c6\u5730\u56fe\uff08\u5982\u57ce\u9547 10\uff09\u4e0d\u540c\u3002\u5730\u56fe\u88ab\u5212\u5206\u4e3a\u56fe\u5757\uff0c\u5373\u5730\u56fe\u7684\u7ec6\u5206\uff0c\u901a\u5e38\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u7ea6 1 \u81f3 2 \u516c\u91cc\u3002\u8fd9\u4e9b\u56fe\u5757\u5212\u5206\u4e86\u5730\u56fe\uff0c\u4ee5\u4fbf\u4ec5\u5c06\u9700\u8981\u7684\u5730\u56fe\u90e8\u5206\u52a0\u8f7d\u5230\u56fe\u5f62\u5185\u5b58\u4e2d\u4ee5\u8fdb\u884c\u9ad8\u6548\u6e32\u67d3\u3002\u4e0d\u9700\u8981\u7684\u56fe\u5757\u4fdd\u6301\u4f11\u7720\u72b6\u6001\u5e76\u51c6\u5907\u5728\u9700\u8981\u65f6\u52a0\u8f7d\u3002\u901a\u5e38\uff0c\u4f1a\u52a0\u8f7d\u81ea\u6211\u8f66\u8f86\u4f4d\u7f6e\u4e2d\u7684\u56fe\u5757\u65c1\u8fb9\u7684\u56fe\u5757\uff0c\u4f46\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u52a0\u8f7d\u66f4\u591a\u56fe\u5757\u3002\u5f53 CARLA \u542f\u52a8\u65f6\uff0c\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u4fee\u6539\u6b64\u884c\u4e3a\u3002","title":"\u4e3a CARLA \u521b\u5efa\u5927\u5730\u56fe"},{"location":"content_authoring_large_maps/#roadrunner","text":"RoadRunner \u662f\u63a8\u8350\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165 CARLA \u7684\u5927\u5730\u56fe\u7684\u8f6f\u4ef6\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528 RoadRunner \u521b\u5efa\u5927\u5730\u56fe\u4ee5\u53ca\u5982\u4f55\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u5bfc\u5165\u548c\u5904\u7406\u5927\u5730\u56fe\u3002 \u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5927\u5730\u56fe \u5c06\u5927\u5730\u56fe\u5bfc\u5165 CARLA \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 \u8fdb\u884c\u5bfc\u5165 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5904\u7406\u5927\u5730\u56fe \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe","title":"\u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe"},{"location":"content_authoring_large_maps/#roadrunner_1","text":"\u5982\u4f55\u5728 RoadRunner \u4e2d\u6784\u5efa\u590d\u6742\u5730\u56fe\u7684\u5177\u4f53\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c RoadRunner \u6587\u6863 \u4e2d\u63d0\u4f9b\u4e86\u89c6\u9891\u6559\u7a0b\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe\u4e0e\u6784\u5efa\u6807\u51c6\u5730\u56fe\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u6bd4\u4f8b\u66f4\u5927\u3002\u5dee\u5f02\u4e3b\u8981\u5728\u4e8e\u5730\u56fe\u7684\u5bfc\u51fa\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u5f20\u5927\u7ea6 1.2 \u516c\u91cc\u5927\u5c0f\u7684\u5927\u5730\u56fe\u3002\u5f53\u6211\u4eec\u5bfc\u51fa\u5b83\u65f6\uff0c\u5b83\u4f1a\u88ab\u5206\u5272\u6210\u56fe\u5757\uff0c\u6211\u4eec\u5c06\u9009\u62e9 700m \u7684\u56fe\u5757\u5927\u5c0f\uff0c\u56e0\u6b64\u5730\u56fe\u5e94\u8be5\u5206\u5272\u6210\u5927\u7ea6 4 \u4e2a\u56fe\u5757\u3002 \u5982\u679c\u60a8\u6b63\u5728\u6784\u5efa\u5e26\u6709\u9ad8\u7a0b\u7684\u5927\u5730\u56fe\uff0c\u5efa\u8bae\u7684\u5730\u56fe\u6700\u5927\u5c3a\u5bf8\u4e3a 20x20 km 2 \u3002\u5927\u4e8e\u6b64\u5927\u5c0f\u7684\u5730\u56fe\u53ef\u80fd\u4f1a\u5bfc\u81f4 RoadRunner \u5728\u5bfc\u51fa\u65f6\u5d29\u6e83\u3002","title":"\u5728 RoadRunner \u4e2d\u6784\u5efa\u5927\u5730\u56fe"},{"location":"content_authoring_large_maps/#roadrunner_2","text":"\u4ee5\u4e0b\u662f\u4ece RoadRunner \u5bfc\u51fa\u81ea\u5b9a\u4e49\u5927\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002 \u901a\u8fc7\u5355\u51fb\u4e16\u754c\u8bbe\u7f6e\u5de5\u5177\uff08 World settings tool \uff09\u5e76\u62d6\u52a8\u84dd\u8272\u8fb9\u754c\u6846\u7684\u8fb9\u7f18\u4ee5\u5305\u542b\u8981\u5bfc\u51fa\u7684\u6574\u4e2a\u533a\u57df\uff0c\u786e\u4fdd\u9009\u62e9\u5bfc\u51fa\u5b8c\u6574\u5730\u56fe\u3002\u51c6\u5907\u597d\u540e\uff0c\u5355\u51fb\u201c\u5e94\u7528\u4e16\u754c\u66f4\u6539\u201d\uff08 Apply World Changes \uff09\u3002 \u4f7f\u7528\u573a\u666f\u5bfc\u51fa\u9884\u89c8\u5de5\u5177\u6709\u52a9\u4e8e\u4e86\u89e3\u5982\u4f55\u5c06\u5730\u56fe\u5212\u5206\u4e3a\u56fe\u5757\u4ee5\u4f9b\u5bfc\u51fa\u3002\u8c03\u6574\u201c\u5e73\u94fa\u9009\u9879\u201d\uff08 Tiling Options \uff09\u83dc\u5355\u4e2d\u7684\u201c\u5e73\u94fa\u5927\u5c0f\u201d\uff08 Tile Size \uff09\u53c2\u6570\uff0c\u627e\u5230\u9002\u5408\u60a8\u5730\u56fe\u7684\u5e73\u94fa\u5927\u5c0f\uff0c\u6309\u201c\u5237\u65b0\u573a\u666f\u201d\uff08 Refresh Scene \uff09\u67e5\u770b\u8c03\u6574\u7684\u5f71\u54cd\u3002 \u7b14\u8bb0 Tile size : \u60a8\u4f7f\u7528\u7684\u56fe\u5757\u5927\u5c0f\u662f\u4e00\u4e2a\u5224\u65ad\u8c03\u7528\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u5728 CARLA \u4e2d\u4f7f\u7528\u65f6\u80fd\u591f\u6709\u6548\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u7684\u5730\u56fe\u5305\u542b\u5bc6\u96c6\u7684 3D \u8d44\u6e90\uff08\u4f8b\u5982\u5efa\u7b51\u7269\u548c\u690d\u88ab\uff09\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d7\u76ca\u4e8e\u8f83\u5c0f\u7684\u56fe\u5757\u5927\u5c0f\uff0c\u4ee5\u9632\u6b62\u52a0\u8f7d\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u6784\u5efa\u5730\u56fe\u6240\u9700\u5de5\u4f5c\u7684\u590d\u6742\u6027\u3002CARLA \u5f15\u64ce\u652f\u6301\u7684\u6700\u5927\u74e6\u7247\u5c3a\u5bf8\u4e3a 2 \u516c\u91cc\uff0c\u6211\u4eec\u5efa\u8bae\u74e6\u7247\u5c3a\u5bf8\u4e3a 1 \u516c\u91cc\u5de6\u53f3\u3002 \u5f53\u60a8\u51c6\u5907\u597d\u5bfc\u51fa\u65f6\uff1a 1. \u5bfc\u51fa .fbx \u51e0\u4f55\u6587\u4ef6\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> Firebox (.fbx) 2. \u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff1a \u68c0\u67e5\u4ee5\u4e0b\u9009\u9879\uff1a \u901a\u8fc7\u5206\u6bb5\u5206\u5272 \uff08 Split by Segmentation \uff09: \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u6765\u5212\u5206\u7f51\u683c\u5e76\u6539\u8fdb\u884c\u4eba\u5bfc\u822a\u3002 \u4e8c\u7ef4\u7eb9\u7406\u7684\u529b\u91cf \uff08 Power of Two Texture Dimensions \uff09: \u63d0\u9ad8\u6027\u80fd\u3002 \u5d4c\u5165\u7eb9\u7406 \uff08 Embed Textures \uff09: \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 \u5bfc\u51fa\u5230\u56fe\u5757 \uff08 Export to Tiles \uff09: \u9009\u62e9\u56fe\u5757\u7684\u5927\u5c0f\u3002CARLA \u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5c3a\u5bf8\u4e3a 2000 x 2000\u3002 \u5bfc\u51fa\u5355\u4e2a\u56fe\u5757 \uff08 Export Individual Tiles \uff09: \u751f\u6210\u5728 CARLA \u4e2d\u6d41\u5f0f\u4f20\u8f93\u5927\u5730\u56fe\u6240\u9700\u7684\u5355\u4e2a\u56fe\u5757\u3002 3. \u5bfc\u51fa .xodr OpenDrive \u5730\u56fe\u6587\u4ef6\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> OpendDRIVE (.xodr) \u5728\u60a8\u9009\u62e9\u5bfc\u51fa\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u73b0\u5728\u5c06\u6709\u51e0\u4e2a\u65b0\u6587\u4ef6\uff0c\u4e00\u4e2a .xodr \u6587\u4ef6\u548c\u51e0\u4e2a .fbx \u6587\u4ef6\uff1a \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u6587\u4ef6\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u6839\u3002 \u73b0\u5728\u60a8\u5df2\u7ecf\u5728 Roadrunner \u4e2d\u521b\u5efa\u4e86\u5927\u5730\u56fe\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u5bfc\u5165 CARLA \u4e2d\u3002RoadRunner \u521b\u5efa\u7684\u6587\u4ef6\u5e94\u8f6c\u79fb\u5230\u7528\u4e8e\u6784\u5efa CARLA \u7684\u6839\u76ee\u5f55\u7684 Import \u76ee\u5f55\u5185\u3002","title":"\u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5927\u5730\u56fe"},{"location":"content_authoring_large_maps/#carla_1","text":"RoadRunner \u4e2d\u751f\u6210\u7684\u5927\u5730\u56fe\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u7684\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\uff0c\u5e76\u6253\u5305\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u5206\u53d1\u548c\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u4e0e\u6807\u51c6\u5730\u56fe\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86\u56fe\u5757\u548c\u6279\u91cf\u5bfc\u5165\u7684\u7279\u5b9a\u672f\u8bed\u3002","title":"\u5c06\u5927\u5730\u56fe\u5bfc\u5165 CARLA"},{"location":"content_authoring_large_maps/#_1","text":"\u6240\u6709\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u5e94\u653e\u7f6e\u5728 CARLA \u6839\u76ee\u5f55\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e9b\u6587\u4ef6\u5e94\u5305\u62ec\uff1a \u591a\u4e2a .fbx \u6587\u4ef6\u4e2d\u7684\u5730\u56fe\u7f51\u683c\u4ee3\u8868\u5730\u56fe\u7684\u4e0d\u540c\u56fe\u5757\u3002 OpenDRIVE \u5b9a\u4e49\u4f4d\u4e8e\u5355\u4e2a .xodr \u6587\u4ef6\u4e2d\u3002 \u8b66\u544a \u60a8\u4e0d\u80fd\u540c\u65f6\u5bfc\u5165\u5927\u5730\u56fe\u548c\u6807\u51c6\u5730\u56fe\u3002 \u5730\u56fe\u56fe\u5757\u7684\u547d\u540d\u7ea6\u5b9a\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2a\u5730\u56fe\u56fe\u5757\u5e94\u6839\u636e\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a <mapName>_Tile_<x-coordinate>_<y-coordinate>.fbx \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRoadRunner \u5e94\u7b26\u5408\u6b64\u547d\u540d\u7ea6\u5b9a\uff0c\u4f46\u5728\u51c6\u5907\u5bfc\u5165 CARLA \u4e4b\u524d\u503c\u5f97\u4ed4\u7ec6\u68c0\u67e5\uff0c\u56e0\u4e3a\u6b64\u9636\u6bb5\u5f15\u8d77\u7684\u95ee\u9898\u7a0d\u540e\u4fee\u590d\u8d77\u6765\u53ef\u80fd\u4f1a\u5f88\u4e4f\u5473\u3002\u6700\u7ec8\u5730\u56fe\u4e2d\u7684\u56fe\u5757\u5c06\u5982\u4e0b\u56fe\u6240\u793a\u6392\u5217\uff1a \u751f\u6210\u7684 Import \u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2a\u5305\u542b\u7531\u56db\u4e2a\u56fe\u5757\u7ec4\u6210\u7684\u5927\u5730\u56fe\u7684\u5305\uff0c\u5176\u7ed3\u6784\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\uff1a Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 LargeMap_Tile_0_0.fbx \u251c\u2500\u2500 LargeMap_Tile_0_1.fbx \u251c\u2500\u2500 LargeMap_Tile_1_0.fbx \u251c\u2500\u2500 LargeMap_Tile_1_1.fbx \u2514\u2500\u2500 LargeMap.xodr \u7b14\u8bb0 package.json \u6587\u4ef6\u5e76\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u5982\u679c\u672a\u521b\u5efa package.json \u6587\u4ef6\uff0c\u81ea\u52a8\u5bfc\u5165\u8fc7\u7a0b\u5c06\u521b\u5efa\u4e00\u4e2a\u3002package.json\u5728\u4e0b\u4e00\u8282\u4e2d\u4e86\u89e3\u6709\u5173\u6784\u5efa\u81ea\u5df1 package.json \u7684\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f\u3002","title":"\u6587\u4ef6\u548c\u6587\u4ef6\u5939"},{"location":"content_authoring_large_maps/#json","text":".json \u63cf\u8ff0\u662f\u5728\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u9009\u62e9\u624b\u52a8\u521b\u5efa\u63cf\u8ff0\u3002\u73b0\u6709 .json \u63cf\u8ff0\u5c06\u8986\u76d6\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u4efb\u4f55\u503c\u3002 \u8be5 .json \u6587\u4ef6\u5e94\u521b\u5efa\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u6587\u4ef6\u540d\u5c06\u662f\u5305\u5206\u53d1\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u63cf\u8ff0\u4e86 \u5730\u56fe \u548c \u9053\u5177 \u7684 JSON \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a name: \u5730\u56fe\u7684\u540d\u79f0\u3002\u8fd9\u5fc5\u987b\u4e0e\u548c .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c.xodr\u3002 xodr: .xodr \u6587\u4ef6\u7684\u8def\u5f84 use_carla_materials: \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 CARLA \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u6599\u3002 tile_size: \u56fe\u5757\u7684\u5927\u5c0f\u3002\u9ed8\u8ba4\u503c\u4e3a 2000 (2kmx2km)\u3002 tiles: \u7ec4\u6210\u6574\u4e2a\u5730\u56fe\u7684 .fbx tile\u6587\u4ef6\u7684\u5217\u8868\u3002 Props \u5c5e\u4e8e\u672c\u6559\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u8bf7\u53c2\u9605 \u672c \u6559\u7a0b\u4e86\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u9053\u5177\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"LargeMap\", \"xodr\": \"./LargeMap.xodr\", \"use_carla_materials\": true, \"tile_size\": 700, \"tiles\": [ \"./LargeMap_Tile_0_0.fbx\", \"./LargeMap_Tile_0_1.fbx\", \"./LargeMap_Tile_1_0.fbx\", \"./LargeMap_Tile_1_1.fbx\" ] } ], \"props\": [] }","title":"\u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09"},{"location":"content_authoring_large_maps/#_2","text":"\u5c06\u6240\u6709\u6587\u4ef6\u653e\u5165\u8be5 Import \u6587\u4ef6\u5939\u540e\uff0c\u5728\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make import \u6839\u636e\u60a8\u7684\u7cfb\u7edf\uff0c\u865a\u5e7b\u5f15\u64ce\u53ef\u80fd\u4f1a\u6d88\u8017\u592a\u591a\u5185\u5b58\u800c\u65e0\u6cd5\u4e00\u6b21\u5bfc\u5165\u6240\u6709\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9009\u62e9\u6279\u91cf\u5bfc\u5165\u6587\u4ef6\uff1a make import ARGS=\"--batch-size=200\" \u8be5 make import \u547d\u4ee4\u8fd8\u5b58\u5728\u4e24\u4e2a\u6807\u5fd7\uff1a --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u5bfc\u5165\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002 \u4ec5\u5f53\u60a8\u4e0d\u63d0\u4f9b\u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u6240\u6709\u6587\u4ef6\u90fd\u5c06\u88ab\u5bfc\u5165\u5e76\u51c6\u5907\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\u5730\u56fe\u5305\u5c06\u5728 Unreal/CarlaUE4/Content \u4e2d\u521b\u5efa\u3002\u5c06\u521b\u5efa\u4e00\u4e2a\u5e95\u56fe\u56fe\u5757 \uff0c\u4f5c\u4e3a\u6240\u6709\u56fe\u5757\u7684\u6d41\u7ea7\u522b\u3002\u57fa\u7840\u56fe\u5757\u5c06\u5305\u542b\u5929\u7a7a\u3001\u5929\u6c14\u548c\u5927\u5730\u56fe\u53c2\u4e0e\u8005\uff0c\u5e76\u51c6\u5907\u597d\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u3002 \u7b14\u8bb0 \u76ee\u524d\u4e0d\u5efa\u8bae\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4e3a\u6807\u51c6\u5730\u56fe\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5de5\u5177\uff0c\u4f8b\u5982\u9053\u8def\u753b\u5bb6\u3001\u7a0b\u5e8f\u5efa\u7b51\u7b49\u3002","title":"\u8fdb\u884c\u5bfc\u5165"},{"location":"content_authoring_large_maps/#_3","text":"\u73b0\u5728\u60a8\u5df2\u5bfc\u5165\u65b0\u5730\u56fe\uff0c\u60a8\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u9ed8\u8ba4\u547d\u540d map_package \u6587\u4ef6\u5939\u5185\u627e\u5230\u8be5\u5730\u56fe\u3002\u5982\u679c\u60a8\u5728\u5bfc\u5165\u547d\u4ee4\u4e2d\u4f7f\u7528\u53c2\u6570 \"--package=<package_name>\" \uff0c\u8be5\u6587\u4ef6\u5939\u5c06\u6709\u4e00\u4e2a\u5907\u7528\u540d\u79f0\u3002\u5728\u6b64\u6587\u4ef6\u5939\u5185\uff0c\u6253\u5f00\u8be5 Maps \u6587\u4ef6\u5939\u5e76\u6253\u5f00\u8be5\u6587\u4ef6\u5939\u5185\u7684\u6587\u4ef6\u5939\u3002\u5728\u91cc\u9762\u4f60\u4f1a\u53d1\u73b0\u51e0\u4e2a\u6a59\u8272\u7684\u5173\u5361\u6587\u4ef6\u3002 \u6574\u4e2a\u5730\u56fe\u5c06\u6709\u4e00\u4e2a\u5173\u5361\u6587\u4ef6\uff0c\u800c\u4ece RoadRunner \u5bfc\u51fa\u7684\u6bcf\u4e2a\u56fe\u5757\u5c06\u6709\u4e00\u4e2a\u5173\u5361\u6587\u4ef6\u3002\u8981\u5c06\u5efa\u7b51\u7269\u548c\u690d\u88ab\u7b49\u8d44\u4ea7\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d\uff0c\u8bf7\u53cc\u51fb\u8981\u5904\u7406\u7684\u56fe\u5757\u7684\u5173\u5361\u6587\u4ef6\uff08\u4f8b\u5982\u672c\u4f8b\u4e2d LargeMap_Tile_0_0 \uff09\uff0c\u4ee5\u4fbf\u5c06\u5176\u52a0\u8f7d\u5230\u7f16\u8f91\u5668\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u56fe\u5757\u6ca1\u6709\u4efb\u4f55\u7167\u660e\u8bbe\u7f6e\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u5c06\u89c6\u56fe\u6a21\u5f0f\u4ece \u66f4\u6539 Lit \u4e3a Unlit \u624d\u80fd\u5728\u52a0\u8f7d\u56fe\u5757\u540e\u770b\u5230\u5b83\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u6309\u7167 \u4e0e\u6807\u51c6\u5730\u56fe\u76f8\u540c\u7684\u8fc7\u7a0b \u5411\u5730\u56fe\u6dfb\u52a0\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u786e\u4fdd\u4fdd\u5b58\u5bf9\u6b63\u5728\u5904\u7406\u7684\u56fe\u5757\u6240\u505a\u7684\u4fee\u6539\uff0c\u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u56fe\u5757\u5e76\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u60a8\u65e0\u6cd5\u4e00\u6b21\u6027\u5904\u7406\u6574\u4e2a\u5730\u56fe\uff0c\u56e0\u6b64\u52a0\u8f7d\uff08\u901a\u8fc7\u53cc\u51fb\uff09\u6574\u4e2a\u5730\u56fe\u7684\u5173\u5361\u6587\u4ef6\uff08\u540e\u9762\u4e0d\u5e26\u540e\u7f00 \u7684\u6587\u4ef6 _Tile_X_Y \uff09\u5bf9\u4e8e\u88c5\u9970\u5730\u56fe\u5c06\u6ca1\u6709\u7528\u5904\u3002","title":"\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5904\u7406\u5927\u5730\u56fe"},{"location":"content_authoring_large_maps/#_4","text":"\u5982\u679c\u60a8\u60f3\u52a0\u8f7d\u5730\u56fe\u5e76\u5f00\u59cb\u4eff\u771f\u8fdb\u884c\u5b9e\u9a8c\uff0c\u60a8\u5e94\u8be5\u52a0\u8f7d\u6574\u4e2a\u5730\u56fe\u7684\u5173\u5361\u6587\u4ef6\u3002\u53cc\u51fb\u5e26\u6709\u6839\u5730\u56fe\u540d\u79f0\u7684\u5173\u5361\u6587\u4ef6\uff08\u540e\u9762\u4e0d\u5e26\u540e\u7f00\u7684\u6587\u4ef6 _Tile_X_Y \uff09\u5e76\u7b49\u5f85\u5176\u52a0\u8f7d\u3002\u5bf9\u4e8e\u975e\u5e38\u5927\u7684\u5730\u56fe\uff0c\u52a0\u8f7d\u6709\u65f6\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u751a\u81f3\u51e0\u5206\u949f\u3002\u52a0\u8f7d\u540e\uff0c\u5355\u51fb\u865a\u5e7b\u7f16\u8f91\u5668\u5de5\u5177\u680f\u4e2d\u7684\u64ad\u653e\u9009\u9879\u3002\u4eff\u771f\u73b0\u5728\u5c06\u4ece\u60a8\u7684\u65b0\u5927\u5730\u56fe\u5f00\u59cb\u3002 \u7b14\u8bb0 \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u4ece\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u8fd0\u884c\u4eff\u771f\uff0c\u5efa\u8bae\u5728\u5f00\u59cb\u4eff\u771f\u4e4b\u524d\u5148\u9010\u4e2a\u52a0\u8f7d\u6bcf\u4e2a\u56fe\u5757\uff08\u901a\u8fc7\u53cc\u51fb\u5b83\u4eec\uff09\uff0c\u76f4\u5230\u52a0\u8f7d\u5b8c\u6240\u6709\u56fe\u5757\u3002\u8fd9\u4f1a\u5728\u540e\u53f0\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982\u70d8\u7119\u7f51\u683c\u8ddd\u79bb\u573a\u548c\u56fe\u5757\u7684\u7740\u8272\u5668\u3002\u5982\u679c\u60a8\u4e00\u5f00\u59cb\u4e0d\u9010\u4e00\u52a0\u8f7d\u56fe\u5757\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u6267\u884c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u865a\u5e7b\u5f15\u64ce\u6302\u8d77\u6216\u5d29\u6e83\u3002","title":"\u52a0\u8f7d\u6574\u4e2a\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f"},{"location":"content_authoring_large_maps/#_5","text":"\u8981\u6253\u5305\u5927\u5730\u56fe\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u4f7f\u7528\uff0c\u8bf7\u9075\u5faa\u4e0e\u6807\u51c6\u5730\u56fe\u76f8\u540c\u7684\u8fc7\u7a0b - \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make package ARGS=\"--packages=<mapPackage>\" \u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002Linux \u4e0b\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \u548c Windows\u4e0b\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u6587\u4ef6\u5939\u4e2d\u3002\u7136\u540e\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u53d1\u548c\u6253\u5305\u4ee5\u5728\u72ec\u7acb\u7684 CARLA \u5305\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u5bfc\u5165\u548c\u6253\u5305\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe"},{"location":"core_actors/","text":"\u7b2c\u4e8c\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe Carla \u4e2d\u7684\u53c2\u4e0e\u8005\u662f\u5728\u6a21\u62df\u4e2d\u6267\u884c\u52a8\u4f5c\u7684\u5143\u7d20\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u3002Carla \u7684\u53c2\u4e0e\u8005\u5305\u62ec\u8f66\u8f86\u548c\u6b65\u884c\u8005\uff0c\u4e5f\u5305\u62ec\u4f20\u611f\u5668\u3001\u4ea4\u901a\u6807\u5fd7\u3001\u7ea2\u7eff\u706f\u548c\u89c2\u770b\u8005\u3002\u5bf9\u5982\u4f55\u64cd\u4f5c\u5b83\u4eec\u6709\u5145\u5206\u7684\u4e86\u89e3\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u672c\u8282\u5c06\u4ecb\u7ecd\u751f\u6210\u3001\u6467\u6bc1\u3001\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u5b83\u4eec\u3002\u7136\u800c\uff0c\u53ef\u80fd\u6027\u51e0\u4e4e\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u3002\u5b9e\u9a8c\u3001\u67e5\u770b\u672c\u6587\u6863\u4e2d\u7684 \u6559\u7a0b \uff0c\u5e76\u5728 Carla \u8bba\u575b \u4e2d\u5206\u4eab\u7591\u8651\u548c\u60f3\u6cd5\u3002 \u84dd\u56fe \u7ba1\u7406\u84dd\u56fe\u5e93 \u53c2\u4e0e\u8005\u751f\u547d\u5468\u671f \u751f\u6210 \u5904\u7406 \u6467\u6bc1 \u53c2\u4e0e\u8005\u7c7b\u578b \u4f20\u611f\u5668 \u89c2\u5bdf\u8005 \u4ea4\u901a\u6807\u5fd7\u548c\u4ea4\u901a\u706f \u8f66\u8f86 \u6b65\u884c\u8005 \u84dd\u56fe \u8fd9\u4e9b\u5e03\u5c40\u5141\u8bb8\u7528\u6237\u5c06\u65b0\u7684\u53c2\u4e0e\u8005\u5e73\u6ed1\u5730\u7ed3\u5408\u5230\u6a21\u62df\u4e2d\u3002\u5b83\u4eec\u5df2\u7ecf\u662f\u5e26\u6709\u52a8\u753b\u548c\u4e00\u7cfb\u5217\u5c5e\u6027\u7684\u6a21\u578b\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u53ef\u4fee\u6539\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u662f\u3002\u8fd9\u4e9b\u5c5e\u6027\u5305\u62ec\u8f66\u8f86\u989c\u8272\u3001\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u4e2d\u7684\u901a\u9053\u6570\u91cf\u3001\u6b65\u884c\u8005\u7684\u901f\u5ea6\u7b49\u7b49\u3002 \u84dd\u56fe\u5e93 \u5217\u51fa\u4e86\u53ef\u7528\u7684\u84dd\u56fe\u53ca\u5176\u5c5e\u6027\u3002\u8f66\u8f86\u548c\u6b65\u884c\u8005\u84dd\u56fe\u5177\u6709\u4e00\u4e2a\u751f\u6210\u5c5e\u6027\uff0c\u7528\u4e8e\u6307\u793a\u5b83\u4eec\u662f\u65b0\u7684\uff08\u7b2c2\u4ee3\uff09\u8d44\u4ea7\u8fd8\u662f\u65e7\u7684\uff08\u7b2c1\u4ee3\uff09\u8d44\u4ea7\u3002 \u7ba1\u7406\u84dd\u56fe\u5e93 carla.BlueprintLibrary \u7c7b\u5305\u542b\u4e00\u7cfb\u5217 carla.ActorBlueprint \u5143\u7d20\u3002\u5b83\u662f\u80fd\u591f\u63d0\u4f9b\u5bf9\u5b83\u8bbf\u95ee\u7684\u4e16\u754c\u5bf9\u8c61\u3002 blueprint_library = world.get_blueprint_library() \u84dd\u56fe\u6709\u4e00\u4e2a ID \u6765\u8bc6\u522b\u5b83\u4eec\u548c\u7531\u6b64\u4ea7\u751f\u7684\u53c2\u4e0e\u8005\u3002\u53ef\u4ee5\u8bfb\u53d6\u5e93\u6765\u627e\u5230\u67d0\u4e2a ID\uff0c\u968f\u673a\u9009\u62e9\u84dd\u56fe\uff0c\u6216\u8005\u4f7f\u7528 \u901a\u914d\u7b26\u6a21\u5f0f \u8fc7\u6ee4\u7ed3\u679c\u3002 # \u627e\u4e00\u4e2a\u6307\u5b9a\u7684\u84dd\u56fe collision_sensor_bp = blueprint_library.find('sensor.other.collision') # \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u8f66\u8f86\u84dd\u56fe vehicle_bp = random.choice(blueprint_library.filter('vehicle.*.*')) \u9664\u6b64\u4e4b\u5916\uff0c\u6bcf\u4e2a carla.ActorBlueprint \u80fd\u83b7\u53d6 get \u548c\u6539\u53d8 set \u4e00\u4e9b\u5217\u53c2\u4e0e\u8005\u5c5e\u6027 carla.ActorAttribute \u3002 is_bike = [vehicle.get_attribute('number_of_wheels') == 2] if(is_bike) vehicle.set_attribute('color', '255,0,0') \u7b14\u8bb0 \u67d0\u4e9b\u5c5e\u6027\u65e0\u6cd5\u4fee\u6539\u3002\u5728 \u84dd\u56fe\u5e93 \u4e2d\u67e5\u770b\u3002 \u5c5e\u6027\u6709\u4e00\u4e2a\u53c2\u4e0e\u8005\u5c5e\u6027\u7c7b\u578b carla.ActorAttributeType \u53d8\u91cf\u3002\u5b83\u4ece\u679a\u4e3e\u5217\u8868\u4e2d\u58f0\u660e\u5176\u7c7b\u578b\u3002\u6b64\u5916\uff0c\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u8fd8\u9644\u5e26\u4e00\u4e2a \u63a8\u8350\u503c\u5217\u8868 \u3002 for attr in blueprint: if attr.is_modifiable: blueprint.set_attribute(attr.id, random.choice(attr.recommended_values)) \u7b14\u8bb0 \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u8f66\u8f86\u3002\u67e5\u770b \u6559\u7a0b\uff08\u8d44\u4ea7\uff09 \u4ee5\u4e86\u89e3\u76f8\u5173\u4fe1\u606f\u3002\u8d21\u732e\u8005\u53ef\u4ee5 \u5c06\u4ed6\u4eec\u7684\u65b0\u5185\u5bb9\u6dfb\u52a0\u5230 Carla \u3002 \u53c2\u4e0e\u8005\u751f\u547d\u5468\u671f \u91cd\u8981 \u672c\u8282\u63d0\u5230\u4e86\u5173\u4e8e\u53c2\u4e0e\u8005\u7684\u4e0d\u540c\u65b9\u6cd5\u3002Python API \u63d0\u4f9b commands \uff0c\u4ee5\u4fbf\u5728\u4e00\u4e2a\u6846\u67b6\u4e2d\u5e94\u7528\u4e00\u6279\u6700\u5e38\u89c1\u7684\u547d\u4ee4\u3002 \u751f\u6210 \u4e16\u754c\u5bf9\u8c61\u8d1f\u8d23\u751f\u6210\u53c2\u4e0e\u8005\u5e76\u8ddf\u8e2a\u8fd9\u4e9b\u53c2\u4e0e\u8005\u3002 \u751f\u6210\u53ea\u9700\u8981\u4e00\u5f20\u84dd\u56fe\u548c\u4e00\u4e2a carla.Transform \u8bf4\u660e\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 \u4e16\u754c\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u65b9\u6cd5\u751f\u6210\u53c2\u4e0e\u8005\u3002 spawn_actor() \u5982\u679c\u751f\u6210\u5931\u8d25\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 try_spawn_actor() \u5982\u679c\u751f\u6210\u5931\u8d25\u8fd4\u56de None \u3002 transform = Transform(Location(x=230, y=195, z=40), Rotation(yaw=180)) actor = world.spawn_actor(blueprint, transform) \u91cd\u8981 Carla \u4f7f\u7528 \u865a\u5e7b\u5f15\u64ce\u5750\u6807\u7cfb\u7edf \u3002\u8bb0\u4f4f\uff1a carla.Rotation \u6784\u9020\u51fd\u6570\u5b9a\u4e49\u4e3a\u201c\u4fef\u4ef0\u3001\u504f\u822a\u3001\u7ffb\u6eda\u201d (pitch, yaw, roll) \uff0c\u4e0e\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u201c\u7ffb\u6eda\u3001\u4fef\u4ef0\u3001\u504f\u822a\u201d (roll, pitch, yaw) \u4e0d\u540c\u3002 \u5982\u679c\u5728\u6307\u5b9a\u4f4d\u7f6e\u53d1\u751f\u51b2\u7a81\uff0c\u5c06\u4e0d\u4f1a\u751f\u6210\u53c2\u4e0e\u8005\u3002\u65e0\u8bba\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728\u9759\u6001\u5bf9\u8c61\u8fd8\u662f\u5176\u4ed6\u53c2\u4e0e\u8005\u8eab\u4e0a\u3002\u53ef\u4ee5\u5c1d\u8bd5\u907f\u514d\u8fd9\u4e9b\u4e0d\u5e0c\u671b\u7684\u751f\u6210\u78b0\u649e\u3002 map.get_spawn_points() \u5bf9\u4e8e\u8f66\u8f86 \u3002 \u8fd4\u56de\u63a8\u8350\u751f\u6210\u70b9\u7684\u5217\u8868\u3002 spawn_points = world.get_map().get_spawn_points() world.get_random_location() \u5bf9\u4e8e\u884c\u4eba \u3002 \u8fd4\u56de\u4eba\u884c\u9053\u4e0a\u7684\u968f\u673a\u70b9\u3002\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u7528\u4e8e\u4e3a\u884c\u4eba\u8bbe\u7f6e\u76ee\u6807\u4f4d\u7f6e\u3002 spawn_point = carla.Transform() spawn_point.location = world.get_random_location_from_navigation() \u4e00\u4e2a\u53c2\u4e0e\u8005\u5728\u751f\u6210\u65f6\u53ef\u4ee5\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\u4e0a\u3002\u53c2\u4e0e\u8005\u8ddf\u968f\u4ed6\u4eec\u6240\u4f9d\u9644\u7684\u7236\u7ea7\u3002\u8fd9\u5bf9\u4e8e\u4f20\u611f\u5668\u7279\u522b\u6709\u7528\u3002\u8be5\u9644\u4ef6\u53ef\u4ee5\u662f\u521a\u6027\u7684\uff08\u9002\u5408\u68c0\u7d22\u7cbe\u786e\u6570\u636e\uff09\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u5176\u7236\u7ea7\u7684\u60c5\u51b5\u8fdb\u884c\u8f7b\u677e\u79fb\u52a8\u3002\u5b83\u7531\u8f85\u52a9\u7c7b carla.AttachmentType \u5b9a\u4e49\u3002 \u4e0b\u4e00\u4e2a\u793a\u4f8b\u5c06\u76f8\u673a\u521a\u6027\u5730\u8fde\u63a5\u5230\u8f66\u8f86\u4e0a\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4fdd\u6301\u56fa\u5b9a\u3002 camera = world.spawn_actor(camera_bp, relative_transform, attach_to=my_vehicle, carla.AttachmentType.Rigid) \u91cd\u8981 \u5f53\u751f\u6210\u9644\u52a0\u7684\u53c2\u4e0e\u8005\u65f6\uff0c\u63d0\u4f9b\u7684\u53d8\u6362\u5fc5\u987b\u76f8\u5bf9\u4e8e\u7236\u7ea7\u53c2\u4e0e\u8005\u3002 \u4e00\u65e6\u751f\u6210\uff0c\u4e16\u754c\u5bf9\u8c61\u5c31\u4f1a\u5c06\u53c2\u4e0e\u8005\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002\u8fd9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u641c\u7d22\u6216\u8fed\u4ee3\u3002 actor_list = world.get_actors() # \u6839\u636e id \u627e\u53c2\u4e0e\u8005 actor = actor_list.find(id) # \u6253\u5370\u4e16\u754c\u4e0a\u6240\u6709\u9650\u901f\u6807\u5fd7\u7684\u4f4d\u7f6e\u3002 for speed_sign in actor_list.filter('traffic.speed_limit.*'): print(speed_sign.get_location()) \u5904\u7406 carla.Actor \u4e3b\u8981\u7531 get() \u548c set() \u65b9\u6cd5\u7ec4\u6210\uff0c\u7528\u4e8e\u7ba1\u7406\u5730\u56fe\u5468\u56f4\u7684\u53c2\u4e0e\u8005\u3002 print(actor.get_acceleration()) print(actor.get_velocity()) location = actor.get_location() location.z += 10.0 actor.set_location(location) \u53ef\u4ee5\u7981\u7528\u6f14\u5458\u7684\u7269\u7406\u7279\u6027\u4ee5\u5c06\u5176\u51bb\u7ed3\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u3002 actor.set_simulate_physics(False) \u9664\u6b64\u4e4b\u5916\uff0c\u53c2\u4e0e\u8005\u8fd8\u6709\u4ed6\u4eec\u7684\u84dd\u56fe\u63d0\u4f9b\u7684\u6807\u7b7e\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u6700\u6709\u7528\u3002 \u8b66\u544a \u5927\u591a\u6570\u65b9\u6cd5\u662f\u5f02\u6b65\u5411\u6a21\u62df\u5668\u53d1\u9001\u8bf7\u6c42\u3002\u6a21\u62df\u5668\u6bcf\u6b21\u66f4\u65b0\u89e3\u6790\u5b83\u4eec\u7684\u65f6\u95f4\u6709\u9650\u3002\u4f7f\u7528 set() \u65b9\u6cd5\u6df9\u6ca1\u6a21\u62df\u5668\u5c06\u79ef\u7d2f\u660e\u663e\u7684\u5ef6\u8fdf\u3002 \u6467\u6bc1 \u5f53 Python \u811a\u672c\u5b8c\u6210\u65f6\uff0c\u53c2\u4e0e\u8005\u4e0d\u4f1a\u88ab\u9500\u6bc1\u3002\u4ed6\u4eec\u5fc5\u987b\u660e\u786e\u5730\u6467\u6bc1\u81ea\u5df1\u3002 destroyed_sucessfully = actor.destroy() # \u5982\u679c\u6210\u529f\u8fd4\u56de True \u91cd\u8981 \u9500\u6bc1\u53c2\u4e0e\u8005\u4f1a\u963b\u585e\u6a21\u62df\u5668\uff0c\u76f4\u5230\u8be5\u8fc7\u7a0b\u5b8c\u6210\u3002 \u53c2\u4e0e\u8005\u7c7b\u578b \u4f20\u611f\u5668 \u4f20\u611f\u5668\u662f\u4ea7\u751f\u6570\u636e\u6d41\u7684\u53c2\u4e0e\u8005\u3002\u4ed6\u4eec\u6709\u81ea\u5df1\u7684\u90e8\u5206\uff0c \u7b2c\u56db\u90e8\u5206. \u4f20\u611f\u5668\u548c\u6570\u636e \u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u770b\u4e00\u4e0b\u5e38\u89c1\u7684\u4f20\u611f\u5668\u751f\u6210\u5468\u671f\u3002 \u6b64\u793a\u4f8b\u751f\u6210\u4e00\u4e2a\u76f8\u673a\u4f20\u611f\u5668\uff0c\u5c06\u5176\u8fde\u63a5\u5230\u8f66\u8f86\uff0c\u5e76\u544a\u8bc9\u76f8\u673a\u5c06\u751f\u6210\u7684\u56fe\u50cf\u4fdd\u5b58\u5230\u78c1\u76d8\u3002 camera_bp = blueprint_library.find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, relative_transform, attach_to=my_vehicle) camera.listen(lambda image: image.save_to_disk('output/%06d.png' % image.frame)) \u4f20\u611f\u5668\u4e5f\u6709\u84dd\u56fe\u3002\u8bbe\u7f6e\u5c5e\u6027\u81f3\u5173\u91cd\u8981\u3002 \u5927\u591a\u6570\u4f20\u611f\u5668\u5c06\u5b89\u88c5\u5728\u8f66\u8f86\u4e0a\u4ee5\u6536\u96c6\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002 \u4f20\u611f\u5668 \u76d1\u542c \u6570\u636e\u3002\u6536\u5230\u6570\u636e\u540e\uff0c\u5b83\u4eec\u4f1a\u8c03\u7528\u7528 Lambda \u8868\u8fbe\u5f0f \u63cf\u8ff0\u7684\u51fd\u6570 (\u63d0\u4f9b\u7684\u94fe\u63a5\u4e2d\u7684 6.14) \u3002 \u89c2\u5bdf\u8005 \u7531\u865a\u5e7b\u5f15\u64ce\u653e\u7f6e\u4ee5\u63d0\u4f9b\u6e38\u620f\u5185\u7684\u89c6\u89d2\u3002\u5b83\u53ef\u7528\u4e8e\u79fb\u52a8\u6a21\u62df\u5668\u7a97\u53e3\u7684\u89c6\u89d2\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u79fb\u52a8\u89c2\u4f17\u6f14\u5458\uff0c\u5c06\u89c6\u89d2\u6307\u5411\u6240\u9700\u7684\u8f66\u8f86\u3002 spectator = world.get_spectator() transform = vehicle.get_transform() spectator.set_transform(carla.Transform(transform.location + carla.Location(z=50), carla.Rotation(pitch=-90))) \u4ea4\u901a\u6807\u5fd7\u548c\u4ea4\u901a\u706f \u5230\u76ee\u524d\u4e3a\u6b62\uff0cCarela \u4e2d\u53ea\u6709\u505c\u9760\u70b9\u3001\u8ba9\u884c\u8def\u7ebf\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u88ab\u89c6\u4e3a\u53c2\u4e0e\u8005\u3002\u5176\u4f59\u7684 OpenDRIVE \u6807\u5fd7\u53ef\u901a\u8fc7 API \u4f5c\u4e3a\u5730\u6807\uff08 carla.Landmark \uff09\u8fdb\u884c\u8bbf\u95ee\u3002\u4ed6\u4eec\u7684\u4fe1\u606f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u4f8b\u8bbf\u95ee\uff0c\u4f46\u4ed6\u4eec\u5728\u6a21\u62df\u4e2d\u5e76\u4e0d\u4f5c\u4e3a\u53c2\u4e0e\u8005\u5b58\u5728\u3002\u5728\u63a5\u4e0b\u6765\u7684 \u7b2c 3 \u90e8\u5206 \u5730\u56fe\u548c\u5bfc\u822a \u4e2d\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u5730\u6807\u3002 \u5f53\u6a21\u62df\u5f00\u59cb\u3001\u505c\u6b62\u3001\u8ba9\u884c\u548c\u4ea4\u901a\u706f\u65f6\uff0c\u4f1a\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u81ea\u52a8\u751f\u6210\u3002 \u8fd9\u4e9b\u90fd\u65e0\u6cd5\u5728\u84dd\u56fe\u5e93\u4e2d\u627e\u5230 \uff0c\u56e0\u6b64\u65e0\u6cd5\u751f\u6210\u3002 \u7b14\u8bb0 OpenDRIVE \u6587\u4ef6\u4e2d\u7684 Carela \u5730\u56fe\u6ca1\u6709\u4ea4\u901a\u6807\u5fd7\u6216\u4fe1\u53f7\u706f\u3002\u8fd9\u4e9b\u662f\u7531\u5f00\u53d1\u4eba\u5458\u624b\u52a8\u653e\u7f6e\u7684\u3002 \u4ea4\u901a\u6807\u5fd7 \u672a\u5728\u8def\u7ebf\u56fe\u672c\u8eab\u4e2d\u5b9a\u4e49\uff0c\u5982\u4e0b\u9875\u6240\u8ff0\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u6709\u4e00\u4e2a carla.BoundingBox \u6765\u5f71\u54cd\u5176\u4e2d\u7684\u8f66\u8f86\u3002 # \u83b7\u5f97\u5f71\u54cd\u8f66\u8f86\u7684\u4ea4\u901a\u706f if vehicle_actor.is_at_traffic_light(): traffic_light = vehicle_actor.get_traffic_light() \u8def\u53e3\u8bbe\u6709 \u4ea4\u901a\u706f \u3002\u4e0e\u4efb\u4f55\u53c2\u4e0e\u8005\u4e00\u6837\uff0c\u4ed6\u4eec\u6709\u81ea\u5df1\u72ec\u7279\u7684 ID\uff0c\u4f46\u5bf9\u4e8e\u5c94\u8def\u53e3\u4e5f\u6709\u4e00\u4e2a\u7ec4\uff08 group \uff09 ID \u3002 \u540c\u4e00\u7ec4\u4e2d\u7684\u4ea4\u901a\u706f\u9075\u5faa\u4e00\u4e2a\u5faa\u73af\u3002\u7b2c\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u7eff\u8272\uff0c\u800c\u5176\u4f59\u7684\u5219\u4fdd\u6301\u7ea2\u8272\u3002\u6d3b\u8dc3\u7684\u706f\u4f1a\u6301\u7eed\u51e0\u79d2\u949f\u5448\u7eff\u8272\u3001\u9ec4\u8272\u548c\u7ea2\u8272\uff0c\u56e0\u6b64\u6709\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u706f\u90fd\u662f\u7ea2\u8272\u7684\u3002\u7136\u540e\uff0c\u4e0b\u4e00\u4e2a\u7ea2\u7eff\u706f\u5f00\u59cb\u5faa\u73af\uff0c\u524d\u4e00\u4e2a\u7ea2\u7eff\u706f\u4e0e\u5176\u4f59\u7ea2\u7eff\u706f\u4e00\u8d77\u51bb\u7ed3\u3002 \u53ef\u4ee5\u4f7f\u7528 API \u8bbe\u7f6e\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002\u6bcf\u4e2a\u72b6\u6001\u82b1\u8d39\u7684\u79d2\u6570\u4e5f\u662f\u5982\u6b64\u3002\u53ef\u80fd\u7684\u72b6\u6001\u7528 carla.TrafficLightState \u63cf\u8ff0\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u503c\u3002 # \u4ea4\u901a\u706f\u4ece\u7ea2\u53d8\u7eff if traffic_light.get_state() == carla.TrafficLightState.Red: traffic_light.set_state(carla.TrafficLightState.Green) traffic_light.set_set_green_time(4.0) \u7b14\u8bb0 \u53ea\u6709\u5f53\u4fe1\u53f7\u706f\u4e3a\u7ea2\u8272\u65f6\uff0c\u8f66\u8f86\u624d\u4f1a\u610f\u8bc6\u5230\u4ea4\u901a\u706f\u3002 \u8f66\u8f86 carla.Vehicle \u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6f14\u5458\u3002\u5b83\u91c7\u7528\u4e86\u4eff\u771f\u8f6e\u5f0f\u8f66\u8f86\u7269\u7406\u7279\u6027\u7684\u7279\u6b8a\u5185\u90e8\u7ec4\u4ef6\u3002\u8fd9\u662f\u901a\u8fc7\u5e94\u7528\u56db\u79cd\u4e0d\u540c\u7684\u63a7\u4ef6\u6765\u5b9e\u73b0\u7684\uff1a carla.VehicleControl \u63d0\u4f9b\u6cb9\u95e8\u3001\u8f6c\u5411\u3001\u5239\u8f66\u7b49\u9a7e\u9a76\u547d\u4ee4\u7684\u8f93\u5165\u3002 vehicle.apply_control(carla.VehicleControl(throttle=1.0, steer=-1.0)) carla.VehiclePhysicsControl \u5b9a\u4e49\u8f66\u8f86\u7684\u7269\u7406\u5c5e\u6027\u5e76\u5305\u542b\u53e6\u5916\u4e24\u4e2a\u63a7\u5236\u5668\uff1a carla.GearPhysicsControl \u63a7\u5236\u9f7f\u8f6e\u3002 carla.WheelPhysicsControl \u63d0\u4f9b\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u7684\u7279\u5b9a\u63a7\u5236\u3002 vehicle.apply_physics_control(carla.VehiclePhysicsControl(max_rpm = 5000.0, center_of_mass = carla.Vector3D(0.0, 0.0, 0.0), torque_curve=[[0,400],[5000,400]])) \u8f66\u8f86\u6709\u4e00\u4e2a carla.BoundingBox \u5c01\u88c5\u5b83\u4eec\u3002\u8be5\u8fb9\u754c\u6846\u5141\u8bb8\u5c06\u7269\u7406\u539f\u7406\u5e94\u7528\u4e8e\u8f66\u8f86\u5e76\u68c0\u6d4b\u78b0\u649e\u3002 box = vehicle.bounding_box print(box.location) # \u76f8\u5bf9\u8f66\u8f86\u7684\u4f4d\u7f6e print(box.extent) # XYZ half-box extents in meters. \u901a\u8fc7\u542f\u7528 \u626b\u8f6e\u78b0\u649e\u53c2\u6570 \u53ef\u4ee5\u6539\u5584\u8f66\u8f6e\u7684\u7269\u7406\u7279\u6027\u3002\u9ed8\u8ba4\u7684\u8f6e\u5b50\u7269\u7406\u7cfb\u7edf\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u4f7f\u7528\u4ece\u8f74\u5230\u5730\u677f\u7684\u5355\u5c04\u7ebf\u6295\u5c04\uff0c\u4f46\u662f\u5f53\u542f\u7528\u626b\u8f6e\u78b0\u649e\u65f6\uff0c\u5c06\u68c0\u67e5\u8f6e\u5b50\u7684\u6574\u4e2a\u4f53\u79ef\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5b83\u53ef\u4ee5\u8fd9\u6837\u542f\u7528\uff1a physics_control = vehicle.get_physics_control() physics_control.use_sweep_wheel_collision = True vehicle.apply_physics_control(physics_control) \u8f66\u8f86\u8fd8\u5305\u62ec\u5176\u72ec\u6709\u7684\u5176\u4ed6\u529f\u80fd\uff1a \u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f \u4f1a\u5c06\u8f66\u8f86\u8ba2\u9605\u5230 \u4ea4\u901a\u7ba1\u7406\u5668 \u4ee5\u4eff\u771f\u771f\u5b9e\u7684\u57ce\u5e02\u72b6\u51b5\u3002\u8be5\u6a21\u5757\u662f\u786c\u7f16\u7801\u7684\uff0c\u4e0d\u662f\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u3002 vehicle.set_autopilot(True) \u8f66\u706f \u5fc5\u987b\u7531\u7528\u6237\u6253\u5f00\u548c\u5173\u95ed\u3002\u6bcf\u8f86\u8f66\u90fd\u6709\u4e00\u7ec4\u5728 carla.VehicleLightState \u4e2d\u5217\u51fa\u7684\u706f\u3002\u5e76\u975e\u6240\u6709\u8f66\u8f86\u90fd\u96c6\u6210\u4e86\u8f66\u706f\u3002\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\uff0c\u914d\u5907\u96c6\u6210\u8f66\u706f\u7684\u8f66\u8f86\u5982\u4e0b\uff1a \u81ea\u884c\u8f66\uff1a \u6240\u6709\u81ea\u884c\u8f66\u90fd\u6709\u524d\u540e\u4f4d\u7f6e\u706f\u3002 \u6469\u6258\u8f66\uff1a \u96c5\u9a6c\u54c8\u548c\u54c8\u96f7\u6234\u7ef4\u68ee\u578b\u53f7\u3002 \u6c7d\u8f66\uff1a \u5965\u8fea TT\u3001\u96ea\u4f5b\u5170 Impala\u3001\u9053\u5947\u8b66\u8f66\u3001\u9053\u5947 Charger\u3001\u5965\u8fea e-tron\u3001\u6797\u80af 2017 \u5e74\u548c 2020 \u5e74\u3001\u91ce\u9a6c\u3001\u7279\u65af\u62c9 Model 3\u3001\u7279\u65af\u62c9 Cybertruck\u3001\u5927\u4f17 T2 \u548c\u6885\u8d5b\u5fb7\u65af C \u7ea7\u3002 \u53ef\u4ee5\u4f7f\u7528 carla.Vehicle.get_light_state \u548c carla.Vehicle.set_light_state \u65b9\u6cd5\u968f\u65f6\u68c0\u7d22\u548c\u66f4\u65b0\u8f66\u8f86\u7684\u706f\u5149\u3002\u5b83\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6765\u81ea\u5b9a\u4e49\u706f\u5149\u8bbe\u7f6e\u3002 # \u6253\u5f00\u4f4d\u7f6e\u706f current_lights = carla.VehicleLightState.NONE current_lights |= carla.VehicleLightState.Position vehicle.set_light_state(current_lights) \u884c\u4eba carla.Walker \u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u8f66\u8f86\u7c7b\u4f3c\u3002\u5bf9\u5b83\u4eec\u7684\u63a7\u5236\u7531\u63a7\u5236\u5668\u63d0\u4f9b\u3002 carla.WalkerControl \u4ee5\u4e00\u5b9a\u7684\u65b9\u5411\u548c\u901f\u5ea6\u79fb\u52a8\u884c\u4eba\u3002\u5b83\u8fd8\u5141\u8bb8\u4ed6\u4eec\u8df3\u8dc3\u3002 carla.WalkerBoneControl \u63d0\u4f9b\u5bf9\u4e09\u7ef4\u9aa8\u67b6\u7684\u63a7\u5236\u3002 \u672c\u6559\u7a0b \u89e3\u91ca\u4e86\u5982\u4f55\u63a7\u5236\u5b83\u3002 \u884c\u4eba\u53ef\u4ee5\u7531\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u3002\u4ed6\u4eec\u6ca1\u6709\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u3002 carla.WalkerAIController \u53c2\u4e0e\u8005\u5728\u5b83\u6240\u9644\u52a0\u7684\u53c2\u4e0e\u8005\u5468\u56f4\u79fb\u52a8\u3002 walker_controller_bp = world.get_blueprint_library().find('controller.ai.walker') world.SpawnActor(walker_controller_bp, carla.Transform(), parent_walker) \u7b14\u8bb0 \u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u662f\u65e0\u5f62\u7684\uff0c\u6ca1\u6709\u7269\u7406\u7279\u6027\u3002\u5b83\u4e0d\u4f1a\u51fa\u73b0\u5728\u73b0\u573a\u3002\u6b64\u5916\uff0c\u4f4d\u7f6e (0,0,0) \u76f8\u5bf9\u4e8e\u5176\u7236\u7ea7\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u5bfc\u81f4\u78b0\u649e\u3002 \u6bcf\u4e2a\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u90fd\u9700\u8981\u521d\u59cb\u5316\u3001\u76ee\u6807\u548c\u53ef\u9009\u7684\u901f\u5ea6 \u3002\u505c\u6b62\u63a7\u5236\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u76f8\u540c\u3002 ai_controller.start() ai_controller.go_to_location(world.get_random_location_from_navigation()) ai_controller.set_max_speed(1 + random.random()) # \u5728 1 \u7c73\u6bcf\u79d2 \u5230 2 \u7c73\u6bcf\u79d2\u4e4b\u95f4\uff08\u9ed8\u8ba4\u662f 1.4 \u7c73\u6bcf\u79d2\uff09 ... ai_controller.stop() \u5f53\u6b65\u884c\u8005\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u65f6\uff0c\u4ed6\u4eec\u4f1a\u81ea\u52a8\u6b65\u884c\u5230\u53e6\u4e00\u4e2a\u968f\u673a\u70b9\u3002\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u70b9\uff0c\u6b65\u884c\u8005\u5c06\u524d\u5f80\u8ddd\u79bb\u5f53\u524d\u4f4d\u7f6e\u6700\u8fd1\u7684\u70b9\u3002 carla.Client \u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\u4f7f\u7528\u6279\u6b21\u751f\u6210\u5927\u91cf\u6b65\u884c\u8005\u5e76\u8ba9\u5b83\u4eec\u56db\u5904\u6e38\u8361\u3002 \u91cd\u8981 \u8981\u6467\u6bc1\u4eba\u5de5\u667a\u80fd\u884c\u4eba \uff0c\u8bf7\u505c\u6b62\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u5e76\u6467\u6bc1\u53c2\u4e0e\u8005\u548c\u63a7\u5236\u5668\u3002 \u5173\u4e8e Carla \u4e2d\u7684\u53c2\u4e0e\u8005\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u603b\u7ed3\u3002\u4e0b\u4e00\u6b65\u5c06\u4ed4\u7ec6\u7814\u7a76 Carla \u7684\u5730\u56fe\u3001\u9053\u8def\u548c\u4ea4\u901a\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u6216\u8bbf\u95ee\u8bba\u575b\u53d1\u5e03\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b 3rd. \u5730\u56fe\u548c\u5bfc\u822a","title":"\u53c2\u4e0e\u8005\u548c\u84dd\u56fe"},{"location":"core_actors/#_1","text":"Carla \u4e2d\u7684\u53c2\u4e0e\u8005\u662f\u5728\u6a21\u62df\u4e2d\u6267\u884c\u52a8\u4f5c\u7684\u5143\u7d20\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u3002Carla \u7684\u53c2\u4e0e\u8005\u5305\u62ec\u8f66\u8f86\u548c\u6b65\u884c\u8005\uff0c\u4e5f\u5305\u62ec\u4f20\u611f\u5668\u3001\u4ea4\u901a\u6807\u5fd7\u3001\u7ea2\u7eff\u706f\u548c\u89c2\u770b\u8005\u3002\u5bf9\u5982\u4f55\u64cd\u4f5c\u5b83\u4eec\u6709\u5145\u5206\u7684\u4e86\u89e3\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u672c\u8282\u5c06\u4ecb\u7ecd\u751f\u6210\u3001\u6467\u6bc1\u3001\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u5b83\u4eec\u3002\u7136\u800c\uff0c\u53ef\u80fd\u6027\u51e0\u4e4e\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u3002\u5b9e\u9a8c\u3001\u67e5\u770b\u672c\u6587\u6863\u4e2d\u7684 \u6559\u7a0b \uff0c\u5e76\u5728 Carla \u8bba\u575b \u4e2d\u5206\u4eab\u7591\u8651\u548c\u60f3\u6cd5\u3002 \u84dd\u56fe \u7ba1\u7406\u84dd\u56fe\u5e93 \u53c2\u4e0e\u8005\u751f\u547d\u5468\u671f \u751f\u6210 \u5904\u7406 \u6467\u6bc1 \u53c2\u4e0e\u8005\u7c7b\u578b \u4f20\u611f\u5668 \u89c2\u5bdf\u8005 \u4ea4\u901a\u6807\u5fd7\u548c\u4ea4\u901a\u706f \u8f66\u8f86 \u6b65\u884c\u8005","title":"\u7b2c\u4e8c\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe"},{"location":"core_actors/#_2","text":"\u8fd9\u4e9b\u5e03\u5c40\u5141\u8bb8\u7528\u6237\u5c06\u65b0\u7684\u53c2\u4e0e\u8005\u5e73\u6ed1\u5730\u7ed3\u5408\u5230\u6a21\u62df\u4e2d\u3002\u5b83\u4eec\u5df2\u7ecf\u662f\u5e26\u6709\u52a8\u753b\u548c\u4e00\u7cfb\u5217\u5c5e\u6027\u7684\u6a21\u578b\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u53ef\u4fee\u6539\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u662f\u3002\u8fd9\u4e9b\u5c5e\u6027\u5305\u62ec\u8f66\u8f86\u989c\u8272\u3001\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u4e2d\u7684\u901a\u9053\u6570\u91cf\u3001\u6b65\u884c\u8005\u7684\u901f\u5ea6\u7b49\u7b49\u3002 \u84dd\u56fe\u5e93 \u5217\u51fa\u4e86\u53ef\u7528\u7684\u84dd\u56fe\u53ca\u5176\u5c5e\u6027\u3002\u8f66\u8f86\u548c\u6b65\u884c\u8005\u84dd\u56fe\u5177\u6709\u4e00\u4e2a\u751f\u6210\u5c5e\u6027\uff0c\u7528\u4e8e\u6307\u793a\u5b83\u4eec\u662f\u65b0\u7684\uff08\u7b2c2\u4ee3\uff09\u8d44\u4ea7\u8fd8\u662f\u65e7\u7684\uff08\u7b2c1\u4ee3\uff09\u8d44\u4ea7\u3002","title":"\u84dd\u56fe"},{"location":"core_actors/#_3","text":"carla.BlueprintLibrary \u7c7b\u5305\u542b\u4e00\u7cfb\u5217 carla.ActorBlueprint \u5143\u7d20\u3002\u5b83\u662f\u80fd\u591f\u63d0\u4f9b\u5bf9\u5b83\u8bbf\u95ee\u7684\u4e16\u754c\u5bf9\u8c61\u3002 blueprint_library = world.get_blueprint_library() \u84dd\u56fe\u6709\u4e00\u4e2a ID \u6765\u8bc6\u522b\u5b83\u4eec\u548c\u7531\u6b64\u4ea7\u751f\u7684\u53c2\u4e0e\u8005\u3002\u53ef\u4ee5\u8bfb\u53d6\u5e93\u6765\u627e\u5230\u67d0\u4e2a ID\uff0c\u968f\u673a\u9009\u62e9\u84dd\u56fe\uff0c\u6216\u8005\u4f7f\u7528 \u901a\u914d\u7b26\u6a21\u5f0f \u8fc7\u6ee4\u7ed3\u679c\u3002 # \u627e\u4e00\u4e2a\u6307\u5b9a\u7684\u84dd\u56fe collision_sensor_bp = blueprint_library.find('sensor.other.collision') # \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u8f66\u8f86\u84dd\u56fe vehicle_bp = random.choice(blueprint_library.filter('vehicle.*.*')) \u9664\u6b64\u4e4b\u5916\uff0c\u6bcf\u4e2a carla.ActorBlueprint \u80fd\u83b7\u53d6 get \u548c\u6539\u53d8 set \u4e00\u4e9b\u5217\u53c2\u4e0e\u8005\u5c5e\u6027 carla.ActorAttribute \u3002 is_bike = [vehicle.get_attribute('number_of_wheels') == 2] if(is_bike) vehicle.set_attribute('color', '255,0,0') \u7b14\u8bb0 \u67d0\u4e9b\u5c5e\u6027\u65e0\u6cd5\u4fee\u6539\u3002\u5728 \u84dd\u56fe\u5e93 \u4e2d\u67e5\u770b\u3002 \u5c5e\u6027\u6709\u4e00\u4e2a\u53c2\u4e0e\u8005\u5c5e\u6027\u7c7b\u578b carla.ActorAttributeType \u53d8\u91cf\u3002\u5b83\u4ece\u679a\u4e3e\u5217\u8868\u4e2d\u58f0\u660e\u5176\u7c7b\u578b\u3002\u6b64\u5916\uff0c\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u8fd8\u9644\u5e26\u4e00\u4e2a \u63a8\u8350\u503c\u5217\u8868 \u3002 for attr in blueprint: if attr.is_modifiable: blueprint.set_attribute(attr.id, random.choice(attr.recommended_values)) \u7b14\u8bb0 \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u8f66\u8f86\u3002\u67e5\u770b \u6559\u7a0b\uff08\u8d44\u4ea7\uff09 \u4ee5\u4e86\u89e3\u76f8\u5173\u4fe1\u606f\u3002\u8d21\u732e\u8005\u53ef\u4ee5 \u5c06\u4ed6\u4eec\u7684\u65b0\u5185\u5bb9\u6dfb\u52a0\u5230 Carla \u3002","title":"\u7ba1\u7406\u84dd\u56fe\u5e93"},{"location":"core_actors/#_4","text":"\u91cd\u8981 \u672c\u8282\u63d0\u5230\u4e86\u5173\u4e8e\u53c2\u4e0e\u8005\u7684\u4e0d\u540c\u65b9\u6cd5\u3002Python API \u63d0\u4f9b commands \uff0c\u4ee5\u4fbf\u5728\u4e00\u4e2a\u6846\u67b6\u4e2d\u5e94\u7528\u4e00\u6279\u6700\u5e38\u89c1\u7684\u547d\u4ee4\u3002","title":"\u53c2\u4e0e\u8005\u751f\u547d\u5468\u671f"},{"location":"core_actors/#_5","text":"\u4e16\u754c\u5bf9\u8c61\u8d1f\u8d23\u751f\u6210\u53c2\u4e0e\u8005\u5e76\u8ddf\u8e2a\u8fd9\u4e9b\u53c2\u4e0e\u8005\u3002 \u751f\u6210\u53ea\u9700\u8981\u4e00\u5f20\u84dd\u56fe\u548c\u4e00\u4e2a carla.Transform \u8bf4\u660e\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 \u4e16\u754c\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u65b9\u6cd5\u751f\u6210\u53c2\u4e0e\u8005\u3002 spawn_actor() \u5982\u679c\u751f\u6210\u5931\u8d25\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 try_spawn_actor() \u5982\u679c\u751f\u6210\u5931\u8d25\u8fd4\u56de None \u3002 transform = Transform(Location(x=230, y=195, z=40), Rotation(yaw=180)) actor = world.spawn_actor(blueprint, transform) \u91cd\u8981 Carla \u4f7f\u7528 \u865a\u5e7b\u5f15\u64ce\u5750\u6807\u7cfb\u7edf \u3002\u8bb0\u4f4f\uff1a carla.Rotation \u6784\u9020\u51fd\u6570\u5b9a\u4e49\u4e3a\u201c\u4fef\u4ef0\u3001\u504f\u822a\u3001\u7ffb\u6eda\u201d (pitch, yaw, roll) \uff0c\u4e0e\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u201c\u7ffb\u6eda\u3001\u4fef\u4ef0\u3001\u504f\u822a\u201d (roll, pitch, yaw) \u4e0d\u540c\u3002 \u5982\u679c\u5728\u6307\u5b9a\u4f4d\u7f6e\u53d1\u751f\u51b2\u7a81\uff0c\u5c06\u4e0d\u4f1a\u751f\u6210\u53c2\u4e0e\u8005\u3002\u65e0\u8bba\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728\u9759\u6001\u5bf9\u8c61\u8fd8\u662f\u5176\u4ed6\u53c2\u4e0e\u8005\u8eab\u4e0a\u3002\u53ef\u4ee5\u5c1d\u8bd5\u907f\u514d\u8fd9\u4e9b\u4e0d\u5e0c\u671b\u7684\u751f\u6210\u78b0\u649e\u3002 map.get_spawn_points() \u5bf9\u4e8e\u8f66\u8f86 \u3002 \u8fd4\u56de\u63a8\u8350\u751f\u6210\u70b9\u7684\u5217\u8868\u3002 spawn_points = world.get_map().get_spawn_points() world.get_random_location() \u5bf9\u4e8e\u884c\u4eba \u3002 \u8fd4\u56de\u4eba\u884c\u9053\u4e0a\u7684\u968f\u673a\u70b9\u3002\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u7528\u4e8e\u4e3a\u884c\u4eba\u8bbe\u7f6e\u76ee\u6807\u4f4d\u7f6e\u3002 spawn_point = carla.Transform() spawn_point.location = world.get_random_location_from_navigation() \u4e00\u4e2a\u53c2\u4e0e\u8005\u5728\u751f\u6210\u65f6\u53ef\u4ee5\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\u4e0a\u3002\u53c2\u4e0e\u8005\u8ddf\u968f\u4ed6\u4eec\u6240\u4f9d\u9644\u7684\u7236\u7ea7\u3002\u8fd9\u5bf9\u4e8e\u4f20\u611f\u5668\u7279\u522b\u6709\u7528\u3002\u8be5\u9644\u4ef6\u53ef\u4ee5\u662f\u521a\u6027\u7684\uff08\u9002\u5408\u68c0\u7d22\u7cbe\u786e\u6570\u636e\uff09\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u5176\u7236\u7ea7\u7684\u60c5\u51b5\u8fdb\u884c\u8f7b\u677e\u79fb\u52a8\u3002\u5b83\u7531\u8f85\u52a9\u7c7b carla.AttachmentType \u5b9a\u4e49\u3002 \u4e0b\u4e00\u4e2a\u793a\u4f8b\u5c06\u76f8\u673a\u521a\u6027\u5730\u8fde\u63a5\u5230\u8f66\u8f86\u4e0a\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4fdd\u6301\u56fa\u5b9a\u3002 camera = world.spawn_actor(camera_bp, relative_transform, attach_to=my_vehicle, carla.AttachmentType.Rigid) \u91cd\u8981 \u5f53\u751f\u6210\u9644\u52a0\u7684\u53c2\u4e0e\u8005\u65f6\uff0c\u63d0\u4f9b\u7684\u53d8\u6362\u5fc5\u987b\u76f8\u5bf9\u4e8e\u7236\u7ea7\u53c2\u4e0e\u8005\u3002 \u4e00\u65e6\u751f\u6210\uff0c\u4e16\u754c\u5bf9\u8c61\u5c31\u4f1a\u5c06\u53c2\u4e0e\u8005\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002\u8fd9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u641c\u7d22\u6216\u8fed\u4ee3\u3002 actor_list = world.get_actors() # \u6839\u636e id \u627e\u53c2\u4e0e\u8005 actor = actor_list.find(id) # \u6253\u5370\u4e16\u754c\u4e0a\u6240\u6709\u9650\u901f\u6807\u5fd7\u7684\u4f4d\u7f6e\u3002 for speed_sign in actor_list.filter('traffic.speed_limit.*'): print(speed_sign.get_location())","title":"\u751f\u6210"},{"location":"core_actors/#_6","text":"carla.Actor \u4e3b\u8981\u7531 get() \u548c set() \u65b9\u6cd5\u7ec4\u6210\uff0c\u7528\u4e8e\u7ba1\u7406\u5730\u56fe\u5468\u56f4\u7684\u53c2\u4e0e\u8005\u3002 print(actor.get_acceleration()) print(actor.get_velocity()) location = actor.get_location() location.z += 10.0 actor.set_location(location) \u53ef\u4ee5\u7981\u7528\u6f14\u5458\u7684\u7269\u7406\u7279\u6027\u4ee5\u5c06\u5176\u51bb\u7ed3\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u3002 actor.set_simulate_physics(False) \u9664\u6b64\u4e4b\u5916\uff0c\u53c2\u4e0e\u8005\u8fd8\u6709\u4ed6\u4eec\u7684\u84dd\u56fe\u63d0\u4f9b\u7684\u6807\u7b7e\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u6700\u6709\u7528\u3002 \u8b66\u544a \u5927\u591a\u6570\u65b9\u6cd5\u662f\u5f02\u6b65\u5411\u6a21\u62df\u5668\u53d1\u9001\u8bf7\u6c42\u3002\u6a21\u62df\u5668\u6bcf\u6b21\u66f4\u65b0\u89e3\u6790\u5b83\u4eec\u7684\u65f6\u95f4\u6709\u9650\u3002\u4f7f\u7528 set() \u65b9\u6cd5\u6df9\u6ca1\u6a21\u62df\u5668\u5c06\u79ef\u7d2f\u660e\u663e\u7684\u5ef6\u8fdf\u3002","title":"\u5904\u7406"},{"location":"core_actors/#_7","text":"\u5f53 Python \u811a\u672c\u5b8c\u6210\u65f6\uff0c\u53c2\u4e0e\u8005\u4e0d\u4f1a\u88ab\u9500\u6bc1\u3002\u4ed6\u4eec\u5fc5\u987b\u660e\u786e\u5730\u6467\u6bc1\u81ea\u5df1\u3002 destroyed_sucessfully = actor.destroy() # \u5982\u679c\u6210\u529f\u8fd4\u56de True \u91cd\u8981 \u9500\u6bc1\u53c2\u4e0e\u8005\u4f1a\u963b\u585e\u6a21\u62df\u5668\uff0c\u76f4\u5230\u8be5\u8fc7\u7a0b\u5b8c\u6210\u3002","title":"\u6467\u6bc1"},{"location":"core_actors/#_8","text":"","title":"\u53c2\u4e0e\u8005\u7c7b\u578b"},{"location":"core_actors/#_9","text":"\u4f20\u611f\u5668\u662f\u4ea7\u751f\u6570\u636e\u6d41\u7684\u53c2\u4e0e\u8005\u3002\u4ed6\u4eec\u6709\u81ea\u5df1\u7684\u90e8\u5206\uff0c \u7b2c\u56db\u90e8\u5206. \u4f20\u611f\u5668\u548c\u6570\u636e \u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u770b\u4e00\u4e0b\u5e38\u89c1\u7684\u4f20\u611f\u5668\u751f\u6210\u5468\u671f\u3002 \u6b64\u793a\u4f8b\u751f\u6210\u4e00\u4e2a\u76f8\u673a\u4f20\u611f\u5668\uff0c\u5c06\u5176\u8fde\u63a5\u5230\u8f66\u8f86\uff0c\u5e76\u544a\u8bc9\u76f8\u673a\u5c06\u751f\u6210\u7684\u56fe\u50cf\u4fdd\u5b58\u5230\u78c1\u76d8\u3002 camera_bp = blueprint_library.find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, relative_transform, attach_to=my_vehicle) camera.listen(lambda image: image.save_to_disk('output/%06d.png' % image.frame)) \u4f20\u611f\u5668\u4e5f\u6709\u84dd\u56fe\u3002\u8bbe\u7f6e\u5c5e\u6027\u81f3\u5173\u91cd\u8981\u3002 \u5927\u591a\u6570\u4f20\u611f\u5668\u5c06\u5b89\u88c5\u5728\u8f66\u8f86\u4e0a\u4ee5\u6536\u96c6\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002 \u4f20\u611f\u5668 \u76d1\u542c \u6570\u636e\u3002\u6536\u5230\u6570\u636e\u540e\uff0c\u5b83\u4eec\u4f1a\u8c03\u7528\u7528 Lambda \u8868\u8fbe\u5f0f \u63cf\u8ff0\u7684\u51fd\u6570 (\u63d0\u4f9b\u7684\u94fe\u63a5\u4e2d\u7684 6.14) \u3002","title":"\u4f20\u611f\u5668"},{"location":"core_actors/#_10","text":"\u7531\u865a\u5e7b\u5f15\u64ce\u653e\u7f6e\u4ee5\u63d0\u4f9b\u6e38\u620f\u5185\u7684\u89c6\u89d2\u3002\u5b83\u53ef\u7528\u4e8e\u79fb\u52a8\u6a21\u62df\u5668\u7a97\u53e3\u7684\u89c6\u89d2\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u79fb\u52a8\u89c2\u4f17\u6f14\u5458\uff0c\u5c06\u89c6\u89d2\u6307\u5411\u6240\u9700\u7684\u8f66\u8f86\u3002 spectator = world.get_spectator() transform = vehicle.get_transform() spectator.set_transform(carla.Transform(transform.location + carla.Location(z=50), carla.Rotation(pitch=-90)))","title":"\u89c2\u5bdf\u8005"},{"location":"core_actors/#_11","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0cCarela \u4e2d\u53ea\u6709\u505c\u9760\u70b9\u3001\u8ba9\u884c\u8def\u7ebf\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u88ab\u89c6\u4e3a\u53c2\u4e0e\u8005\u3002\u5176\u4f59\u7684 OpenDRIVE \u6807\u5fd7\u53ef\u901a\u8fc7 API \u4f5c\u4e3a\u5730\u6807\uff08 carla.Landmark \uff09\u8fdb\u884c\u8bbf\u95ee\u3002\u4ed6\u4eec\u7684\u4fe1\u606f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u4f8b\u8bbf\u95ee\uff0c\u4f46\u4ed6\u4eec\u5728\u6a21\u62df\u4e2d\u5e76\u4e0d\u4f5c\u4e3a\u53c2\u4e0e\u8005\u5b58\u5728\u3002\u5728\u63a5\u4e0b\u6765\u7684 \u7b2c 3 \u90e8\u5206 \u5730\u56fe\u548c\u5bfc\u822a \u4e2d\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u5730\u6807\u3002 \u5f53\u6a21\u62df\u5f00\u59cb\u3001\u505c\u6b62\u3001\u8ba9\u884c\u548c\u4ea4\u901a\u706f\u65f6\uff0c\u4f1a\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u81ea\u52a8\u751f\u6210\u3002 \u8fd9\u4e9b\u90fd\u65e0\u6cd5\u5728\u84dd\u56fe\u5e93\u4e2d\u627e\u5230 \uff0c\u56e0\u6b64\u65e0\u6cd5\u751f\u6210\u3002 \u7b14\u8bb0 OpenDRIVE \u6587\u4ef6\u4e2d\u7684 Carela \u5730\u56fe\u6ca1\u6709\u4ea4\u901a\u6807\u5fd7\u6216\u4fe1\u53f7\u706f\u3002\u8fd9\u4e9b\u662f\u7531\u5f00\u53d1\u4eba\u5458\u624b\u52a8\u653e\u7f6e\u7684\u3002 \u4ea4\u901a\u6807\u5fd7 \u672a\u5728\u8def\u7ebf\u56fe\u672c\u8eab\u4e2d\u5b9a\u4e49\uff0c\u5982\u4e0b\u9875\u6240\u8ff0\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u6709\u4e00\u4e2a carla.BoundingBox \u6765\u5f71\u54cd\u5176\u4e2d\u7684\u8f66\u8f86\u3002 # \u83b7\u5f97\u5f71\u54cd\u8f66\u8f86\u7684\u4ea4\u901a\u706f if vehicle_actor.is_at_traffic_light(): traffic_light = vehicle_actor.get_traffic_light() \u8def\u53e3\u8bbe\u6709 \u4ea4\u901a\u706f \u3002\u4e0e\u4efb\u4f55\u53c2\u4e0e\u8005\u4e00\u6837\uff0c\u4ed6\u4eec\u6709\u81ea\u5df1\u72ec\u7279\u7684 ID\uff0c\u4f46\u5bf9\u4e8e\u5c94\u8def\u53e3\u4e5f\u6709\u4e00\u4e2a\u7ec4\uff08 group \uff09 ID \u3002 \u540c\u4e00\u7ec4\u4e2d\u7684\u4ea4\u901a\u706f\u9075\u5faa\u4e00\u4e2a\u5faa\u73af\u3002\u7b2c\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u7eff\u8272\uff0c\u800c\u5176\u4f59\u7684\u5219\u4fdd\u6301\u7ea2\u8272\u3002\u6d3b\u8dc3\u7684\u706f\u4f1a\u6301\u7eed\u51e0\u79d2\u949f\u5448\u7eff\u8272\u3001\u9ec4\u8272\u548c\u7ea2\u8272\uff0c\u56e0\u6b64\u6709\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u706f\u90fd\u662f\u7ea2\u8272\u7684\u3002\u7136\u540e\uff0c\u4e0b\u4e00\u4e2a\u7ea2\u7eff\u706f\u5f00\u59cb\u5faa\u73af\uff0c\u524d\u4e00\u4e2a\u7ea2\u7eff\u706f\u4e0e\u5176\u4f59\u7ea2\u7eff\u706f\u4e00\u8d77\u51bb\u7ed3\u3002 \u53ef\u4ee5\u4f7f\u7528 API \u8bbe\u7f6e\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002\u6bcf\u4e2a\u72b6\u6001\u82b1\u8d39\u7684\u79d2\u6570\u4e5f\u662f\u5982\u6b64\u3002\u53ef\u80fd\u7684\u72b6\u6001\u7528 carla.TrafficLightState \u63cf\u8ff0\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u503c\u3002 # \u4ea4\u901a\u706f\u4ece\u7ea2\u53d8\u7eff if traffic_light.get_state() == carla.TrafficLightState.Red: traffic_light.set_state(carla.TrafficLightState.Green) traffic_light.set_set_green_time(4.0) \u7b14\u8bb0 \u53ea\u6709\u5f53\u4fe1\u53f7\u706f\u4e3a\u7ea2\u8272\u65f6\uff0c\u8f66\u8f86\u624d\u4f1a\u610f\u8bc6\u5230\u4ea4\u901a\u706f\u3002","title":"\u4ea4\u901a\u6807\u5fd7\u548c\u4ea4\u901a\u706f"},{"location":"core_actors/#_12","text":"carla.Vehicle \u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6f14\u5458\u3002\u5b83\u91c7\u7528\u4e86\u4eff\u771f\u8f6e\u5f0f\u8f66\u8f86\u7269\u7406\u7279\u6027\u7684\u7279\u6b8a\u5185\u90e8\u7ec4\u4ef6\u3002\u8fd9\u662f\u901a\u8fc7\u5e94\u7528\u56db\u79cd\u4e0d\u540c\u7684\u63a7\u4ef6\u6765\u5b9e\u73b0\u7684\uff1a carla.VehicleControl \u63d0\u4f9b\u6cb9\u95e8\u3001\u8f6c\u5411\u3001\u5239\u8f66\u7b49\u9a7e\u9a76\u547d\u4ee4\u7684\u8f93\u5165\u3002 vehicle.apply_control(carla.VehicleControl(throttle=1.0, steer=-1.0)) carla.VehiclePhysicsControl \u5b9a\u4e49\u8f66\u8f86\u7684\u7269\u7406\u5c5e\u6027\u5e76\u5305\u542b\u53e6\u5916\u4e24\u4e2a\u63a7\u5236\u5668\uff1a carla.GearPhysicsControl \u63a7\u5236\u9f7f\u8f6e\u3002 carla.WheelPhysicsControl \u63d0\u4f9b\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u7684\u7279\u5b9a\u63a7\u5236\u3002 vehicle.apply_physics_control(carla.VehiclePhysicsControl(max_rpm = 5000.0, center_of_mass = carla.Vector3D(0.0, 0.0, 0.0), torque_curve=[[0,400],[5000,400]])) \u8f66\u8f86\u6709\u4e00\u4e2a carla.BoundingBox \u5c01\u88c5\u5b83\u4eec\u3002\u8be5\u8fb9\u754c\u6846\u5141\u8bb8\u5c06\u7269\u7406\u539f\u7406\u5e94\u7528\u4e8e\u8f66\u8f86\u5e76\u68c0\u6d4b\u78b0\u649e\u3002 box = vehicle.bounding_box print(box.location) # \u76f8\u5bf9\u8f66\u8f86\u7684\u4f4d\u7f6e print(box.extent) # XYZ half-box extents in meters. \u901a\u8fc7\u542f\u7528 \u626b\u8f6e\u78b0\u649e\u53c2\u6570 \u53ef\u4ee5\u6539\u5584\u8f66\u8f6e\u7684\u7269\u7406\u7279\u6027\u3002\u9ed8\u8ba4\u7684\u8f6e\u5b50\u7269\u7406\u7cfb\u7edf\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u4f7f\u7528\u4ece\u8f74\u5230\u5730\u677f\u7684\u5355\u5c04\u7ebf\u6295\u5c04\uff0c\u4f46\u662f\u5f53\u542f\u7528\u626b\u8f6e\u78b0\u649e\u65f6\uff0c\u5c06\u68c0\u67e5\u8f6e\u5b50\u7684\u6574\u4e2a\u4f53\u79ef\u662f\u5426\u53d1\u751f\u78b0\u649e\u3002\u5b83\u53ef\u4ee5\u8fd9\u6837\u542f\u7528\uff1a physics_control = vehicle.get_physics_control() physics_control.use_sweep_wheel_collision = True vehicle.apply_physics_control(physics_control) \u8f66\u8f86\u8fd8\u5305\u62ec\u5176\u72ec\u6709\u7684\u5176\u4ed6\u529f\u80fd\uff1a \u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f \u4f1a\u5c06\u8f66\u8f86\u8ba2\u9605\u5230 \u4ea4\u901a\u7ba1\u7406\u5668 \u4ee5\u4eff\u771f\u771f\u5b9e\u7684\u57ce\u5e02\u72b6\u51b5\u3002\u8be5\u6a21\u5757\u662f\u786c\u7f16\u7801\u7684\uff0c\u4e0d\u662f\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u3002 vehicle.set_autopilot(True) \u8f66\u706f \u5fc5\u987b\u7531\u7528\u6237\u6253\u5f00\u548c\u5173\u95ed\u3002\u6bcf\u8f86\u8f66\u90fd\u6709\u4e00\u7ec4\u5728 carla.VehicleLightState \u4e2d\u5217\u51fa\u7684\u706f\u3002\u5e76\u975e\u6240\u6709\u8f66\u8f86\u90fd\u96c6\u6210\u4e86\u8f66\u706f\u3002\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\uff0c\u914d\u5907\u96c6\u6210\u8f66\u706f\u7684\u8f66\u8f86\u5982\u4e0b\uff1a \u81ea\u884c\u8f66\uff1a \u6240\u6709\u81ea\u884c\u8f66\u90fd\u6709\u524d\u540e\u4f4d\u7f6e\u706f\u3002 \u6469\u6258\u8f66\uff1a \u96c5\u9a6c\u54c8\u548c\u54c8\u96f7\u6234\u7ef4\u68ee\u578b\u53f7\u3002 \u6c7d\u8f66\uff1a \u5965\u8fea TT\u3001\u96ea\u4f5b\u5170 Impala\u3001\u9053\u5947\u8b66\u8f66\u3001\u9053\u5947 Charger\u3001\u5965\u8fea e-tron\u3001\u6797\u80af 2017 \u5e74\u548c 2020 \u5e74\u3001\u91ce\u9a6c\u3001\u7279\u65af\u62c9 Model 3\u3001\u7279\u65af\u62c9 Cybertruck\u3001\u5927\u4f17 T2 \u548c\u6885\u8d5b\u5fb7\u65af C \u7ea7\u3002 \u53ef\u4ee5\u4f7f\u7528 carla.Vehicle.get_light_state \u548c carla.Vehicle.set_light_state \u65b9\u6cd5\u968f\u65f6\u68c0\u7d22\u548c\u66f4\u65b0\u8f66\u8f86\u7684\u706f\u5149\u3002\u5b83\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6765\u81ea\u5b9a\u4e49\u706f\u5149\u8bbe\u7f6e\u3002 # \u6253\u5f00\u4f4d\u7f6e\u706f current_lights = carla.VehicleLightState.NONE current_lights |= carla.VehicleLightState.Position vehicle.set_light_state(current_lights)","title":"\u8f66\u8f86"},{"location":"core_actors/#_13","text":"carla.Walker \u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u8f66\u8f86\u7c7b\u4f3c\u3002\u5bf9\u5b83\u4eec\u7684\u63a7\u5236\u7531\u63a7\u5236\u5668\u63d0\u4f9b\u3002 carla.WalkerControl \u4ee5\u4e00\u5b9a\u7684\u65b9\u5411\u548c\u901f\u5ea6\u79fb\u52a8\u884c\u4eba\u3002\u5b83\u8fd8\u5141\u8bb8\u4ed6\u4eec\u8df3\u8dc3\u3002 carla.WalkerBoneControl \u63d0\u4f9b\u5bf9\u4e09\u7ef4\u9aa8\u67b6\u7684\u63a7\u5236\u3002 \u672c\u6559\u7a0b \u89e3\u91ca\u4e86\u5982\u4f55\u63a7\u5236\u5b83\u3002 \u884c\u4eba\u53ef\u4ee5\u7531\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u3002\u4ed6\u4eec\u6ca1\u6709\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u3002 carla.WalkerAIController \u53c2\u4e0e\u8005\u5728\u5b83\u6240\u9644\u52a0\u7684\u53c2\u4e0e\u8005\u5468\u56f4\u79fb\u52a8\u3002 walker_controller_bp = world.get_blueprint_library().find('controller.ai.walker') world.SpawnActor(walker_controller_bp, carla.Transform(), parent_walker) \u7b14\u8bb0 \u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u662f\u65e0\u5f62\u7684\uff0c\u6ca1\u6709\u7269\u7406\u7279\u6027\u3002\u5b83\u4e0d\u4f1a\u51fa\u73b0\u5728\u73b0\u573a\u3002\u6b64\u5916\uff0c\u4f4d\u7f6e (0,0,0) \u76f8\u5bf9\u4e8e\u5176\u7236\u7ea7\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u5bfc\u81f4\u78b0\u649e\u3002 \u6bcf\u4e2a\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u90fd\u9700\u8981\u521d\u59cb\u5316\u3001\u76ee\u6807\u548c\u53ef\u9009\u7684\u901f\u5ea6 \u3002\u505c\u6b62\u63a7\u5236\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u76f8\u540c\u3002 ai_controller.start() ai_controller.go_to_location(world.get_random_location_from_navigation()) ai_controller.set_max_speed(1 + random.random()) # \u5728 1 \u7c73\u6bcf\u79d2 \u5230 2 \u7c73\u6bcf\u79d2\u4e4b\u95f4\uff08\u9ed8\u8ba4\u662f 1.4 \u7c73\u6bcf\u79d2\uff09 ... ai_controller.stop() \u5f53\u6b65\u884c\u8005\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\u65f6\uff0c\u4ed6\u4eec\u4f1a\u81ea\u52a8\u6b65\u884c\u5230\u53e6\u4e00\u4e2a\u968f\u673a\u70b9\u3002\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u70b9\uff0c\u6b65\u884c\u8005\u5c06\u524d\u5f80\u8ddd\u79bb\u5f53\u524d\u4f4d\u7f6e\u6700\u8fd1\u7684\u70b9\u3002 carla.Client \u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5\u4f7f\u7528\u6279\u6b21\u751f\u6210\u5927\u91cf\u6b65\u884c\u8005\u5e76\u8ba9\u5b83\u4eec\u56db\u5904\u6e38\u8361\u3002 \u91cd\u8981 \u8981\u6467\u6bc1\u4eba\u5de5\u667a\u80fd\u884c\u4eba \uff0c\u8bf7\u505c\u6b62\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u5668\u5e76\u6467\u6bc1\u53c2\u4e0e\u8005\u548c\u63a7\u5236\u5668\u3002 \u5173\u4e8e Carla \u4e2d\u7684\u53c2\u4e0e\u8005\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u603b\u7ed3\u3002\u4e0b\u4e00\u6b65\u5c06\u4ed4\u7ec6\u7814\u7a76 Carla \u7684\u5730\u56fe\u3001\u9053\u8def\u548c\u4ea4\u901a\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u6216\u8bbf\u95ee\u8bba\u575b\u53d1\u5e03\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b 3rd. \u5730\u56fe\u548c\u5bfc\u822a","title":"\u884c\u4eba"},{"location":"core_concepts/","text":"\u6838\u5fc3\u6982\u5ff5 \u672c\u9875\u9762\u4ecb\u7ecd\u4e86 Carla \u7684\u4e3b\u8981\u529f\u80fd\u548c\u6a21\u5757\u3002\u4e0d\u540c\u4e3b\u9898\u7684\u8be6\u7ec6\u8bf4\u660e\u53ef\u4ee5\u5728\u76f8\u5e94\u7684\u9875\u9762\u4e2d\u627e\u5230\u3002 \u4e3a\u4e86\u4e86\u89e3 API \u4e2d\u4e0d\u540c\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u8bf7\u67e5\u770b Python API\u53c2\u8003 \u3002 \u7b2c\u4e00\u6b65 \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u6f14\u5458\u548c\u84dd\u56fe \u5730\u56fe\u548c\u5bfc\u822a \u4f20\u611f\u5668\u548c\u6570\u636e \u8fdb\u9636\u6b65\u9aa4 \u91cd\u8981 \u672c\u6587\u6863\u5f15\u7528\u7684\u662fCARLA 0.9.X . \u4e0e\u4ee5\u524d\u7684\u7248\u672c(0.8.X)\u76f8\u6bd4\uff0cAPI\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\u3002\u5728\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230\u5173\u4e8e\u8fd9\u4e9b\u7248\u672c\u7684\u53e6\u4e00\u4e2a\u6587\u6863 here . \u7b2c\u4e00\u6b65 \u4e16\u754c\u548c\u5ba2\u6237\u7aef __\u5ba2\u6237\u7aef__\u662f\u7528\u6237\u8fd0\u884c\u7684\u6a21\u5757\uff0c\u7528\u4e8e\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u4fe1\u606f\u6216\u66f4\u6539\u3002\u5ba2\u6237\u7aef\u4f7f\u7528IP\u548c\u7279\u5b9a\u7aef\u53e3\u8fd0\u884c\u3002\u5b83\u901a\u8fc7\u7ec8\u7aef\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u3002\u53ef\u4ee5\u6709\u8bb8\u591a\u5ba2\u6237\u673a\u540c\u65f6\u8fd0\u884c\u3002\u9ad8\u7ea7\u591a\u5ba2\u6237\u7aef\u7ba1\u7406\u9700\u8981\u5bf9CARLA\u548c \u540c\u6b65 \u6709\u900f\u5f7b\u7684\u7406\u89e3\u3002 __\u4e16\u754c__\u662f\u4ee3\u8868\u6a21\u62df\u7684\u5bf9\u8c61\u3002\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u5305\u542b\u4e86\u751f\u6210\u89d2\u8272\u3001\u6539\u53d8\u5929\u6c14\u3001\u83b7\u53d6\u5f53\u524d\u4e16\u754c\u72b6\u6001\u7b49\u4e3b\u8981\u65b9\u6cd5\u3002\u6bcf\u4e2a\u6a21\u62df\u53ea\u6709\u4e00\u4e2a\u4e16\u754c\u3002\u5f53\u5730\u56fe\u66f4\u6539\u65f6\uff0c\u5b83\u5c06\u88ab\u9500\u6bc1\u5e76\u66ff\u6362\u4e3a\u65b0\u7684\u3002 \u6f14\u5458\u548c\u84dd\u56fe \u6f14\u5458\u662f\u5728\u6a21\u62df\u4e2d\u626e\u6f14\u89d2\u8272\u7684\u4efb\u4f55\u4e1c\u897f\u3002 \u8f66\u8f86 \u884c\u4eba \u4f20\u611f\u5668 \u89c2\u4f17 \u4ea4\u901a\u4fe1\u53f7\u548c\u4ea4\u901a\u706f \u84dd\u56fe \u662f\u751f\u6210\u89d2\u8272\u6240\u5fc5\u9700\u7684\u5df2\u7ecf\u5236\u4f5c\u597d\u7684\u89d2\u8272\u5e03\u5c40\u3002\u57fa\u672c\u4e0a\uff0c\u662f\u5e26\u6709\u52a8\u753b\u548c\u4e00\u7ec4\u5c5e\u6027\u7684\u6a21\u578b\u3002\u5176\u4e2d\u4e00\u4e9b\u5c5e\u6027\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u80fd\u3002\u6709\u4e00\u4e2a Blueprint\u5e93 \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u53ef\u7528\u7684\u84dd\u56fe\u4ee5\u53ca\u6709\u5173\u5b83\u4eec\u7684\u4fe1\u606f\u3002 \u5730\u56fe\u548c\u5bfc\u822a \u5730\u56fe \u662f\u4ee3\u8868\u6a21\u62df\u4e16\u754c\u7684\u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u57ce\u9547\u3002\u6709\u516b\u5f20\u5730\u56fe\u53ef\u4f9b\u9009\u62e9\u3002\u5b83\u4eec\u90fd\u4f7f\u7528opdrive 1.4\u6807\u51c6\u6765\u63cf\u8ff0\u9053\u8def\u3002 \u9053\u8def\u3001\u8f66\u9053\u548c\u8def\u53e3 \u7531Python API\u7ba1\u7406\uff0c\u4ee5\u4fbf\u4ece\u5ba2\u6237\u7aef\u8bbf\u95ee\u3002\u8fd9\u4e9b\u4e0e waypoint \u7c7b\u4e00\u8d77\u4f7f\u7528\uff0c\u4e3a\u8f66\u8f86\u63d0\u4f9b\u5bfc\u822a\u8def\u5f84\u3002 \u4ea4\u901a\u6807\u5fd7 \u548c \u4ea4\u901a\u706f \u662f\u53ef\u8bbf\u95ee\u7684 carla.Landmark \u3002\u8fd9\u4e9b\u5730\u6807\u5bf9\u8c61\u5305\u542b\u5173\u4e8e\u5b83\u4eec\u7684 OpenDRIVE \u5b9a\u4e49\u7684\u4fe1\u606f\u3002\u6b64\u5916\uff0c\u6a21\u62df\u5668\u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\u505c\u8f66\u6807\u5fd7\u3001\u8ba9\u884c\u6807\u5fd7\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u5bf9\u8c61\uff0c\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u3002\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u653e\u7f6e\u5728\u9053\u8def\u4e0a\uff0c\u6709\u8fb9\u754c\u6846\u5305\u56f4\u3002\u4e00\u65e6\u8f66\u8f86\u8fdb\u5165\u5b83\u4eec\u7684\u8fb9\u754c\u6846\uff0c\u5b83\u4eec\u5c31\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e9b\u5bf9\u8c61\u3002 \u4f20\u611f\u5668\u548c\u6570\u636e \u4f20\u611f\u5668 \u7b49\u5f85\u4e00\u4e9b\u4e8b\u4ef6\u53d1\u751f\uff0c\u7136\u540e\u4ece\u6a21\u62df\u4e2d\u6536\u96c6\u6570\u636e\u3002\u5b83\u4eec\u8c03\u7528\u5b9a\u4e49\u5982\u4f55\u7ba1\u7406\u6570\u636e\u7684\u51fd\u6570\u3002\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u4f20\u611f\u5668\u4f1a\u68c0\u7d22\u4e0d\u540c\u7c7b\u578b\u7684\u4f20\u611f\u5668\u6570\u636e\u3002 \u4f20\u611f\u5668\u662f\u9644\u7740\u5728\u7236\u8f66\u8f86\u4e0a\u7684\u53c2\u4e0e\u8005\u3002\u5b83\u8ddf\u968f\u8f66\u8f86\uff0c\u6536\u96c6\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002\u53ef\u7528\u7684\u4f20\u611f\u5668\u7531 Blueprint\u5e93 \u4e2d\u7684\u84dd\u56fe\u5b9a\u4e49\u3002 \u76f8\u673a(RGB\uff0c\u6df1\u5ea6\u548c\u8bed\u4e49\u5206\u5272) \u78b0\u649e\u68c0\u6d4b\u5668 Gnss \u4f20\u611f\u5668 IMU\u4f20\u611f\u5668 \u6fc0\u5149\u96f7\u8fbe\u5c04\u7ebf\u6295\u5c04 \u8f66\u9053\u4fb5\u5165\u68c0\u6d4b\u5668 \u969c\u788d\u68c0\u6d4b\u5668 \u96f7\u8fbe RSS. \u8fdb\u9636\u6b65\u9aa4 CARLA \u63d0\u4f9b\u4e86\u5e7f\u6cdb\u7684\u529f\u80fd\uff0c\u8d85\u51fa\u4e86\u672c\u6a21\u62df\u5668\u4ecb\u7ecd\u7684\u8303\u56f4\u3002\u8fd9\u91cc\u5217\u51fa\u4e86\u4e00\u4e9b\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u3002\u7136\u800c\uff0c\u5728\u5f00\u59cb \u8fdb\u9636\u6b65\u9aa4 \u4e4b\u524d\uff0c\u5f3a\u70c8\u5efa\u8bae\u9605\u8bfb\u6574\u4e2a\u201c\u7b2c\u4e00\u6b65\u201d\u90e8\u5206\u3002 OpenDRIVE\u72ec\u7acb\u6a21\u5f0f \u3002\u4ec5\u4f7f\u7528OpenDRIVE\u6587\u4ef6\u751f\u6210\u9053\u8def\u7f51\u683c\u3002\u5141\u8bb8\u5728CARLA\u4e2d\u52a0\u8f7d\u4efb\u4f55OpenDRIVE\u5730\u56fe\uff0c\u65e0\u9700\u521b\u5efa\u8d44\u6e90\u3002 PTV-Vissim\u534f\u540c\u4eff\u771f \u3002\u5728CARLA\u548cPTV-Vissim\u4ea4\u901a\u4eff\u771f\u5668\u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u5f55\u5236\u5668 \u3002\u4fdd\u5b58\u6a21\u62df\u72b6\u6001\u7684\u5feb\u7167\uff0c\u4ee5\u4fbf\u4ee5\u7cbe\u786e\u7684\u7cbe\u5ea6\u91cd\u65b0\u6267\u884c\u6a21\u62df\u3002 \u6e32\u67d3\u9009\u9879 \u3002\u5305\u62ec\u56fe\u5f62\u8d28\u91cf\u8bbe\u7f6e\u3001\u79bb\u5c4f\u6e32\u67d3\u548c\u65e0\u6e32\u67d3\u6a21\u5f0f\u3002 RSS \uff08Responsibility Sensitive Safety\uff09\uff1a\u96c6\u6210\u7528\u4e8e\u6839\u636e\u5b89\u5168\u68c0\u67e5\u4fee\u6539\u8f66\u8f86\u8f68\u8ff9\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u6027 C++\u5e93 \u3002 \u4eff\u771f\u65f6\u95f4\u548c\u540c\u6b65 \u3002\u5173\u4e8e\u6a21\u62df\u65f6\u95f4\u548c\u670d\u52a1\u5668-\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u6240\u6709\u5185\u5bb9\u3002 SUMO\u534f\u540c\u4eff\u771f \uff1a\u5728CARLA\u548cSUMO\u4ea4\u901a\u4eff\u771f\u5668\u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \uff1a\u8be5\u6a21\u5757\u8d1f\u8d23\u6240\u6709\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u7684\u8f66\u8f86\u3002\u5b83\u6a21\u62df\u57ce\u5e02\u4e2d\u7684\u4ea4\u901a\uff0c\u4f7f\u4eff\u771f\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u771f\u5b9e\u7684\u57ce\u5e02\u73af\u5883\u3002 \u8fd9\u662f\u5bf9CARLA\u57fa\u672c\u77e5\u8bc6\u7684\u603b\u7ed3\u3002\u4e0b\u4e00\u6b65\u5c06\u66f4\u4ed4\u7ec6\u5730\u67e5\u770b\u4e16\u754c\u548c\u8fde\u63a5\u5230\u5b83\u7684\u5ba2\u6237\u7aef\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u3002\u8bbf\u95ee\u8bba\u575b\u53d1\u8868\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u3002 CARLA \u8bba\u575b \u4e16\u754c\u548c\u5ba2\u6237\u7aef","title":"\u6838\u5fc3\u6982\u5ff5"},{"location":"core_concepts/#_1","text":"\u672c\u9875\u9762\u4ecb\u7ecd\u4e86 Carla \u7684\u4e3b\u8981\u529f\u80fd\u548c\u6a21\u5757\u3002\u4e0d\u540c\u4e3b\u9898\u7684\u8be6\u7ec6\u8bf4\u660e\u53ef\u4ee5\u5728\u76f8\u5e94\u7684\u9875\u9762\u4e2d\u627e\u5230\u3002 \u4e3a\u4e86\u4e86\u89e3 API \u4e2d\u4e0d\u540c\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u8bf7\u67e5\u770b Python API\u53c2\u8003 \u3002 \u7b2c\u4e00\u6b65 \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u6f14\u5458\u548c\u84dd\u56fe \u5730\u56fe\u548c\u5bfc\u822a \u4f20\u611f\u5668\u548c\u6570\u636e \u8fdb\u9636\u6b65\u9aa4 \u91cd\u8981 \u672c\u6587\u6863\u5f15\u7528\u7684\u662fCARLA 0.9.X . \u4e0e\u4ee5\u524d\u7684\u7248\u672c(0.8.X)\u76f8\u6bd4\uff0cAPI\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\u3002\u5728\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230\u5173\u4e8e\u8fd9\u4e9b\u7248\u672c\u7684\u53e6\u4e00\u4e2a\u6587\u6863 here .","title":"\u6838\u5fc3\u6982\u5ff5"},{"location":"core_concepts/#_2","text":"","title":"\u7b2c\u4e00\u6b65"},{"location":"core_concepts/#_3","text":"__\u5ba2\u6237\u7aef__\u662f\u7528\u6237\u8fd0\u884c\u7684\u6a21\u5757\uff0c\u7528\u4e8e\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u4fe1\u606f\u6216\u66f4\u6539\u3002\u5ba2\u6237\u7aef\u4f7f\u7528IP\u548c\u7279\u5b9a\u7aef\u53e3\u8fd0\u884c\u3002\u5b83\u901a\u8fc7\u7ec8\u7aef\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u3002\u53ef\u4ee5\u6709\u8bb8\u591a\u5ba2\u6237\u673a\u540c\u65f6\u8fd0\u884c\u3002\u9ad8\u7ea7\u591a\u5ba2\u6237\u7aef\u7ba1\u7406\u9700\u8981\u5bf9CARLA\u548c \u540c\u6b65 \u6709\u900f\u5f7b\u7684\u7406\u89e3\u3002 __\u4e16\u754c__\u662f\u4ee3\u8868\u6a21\u62df\u7684\u5bf9\u8c61\u3002\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u5305\u542b\u4e86\u751f\u6210\u89d2\u8272\u3001\u6539\u53d8\u5929\u6c14\u3001\u83b7\u53d6\u5f53\u524d\u4e16\u754c\u72b6\u6001\u7b49\u4e3b\u8981\u65b9\u6cd5\u3002\u6bcf\u4e2a\u6a21\u62df\u53ea\u6709\u4e00\u4e2a\u4e16\u754c\u3002\u5f53\u5730\u56fe\u66f4\u6539\u65f6\uff0c\u5b83\u5c06\u88ab\u9500\u6bc1\u5e76\u66ff\u6362\u4e3a\u65b0\u7684\u3002","title":"\u4e16\u754c\u548c\u5ba2\u6237\u7aef"},{"location":"core_concepts/#_4","text":"\u6f14\u5458\u662f\u5728\u6a21\u62df\u4e2d\u626e\u6f14\u89d2\u8272\u7684\u4efb\u4f55\u4e1c\u897f\u3002 \u8f66\u8f86 \u884c\u4eba \u4f20\u611f\u5668 \u89c2\u4f17 \u4ea4\u901a\u4fe1\u53f7\u548c\u4ea4\u901a\u706f \u84dd\u56fe \u662f\u751f\u6210\u89d2\u8272\u6240\u5fc5\u9700\u7684\u5df2\u7ecf\u5236\u4f5c\u597d\u7684\u89d2\u8272\u5e03\u5c40\u3002\u57fa\u672c\u4e0a\uff0c\u662f\u5e26\u6709\u52a8\u753b\u548c\u4e00\u7ec4\u5c5e\u6027\u7684\u6a21\u578b\u3002\u5176\u4e2d\u4e00\u4e9b\u5c5e\u6027\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u80fd\u3002\u6709\u4e00\u4e2a Blueprint\u5e93 \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u53ef\u7528\u7684\u84dd\u56fe\u4ee5\u53ca\u6709\u5173\u5b83\u4eec\u7684\u4fe1\u606f\u3002","title":"\u6f14\u5458\u548c\u84dd\u56fe"},{"location":"core_concepts/#_5","text":"\u5730\u56fe \u662f\u4ee3\u8868\u6a21\u62df\u4e16\u754c\u7684\u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u57ce\u9547\u3002\u6709\u516b\u5f20\u5730\u56fe\u53ef\u4f9b\u9009\u62e9\u3002\u5b83\u4eec\u90fd\u4f7f\u7528opdrive 1.4\u6807\u51c6\u6765\u63cf\u8ff0\u9053\u8def\u3002 \u9053\u8def\u3001\u8f66\u9053\u548c\u8def\u53e3 \u7531Python API\u7ba1\u7406\uff0c\u4ee5\u4fbf\u4ece\u5ba2\u6237\u7aef\u8bbf\u95ee\u3002\u8fd9\u4e9b\u4e0e waypoint \u7c7b\u4e00\u8d77\u4f7f\u7528\uff0c\u4e3a\u8f66\u8f86\u63d0\u4f9b\u5bfc\u822a\u8def\u5f84\u3002 \u4ea4\u901a\u6807\u5fd7 \u548c \u4ea4\u901a\u706f \u662f\u53ef\u8bbf\u95ee\u7684 carla.Landmark \u3002\u8fd9\u4e9b\u5730\u6807\u5bf9\u8c61\u5305\u542b\u5173\u4e8e\u5b83\u4eec\u7684 OpenDRIVE \u5b9a\u4e49\u7684\u4fe1\u606f\u3002\u6b64\u5916\uff0c\u6a21\u62df\u5668\u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\u505c\u8f66\u6807\u5fd7\u3001\u8ba9\u884c\u6807\u5fd7\u548c\u4ea4\u901a\u4fe1\u53f7\u706f\u5bf9\u8c61\uff0c\u4f7f\u7528 OpenDRIVE \u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u3002\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u653e\u7f6e\u5728\u9053\u8def\u4e0a\uff0c\u6709\u8fb9\u754c\u6846\u5305\u56f4\u3002\u4e00\u65e6\u8f66\u8f86\u8fdb\u5165\u5b83\u4eec\u7684\u8fb9\u754c\u6846\uff0c\u5b83\u4eec\u5c31\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e9b\u5bf9\u8c61\u3002","title":"\u5730\u56fe\u548c\u5bfc\u822a"},{"location":"core_concepts/#_6","text":"\u4f20\u611f\u5668 \u7b49\u5f85\u4e00\u4e9b\u4e8b\u4ef6\u53d1\u751f\uff0c\u7136\u540e\u4ece\u6a21\u62df\u4e2d\u6536\u96c6\u6570\u636e\u3002\u5b83\u4eec\u8c03\u7528\u5b9a\u4e49\u5982\u4f55\u7ba1\u7406\u6570\u636e\u7684\u51fd\u6570\u3002\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u4f20\u611f\u5668\u4f1a\u68c0\u7d22\u4e0d\u540c\u7c7b\u578b\u7684\u4f20\u611f\u5668\u6570\u636e\u3002 \u4f20\u611f\u5668\u662f\u9644\u7740\u5728\u7236\u8f66\u8f86\u4e0a\u7684\u53c2\u4e0e\u8005\u3002\u5b83\u8ddf\u968f\u8f66\u8f86\uff0c\u6536\u96c6\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002\u53ef\u7528\u7684\u4f20\u611f\u5668\u7531 Blueprint\u5e93 \u4e2d\u7684\u84dd\u56fe\u5b9a\u4e49\u3002 \u76f8\u673a(RGB\uff0c\u6df1\u5ea6\u548c\u8bed\u4e49\u5206\u5272) \u78b0\u649e\u68c0\u6d4b\u5668 Gnss \u4f20\u611f\u5668 IMU\u4f20\u611f\u5668 \u6fc0\u5149\u96f7\u8fbe\u5c04\u7ebf\u6295\u5c04 \u8f66\u9053\u4fb5\u5165\u68c0\u6d4b\u5668 \u969c\u788d\u68c0\u6d4b\u5668 \u96f7\u8fbe RSS.","title":"\u4f20\u611f\u5668\u548c\u6570\u636e"},{"location":"core_concepts/#_7","text":"CARLA \u63d0\u4f9b\u4e86\u5e7f\u6cdb\u7684\u529f\u80fd\uff0c\u8d85\u51fa\u4e86\u672c\u6a21\u62df\u5668\u4ecb\u7ecd\u7684\u8303\u56f4\u3002\u8fd9\u91cc\u5217\u51fa\u4e86\u4e00\u4e9b\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u3002\u7136\u800c\uff0c\u5728\u5f00\u59cb \u8fdb\u9636\u6b65\u9aa4 \u4e4b\u524d\uff0c\u5f3a\u70c8\u5efa\u8bae\u9605\u8bfb\u6574\u4e2a\u201c\u7b2c\u4e00\u6b65\u201d\u90e8\u5206\u3002 OpenDRIVE\u72ec\u7acb\u6a21\u5f0f \u3002\u4ec5\u4f7f\u7528OpenDRIVE\u6587\u4ef6\u751f\u6210\u9053\u8def\u7f51\u683c\u3002\u5141\u8bb8\u5728CARLA\u4e2d\u52a0\u8f7d\u4efb\u4f55OpenDRIVE\u5730\u56fe\uff0c\u65e0\u9700\u521b\u5efa\u8d44\u6e90\u3002 PTV-Vissim\u534f\u540c\u4eff\u771f \u3002\u5728CARLA\u548cPTV-Vissim\u4ea4\u901a\u4eff\u771f\u5668\u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u5f55\u5236\u5668 \u3002\u4fdd\u5b58\u6a21\u62df\u72b6\u6001\u7684\u5feb\u7167\uff0c\u4ee5\u4fbf\u4ee5\u7cbe\u786e\u7684\u7cbe\u5ea6\u91cd\u65b0\u6267\u884c\u6a21\u62df\u3002 \u6e32\u67d3\u9009\u9879 \u3002\u5305\u62ec\u56fe\u5f62\u8d28\u91cf\u8bbe\u7f6e\u3001\u79bb\u5c4f\u6e32\u67d3\u548c\u65e0\u6e32\u67d3\u6a21\u5f0f\u3002 RSS \uff08Responsibility Sensitive Safety\uff09\uff1a\u96c6\u6210\u7528\u4e8e\u6839\u636e\u5b89\u5168\u68c0\u67e5\u4fee\u6539\u8f66\u8f86\u8f68\u8ff9\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u6027 C++\u5e93 \u3002 \u4eff\u771f\u65f6\u95f4\u548c\u540c\u6b65 \u3002\u5173\u4e8e\u6a21\u62df\u65f6\u95f4\u548c\u670d\u52a1\u5668-\u5ba2\u6237\u7aef\u901a\u4fe1\u7684\u6240\u6709\u5185\u5bb9\u3002 SUMO\u534f\u540c\u4eff\u771f \uff1a\u5728CARLA\u548cSUMO\u4ea4\u901a\u4eff\u771f\u5668\u4e4b\u95f4\u8fd0\u884c\u540c\u6b65\u4eff\u771f\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \uff1a\u8be5\u6a21\u5757\u8d1f\u8d23\u6240\u6709\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u7684\u8f66\u8f86\u3002\u5b83\u6a21\u62df\u57ce\u5e02\u4e2d\u7684\u4ea4\u901a\uff0c\u4f7f\u4eff\u771f\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u771f\u5b9e\u7684\u57ce\u5e02\u73af\u5883\u3002 \u8fd9\u662f\u5bf9CARLA\u57fa\u672c\u77e5\u8bc6\u7684\u603b\u7ed3\u3002\u4e0b\u4e00\u6b65\u5c06\u66f4\u4ed4\u7ec6\u5730\u67e5\u770b\u4e16\u754c\u548c\u8fde\u63a5\u5230\u5b83\u7684\u5ba2\u6237\u7aef\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u3002\u8bbf\u95ee\u8bba\u575b\u53d1\u8868\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u3002 CARLA \u8bba\u575b \u4e16\u754c\u548c\u5ba2\u6237\u7aef","title":"\u8fdb\u9636\u6b65\u9aa4"},{"location":"core_map/","text":"\u7b2c\u4e09\u3001\u5730\u56fe\u548c\u5bfc\u822a \u5728\u8ba8\u8bba\u4e86\u4e16\u754c\u53ca\u5176\u53c2\u4e0e\u8005\u4e4b\u540e\uff0c\u662f\u65f6\u5019\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u5e76\u4e86\u89e3\u5730\u56fe\u4ee5\u53ca\u53c2\u4e0e\u8005\u5982\u4f55\u5bfc\u822a\u3002 \u5730\u56fe \u6539\u53d8\u5730\u56fe \u5730\u6807 \u8f66\u9053 \u8def\u53e3 \u822a\u70b9 \u73af\u5883\u5bf9\u8c61 \u5728 CARLA \u4e2d\u5bfc\u822a \u901a\u8fc7\u822a\u8def\u70b9\u5bfc\u822a \u751f\u6210\u5730\u56fe\u5bfc\u822a CARLA \u5730\u56fe \u975e\u5206\u5c42\u5730\u56fe \u5206\u5c42\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 painting \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5 \u5730\u56fe \u5730\u56fe\u5305\u62ec\u57ce\u9547\u7684\u4e09\u7ef4\u6a21\u578b\u53ca\u5176\u9053\u8def\u5b9a\u4e49\u3002\u5730\u56fe\u7684\u9053\u8def\u5b9a\u4e49\u57fa\u4e8e OpenDRIVE \u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u79cd\u6807\u51c6\u5316\u7684\u5e26\u6ce8\u91ca\u7684\u9053\u8def\u5b9a\u4e49\u683c\u5f0f\u3002 OpenDRIVE 1.4 \u6807\u51c6 \u5b9a\u4e49\u9053\u8def\u3001\u8f66\u9053\u3001\u8def\u53e3\u7b49\u65b9\u5f0f\u51b3\u5b9a\u4e86 Python API \u7684\u529f\u80fd\u4ee5\u53ca\u51b3\u7b56\u80cc\u540e\u7684\u63a8\u7406\u3002 Python API \u5145\u5f53\u9ad8\u7ea7\u67e5\u8be2\u7cfb\u7edf\u6765\u5bfc\u822a\u8fd9\u4e9b\u9053\u8def\u3002\u5b83\u4e0d\u65ad\u53d1\u5c55\u4ee5\u63d0\u4f9b\u66f4\u5e7f\u6cdb\u7684\u5de5\u5177\u96c6\u3002 \u6539\u53d8\u5730\u56fe \u8981\u6539\u53d8\u5730\u56fe\uff0c\u4e16\u754c\u4e5f\u5fc5\u987b\u6539\u53d8 \u3002\u5c06\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u521b\u5efa\u4eff\u771f\u3002\u60a8\u53ef\u4ee5\u5728\u65b0\u4e16\u754c\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u5730\u56fe\u91cd\u65b0\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u5730\u56fe\u548c\u4e16\u754c\uff1a reload_world() \u4f7f\u7528\u76f8\u540c\u7684\u5730\u56fe\u521b\u5efa\u4e16\u754c\u7684\u65b0\u5b9e\u4f8b\u3002 load_world() \u6539\u53d8\u5f53\u524d\u5730\u56fe\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u4e16\u754c\u3002 world = client.load_world('Town01') \u6bcf\u4e2a\u5730\u56fe\u90fd\u6709\u4e00\u4e2a\u4e0e\u5f53\u524d\u52a0\u8f7d\u7684\u57ce\u5e02\u540d\u79f0\u5339\u914d\u7684 name \u5c5e\u6027\uff0c\u4f8b\u5982 Town01 \u3002\u8981\u83b7\u53d6\u53ef\u7528\u5730\u56fe\u7684\u5217\u8868\uff1a print(client.get_available_maps()) \u5730\u6807 OpenDRIVE \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u4ea4\u901a\u6807\u5fd7\u5c06\u8f6c\u6362\u4e3a Carla\uff0c\u4f5c\u4e3a\u53ef\u4ece API \u67e5\u8be2\u7684\u5730\u6807\u5bf9\u8c61\u3002\u4ee5\u4e0b\u65b9\u6cd5\u548c\u7c7b\u53ef\u7528\u4e8e\u64cd\u4f5c\u548c\u4f7f\u7528\u5730\u6807\u5bf9\u8c61\uff1a carla.Landmark \u5bf9\u8c61\u4ee3\u8868 OpenDRIVE \u4fe1\u53f7\u3002\u8be5\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u63cf\u8ff0\u4e86\u5730\u6807\u53ca\u5176\u5f71\u54cd\u533a\u57df\u3002 carla.LandmarkOrientation \u8bf4\u660e\u5730\u6807\u76f8\u5bf9\u4e8e\u9053\u8def\u51e0\u4f55\u5b9a\u4e49\u7684\u65b9\u5411\u3002 carla.LandmarkType \u5305\u542b\u5e38\u89c1\u7684\u5730\u6807\u7c7b\u578b\uff0c\u4ee5\u4fbf\u4e8e\u8f6c\u6362\u4e3a OpenDRIVE \u7c7b\u578b\u3002 carla.Waypoint \u53ef\u4ee5\u83b7\u5f97\u4f4d\u4e8e\u5176\u524d\u65b9\u4e00\u5b9a\u8ddd\u79bb\u7684\u5730\u6807\u3002\u53ef\u4ee5\u6307\u5b9a\u8981\u83b7\u53d6\u7684\u5730\u6807\u7c7b\u578b\u3002 carla.Map \u68c0\u7d22\u5730\u6807\u96c6\u3002\u5b83\u53ef\u4ee5\u8fd4\u56de\u5730\u56fe\u4e2d\u7684\u6240\u6709\u5730\u6807\uff0c\u6216\u8005\u5177\u6709\u5171\u540c ID\u3001\u7c7b\u578b\u6216\u7ec4\u7684\u5730\u6807\u3002 carla.World \u5145\u5f53\u5730\u6807\u3001\u4eff\u771f\u4e2d\u4ee3\u8868\u4ed6\u4eec\u7684 carla.TrafficSign \u548c carla.TrafficLight \u4e4b\u95f4\u7684\u4e2d\u95f4\u3002 my_waypoint.get_landmarks(200.0,True) \u8def\u5f84\u70b9 carla.Waypoint \u662f Carla \u4e16\u754c\u4e2d\u7684\u4e09\u7ef4\u6709\u5411\u70b9\uff0c\u5bf9\u5e94\u4e8e OpenDRIVE \u8f66\u9053\u3002\u4e0e\u8def\u5f84\u70b9\u76f8\u5173\u7684\u6240\u6709\u4e8b\u60c5\u90fd\u53d1\u751f\u5728\u5ba2\u6237\u7aef\uff1b\u53ea\u9700\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u4e00\u6b21\u5373\u53ef\u83b7\u53d6\u5305\u542b\u822a\u70b9\u4fe1\u606f\u7684 \u5730\u56fe\u5bf9\u8c61 \u3002 \u6bcf\u4e2a\u8def\u5f84\u70b9\u90fd\u5305\u542b\u4e00\u4e2a carla.Transform \uff0c\u5b83\u8bf4\u660e\u5176\u5728\u5730\u56fe\u4e0a\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5305\u542b\u8be5\u822a\u8def\u70b9\u7684\u8f66\u9053\u7684\u65b9\u5411\u3002\u53d8\u91cf road_id , section_id , lane_id \u548c s \u5bf9\u5e94 OpenDRIVE \u9053\u8def\u3002\u8def\u5f84\u70b9 id \u7684\u662f\u7531\u8fd9\u56db\u4e2a\u503c\u7684\u54c8\u5e0c\u7ec4\u5408\u6784\u9020\u7684\u3002 \u7b14\u8bb0 \u540c\u4e00\u9053\u8def\u5185\u8ddd\u79bb\u5c0f\u4e8e 2cm \u7684\u8def\u70b9\u5171\u4eab\u76f8\u540c\u7684\u8def\u70b9 id \u3002 \u8def\u5f84\u70b9\u4fdd\u5b58\u6709\u5173\u5305\u542b\u8be5\u8def\u5f84\u70b9\u7684 \u8f66\u9053 \u7684\u4fe1\u606f\u3002\u6b64\u4fe1\u606f\u5305\u62ec\u8f66\u9053\u7684\u5de6\u8f66\u9053\u548c\u53f3 \u8f66\u9053\u6807\u8bb0 \u3001\u7528\u4e8e\u786e\u5b9a\u5176\u662f\u5426\u4f4d\u4e8e\u8def\u53e3\u5185\u7684\u5e03\u5c14\u503c\u3001\u8f66\u9053\u7c7b\u578b\u3001\u5bbd\u5ea6\u548c\u8f66\u9053\u53d8\u66f4\u6743\u9650\u3002 # \u4ece\u8def\u5f84\u70b9\u8bbf\u95ee\u8f66\u9053\u4fe1\u606f inside_junction = waypoint.is_junction() width = waypoint.lane_width right_lm_color = waypoint.right_lane_marking.color \u8f66\u9053 OpenDRIVE 1.4 \u6807\u51c6 \u5b9a\u4e49\u7684\u901a\u9053\u7c7b\u578b\u5c06 carla.LaneType \u4f5c\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u503c\u8f6c\u6362\u4e3a API \u3002 \u8f66\u9053\u5468\u56f4\u7684\u8f66\u9053\u6807\u8bb0\u53ef\u901a\u8fc7 carla.LaneMarking \u8bbf\u95ee\u3002\u8f66\u9053\u6807\u8bb0\u7531\u4e00\u7cfb\u5217\u53d8\u91cf\u5b9a\u4e49\uff1a color: carla.LaneMarkingColor \u662f\u5b9a\u4e49\u6807\u8bb0\u989c\u8272\u7684\u679a\u4e3e\u503c\u3002 lane_change: carla.LaneChange \u8bf4\u660e\u8f66\u9053\u662f\u5426\u5141\u8bb8\u5de6\u8f6c\u3001\u53f3\u8f6c\u3001\u4e24\u8005\u90fd\u5141\u8bb8\u6216\u4e0d\u5141\u8bb8\u3002 type: carla.LaneMarkingType \u662f\u6839\u636e OpenDRIVE \u6807\u51c6\u5b9a\u4e49\u6807\u8bb0\u7c7b\u578b\u7684\u679a\u4e3e\u503c\u3002 width: \u5b9a\u4e49\u6807\u8bb0\u7684\u539a\u5ea6\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u83b7\u53d6\u6709\u5173\u7279\u5b9a\u8def\u5f84\u70b9\u7684\u8f66\u9053\u7c7b\u578b\u3001\u8f66\u9053\u6807\u8bb0\u548c\u8f66\u9053\u53d8\u66f4\u6743\u9650\u7684\u4fe1\u606f\uff1a # \u83b7\u5f97\u8def\u5f84\u70b9\u8f66\u9053\u7c7b\u578b lane_type = waypoint.lane_type # \u83b7\u5f97\u5de6\u8f66\u9053\u6807\u8bb0\u7684\u7c7b\u578b left_lanemarking_type = waypoint.left_lane_marking.type() # \u83b7\u5f97\u8be5\u8def\u5f84\u70b9\u53ef\u5f97\u7684\u8f66\u9053\u6539\u53d8 lane_change = waypoint.lane_change \u8def\u53e3 carla.Junction \u4ee3\u8868 OpenDRIVE \u8fde\u63a5\u70b9\u3002\u6b64\u7c7b\u5305\u542b\u5e26\u6709\u8fb9\u754c\u6846\u7684\u4ea4\u6c47\u5904\uff0c\u7528\u4e8e\u8bc6\u522b\u5176\u4e2d\u7684\u8f66\u9053\u6216\u8f66\u8f86\u3002 \u8be5 carla.Junction \u7c7b\u5305\u542b get_waypoints \u4e3a\u4ea4\u6c47\u5904\u7684\u6bcf\u4e2a\u8f66\u9053\u8fd4\u56de\u4e00\u5bf9\u8def\u70b9\u7684\u65b9\u6cd5\u3002\u6bcf\u5bf9\u4f4d\u4e8e\u4ea4\u754c\u5904\u8fb9\u754c\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002 waypoints_junc = my_junction.get_waypoints() \u73af\u5883\u5bf9\u8c61 Carla \u5730\u56fe\u4e0a\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u7ec4\u5173\u8054\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728 \u6b64 \u5904\u627e\u5230\u8fd9\u4e9b\u53d8\u91cf\u3002\u8fd9\u4e9b\u53d8\u91cf\u4e2d\u5305\u542b\u4e00\u4e2a \u552f\u4e00 ID \uff0c\u53ef\u7528\u4e8e\u5207\u6362\u8be5\u5bf9\u8c61\u5728\u5730\u56fe\u4e0a\u7684\u53ef\u89c1\u6027\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API \u6839\u636e\u6bcf\u4e2a\u73af\u5883\u5bf9\u8c61\u7684 \u8bed\u4e49\u6807\u7b7e \u83b7\u53d6 \u5176 ID \uff1a # \u83b7\u5f97\u4e16\u754c\u4e2d\u7684\u5efa\u7b51 world = client.get_world() env_objs = world.get_environment_objects(carla.CityObjectLabel.Buildings) # \u8bbf\u95ee\u5404\u4e2a\u5efa\u7b51 IDs \u5e76\u4fdd\u5b58\u5728\u96c6\u5408\u5f53\u4e2d building_01 = env_objs[0] building_02 = env_objs[1] objects_to_toggle = {building_01.id, building_02.id} # \u5207\u6362\u5efa\u7b51\u4e3a\u4e0d\u53ef\u89c1 world.enable_environment_objects(objects_to_toggle, False) # \u5207\u6362\u5efa\u7b51\u4e3a\u53ef\u89c1 world.enable_environment_objects(objects_to_toggle, True) \u67e5\u770b\u5207\u6362\u4e0d\u540c\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a \u5728 CARLA \u4e2d\u5bfc\u822a CARLA \u4e2d\u7684\u5bfc\u822a\u662f\u901a\u8fc7 Waypoint API \uff08\u6765\u81ea carla.Waypoint \u548c carla.Map \u7684\u65b9\u6cd5\u7ec4\u5408\uff09\u8fdb\u884c\u7ba1\u7406\u3002 \u5ba2\u6237\u7aef\u5fc5\u987b\u9996\u5148\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u4ee5\u68c0\u7d22\u5305\u542b\u8def\u5f84\u70b9\u4fe1\u606f\u7684\u5730\u56fe\u5bf9\u8c61\u3002\u8fd9\u53ea\u9700\u8981\u4e00\u6b21\uff0c\u6240\u6709\u540e\u7eed\u67e5\u8be2\u90fd\u5728\u5ba2\u6237\u7aef\u6267\u884c\u3002 \u901a\u8fc7\u8def\u5f84\u70b9\u5bfc\u822a Waypoint API \u516c\u5f00\u4e86\u5141\u8bb8\u8def\u5f84\u70b9\u76f8\u4e92\u8fde\u63a5\u5e76\u6784\u5efa\u6cbf\u9053\u8def\u4f9b\u8f66\u8f86\u5bfc\u822a\u7684\u8def\u5f84\u7684\u65b9\u6cd5\uff1a next(d) \u5728\u8f66\u9053\u65b9\u5411\u4e0a \u521b\u5efa\u8fd1\u4f3c\u8ddd\u79bb d \u5185\u7684\u822a\u8def\u70b9\u5217\u8868\u3002\u8be5\u5217\u8868\u5305\u542b\u6bcf\u4e2a\u53ef\u80fd\u504f\u5dee\u7684\u4e00\u4e2a\u822a\u8def\u70b9\u3002 previous(d) \u5728\u8f66\u9053\u76f8\u53cd\u7684\u65b9\u5411\u4e0a \u521b\u5efa\u8fd1\u4f3c\u8ddd\u79bb\u5c0f\u4e8e d \u7684\u8def\u5f84\u70b9\u5217\u8868\u3002\u8be5\u5217\u8868\u5305\u542b\u6bcf\u4e2a\u53ef\u80fd\u504f\u5dee\u7684\u4e00\u4e2a\u8def\u5f84\u70b9\u3002 next_until_lane_end(d) \u548c previous_until_lane_start(d) \u8fd4\u56de\u76f8\u8ddd\u4e00\u5b9a\u8ddd\u79bb d \u7684\u8def\u5f84\u70b9\u5217\u8868\u3002\u8fd9\u4e9b\u5217\u8868\u5206\u522b\u4ece\u5f53\u524d\u8def\u5f84\u70b9\u5230\u5176\u8f66\u9053\u7684\u7ec8\u70b9\u548c\u8d77\u70b9\u3002 get_right_lane() \u548c get_left_lane() \u8fd4\u56de\u76f8\u90bb\u8f66\u9053\u4e2d\u7684\u7b49\u8def\u5f84\u70b9\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u53f3/\u5de6\u8f66\u9053\u4e0a\u7684\u4e0b\u4e00\u4e2a\u8def\u70b9\u5e76\u79fb\u52a8\u5230\u8be5\u8def\u70b9\u6765\u8fdb\u884c\u53d8\u9053\u64cd\u4f5c\u3002 # \u627e\u5230\u524d\u9762 2 \u7c73\u7684\u4e0b\u4e00\u4e2a\u8def\u5f84\u70b9 waypoint = waypoint.next(2.0) \u751f\u6210\u5730\u56fe\u5bfc\u822a \u5ba2\u6237\u7aef\u9700\u8981\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u6765\u83b7\u53d6 .xodr \u5730\u56fe\u6587\u4ef6\u5e76\u5c06\u5176\u89e3\u6790\u4e3a carla.Map \u5bf9\u8c61\u3002\u8fd9\u53ea\u9700\u8981\u505a\u4e00\u6b21\u3002 \u83b7\u53d6\u5730\u56fe\u5bf9\u8c61\uff1a map = world.get_map() \u5730\u56fe\u5bf9\u8c61\u5305\u542b\u7528\u4e8e\u521b\u5efa\u8f66\u8f86\u7684 \u63a8\u8350\u751f\u6210\u70b9 \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u8fd9\u4e9b\u751f\u6210\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u751f\u6210\u70b9\u90fd\u5305\u542b carla.Transform \u3002\u8bf7\u8bb0\u4f4f\uff0c\u751f\u6210\u70b9\u53ef\u80fd\u5df2\u88ab\u5360\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u7531\u4e8e\u78b0\u649e\u800c\u5bfc\u81f4\u8f66\u8f86\u521b\u5efa\u5931\u8d25\u3002 spawn_points = world.get_map().get_spawn_points() \u60a8\u53ef\u4ee5\u901a\u8fc7 \u83b7\u53d6 \u8ddd\u7279\u5b9a\u4f4d\u7f6e\u6216\u7279\u5b9a road_id \u3001 lane_id \u548c s \u4f4d\u7f6e\u6700\u8fd1\u7684\u822a\u8def\u70b9\u4ee5\u53ca\u5730\u56fe OpenDRIVE \u5b9a\u4e49\u4e2d\u7684\u503c\u6765\u5f00\u59cb\u4f7f\u7528\u8def\u5f84\u70b9\uff1a # \u9a7e\u9a76\u8f66\u9053\u6216\u4eba\u884c\u9053\u4e2d\u5fc3\u6700\u8fd1\u7684\u8def\u5f84\u70b9\u3002 waypoint01 = map.get_waypoint(vehicle.get_location(),project_to_road=True, lane_type=(carla.LaneType.Driving | carla.LaneType.Sidewalk)) # \u6700\u8fd1\u7684\u8def\u5f84\u70b9\uff0c\u540c\u65f6\u6307\u5b9a OpenDRIVE \u53c2\u6570\u3002 waypoint02 = map.get_waypoint_xodr(road_id,lane_id,s) \u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55 \u751f\u6210\u8def\u70b9\u96c6\u5408 \u4ee5\u53ef\u89c6\u5316\u57ce\u5e02\u8f66\u9053\u3002\u8fd9\u5c06\u4e3a\u6574\u4e2a\u5730\u56fe\u4e0a\u7684\u6bcf\u6761\u9053\u8def\u548c\u8f66\u9053\u521b\u5efa\u8def\u5f84\u70b9\u3002\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u7ea6\u4e3a 2 \u7c73\uff1a waypoint_list = map.generate_waypoints(2.0) \u8981 \u751f\u6210\u9053\u8def\u62d3\u6251\u7684\u6700\u5c0f\u56fe \uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u793a\u4f8b\u3002\u8fd9\u5c06\u8fd4\u56de\u8def\u5f84\u70b9\u5bf9\uff08\u5143\u7ec4\uff09\u7684\u5217\u8868\u3002\u6bcf\u5bf9\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fde\u63a5\uff0c\u4e24\u8005\u90fd\u5b9a\u4e49\u4e86\u5730\u56fe\u4e2d\u6bcf\u6761\u8f66\u9053\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u6709\u5173\u6b64\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728 PythonAPI \u4e2d\u627e\u5230\u3002 waypoint_tuple_list = map.get_topology() \u4e0b\u9762\u7684\u793a\u4f8b \u5c06 carla.Transform \u8f6c\u6362\u4e3a\u5730\u7406\u7eac\u5ea6\u548c\u7ecf\u5ea6\u5750\u6807 \uff0c\u91c7\u7528 carla.GeoLocation \u7684\u5f62\u5f0f\uff1a my_geolocation = map.transform_to_geolocation(vehicle.transform) \u4f7f\u7528\u4ee5\u4e0b\u793a\u4f8b\u5c06 OpenDRIVE \u683c\u5f0f\u7684 \u9053\u8def\u4fe1\u606f\u4fdd\u5b58\u5230\u78c1\u76d8 \uff1a info_map = map.to_opendrive() CARLA \u5730\u56fe Carla \u751f\u6001\u7cfb\u7edf\u4e2d\u6709\u516b\u4e2a\u57ce\u9547\uff0c\u6bcf\u4e2a\u57ce\u9547\u90fd\u6709\u4e24\u79cd\u5730\u56fe\uff0c\u975e\u5206\u5c42\u5730\u56fe\u548c\u5206\u5c42\u5730\u56fe\u3002 \u56fe\u5c42 \u662f\u6307\u5730\u56fe\u4e2d\u5206\u7ec4\u7684\u5bf9\u8c61\uff0c\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a NONE \u5efa\u7b51\u7269 \u8d34\u6807 \u53f6\u5b50 \u5730\u9762 \u505c\u653e\u7684\u8f66\u8f86 \u7c92\u5b50 \u9053\u5177 \u8def\u706f \u5899\u58c1 \u5168\u90e8 \u975e\u5206\u5c42\u5730\u56fe \u4e0b\u8868\u663e\u793a\u4e86\u975e\u5206\u5c42\u5730\u56fe\uff08\u5355\u51fb\u57ce\u9547\u540d\u79f0\u53ef\u67e5\u770b\u5e03\u5c40\u7684\u4fef\u89c6\u56fe\uff09\u3002\u6240\u6709\u56fe\u5c42\u59cb\u7ec8\u5b58\u5728\uff0c\u5e76\u4e14\u65e0\u6cd5\u5728\u8fd9\u4e9b\u5730\u56fe\u4e2d\u6253\u5f00\u6216\u5173\u95ed\u3002\u76f4\u5230 CARLA 0.9.11 \u4e3a\u6b62\uff0c\u8fd9\u4e9b\u662f\u552f\u4e00\u53ef\u7528\u7684\u5730\u56fe\u7c7b\u578b\u3002 \u7b14\u8bb0 \u7528\u6237\u53ef\u4ee5\u4f7f\u7528 \u81ea\u5b9a\u4e49\u5730\u56fe \u751a\u81f3\u521b\u5efa\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u7684 \u65b0\u5730\u56fe \u3002 \u57ce\u9547 \u6982\u62ec Town01 \u7531\u201cT \u5b57\u8def\u53e3\u201d\u7ec4\u6210\u7684\u57fa\u672c\u57ce\u9547\u5e03\u5c40\u3002 Town02 \u548c Town01 \u7c7b\u4f3c\uff0c\u4f46\u662f\u66f4\u5c0f\u3002 Town03 \u6700\u590d\u6742\u7684\u57ce\u9547\uff0c\u6709 5 \u8f66\u9053\u4ea4\u53c9\u8def\u53e3\u3001\u73af\u5c9b\u3001\u51f9\u51f8\u4e0d\u5e73\u3001\u96a7\u9053\u7b49\u3002 Town04 \u6709\u9ad8\u901f\u516c\u8def\u548c\u5c0f\u9547\u7684\u65e0\u9650\u5faa\u73af\u3002 Town05 \u65b9\u5f62\u7f51\u683c\u57ce\u9547\uff0c\u6709\u5341\u5b57\u8def\u53e3\u548c\u4e00\u5ea7\u6865\u6881\u3002\u6bcf\u4e2a\u65b9\u5411\u6709\u591a\u4e2a\u8f66\u9053\u3002\u5bf9\u4e8e\u6267\u884c\u53d8\u9053\u5f88\u6709\u7528\u3002 Town06 \u9ad8\u901f\u516c\u8def\u957f\uff0c\u6709\u8bb8\u591a\u9ad8\u901f\u516c\u8def\u5165\u53e3\u548c\u51fa\u53e3\u3002\u5b83\u8fd8\u6709\u4e00\u4e2a \u5bc6\u6b47\u6839\u5de6\u8f6c \u3002 Town07 \u4e61\u6751\u73af\u5883\uff0c\u9053\u8def\u72ed\u7a84\uff0c\u8c37\u4ed3\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea2\u7eff\u706f\u3002 Town10 \u5177\u6709\u5927\u9053\u6216\u957f\u5eca\u7b49\u4e0d\u540c\u73af\u5883\u7684\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u53ca\u66f4\u771f\u5b9e\u7684\u7eb9\u7406\u3002 Town11 \u5177\u6709\u5927\u9053\u6216\u957f\u5eca\u7b49\u4e0d\u540c\u73af\u5883\u7684\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u53ca\u66f4\u771f\u5b9e\u7684\u7eb9\u7406\u3002 Town12 \u4e00\u5f20\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u533a\u57df\u7684\u5927\u5730\u56fe\uff0c\u5305\u62ec\u9ad8\u5c42\u5efa\u7b51\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u73af\u5883\u3002 \u5206\u5c42\u5730\u56fe \u5206\u5c42\u5730\u56fe\u7684\u5e03\u5c40\u4e0e\u975e\u5206\u5c42\u5730\u56fe\u76f8\u540c\uff0c\u4f46\u53ef\u4ee5\u5173\u95ed\u548c\u6253\u5f00\u5730\u56fe\u7684\u56fe\u5c42\u3002\u6709\u4e00\u4e2a\u65e0\u6cd5\u5173\u95ed\u7684\u6700\u5c0f\u5e03\u5c40\uff0c\u7531\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u7ec4\u6210\u3002\u5206\u5c42\u5730\u56fe\u53ef\u4ee5\u901a\u8fc7\u540e\u7f00 _Opt \u6765\u6807\u8bc6\uff0c\u4f8b\u5982 Town01_Opt \u3002\u4f7f\u7528\u8fd9\u4e9b\u5730\u56fe\uff0c\u53ef\u4ee5\u901a\u8fc7 Python API \u52a0\u8f7d \u548c \u5378\u8f7d \u56fe\u5c42\uff1a # \u52a0\u8f7d \u57ce\u954701 \u7684\u5206\u5c42\u5730\u56fe\uff0c\u5e26\u6709\u6700\u5c0f\u5e03\u5c40\u52a0\u4e0a\u5efa\u7b51\u7269\u548c\u505c\u653e\u7684\u8f66\u8f86 world = client.load_world('Town01_Opt', carla.MapLayer.Buildings | carla.MapLayer.ParkedVehicles) # \u5173\u95ed\u6240\u6709\u5efa\u7b51 world.unload_map_layer(carla.MapLayer.Buildings) # \u6253\u5f00\u6240\u6709\u5efa\u7b51 world.load_map_layer(carla.MapLayer.Buildings) \u67e5\u770b\u6309\u987a\u5e8f\u52a0\u8f7d\u548c\u5378\u8f7d\u6240\u6709\u5c42\u7684\u793a\u4f8b\uff1a \u81ea\u5b9a\u4e49\u5730\u56fe Carla \u65e8\u5728\u9488\u5bf9\u4e13\u4e1a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u53ef\u6269\u5c55\u548c\u9ad8\u5ea6\u5b9a\u5236\u3002\u56e0\u6b64\uff0c\u9664\u4e86 Carla \u4e2d\u73b0\u6709\u7684\u8bb8\u591a\u5730\u56fe\u548c\u8d44\u4ea7\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u521b\u5efa\u548c\u5bfc\u5165\u65b0\u7684\u5730\u56fe\u3001\u9053\u8def\u7f51\u7edc\u548c\u8d44\u4ea7\uff0c\u4ee5\u586b\u5145 Carla \u4eff\u771f\u4e2d\u7684\u5b9a\u5236\u73af\u5883\u3002\u4ee5\u4e0b\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6784\u5efa\u548c\u96c6\u6210\u81ea\u5b9a\u4e49\u5730\u56fe\u6240\u9700\u7684\u6b65\u9aa4\uff1a \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5","title":"\u5730\u56fe\u548c\u5bfc\u822a "},{"location":"core_map/#_1","text":"\u5728\u8ba8\u8bba\u4e86\u4e16\u754c\u53ca\u5176\u53c2\u4e0e\u8005\u4e4b\u540e\uff0c\u662f\u65f6\u5019\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u5e76\u4e86\u89e3\u5730\u56fe\u4ee5\u53ca\u53c2\u4e0e\u8005\u5982\u4f55\u5bfc\u822a\u3002 \u5730\u56fe \u6539\u53d8\u5730\u56fe \u5730\u6807 \u8f66\u9053 \u8def\u53e3 \u822a\u70b9 \u73af\u5883\u5bf9\u8c61 \u5728 CARLA \u4e2d\u5bfc\u822a \u901a\u8fc7\u822a\u8def\u70b9\u5bfc\u822a \u751f\u6210\u5730\u56fe\u5bfc\u822a CARLA \u5730\u56fe \u975e\u5206\u5c42\u5730\u56fe \u5206\u5c42\u5730\u56fe \u81ea\u5b9a\u4e49\u5730\u56fe \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 painting \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5","title":"\u7b2c\u4e09\u3001\u5730\u56fe\u548c\u5bfc\u822a"},{"location":"core_map/#_2","text":"\u5730\u56fe\u5305\u62ec\u57ce\u9547\u7684\u4e09\u7ef4\u6a21\u578b\u53ca\u5176\u9053\u8def\u5b9a\u4e49\u3002\u5730\u56fe\u7684\u9053\u8def\u5b9a\u4e49\u57fa\u4e8e OpenDRIVE \u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u79cd\u6807\u51c6\u5316\u7684\u5e26\u6ce8\u91ca\u7684\u9053\u8def\u5b9a\u4e49\u683c\u5f0f\u3002 OpenDRIVE 1.4 \u6807\u51c6 \u5b9a\u4e49\u9053\u8def\u3001\u8f66\u9053\u3001\u8def\u53e3\u7b49\u65b9\u5f0f\u51b3\u5b9a\u4e86 Python API \u7684\u529f\u80fd\u4ee5\u53ca\u51b3\u7b56\u80cc\u540e\u7684\u63a8\u7406\u3002 Python API \u5145\u5f53\u9ad8\u7ea7\u67e5\u8be2\u7cfb\u7edf\u6765\u5bfc\u822a\u8fd9\u4e9b\u9053\u8def\u3002\u5b83\u4e0d\u65ad\u53d1\u5c55\u4ee5\u63d0\u4f9b\u66f4\u5e7f\u6cdb\u7684\u5de5\u5177\u96c6\u3002","title":"\u5730\u56fe"},{"location":"core_map/#_3","text":"\u8981\u6539\u53d8\u5730\u56fe\uff0c\u4e16\u754c\u4e5f\u5fc5\u987b\u6539\u53d8 \u3002\u5c06\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u521b\u5efa\u4eff\u771f\u3002\u60a8\u53ef\u4ee5\u5728\u65b0\u4e16\u754c\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u5730\u56fe\u91cd\u65b0\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u5730\u56fe\u548c\u4e16\u754c\uff1a reload_world() \u4f7f\u7528\u76f8\u540c\u7684\u5730\u56fe\u521b\u5efa\u4e16\u754c\u7684\u65b0\u5b9e\u4f8b\u3002 load_world() \u6539\u53d8\u5f53\u524d\u5730\u56fe\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u4e16\u754c\u3002 world = client.load_world('Town01') \u6bcf\u4e2a\u5730\u56fe\u90fd\u6709\u4e00\u4e2a\u4e0e\u5f53\u524d\u52a0\u8f7d\u7684\u57ce\u5e02\u540d\u79f0\u5339\u914d\u7684 name \u5c5e\u6027\uff0c\u4f8b\u5982 Town01 \u3002\u8981\u83b7\u53d6\u53ef\u7528\u5730\u56fe\u7684\u5217\u8868\uff1a print(client.get_available_maps())","title":"\u6539\u53d8\u5730\u56fe"},{"location":"core_map/#_4","text":"OpenDRIVE \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u4ea4\u901a\u6807\u5fd7\u5c06\u8f6c\u6362\u4e3a Carla\uff0c\u4f5c\u4e3a\u53ef\u4ece API \u67e5\u8be2\u7684\u5730\u6807\u5bf9\u8c61\u3002\u4ee5\u4e0b\u65b9\u6cd5\u548c\u7c7b\u53ef\u7528\u4e8e\u64cd\u4f5c\u548c\u4f7f\u7528\u5730\u6807\u5bf9\u8c61\uff1a carla.Landmark \u5bf9\u8c61\u4ee3\u8868 OpenDRIVE \u4fe1\u53f7\u3002\u8be5\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u63cf\u8ff0\u4e86\u5730\u6807\u53ca\u5176\u5f71\u54cd\u533a\u57df\u3002 carla.LandmarkOrientation \u8bf4\u660e\u5730\u6807\u76f8\u5bf9\u4e8e\u9053\u8def\u51e0\u4f55\u5b9a\u4e49\u7684\u65b9\u5411\u3002 carla.LandmarkType \u5305\u542b\u5e38\u89c1\u7684\u5730\u6807\u7c7b\u578b\uff0c\u4ee5\u4fbf\u4e8e\u8f6c\u6362\u4e3a OpenDRIVE \u7c7b\u578b\u3002 carla.Waypoint \u53ef\u4ee5\u83b7\u5f97\u4f4d\u4e8e\u5176\u524d\u65b9\u4e00\u5b9a\u8ddd\u79bb\u7684\u5730\u6807\u3002\u53ef\u4ee5\u6307\u5b9a\u8981\u83b7\u53d6\u7684\u5730\u6807\u7c7b\u578b\u3002 carla.Map \u68c0\u7d22\u5730\u6807\u96c6\u3002\u5b83\u53ef\u4ee5\u8fd4\u56de\u5730\u56fe\u4e2d\u7684\u6240\u6709\u5730\u6807\uff0c\u6216\u8005\u5177\u6709\u5171\u540c ID\u3001\u7c7b\u578b\u6216\u7ec4\u7684\u5730\u6807\u3002 carla.World \u5145\u5f53\u5730\u6807\u3001\u4eff\u771f\u4e2d\u4ee3\u8868\u4ed6\u4eec\u7684 carla.TrafficSign \u548c carla.TrafficLight \u4e4b\u95f4\u7684\u4e2d\u95f4\u3002 my_waypoint.get_landmarks(200.0,True)","title":"\u5730\u6807"},{"location":"core_map/#_5","text":"carla.Waypoint \u662f Carla \u4e16\u754c\u4e2d\u7684\u4e09\u7ef4\u6709\u5411\u70b9\uff0c\u5bf9\u5e94\u4e8e OpenDRIVE \u8f66\u9053\u3002\u4e0e\u8def\u5f84\u70b9\u76f8\u5173\u7684\u6240\u6709\u4e8b\u60c5\u90fd\u53d1\u751f\u5728\u5ba2\u6237\u7aef\uff1b\u53ea\u9700\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u4e00\u6b21\u5373\u53ef\u83b7\u53d6\u5305\u542b\u822a\u70b9\u4fe1\u606f\u7684 \u5730\u56fe\u5bf9\u8c61 \u3002 \u6bcf\u4e2a\u8def\u5f84\u70b9\u90fd\u5305\u542b\u4e00\u4e2a carla.Transform \uff0c\u5b83\u8bf4\u660e\u5176\u5728\u5730\u56fe\u4e0a\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5305\u542b\u8be5\u822a\u8def\u70b9\u7684\u8f66\u9053\u7684\u65b9\u5411\u3002\u53d8\u91cf road_id , section_id , lane_id \u548c s \u5bf9\u5e94 OpenDRIVE \u9053\u8def\u3002\u8def\u5f84\u70b9 id \u7684\u662f\u7531\u8fd9\u56db\u4e2a\u503c\u7684\u54c8\u5e0c\u7ec4\u5408\u6784\u9020\u7684\u3002 \u7b14\u8bb0 \u540c\u4e00\u9053\u8def\u5185\u8ddd\u79bb\u5c0f\u4e8e 2cm \u7684\u8def\u70b9\u5171\u4eab\u76f8\u540c\u7684\u8def\u70b9 id \u3002 \u8def\u5f84\u70b9\u4fdd\u5b58\u6709\u5173\u5305\u542b\u8be5\u8def\u5f84\u70b9\u7684 \u8f66\u9053 \u7684\u4fe1\u606f\u3002\u6b64\u4fe1\u606f\u5305\u62ec\u8f66\u9053\u7684\u5de6\u8f66\u9053\u548c\u53f3 \u8f66\u9053\u6807\u8bb0 \u3001\u7528\u4e8e\u786e\u5b9a\u5176\u662f\u5426\u4f4d\u4e8e\u8def\u53e3\u5185\u7684\u5e03\u5c14\u503c\u3001\u8f66\u9053\u7c7b\u578b\u3001\u5bbd\u5ea6\u548c\u8f66\u9053\u53d8\u66f4\u6743\u9650\u3002 # \u4ece\u8def\u5f84\u70b9\u8bbf\u95ee\u8f66\u9053\u4fe1\u606f inside_junction = waypoint.is_junction() width = waypoint.lane_width right_lm_color = waypoint.right_lane_marking.color","title":"\u8def\u5f84\u70b9"},{"location":"core_map/#_6","text":"OpenDRIVE 1.4 \u6807\u51c6 \u5b9a\u4e49\u7684\u901a\u9053\u7c7b\u578b\u5c06 carla.LaneType \u4f5c\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u503c\u8f6c\u6362\u4e3a API \u3002 \u8f66\u9053\u5468\u56f4\u7684\u8f66\u9053\u6807\u8bb0\u53ef\u901a\u8fc7 carla.LaneMarking \u8bbf\u95ee\u3002\u8f66\u9053\u6807\u8bb0\u7531\u4e00\u7cfb\u5217\u53d8\u91cf\u5b9a\u4e49\uff1a color: carla.LaneMarkingColor \u662f\u5b9a\u4e49\u6807\u8bb0\u989c\u8272\u7684\u679a\u4e3e\u503c\u3002 lane_change: carla.LaneChange \u8bf4\u660e\u8f66\u9053\u662f\u5426\u5141\u8bb8\u5de6\u8f6c\u3001\u53f3\u8f6c\u3001\u4e24\u8005\u90fd\u5141\u8bb8\u6216\u4e0d\u5141\u8bb8\u3002 type: carla.LaneMarkingType \u662f\u6839\u636e OpenDRIVE \u6807\u51c6\u5b9a\u4e49\u6807\u8bb0\u7c7b\u578b\u7684\u679a\u4e3e\u503c\u3002 width: \u5b9a\u4e49\u6807\u8bb0\u7684\u539a\u5ea6\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u83b7\u53d6\u6709\u5173\u7279\u5b9a\u8def\u5f84\u70b9\u7684\u8f66\u9053\u7c7b\u578b\u3001\u8f66\u9053\u6807\u8bb0\u548c\u8f66\u9053\u53d8\u66f4\u6743\u9650\u7684\u4fe1\u606f\uff1a # \u83b7\u5f97\u8def\u5f84\u70b9\u8f66\u9053\u7c7b\u578b lane_type = waypoint.lane_type # \u83b7\u5f97\u5de6\u8f66\u9053\u6807\u8bb0\u7684\u7c7b\u578b left_lanemarking_type = waypoint.left_lane_marking.type() # \u83b7\u5f97\u8be5\u8def\u5f84\u70b9\u53ef\u5f97\u7684\u8f66\u9053\u6539\u53d8 lane_change = waypoint.lane_change","title":"\u8f66\u9053"},{"location":"core_map/#_7","text":"carla.Junction \u4ee3\u8868 OpenDRIVE \u8fde\u63a5\u70b9\u3002\u6b64\u7c7b\u5305\u542b\u5e26\u6709\u8fb9\u754c\u6846\u7684\u4ea4\u6c47\u5904\uff0c\u7528\u4e8e\u8bc6\u522b\u5176\u4e2d\u7684\u8f66\u9053\u6216\u8f66\u8f86\u3002 \u8be5 carla.Junction \u7c7b\u5305\u542b get_waypoints \u4e3a\u4ea4\u6c47\u5904\u7684\u6bcf\u4e2a\u8f66\u9053\u8fd4\u56de\u4e00\u5bf9\u8def\u70b9\u7684\u65b9\u6cd5\u3002\u6bcf\u5bf9\u4f4d\u4e8e\u4ea4\u754c\u5904\u8fb9\u754c\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002 waypoints_junc = my_junction.get_waypoints()","title":"\u8def\u53e3"},{"location":"core_map/#_8","text":"Carla \u5730\u56fe\u4e0a\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u7ec4\u5173\u8054\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728 \u6b64 \u5904\u627e\u5230\u8fd9\u4e9b\u53d8\u91cf\u3002\u8fd9\u4e9b\u53d8\u91cf\u4e2d\u5305\u542b\u4e00\u4e2a \u552f\u4e00 ID \uff0c\u53ef\u7528\u4e8e\u5207\u6362\u8be5\u5bf9\u8c61\u5728\u5730\u56fe\u4e0a\u7684\u53ef\u89c1\u6027\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API \u6839\u636e\u6bcf\u4e2a\u73af\u5883\u5bf9\u8c61\u7684 \u8bed\u4e49\u6807\u7b7e \u83b7\u53d6 \u5176 ID \uff1a # \u83b7\u5f97\u4e16\u754c\u4e2d\u7684\u5efa\u7b51 world = client.get_world() env_objs = world.get_environment_objects(carla.CityObjectLabel.Buildings) # \u8bbf\u95ee\u5404\u4e2a\u5efa\u7b51 IDs \u5e76\u4fdd\u5b58\u5728\u96c6\u5408\u5f53\u4e2d building_01 = env_objs[0] building_02 = env_objs[1] objects_to_toggle = {building_01.id, building_02.id} # \u5207\u6362\u5efa\u7b51\u4e3a\u4e0d\u53ef\u89c1 world.enable_environment_objects(objects_to_toggle, False) # \u5207\u6362\u5efa\u7b51\u4e3a\u53ef\u89c1 world.enable_environment_objects(objects_to_toggle, True) \u67e5\u770b\u5207\u6362\u4e0d\u540c\u5bf9\u8c61\u7684\u793a\u4f8b\uff1a","title":"\u73af\u5883\u5bf9\u8c61"},{"location":"core_map/#carla","text":"CARLA \u4e2d\u7684\u5bfc\u822a\u662f\u901a\u8fc7 Waypoint API \uff08\u6765\u81ea carla.Waypoint \u548c carla.Map \u7684\u65b9\u6cd5\u7ec4\u5408\uff09\u8fdb\u884c\u7ba1\u7406\u3002 \u5ba2\u6237\u7aef\u5fc5\u987b\u9996\u5148\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u4ee5\u68c0\u7d22\u5305\u542b\u8def\u5f84\u70b9\u4fe1\u606f\u7684\u5730\u56fe\u5bf9\u8c61\u3002\u8fd9\u53ea\u9700\u8981\u4e00\u6b21\uff0c\u6240\u6709\u540e\u7eed\u67e5\u8be2\u90fd\u5728\u5ba2\u6237\u7aef\u6267\u884c\u3002","title":"\u5728 CARLA \u4e2d\u5bfc\u822a"},{"location":"core_map/#_9","text":"Waypoint API \u516c\u5f00\u4e86\u5141\u8bb8\u8def\u5f84\u70b9\u76f8\u4e92\u8fde\u63a5\u5e76\u6784\u5efa\u6cbf\u9053\u8def\u4f9b\u8f66\u8f86\u5bfc\u822a\u7684\u8def\u5f84\u7684\u65b9\u6cd5\uff1a next(d) \u5728\u8f66\u9053\u65b9\u5411\u4e0a \u521b\u5efa\u8fd1\u4f3c\u8ddd\u79bb d \u5185\u7684\u822a\u8def\u70b9\u5217\u8868\u3002\u8be5\u5217\u8868\u5305\u542b\u6bcf\u4e2a\u53ef\u80fd\u504f\u5dee\u7684\u4e00\u4e2a\u822a\u8def\u70b9\u3002 previous(d) \u5728\u8f66\u9053\u76f8\u53cd\u7684\u65b9\u5411\u4e0a \u521b\u5efa\u8fd1\u4f3c\u8ddd\u79bb\u5c0f\u4e8e d \u7684\u8def\u5f84\u70b9\u5217\u8868\u3002\u8be5\u5217\u8868\u5305\u542b\u6bcf\u4e2a\u53ef\u80fd\u504f\u5dee\u7684\u4e00\u4e2a\u8def\u5f84\u70b9\u3002 next_until_lane_end(d) \u548c previous_until_lane_start(d) \u8fd4\u56de\u76f8\u8ddd\u4e00\u5b9a\u8ddd\u79bb d \u7684\u8def\u5f84\u70b9\u5217\u8868\u3002\u8fd9\u4e9b\u5217\u8868\u5206\u522b\u4ece\u5f53\u524d\u8def\u5f84\u70b9\u5230\u5176\u8f66\u9053\u7684\u7ec8\u70b9\u548c\u8d77\u70b9\u3002 get_right_lane() \u548c get_left_lane() \u8fd4\u56de\u76f8\u90bb\u8f66\u9053\u4e2d\u7684\u7b49\u8def\u5f84\u70b9\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u53f3/\u5de6\u8f66\u9053\u4e0a\u7684\u4e0b\u4e00\u4e2a\u8def\u70b9\u5e76\u79fb\u52a8\u5230\u8be5\u8def\u70b9\u6765\u8fdb\u884c\u53d8\u9053\u64cd\u4f5c\u3002 # \u627e\u5230\u524d\u9762 2 \u7c73\u7684\u4e0b\u4e00\u4e2a\u8def\u5f84\u70b9 waypoint = waypoint.next(2.0)","title":"\u901a\u8fc7\u8def\u5f84\u70b9\u5bfc\u822a"},{"location":"core_map/#_10","text":"\u5ba2\u6237\u7aef\u9700\u8981\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u6765\u83b7\u53d6 .xodr \u5730\u56fe\u6587\u4ef6\u5e76\u5c06\u5176\u89e3\u6790\u4e3a carla.Map \u5bf9\u8c61\u3002\u8fd9\u53ea\u9700\u8981\u505a\u4e00\u6b21\u3002 \u83b7\u53d6\u5730\u56fe\u5bf9\u8c61\uff1a map = world.get_map() \u5730\u56fe\u5bf9\u8c61\u5305\u542b\u7528\u4e8e\u521b\u5efa\u8f66\u8f86\u7684 \u63a8\u8350\u751f\u6210\u70b9 \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u8fd9\u4e9b\u751f\u6210\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u751f\u6210\u70b9\u90fd\u5305\u542b carla.Transform \u3002\u8bf7\u8bb0\u4f4f\uff0c\u751f\u6210\u70b9\u53ef\u80fd\u5df2\u88ab\u5360\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u7531\u4e8e\u78b0\u649e\u800c\u5bfc\u81f4\u8f66\u8f86\u521b\u5efa\u5931\u8d25\u3002 spawn_points = world.get_map().get_spawn_points() \u60a8\u53ef\u4ee5\u901a\u8fc7 \u83b7\u53d6 \u8ddd\u7279\u5b9a\u4f4d\u7f6e\u6216\u7279\u5b9a road_id \u3001 lane_id \u548c s \u4f4d\u7f6e\u6700\u8fd1\u7684\u822a\u8def\u70b9\u4ee5\u53ca\u5730\u56fe OpenDRIVE \u5b9a\u4e49\u4e2d\u7684\u503c\u6765\u5f00\u59cb\u4f7f\u7528\u8def\u5f84\u70b9\uff1a # \u9a7e\u9a76\u8f66\u9053\u6216\u4eba\u884c\u9053\u4e2d\u5fc3\u6700\u8fd1\u7684\u8def\u5f84\u70b9\u3002 waypoint01 = map.get_waypoint(vehicle.get_location(),project_to_road=True, lane_type=(carla.LaneType.Driving | carla.LaneType.Sidewalk)) # \u6700\u8fd1\u7684\u8def\u5f84\u70b9\uff0c\u540c\u65f6\u6307\u5b9a OpenDRIVE \u53c2\u6570\u3002 waypoint02 = map.get_waypoint_xodr(road_id,lane_id,s) \u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55 \u751f\u6210\u8def\u70b9\u96c6\u5408 \u4ee5\u53ef\u89c6\u5316\u57ce\u5e02\u8f66\u9053\u3002\u8fd9\u5c06\u4e3a\u6574\u4e2a\u5730\u56fe\u4e0a\u7684\u6bcf\u6761\u9053\u8def\u548c\u8f66\u9053\u521b\u5efa\u8def\u5f84\u70b9\u3002\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u7ea6\u4e3a 2 \u7c73\uff1a waypoint_list = map.generate_waypoints(2.0) \u8981 \u751f\u6210\u9053\u8def\u62d3\u6251\u7684\u6700\u5c0f\u56fe \uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u793a\u4f8b\u3002\u8fd9\u5c06\u8fd4\u56de\u8def\u5f84\u70b9\u5bf9\uff08\u5143\u7ec4\uff09\u7684\u5217\u8868\u3002\u6bcf\u5bf9\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fde\u63a5\uff0c\u4e24\u8005\u90fd\u5b9a\u4e49\u4e86\u5730\u56fe\u4e2d\u6bcf\u6761\u8f66\u9053\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u6709\u5173\u6b64\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728 PythonAPI \u4e2d\u627e\u5230\u3002 waypoint_tuple_list = map.get_topology() \u4e0b\u9762\u7684\u793a\u4f8b \u5c06 carla.Transform \u8f6c\u6362\u4e3a\u5730\u7406\u7eac\u5ea6\u548c\u7ecf\u5ea6\u5750\u6807 \uff0c\u91c7\u7528 carla.GeoLocation \u7684\u5f62\u5f0f\uff1a my_geolocation = map.transform_to_geolocation(vehicle.transform) \u4f7f\u7528\u4ee5\u4e0b\u793a\u4f8b\u5c06 OpenDRIVE \u683c\u5f0f\u7684 \u9053\u8def\u4fe1\u606f\u4fdd\u5b58\u5230\u78c1\u76d8 \uff1a info_map = map.to_opendrive()","title":"\u751f\u6210\u5730\u56fe\u5bfc\u822a"},{"location":"core_map/#carla_1","text":"Carla \u751f\u6001\u7cfb\u7edf\u4e2d\u6709\u516b\u4e2a\u57ce\u9547\uff0c\u6bcf\u4e2a\u57ce\u9547\u90fd\u6709\u4e24\u79cd\u5730\u56fe\uff0c\u975e\u5206\u5c42\u5730\u56fe\u548c\u5206\u5c42\u5730\u56fe\u3002 \u56fe\u5c42 \u662f\u6307\u5730\u56fe\u4e2d\u5206\u7ec4\u7684\u5bf9\u8c61\uff0c\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a NONE \u5efa\u7b51\u7269 \u8d34\u6807 \u53f6\u5b50 \u5730\u9762 \u505c\u653e\u7684\u8f66\u8f86 \u7c92\u5b50 \u9053\u5177 \u8def\u706f \u5899\u58c1 \u5168\u90e8","title":"CARLA \u5730\u56fe"},{"location":"core_map/#_11","text":"\u4e0b\u8868\u663e\u793a\u4e86\u975e\u5206\u5c42\u5730\u56fe\uff08\u5355\u51fb\u57ce\u9547\u540d\u79f0\u53ef\u67e5\u770b\u5e03\u5c40\u7684\u4fef\u89c6\u56fe\uff09\u3002\u6240\u6709\u56fe\u5c42\u59cb\u7ec8\u5b58\u5728\uff0c\u5e76\u4e14\u65e0\u6cd5\u5728\u8fd9\u4e9b\u5730\u56fe\u4e2d\u6253\u5f00\u6216\u5173\u95ed\u3002\u76f4\u5230 CARLA 0.9.11 \u4e3a\u6b62\uff0c\u8fd9\u4e9b\u662f\u552f\u4e00\u53ef\u7528\u7684\u5730\u56fe\u7c7b\u578b\u3002 \u7b14\u8bb0 \u7528\u6237\u53ef\u4ee5\u4f7f\u7528 \u81ea\u5b9a\u4e49\u5730\u56fe \u751a\u81f3\u521b\u5efa\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u7684 \u65b0\u5730\u56fe \u3002 \u57ce\u9547 \u6982\u62ec Town01 \u7531\u201cT \u5b57\u8def\u53e3\u201d\u7ec4\u6210\u7684\u57fa\u672c\u57ce\u9547\u5e03\u5c40\u3002 Town02 \u548c Town01 \u7c7b\u4f3c\uff0c\u4f46\u662f\u66f4\u5c0f\u3002 Town03 \u6700\u590d\u6742\u7684\u57ce\u9547\uff0c\u6709 5 \u8f66\u9053\u4ea4\u53c9\u8def\u53e3\u3001\u73af\u5c9b\u3001\u51f9\u51f8\u4e0d\u5e73\u3001\u96a7\u9053\u7b49\u3002 Town04 \u6709\u9ad8\u901f\u516c\u8def\u548c\u5c0f\u9547\u7684\u65e0\u9650\u5faa\u73af\u3002 Town05 \u65b9\u5f62\u7f51\u683c\u57ce\u9547\uff0c\u6709\u5341\u5b57\u8def\u53e3\u548c\u4e00\u5ea7\u6865\u6881\u3002\u6bcf\u4e2a\u65b9\u5411\u6709\u591a\u4e2a\u8f66\u9053\u3002\u5bf9\u4e8e\u6267\u884c\u53d8\u9053\u5f88\u6709\u7528\u3002 Town06 \u9ad8\u901f\u516c\u8def\u957f\uff0c\u6709\u8bb8\u591a\u9ad8\u901f\u516c\u8def\u5165\u53e3\u548c\u51fa\u53e3\u3002\u5b83\u8fd8\u6709\u4e00\u4e2a \u5bc6\u6b47\u6839\u5de6\u8f6c \u3002 Town07 \u4e61\u6751\u73af\u5883\uff0c\u9053\u8def\u72ed\u7a84\uff0c\u8c37\u4ed3\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea2\u7eff\u706f\u3002 Town10 \u5177\u6709\u5927\u9053\u6216\u957f\u5eca\u7b49\u4e0d\u540c\u73af\u5883\u7684\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u53ca\u66f4\u771f\u5b9e\u7684\u7eb9\u7406\u3002 Town11 \u5177\u6709\u5927\u9053\u6216\u957f\u5eca\u7b49\u4e0d\u540c\u73af\u5883\u7684\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u53ca\u66f4\u771f\u5b9e\u7684\u7eb9\u7406\u3002 Town12 \u4e00\u5f20\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u533a\u57df\u7684\u5927\u5730\u56fe\uff0c\u5305\u62ec\u9ad8\u5c42\u5efa\u7b51\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u73af\u5883\u3002","title":"\u975e\u5206\u5c42\u5730\u56fe"},{"location":"core_map/#_12","text":"\u5206\u5c42\u5730\u56fe\u7684\u5e03\u5c40\u4e0e\u975e\u5206\u5c42\u5730\u56fe\u76f8\u540c\uff0c\u4f46\u53ef\u4ee5\u5173\u95ed\u548c\u6253\u5f00\u5730\u56fe\u7684\u56fe\u5c42\u3002\u6709\u4e00\u4e2a\u65e0\u6cd5\u5173\u95ed\u7684\u6700\u5c0f\u5e03\u5c40\uff0c\u7531\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u7ec4\u6210\u3002\u5206\u5c42\u5730\u56fe\u53ef\u4ee5\u901a\u8fc7\u540e\u7f00 _Opt \u6765\u6807\u8bc6\uff0c\u4f8b\u5982 Town01_Opt \u3002\u4f7f\u7528\u8fd9\u4e9b\u5730\u56fe\uff0c\u53ef\u4ee5\u901a\u8fc7 Python API \u52a0\u8f7d \u548c \u5378\u8f7d \u56fe\u5c42\uff1a # \u52a0\u8f7d \u57ce\u954701 \u7684\u5206\u5c42\u5730\u56fe\uff0c\u5e26\u6709\u6700\u5c0f\u5e03\u5c40\u52a0\u4e0a\u5efa\u7b51\u7269\u548c\u505c\u653e\u7684\u8f66\u8f86 world = client.load_world('Town01_Opt', carla.MapLayer.Buildings | carla.MapLayer.ParkedVehicles) # \u5173\u95ed\u6240\u6709\u5efa\u7b51 world.unload_map_layer(carla.MapLayer.Buildings) # \u6253\u5f00\u6240\u6709\u5efa\u7b51 world.load_map_layer(carla.MapLayer.Buildings) \u67e5\u770b\u6309\u987a\u5e8f\u52a0\u8f7d\u548c\u5378\u8f7d\u6240\u6709\u5c42\u7684\u793a\u4f8b\uff1a","title":"\u5206\u5c42\u5730\u56fe"},{"location":"core_map/#_13","text":"Carla \u65e8\u5728\u9488\u5bf9\u4e13\u4e1a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u53ef\u6269\u5c55\u548c\u9ad8\u5ea6\u5b9a\u5236\u3002\u56e0\u6b64\uff0c\u9664\u4e86 Carla \u4e2d\u73b0\u6709\u7684\u8bb8\u591a\u5730\u56fe\u548c\u8d44\u4ea7\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u521b\u5efa\u548c\u5bfc\u5165\u65b0\u7684\u5730\u56fe\u3001\u9053\u8def\u7f51\u7edc\u548c\u8d44\u4ea7\uff0c\u4ee5\u586b\u5145 Carla \u4eff\u771f\u4e2d\u7684\u5b9a\u5236\u73af\u5883\u3002\u4ee5\u4e0b\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6784\u5efa\u548c\u96c6\u6210\u81ea\u5b9a\u4e49\u5730\u56fe\u6240\u9700\u7684\u6b65\u9aa4\uff1a \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5","title":"\u81ea\u5b9a\u4e49\u5730\u56fe"},{"location":"core_sensors/","text":"\u4f20\u611f\u5668\u548c\u6570\u636e \u4f20\u611f\u5668\u662f\u4ece\u5468\u56f4\u73af\u5883\u4e2d\u68c0\u7d22\u6570\u636e\u7684\u53c2\u4e0e\u8005\u3002\u5b83\u4eec\u5bf9\u4e8e\u4e3a\u9a7e\u9a76\u4ee3\u7406\u521b\u9020\u5b66\u4e60\u73af\u5883\u81f3\u5173\u91cd\u8981\u3002 \u672c\u9875\u603b\u7ed3\u4e86\u5f00\u59cb\u5904\u7406\u4f20\u611f\u5668\u6240\u9700\u7684\u4e00\u5207\u3002\u5b83\u4ecb\u7ecd\u4e86\u53ef\u7528\u7684\u7c7b\u578b\u53ca\u5176\u751f\u547d\u5468\u671f\u7684\u5206\u6b65\u6307\u5357\u3002\u6bcf\u4e2a\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u627e\u5230\u3002 \u4f20\u611f\u5668\u9010\u6b65\u4ecb\u7ecd \u8bbe\u7f6e \u751f\u6210 \u76d1\u542c \u6570\u636e \u4f20\u611f\u5668\u7c7b\u578b \u76f8\u673a \u68c0\u6d4b\u5668 \u5176\u4ed6 \u4f20\u611f\u5668\u9010\u6b65\u4ecb\u7ecd carla.Sensor \u7c7b\u5b9a\u4e49\u4e86\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u53c2\u4e0e\u8005\uff0c\u80fd\u591f\u6d4b\u91cf\u548c\u4f20\u8f93\u6570\u636e\u3002 \u8fd9\u4e2a\u6570\u636e\u662f\u4ec0\u4e48\uff1f \u6839\u636e\u4f20\u611f\u5668\u7684\u7c7b\u578b\uff0c\u5b83\u53d8\u5316\u5f88\u5927\u3002\u6240\u6709\u7c7b\u578b\u7684\u6570\u636e\u90fd\u7ee7\u627f\u81ea\u901a\u7528\u7684 carla.SensorData \u3002 \u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u68c0\u7d22\u6570\u636e\uff1f \u5728\u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4\u4e0a\u6216\u5728\u6ce8\u518c\u67d0\u4e2a\u4e8b\u4ef6\u65f6\u3002\u53d6\u51b3\u4e8e\u4f20\u611f\u5668\u7684\u7c7b\u578b\u3002 \u4ed6\u4eec\u5982\u4f55\u68c0\u7d22\u6570\u636e\uff1f \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u6709\u4e00\u79cd\u63a5\u6536\u548c\u7ba1\u7406\u6570\u636e\u7684 listen() \u65b9\u6cd5\u3002 \u5c3d\u7ba1\u5b58\u5728\u5dee\u5f02\uff0c\u4f46\u6240\u6709\u4f20\u611f\u5668\u7684\u4f7f\u7528\u65b9\u5f0f\u90fd\u76f8\u4f3c\u3002 \u8bbe\u7f6e \u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e00\u6837\uff0c\u627e\u5230\u84dd\u56fe\u5e76\u8bbe\u7f6e\u7279\u5b9a\u5c5e\u6027\u3002\u8fd9\u5728\u5904\u7406\u4f20\u611f\u5668\u65f6\u81f3\u5173\u91cd\u8981\u3002\u4ed6\u4eec\u7684\u5c5e\u6027\u5c06\u51b3\u5b9a\u6240\u83b7\u5f97\u7684\u7ed3\u679c\u3002\u8fd9\u4e9b\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u4ee5\u4e0b\u793a\u4f8b\u8bbe\u7f6e\u4eea\u8868\u677f\u9ad8\u6e05\u6444\u50cf\u5934\u3002 # \u627e\u5230\u4f20\u611f\u5668\u84dd\u56fe\u3002 blueprint = world.get_blueprint_library().find('sensor.camera.rgb') # \u4fee\u6539\u84dd\u56fe\u5c5e\u6027\u6765\u8bbe\u7f6e\u56fe\u50cf\u5206\u8fa8\u7387\u548c\u89c6\u91ce blueprint.set_attribute('image_size_x', '1920') blueprint.set_attribute('image_size_y', '1080') blueprint.set_attribute('fov', '110') # \u8bbe\u7f6e\u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09 blueprint.set_attribute('sensor_tick', '1.0') \u751f\u6210 attachment_to \u548c attachment_type \u81f3\u5173\u91cd\u8981\u3002\u4f20\u611f\u5668\u5e94\u8fde\u63a5\u5230\u7236\u53c2\u4e0e\u8005\uff08\u901a\u5e38\u662f\u8f66\u8f86\uff09\u4e0a\uff0c\u4ee5\u8ddf\u8e2a\u5b83\u5e76\u6536\u96c6\u4fe1\u606f\u3002\u9644\u4ef6\u7c7b\u578b\u5c06\u786e\u5b9a\u5176\u5173\u4e8e\u6240\u8ff0\u8f66\u8f86\u7684\u4f4d\u7f6e\u5982\u4f55\u66f4\u65b0\u3002 \u521a\u6027\u9644\u4ef6(Rigid attachment)\u3002 \u52a8\u5bf9\u4e8e\u5176\u7236\u4f4d\u7f6e\u662f\u4e25\u683c\u7684\u3002\u8fd9\u662f\u4ece\u4eff\u771f\u4e2d\u68c0\u7d22\u6570\u636e\u7684\u5408\u9002\u9644\u4ef6\u3002 \u5f39\u7c27\u81c2\u9644\u4ef6(SpringArm attachment)\u3002 \u8fd0\u52a8\u53d8\u5f97\u8f7b\u677e\uff0c\u51e0\u4e4e\u6ca1\u6709\u52a0\u901f\u548c\u51cf\u901f\u3002\u4ec5\u5efa\u8bae\u4f7f\u7528\u6b64\u9644\u4ef6\u6765\u5f55\u5236\u4eff\u771f\u89c6\u9891\u3002\u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e\u65f6\uff0c\u79fb\u52a8\u5e73\u6ed1\u5e76\u4e14\u907f\u514d\u201c\u8df3\u8dc3\u201d\u3002 \u5f39\u7c27\u81c2\u5e7d\u7075\u9644\u4ef6(SpringArmGhost attachment)\u3002 \u4e0e\u524d\u4e00\u4e2a\u7c7b\u4f3c\uff0c\u4f46\u6ca1\u6709\u8fdb\u884c\u78b0\u649e\u6d4b\u8bd5\uff0c\u56e0\u6b64\u76f8\u673a\u6216\u4f20\u611f\u5668\u53ef\u4ee5\u7a7f\u8fc7\u5899\u58c1\u6216\u5176\u4ed6\u51e0\u4f55\u5f62\u72b6\u3002 transform = carla.Transform(carla.Location(x=0.8, z=1.7)) sensor = world.spawn_actor(blueprint, transform, attach_to=my_vehicle) \u91cd\u8981 \u5f53\u5e26\u6709\u9644\u4ef6\u751f\u6210\u65f6\uff0c\u4f4d\u7f6e\u5fc5\u987b\u76f8\u5bf9\u4e8e\u7236\u53c2\u4e0e\u8005\u3002 \u76d1\u542c \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u6709\u4e00\u4e2a listen() \u65b9\u6cd5\u3002\u6bcf\u6b21\u4f20\u611f\u5668\u83b7\u53d6\u6570\u636e\u65f6\u90fd\u4f1a\u8c03\u7528\u6b64\u51fd\u6570\u3002 \u53c2\u6570 callback \u662f\u4e00\u4e2a lambda \u51fd\u6570 \u3002\u5b83\u63cf\u8ff0\u4e86\u4f20\u611f\u5668\u5728\u83b7\u53d6\u6570\u636e\u65f6\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u8fd9\u5fc5\u987b\u5c06\u68c0\u7d22\u7684\u6570\u636e\u4f5c\u4e3a\u53c2\u6570\u3002 # \u6bcf\u6b21\u76f8\u673a\u751f\u6210\u65b0\u56fe\u50cf\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528 do_something()\u3002 sensor.listen(lambda data: do_something(data)) ... # \u6bcf\u6b21\u68c0\u6d4b\u5230\u78b0\u649e\u65f6\uff0c\u6b64\u78b0\u649e\u4f20\u611f\u5668\u90fd\u4f1a\u6253\u5370\u3002 def callback(event): for actor_id in event: vehicle = world_ref().get_actor(actor_id) print('Vehicle too close: %s' % vehicle.type_id) sensor02.listen(callback) \u6570\u636e \u5927\u591a\u6570\u4f20\u611f\u5668\u6570\u636e\u5bf9\u8c61\u90fd\u5177\u6709\u5c06\u4fe1\u606f\u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u529f\u80fd\u3002\u8fd9\u5c06\u5141\u8bb8\u5b83\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u4f7f\u7528\u3002 \u4e0d\u540c\u7c7b\u578b\u4f20\u611f\u5668\u7684\u4f20\u611f\u5668\u6570\u636e\u5dee\u5f02\u5f88\u5927\u3002\u67e5\u770b \u4f20\u611f\u5668\u53c2\u8003 \u4ee5\u83b7\u5f97\u8be6\u7ec6\u8bf4\u660e\u3002\u7136\u800c\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u603b\u662f\u5e26\u6709\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\u7684\u6807\u7b7e\u3002 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u8f6e\u6570\u5f00\u59cb\u4ee5\u6765\u4ee5\u4eff\u771f\u79d2\u4e3a\u5355\u4f4d\u7684\u6d4b\u91cf\u65f6\u95f4\u6233\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u7684\u4e16\u754c\u53c2\u8003\u3002 \u91cd\u8981 is_listening \u662f\u4e00\u4e2a \u4f20\u611f\u5668\u5c5e\u6027 \uff0c\u53ef\u4ee5\u968f\u610f\u542f\u7528/\u7981\u7528\u6570\u636e\u76d1\u542c\u3002 sensor_tick \u662f\u4e00\u4e2a \u84dd\u56fe\u5c5e\u6027 \uff0c\u7528\u4e8e\u8bbe\u7f6e\u63a5\u6536\u6570\u636e\u4e4b\u95f4\u7684\u4eff\u771f\u65f6\u95f4\u3002 \u4f20\u611f\u5668\u7c7b\u578b \u76f8\u673a \u4ece\u4ed6\u4eec\u7684\u89d2\u5ea6\u62cd\u6444\u4e16\u754c\u3002\u5bf9\u4e8e\u8fd4\u56de carla.Image \u7684\u76f8\u673a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8f85\u52a9\u7c7b carla.ColorConverter \u4fee\u6539\u56fe\u50cf\u4ee5\u8868\u793a\u4e0d\u540c\u7684\u4fe1\u606f\u3002 \u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4 \u83b7\u53d6\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u6df1\u5ea6 carla.Image \u5728\u7070\u5ea6\u56fe\u4e2d\u6e32\u67d3\u89c6\u91ce\u4e2d\u5143\u7d20\u7684\u6df1\u5ea6\u3002 RGB carla.Image \u63d0\u4f9b\u6e05\u6670\u7684\u5468\u56f4\u73af\u5883\u89c6\u91ce\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u5f20\u6b63\u5e38\u7684\u73b0\u573a\u7167\u7247\u3002 \u5149\u6d41 carla.Image \u6e32\u67d3\u76f8\u673a\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u8fd0\u52a8\u3002 \u8bed\u4e49\u5206\u5272 carla.Image \u6839\u636e\u5143\u7d20\u7684\u6807\u7b7e\u4ee5\u7279\u5b9a\u989c\u8272\u6e32\u67d3\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u3002 \u5b9e\u4f8b\u5206\u5272 carla.Image \u6839\u636e\u5143\u7d20\u7684\u6807\u7b7e\u548c\u552f\u4e00\u7684\u5bf9\u8c61 ID \u4ee5\u7279\u5b9a\u989c\u8272\u6e32\u67d3\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u3002 DVS carla.DVSEventArray \u4f5c\u4e3a\u4e8b\u4ef6\u6d41\u5f02\u6b65\u6d4b\u91cf\u4eae\u5ea6\u5f3a\u5ea6\u7684\u53d8\u5316\u3002 \u68c0\u6d4b\u5668 \u5f53\u9644\u52a0\u7684\u5bf9\u8c61\u6ce8\u518c\u7279\u5b9a\u4e8b\u4ef6\u65f6\u83b7\u53d6\u6570\u636e\u3002 \u89e6\u53d1\u65f6 \u83b7\u53d6\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u78b0\u649e carla.CollisionEvent \u68c0\u7d22\u5176\u7236\u7ea7\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 \u8f66\u9053\u5165\u4fb5 carla.LaneInvasionEvent \u5f53\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u8fdb\u884c\u6ce8\u518c\u3002 \u969c\u788d carla.ObstacleDetectionEvent \u68c0\u6d4b\u5176\u7236\u7ea7\u524d\u65b9\u53ef\u80fd\u5b58\u5728\u7684\u969c\u788d\u7269\u3002 \u5176\u4ed6 \u4e0d\u540c\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5bfc\u822a\u3001\u7269\u7406\u5c5e\u6027\u6d4b\u91cf\u548c\u573a\u666f\u7684\u4e8c\u7ef4/\u4e09\u7ef4\u70b9\u56fe\u3002 \u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4 \u68c0\u7d22\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf(GNSS) carla.GNSSMeasurement \u68c0\u7d22\u4f20\u611f\u5668\u7684\u5730\u7406\u4f4d\u7f6e\u3002 \u60ef\u6027\u6d4b\u91cf\u5355\u5143(IMU) carla.IMUMeasurement \u5305\u62ec\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u3002 \u6fc0\u5149\u96f7\u8fbe(LIDAR) carla.LidarMeasurement \u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u751f\u6210\u5305\u542b\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u548c\u5f3a\u5ea6\u7684 4D \u70b9\u4e91\uff0c\u4ee5\u5bf9\u5468\u56f4\u73af\u5883\u8fdb\u884c\u5efa\u6a21\u3002 \u96f7\u8fbe carla.RadarMeasurement \u4e8c\u7ef4\u70b9\u56fe\u5efa\u6a21\u89c6\u7ebf\u4e2d\u7684\u5143\u7d20\u53ca\u5176\u76f8\u5bf9\u4e8e\u4f20\u611f\u5668\u7684\u8fd0\u52a8\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168(RSS) carla.RssResponse \u6839\u636e\u5b89\u5168\u68c0\u67e5\u4fee\u6539\u5e94\u7528\u4e8e\u8f66\u8f86\u7684\u63a7\u5236\u5668\u3002\u8be5\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u5176\u4ed6\u4f20\u611f\u5668\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u4e13\u95e8\u7684 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u6587\u6863 \u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe carla.SemanticLidarMeasurement \u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u751f\u6210 3D \u70b9\u4e91\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u5b9e\u4f8b\u548c\u8bed\u4e49\u5206\u5272\u7684\u989d\u5916\u4fe1\u606f\u3002 \u8fd9\u662f\u4f20\u611f\u5668\u7684\u5305\u88c5\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u68c0\u7d22\u6a21\u62df\u6570\u636e\u3002 CARLA \u7684\u4ecb\u7ecd\u5230\u6b64\u7ed3\u675f\u3002\u7136\u800c\uff0c\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u5b66\u4e60\u3002 \u7ee7\u7eed\u5b66\u4e60\u3002 CARLA \u4e2d\u6709\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff1a\u6e32\u67d3\u9009\u9879\u3001\u4ea4\u901a\u7ba1\u7406\u5668\u3001\u8bb0\u5f55\u5668\u7b49\u7b49\u3002\u8fd9\u662f\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ed6\u4eec\u7684\u597d\u65f6\u673a\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u81ea\u7531\u5b9e\u9a8c\u3002 \u67e5\u770b\u672c\u6587\u6863\u7684 \u53c2\u8003 \u90e8\u5206\u3002\u5b83\u5305\u542b\u6709\u5173 Python API \u4e2d\u7684\u7c7b\u3001\u4f20\u611f\u5668\u3001\u4ee3\u7801\u7247\u6bb5\u7b49\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 Python API \u53c2\u8003 \u53d1\u8868\u60a8\u7684\u610f\u89c1\u3002 \u6709\u4efb\u4f55\u7591\u95ee\u3001\u5efa\u8bae\u548c\u60f3\u6cd5\u6b22\u8fce\u5728\u8bba\u575b\u4e2d\u63d0\u51fa\u3002 Carla \u8bba\u575b","title":"\u4f20\u611f\u5668\u548c\u6570\u636e"},{"location":"core_sensors/#_1","text":"\u4f20\u611f\u5668\u662f\u4ece\u5468\u56f4\u73af\u5883\u4e2d\u68c0\u7d22\u6570\u636e\u7684\u53c2\u4e0e\u8005\u3002\u5b83\u4eec\u5bf9\u4e8e\u4e3a\u9a7e\u9a76\u4ee3\u7406\u521b\u9020\u5b66\u4e60\u73af\u5883\u81f3\u5173\u91cd\u8981\u3002 \u672c\u9875\u603b\u7ed3\u4e86\u5f00\u59cb\u5904\u7406\u4f20\u611f\u5668\u6240\u9700\u7684\u4e00\u5207\u3002\u5b83\u4ecb\u7ecd\u4e86\u53ef\u7528\u7684\u7c7b\u578b\u53ca\u5176\u751f\u547d\u5468\u671f\u7684\u5206\u6b65\u6307\u5357\u3002\u6bcf\u4e2a\u4f20\u611f\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u627e\u5230\u3002 \u4f20\u611f\u5668\u9010\u6b65\u4ecb\u7ecd \u8bbe\u7f6e \u751f\u6210 \u76d1\u542c \u6570\u636e \u4f20\u611f\u5668\u7c7b\u578b \u76f8\u673a \u68c0\u6d4b\u5668 \u5176\u4ed6","title":"\u4f20\u611f\u5668\u548c\u6570\u636e"},{"location":"core_sensors/#_2","text":"carla.Sensor \u7c7b\u5b9a\u4e49\u4e86\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u53c2\u4e0e\u8005\uff0c\u80fd\u591f\u6d4b\u91cf\u548c\u4f20\u8f93\u6570\u636e\u3002 \u8fd9\u4e2a\u6570\u636e\u662f\u4ec0\u4e48\uff1f \u6839\u636e\u4f20\u611f\u5668\u7684\u7c7b\u578b\uff0c\u5b83\u53d8\u5316\u5f88\u5927\u3002\u6240\u6709\u7c7b\u578b\u7684\u6570\u636e\u90fd\u7ee7\u627f\u81ea\u901a\u7528\u7684 carla.SensorData \u3002 \u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u68c0\u7d22\u6570\u636e\uff1f \u5728\u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4\u4e0a\u6216\u5728\u6ce8\u518c\u67d0\u4e2a\u4e8b\u4ef6\u65f6\u3002\u53d6\u51b3\u4e8e\u4f20\u611f\u5668\u7684\u7c7b\u578b\u3002 \u4ed6\u4eec\u5982\u4f55\u68c0\u7d22\u6570\u636e\uff1f \u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u6709\u4e00\u79cd\u63a5\u6536\u548c\u7ba1\u7406\u6570\u636e\u7684 listen() \u65b9\u6cd5\u3002 \u5c3d\u7ba1\u5b58\u5728\u5dee\u5f02\uff0c\u4f46\u6240\u6709\u4f20\u611f\u5668\u7684\u4f7f\u7528\u65b9\u5f0f\u90fd\u76f8\u4f3c\u3002","title":"\u4f20\u611f\u5668\u9010\u6b65\u4ecb\u7ecd"},{"location":"core_sensors/#_3","text":"\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e00\u6837\uff0c\u627e\u5230\u84dd\u56fe\u5e76\u8bbe\u7f6e\u7279\u5b9a\u5c5e\u6027\u3002\u8fd9\u5728\u5904\u7406\u4f20\u611f\u5668\u65f6\u81f3\u5173\u91cd\u8981\u3002\u4ed6\u4eec\u7684\u5c5e\u6027\u5c06\u51b3\u5b9a\u6240\u83b7\u5f97\u7684\u7ed3\u679c\u3002\u8fd9\u4e9b\u5728 \u4f20\u611f\u5668\u53c2\u8003 \u4e2d\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u4ee5\u4e0b\u793a\u4f8b\u8bbe\u7f6e\u4eea\u8868\u677f\u9ad8\u6e05\u6444\u50cf\u5934\u3002 # \u627e\u5230\u4f20\u611f\u5668\u84dd\u56fe\u3002 blueprint = world.get_blueprint_library().find('sensor.camera.rgb') # \u4fee\u6539\u84dd\u56fe\u5c5e\u6027\u6765\u8bbe\u7f6e\u56fe\u50cf\u5206\u8fa8\u7387\u548c\u89c6\u91ce blueprint.set_attribute('image_size_x', '1920') blueprint.set_attribute('image_size_y', '1080') blueprint.set_attribute('fov', '110') # \u8bbe\u7f6e\u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09 blueprint.set_attribute('sensor_tick', '1.0')","title":"\u8bbe\u7f6e"},{"location":"core_sensors/#_4","text":"attachment_to \u548c attachment_type \u81f3\u5173\u91cd\u8981\u3002\u4f20\u611f\u5668\u5e94\u8fde\u63a5\u5230\u7236\u53c2\u4e0e\u8005\uff08\u901a\u5e38\u662f\u8f66\u8f86\uff09\u4e0a\uff0c\u4ee5\u8ddf\u8e2a\u5b83\u5e76\u6536\u96c6\u4fe1\u606f\u3002\u9644\u4ef6\u7c7b\u578b\u5c06\u786e\u5b9a\u5176\u5173\u4e8e\u6240\u8ff0\u8f66\u8f86\u7684\u4f4d\u7f6e\u5982\u4f55\u66f4\u65b0\u3002 \u521a\u6027\u9644\u4ef6(Rigid attachment)\u3002 \u52a8\u5bf9\u4e8e\u5176\u7236\u4f4d\u7f6e\u662f\u4e25\u683c\u7684\u3002\u8fd9\u662f\u4ece\u4eff\u771f\u4e2d\u68c0\u7d22\u6570\u636e\u7684\u5408\u9002\u9644\u4ef6\u3002 \u5f39\u7c27\u81c2\u9644\u4ef6(SpringArm attachment)\u3002 \u8fd0\u52a8\u53d8\u5f97\u8f7b\u677e\uff0c\u51e0\u4e4e\u6ca1\u6709\u52a0\u901f\u548c\u51cf\u901f\u3002\u4ec5\u5efa\u8bae\u4f7f\u7528\u6b64\u9644\u4ef6\u6765\u5f55\u5236\u4eff\u771f\u89c6\u9891\u3002\u66f4\u65b0\u6444\u50cf\u673a\u4f4d\u7f6e\u65f6\uff0c\u79fb\u52a8\u5e73\u6ed1\u5e76\u4e14\u907f\u514d\u201c\u8df3\u8dc3\u201d\u3002 \u5f39\u7c27\u81c2\u5e7d\u7075\u9644\u4ef6(SpringArmGhost attachment)\u3002 \u4e0e\u524d\u4e00\u4e2a\u7c7b\u4f3c\uff0c\u4f46\u6ca1\u6709\u8fdb\u884c\u78b0\u649e\u6d4b\u8bd5\uff0c\u56e0\u6b64\u76f8\u673a\u6216\u4f20\u611f\u5668\u53ef\u4ee5\u7a7f\u8fc7\u5899\u58c1\u6216\u5176\u4ed6\u51e0\u4f55\u5f62\u72b6\u3002 transform = carla.Transform(carla.Location(x=0.8, z=1.7)) sensor = world.spawn_actor(blueprint, transform, attach_to=my_vehicle) \u91cd\u8981 \u5f53\u5e26\u6709\u9644\u4ef6\u751f\u6210\u65f6\uff0c\u4f4d\u7f6e\u5fc5\u987b\u76f8\u5bf9\u4e8e\u7236\u53c2\u4e0e\u8005\u3002","title":"\u751f\u6210"},{"location":"core_sensors/#_5","text":"\u6bcf\u4e2a\u4f20\u611f\u5668\u90fd\u6709\u4e00\u4e2a listen() \u65b9\u6cd5\u3002\u6bcf\u6b21\u4f20\u611f\u5668\u83b7\u53d6\u6570\u636e\u65f6\u90fd\u4f1a\u8c03\u7528\u6b64\u51fd\u6570\u3002 \u53c2\u6570 callback \u662f\u4e00\u4e2a lambda \u51fd\u6570 \u3002\u5b83\u63cf\u8ff0\u4e86\u4f20\u611f\u5668\u5728\u83b7\u53d6\u6570\u636e\u65f6\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u8fd9\u5fc5\u987b\u5c06\u68c0\u7d22\u7684\u6570\u636e\u4f5c\u4e3a\u53c2\u6570\u3002 # \u6bcf\u6b21\u76f8\u673a\u751f\u6210\u65b0\u56fe\u50cf\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528 do_something()\u3002 sensor.listen(lambda data: do_something(data)) ... # \u6bcf\u6b21\u68c0\u6d4b\u5230\u78b0\u649e\u65f6\uff0c\u6b64\u78b0\u649e\u4f20\u611f\u5668\u90fd\u4f1a\u6253\u5370\u3002 def callback(event): for actor_id in event: vehicle = world_ref().get_actor(actor_id) print('Vehicle too close: %s' % vehicle.type_id) sensor02.listen(callback)","title":"\u76d1\u542c"},{"location":"core_sensors/#_6","text":"\u5927\u591a\u6570\u4f20\u611f\u5668\u6570\u636e\u5bf9\u8c61\u90fd\u5177\u6709\u5c06\u4fe1\u606f\u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u529f\u80fd\u3002\u8fd9\u5c06\u5141\u8bb8\u5b83\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u4f7f\u7528\u3002 \u4e0d\u540c\u7c7b\u578b\u4f20\u611f\u5668\u7684\u4f20\u611f\u5668\u6570\u636e\u5dee\u5f02\u5f88\u5927\u3002\u67e5\u770b \u4f20\u611f\u5668\u53c2\u8003 \u4ee5\u83b7\u5f97\u8be6\u7ec6\u8bf4\u660e\u3002\u7136\u800c\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u603b\u662f\u5e26\u6709\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\u7684\u6807\u7b7e\u3002 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u8f6e\u6570\u5f00\u59cb\u4ee5\u6765\u4ee5\u4eff\u771f\u79d2\u4e3a\u5355\u4f4d\u7684\u6d4b\u91cf\u65f6\u95f4\u6233\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u7684\u4e16\u754c\u53c2\u8003\u3002 \u91cd\u8981 is_listening \u662f\u4e00\u4e2a \u4f20\u611f\u5668\u5c5e\u6027 \uff0c\u53ef\u4ee5\u968f\u610f\u542f\u7528/\u7981\u7528\u6570\u636e\u76d1\u542c\u3002 sensor_tick \u662f\u4e00\u4e2a \u84dd\u56fe\u5c5e\u6027 \uff0c\u7528\u4e8e\u8bbe\u7f6e\u63a5\u6536\u6570\u636e\u4e4b\u95f4\u7684\u4eff\u771f\u65f6\u95f4\u3002","title":"\u6570\u636e"},{"location":"core_sensors/#_7","text":"","title":"\u4f20\u611f\u5668\u7c7b\u578b"},{"location":"core_sensors/#_8","text":"\u4ece\u4ed6\u4eec\u7684\u89d2\u5ea6\u62cd\u6444\u4e16\u754c\u3002\u5bf9\u4e8e\u8fd4\u56de carla.Image \u7684\u76f8\u673a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8f85\u52a9\u7c7b carla.ColorConverter \u4fee\u6539\u56fe\u50cf\u4ee5\u8868\u793a\u4e0d\u540c\u7684\u4fe1\u606f\u3002 \u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4 \u83b7\u53d6\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u6df1\u5ea6 carla.Image \u5728\u7070\u5ea6\u56fe\u4e2d\u6e32\u67d3\u89c6\u91ce\u4e2d\u5143\u7d20\u7684\u6df1\u5ea6\u3002 RGB carla.Image \u63d0\u4f9b\u6e05\u6670\u7684\u5468\u56f4\u73af\u5883\u89c6\u91ce\u3002\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u5f20\u6b63\u5e38\u7684\u73b0\u573a\u7167\u7247\u3002 \u5149\u6d41 carla.Image \u6e32\u67d3\u76f8\u673a\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u8fd0\u52a8\u3002 \u8bed\u4e49\u5206\u5272 carla.Image \u6839\u636e\u5143\u7d20\u7684\u6807\u7b7e\u4ee5\u7279\u5b9a\u989c\u8272\u6e32\u67d3\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u3002 \u5b9e\u4f8b\u5206\u5272 carla.Image \u6839\u636e\u5143\u7d20\u7684\u6807\u7b7e\u548c\u552f\u4e00\u7684\u5bf9\u8c61 ID \u4ee5\u7279\u5b9a\u989c\u8272\u6e32\u67d3\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u3002 DVS carla.DVSEventArray \u4f5c\u4e3a\u4e8b\u4ef6\u6d41\u5f02\u6b65\u6d4b\u91cf\u4eae\u5ea6\u5f3a\u5ea6\u7684\u53d8\u5316\u3002","title":"\u76f8\u673a"},{"location":"core_sensors/#_9","text":"\u5f53\u9644\u52a0\u7684\u5bf9\u8c61\u6ce8\u518c\u7279\u5b9a\u4e8b\u4ef6\u65f6\u83b7\u53d6\u6570\u636e\u3002 \u89e6\u53d1\u65f6 \u83b7\u53d6\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u78b0\u649e carla.CollisionEvent \u68c0\u7d22\u5176\u7236\u7ea7\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 \u8f66\u9053\u5165\u4fb5 carla.LaneInvasionEvent \u5f53\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u8fdb\u884c\u6ce8\u518c\u3002 \u969c\u788d carla.ObstacleDetectionEvent \u68c0\u6d4b\u5176\u7236\u7ea7\u524d\u65b9\u53ef\u80fd\u5b58\u5728\u7684\u969c\u788d\u7269\u3002","title":"\u68c0\u6d4b\u5668"},{"location":"core_sensors/#_10","text":"\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5bfc\u822a\u3001\u7269\u7406\u5c5e\u6027\u6d4b\u91cf\u548c\u573a\u666f\u7684\u4e8c\u7ef4/\u4e09\u7ef4\u70b9\u56fe\u3002 \u6bcf\u4e2a\u4eff\u771f\u6b65\u9aa4 \u68c0\u7d22\u6570\u636e \u3002 \u4f20\u611f\u5668 \u8f93\u51fa \u6982\u8ff0 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf(GNSS) carla.GNSSMeasurement \u68c0\u7d22\u4f20\u611f\u5668\u7684\u5730\u7406\u4f4d\u7f6e\u3002 \u60ef\u6027\u6d4b\u91cf\u5355\u5143(IMU) carla.IMUMeasurement \u5305\u62ec\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u3002 \u6fc0\u5149\u96f7\u8fbe(LIDAR) carla.LidarMeasurement \u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u751f\u6210\u5305\u542b\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u548c\u5f3a\u5ea6\u7684 4D \u70b9\u4e91\uff0c\u4ee5\u5bf9\u5468\u56f4\u73af\u5883\u8fdb\u884c\u5efa\u6a21\u3002 \u96f7\u8fbe carla.RadarMeasurement \u4e8c\u7ef4\u70b9\u56fe\u5efa\u6a21\u89c6\u7ebf\u4e2d\u7684\u5143\u7d20\u53ca\u5176\u76f8\u5bf9\u4e8e\u4f20\u611f\u5668\u7684\u8fd0\u52a8\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168(RSS) carla.RssResponse \u6839\u636e\u5b89\u5168\u68c0\u67e5\u4fee\u6539\u5e94\u7528\u4e8e\u8f66\u8f86\u7684\u63a7\u5236\u5668\u3002\u8be5\u4f20\u611f\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u5176\u4ed6\u4f20\u611f\u5668\u4e0d\u540c\uff0c\u5e76\u4e14\u6709\u4e13\u95e8\u7684 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u6587\u6863 \u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe carla.SemanticLidarMeasurement \u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u751f\u6210 3D \u70b9\u4e91\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u5b9e\u4f8b\u548c\u8bed\u4e49\u5206\u5272\u7684\u989d\u5916\u4fe1\u606f\u3002 \u8fd9\u662f\u4f20\u611f\u5668\u7684\u5305\u88c5\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u68c0\u7d22\u6a21\u62df\u6570\u636e\u3002 CARLA \u7684\u4ecb\u7ecd\u5230\u6b64\u7ed3\u675f\u3002\u7136\u800c\uff0c\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u5b66\u4e60\u3002 \u7ee7\u7eed\u5b66\u4e60\u3002 CARLA \u4e2d\u6709\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff1a\u6e32\u67d3\u9009\u9879\u3001\u4ea4\u901a\u7ba1\u7406\u5668\u3001\u8bb0\u5f55\u5668\u7b49\u7b49\u3002\u8fd9\u662f\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u4ed6\u4eec\u7684\u597d\u65f6\u673a\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u81ea\u7531\u5b9e\u9a8c\u3002 \u67e5\u770b\u672c\u6587\u6863\u7684 \u53c2\u8003 \u90e8\u5206\u3002\u5b83\u5305\u542b\u6709\u5173 Python API \u4e2d\u7684\u7c7b\u3001\u4f20\u611f\u5668\u3001\u4ee3\u7801\u7247\u6bb5\u7b49\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 Python API \u53c2\u8003 \u53d1\u8868\u60a8\u7684\u610f\u89c1\u3002 \u6709\u4efb\u4f55\u7591\u95ee\u3001\u5efa\u8bae\u548c\u60f3\u6cd5\u6b22\u8fce\u5728\u8bba\u575b\u4e2d\u63d0\u51fa\u3002 Carla \u8bba\u575b","title":"\u5176\u4ed6"},{"location":"core_world/","text":"\u7b2c\u4e00\u3001\u4e16\u754c\u548c\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u548c\u4e16\u754c\u662f CARLA \u7684\u4e24\u4e2a\u57fa\u672c\u8981\u7d20\uff0c\u662f\u64cd\u4f5c\u4eff\u771f\u53ca\u5176\u53c2\u4e0e\u8005\u7684\u5fc5\u8981\u62bd\u8c61\u3002 \u672c\u6559\u7a0b\u4ece\u5b9a\u4e49\u8fd9\u4e9b\u5143\u7d20\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u521b\u5efa\uff0c\u5230\u63cf\u8ff0\u5b83\u4eec\u7684\u53ef\u80fd\u6027\u3002\u5982\u679c\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4efb\u4f55\u7591\u95ee\u6216\u95ee\u9898\uff0c CARLA \u8bba\u575b \u53ef\u4ee5\u4e3a\u60a8\u89e3\u51b3\u3002 \u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u521b\u5efa \u4e16\u754c\u8fde\u63a5 \u5176\u4ed6\u5ba2\u6237\u7aef\u5b9e\u7528\u7a0b\u5e8f \u4e16\u754c \u53c2\u4e0e\u8005 \u5929\u6c14 \u706f\u5149 \u8c03\u8bd5 \u4e16\u754c\u5feb\u7167 \u4e16\u754c\u8bbe\u7f6e \u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u662f CARLA \u67b6\u6784\u4e2d\u7684\u4e3b\u8981\u5143\u7d20\u4e4b\u4e00\u3002\u5b83\u4eec\u8fde\u63a5\u5230\u670d\u52a1\u5668\u3001\u68c0\u7d22\u4fe1\u606f\u5e76\u66f4\u6539\u547d\u4ee4\u3002\u8fd9\u662f\u901a\u8fc7\u811a\u672c\u5b8c\u6210\u7684\u3002\u5ba2\u6237\u7aef\u8bc6\u522b\u81ea\u5df1\u7684\u8eab\u4efd\uff0c\u5e76\u8fde\u63a5\u5230\u4e16\u754c\uff0c\u7136\u540e\u8fdb\u884c\u6a21\u62df\u64cd\u4f5c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5ba2\u6237\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u9ad8\u7ea7 CARLA \u6a21\u5757\u3001\u529f\u80fd\u5e76\u5e94\u7528\u547d\u4ee4\u6279\u5904\u7406\u3002\u672c\u8282\u4ec5\u4ecb\u7ecd\u547d\u4ee4\u6279\u5904\u7406\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u8bf8\u5982\u751f\u6210\u5927\u91cf\u53c2\u4e0e\u8005\u4e4b\u7c7b\u7684\u57fa\u672c\u4e8b\u60c5\u5f88\u6709\u7528\u3002\u5176\u4f59\u529f\u80fd\u66f4\u52a0\u590d\u6742\uff0c\u5c06\u5728 \u9ad8\u7ea7\u6b65\u9aa4 \u4e2d\u5404\u81ea\u7684\u9875\u9762\u4e2d\u8fdb\u884c\u89e3\u51b3\u3002 \u67e5\u770b Python API \u53c2\u8003\u4e2d\u7684 carla.Client \u4ee5\u4e86\u89e3\u8be5\u7c7b\u7684\u7279\u5b9a\u65b9\u6cd5\u548c\u53d8\u91cf\u3002 \u5ba2\u6237\u7aef\u521b\u5efa \u9700\u8981\u4e24\u4ef6\u4e8b\u3002\u6807\u8bc6\u5b83\u7684 IP \u5730\u5740\u4ee5\u53ca\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u7684 \u4e24\u4e2a TCP \u7aef\u53e3 \u3002\u53ef\u9009\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u8bbe\u7f6e\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u503c\u8bbe\u7f6e\u4e3a\u5168\u90e8 ( 0 )\u3002Python API \u53c2\u8003\u4e2d\u7684 carla.Client \u5305\u542b\u4e00\u4e2a\u7247\u6bb5\uff0c\u663e\u793a\u5982\u4f55\u5728\u8fd0\u884c\u811a\u672c\u65f6\u5c06\u8fd9\u4e9b\u89e3\u6790\u4e3a\u53c2\u6570\u3002 client = carla.Client('localhost', 2000) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u4f7f\u7528\u672c\u5730\u4e3b\u673a IP \u548c\u7aef\u53e3 2000 \u8fdb\u884c\u8fde\u63a5\uff0c\u4f46\u8fd9\u4e9b\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u7aef\u53e3\u59cb\u7ec8\u4e3a n+1 ,2001\u3002 \u521b\u5efa\u5ba2\u6237\u7aef\u540e\uff0c\u8bbe\u7f6e\u5176 time-out \u3002\u8fd9\u9650\u5236\u4e86\u6240\u6709\u7f51\u7edc\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u8fd9\u4e9b\u64cd\u4f5c\u4e0d\u4f1a\u6c38\u8fdc\u963b\u6b62\u5ba2\u6237\u7aef\u3002\u5982\u679c\u8fde\u63a5\u5931\u8d25\uff0c\u5c06\u8fd4\u56de\u9519\u8bef\u3002 client.set_timeout(10.0) # \u79d2 \u53ef\u4ee5\u8fde\u63a5\u8bb8\u591a\u5ba2\u6237\u7aef\uff0c\u56e0\u4e3a\u4e00\u6b21\u8fd0\u884c\u591a\u4e2a\u811a\u672c\u662f\u5f88\u5e38\u89c1\u7684\u3002\u5728\u5177\u6709\u9ad8\u7ea7 CARLA \u529f\u80fd\uff08\u4f8b\u5982\u4ea4\u901a\u7ba1\u7406\u5668\uff09\u7684\u591a\u5ba2\u6237\u7aef\u65b9\u6848\u4e2d\u5de5\u4f5c\uff0c\u5fc5\u7136\u4f1a\u4f7f\u901a\u4fe1\u66f4\u52a0\u590d\u6742\u3002 \u7b14\u8bb0 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6709\u4e0d\u540c\u7684 libcarla \u6a21\u5757\u3002\u5982\u679c\u7248\u672c\u4e0d\u540c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 get_client_version() \u548c get_server_version() \u65b9\u6cd5\u8fdb\u884c\u68c0\u67e5\u3002 \u4e16\u754c\u8fde\u63a5 \u5ba2\u6237\u7aef\u53ef\u4ee5\u76f8\u5f53\u8f7b\u677e\u5730\u8fde\u63a5\u548c\u68c0\u7d22\u5f53\u524d\u4e16\u754c\u3002 world = client.get_world() \u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u83b7\u5f97\u53ef\u7528\u5730\u56fe\u5217\u8868\u6765\u66f4\u6539\u5f53\u524d\u5730\u56fe\u3002\u8fd9\u5c06\u6467\u6bc1\u5f53\u524d\u7684\u4e16\u754c\u5e76\u521b\u9020\u4e00\u4e2a\u65b0\u7684\u4e16\u754c\u3002 print(client.get_available_maps()) ... world = client.load_world('Town01') # client.reload_world() \u521b\u5efa\u4e00\u4e2a\u76f8\u540c\u5730\u56fe\u4e16\u754c\u7684\u65b0\u5b9e\u4f8b\u3002 \u6bcf\u4e2a\u4e16\u754c\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a id \u6216\u4e16\u4ee3\u3002\u6bcf\u5f53\u5ba2\u6237\u7aef\u8c03\u7528 load_world() \u6216 reload_world() \u65f6\uff0c\u524d\u4e00\u4e2a\u88ab\u9500\u6bc1\u3002\u4e00\u4e2a\u65b0\u7684\u4e16\u4ee3\u662f\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u7684\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\u865a\u5e7b\u5f15\u64ce\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002 \u4f7f\u7528\u547d\u4ee4 \u547d\u4ee4 \u662f\u4e00\u4e9b\u6700\u5e38\u89c1\u7684 CARLA \u65b9\u6cd5\u7684\u6539\u7f16\uff0c\u53ef\u4ee5\u6279\u91cf\u5e94\u7528\u3002\u4f8b\u5982\uff0c command.SetAutopilot \u76f8\u5f53\u4e8e command.SetAutopilot \uff0c\u542f\u7528\u8f66\u8f86\u7684\u81ea\u52a8\u9a7e\u9a76\u529f\u80fd\u3002\u4f46\u662f\uff0c\u4f7f\u7528 Client.apply_batch \u6216 Client.apply_batch_sync() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u4eff\u771f\u6b65\u9aa4\u4e2d\u5e94\u7528\u4e00\u7cfb\u5217\u547d\u4ee4\u3002\u8fd9\u5bf9\u4e8e\u901a\u5e38\u5e94\u7528\u4e8e\u6570\u767e\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\u6765\u8bf4\u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u6279\u5904\u7406\u4e00\u6b21\u6027\u9500\u6bc1\u4e00\u7cfb\u5217\u8f66\u8f86\u3002 client.apply_batch([carla.command.DestroyActor(x) for x in vehicles_list]) Python API \u53c2\u8003\u7684 \u6700\u65b0\u90e8\u5206 \u5217\u51fa\u4e86\u6240\u6709\u53ef\u7528\u7684\u547d\u4ee4\u3002 \u5176\u4ed6\u5ba2\u6237\u7aef\u5b9e\u7528\u7a0b\u5e8f \u5ba2\u6237\u7aef\u5bf9\u8c61\u7684\u4e3b\u8981\u76ee\u7684\u662f\u83b7\u53d6\u6216\u6539\u53d8\u4e16\u754c\uff0c\u5e76\u5e94\u7528\u547d\u4ee4\u3002\u4f46\u662f\uff0c\u5b83\u8fd8\u63d0\u4f9b\u5bf9\u4e00\u4e9b\u9644\u52a0\u529f\u80fd\u7684\u8bbf\u95ee\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u8be5\u6a21\u5757\u8d1f\u8d23\u6bcf\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u7684\u8f66\u8f86\u4ee5\u91cd\u5efa\u57ce\u5e02\u4ea4\u901a\u3002 \u8bb0\u5f55\u5668 . \u5141\u8bb8\u91cd\u65b0\u8fdb\u884c\u4ee5\u524d\u7684\u4eff\u771f\u3002\u4f7f\u7528 \u5feb\u7167 \u603b\u7ed3\u6bcf\u5e27\u7684\u4eff\u771f\u72b6\u6001\u3002 \u4e16\u754c \u4eff\u771f\u7684\u4e3b\u8981\u6807\u5c3a\u3002\u5b83\u7684\u5b9e\u4f8b\u5e94\u8be5\u7531\u5ba2\u6237\u7aef\u68c0\u7d22\u3002\u5b83\u4e0d\u5305\u542b\u4e16\u754c\u672c\u8eab\u7684\u6a21\u578b\uff0c\u8fd9\u662f Map \u7c7b\u7684\u4e00\u90e8\u5206\u3002\u76f8\u53cd\uff0c\u5927\u591a\u6570\u4fe1\u606f\u548c\u5e38\u89c4\u8bbe\u7f6e\u53ef\u4ee5\u4ece\u6b64\u7c7b\u8bbf\u95ee\u3002 \u4eff\u771f\u4e2d\u7684\u53c2\u4e0e\u8005\u548c\u89c2\u5bdf\u8005\u3002 \u84dd\u56fe\u5e93\u3002 \u5730\u56fe\u3002 \u4eff\u771f\u8bbe\u7f6e\u3002 \u5feb\u7167\u3002 \u5929\u6c14\u548c\u706f\u5149\u7ba1\u7406\u5668\u3002 \u5b83\u7684\u4e00\u4e9b\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u662f getters \uff0c\u7cbe\u786e\u5730\u68c0\u7d22\u8fd9\u4e9b\u5143\u7d20\u7684\u4fe1\u606f\u6216\u5b9e\u4f8b\u3002\u67e5\u770b carla.World \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u53c2\u4e0e\u8005 \u4e16\u754c\u4e0a\u6709\u4e0d\u540c\u7684\u4e0e\u53c2\u4e0e\u8005\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u751f\u6210\u53c2\u4e0e\u8005\uff08\u4f46\u4e0d\u6467\u6bc1\u4ed6\u4eec\uff09\u3002 \u83b7\u5f97\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u53c2\u4e0e\u8005\uff0c\u6216\u8005\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u53c2\u4e0e\u8005 \u8bbf\u95ee\u84dd\u56fe\u5e93\u3002 \u8bbf\u95ee\u89c2\u5bdf\u53c2\u4e0e\u8005\u3001\u4eff\u771f\u7684\u89c6\u89d2\u3002 \u68c0\u7d22\u9002\u5408\u751f\u6210\u53c2\u4e0e\u8005\u7684\u968f\u673a\u4f4d\u7f6e\u3002 \u751f\u6210\u5c06\u5728 \u7b2c\u4e8c\u90e8\u5206\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe \u3002\u9700\u8981\u5bf9\u84dd\u56fe\u5e93\u3001\u5c5e\u6027\u7b49\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u5929\u6c14 \u5929\u6c14\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4e2a\u7c7b\uff0c\u800c\u662f\u4e00\u7ec4\u53ef\u4ece\u4e16\u754c\u83b7\u53d6\u7684\u53c2\u6570\u3002\u53c2\u6570\u5316\u5305\u62ec\u592a\u9633\u65b9\u5411\u3001\u4e91\u91cf\u3001\u98ce\u3001\u96fe\u7b49\u7b49\u3002\u8f85\u52a9\u7c7b carla.WeatherParameters \u7528\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u5929\u6c14\u3002 weather = carla.WeatherParameters( cloudiness=80.0, precipitation=30.0, sun_altitude_angle=70.0) world.set_weather(weather) print(world.get_weather()) \u6709\u4e00\u4e9b\u5929\u6c14\u9884\u8bbe\u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u4e8e\u4e16\u754c\u3002\u8fd9\u4e9b\u5217\u5728 carla.WeatherParameters \u4e2d\u5e76\u53ef\u4f5c\u4e3a\u679a\u4e3e\u8bbf\u95ee\u3002 world.set_weather(carla.WeatherParameters.WetCloudySunset) \u8fd8\u53ef\u4ee5\u4f7f\u7528 CARLA \u63d0\u4f9b\u7684\u4e24\u4e2a\u811a\u672c\u6765\u81ea\u5b9a\u4e49\u5929\u6c14\u3002 environment.py (\u5728 PythonAPI/util \u76ee\u5f55\u4e0b) \u2014 \u63d0\u4f9b\u5bf9\u5929\u6c14\u548c\u5149\u7167\u53c2\u6570\u7684\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5b9e\u65f6\u66f4\u6539\u8fd9\u4e9b\u53c2\u6570\u3002 environment.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --sun SUN Sun position presets [sunset | day | night] --weather WEATHER Weather condition presets [clear | overcast | rain] --altitude A, -alt A Sun altitude [-90.0, 90.0] --azimuth A, -azm A Sun azimuth [0.0, 360.0] --clouds C, -c C Clouds amount [0.0, 100.0] --rain R, -r R Rain amount [0.0, 100.0] --puddles Pd, -pd Pd Puddles amount [0.0, 100.0] --wind W, -w W Wind intensity [0.0, 100.0] --fog F, -f F Fog intensity [0.0, 100.0] --fogdist Fd, -fd Fd Fog Distance [0.0, inf) --wetness Wet, -wet Wet Wetness intensity [0.0, 100.0] dynamic_weather.py (\u5728 PythonAPI/examples \u76ee\u5f55\u4e0b) \u2014 \u542f\u7528\u5f00\u53d1\u4eba\u5458\u4e3a\u6bcf\u5f20 CARLA \u5730\u56fe\u51c6\u5907\u7684\u7279\u5b9a\u5929\u6c14\u5468\u671f\u3002 dynamic_weather.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) -s FACTOR, --speed FACTOR rate at which the weather changes (default: 1.0) \u7b14\u8bb0 \u5929\u6c14\u7684\u53d8\u5316\u4e0d\u4f1a\u5f71\u54cd\u7269\u7406\u3002\u5b83\u4eec\u53ea\u662f\u76f8\u673a\u4f20\u611f\u5668\u53ef\u4ee5\u6355\u83b7\u7684\u89c6\u89c9\u6548\u679c\u3002 \u5f53 sun_altitude_angle < 0 \u65f6\uff0c\u591c\u95f4\u6a21\u5f0f\u5f00\u59cb \uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u65e5\u843d\u3002\u8fd9\u662f\u706f\u5149\u53d8\u5f97\u7279\u522b\u91cd\u8981\u7684\u65f6\u5019\u3002 \u706f\u5149 \u5f53\u6a21\u62df\u8fdb\u5165\u591c\u95f4\u6a21\u5f0f\u65f6\uff0c \u8def\u706f \u4f1a\u81ea\u52a8\u6253\u5f00\u3002\u706f\u5149\u7531\u5730\u56fe\u5f00\u53d1\u4eba\u5458\u653e\u7f6e\uff0c\u5e76\u53ef\u4f5c\u4e3a carla.Light \u5bf9\u8c61\u8bbf\u95ee\u3002\u989c\u8272\u548c\u5f3a\u5ea6\u7b49\u5c5e\u6027\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u3002 carla.LightState \u7c7b\u578b\u7684\u53d8\u91cf light_state \u5141\u8bb8\u5728\u4e00\u6b21\u8c03\u7528\u4e2d\u8bbe\u7f6e\u6240\u6709\u8fd9\u4e9b\u3002 \u8def\u706f\u4f7f\u7528\u5176\u7c7b\u578b\u4e3a carla.LightState \u7684\u5c5e\u6027 light_state \u8fdb\u884c\u5206\u7c7b\u3002\u8fd9\u5141\u8bb8\u5c06\u706f\u5206\u7c7b\u4e3a\u8def\u706f\u3001\u5efa\u7b51\u7269\u706f...\u53ef\u4ee5\u68c0\u7d22 [ carla.LightManager ] \u7684\u5b9e\u4f8b\u6765\u5728\u4e00\u6b21\u8c03\u7528\u4e2d\u5904\u7406\u4e00\u7ec4\u706f\u3002 # \u83b7\u5f97\u706f\u5149\u7ba1\u7406\u5668\u548c\u706f\u5149 lmanager = world.get_lightmanager() mylights = lmanager.get_all_lights() # \u5b9a\u5236\u4e00\u4e2a\u7279\u5b9a\u7684\u706f\u5149 light01 = mylights[0] light01.turn_on() light01.set_intensity(100.0) state01 = carla.LightState(200.0,red,carla.LightGroup.Building,True) light01.set_light_state(state01) # \u5b9a\u5236\u4e00\u7ec4\u706f my_lights = lmanager.get_light_group(carla.LightGroup.Building) lmanager.turn_on(my_lights) lmanager.set_color(my_lights,carla.Color(255,0,0)) lmanager.set_intensities(my_lights,list_of_intensities) \u8f66\u706f \u5fc5\u987b\u7531\u7528\u6237\u6253\u5f00/\u5173\u95ed\u3002\u6bcf\u8f86\u8f66\u90fd\u6709\u4e00\u7ec4\u5728 carla.VehicleLightState \u4e2d\u5217\u51fa\u7684\u706f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5e76\u975e\u6240\u6709\u8f66\u8f86\u90fd\u96c6\u6210\u4e86\u8f66\u706f\u3002\u4ee5\u4e0b\u662f\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\u53ef\u7528\u7684\u5217\u8868\u3002 \u81ea\u884c\u8f66\u3002 \u5b83\u4eec\u90fd\u6709\u524d\u540e\u793a\u5ed3\u706f\u3002 \u6469\u6258\u8f66\u3002 \u96c5\u9a6c\u54c8\u548c\u54c8\u96f7\u6234\u7ef4\u68ee\u578b\u53f7\u3002 \u6c7d\u8f66\u3002 \u5965\u8fea TT\u3001\u96ea\u4f5b\u5170\u3001\u9053\u5947\uff08\u8b66\u8f66\uff09\u3001\u94b0\u521b\u3001\u6797\u80af\u3001\u91ce\u9a6c\u3001\u7279\u65af\u62c93S\u3001\u5927\u4f17T2\u4ee5\u53ca\u5373\u5c06\u5230\u6765\u7684 Carla \u65b0\u5ba2\u4eba\u3002 \u53ef\u4ee5\u4f7f\u7528 carla.Vehicle.get_light_state \u548c carla.Vehicle.set_light_state \u65b9\u6cd5\u968f\u65f6\u68c0\u7d22\u548c\u66f4\u65b0\u8f66\u8f86\u7684\u706f\u5149\u3002\u5b83\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6765\u81ea\u5b9a\u4e49\u706f\u5149\u8bbe\u7f6e\u3002 # \u6253\u5f00\u4f4d\u7f6e\u706f current_lights = carla.VehicleLightState.NONE current_lights |= carla.VehicleLightState.Position vehicle.set_light_state(current_lights) \u7b14\u8bb0 \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5929\u6c14 environment.py \u90e8\u5206\u4e2d\u63cf\u8ff0\u7684\u5b9e\u65f6\u8bbe\u7f6e\u706f\u5149\u3002 \u8c03\u8bd5 \u4e16\u754c\u5bf9\u8c61\u6709\u4e00\u4e2a carla.DebugHelper \u5bf9\u8c61\u4f5c\u4e3a\u516c\u5171\u5c5e\u6027\u3002\u5b83\u5141\u8bb8\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7ed8\u5236\u4e0d\u540c\u7684\u5f62\u72b6\u3002\u8fd9\u4e9b\u7528\u4e8e\u8ddf\u8e2a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u5728\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u5904\u7ed8\u5236\u4e00\u4e2a\u7ea2\u8272\u6846\u3002 debug = world.debug debug.draw_box(carla.BoundingBox(actor_snapshot.get_transform().location,carla.Vector3D(0.5,0.5,2)),actor_snapshot.get_transform().rotation, 0.05, carla.Color(255,0,0,0),0) \u6b64\u793a\u4f8b\u5728 carla.DebugHelper \u7684\u7247\u6bb5\u4e2d\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4e3a\u4e16\u754c\u5feb\u7167\u4e2d\u7684\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7ed8\u5236\u65b9\u6846\u3002 \u4e16\u754c\u5feb\u7167 \u5305\u542b\u4eff\u771f\u4e2d\u6bcf\u4e2a\u53c2\u4e0e\u8005\u5728\u5355\u4e2a\u5e27\u4e2d\u7684\u72b6\u6001\u3002\u4e00\u79cd\u5e26\u6709\u65f6\u95f4\u53c2\u8003\u7684\u9759\u6001\u4e16\u754c\u56fe\u50cf\u3002\u5373\u4f7f\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\uff0c\u4fe1\u606f\u4e5f\u6765\u81ea\u76f8\u540c\u7684\u4eff\u771f\u6b65\u9aa4\u3002 # \u68c0\u7d22\u5f53\u524d\u5e27\u7684\u4e16\u754c\u5feb\u7167\u3002 world_snapshot = world.get_snapshot() carla.WorldSnapshot \u5305\u542b carla.Timestamp \u548c carla.ActorSnapshot \u5217\u8868\u3002\u53ef\u4ee5\u4f7f\u7528\u53c2\u4e0e\u8005 id \u7684\u641c\u7d22\u53c2\u4e0e\u8005\u5feb\u7167\u3002\u5feb\u7167\u5217\u51fa\u4e86\u5176\u4e2d\u51fa\u73b0\u7684\u53c2\u4e0e\u8005 id \u3002 timestamp = world_snapshot.timestamp # \u83b7\u53d6\u65f6\u95f4\u53c2\u8003 for actor_snapshot in world_snapshot: # \u83b7\u53d6\u53c2\u4e0e\u8005\u548c\u5feb\u7167\u4fe1\u606f actual_actor = world.get_actor(actor_snapshot.id) actor_snapshot.get_transform() actor_snapshot.get_velocity() actor_snapshot.get_angular_velocity() actor_snapshot.get_acceleration() actor_snapshot = world_snapshot.find(actual_actor.id) # \u83b7\u5f97\u53c2\u4e0e\u8005\u5feb\u7167 \u4e16\u754c\u8bbe\u7f6e \u4e16\u754c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u9ad8\u7ea7\u7684\u4eff\u771f\u914d\u7f6e\u3002\u8fd9\u4e9b\u51b3\u5b9a\u4e86\u6e32\u67d3\u6761\u4ef6\u3001\u4eff\u771f\u65f6\u95f4\u6b65\u957f\u4ee5\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u540c\u6b65\u3002\u5b83\u4eec\u53ef\u4ee5\u4ece\u8f85\u52a9\u7c7b carla.WorldSettings \u8bbf\u95ee\u3002 \u76ee\u524d\uff0c\u9ed8\u8ba4\u7684 CARLA \u4ee5\u6700\u4f73\u56fe\u5f62\u8d28\u91cf\u3001\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u548c\u5f02\u6b65\u65b9\u5f0f\u8fd0\u884c\u3002\u8981\u8fdb\u4e00\u6b65\u6df1\u5165\u4e86\u89e3\u6b64\u95ee\u9898\uff0c\u8bf7\u67e5\u770b \u9ad8\u7ea7\u6b65\u9aa4 \u90e8\u5206\u3002\u6709\u5173 \u540c\u6b65\u3001\u65f6\u95f4\u6b65\u957f \u4ee5\u53ca \u6e32\u67d3\u9009\u9879 \u7684\u9875\u9762\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002 \u8fd9\u662f\u5bf9\u4e16\u754c\u548c\u5ba2\u6237\u7aef\u5bf9\u8c61\u7684\u5305\u88c5\u3002\u4e0b\u4e00\u6b65\u5c06\u4ed4\u7ec6\u7814\u7a76\u53c2\u4e0e\u8005\u548c\u84dd\u56fe\uff0c\u4e3a\u6a21\u62df\u8d4b\u4e88\u751f\u547d\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u8bbf\u95ee\u8bba\u575b\uff0c\u53d1\u8868\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 Carla \u8bba\u575b \u7b2c\u4e8c\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe","title":"\u4e16\u754c\u548c\u5ba2\u6237\u7aef"},{"location":"core_world/#_1","text":"\u5ba2\u6237\u7aef\u548c\u4e16\u754c\u662f CARLA \u7684\u4e24\u4e2a\u57fa\u672c\u8981\u7d20\uff0c\u662f\u64cd\u4f5c\u4eff\u771f\u53ca\u5176\u53c2\u4e0e\u8005\u7684\u5fc5\u8981\u62bd\u8c61\u3002 \u672c\u6559\u7a0b\u4ece\u5b9a\u4e49\u8fd9\u4e9b\u5143\u7d20\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u521b\u5efa\uff0c\u5230\u63cf\u8ff0\u5b83\u4eec\u7684\u53ef\u80fd\u6027\u3002\u5982\u679c\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4efb\u4f55\u7591\u95ee\u6216\u95ee\u9898\uff0c CARLA \u8bba\u575b \u53ef\u4ee5\u4e3a\u60a8\u89e3\u51b3\u3002 \u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u521b\u5efa \u4e16\u754c\u8fde\u63a5 \u5176\u4ed6\u5ba2\u6237\u7aef\u5b9e\u7528\u7a0b\u5e8f \u4e16\u754c \u53c2\u4e0e\u8005 \u5929\u6c14 \u706f\u5149 \u8c03\u8bd5 \u4e16\u754c\u5feb\u7167 \u4e16\u754c\u8bbe\u7f6e","title":"\u7b2c\u4e00\u3001\u4e16\u754c\u548c\u5ba2\u6237\u7aef"},{"location":"core_world/#_2","text":"\u5ba2\u6237\u7aef\u662f CARLA \u67b6\u6784\u4e2d\u7684\u4e3b\u8981\u5143\u7d20\u4e4b\u4e00\u3002\u5b83\u4eec\u8fde\u63a5\u5230\u670d\u52a1\u5668\u3001\u68c0\u7d22\u4fe1\u606f\u5e76\u66f4\u6539\u547d\u4ee4\u3002\u8fd9\u662f\u901a\u8fc7\u811a\u672c\u5b8c\u6210\u7684\u3002\u5ba2\u6237\u7aef\u8bc6\u522b\u81ea\u5df1\u7684\u8eab\u4efd\uff0c\u5e76\u8fde\u63a5\u5230\u4e16\u754c\uff0c\u7136\u540e\u8fdb\u884c\u6a21\u62df\u64cd\u4f5c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5ba2\u6237\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u9ad8\u7ea7 CARLA \u6a21\u5757\u3001\u529f\u80fd\u5e76\u5e94\u7528\u547d\u4ee4\u6279\u5904\u7406\u3002\u672c\u8282\u4ec5\u4ecb\u7ecd\u547d\u4ee4\u6279\u5904\u7406\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u8bf8\u5982\u751f\u6210\u5927\u91cf\u53c2\u4e0e\u8005\u4e4b\u7c7b\u7684\u57fa\u672c\u4e8b\u60c5\u5f88\u6709\u7528\u3002\u5176\u4f59\u529f\u80fd\u66f4\u52a0\u590d\u6742\uff0c\u5c06\u5728 \u9ad8\u7ea7\u6b65\u9aa4 \u4e2d\u5404\u81ea\u7684\u9875\u9762\u4e2d\u8fdb\u884c\u89e3\u51b3\u3002 \u67e5\u770b Python API \u53c2\u8003\u4e2d\u7684 carla.Client \u4ee5\u4e86\u89e3\u8be5\u7c7b\u7684\u7279\u5b9a\u65b9\u6cd5\u548c\u53d8\u91cf\u3002","title":"\u5ba2\u6237\u7aef"},{"location":"core_world/#_3","text":"\u9700\u8981\u4e24\u4ef6\u4e8b\u3002\u6807\u8bc6\u5b83\u7684 IP \u5730\u5740\u4ee5\u53ca\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u7684 \u4e24\u4e2a TCP \u7aef\u53e3 \u3002\u53ef\u9009\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u8bbe\u7f6e\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u503c\u8bbe\u7f6e\u4e3a\u5168\u90e8 ( 0 )\u3002Python API \u53c2\u8003\u4e2d\u7684 carla.Client \u5305\u542b\u4e00\u4e2a\u7247\u6bb5\uff0c\u663e\u793a\u5982\u4f55\u5728\u8fd0\u884c\u811a\u672c\u65f6\u5c06\u8fd9\u4e9b\u89e3\u6790\u4e3a\u53c2\u6570\u3002 client = carla.Client('localhost', 2000) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u4f7f\u7528\u672c\u5730\u4e3b\u673a IP \u548c\u7aef\u53e3 2000 \u8fdb\u884c\u8fde\u63a5\uff0c\u4f46\u8fd9\u4e9b\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u7aef\u53e3\u59cb\u7ec8\u4e3a n+1 ,2001\u3002 \u521b\u5efa\u5ba2\u6237\u7aef\u540e\uff0c\u8bbe\u7f6e\u5176 time-out \u3002\u8fd9\u9650\u5236\u4e86\u6240\u6709\u7f51\u7edc\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u8fd9\u4e9b\u64cd\u4f5c\u4e0d\u4f1a\u6c38\u8fdc\u963b\u6b62\u5ba2\u6237\u7aef\u3002\u5982\u679c\u8fde\u63a5\u5931\u8d25\uff0c\u5c06\u8fd4\u56de\u9519\u8bef\u3002 client.set_timeout(10.0) # \u79d2 \u53ef\u4ee5\u8fde\u63a5\u8bb8\u591a\u5ba2\u6237\u7aef\uff0c\u56e0\u4e3a\u4e00\u6b21\u8fd0\u884c\u591a\u4e2a\u811a\u672c\u662f\u5f88\u5e38\u89c1\u7684\u3002\u5728\u5177\u6709\u9ad8\u7ea7 CARLA \u529f\u80fd\uff08\u4f8b\u5982\u4ea4\u901a\u7ba1\u7406\u5668\uff09\u7684\u591a\u5ba2\u6237\u7aef\u65b9\u6848\u4e2d\u5de5\u4f5c\uff0c\u5fc5\u7136\u4f1a\u4f7f\u901a\u4fe1\u66f4\u52a0\u590d\u6742\u3002 \u7b14\u8bb0 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6709\u4e0d\u540c\u7684 libcarla \u6a21\u5757\u3002\u5982\u679c\u7248\u672c\u4e0d\u540c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 get_client_version() \u548c get_server_version() \u65b9\u6cd5\u8fdb\u884c\u68c0\u67e5\u3002","title":"\u5ba2\u6237\u7aef\u521b\u5efa"},{"location":"core_world/#_4","text":"\u5ba2\u6237\u7aef\u53ef\u4ee5\u76f8\u5f53\u8f7b\u677e\u5730\u8fde\u63a5\u548c\u68c0\u7d22\u5f53\u524d\u4e16\u754c\u3002 world = client.get_world() \u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u83b7\u5f97\u53ef\u7528\u5730\u56fe\u5217\u8868\u6765\u66f4\u6539\u5f53\u524d\u5730\u56fe\u3002\u8fd9\u5c06\u6467\u6bc1\u5f53\u524d\u7684\u4e16\u754c\u5e76\u521b\u9020\u4e00\u4e2a\u65b0\u7684\u4e16\u754c\u3002 print(client.get_available_maps()) ... world = client.load_world('Town01') # client.reload_world() \u521b\u5efa\u4e00\u4e2a\u76f8\u540c\u5730\u56fe\u4e16\u754c\u7684\u65b0\u5b9e\u4f8b\u3002 \u6bcf\u4e2a\u4e16\u754c\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a id \u6216\u4e16\u4ee3\u3002\u6bcf\u5f53\u5ba2\u6237\u7aef\u8c03\u7528 load_world() \u6216 reload_world() \u65f6\uff0c\u524d\u4e00\u4e2a\u88ab\u9500\u6bc1\u3002\u4e00\u4e2a\u65b0\u7684\u4e16\u4ee3\u662f\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u7684\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\u865a\u5e7b\u5f15\u64ce\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002","title":"\u4e16\u754c\u8fde\u63a5"},{"location":"core_world/#_5","text":"\u547d\u4ee4 \u662f\u4e00\u4e9b\u6700\u5e38\u89c1\u7684 CARLA \u65b9\u6cd5\u7684\u6539\u7f16\uff0c\u53ef\u4ee5\u6279\u91cf\u5e94\u7528\u3002\u4f8b\u5982\uff0c command.SetAutopilot \u76f8\u5f53\u4e8e command.SetAutopilot \uff0c\u542f\u7528\u8f66\u8f86\u7684\u81ea\u52a8\u9a7e\u9a76\u529f\u80fd\u3002\u4f46\u662f\uff0c\u4f7f\u7528 Client.apply_batch \u6216 Client.apply_batch_sync() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u4eff\u771f\u6b65\u9aa4\u4e2d\u5e94\u7528\u4e00\u7cfb\u5217\u547d\u4ee4\u3002\u8fd9\u5bf9\u4e8e\u901a\u5e38\u5e94\u7528\u4e8e\u6570\u767e\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\u6765\u8bf4\u53d8\u5f97\u975e\u5e38\u6709\u7528\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u6279\u5904\u7406\u4e00\u6b21\u6027\u9500\u6bc1\u4e00\u7cfb\u5217\u8f66\u8f86\u3002 client.apply_batch([carla.command.DestroyActor(x) for x in vehicles_list]) Python API \u53c2\u8003\u7684 \u6700\u65b0\u90e8\u5206 \u5217\u51fa\u4e86\u6240\u6709\u53ef\u7528\u7684\u547d\u4ee4\u3002","title":"\u4f7f\u7528\u547d\u4ee4"},{"location":"core_world/#_6","text":"\u5ba2\u6237\u7aef\u5bf9\u8c61\u7684\u4e3b\u8981\u76ee\u7684\u662f\u83b7\u53d6\u6216\u6539\u53d8\u4e16\u754c\uff0c\u5e76\u5e94\u7528\u547d\u4ee4\u3002\u4f46\u662f\uff0c\u5b83\u8fd8\u63d0\u4f9b\u5bf9\u4e00\u4e9b\u9644\u52a0\u529f\u80fd\u7684\u8bbf\u95ee\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u8be5\u6a21\u5757\u8d1f\u8d23\u6bcf\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u7684\u8f66\u8f86\u4ee5\u91cd\u5efa\u57ce\u5e02\u4ea4\u901a\u3002 \u8bb0\u5f55\u5668 . \u5141\u8bb8\u91cd\u65b0\u8fdb\u884c\u4ee5\u524d\u7684\u4eff\u771f\u3002\u4f7f\u7528 \u5feb\u7167 \u603b\u7ed3\u6bcf\u5e27\u7684\u4eff\u771f\u72b6\u6001\u3002","title":"\u5176\u4ed6\u5ba2\u6237\u7aef\u5b9e\u7528\u7a0b\u5e8f"},{"location":"core_world/#_7","text":"\u4eff\u771f\u7684\u4e3b\u8981\u6807\u5c3a\u3002\u5b83\u7684\u5b9e\u4f8b\u5e94\u8be5\u7531\u5ba2\u6237\u7aef\u68c0\u7d22\u3002\u5b83\u4e0d\u5305\u542b\u4e16\u754c\u672c\u8eab\u7684\u6a21\u578b\uff0c\u8fd9\u662f Map \u7c7b\u7684\u4e00\u90e8\u5206\u3002\u76f8\u53cd\uff0c\u5927\u591a\u6570\u4fe1\u606f\u548c\u5e38\u89c4\u8bbe\u7f6e\u53ef\u4ee5\u4ece\u6b64\u7c7b\u8bbf\u95ee\u3002 \u4eff\u771f\u4e2d\u7684\u53c2\u4e0e\u8005\u548c\u89c2\u5bdf\u8005\u3002 \u84dd\u56fe\u5e93\u3002 \u5730\u56fe\u3002 \u4eff\u771f\u8bbe\u7f6e\u3002 \u5feb\u7167\u3002 \u5929\u6c14\u548c\u706f\u5149\u7ba1\u7406\u5668\u3002 \u5b83\u7684\u4e00\u4e9b\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u662f getters \uff0c\u7cbe\u786e\u5730\u68c0\u7d22\u8fd9\u4e9b\u5143\u7d20\u7684\u4fe1\u606f\u6216\u5b9e\u4f8b\u3002\u67e5\u770b carla.World \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"\u4e16\u754c"},{"location":"core_world/#_8","text":"\u4e16\u754c\u4e0a\u6709\u4e0d\u540c\u7684\u4e0e\u53c2\u4e0e\u8005\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u751f\u6210\u53c2\u4e0e\u8005\uff08\u4f46\u4e0d\u6467\u6bc1\u4ed6\u4eec\uff09\u3002 \u83b7\u5f97\u573a\u666f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u53c2\u4e0e\u8005\uff0c\u6216\u8005\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u53c2\u4e0e\u8005 \u8bbf\u95ee\u84dd\u56fe\u5e93\u3002 \u8bbf\u95ee\u89c2\u5bdf\u53c2\u4e0e\u8005\u3001\u4eff\u771f\u7684\u89c6\u89d2\u3002 \u68c0\u7d22\u9002\u5408\u751f\u6210\u53c2\u4e0e\u8005\u7684\u968f\u673a\u4f4d\u7f6e\u3002 \u751f\u6210\u5c06\u5728 \u7b2c\u4e8c\u90e8\u5206\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe \u3002\u9700\u8981\u5bf9\u84dd\u56fe\u5e93\u3001\u5c5e\u6027\u7b49\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002","title":"\u53c2\u4e0e\u8005"},{"location":"core_world/#_9","text":"\u5929\u6c14\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4e2a\u7c7b\uff0c\u800c\u662f\u4e00\u7ec4\u53ef\u4ece\u4e16\u754c\u83b7\u53d6\u7684\u53c2\u6570\u3002\u53c2\u6570\u5316\u5305\u62ec\u592a\u9633\u65b9\u5411\u3001\u4e91\u91cf\u3001\u98ce\u3001\u96fe\u7b49\u7b49\u3002\u8f85\u52a9\u7c7b carla.WeatherParameters \u7528\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u5929\u6c14\u3002 weather = carla.WeatherParameters( cloudiness=80.0, precipitation=30.0, sun_altitude_angle=70.0) world.set_weather(weather) print(world.get_weather()) \u6709\u4e00\u4e9b\u5929\u6c14\u9884\u8bbe\u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u4e8e\u4e16\u754c\u3002\u8fd9\u4e9b\u5217\u5728 carla.WeatherParameters \u4e2d\u5e76\u53ef\u4f5c\u4e3a\u679a\u4e3e\u8bbf\u95ee\u3002 world.set_weather(carla.WeatherParameters.WetCloudySunset) \u8fd8\u53ef\u4ee5\u4f7f\u7528 CARLA \u63d0\u4f9b\u7684\u4e24\u4e2a\u811a\u672c\u6765\u81ea\u5b9a\u4e49\u5929\u6c14\u3002 environment.py (\u5728 PythonAPI/util \u76ee\u5f55\u4e0b) \u2014 \u63d0\u4f9b\u5bf9\u5929\u6c14\u548c\u5149\u7167\u53c2\u6570\u7684\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5b9e\u65f6\u66f4\u6539\u8fd9\u4e9b\u53c2\u6570\u3002 environment.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --sun SUN Sun position presets [sunset | day | night] --weather WEATHER Weather condition presets [clear | overcast | rain] --altitude A, -alt A Sun altitude [-90.0, 90.0] --azimuth A, -azm A Sun azimuth [0.0, 360.0] --clouds C, -c C Clouds amount [0.0, 100.0] --rain R, -r R Rain amount [0.0, 100.0] --puddles Pd, -pd Pd Puddles amount [0.0, 100.0] --wind W, -w W Wind intensity [0.0, 100.0] --fog F, -f F Fog intensity [0.0, 100.0] --fogdist Fd, -fd Fd Fog Distance [0.0, inf) --wetness Wet, -wet Wet Wetness intensity [0.0, 100.0] dynamic_weather.py (\u5728 PythonAPI/examples \u76ee\u5f55\u4e0b) \u2014 \u542f\u7528\u5f00\u53d1\u4eba\u5458\u4e3a\u6bcf\u5f20 CARLA \u5730\u56fe\u51c6\u5907\u7684\u7279\u5b9a\u5929\u6c14\u5468\u671f\u3002 dynamic_weather.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) -s FACTOR, --speed FACTOR rate at which the weather changes (default: 1.0) \u7b14\u8bb0 \u5929\u6c14\u7684\u53d8\u5316\u4e0d\u4f1a\u5f71\u54cd\u7269\u7406\u3002\u5b83\u4eec\u53ea\u662f\u76f8\u673a\u4f20\u611f\u5668\u53ef\u4ee5\u6355\u83b7\u7684\u89c6\u89c9\u6548\u679c\u3002 \u5f53 sun_altitude_angle < 0 \u65f6\uff0c\u591c\u95f4\u6a21\u5f0f\u5f00\u59cb \uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u65e5\u843d\u3002\u8fd9\u662f\u706f\u5149\u53d8\u5f97\u7279\u522b\u91cd\u8981\u7684\u65f6\u5019\u3002","title":"\u5929\u6c14"},{"location":"core_world/#_10","text":"\u5f53\u6a21\u62df\u8fdb\u5165\u591c\u95f4\u6a21\u5f0f\u65f6\uff0c \u8def\u706f \u4f1a\u81ea\u52a8\u6253\u5f00\u3002\u706f\u5149\u7531\u5730\u56fe\u5f00\u53d1\u4eba\u5458\u653e\u7f6e\uff0c\u5e76\u53ef\u4f5c\u4e3a carla.Light \u5bf9\u8c61\u8bbf\u95ee\u3002\u989c\u8272\u548c\u5f3a\u5ea6\u7b49\u5c5e\u6027\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u3002 carla.LightState \u7c7b\u578b\u7684\u53d8\u91cf light_state \u5141\u8bb8\u5728\u4e00\u6b21\u8c03\u7528\u4e2d\u8bbe\u7f6e\u6240\u6709\u8fd9\u4e9b\u3002 \u8def\u706f\u4f7f\u7528\u5176\u7c7b\u578b\u4e3a carla.LightState \u7684\u5c5e\u6027 light_state \u8fdb\u884c\u5206\u7c7b\u3002\u8fd9\u5141\u8bb8\u5c06\u706f\u5206\u7c7b\u4e3a\u8def\u706f\u3001\u5efa\u7b51\u7269\u706f...\u53ef\u4ee5\u68c0\u7d22 [ carla.LightManager ] \u7684\u5b9e\u4f8b\u6765\u5728\u4e00\u6b21\u8c03\u7528\u4e2d\u5904\u7406\u4e00\u7ec4\u706f\u3002 # \u83b7\u5f97\u706f\u5149\u7ba1\u7406\u5668\u548c\u706f\u5149 lmanager = world.get_lightmanager() mylights = lmanager.get_all_lights() # \u5b9a\u5236\u4e00\u4e2a\u7279\u5b9a\u7684\u706f\u5149 light01 = mylights[0] light01.turn_on() light01.set_intensity(100.0) state01 = carla.LightState(200.0,red,carla.LightGroup.Building,True) light01.set_light_state(state01) # \u5b9a\u5236\u4e00\u7ec4\u706f my_lights = lmanager.get_light_group(carla.LightGroup.Building) lmanager.turn_on(my_lights) lmanager.set_color(my_lights,carla.Color(255,0,0)) lmanager.set_intensities(my_lights,list_of_intensities) \u8f66\u706f \u5fc5\u987b\u7531\u7528\u6237\u6253\u5f00/\u5173\u95ed\u3002\u6bcf\u8f86\u8f66\u90fd\u6709\u4e00\u7ec4\u5728 carla.VehicleLightState \u4e2d\u5217\u51fa\u7684\u706f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5e76\u975e\u6240\u6709\u8f66\u8f86\u90fd\u96c6\u6210\u4e86\u8f66\u706f\u3002\u4ee5\u4e0b\u662f\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\u53ef\u7528\u7684\u5217\u8868\u3002 \u81ea\u884c\u8f66\u3002 \u5b83\u4eec\u90fd\u6709\u524d\u540e\u793a\u5ed3\u706f\u3002 \u6469\u6258\u8f66\u3002 \u96c5\u9a6c\u54c8\u548c\u54c8\u96f7\u6234\u7ef4\u68ee\u578b\u53f7\u3002 \u6c7d\u8f66\u3002 \u5965\u8fea TT\u3001\u96ea\u4f5b\u5170\u3001\u9053\u5947\uff08\u8b66\u8f66\uff09\u3001\u94b0\u521b\u3001\u6797\u80af\u3001\u91ce\u9a6c\u3001\u7279\u65af\u62c93S\u3001\u5927\u4f17T2\u4ee5\u53ca\u5373\u5c06\u5230\u6765\u7684 Carla \u65b0\u5ba2\u4eba\u3002 \u53ef\u4ee5\u4f7f\u7528 carla.Vehicle.get_light_state \u548c carla.Vehicle.set_light_state \u65b9\u6cd5\u968f\u65f6\u68c0\u7d22\u548c\u66f4\u65b0\u8f66\u8f86\u7684\u706f\u5149\u3002\u5b83\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6765\u81ea\u5b9a\u4e49\u706f\u5149\u8bbe\u7f6e\u3002 # \u6253\u5f00\u4f4d\u7f6e\u706f current_lights = carla.VehicleLightState.NONE current_lights |= carla.VehicleLightState.Position vehicle.set_light_state(current_lights) \u7b14\u8bb0 \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5929\u6c14 environment.py \u90e8\u5206\u4e2d\u63cf\u8ff0\u7684\u5b9e\u65f6\u8bbe\u7f6e\u706f\u5149\u3002","title":"\u706f\u5149"},{"location":"core_world/#_11","text":"\u4e16\u754c\u5bf9\u8c61\u6709\u4e00\u4e2a carla.DebugHelper \u5bf9\u8c61\u4f5c\u4e3a\u516c\u5171\u5c5e\u6027\u3002\u5b83\u5141\u8bb8\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7ed8\u5236\u4e0d\u540c\u7684\u5f62\u72b6\u3002\u8fd9\u4e9b\u7528\u4e8e\u8ddf\u8e2a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u5728\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u5904\u7ed8\u5236\u4e00\u4e2a\u7ea2\u8272\u6846\u3002 debug = world.debug debug.draw_box(carla.BoundingBox(actor_snapshot.get_transform().location,carla.Vector3D(0.5,0.5,2)),actor_snapshot.get_transform().rotation, 0.05, carla.Color(255,0,0,0),0) \u6b64\u793a\u4f8b\u5728 carla.DebugHelper \u7684\u7247\u6bb5\u4e2d\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4e3a\u4e16\u754c\u5feb\u7167\u4e2d\u7684\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7ed8\u5236\u65b9\u6846\u3002","title":"\u8c03\u8bd5"},{"location":"core_world/#_12","text":"\u5305\u542b\u4eff\u771f\u4e2d\u6bcf\u4e2a\u53c2\u4e0e\u8005\u5728\u5355\u4e2a\u5e27\u4e2d\u7684\u72b6\u6001\u3002\u4e00\u79cd\u5e26\u6709\u65f6\u95f4\u53c2\u8003\u7684\u9759\u6001\u4e16\u754c\u56fe\u50cf\u3002\u5373\u4f7f\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\uff0c\u4fe1\u606f\u4e5f\u6765\u81ea\u76f8\u540c\u7684\u4eff\u771f\u6b65\u9aa4\u3002 # \u68c0\u7d22\u5f53\u524d\u5e27\u7684\u4e16\u754c\u5feb\u7167\u3002 world_snapshot = world.get_snapshot() carla.WorldSnapshot \u5305\u542b carla.Timestamp \u548c carla.ActorSnapshot \u5217\u8868\u3002\u53ef\u4ee5\u4f7f\u7528\u53c2\u4e0e\u8005 id \u7684\u641c\u7d22\u53c2\u4e0e\u8005\u5feb\u7167\u3002\u5feb\u7167\u5217\u51fa\u4e86\u5176\u4e2d\u51fa\u73b0\u7684\u53c2\u4e0e\u8005 id \u3002 timestamp = world_snapshot.timestamp # \u83b7\u53d6\u65f6\u95f4\u53c2\u8003 for actor_snapshot in world_snapshot: # \u83b7\u53d6\u53c2\u4e0e\u8005\u548c\u5feb\u7167\u4fe1\u606f actual_actor = world.get_actor(actor_snapshot.id) actor_snapshot.get_transform() actor_snapshot.get_velocity() actor_snapshot.get_angular_velocity() actor_snapshot.get_acceleration() actor_snapshot = world_snapshot.find(actual_actor.id) # \u83b7\u5f97\u53c2\u4e0e\u8005\u5feb\u7167","title":"\u4e16\u754c\u5feb\u7167"},{"location":"core_world/#_13","text":"\u4e16\u754c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u9ad8\u7ea7\u7684\u4eff\u771f\u914d\u7f6e\u3002\u8fd9\u4e9b\u51b3\u5b9a\u4e86\u6e32\u67d3\u6761\u4ef6\u3001\u4eff\u771f\u65f6\u95f4\u6b65\u957f\u4ee5\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u540c\u6b65\u3002\u5b83\u4eec\u53ef\u4ee5\u4ece\u8f85\u52a9\u7c7b carla.WorldSettings \u8bbf\u95ee\u3002 \u76ee\u524d\uff0c\u9ed8\u8ba4\u7684 CARLA \u4ee5\u6700\u4f73\u56fe\u5f62\u8d28\u91cf\u3001\u53ef\u53d8\u65f6\u95f4\u6b65\u957f\u548c\u5f02\u6b65\u65b9\u5f0f\u8fd0\u884c\u3002\u8981\u8fdb\u4e00\u6b65\u6df1\u5165\u4e86\u89e3\u6b64\u95ee\u9898\uff0c\u8bf7\u67e5\u770b \u9ad8\u7ea7\u6b65\u9aa4 \u90e8\u5206\u3002\u6709\u5173 \u540c\u6b65\u3001\u65f6\u95f4\u6b65\u957f \u4ee5\u53ca \u6e32\u67d3\u9009\u9879 \u7684\u9875\u9762\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002 \u8fd9\u662f\u5bf9\u4e16\u754c\u548c\u5ba2\u6237\u7aef\u5bf9\u8c61\u7684\u5305\u88c5\u3002\u4e0b\u4e00\u6b65\u5c06\u4ed4\u7ec6\u7814\u7a76\u53c2\u4e0e\u8005\u548c\u84dd\u56fe\uff0c\u4e3a\u6a21\u62df\u8d4b\u4e88\u751f\u547d\u3002 \u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u8bbf\u95ee\u8bba\u575b\uff0c\u53d1\u8868\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 Carla \u8bba\u575b \u7b2c\u4e8c\u3001\u53c2\u4e0e\u8005\u548c\u84dd\u56fe","title":"\u4e16\u754c\u8bbe\u7f6e"},{"location":"custom_assets_tutorials/","text":"\u81ea\u5b9a\u4e49\u8d44\u4ea7 Carla \u62e5\u6709\u5927\u91cf\u5f00\u7bb1\u5373\u7528\u7684\u8d44\u4ea7\uff0c\u5305\u62ec\u5b8c\u6574\u7684\u57ce\u9547\u548c\u57ce\u5e02\u4ee5\u53ca\u9053\u8def\u7f51\u7edc\u3001\u5efa\u7b51\u7269\u548c\u57fa\u7840\u8bbe\u65bd\u3001\u8f66\u8f86\u548c\u884c\u4eba\uff0c\u4ee5\u586b\u5145\u60a8\u7684\u4eff\u771f\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u80fd\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u8d44\u4ea7\uff0c\u800c Carla \u5b8c\u5168\u6709\u80fd\u529b\u52a0\u8f7d\u5b8c\u5168\u7531\u7528\u6237\u521b\u5efa\u7684\u65b0\u8d44\u4ea7\uff0c\u4ee5\u5b9e\u73b0\u6700\u5927\u7684\u53ef\u6269\u5c55\u6027\u3002 \u4ee5\u4e0b\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u8d44\u4ea7\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 Carla \u7684\u591a\u79cd\u6280\u672f\u3002 \u6dfb\u52a0\u9053\u5177 \u6dfb\u52a0\u8f66\u8f86 \u6253\u5305\u8d44\u4ea7 \u5b9a\u5236\u6750\u6599 \u6dfb\u52a0\u9053\u5177 \u9053\u5177\u662f\u573a\u666f\u4e2d\u9664\u9053\u8def\u548c\u8f66\u8f86\u4e4b\u5916\u7684\u8d44\u4ea7\u3002\u5176\u4e2d\u5305\u62ec\u8def\u706f\u3001\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\u7b49\u3002\u4eff\u771f\u5668\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u7b80\u5355\u7684\u8fc7\u7a0b\u5bfc\u5165\u65b0\u9053\u5177\u3002\u8fd9\u5bf9\u4e8e\u5728\u5730\u56fe\u4e2d\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\u975e\u5e38\u6709\u7528\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa\u548c\u5305\u542b\u81ea\u5b9a\u4e49\u9053\u5177\u3002 \u6dfb\u52a0\u8f66\u8f86 \u8f66\u8f86\u662f Carla \u7684\u652f\u67f1\u3002\u5b83\u4eec\u7528\u4e8e\u4eff\u771f\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\uff0c\u5e76\u5145\u5f53\u81ea\u52a8\u4ee3\u7406\u63a7\u5236\u7684\u8f66\u8f86\u7684\u865a\u62df\u4eff\u771f\u3002Carla \u62e5\u6709\u4e00\u4e2a\u5e9e\u5927\u4e14\u4e0d\u65ad\u589e\u957f\u7684\u5f00\u7bb1\u5373\u7528\u8f66\u8f86\u5e93\uff0c\u4f46\u5bf9\u4e8e\u7279\u6b8a\u5e94\u7528\uff0cCarla \u80fd\u591f\u88c5\u8f7d\u5b9a\u5236\u8bbe\u8ba1\u7684\u8f66\u8f86\u3002 \u672c\u6587\u6863 \u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u521b\u5efa\u548c\u5bfc\u5165\u81ea\u5b9a\u4e49\u8f66\u8f86\u3002 \u6253\u5305\u8d44\u4ea7 \u4f7f\u7528\u72ec\u7acb\u5305\u7ba1\u7406\u8d44\u4ea7\u662f Carla \u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8fb9\u53ef\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u53ef\u4ee5\u968f\u65f6\u8f7b\u677e\u5bfc\u5165\u5230 CARLA \u5305\u4e2d\u3002\u5b83\u4eec\u5bf9\u4e8e\u4ee5\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u8f7b\u677e\u5206\u914d\u8d44\u4ea7\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u6253\u5305\u8d44\u6e90\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002 \u5b9a\u5236\u6750\u6599 CARLA \u56e2\u961f\u51c6\u5907\u6bcf\u4e2a\u8d44\u4ea7\u5728\u67d0\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u6700\u9002\u5408\u4ed6\u4eec\u7684\u9700\u6c42\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002","title":"\u81ea\u5b9a\u4e49\u8d44\u4ea7"},{"location":"custom_assets_tutorials/#_1","text":"Carla \u62e5\u6709\u5927\u91cf\u5f00\u7bb1\u5373\u7528\u7684\u8d44\u4ea7\uff0c\u5305\u62ec\u5b8c\u6574\u7684\u57ce\u9547\u548c\u57ce\u5e02\u4ee5\u53ca\u9053\u8def\u7f51\u7edc\u3001\u5efa\u7b51\u7269\u548c\u57fa\u7840\u8bbe\u65bd\u3001\u8f66\u8f86\u548c\u884c\u4eba\uff0c\u4ee5\u586b\u5145\u60a8\u7684\u4eff\u771f\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u80fd\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u8d44\u4ea7\uff0c\u800c Carla \u5b8c\u5168\u6709\u80fd\u529b\u52a0\u8f7d\u5b8c\u5168\u7531\u7528\u6237\u521b\u5efa\u7684\u65b0\u8d44\u4ea7\uff0c\u4ee5\u5b9e\u73b0\u6700\u5927\u7684\u53ef\u6269\u5c55\u6027\u3002 \u4ee5\u4e0b\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u8d44\u4ea7\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 Carla \u7684\u591a\u79cd\u6280\u672f\u3002 \u6dfb\u52a0\u9053\u5177 \u6dfb\u52a0\u8f66\u8f86 \u6253\u5305\u8d44\u4ea7 \u5b9a\u5236\u6750\u6599","title":"\u81ea\u5b9a\u4e49\u8d44\u4ea7"},{"location":"custom_assets_tutorials/#_2","text":"\u9053\u5177\u662f\u573a\u666f\u4e2d\u9664\u9053\u8def\u548c\u8f66\u8f86\u4e4b\u5916\u7684\u8d44\u4ea7\u3002\u5176\u4e2d\u5305\u62ec\u8def\u706f\u3001\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\u7b49\u3002\u4eff\u771f\u5668\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u7b80\u5355\u7684\u8fc7\u7a0b\u5bfc\u5165\u65b0\u9053\u5177\u3002\u8fd9\u5bf9\u4e8e\u5728\u5730\u56fe\u4e2d\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\u975e\u5e38\u6709\u7528\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa\u548c\u5305\u542b\u81ea\u5b9a\u4e49\u9053\u5177\u3002","title":"\u6dfb\u52a0\u9053\u5177"},{"location":"custom_assets_tutorials/#_3","text":"\u8f66\u8f86\u662f Carla \u7684\u652f\u67f1\u3002\u5b83\u4eec\u7528\u4e8e\u4eff\u771f\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\uff0c\u5e76\u5145\u5f53\u81ea\u52a8\u4ee3\u7406\u63a7\u5236\u7684\u8f66\u8f86\u7684\u865a\u62df\u4eff\u771f\u3002Carla \u62e5\u6709\u4e00\u4e2a\u5e9e\u5927\u4e14\u4e0d\u65ad\u589e\u957f\u7684\u5f00\u7bb1\u5373\u7528\u8f66\u8f86\u5e93\uff0c\u4f46\u5bf9\u4e8e\u7279\u6b8a\u5e94\u7528\uff0cCarla \u80fd\u591f\u88c5\u8f7d\u5b9a\u5236\u8bbe\u8ba1\u7684\u8f66\u8f86\u3002 \u672c\u6587\u6863 \u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u521b\u5efa\u548c\u5bfc\u5165\u81ea\u5b9a\u4e49\u8f66\u8f86\u3002","title":"\u6dfb\u52a0\u8f66\u8f86"},{"location":"custom_assets_tutorials/#_4","text":"\u4f7f\u7528\u72ec\u7acb\u5305\u7ba1\u7406\u8d44\u4ea7\u662f Carla \u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8fb9\u53ef\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u53ef\u4ee5\u968f\u65f6\u8f7b\u677e\u5bfc\u5165\u5230 CARLA \u5305\u4e2d\u3002\u5b83\u4eec\u5bf9\u4e8e\u4ee5\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u8f7b\u677e\u5206\u914d\u8d44\u4ea7\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u6253\u5305\u8d44\u6e90\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002","title":"\u6253\u5305\u8d44\u4ea7"},{"location":"custom_assets_tutorials/#_5","text":"CARLA \u56e2\u961f\u51c6\u5907\u6bcf\u4e2a\u8d44\u4ea7\u5728\u67d0\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u6700\u9002\u5408\u4ed6\u4eec\u7684\u9700\u6c42\u3002 \u672c\u6587\u6863 \u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002","title":"\u5b9a\u5236\u6750\u6599"},{"location":"development_tutorials/","text":"\u5f00\u53d1 Carla \u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u5177\u6709\u9ad8\u5ea6\u53ef\u6269\u5c55\u6027\u3002\u8fd9\u5141\u8bb8\u7528\u6237\u521b\u5efa\u81ea\u5b9a\u4e49\u529f\u80fd\u6216\u5185\u5bb9\u4ee5\u6ee1\u8db3\u4e13\u95e8\u5e94\u7528\u7a0b\u5e8f\u6216\u7279\u5b9a\u9700\u6c42\u3002\u4ee5\u4e0b\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Carla \u4ee3\u7801\u5e93\u5b9e\u73b0\u7279\u5b9a\u7684\u5f00\u53d1\u76ee\u6807\uff1a \u8fdb\u884c\u53d1\u5e03 \u5347\u7ea7\u5185\u5bb9 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u521b\u5efa\u65b0\u4f20\u611f\u5668 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f \u78b0\u649e\u8fb9\u754c \u8fdb\u884c\u53d1\u5e03 \u5982\u679c\u60a8\u60f3\u5f00\u53d1\u81ea\u5df1\u7684 Carla \u5206\u652f\u5e76\u53d1\u5e03\u4ee3\u7801\u7248\u672c\uff0c\u8bf7\u9075\u5faa \u672c\u6307\u5357 \u3002 \u5347\u7ea7\u5185\u5bb9 \u6211\u4eec\u7684\u5185\u5bb9\u9a7b\u7559\u5728\u5355\u72ec\u7684 Git LFS \u5b58\u50a8\u5e93\u4e2d\u3002\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u751f\u6210\u5e76\u4e0a\u4f20\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5e26\u6709\u5f53\u524d\u65e5\u671f\u548c\u63d0\u4ea4\u6807\u8bb0\u7684\u8be5\u5185\u5bb9\u7684\u6700\u65b0\u7248\u672c\u3002\u6211\u4eec\u5b9a\u671f\u5347\u7ea7 Carla \u5b58\u50a8\u5e93\uff0c\u5e76\u63d0\u4f9b\u6700\u65b0\u7248\u672c\u5185\u5bb9\u5305\u7684\u94fe\u63a5\u3002\u8bf7\u6309\u7167 \u8fd9\u4e9b\u8bf4\u660e \u5347\u7ea7\u5185\u5bb9\u3002 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e Carla \u6709\u4e00\u7ec4\u5df2\u5b9a\u4e49\u7684\u8bed\u4e49\u6807\u7b7e\uff0c\u9002\u5408\u5927\u591a\u6570\u7528\u4f8b\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u9700\u8981\u5176\u4ed6\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6309\u7167 \u672c\u6307\u5357 \u4e2d\u7684\u8be6\u7ec6\u8bf4\u660e\u6dfb\u52a0\u5b83\u4eec\u3002 \u521b\u5efa\u65b0\u4f20\u611f\u5668 \u60a8\u53ef\u4ee5\u4fee\u6539 Carla \u7684 C++ \u4ee3\u7801\u6765\u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u7528\u4f8b\u521b\u5efa\u65b0\u7684\u4f20\u611f\u5668\u3002\u8bf7\u5728 \u6b64\u5904 \u67e5\u627e\u8be6\u7ec6\u4fe1\u606f\u3002 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 Carla \u6709\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\uff0c\u53ef\u5e2e\u52a9\u5bf9\u7cfb\u7edf\u6027\u80fd\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f \u6709\u5173\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6b64\u5904 \u3002 \u751f\u6210\u78b0\u649e\u8fb9\u754c \u6709\u5173\u4e3a\u8f66\u8f86\u751f\u6210\u66f4\u51c6\u786e\u7684\u78b0\u649e\u8fb9\u754c\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u672c\u6307\u5357 \u3002","title":"\u5f00\u53d1"},{"location":"development_tutorials/#_1","text":"Carla \u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u5177\u6709\u9ad8\u5ea6\u53ef\u6269\u5c55\u6027\u3002\u8fd9\u5141\u8bb8\u7528\u6237\u521b\u5efa\u81ea\u5b9a\u4e49\u529f\u80fd\u6216\u5185\u5bb9\u4ee5\u6ee1\u8db3\u4e13\u95e8\u5e94\u7528\u7a0b\u5e8f\u6216\u7279\u5b9a\u9700\u6c42\u3002\u4ee5\u4e0b\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Carla \u4ee3\u7801\u5e93\u5b9e\u73b0\u7279\u5b9a\u7684\u5f00\u53d1\u76ee\u6807\uff1a \u8fdb\u884c\u53d1\u5e03 \u5347\u7ea7\u5185\u5bb9 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u521b\u5efa\u65b0\u4f20\u611f\u5668 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f \u78b0\u649e\u8fb9\u754c","title":"\u5f00\u53d1"},{"location":"development_tutorials/#_2","text":"\u5982\u679c\u60a8\u60f3\u5f00\u53d1\u81ea\u5df1\u7684 Carla \u5206\u652f\u5e76\u53d1\u5e03\u4ee3\u7801\u7248\u672c\uff0c\u8bf7\u9075\u5faa \u672c\u6307\u5357 \u3002","title":"\u8fdb\u884c\u53d1\u5e03"},{"location":"development_tutorials/#_3","text":"\u6211\u4eec\u7684\u5185\u5bb9\u9a7b\u7559\u5728\u5355\u72ec\u7684 Git LFS \u5b58\u50a8\u5e93\u4e2d\u3002\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u751f\u6210\u5e76\u4e0a\u4f20\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5e26\u6709\u5f53\u524d\u65e5\u671f\u548c\u63d0\u4ea4\u6807\u8bb0\u7684\u8be5\u5185\u5bb9\u7684\u6700\u65b0\u7248\u672c\u3002\u6211\u4eec\u5b9a\u671f\u5347\u7ea7 Carla \u5b58\u50a8\u5e93\uff0c\u5e76\u63d0\u4f9b\u6700\u65b0\u7248\u672c\u5185\u5bb9\u5305\u7684\u94fe\u63a5\u3002\u8bf7\u6309\u7167 \u8fd9\u4e9b\u8bf4\u660e \u5347\u7ea7\u5185\u5bb9\u3002","title":"\u5347\u7ea7\u5185\u5bb9"},{"location":"development_tutorials/#_4","text":"Carla \u6709\u4e00\u7ec4\u5df2\u5b9a\u4e49\u7684\u8bed\u4e49\u6807\u7b7e\uff0c\u9002\u5408\u5927\u591a\u6570\u7528\u4f8b\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u9700\u8981\u5176\u4ed6\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6309\u7167 \u672c\u6307\u5357 \u4e2d\u7684\u8be6\u7ec6\u8bf4\u660e\u6dfb\u52a0\u5b83\u4eec\u3002","title":"\u521b\u5efa\u8bed\u4e49\u6807\u7b7e"},{"location":"development_tutorials/#_5","text":"\u60a8\u53ef\u4ee5\u4fee\u6539 Carla \u7684 C++ \u4ee3\u7801\u6765\u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u7528\u4f8b\u521b\u5efa\u65b0\u7684\u4f20\u611f\u5668\u3002\u8bf7\u5728 \u6b64\u5904 \u67e5\u627e\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u521b\u5efa\u65b0\u4f20\u611f\u5668"},{"location":"development_tutorials/#_6","text":"Carla \u6709\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u811a\u672c\uff0c\u53ef\u5e2e\u52a9\u5bf9\u7cfb\u7edf\u6027\u80fd\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u5728 \u8fd9\u91cc \u627e\u5230\u5b8c\u6574\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5"},{"location":"development_tutorials/#_7","text":"\u6709\u5173\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u6b64\u5904 \u3002","title":"\u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f"},{"location":"development_tutorials/#_8","text":"\u6709\u5173\u4e3a\u8f66\u8f86\u751f\u6210\u66f4\u51c6\u786e\u7684\u78b0\u649e\u8fb9\u754c\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u672c\u6307\u5357 \u3002","title":"\u751f\u6210\u78b0\u649e\u8fb9\u754c"},{"location":"download/","text":"\u4e0b\u8f7d \u6700\u65b0\u53d1\u5e03 CARLA 0.9.15 - \u6587\u6863 \u6bcf\u665a\u6784\u5efa \u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u6784\u5efa\uff0c\u6700\u65b0\u7684\u66f4\u6539\u5df2\u63a8\u9001\u5230\u6211\u4eec\u7684 dev \u5206\u652f\u3002\u5b83\u5305\u542b\u5c06\u6210\u4e3a\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u4e00\u90e8\u5206\u7684\u6700\u65b0\u4fee\u590d\u548c\u529f\u80fd\uff0c\u4f46\u4e5f\u5305\u542b\u4e00\u4e9b\u5b9e\u9a8c\u6027\u66f4\u6539\u3002\u4f7f\u7528\u98ce\u9669\u81ea\u8d1f\uff01 CARLA \u6bcf\u665a\u6784\u5efa (Linux) \u9644\u52a0\u5730\u56fe\u591c\u95f4\u6784\u5efa (Linux) CARLA \u6bcf\u665a\u6784\u5efa\uff08Windows\uff09 \u9644\u52a0\u5730\u56fe\u6bcf\u665a\u6784\u5efa (Windows) \u7248\u672c 0.9.x \u4ee5\u4e0b\u662f CARLA \u7684\u5148\u524d\u7248\u672c\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u7248\u672c\u7684\u7279\u5b9a\u6587\u6863\u7684\u94fe\u63a5\uff1a CARLA 0.9.14 - \u6587\u6863 CARLA 0.9.13 - \u6587\u6863 CARLA 0.9.12 - \u6587\u6863 CARLA 0.9.11 - \u6587\u6863 CARLA 0.9.10 - \u6587\u6863 CARLA 0.9.9 - \u6587\u6863 CARLA 0.9.8 - \u6587\u6863 CARLA 0.9.7 - \u6587\u6863 CARLA 0.9.6 - \u6587\u6863 CARLA 0.9.5 - \u6587\u6863 CARLA 0.9.4 - \u6587\u6863 CARLA 0.9.3 - \u6587\u6863 CARLA 0.9.2 - \u6587\u6863 CARLA 0.9.1 - \u6587\u6863 CARLA 0.9.0 - \u6587\u6863 Versions 0.8.x CARLA 0.8.4 - \u6587\u6863 CARLA 0.8.3 CARLA 0.8.2 - \u6587\u6863 Docker \u6240\u6709\u7248\u672c\u90fd\u53ef\u4ee5\u4ece DockerHub \u4e2d\u83b7\u53d6\uff1a docker pull carlasim/carla:X.X.X \u4f7f\u7528\u6807\u7b7e\u201clatest\u201d\u8868\u793a\u6700\u65b0\u7248\u672c\uff1a docker pull carlasim/carla:latest","title":"\u4e0b\u8f7d"},{"location":"download/#_1","text":"","title":"\u4e0b\u8f7d"},{"location":"download/#_2","text":"CARLA 0.9.15 - \u6587\u6863","title":"\u6700\u65b0\u53d1\u5e03"},{"location":"download/#_3","text":"\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u6784\u5efa\uff0c\u6700\u65b0\u7684\u66f4\u6539\u5df2\u63a8\u9001\u5230\u6211\u4eec\u7684 dev \u5206\u652f\u3002\u5b83\u5305\u542b\u5c06\u6210\u4e3a\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u4e00\u90e8\u5206\u7684\u6700\u65b0\u4fee\u590d\u548c\u529f\u80fd\uff0c\u4f46\u4e5f\u5305\u542b\u4e00\u4e9b\u5b9e\u9a8c\u6027\u66f4\u6539\u3002\u4f7f\u7528\u98ce\u9669\u81ea\u8d1f\uff01 CARLA \u6bcf\u665a\u6784\u5efa (Linux) \u9644\u52a0\u5730\u56fe\u591c\u95f4\u6784\u5efa (Linux) CARLA \u6bcf\u665a\u6784\u5efa\uff08Windows\uff09 \u9644\u52a0\u5730\u56fe\u6bcf\u665a\u6784\u5efa (Windows)","title":"\u6bcf\u665a\u6784\u5efa"},{"location":"download/#09x","text":"\u4ee5\u4e0b\u662f CARLA \u7684\u5148\u524d\u7248\u672c\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u7248\u672c\u7684\u7279\u5b9a\u6587\u6863\u7684\u94fe\u63a5\uff1a CARLA 0.9.14 - \u6587\u6863 CARLA 0.9.13 - \u6587\u6863 CARLA 0.9.12 - \u6587\u6863 CARLA 0.9.11 - \u6587\u6863 CARLA 0.9.10 - \u6587\u6863 CARLA 0.9.9 - \u6587\u6863 CARLA 0.9.8 - \u6587\u6863 CARLA 0.9.7 - \u6587\u6863 CARLA 0.9.6 - \u6587\u6863 CARLA 0.9.5 - \u6587\u6863 CARLA 0.9.4 - \u6587\u6863 CARLA 0.9.3 - \u6587\u6863 CARLA 0.9.2 - \u6587\u6863 CARLA 0.9.1 - \u6587\u6863 CARLA 0.9.0 - \u6587\u6863","title":"\u7248\u672c 0.9.x"},{"location":"download/#versions-08x","text":"CARLA 0.8.4 - \u6587\u6863 CARLA 0.8.3 CARLA 0.8.2 - \u6587\u6863","title":"Versions 0.8.x"},{"location":"download/#docker","text":"\u6240\u6709\u7248\u672c\u90fd\u53ef\u4ee5\u4ece DockerHub \u4e2d\u83b7\u53d6\uff1a docker pull carlasim/carla:X.X.X \u4f7f\u7528\u6807\u7b7e\u201clatest\u201d\u8868\u793a\u6700\u65b0\u7248\u672c\uff1a docker pull carlasim/carla:latest","title":"Docker"},{"location":"ecosys_ansys/","text":"Ansys \u5b9e\u65f6\u96f7\u8fbe\u6a21\u578b\uff1a\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8f66\u8f86\u7eb5\u5411\u63a7\u5236\u5668 \u5728 2021 \u5e74 4 \u6708\u7684\u7f51\u7edc\u7814\u8ba8\u4f1a\u7cfb\u5217\u4e2d\uff0c Ansys \u8be6\u7ec6\u4ecb\u7ecd\u4e86 Ansys \u5b9e\u65f6\u96f7\u8fbe (Real Time Radar, RTR) \u4e0e CARLA \u4eff\u771f\u5668\u7684\u96c6\u6210\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5e76\u67e5\u770b\u7f51\u7edc\u7814\u8ba8\u4f1a\u9644\u5e26\u7684\u6f14\u793a\u5e7b\u706f\u7247\u548c\u89c6\u9891\u3002 \u8be5\u6f14\u793a\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5b9e\u65f6\u96f7\u8fbe\u5982\u4f55\u4e0e Carla \u96c6\u6210\uff0c\u4ee5\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8f66\u8f86\u7eb5\u5411\u63a7\u5236\u5668\uff0c\u5e76\u5305\u62ec\u6240\u4f7f\u7528\u7684\u6a21\u578b\u3001\u52a8\u4f5c\u7a7a\u95f4\u548c\u5956\u52b1\u7b56\u7565\u3002\u89c6\u9891\u663e\u793a\u4e86 Carla \u4eff\u771f\u5668\u4e2d\u7684\u8bad\u7ec3\u7ed3\u679c\u3002 \u8bf7\u5728 \u6b64\u5904 \u67e5\u770b\u6f14\u793a\u6587\u7a3f\u5e76\u5728 \u6b64\u5904 \u67e5\u770b\u89c6\u9891\u3002","title":"Ansys \u5b9e\u65f6\u96f7\u8fbe\u6a21\u578b"},{"location":"ecosys_ansys/#ansys","text":"\u5728 2021 \u5e74 4 \u6708\u7684\u7f51\u7edc\u7814\u8ba8\u4f1a\u7cfb\u5217\u4e2d\uff0c Ansys \u8be6\u7ec6\u4ecb\u7ecd\u4e86 Ansys \u5b9e\u65f6\u96f7\u8fbe (Real Time Radar, RTR) \u4e0e CARLA \u4eff\u771f\u5668\u7684\u96c6\u6210\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u5e76\u67e5\u770b\u7f51\u7edc\u7814\u8ba8\u4f1a\u9644\u5e26\u7684\u6f14\u793a\u5e7b\u706f\u7247\u548c\u89c6\u9891\u3002 \u8be5\u6f14\u793a\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5b9e\u65f6\u96f7\u8fbe\u5982\u4f55\u4e0e Carla \u96c6\u6210\uff0c\u4ee5\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8f66\u8f86\u7eb5\u5411\u63a7\u5236\u5668\uff0c\u5e76\u5305\u62ec\u6240\u4f7f\u7528\u7684\u6a21\u578b\u3001\u52a8\u4f5c\u7a7a\u95f4\u548c\u5956\u52b1\u7b56\u7565\u3002\u89c6\u9891\u663e\u793a\u4e86 Carla \u4eff\u771f\u5668\u4e2d\u7684\u8bad\u7ec3\u7ed3\u679c\u3002 \u8bf7\u5728 \u6b64\u5904 \u67e5\u770b\u6f14\u793a\u6587\u7a3f\u5e76\u5728 \u6b64\u5904 \u67e5\u770b\u89c6\u9891\u3002","title":"Ansys \u5b9e\u65f6\u96f7\u8fbe\u6a21\u578b\uff1a\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u8f66\u8f86\u7eb5\u5411\u63a7\u5236\u5668"},{"location":"ecosys_ros/","text":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08Robotic Operating System, ROS\uff09 \u662f\u4e00\u7ec4\u7528\u4e8e\u673a\u5668\u4eba\u548c\u81ea\u52a8\u9a7e\u9a76\u5e94\u7528\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u5e93\u3002Carla \u53ef\u4ee5\u901a\u8fc7\u5176 ROS \u63a5\u53e3\u76f4\u63a5\u8fde\u63a5\u5230 ROS\uff0c\u63a7\u5236\u4fe1\u53f7\u53ef\u4ee5\u53d1\u9001\u5230 Carla \u53c2\u4e0e\u8005\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 ROS \u4e3b\u9898\u8bbf\u95ee\u4f20\u611f\u5668\u6570\u636e\u3002 \u8fde\u63a5 Carla \u548c ROS \u6709\u4e24\u79cd\u9009\u62e9\u3002 Carla \u539f\u751f\u63a5\u53e3 : \u76f4\u63a5\u6784\u5efa\u5230 Carla \u670d\u52a1\u5668\u4e2d\u7684 ROS \u63a5\u53e3 ROS \u6865 : \u4e00\u4e2a\u5355\u72ec\u7684\u5e93\uff0c\u7528\u4e8e\u5728 ROS \u548c Carla \u4e4b\u95f4\u4f20\u8f93\u4fe1\u53f7 CARLA \u7684\u539f\u751f ROS \u63a5\u53e3 \u8fd9\u662f\u63a8\u8350\u7684\u63a5\u53e3\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u6700\u4f73\u6027\u80fd\u548c\u6700\u4f4e\u5ef6\u8fdf\u3002\u76ee\u524d\u672c\u673a\u63a5\u53e3\u4ec5\u652f\u6301 ROS 2\u3002\u5982\u679c\u60a8\u4f7f\u7528 ROS 1\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 ROS \u6865\u3002 CARLA ROS \u6865 CARLA ROS \u6865 \u662f\u4e00\u4e2a\u7528\u4e8e\u5c06 ROS \u8fde\u63a5\u5230 CARLA \u7684\u5e93\uff0c\u5b83\u4e0e ROS 1 \u548c ROS 2 \u517c\u5bb9\u3002\u7531\u4e8e CARLA ROS \u6865\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5305\uff0c\u56e0\u6b64\u4e0e\u672c\u673a\u63a5\u53e3\u76f8\u6bd4\uff0c\u5b58\u5728\u989d\u5916\u7684\u5ef6\u8fdf\u3002ROS \u6865\u4ecd\u7136\u63d0\u4f9b\u652f\u6301 ROS 1 \u548c ROS 2 \u7684\u65e7\u5b9e\u73b0\u3002","title":"Ecosys ros"},{"location":"ecosys_ros/#_1","text":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08Robotic Operating System, ROS\uff09 \u662f\u4e00\u7ec4\u7528\u4e8e\u673a\u5668\u4eba\u548c\u81ea\u52a8\u9a7e\u9a76\u5e94\u7528\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u5e93\u3002Carla \u53ef\u4ee5\u901a\u8fc7\u5176 ROS \u63a5\u53e3\u76f4\u63a5\u8fde\u63a5\u5230 ROS\uff0c\u63a7\u5236\u4fe1\u53f7\u53ef\u4ee5\u53d1\u9001\u5230 Carla \u53c2\u4e0e\u8005\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 ROS \u4e3b\u9898\u8bbf\u95ee\u4f20\u611f\u5668\u6570\u636e\u3002 \u8fde\u63a5 Carla \u548c ROS \u6709\u4e24\u79cd\u9009\u62e9\u3002 Carla \u539f\u751f\u63a5\u53e3 : \u76f4\u63a5\u6784\u5efa\u5230 Carla \u670d\u52a1\u5668\u4e2d\u7684 ROS \u63a5\u53e3 ROS \u6865 : \u4e00\u4e2a\u5355\u72ec\u7684\u5e93\uff0c\u7528\u4e8e\u5728 ROS \u548c Carla \u4e4b\u95f4\u4f20\u8f93\u4fe1\u53f7","title":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf"},{"location":"ecosys_ros/#carla-ros","text":"\u8fd9\u662f\u63a8\u8350\u7684\u63a5\u53e3\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u6700\u4f73\u6027\u80fd\u548c\u6700\u4f4e\u5ef6\u8fdf\u3002\u76ee\u524d\u672c\u673a\u63a5\u53e3\u4ec5\u652f\u6301 ROS 2\u3002\u5982\u679c\u60a8\u4f7f\u7528 ROS 1\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 ROS \u6865\u3002","title":"CARLA \u7684\u539f\u751f ROS \u63a5\u53e3"},{"location":"ecosys_ros/#carla-ros_1","text":"CARLA ROS \u6865 \u662f\u4e00\u4e2a\u7528\u4e8e\u5c06 ROS \u8fde\u63a5\u5230 CARLA \u7684\u5e93\uff0c\u5b83\u4e0e ROS 1 \u548c ROS 2 \u517c\u5bb9\u3002\u7531\u4e8e CARLA ROS \u6865\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5305\uff0c\u56e0\u6b64\u4e0e\u672c\u673a\u63a5\u53e3\u76f8\u6bd4\uff0c\u5b58\u5728\u989d\u5916\u7684\u5ef6\u8fdf\u3002ROS \u6865\u4ecd\u7136\u63d0\u4f9b\u652f\u6301 ROS 1 \u548c ROS 2 \u7684\u65e7\u5b9e\u73b0\u3002","title":"CARLA ROS \u6865"},{"location":"ext_docs/","text":"\u6269\u5c55\u6587\u6863 \u4e0b\u9762\uff0c\u60a8\u5c06\u627e\u5230\u6709\u5173 Carla \u8bb8\u591a\u5e7f\u6cdb\u529f\u80fd\u7684\u6df1\u5165\u6587\u6863\u3002 \u5148\u8fdb\u7406\u5ff5 \u8bb0\u5f55\u5668 \u2014 \u5728\u4eff\u771f\u4e2d\u6ce8\u518c\u4e8b\u4ef6\u5e76\u518d\u6b21\u64ad\u653e\u3002 \u6e32\u67d3\u9009\u9879 \u2014 \u4ece\u8d28\u91cf\u8bbe\u7f6e\u5230\u65e0\u6e32\u67d3\u6216\u79bb\u5c4f\u6a21\u5f0f\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u2014 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u901a\u4fe1\u548c\u4eff\u771f\u65f6\u95f4\u3002 \u57fa\u51c6\u6d4b\u8bd5\u6027\u80fd \u2014 \u4f7f\u7528\u6211\u4eec\u51c6\u5907\u7684\u811a\u672c\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Carla \u667a\u80fd\u4f53 \u2014 \u667a\u80fd\u4f53\u811a\u672c\u5141\u8bb8\u5355\u4e2a\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u884c\u9a76\u5230\u8bbe\u5b9a\u7684\u76ee\u7684\u5730\u3002 \u591a GPU \u2014 \u8bbe\u7f6e Carla \u4eff\u771f\u5668\u4ee5\u4f7f\u7528\u591a\u4e2a GPU \u8fdb\u884c\u5904\u7406\u3002 \u4ea4\u901a\u4eff\u771f \u4ea4\u901a\u4eff\u771f\u6982\u8ff0 \u2014 \u53ef\u7528\u4e8e\u7528\u586b\u5145\u4ea4\u901a\u573a\u666f\u7684\u4e0d\u540c\u9009\u9879\u7684\u6982\u8ff0\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u901a\u8fc7\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u6765\u4eff\u771f\u57ce\u5e02\u4ea4\u901a\u3002 \u53c2\u8003 \u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f \u2014 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u2014 \u6709\u5173\u4f20\u611f\u5668\u53ca\u5176\u68c0\u7d22\u6570\u636e\u7684\u6240\u6709\u5185\u5bb9\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe \u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u2014 \u4f7f\u7528 OpenStreetMap \u6570\u636e\u7684\u7a0b\u5e8f\u5730\u56fe\u751f\u6210\u5de5\u5177\u3002 Carla \u4e2d\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u6982\u8ff0 \u2014 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u6240\u6d89\u53ca\u7684\u8fc7\u7a0b\u548c\u9009\u9879\u7684\u6982\u8ff0\u3002 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u3002 \u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe \u5982\u4f55\u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe\u3002 \u5728 Carla \u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165\u5730\u56fe \u2014 \u5982\u4f55\u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u5165\u5730\u56fe\u3002 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u2014 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002 \u624b\u52a8\u51c6\u5907\u5730\u56fe\u5305 \u2014 \u5982\u4f55\u51c6\u5907\u7528\u4e8e\u624b\u52a8\u5bfc\u5165\u7684\u5730\u56fe\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe \u2014 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u521b\u5efa\u5b50\u56fe\u5c42\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u4ea4\u901a\u706f\u548c\u6807\u5fd7 \u2014 \u5982\u4f55\u5c06\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u9053\u8def\u753b\u5bb6 \u2014 \u5982\u4f55\u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u66f4\u6539\u9053\u8def\u7684\u5916\u89c2\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5316\u5efa\u7b51\u7269 \u2014 \u7528\u5efa\u7b51\u7269\u586b\u5145\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2 \u2014 \u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u5929\u6c14\u8d44\u6599\u5e76\u586b\u5145\u666f\u89c2\u3002 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u2014 \u83b7\u53d6\u884c\u4eba\u56db\u5904\u8d70\u52a8\u6240\u9700\u7684\u4fe1\u606f\u3002 \u5927\u5730\u56fe \u5927\u5730\u56fe\u6982\u8ff0 \u2014 \u89e3\u91ca\u5927\u5730\u56fe\u5728 Carla \u4e2d\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe\u3002 \u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5bfc\u5165\u5927\u5730\u56fe\u3002","title":"\u6269\u5c55\u6587\u6863"},{"location":"ext_docs/#_1","text":"\u4e0b\u9762\uff0c\u60a8\u5c06\u627e\u5230\u6709\u5173 Carla \u8bb8\u591a\u5e7f\u6cdb\u529f\u80fd\u7684\u6df1\u5165\u6587\u6863\u3002","title":"\u6269\u5c55\u6587\u6863"},{"location":"ext_docs/#_2","text":"\u8bb0\u5f55\u5668 \u2014 \u5728\u4eff\u771f\u4e2d\u6ce8\u518c\u4e8b\u4ef6\u5e76\u518d\u6b21\u64ad\u653e\u3002 \u6e32\u67d3\u9009\u9879 \u2014 \u4ece\u8d28\u91cf\u8bbe\u7f6e\u5230\u65e0\u6e32\u67d3\u6216\u79bb\u5c4f\u6a21\u5f0f\u3002 \u540c\u6b65\u548c\u65f6\u95f4\u6b65\u957f \u2014 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u901a\u4fe1\u548c\u4eff\u771f\u65f6\u95f4\u3002 \u57fa\u51c6\u6d4b\u8bd5\u6027\u80fd \u2014 \u4f7f\u7528\u6211\u4eec\u51c6\u5907\u7684\u811a\u672c\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Carla \u667a\u80fd\u4f53 \u2014 \u667a\u80fd\u4f53\u811a\u672c\u5141\u8bb8\u5355\u4e2a\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u6f2b\u6e38\u6216\u884c\u9a76\u5230\u8bbe\u5b9a\u7684\u76ee\u7684\u5730\u3002 \u591a GPU \u2014 \u8bbe\u7f6e Carla \u4eff\u771f\u5668\u4ee5\u4f7f\u7528\u591a\u4e2a GPU \u8fdb\u884c\u5904\u7406\u3002","title":"\u5148\u8fdb\u7406\u5ff5"},{"location":"ext_docs/#_3","text":"\u4ea4\u901a\u4eff\u771f\u6982\u8ff0 \u2014 \u53ef\u7528\u4e8e\u7528\u586b\u5145\u4ea4\u901a\u573a\u666f\u7684\u4e0d\u540c\u9009\u9879\u7684\u6982\u8ff0\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u901a\u8fc7\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\u6a21\u5f0f\u6765\u4eff\u771f\u57ce\u5e02\u4ea4\u901a\u3002","title":"\u4ea4\u901a\u4eff\u771f"},{"location":"ext_docs/#_4","text":"\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f \u2014 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u2014 \u6709\u5173\u4f20\u611f\u5668\u53ca\u5176\u68c0\u7d22\u6570\u636e\u7684\u6240\u6709\u5185\u5bb9\u3002","title":"\u53c2\u8003"},{"location":"ext_docs/#_5","text":"\u6570\u5b57\u5b6a\u751f\u5de5\u5177 \u2014 \u4f7f\u7528 OpenStreetMap \u6570\u636e\u7684\u7a0b\u5e8f\u5730\u56fe\u751f\u6210\u5de5\u5177\u3002 Carla \u4e2d\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u6982\u8ff0 \u2014 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u6240\u6d89\u53ca\u7684\u8fc7\u7a0b\u548c\u9009\u9879\u7684\u6982\u8ff0\u3002 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u6807\u51c6\u5c3a\u5bf8\u5730\u56fe\u3002 \u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe \u5982\u4f55\u5728 Carla \u5305\u4e2d\u5bfc\u5165\u5730\u56fe\u3002 \u5728 Carla \u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165\u5730\u56fe \u2014 \u5982\u4f55\u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u5165\u5730\u56fe\u3002 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u2014 \u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002 \u624b\u52a8\u51c6\u5907\u5730\u56fe\u5305 \u2014 \u5982\u4f55\u51c6\u5907\u7528\u4e8e\u624b\u52a8\u5bfc\u5165\u7684\u5730\u56fe\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe \u2014 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u521b\u5efa\u5b50\u56fe\u5c42\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u4ea4\u901a\u706f\u548c\u6807\u5fd7 \u2014 \u5982\u4f55\u5c06\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u9053\u8def\u753b\u5bb6 \u2014 \u5982\u4f55\u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u66f4\u6539\u9053\u8def\u7684\u5916\u89c2\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5316\u5efa\u7b51\u7269 \u2014 \u7528\u5efa\u7b51\u7269\u586b\u5145\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u3002 \u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2 \u2014 \u4e3a\u60a8\u7684\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u5929\u6c14\u8d44\u6599\u5e76\u586b\u5145\u666f\u89c2\u3002 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u2014 \u83b7\u53d6\u884c\u4eba\u56db\u5904\u8d70\u52a8\u6240\u9700\u7684\u4fe1\u606f\u3002","title":"\u81ea\u5b9a\u4e49\u5730\u56fe"},{"location":"ext_docs/#_6","text":"\u5927\u5730\u56fe\u6982\u8ff0 \u2014 \u89e3\u91ca\u5927\u5730\u56fe\u5728 Carla \u4e2d\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5728 RoadRunner \u4e2d\u521b\u5efa\u5927\u5730\u56fe\u3002 \u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe \u2014 \u5982\u4f55\u5bfc\u5165\u5927\u5730\u56fe\u3002","title":"\u5927\u5730\u56fe"},{"location":"foundations/","text":"\u57fa\u7840 \u672c\u9875\u4ecb\u7ecd\u4e86\u4e86\u89e3 CARLA \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5982\u4f55\u901a\u8fc7 API \u8fdb\u884c\u64cd\u4f5c\u548c\u901a\u4fe1\u6240\u9700\u7684\u57fa\u672c\u6982\u5ff5\u3002CARLA \u4f7f\u7528\u670d\u52a1\u5668-\u5ba2\u6237\u7aef\u67b6\u6784\u8fd0\u884c\uff0c\u5176\u4e2d CARLA \u670d\u52a1\u5668\u8fd0\u884c\u4eff\u771f\u5e76\u7531\u5ba2\u6237\u7aef\u5411\u5176\u53d1\u9001\u6307\u4ee4\u3002\u5ba2\u6237\u7aef\u4ee3\u7801\u4f7f\u7528 API \u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u8981\u4f7f\u7528 Python API\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7 pip \u5b89\u88c5\u8be5\u6a21\u5757\uff1a pip install carla-simulator # Python 2 pip3 install carla-simulator # Python 3 \u8fd8\u8981\u786e\u4fdd\u5728 python \u811a\u672c\u4e2d\u5bfc\u5165 CARLA \u5305\uff1a import carla \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef \u4e16\u754c \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u8bb0\u5f55\u5668 \u8bb0\u5f55 \u4eff\u771f\u56de\u653e \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef \u5ba2\u6237\u7aef \u662f\u7528\u6237\u8fd0\u884c\u4ee5\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u4fe1\u606f\u6216\u66f4\u6539\u7684\u6a21\u5757\u3002\u5ba2\u6237\u7aef\u4f7f\u7528 IP \u548c\u7279\u5b9a\u7aef\u53e3\u8fd0\u884c\u3002\u5b83\u901a\u8fc7\u7ec8\u7aef\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u3002\u53ef\u4ee5\u6709\u8bb8\u591a\u5ba2\u6237\u7aef\u540c\u65f6\u8fd0\u884c\u3002\u9ad8\u7ea7\u591a\u5ba2\u6237\u7aef\u7ba1\u7406\u9700\u8981\u5bf9 CARLA \u548c \u540c\u6b65 \u6709\u900f\u5f7b\u7684\u4e86\u89e3\u3002 \u4f7f\u7528 CARLA \u5ba2\u6237\u7aef\u5bf9\u8c61\u8bbe\u7f6e\u5ba2\u6237\u7aef\uff1a client = carla.Client('localhost', 2000) \u8fd9\u4f1a\u5c06\u5ba2\u6237\u7aef\u8bbe\u7f6e\u4e3a\u4e0e\u672c\u5730\u8ba1\u7b97\u673a\u4e0a localhost \u8fd0\u884c\u7684 CARLA \u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u6216\u8005\uff0c\u5982\u679c\u5728\u5355\u72ec\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u8ba1\u7b97\u673a\u7684 IP \u5730\u5740\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u670d\u52a1\u5668\u5c06\u5728\u7aef\u53e3 2000 \u4e0a\u8fd0\u884c\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u60a8\u53ef\u4ee5\u5728\u542f\u52a8 CARLA \u65f6\u5728\u8bbe\u7f6e\u4e2d\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002 \u5ba2\u6237\u7aef\u5bf9\u8c61\u53ef\u7528\u4e8e\u591a\u79cd\u529f\u80fd\uff0c\u5305\u62ec\u52a0\u8f7d\u65b0\u5730\u56fe\u3001\u8bb0\u5f55\u4eff\u771f\u548c\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\uff1a client.load_world('Town07') client.start_recorder('recording.log') \u4e16\u754c \u4e16\u754c \u662f\u4ee3\u8868\u4eff\u771f\u7684\u5bf9\u8c61\u3002\u5b83\u5145\u5f53\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u5305\u542b\u751f\u6210\u53c2\u4e0e\u8005\u3001\u6539\u53d8\u5929\u6c14\u3001\u83b7\u53d6\u4e16\u754c\u5f53\u524d\u72b6\u6001\u7b49\u7684\u4e3b\u8981\u65b9\u6cd5\u3002\u6bcf\u4e2a\u4eff\u771f\u53ea\u6709\u4e00\u4e2a\u4e16\u754c\u3002\u5f53\u5730\u56fe\u6539\u53d8\u65f6\uff0c\u5b83\u4f1a\u88ab\u6467\u6bc1\u5e76\u66ff\u6362\u4e3a\u65b0\u7684\u3002 \u4f7f\u7528\u5ba2\u6237\u7aef\u5bf9\u8c61\u68c0\u7d22\u4e16\u754c\u5bf9\u8c61\uff1a world = client.get_world() \u4e16\u754c\u5bf9\u8c61\u53ef\u7528\u4e8e\u4f7f\u7528\u5176\u591a\u79cd\u65b9\u6cd5\u8bbf\u95ee\u4eff\u771f\u4e2d\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\u5929\u6c14\u3001\u8f66\u8f86\u3001\u4ea4\u901a\u706f\u3001\u5efa\u7b51\u7269\u548c\u5730\u56fe\uff1a level = world.get_map() weather = world.get_weather() blueprint_library = world.get_blueprint_library() \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f CARLA \u5177\u6709\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u3002\u670d\u52a1\u5668\u8fd0\u884c\u4eff\u771f\u3002\u5ba2\u6237\u7aef\u68c0\u7d22\u4fe1\u606f\u5e76\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u66f4\u6539\u3002\u672c\u8282\u6d89\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u4ee5 \u5f02\u6b65\u6a21\u5f0f \u8fd0\u884c\u3002 \u672c\u8d28\u4e0a\uff0c\u5728 \u5f02\u6b65\u6a21\u5f0f \u4e0b\uff0cCARLA \u670d\u52a1\u5668\u4f1a\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u3002\u5ba2\u6237\u8bf7\u6c42\u662f\u5373\u65f6\u5904\u7406\u7684\u3002\u5728 \u540c\u6b65\u6a21\u5f0f \u4e0b\uff0c\u8fd0\u884c Python \u4ee3\u7801\u7684\u5ba2\u6237\u7aef\u8d1f\u8d23\u63a7\u5236\u5e76\u544a\u8bc9\u670d\u52a1\u5668\u4f55\u65f6\u66f4\u65b0\u3002 \u5982\u679c\u60a8\u6b63\u5728\u5b9e\u9a8c\u6216\u8bbe\u7f6e\u4eff\u771f\uff0c \u5f02\u6b65\u6a21\u5f0f \u662f\u8fd0\u884c CARLA \u7684\u5408\u9002\u6a21\u5f0f\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u653e\u7f6e\u53c2\u4e0e\u8005\u65f6\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u5728\u5730\u56fe\u4e0a\u98de\u884c\u3002\u5f53\u60a8\u60f3\u8981\u5f00\u59cb\u751f\u6210\u8bad\u7ec3\u6570\u636e\u6216\u5728\u4eff\u771f\u4e2d\u90e8\u7f72\u667a\u80fd\u4f53\u65f6\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528 \u540c\u6b65\u6a21\u5f0f \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e3a\u60a8\u63d0\u4f9b\u66f4\u591a\u7684\u63a7\u5236\u529b\u548c\u53ef\u9884\u6d4b\u6027\u3002 \u9605\u8bfb\u6709\u5173 \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f \u7684\u66f4\u591a\u4fe1\u606f\u3002 \u7b14\u8bb0 \u5728\u591a\u5ba2\u6237\u7aef\u67b6\u6784\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u5e94\u8be5\u53d1\u51fa\u6ef4\u7b54\u4fe1\u53f7\u3002\u670d\u52a1\u5668\u5bf9\u6536\u5230\u7684\u6bcf\u4e2a\u6ef4\u7b54\u4fe1\u53f7\u505a\u51fa\u54cd\u5e94\uff0c\u5c31\u597d\u50cf\u5b83\u6765\u81ea\u540c\u4e00\u5ba2\u6237\u7aef\u4e00\u6837\u3002\u8bb8\u591a\u5ba2\u6237\u7aef\u7684\u6ef4\u7b54\u4fe1\u53f7\u5c06\u4f7f\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u4ea7\u751f\u4e0d\u4e00\u81f4\u3002 \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f\u4e4b\u95f4\u7684\u66f4\u6539\u53ea\u662f\u5e03\u5c14\u72b6\u6001\u7684\u95ee\u9898\u3002 settings = world.get_settings() settings.synchronous_mode = True # \u542f\u7528\u540c\u6b65\u6a21\u5f0f settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) \u8b66\u544a \u5982\u679c\u542f\u7528\u4e86\u540c\u6b65\u6a21\u5f0f\uff0c\u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5219\u4e5f\u5fc5\u987b\u5c06\u5176\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb \u672c\u6587 \u4ee5\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u8981\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff0c\u53ea\u9700\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a False \u6216\u4f7f\u7528\u811a\u672c PythonAPI/util/config.py \u3002 cd PythonAPI/util && python3 config.py --no-sync # \u7981\u7528\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u65e0\u6cd5\u4f7f\u7528\u811a\u672c\u542f\u7528\uff0c\u53ea\u80fd\u7981\u7528\u3002\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u4f7f\u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u7aef\u6ef4\u7b54\u4fe1\u53f7\u3002\u4f7f\u7528\u6b64\u811a\u672c\uff0c\u7528\u6237\u65e0\u6cd5\u5728\u9700\u8981\u65f6\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\u3002 \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u4e0e\u7f13\u6162\u7684\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u9700\u8981\u4e0d\u540c\u5143\u7d20\uff08\u4f8b\u5982\u4f20\u611f\u5668\uff09\u4e4b\u95f4\u7684\u540c\u6b65\u65f6\u7279\u522b\u76f8\u5173\u3002\u5982\u679c\u5ba2\u6237\u7aef\u592a\u6162\u800c\u670d\u52a1\u5668\u6ca1\u6709\u7b49\u5f85\uff0c\u5c31\u4f1a\u51fa\u73b0\u4fe1\u606f\u6ea2\u51fa\u3002\u5ba2\u6237\u5c06\u65e0\u6cd5\u7ba1\u7406\u4e00\u5207\uff0c\u5e76\u4e14\u4f1a\u4e22\u5931\u6216\u6df7\u5408\u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u8bb8\u591a\u4f20\u611f\u5668\u548c\u5f02\u6b65\u60c5\u51b5\uff0c\u4e0d\u53ef\u80fd\u77e5\u9053\u6240\u6709\u4f20\u611f\u5668\u662f\u5426\u90fd\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u540c\u4e00\u65f6\u523b\u7684\u6570\u636e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6269\u5c55\u4e86\u524d\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u3002\u5ba2\u6237\u7aef\u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u5934\u4f20\u611f\u5668\uff0c\u5c06\u5f53\u524d\u6b65\u9aa4\u7684\u56fe\u50cf\u6570\u636e\u5b58\u50a8\u5728\u961f\u5217\u4e2d\uff0c\u5e76\u4ece\u961f\u5217\u4e2d\u68c0\u7d22\u540e\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\u7ed9\u670d\u52a1\u5668\u3002\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6709\u5173\u591a\u4e2a\u4f20\u611f\u5668\u7684\u66f4\u590d\u6742\u7684\u793a\u4f8b\u3002 settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) camera = world.spawn_actor(blueprint, transform) image_queue = queue.Queue() camera.listen(image_queue.put) while True: world.tick() image = image_queue.get() \u91cd\u8981 \u6765\u81ea\u57fa\u4e8e GPU \u4f20\u611f\u5668\uff08\u4e3b\u8981\u662f\u6444\u50cf\u5934\uff09\u7684\u6570\u636e\u901a\u5e38\u4f1a\u5ef6\u8fdf\u51e0\u5e27\u751f\u6210\u3002\u540c\u6b65\u5728\u8fd9\u91cc\u81f3\u5173\u91cd\u8981\u3002 \u4e16\u754c\u4e0a\u6709\u5f02\u6b65\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u7b49\u5f85\u670d\u52a1\u5668\u6ef4\u7b54\u4fe1\u53f7\uff0c\u6216\u8005\u5728\u6536\u5230\u670d\u52a1\u5668\u6ef4\u7b54\u4fe1\u53f7\u65f6\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002 # \u7b49\u5f85\u4e0b\u4e00\u4e2a\u6ef4\u7b54\u4fe1\u53f7\u5e76\u83b7\u53d6\u6ef4\u7b54\u4fe1\u53f7\u7684\u5feb\u7167 world_snapshot = world.wait_for_tick() # \u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u4ee5\u4fbf\u5728\u6bcf\u6b21\u6536\u5230\u65b0\u7684\u5feb\u7167\u65f6\u90fd\u88ab\u8c03\u7528\u3002 world.on_tick(lambda world_snapshot: do_something(world_snapshot)) \u8bb0\u5f55\u5668 \u8bb0\u5f55\u5668\u53ef\u4ee5\u5c06\u91cd\u73b0\u5148\u524d\u4eff\u771f\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002\u8fd9\u4e9b\u6570\u636e\u5305\u62ec\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u7684\u72b6\u6001\u3001\u884c\u4eba\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u4ee5\u53ca\u592a\u9633\u7684\u4f4d\u7f6e\u548c\u5929\u6c14\u72b6\u51b5\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\u6570\u636e\u88ab\u8bb0\u5f55\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0cCarla \u670d\u52a1\u5668\u7a0d\u540e\u53ef\u4ee5\u52a0\u8f7d\u8be5\u6587\u4ef6\u4ee5\u51c6\u786e\u5730\u518d\u73b0\u4eff\u771f\u3002 \u53c2\u4e0e\u8005\u6839\u636e\u8bb0\u5f55\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6570\u636e\u5728\u6bcf\u4e00\u5e27\u4e0a\u8fdb\u884c\u66f4\u65b0\u3002\u5f53\u524d\u4eff\u771f\u4e2d\u51fa\u73b0\u5728\u5f55\u5236\u4e2d\u7684\u53c2\u4e0e\u8005\u5c06\u88ab\u79fb\u52a8\u6216\u91cd\u65b0\u751f\u6210\u4ee5\u4eff\u771f\u5b83\u3002\u90a3\u4e9b\u6ca1\u6709\u51fa\u73b0\u5728\u8bb0\u5f55\u4e2d\u7684\u4eba\u4f1a\u7ee7\u7eed\u4ed6\u4eec\u7684\u8def\uff0c\u5c31\u50cf\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u4e00\u6837\u3002 \u91cd\u8981 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u4f46 \u884c\u4eba\u4e0d\u4f1a\u505c\u4e0b\u6765 \u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u5305\u62ec\u6709\u5173\u8bb8\u591a\u4e0d\u540c\u5143\u7d20\u7684\u4fe1\u606f\u3002 \u53c2\u4e0e\u8005 \u2014 \u521b\u9020\u548c\u6467\u6bc1\u3001\u8fb9\u754c\u548c\u89e6\u53d1\u76d2\u3002 \u4ea4\u901a\u7b49 \u2014 \u72b6\u6001\u53d8\u5316\u548c\u65f6\u95f4\u8bbe\u7f6e\u3002 \u8f66\u8f86 \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\u3001\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u5149\u72b6\u6001\u548c\u7269\u7406\u63a7\u5236\u3002 \u884c\u4eba \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4ee5\u53ca\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3002 \u706f\u5149 \u2014 \u5efa\u7b51\u7269\u3001\u8857\u9053\u548c\u8f66\u8f86\u7684\u706f\u5149\u72b6\u6001\u3002 \u8bb0\u5f55 \u8981\u5f00\u59cb\u5f55\u5236\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u5728\u6587\u4ef6\u540d\u4e2d\u4f7f\u7528 \\ , / \u6216 : \u5b57\u7b26\u4f1a\u5c06\u5176\u5b9a\u4e49\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u8def\u5f84\uff0c\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 CarlaUE4/Saved \u3002 client.start_recorder(\"/home/carla/recording01.log\") \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bb0\u5f55\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u5b58\u50a8\u56de\u653e\u4eff\u771f\u6240\u9700\u7684\u4fe1\u606f\u3002\u4e3a\u4e86\u4fdd\u5b58\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c additional_data \u5fc5\u987b\u5728\u5f00\u59cb\u5f55\u5236\u65f6\u914d\u7f6e\u53c2\u6570\u3002 client.start_recorder(\"/home/carla/recording01.log\", True) \u7b14\u8bb0 \u5176\u4ed6\u6570\u636e\u5305\u62ec\uff1a\u8f66\u8f86\u548c\u884c\u4eba\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u4ea4\u901a\u706f\u65f6\u95f4\u8bbe\u7f6e\u3001\u6267\u884c\u65f6\u95f4\u3001\u53c2\u4e0e\u8005\u7684\u89e6\u53d1\u5668\u548c\u8fb9\u754c\u6846\u4ee5\u53ca\u8f66\u8f86\u7684\u7269\u7406\u63a7\u5236\u3002 \u8981\u505c\u6b62\u8bb0\u5f55\uff0c\u8c03\u7528\u4e5f\u5f88\u7b80\u5355\u3002 client.stop_recorder() \u7b14\u8bb0 \u636e\u4f30\u8ba1\uff0c50 \u4e2a\u4ea4\u901a\u706f\u548c 100 \u8f86\u8f66\u7684 1 \u5c0f\u65f6\u8bb0\u5f55\u5927\u7ea6\u9700\u8981 200MB \u5927\u5c0f\u3002 \u4eff\u771f\u56de\u653e \u53ef\u4ee5\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u65f6\u523b\u5f00\u59cb\u64ad\u653e\u3002\u9664\u4e86\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u4e4b\u5916\uff0c\u6b64\u65b9\u6cd5\u8fd8\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 client.replay_file(\"recording01.log\", start, duration, camera) \u53c2\u6570 \u63cf\u8ff0 \u7b14\u8bb0 start \u8bb0\u5f55\u5f00\u59cb\u4eff\u771f\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 \u5982\u679c\u4e3a\u6b63\uff0c\u65f6\u95f4\u5c06\u4ece\u8bb0\u5f55\u5f00\u59cb\u7b97\u8d77\u3002 \u5982\u679c\u4e3a\u8d1f\uff0c\u5219\u4ece\u6700\u540e\u8003\u8651\u3002 duration \u64ad\u653e\u79d2\u6570\u30020 \u4e3a\u5168\u90e8\u8bb0\u5f55\u3002 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u884c\u4eba\u5c06\u505c\u6b62\u3002 camera \u76f8\u673a\u5c06\u805a\u7126\u7684\u53c2\u4e0e\u8005\u7684 ID\u3002 \u5c06\u5176\u8bbe\u7f6e 0 \u662f\u8ba9\u89c2\u5bdf\u8005\u81ea\u7531\u79fb\u52a8\u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f \u8bb0\u5f55\u5668\u4ee5 \u672c\u6587\u6863 \u4e2d\u6307\u5b9a\u7684\u81ea\u5b9a\u4e49\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u4fdd\u5b58\u6240\u6709\u6570\u636e\u3002 \u6e32\u67d3 CARLA \u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u5173\u6e32\u67d3\u8d28\u91cf\u548c\u6548\u7387\u7684\u9009\u9879\u3002\u5728\u6700\u57fa\u672c\u7684\u5c42\u9762\u4e0a\uff0cCARLA \u63d0\u4f9b\u4e86\u4e24\u79cd\u8d28\u91cf\u9009\u9879\uff0c\u53ef\u4ee5\u5728\u9ad8\u89c4\u683c\u548c\u4f4e\u89c4\u683c\u786c\u4ef6\u4e0a\u8fd0\u884c\u5e76\u83b7\u5f97\u6700\u4f73\u6548\u679c\uff1a \u53f2\u8bd7\u6a21\u5f0f ./CarlaUE4.sh -quality-level=Epic \u53f2\u8bd7\u6a21\u5f0f\u622a\u56fe \u4f4e\u8d28\u91cf\u6a21\u5f0f ./CarlaUE4.sh -quality-level=Low \u4f4e\u8d28\u91cf\u6a21\u5f0f\u622a\u56fe CARLA \u8fd8\u63d0\u4f9b\u6682\u505c\u6e32\u67d3\u6216\u79bb\u5c4f\u6e32\u67d3\u7684\u9009\u9879\uff0c\u4ee5\u4fbf\u66f4\u6709\u6548\u5730\u8bb0\u5f55\u6216\u8fd0\u884c\u4eff\u771f\u3002 \u6709\u5173\u6e32\u67d3\u9009\u9879\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002","title":"\u57fa\u7840"},{"location":"foundations/#_1","text":"\u672c\u9875\u4ecb\u7ecd\u4e86\u4e86\u89e3 CARLA \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5982\u4f55\u901a\u8fc7 API \u8fdb\u884c\u64cd\u4f5c\u548c\u901a\u4fe1\u6240\u9700\u7684\u57fa\u672c\u6982\u5ff5\u3002CARLA \u4f7f\u7528\u670d\u52a1\u5668-\u5ba2\u6237\u7aef\u67b6\u6784\u8fd0\u884c\uff0c\u5176\u4e2d CARLA \u670d\u52a1\u5668\u8fd0\u884c\u4eff\u771f\u5e76\u7531\u5ba2\u6237\u7aef\u5411\u5176\u53d1\u9001\u6307\u4ee4\u3002\u5ba2\u6237\u7aef\u4ee3\u7801\u4f7f\u7528 API \u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u8981\u4f7f\u7528 Python API\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7 pip \u5b89\u88c5\u8be5\u6a21\u5757\uff1a pip install carla-simulator # Python 2 pip3 install carla-simulator # Python 3 \u8fd8\u8981\u786e\u4fdd\u5728 python \u811a\u672c\u4e2d\u5bfc\u5165 CARLA \u5305\uff1a import carla \u4e16\u754c\u548c\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef \u4e16\u754c \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f \u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f \u4f7f\u7528\u540c\u6b65\u6a21\u5f0f \u8bb0\u5f55\u5668 \u8bb0\u5f55 \u4eff\u771f\u56de\u653e \u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f","title":"\u57fa\u7840"},{"location":"foundations/#_2","text":"","title":"\u4e16\u754c\u548c\u5ba2\u6237\u7aef"},{"location":"foundations/#_3","text":"\u5ba2\u6237\u7aef \u662f\u7528\u6237\u8fd0\u884c\u4ee5\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u4fe1\u606f\u6216\u66f4\u6539\u7684\u6a21\u5757\u3002\u5ba2\u6237\u7aef\u4f7f\u7528 IP \u548c\u7279\u5b9a\u7aef\u53e3\u8fd0\u884c\u3002\u5b83\u901a\u8fc7\u7ec8\u7aef\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\u3002\u53ef\u4ee5\u6709\u8bb8\u591a\u5ba2\u6237\u7aef\u540c\u65f6\u8fd0\u884c\u3002\u9ad8\u7ea7\u591a\u5ba2\u6237\u7aef\u7ba1\u7406\u9700\u8981\u5bf9 CARLA \u548c \u540c\u6b65 \u6709\u900f\u5f7b\u7684\u4e86\u89e3\u3002 \u4f7f\u7528 CARLA \u5ba2\u6237\u7aef\u5bf9\u8c61\u8bbe\u7f6e\u5ba2\u6237\u7aef\uff1a client = carla.Client('localhost', 2000) \u8fd9\u4f1a\u5c06\u5ba2\u6237\u7aef\u8bbe\u7f6e\u4e3a\u4e0e\u672c\u5730\u8ba1\u7b97\u673a\u4e0a localhost \u8fd0\u884c\u7684 CARLA \u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u6216\u8005\uff0c\u5982\u679c\u5728\u5355\u72ec\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u8ba1\u7b97\u673a\u7684 IP \u5730\u5740\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u670d\u52a1\u5668\u5c06\u5728\u7aef\u53e3 2000 \u4e0a\u8fd0\u884c\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u60a8\u53ef\u4ee5\u5728\u542f\u52a8 CARLA \u65f6\u5728\u8bbe\u7f6e\u4e2d\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002 \u5ba2\u6237\u7aef\u5bf9\u8c61\u53ef\u7528\u4e8e\u591a\u79cd\u529f\u80fd\uff0c\u5305\u62ec\u52a0\u8f7d\u65b0\u5730\u56fe\u3001\u8bb0\u5f55\u4eff\u771f\u548c\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\uff1a client.load_world('Town07') client.start_recorder('recording.log')","title":"\u5ba2\u6237\u7aef"},{"location":"foundations/#_4","text":"\u4e16\u754c \u662f\u4ee3\u8868\u4eff\u771f\u7684\u5bf9\u8c61\u3002\u5b83\u5145\u5f53\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u5305\u542b\u751f\u6210\u53c2\u4e0e\u8005\u3001\u6539\u53d8\u5929\u6c14\u3001\u83b7\u53d6\u4e16\u754c\u5f53\u524d\u72b6\u6001\u7b49\u7684\u4e3b\u8981\u65b9\u6cd5\u3002\u6bcf\u4e2a\u4eff\u771f\u53ea\u6709\u4e00\u4e2a\u4e16\u754c\u3002\u5f53\u5730\u56fe\u6539\u53d8\u65f6\uff0c\u5b83\u4f1a\u88ab\u6467\u6bc1\u5e76\u66ff\u6362\u4e3a\u65b0\u7684\u3002 \u4f7f\u7528\u5ba2\u6237\u7aef\u5bf9\u8c61\u68c0\u7d22\u4e16\u754c\u5bf9\u8c61\uff1a world = client.get_world() \u4e16\u754c\u5bf9\u8c61\u53ef\u7528\u4e8e\u4f7f\u7528\u5176\u591a\u79cd\u65b9\u6cd5\u8bbf\u95ee\u4eff\u771f\u4e2d\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\u5929\u6c14\u3001\u8f66\u8f86\u3001\u4ea4\u901a\u706f\u3001\u5efa\u7b51\u7269\u548c\u5730\u56fe\uff1a level = world.get_map() weather = world.get_weather() blueprint_library = world.get_blueprint_library()","title":"\u4e16\u754c"},{"location":"foundations/#_5","text":"CARLA \u5177\u6709\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u3002\u670d\u52a1\u5668\u8fd0\u884c\u4eff\u771f\u3002\u5ba2\u6237\u7aef\u68c0\u7d22\u4fe1\u606f\u5e76\u8bf7\u6c42\u4eff\u771f\u4e2d\u7684\u66f4\u6539\u3002\u672c\u8282\u6d89\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCARLA \u4ee5 \u5f02\u6b65\u6a21\u5f0f \u8fd0\u884c\u3002 \u672c\u8d28\u4e0a\uff0c\u5728 \u5f02\u6b65\u6a21\u5f0f \u4e0b\uff0cCARLA \u670d\u52a1\u5668\u4f1a\u5c3d\u53ef\u80fd\u5feb\u5730\u8fd0\u884c\u3002\u5ba2\u6237\u8bf7\u6c42\u662f\u5373\u65f6\u5904\u7406\u7684\u3002\u5728 \u540c\u6b65\u6a21\u5f0f \u4e0b\uff0c\u8fd0\u884c Python \u4ee3\u7801\u7684\u5ba2\u6237\u7aef\u8d1f\u8d23\u63a7\u5236\u5e76\u544a\u8bc9\u670d\u52a1\u5668\u4f55\u65f6\u66f4\u65b0\u3002 \u5982\u679c\u60a8\u6b63\u5728\u5b9e\u9a8c\u6216\u8bbe\u7f6e\u4eff\u771f\uff0c \u5f02\u6b65\u6a21\u5f0f \u662f\u8fd0\u884c CARLA \u7684\u5408\u9002\u6a21\u5f0f\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u653e\u7f6e\u53c2\u4e0e\u8005\u65f6\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u5728\u5730\u56fe\u4e0a\u98de\u884c\u3002\u5f53\u60a8\u60f3\u8981\u5f00\u59cb\u751f\u6210\u8bad\u7ec3\u6570\u636e\u6216\u5728\u4eff\u771f\u4e2d\u90e8\u7f72\u667a\u80fd\u4f53\u65f6\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528 \u540c\u6b65\u6a21\u5f0f \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e3a\u60a8\u63d0\u4f9b\u66f4\u591a\u7684\u63a7\u5236\u529b\u548c\u53ef\u9884\u6d4b\u6027\u3002 \u9605\u8bfb\u6709\u5173 \u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f \u7684\u66f4\u591a\u4fe1\u606f\u3002 \u7b14\u8bb0 \u5728\u591a\u5ba2\u6237\u7aef\u67b6\u6784\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u5e94\u8be5\u53d1\u51fa\u6ef4\u7b54\u4fe1\u53f7\u3002\u670d\u52a1\u5668\u5bf9\u6536\u5230\u7684\u6bcf\u4e2a\u6ef4\u7b54\u4fe1\u53f7\u505a\u51fa\u54cd\u5e94\uff0c\u5c31\u597d\u50cf\u5b83\u6765\u81ea\u540c\u4e00\u5ba2\u6237\u7aef\u4e00\u6837\u3002\u8bb8\u591a\u5ba2\u6237\u7aef\u7684\u6ef4\u7b54\u4fe1\u53f7\u5c06\u4f7f\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u4ea7\u751f\u4e0d\u4e00\u81f4\u3002","title":"\u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f"},{"location":"foundations/#_6","text":"\u540c\u6b65\u6a21\u5f0f\u548c\u5f02\u6b65\u6a21\u5f0f\u4e4b\u95f4\u7684\u66f4\u6539\u53ea\u662f\u5e03\u5c14\u72b6\u6001\u7684\u95ee\u9898\u3002 settings = world.get_settings() settings.synchronous_mode = True # \u542f\u7528\u540c\u6b65\u6a21\u5f0f settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) \u8b66\u544a \u5982\u679c\u542f\u7528\u4e86\u540c\u6b65\u6a21\u5f0f\uff0c\u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u5219\u4e5f\u5fc5\u987b\u5c06\u5176\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb \u672c\u6587 \u4ee5\u4e86\u89e3\u5982\u4f55\u64cd\u4f5c\u3002 \u8981\u7981\u7528\u540c\u6b65\u6a21\u5f0f\uff0c\u53ea\u9700\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a False \u6216\u4f7f\u7528\u811a\u672c PythonAPI/util/config.py \u3002 cd PythonAPI/util && python3 config.py --no-sync # \u7981\u7528\u540c\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f\u65e0\u6cd5\u4f7f\u7528\u811a\u672c\u542f\u7528\uff0c\u53ea\u80fd\u7981\u7528\u3002\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u4f7f\u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u7aef\u6ef4\u7b54\u4fe1\u53f7\u3002\u4f7f\u7528\u6b64\u811a\u672c\uff0c\u7528\u6237\u65e0\u6cd5\u5728\u9700\u8981\u65f6\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\u3002","title":"\u8bbe\u7f6e\u540c\u6b65\u6a21\u5f0f"},{"location":"foundations/#_7","text":"\u540c\u6b65\u6a21\u5f0f\u4e0e\u7f13\u6162\u7684\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u9700\u8981\u4e0d\u540c\u5143\u7d20\uff08\u4f8b\u5982\u4f20\u611f\u5668\uff09\u4e4b\u95f4\u7684\u540c\u6b65\u65f6\u7279\u522b\u76f8\u5173\u3002\u5982\u679c\u5ba2\u6237\u7aef\u592a\u6162\u800c\u670d\u52a1\u5668\u6ca1\u6709\u7b49\u5f85\uff0c\u5c31\u4f1a\u51fa\u73b0\u4fe1\u606f\u6ea2\u51fa\u3002\u5ba2\u6237\u5c06\u65e0\u6cd5\u7ba1\u7406\u4e00\u5207\uff0c\u5e76\u4e14\u4f1a\u4e22\u5931\u6216\u6df7\u5408\u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u8bb8\u591a\u4f20\u611f\u5668\u548c\u5f02\u6b65\u60c5\u51b5\uff0c\u4e0d\u53ef\u80fd\u77e5\u9053\u6240\u6709\u4f20\u611f\u5668\u662f\u5426\u90fd\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u540c\u4e00\u65f6\u523b\u7684\u6570\u636e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6269\u5c55\u4e86\u524d\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u3002\u5ba2\u6237\u7aef\u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u5934\u4f20\u611f\u5668\uff0c\u5c06\u5f53\u524d\u6b65\u9aa4\u7684\u56fe\u50cf\u6570\u636e\u5b58\u50a8\u5728\u961f\u5217\u4e2d\uff0c\u5e76\u4ece\u961f\u5217\u4e2d\u68c0\u7d22\u540e\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\u7ed9\u670d\u52a1\u5668\u3002\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6709\u5173\u591a\u4e2a\u4f20\u611f\u5668\u7684\u66f4\u590d\u6742\u7684\u793a\u4f8b\u3002 settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) camera = world.spawn_actor(blueprint, transform) image_queue = queue.Queue() camera.listen(image_queue.put) while True: world.tick() image = image_queue.get() \u91cd\u8981 \u6765\u81ea\u57fa\u4e8e GPU \u4f20\u611f\u5668\uff08\u4e3b\u8981\u662f\u6444\u50cf\u5934\uff09\u7684\u6570\u636e\u901a\u5e38\u4f1a\u5ef6\u8fdf\u51e0\u5e27\u751f\u6210\u3002\u540c\u6b65\u5728\u8fd9\u91cc\u81f3\u5173\u91cd\u8981\u3002 \u4e16\u754c\u4e0a\u6709\u5f02\u6b65\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u7b49\u5f85\u670d\u52a1\u5668\u6ef4\u7b54\u4fe1\u53f7\uff0c\u6216\u8005\u5728\u6536\u5230\u670d\u52a1\u5668\u6ef4\u7b54\u4fe1\u53f7\u65f6\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002 # \u7b49\u5f85\u4e0b\u4e00\u4e2a\u6ef4\u7b54\u4fe1\u53f7\u5e76\u83b7\u53d6\u6ef4\u7b54\u4fe1\u53f7\u7684\u5feb\u7167 world_snapshot = world.wait_for_tick() # \u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u4ee5\u4fbf\u5728\u6bcf\u6b21\u6536\u5230\u65b0\u7684\u5feb\u7167\u65f6\u90fd\u88ab\u8c03\u7528\u3002 world.on_tick(lambda world_snapshot: do_something(world_snapshot))","title":"\u4f7f\u7528\u540c\u6b65\u6a21\u5f0f"},{"location":"foundations/#_8","text":"\u8bb0\u5f55\u5668\u53ef\u4ee5\u5c06\u91cd\u73b0\u5148\u524d\u4eff\u771f\u6240\u9700\u7684\u6240\u6709\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002\u8fd9\u4e9b\u6570\u636e\u5305\u62ec\u8f66\u8f86\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u7684\u72b6\u6001\u3001\u884c\u4eba\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u4ee5\u53ca\u592a\u9633\u7684\u4f4d\u7f6e\u548c\u5929\u6c14\u72b6\u51b5\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\u6570\u636e\u88ab\u8bb0\u5f55\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0cCarla \u670d\u52a1\u5668\u7a0d\u540e\u53ef\u4ee5\u52a0\u8f7d\u8be5\u6587\u4ef6\u4ee5\u51c6\u786e\u5730\u518d\u73b0\u4eff\u771f\u3002 \u53c2\u4e0e\u8005\u6839\u636e\u8bb0\u5f55\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u6570\u636e\u5728\u6bcf\u4e00\u5e27\u4e0a\u8fdb\u884c\u66f4\u65b0\u3002\u5f53\u524d\u4eff\u771f\u4e2d\u51fa\u73b0\u5728\u5f55\u5236\u4e2d\u7684\u53c2\u4e0e\u8005\u5c06\u88ab\u79fb\u52a8\u6216\u91cd\u65b0\u751f\u6210\u4ee5\u4eff\u771f\u5b83\u3002\u90a3\u4e9b\u6ca1\u6709\u51fa\u73b0\u5728\u8bb0\u5f55\u4e2d\u7684\u4eba\u4f1a\u7ee7\u7eed\u4ed6\u4eec\u7684\u8def\uff0c\u5c31\u50cf\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u4e00\u6837\u3002 \u91cd\u8981 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u4f46 \u884c\u4eba\u4e0d\u4f1a\u505c\u4e0b\u6765 \u3002 \u8bb0\u5f55\u5668\u6587\u4ef6\u5305\u62ec\u6709\u5173\u8bb8\u591a\u4e0d\u540c\u5143\u7d20\u7684\u4fe1\u606f\u3002 \u53c2\u4e0e\u8005 \u2014 \u521b\u9020\u548c\u6467\u6bc1\u3001\u8fb9\u754c\u548c\u89e6\u53d1\u76d2\u3002 \u4ea4\u901a\u7b49 \u2014 \u72b6\u6001\u53d8\u5316\u548c\u65f6\u95f4\u8bbe\u7f6e\u3002 \u8f66\u8f86 \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\u3001\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u5149\u72b6\u6001\u548c\u7269\u7406\u63a7\u5236\u3002 \u884c\u4eba \u2014 \u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u4ee5\u53ca\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3002 \u706f\u5149 \u2014 \u5efa\u7b51\u7269\u3001\u8857\u9053\u548c\u8f66\u8f86\u7684\u706f\u5149\u72b6\u6001\u3002","title":"\u8bb0\u5f55\u5668"},{"location":"foundations/#_9","text":"\u8981\u5f00\u59cb\u5f55\u5236\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u5728\u6587\u4ef6\u540d\u4e2d\u4f7f\u7528 \\ , / \u6216 : \u5b57\u7b26\u4f1a\u5c06\u5176\u5b9a\u4e49\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u8def\u5f84\uff0c\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 CarlaUE4/Saved \u3002 client.start_recorder(\"/home/carla/recording01.log\") \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bb0\u5f55\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u5b58\u50a8\u56de\u653e\u4eff\u771f\u6240\u9700\u7684\u4fe1\u606f\u3002\u4e3a\u4e86\u4fdd\u5b58\u524d\u9762\u63d0\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c additional_data \u5fc5\u987b\u5728\u5f00\u59cb\u5f55\u5236\u65f6\u914d\u7f6e\u53c2\u6570\u3002 client.start_recorder(\"/home/carla/recording01.log\", True) \u7b14\u8bb0 \u5176\u4ed6\u6570\u636e\u5305\u62ec\uff1a\u8f66\u8f86\u548c\u884c\u4eba\u7684\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u3001\u4ea4\u901a\u706f\u65f6\u95f4\u8bbe\u7f6e\u3001\u6267\u884c\u65f6\u95f4\u3001\u53c2\u4e0e\u8005\u7684\u89e6\u53d1\u5668\u548c\u8fb9\u754c\u6846\u4ee5\u53ca\u8f66\u8f86\u7684\u7269\u7406\u63a7\u5236\u3002 \u8981\u505c\u6b62\u8bb0\u5f55\uff0c\u8c03\u7528\u4e5f\u5f88\u7b80\u5355\u3002 client.stop_recorder() \u7b14\u8bb0 \u636e\u4f30\u8ba1\uff0c50 \u4e2a\u4ea4\u901a\u706f\u548c 100 \u8f86\u8f66\u7684 1 \u5c0f\u65f6\u8bb0\u5f55\u5927\u7ea6\u9700\u8981 200MB \u5927\u5c0f\u3002","title":"\u8bb0\u5f55"},{"location":"foundations/#_10","text":"\u53ef\u4ee5\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u65f6\u523b\u5f00\u59cb\u64ad\u653e\u3002\u9664\u4e86\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\u4e4b\u5916\uff0c\u6b64\u65b9\u6cd5\u8fd8\u9700\u8981\u4e00\u4e9b\u53c2\u6570\u3002 client.replay_file(\"recording01.log\", start, duration, camera) \u53c2\u6570 \u63cf\u8ff0 \u7b14\u8bb0 start \u8bb0\u5f55\u5f00\u59cb\u4eff\u771f\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 \u5982\u679c\u4e3a\u6b63\uff0c\u65f6\u95f4\u5c06\u4ece\u8bb0\u5f55\u5f00\u59cb\u7b97\u8d77\u3002 \u5982\u679c\u4e3a\u8d1f\uff0c\u5219\u4ece\u6700\u540e\u8003\u8651\u3002 duration \u64ad\u653e\u79d2\u6570\u30020 \u4e3a\u5168\u90e8\u8bb0\u5f55\u3002 \u64ad\u653e\u7ed3\u675f\u65f6\uff0c\u8f66\u8f86\u5c06\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u9a7e\u9a76\uff0c\u884c\u4eba\u5c06\u505c\u6b62\u3002 camera \u76f8\u673a\u5c06\u805a\u7126\u7684\u53c2\u4e0e\u8005\u7684 ID\u3002 \u5c06\u5176\u8bbe\u7f6e 0 \u662f\u8ba9\u89c2\u5bdf\u8005\u81ea\u7531\u79fb\u52a8\u3002","title":"\u4eff\u771f\u56de\u653e"},{"location":"foundations/#_11","text":"\u8bb0\u5f55\u5668\u4ee5 \u672c\u6587\u6863 \u4e2d\u6307\u5b9a\u7684\u81ea\u5b9a\u4e49\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u4fdd\u5b58\u6240\u6709\u6570\u636e\u3002","title":"\u8bb0\u5f55\u5668\u6587\u4ef6\u683c\u5f0f"},{"location":"foundations/#_12","text":"CARLA \u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u5173\u6e32\u67d3\u8d28\u91cf\u548c\u6548\u7387\u7684\u9009\u9879\u3002\u5728\u6700\u57fa\u672c\u7684\u5c42\u9762\u4e0a\uff0cCARLA \u63d0\u4f9b\u4e86\u4e24\u79cd\u8d28\u91cf\u9009\u9879\uff0c\u53ef\u4ee5\u5728\u9ad8\u89c4\u683c\u548c\u4f4e\u89c4\u683c\u786c\u4ef6\u4e0a\u8fd0\u884c\u5e76\u83b7\u5f97\u6700\u4f73\u6548\u679c\uff1a","title":"\u6e32\u67d3"},{"location":"foundations/#_13","text":"./CarlaUE4.sh -quality-level=Epic \u53f2\u8bd7\u6a21\u5f0f\u622a\u56fe","title":"\u53f2\u8bd7\u6a21\u5f0f"},{"location":"foundations/#_14","text":"./CarlaUE4.sh -quality-level=Low \u4f4e\u8d28\u91cf\u6a21\u5f0f\u622a\u56fe CARLA \u8fd8\u63d0\u4f9b\u6682\u505c\u6e32\u67d3\u6216\u79bb\u5c4f\u6e32\u67d3\u7684\u9009\u9879\uff0c\u4ee5\u4fbf\u66f4\u6709\u6548\u5730\u8bb0\u5f55\u6216\u8fd0\u884c\u4eff\u771f\u3002 \u6709\u5173\u6e32\u67d3\u9009\u9879\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002","title":"\u4f4e\u8d28\u91cf\u6a21\u5f0f"},{"location":"large_map_import/","text":"\u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe RoadRunner \u4e2d\u751f\u6210\u7684\u5927\u5730\u56fe\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u7684\u6e90\u4ee3\u7801\u7f16\u8bd1\u7248\u672c\u4e2d\uff0c\u5e76\u6253\u5305\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u5206\u53d1\u548c\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u4e0e\u6807\u51c6\u5730\u56fe\u7684\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86\u56fe\u5757\u548c\u6279\u91cf\u5bfc\u5165\u7684\u7279\u5b9a\u672f\u8bed\u3002 \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 \u8fdb\u884c\u5bfc\u5165 \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u6240\u6709\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u5e94\u653e\u7f6e\u5728CARLA \u6839\u76ee\u5f55\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e9b\u6587\u4ef6\u5e94\u5305\u62ec\uff1a \u591a\u4e2a .fbx \u6587\u4ef6\u4e2d\u7684\u5730\u56fe\u7f51\u683c\u4ee3\u8868\u5730\u56fe\u7684\u4e0d\u540c\u56fe\u5757\u3002 OpenDRIVE \u5b9a\u4e49\u4f4d\u4e8e\u5355\u4e2a .xodr \u6587\u4ef6\u4e2d\u3002 \u8b66\u544a \u60a8\u4e0d\u80fd\u540c\u65f6\u5bfc\u5165\u5927\u5730\u56fe\u548c\u6807\u51c6\u5730\u56fe\u3002 \u5730\u56fe\u56fe\u5757\u7684\u547d\u540d\u7ea6\u5b9a\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2a\u5730\u56fe\u56fe\u5757\u5e94\u6839\u636e\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a <mapName>_Tile_<x-coordinate>_<y-coordinate>.fbx \u8bf7\u6ce8\u610f\uff0c\u66f4\u6b63\u7684 y \u5750 \u6807\u662f\u6307 y \u8f74\u4e0a\u8f83\u4f4e\u7684\u56fe\u5757\u3002\u4f8b\u5982\uff0c Map01_Tile_0_1 \u4f1a\u5750\u5728 Map01_Tile_0_0 \u7684\u4e0b\u9762\u3002 \u751f\u6210\u7684 Import \u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2a\u5305\u542b\u7531\u56db\u4e2a\u56fe\u5757\u7ec4\u6210\u7684\u5927\u5730\u56fe\u7684\u5305\uff0c\u5176\u7ed3\u6784\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\uff1a Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 Map01_Tile_0_0.fbx \u251c\u2500\u2500 Map01_Tile_0_1.fbx \u251c\u2500\u2500 Map01_Tile_1_0.fbx \u251c\u2500\u2500 Map01_Tile_1_1.fbx \u2514\u2500\u2500 Map01.xodr \u7b14\u8bb0 \u8be5 package.json \u6587\u4ef6\u5e76\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u5982\u679c\u672a\u521b\u5efa package.json \u6587\u4ef6\uff0c\u81ea\u52a8\u5bfc\u5165\u8fc7\u7a0b\u5c06\u521b\u5efa\u4e00\u4e2a\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\u4e86\u89e3\u6709\u5173\u6784\u5efa\u81ea\u5df1 package.json \u7684\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 .json \u63cf\u8ff0\u662f\u5728\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u9009\u62e9\u624b\u52a8\u521b\u5efa\u63cf\u8ff0\u3002\u73b0\u6709 .json \u63cf\u8ff0\u5c06\u8986\u76d6\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u4efb\u4f55\u503c\u3002 \u8be5 .json \u6587\u4ef6\u5e94\u521b\u5efa\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u6587\u4ef6\u540d\u5c06\u662f\u5305\u5206\u53d1\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u63cf\u8ff0\u4e86 Maps \u548c Props \u7684 JSON \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a name: \u5730\u56fe\u7684\u540d\u79f0\u3002\u8fd9\u5fc5\u987b\u4e0e .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u3002 xodr: .xodr \u6587\u4ef6\u7684\u8def\u5f84\u3002 use_carla_materials: \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 CARLA \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u8d28\u3002 tile_size: \u56fe\u5757\u7684\u5927\u5c0f\u3002\u9ed8\u8ba4\u503c\u4e3a 2000 (2kmx2km)\u3002 tiles: \u7ec4\u6210\u6574\u4e2a\u5730\u56fe\u7684 .fbx \u56fe\u5757\u6587\u4ef6\u7684\u5217\u8868\u3002 Props \u4e0d\u5c5e\u4e8e \u672c \u6559\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u8bf7\u53c2\u9605\u672c\u6559\u7a0b\u4e86\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u9053\u5177\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"Map01\", \"xodr\": \"./Map01.xodr\", \"use_carla_materials\": true, \"tile_size\": 2000, \"tiles\": [ \"./Map01_Tile_0_0.fbx\", \"./Map01_Tile_0_1.fbx\", \"./Map01_Tile_1_0.fbx\", \"./Map01_Tile_1_1.fbx\" ] } ], \"props\": [] } \u8fdb\u884c\u5bfc\u5165 \u5c06\u6240\u6709\u6587\u4ef6\u653e\u5165 Import \u6587\u4ef6\u5939\u540e\uff0c\u5728\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make import \u6839\u636e\u60a8\u7684\u7cfb\u7edf\uff0c\u865a\u5e7b\u5f15\u64ce\u53ef\u80fd\u4f1a\u6d88\u8017\u592a\u591a\u5185\u5b58\u800c\u65e0\u6cd5\u4e00\u6b21\u5bfc\u5165\u6240\u6709\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9009\u62e9\u6279\u91cf\u5bfc\u5165\u6587\u4ef6\uff1a make import ARGS=\"--batch-size=200\" \u8be5 make import \u547d\u4ee4\u8fd8\u5b58\u5728\u4e24\u4e2a\u6807\u5fd7\uff1a --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u5bfc\u5165\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002\u4ec5\u5f53\u60a8 \u4e0d\u63d0\u4f9b \u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u6240\u6709\u6587\u4ef6\u90fd\u5c06\u88ab\u5bfc\u5165\u5e76\u51c6\u5907\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\u5730\u56fe\u5305\u5c06\u5728 Unreal/CarlaUE4/Content \u4e2d\u521b\u5efa\u3002\u5c06\u521b\u5efa\u4e00\u4e2a\u5e95\u56fe\u56fe\u5757 <mapName> \uff0c\u4f5c\u4e3a\u6240\u6709\u56fe\u5757\u7684\u6d41\u7ea7\u522b\u3002\u57fa\u7840\u56fe\u5757\u5c06\u5305\u542b\u5929\u7a7a\u3001\u5929\u6c14\u548c\u5927\u5730\u56fe\u53c2\u4e0e\u8005\uff0c\u53ef\u4f9b\u53c2\u4e0e\u8005\u4f7f\u7528\u3002 \u7b14\u8bb0 \u76ee\u524d\u4e0d\u5efa\u8bae\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4e3a\u6807\u51c6\u5730\u56fe\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5de5\u5177\uff0c\u4f8b\u5982\u9053\u8def\u753b\u5bb6\u3001\u7a0b\u5e8f\u5316\u5efa\u7b51\u7b49\u3002 \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe \u8981\u6253\u5305\u5927\u5730\u56fe\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u4f7f\u7528\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make package ARGS=\"--packages=<mapPackage>\" \u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002\u5728 Linux \u4e2d\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \u76ee\u5f55\u4e0b\uff0c\u5728 Windows \u4e2d\u6587\u4ef6\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u3002\u7136\u540e\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u53d1\u548c\u6253\u5305\u4ee5\u5728\u72ec\u7acb\u7684 CARLA \u5305\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u5bfc\u5165\u6253\u5305\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe"},{"location":"large_map_import/#_1","text":"RoadRunner \u4e2d\u751f\u6210\u7684\u5927\u5730\u56fe\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u7684\u6e90\u4ee3\u7801\u7f16\u8bd1\u7248\u672c\u4e2d\uff0c\u5e76\u6253\u5305\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u5206\u53d1\u548c\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u4e0e\u6807\u51c6\u5730\u56fe\u7684\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86\u56fe\u5757\u548c\u6279\u91cf\u5bfc\u5165\u7684\u7279\u5b9a\u672f\u8bed\u3002 \u6587\u4ef6\u548c\u6587\u4ef6\u5939 \u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09 \u8fdb\u884c\u5bfc\u5165 \u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe","title":"\u5bfc\u5165/\u6253\u5305\u5927\u5730\u56fe"},{"location":"large_map_import/#_2","text":"\u6240\u6709\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u5e94\u653e\u7f6e\u5728CARLA \u6839\u76ee\u5f55\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u4e9b\u6587\u4ef6\u5e94\u5305\u62ec\uff1a \u591a\u4e2a .fbx \u6587\u4ef6\u4e2d\u7684\u5730\u56fe\u7f51\u683c\u4ee3\u8868\u5730\u56fe\u7684\u4e0d\u540c\u56fe\u5757\u3002 OpenDRIVE \u5b9a\u4e49\u4f4d\u4e8e\u5355\u4e2a .xodr \u6587\u4ef6\u4e2d\u3002 \u8b66\u544a \u60a8\u4e0d\u80fd\u540c\u65f6\u5bfc\u5165\u5927\u5730\u56fe\u548c\u6807\u51c6\u5730\u56fe\u3002 \u5730\u56fe\u56fe\u5757\u7684\u547d\u540d\u7ea6\u5b9a\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2a\u5730\u56fe\u56fe\u5757\u5e94\u6839\u636e\u4ee5\u4e0b\u7ea6\u5b9a\u547d\u540d\uff1a <mapName>_Tile_<x-coordinate>_<y-coordinate>.fbx \u8bf7\u6ce8\u610f\uff0c\u66f4\u6b63\u7684 y \u5750 \u6807\u662f\u6307 y \u8f74\u4e0a\u8f83\u4f4e\u7684\u56fe\u5757\u3002\u4f8b\u5982\uff0c Map01_Tile_0_1 \u4f1a\u5750\u5728 Map01_Tile_0_0 \u7684\u4e0b\u9762\u3002 \u751f\u6210\u7684 Import \u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2a\u5305\u542b\u7531\u56db\u4e2a\u56fe\u5757\u7ec4\u6210\u7684\u5927\u5730\u56fe\u7684\u5305\uff0c\u5176\u7ed3\u6784\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\uff1a Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 Map01_Tile_0_0.fbx \u251c\u2500\u2500 Map01_Tile_0_1.fbx \u251c\u2500\u2500 Map01_Tile_1_0.fbx \u251c\u2500\u2500 Map01_Tile_1_1.fbx \u2514\u2500\u2500 Map01.xodr \u7b14\u8bb0 \u8be5 package.json \u6587\u4ef6\u5e76\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u5982\u679c\u672a\u521b\u5efa package.json \u6587\u4ef6\uff0c\u81ea\u52a8\u5bfc\u5165\u8fc7\u7a0b\u5c06\u521b\u5efa\u4e00\u4e2a\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\u4e86\u89e3\u6709\u5173\u6784\u5efa\u81ea\u5df1 package.json \u7684\u7ed3\u6784\u7684\u66f4\u591a\u4fe1\u606f\u3002","title":"\u6587\u4ef6\u548c\u6587\u4ef6\u5939"},{"location":"large_map_import/#json","text":".json \u63cf\u8ff0\u662f\u5728\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u9009\u62e9\u624b\u52a8\u521b\u5efa\u63cf\u8ff0\u3002\u73b0\u6709 .json \u63cf\u8ff0\u5c06\u8986\u76d6\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u4efb\u4f55\u503c\u3002 \u8be5 .json \u6587\u4ef6\u5e94\u521b\u5efa\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u3002\u6587\u4ef6\u540d\u5c06\u662f\u5305\u5206\u53d1\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u63cf\u8ff0\u4e86 Maps \u548c Props \u7684 JSON \u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a name: \u5730\u56fe\u7684\u540d\u79f0\u3002\u8fd9\u5fc5\u987b\u4e0e .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u3002 xodr: .xodr \u6587\u4ef6\u7684\u8def\u5f84\u3002 use_carla_materials: \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 CARLA \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u8d28\u3002 tile_size: \u56fe\u5757\u7684\u5927\u5c0f\u3002\u9ed8\u8ba4\u503c\u4e3a 2000 (2kmx2km)\u3002 tiles: \u7ec4\u6210\u6574\u4e2a\u5730\u56fe\u7684 .fbx \u56fe\u5757\u6587\u4ef6\u7684\u5217\u8868\u3002 Props \u4e0d\u5c5e\u4e8e \u672c \u6559\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u8bf7\u53c2\u9605\u672c\u6559\u7a0b\u4e86\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u9053\u5177\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"Map01\", \"xodr\": \"./Map01.xodr\", \"use_carla_materials\": true, \"tile_size\": 2000, \"tiles\": [ \"./Map01_Tile_0_0.fbx\", \"./Map01_Tile_0_1.fbx\", \"./Map01_Tile_1_0.fbx\", \"./Map01_Tile_1_1.fbx\" ] } ], \"props\": [] }","title":"\u521b\u5efa JSON \u63cf\u8ff0\uff08\u53ef\u9009\uff09"},{"location":"large_map_import/#_3","text":"\u5c06\u6240\u6709\u6587\u4ef6\u653e\u5165 Import \u6587\u4ef6\u5939\u540e\uff0c\u5728\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make import \u6839\u636e\u60a8\u7684\u7cfb\u7edf\uff0c\u865a\u5e7b\u5f15\u64ce\u53ef\u80fd\u4f1a\u6d88\u8017\u592a\u591a\u5185\u5b58\u800c\u65e0\u6cd5\u4e00\u6b21\u5bfc\u5165\u6240\u6709\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9009\u62e9\u6279\u91cf\u5bfc\u5165\u6587\u4ef6\uff1a make import ARGS=\"--batch-size=200\" \u8be5 make import \u547d\u4ee4\u8fd8\u5b58\u5728\u4e24\u4e2a\u6807\u5fd7\uff1a --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u5bfc\u5165\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002\u4ec5\u5f53\u60a8 \u4e0d\u63d0\u4f9b \u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u6240\u6709\u6587\u4ef6\u90fd\u5c06\u88ab\u5bfc\u5165\u5e76\u51c6\u5907\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\u5730\u56fe\u5305\u5c06\u5728 Unreal/CarlaUE4/Content \u4e2d\u521b\u5efa\u3002\u5c06\u521b\u5efa\u4e00\u4e2a\u5e95\u56fe\u56fe\u5757 <mapName> \uff0c\u4f5c\u4e3a\u6240\u6709\u56fe\u5757\u7684\u6d41\u7ea7\u522b\u3002\u57fa\u7840\u56fe\u5757\u5c06\u5305\u542b\u5929\u7a7a\u3001\u5929\u6c14\u548c\u5927\u5730\u56fe\u53c2\u4e0e\u8005\uff0c\u53ef\u4f9b\u53c2\u4e0e\u8005\u4f7f\u7528\u3002 \u7b14\u8bb0 \u76ee\u524d\u4e0d\u5efa\u8bae\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u4e3a\u6807\u51c6\u5730\u56fe\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5de5\u5177\uff0c\u4f8b\u5982\u9053\u8def\u753b\u5bb6\u3001\u7a0b\u5e8f\u5316\u5efa\u7b51\u7b49\u3002","title":"\u8fdb\u884c\u5bfc\u5165"},{"location":"large_map_import/#_4","text":"\u8981\u6253\u5305\u5927\u5730\u56fe\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u72ec\u7acb\u5305\u4e2d\u4f7f\u7528\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a make package ARGS=\"--packages=<mapPackage>\" \u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002\u5728 Linux \u4e2d\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \u76ee\u5f55\u4e0b\uff0c\u5728 Windows \u4e2d\u6587\u4ef6\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u3002\u7136\u540e\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u53d1\u548c\u6253\u5305\u4ee5\u5728\u72ec\u7acb\u7684 CARLA \u5305\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u5bfc\u5165\u6253\u5305\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u6253\u5305\u4e00\u5f20\u5927\u5730\u56fe"},{"location":"large_map_overview/","text":"\u5927\u5730\u56fe\u6982\u8ff0 \u5927\u5730\u56fe\u6982\u8ff0 \u74e6\u7247\u6d41 \u4f11\u7720\u7684\u53c2\u4e0e\u8005 \u5927\u5730\u56fe\u6982\u8ff0 Carla \u4e2d\u7684\u5927\u5730\u56fe\u529f\u80fd\u5141\u8bb8\u7528\u6237\u8fdb\u884c\u5927\u8303\u56f4\u7684\u4eff\u771f\u3002\u5728 Carla \u4e2d\uff0c\u5927\u5730\u56fe\u88ab\u5212\u5206\u4e3a\u4e0d\u5927\u4e8e 2kmx2km \u7684\u65b9\u5f62\u74e6\u7247\u3002\u74e6\u7247\u6839\u636e\u5b83\u4eec\u4e0e\u81ea\u4e3b\u8f66\u8f86\u7684\u63a5\u8fd1\u5ea6\uff08\u6d41\u8ddd\u79bb\uff09\u6d41\u5165\u548c\u6d41\u51fa\u670d\u52a1\u5668\u3002\u5730\u56fe\u4e0a\u7684\u5176\u4ed6\u53c2\u4e0e\u8005\u4e5f\u6839\u636e\u4ed6\u4eec\u4e0e\u81ea\u4e3b\u8f66\u8f86\u7684\u6d41\u8ddd\u79bb\u8fdb\u884c\u7ba1\u7406\u3002 \u74e6\u7247\u6d41 \u81ea\u4e3b\u8f66\u8f86\u5bf9\u4e8e\u5730\u56fe\u74e6\u7247\u7684\u88c5\u8f7d\u548c\u5378\u8f7d\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u6839\u636e\u8ddd\u81ea\u4e3b\u8f66\u8f86\u7684\u6d41\u8ddd\u79bb\u503c\uff0c\u74e6\u7247\u88ab\u6d41\u5f0f\u4f20\u8f93\u8fdb\u548c\u4f20\u51fa\u670d\u52a1\u5668\u3002\u4f8b\u5982\uff0c\u4f4d\u4e8e\u6d41\u8ddd\u79bb\u4e4b\u5916\u7684\u74e6\u7247\u5c06\u4e0d\u4f1a\u5728\u4eff\u771f\u4e2d\u6e32\u67d3\uff0c\u800c\u5c06\u6e32\u67d3\u6d41\u8ddd\u79bb\u5185\u7684\u74e6\u7247\u3002\u6e32\u67d3\u7684\u74e6\u7247\u5c06\u968f\u7740\u82f1\u96c4\u8f66\u8f86\u7684\u79fb\u52a8\u800c\u53d8\u5316\u3002 \u8981\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u4e3b\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u7684 set_attribute \u65b9\u6cd5\uff1a blueprint.set_attribute('role_name', 'hero' ) world.spawn_actor(blueprint, spawn_point) \u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u8bbe\u7f6e\u6d41\u8ddd\u79bb\uff0c\u4ee5\u4fbf\u5728\u81ea\u4e3b\u8f66\u8f86\u7684 2 \u516c\u91cc\u534a\u5f84\u5185\u52a0\u8f7d\u74e6\u7247\uff1a settings = world.get_settings() settings.tile_stream_distance = 2000 world.apply_settings(settings) \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b config.py \u547d\u4ee4\u8bbe\u7f6e\u6d41\u4f20\u8f93\u8ddd\u79bb: cd PythonAPI/util python3 config.py --tile-stream-distance 2000 \u7b14\u8bb0 \u5927\u5730\u56fe\u76ee\u524d\u4e00\u6b21\u4ec5\u652f\u6301\u4e00\u8f86\u81ea\u4e3b\u8f66\u8f86\u3002 \u4f11\u7720\u53c2\u4e0e\u8005 \u5927\u5730\u56fe\u529f\u80fd\u5411 Carla \u5f15\u5165\u4e86\u4f11\u7720\u53c2\u4e0e\u8005\u7684\u6982\u5ff5\u3002\u4f11\u7720\u53c2\u4e0e\u8005\u4ec5\u5b58\u5728\u4e8e\u5927\u5730\u56fe\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u4f11\u7720\u53c2\u4e0e\u8005\u662f\u4eff\u771f\u4e2d\u4f4d\u4e8e\u81ea\u4e3b\u8f66\u8f86\u7684 \u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb \u4e4b\u5916\u7684\u975e\u81ea\u4e3b\u8f66\u8f86\u53c2\u4e0e\u8005\uff0c\u4f8b\u5982\uff0c\u8fdc\u79bb\u81ea\u4e3b\u8f66\u8f86\u7684\u8f66\u8f86\u3002\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u53ef\u4ee5\u7b49\u4e8e\u6216\u5c0f\u4e8e\u6d41\u8ddd\u79bb\u3002 \u5982\u679c\u53c2\u4e0e\u8005\u53d1\u73b0\u81ea\u5df1\u5728\u81ea\u4e3b\u8f66\u8f86\u7684\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u4e4b\u5916\uff0c\u5b83\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u53c2\u4e0e\u8005\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u4e0d\u4f1a\u88ab\u6e32\u67d3\u3002\u5c3d\u7ba1\u4ecd\u7136\u53ef\u4ee5 \u8bbe\u7f6e \u4f4d\u7f6e\u548c \u53d8\u6362 \uff0c\u4f46\u4e0d\u4f1a\u8ba1\u7b97\u7269\u7406\u91cf\uff08\u9664\u975e\u901a\u8fc7\u6d41\u91cf\u7ba1\u7406\u5668\u4ee5\u6df7\u5408\u6a21\u5f0f\u8fd0\u884c\uff09 \u3002\u4e00\u65e6\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u518d\u6b21\u8fdb\u5165\u81ea\u4e3b\u8f66\u8f86\u7684\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u5185\uff0c\u5b83\u5c06\u9192\u6765\uff0c\u5e76\u4e14\u5176\u6e32\u67d3\u548c\u7269\u7406\u5c06\u6062\u590d\u6b63\u5e38\u3002 \u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u53c2\u4e0e\u8005\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u5728\u5927\u5730\u56fe\u4e2d\u64cd\u4f5c\u65f6\u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u9605\u8bfb \u4ea4\u901a\u7ba1\u7406\u5668 \u6587\u6863\u4ee5\u4e86\u89e3\u5176\u5de5\u4f5c\u539f\u7406\u3002 \u53c2\u4e0e\u8005\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u6216\u5728 world.tick() \u65f6\u9192\u6765\u3002 \u8981\u5c06\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u8bbe\u7f6e\u4e3a\u81ea\u4e3b\u8f66\u8f86\u5468\u56f4 2 \u516c\u91cc\u534a\u5f84\uff1a settings = world.get_settings() settings.actor_active_distance = 2000 world.apply_settings(settings) \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b config.py \u65b9\u6cd5\u8bbe\u7f6e\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb cd PythonAPI/util python3 config.py --actor-active-distance 2000 \u8981\u68c0\u67e5\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API\uff1a actor.is_dormant \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u5927\u578b\u5730\u56fe\u6982\u8ff0"},{"location":"large_map_overview/#_1","text":"\u5927\u5730\u56fe\u6982\u8ff0 \u74e6\u7247\u6d41 \u4f11\u7720\u7684\u53c2\u4e0e\u8005","title":"\u5927\u5730\u56fe\u6982\u8ff0"},{"location":"large_map_overview/#_2","text":"Carla \u4e2d\u7684\u5927\u5730\u56fe\u529f\u80fd\u5141\u8bb8\u7528\u6237\u8fdb\u884c\u5927\u8303\u56f4\u7684\u4eff\u771f\u3002\u5728 Carla \u4e2d\uff0c\u5927\u5730\u56fe\u88ab\u5212\u5206\u4e3a\u4e0d\u5927\u4e8e 2kmx2km \u7684\u65b9\u5f62\u74e6\u7247\u3002\u74e6\u7247\u6839\u636e\u5b83\u4eec\u4e0e\u81ea\u4e3b\u8f66\u8f86\u7684\u63a5\u8fd1\u5ea6\uff08\u6d41\u8ddd\u79bb\uff09\u6d41\u5165\u548c\u6d41\u51fa\u670d\u52a1\u5668\u3002\u5730\u56fe\u4e0a\u7684\u5176\u4ed6\u53c2\u4e0e\u8005\u4e5f\u6839\u636e\u4ed6\u4eec\u4e0e\u81ea\u4e3b\u8f66\u8f86\u7684\u6d41\u8ddd\u79bb\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u5927\u5730\u56fe\u6982\u8ff0"},{"location":"large_map_overview/#_3","text":"\u81ea\u4e3b\u8f66\u8f86\u5bf9\u4e8e\u5730\u56fe\u74e6\u7247\u7684\u88c5\u8f7d\u548c\u5378\u8f7d\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u6839\u636e\u8ddd\u81ea\u4e3b\u8f66\u8f86\u7684\u6d41\u8ddd\u79bb\u503c\uff0c\u74e6\u7247\u88ab\u6d41\u5f0f\u4f20\u8f93\u8fdb\u548c\u4f20\u51fa\u670d\u52a1\u5668\u3002\u4f8b\u5982\uff0c\u4f4d\u4e8e\u6d41\u8ddd\u79bb\u4e4b\u5916\u7684\u74e6\u7247\u5c06\u4e0d\u4f1a\u5728\u4eff\u771f\u4e2d\u6e32\u67d3\uff0c\u800c\u5c06\u6e32\u67d3\u6d41\u8ddd\u79bb\u5185\u7684\u74e6\u7247\u3002\u6e32\u67d3\u7684\u74e6\u7247\u5c06\u968f\u7740\u82f1\u96c4\u8f66\u8f86\u7684\u79fb\u52a8\u800c\u53d8\u5316\u3002 \u8981\u5c06\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u81ea\u4e3b\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u7684 set_attribute \u65b9\u6cd5\uff1a blueprint.set_attribute('role_name', 'hero' ) world.spawn_actor(blueprint, spawn_point) \u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u8bbe\u7f6e\u6d41\u8ddd\u79bb\uff0c\u4ee5\u4fbf\u5728\u81ea\u4e3b\u8f66\u8f86\u7684 2 \u516c\u91cc\u534a\u5f84\u5185\u52a0\u8f7d\u74e6\u7247\uff1a settings = world.get_settings() settings.tile_stream_distance = 2000 world.apply_settings(settings) \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b config.py \u547d\u4ee4\u8bbe\u7f6e\u6d41\u4f20\u8f93\u8ddd\u79bb: cd PythonAPI/util python3 config.py --tile-stream-distance 2000 \u7b14\u8bb0 \u5927\u5730\u56fe\u76ee\u524d\u4e00\u6b21\u4ec5\u652f\u6301\u4e00\u8f86\u81ea\u4e3b\u8f66\u8f86\u3002","title":"\u74e6\u7247\u6d41"},{"location":"large_map_overview/#_4","text":"\u5927\u5730\u56fe\u529f\u80fd\u5411 Carla \u5f15\u5165\u4e86\u4f11\u7720\u53c2\u4e0e\u8005\u7684\u6982\u5ff5\u3002\u4f11\u7720\u53c2\u4e0e\u8005\u4ec5\u5b58\u5728\u4e8e\u5927\u5730\u56fe\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u4f11\u7720\u53c2\u4e0e\u8005\u662f\u4eff\u771f\u4e2d\u4f4d\u4e8e\u81ea\u4e3b\u8f66\u8f86\u7684 \u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb \u4e4b\u5916\u7684\u975e\u81ea\u4e3b\u8f66\u8f86\u53c2\u4e0e\u8005\uff0c\u4f8b\u5982\uff0c\u8fdc\u79bb\u81ea\u4e3b\u8f66\u8f86\u7684\u8f66\u8f86\u3002\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u53ef\u4ee5\u7b49\u4e8e\u6216\u5c0f\u4e8e\u6d41\u8ddd\u79bb\u3002 \u5982\u679c\u53c2\u4e0e\u8005\u53d1\u73b0\u81ea\u5df1\u5728\u81ea\u4e3b\u8f66\u8f86\u7684\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u4e4b\u5916\uff0c\u5b83\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u53c2\u4e0e\u8005\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u4e0d\u4f1a\u88ab\u6e32\u67d3\u3002\u5c3d\u7ba1\u4ecd\u7136\u53ef\u4ee5 \u8bbe\u7f6e \u4f4d\u7f6e\u548c \u53d8\u6362 \uff0c\u4f46\u4e0d\u4f1a\u8ba1\u7b97\u7269\u7406\u91cf\uff08\u9664\u975e\u901a\u8fc7\u6d41\u91cf\u7ba1\u7406\u5668\u4ee5\u6df7\u5408\u6a21\u5f0f\u8fd0\u884c\uff09 \u3002\u4e00\u65e6\u4f11\u7720\u7684\u53c2\u4e0e\u8005\u518d\u6b21\u8fdb\u5165\u81ea\u4e3b\u8f66\u8f86\u7684\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u5185\uff0c\u5b83\u5c06\u9192\u6765\uff0c\u5e76\u4e14\u5176\u6e32\u67d3\u548c\u7269\u7406\u5c06\u6062\u590d\u6b63\u5e38\u3002 \u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u53c2\u4e0e\u8005\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u5728\u5927\u5730\u56fe\u4e2d\u64cd\u4f5c\u65f6\u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u9605\u8bfb \u4ea4\u901a\u7ba1\u7406\u5668 \u6587\u6863\u4ee5\u4e86\u89e3\u5176\u5de5\u4f5c\u539f\u7406\u3002 \u53c2\u4e0e\u8005\u5c06\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u6216\u5728 world.tick() \u65f6\u9192\u6765\u3002 \u8981\u5c06\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb\u8bbe\u7f6e\u4e3a\u81ea\u4e3b\u8f66\u8f86\u5468\u56f4 2 \u516c\u91cc\u534a\u5f84\uff1a settings = world.get_settings() settings.actor_active_distance = 2000 world.apply_settings(settings) \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b config.py \u65b9\u6cd5\u8bbe\u7f6e\u53c2\u4e0e\u8005\u6d3b\u52a8\u8ddd\u79bb cd PythonAPI/util python3 config.py --actor-active-distance 2000 \u8981\u68c0\u67e5\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API\uff1a actor.is_dormant \u5982\u679c\u60a8\u5bf9\u5927\u5730\u56fe\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4f11\u7720\u53c2\u4e0e\u8005"},{"location":"large_map_roadrunner/","text":"\u5728RoadRunner\u521b\u5efa\u5927\u5730\u56fe RoadRunner\u662f\u63a8\u8350\u7684\u8f6f\u4ef6\uff0c\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165CARLA\u7684\u5927\u5730\u56fe\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86RoadRunner\u662f\u4ec0\u4e48\uff0c\u5728\u6784\u5efa\u5927\u5730\u56fe\u65f6\u9700\u8981\u8003\u8651\u7684\u4e8b\u60c5\uff0c\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u81ea\u5b9a\u4e49\u7684\u5927\u5730\u56fe\uff0c\u4ee5\u4fbf\u5bfc\u5165CARLA\u3002 RoadRunner\u7b80\u4ecb \u5f00\u59cb\u4e4b\u524d \u5728RoadRunner\u4e2d\u521b\u5efa\u4e00\u4e2a\u5927\u5730\u56fe \u5728RoadRunner\u4e2d\u5bfc\u51fa\u4e00\u4e2a\u5927\u5730\u56fe \u4e0b\u4e00\u4e2a\u6b65\u9aa4 RoadRunner\u7b80\u4ecb RoadRunner\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8bbe\u8ba13D\u573a\u666f\u6765\u6a21\u62df\u548c\u6d4b\u8bd5\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u9053\u8def\u5e03\u5c40\u548c\u4f34\u968f\u7684opdrive\u548c\u51e0\u4f55\u4fe1\u606f\u3002 \u5728\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u5173\u4e8eRoadRunner\u7684\u4fe1\u606f \u3002 RoadRunner\u662fMATLAB\u6821\u56ed\u8bb8\u53ef\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8bb8\u591a\u5927\u5b66\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9650\u5236\u7684\u5b66\u672f\u8bbf\u95ee\u3002 \u68c0\u67e5 \u4e00\u4e0b\u4f60\u7684\u5927\u5b66\u662f\u5426\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5982\u679c\u6709\u4efb\u4f55\u5173\u4e8e\u53ef\u8bbf\u95ee\u6027\u7684\u95ee\u9898\u6216\u9ebb\u70e6\uff0c\u8bf7\u8054\u7cfbautomated-driving@mathworks.com\u3002 \u8fd8\u6709\u4e00\u4e2a\u8bd5\u7528\u7248 \u3002 \u53c2\u52a0CARLA\u6392\u884c\u699c\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97RoadRunner\u7684\u8bb8\u53ef\u8bc1\u3002 \u70b9\u51fb\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u4fe1\u606f \u3002 \u5f00\u59cb\u4e4b\u524d \u60a8\u9700\u8981\u5b89\u88c5RoadRunner\u3002\u60a8\u53ef\u4ee5\u6309\u7167Mathworks\u7f51\u7ad9\u4e0a\u7684 \u5b89\u88c5\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002 \u5728RoadRunner\u4e2d\u521b\u5efa\u4e00\u4e2a\u5927\u5730\u56fe \u5982\u4f55\u5728RoadRunner\u4e2d\u6784\u5efa\u4e00\u4e2a\u5927\u5730\u56fe\u7684\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c\u5728 RoadRunner\u6587\u6863 \u4e2d\u6709\u89c6\u9891\u6559\u7a0b\u3002 \u5982\u679c\u60a8\u6b63\u5728\u6784\u5efa\u5e26\u6709\u9ad8\u7a0b\u7684\u5927\u5730\u56fe\uff0c\u5219\u5efa\u8bae\u5730\u56fe\u7684\u6700\u5927\u5c3a\u5bf8\u4e3a20km \u00d7 20km\u3002\u5927\u4e8e\u8fd9\u4e2a\u503c\u7684\u5730\u56fe\u53ef\u80fd\u4f1a\u5bfc\u81f4RoadRunner\u5728\u5bfc\u51fa\u65f6\u5d29\u6e83\u3002 \u5728RoadRunner\u4e2d\u5bfc\u51fa\u4e00\u4e2a\u5927\u5730\u56fe \u4e0b\u9762\u662f\u4eceRoadRunner\u5bfc\u51fa\u81ea\u5b9a\u4e49\u5927\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002 \u4e00\u65e6\u4f60\u5728RoadRunner\u4e2d\u5236\u4f5c\u4e86\u4f60\u7684\u5730\u56fe\uff0c\u4f60\u5c31\u53ef\u4ee5\u5bfc\u51fa\u5b83\u4e86\u3002\u8bf7\u6ce8\u610f\uff0c\u9053\u8def\u5e03\u5c40\u5728\u5bfc\u51fa\u540e\u4e0d\u80fd\u4fee\u6539\u3002\u5bfc\u51fa\u524d\uff0c\u8bf7\u786e\u4fdd: \u5730\u56fe\u4ee5(0,0)\u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u5730\u53ef\u89c6\u5316\u3002 \u6620\u5c04\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u4e00\u65e6\u5730\u56fe\u51c6\u5907\u597d\u4e86\uff0c\u70b9\u51fbopdrive\u9884\u89c8\u5de5\u5177\u6309\u94ae\u6765\u53ef\u89c6\u5316opdrive\u9053\u8def\u7f51\u7edc\uff0c\u5e76\u7ed9\u4e00\u5207\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 _opdrive\u9884\u89c8\u5de5\u5177_\u4f7f\u5b83\u66f4\u5bb9\u6613\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8def\u53e3\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u70b9\u51fb\u2018Maneuver Tool\u2019\uff0c\u7136\u540e\u70b9\u51fb\u2018Rebuild Maneuver Roads\u2019\u3002 \u901a\u8fc7\u70b9\u51fb \u4e16\u754c\u8bbe\u7f6e\u5de5\u5177 \u5e76\u62d6\u52a8\u84dd\u8272\u8fb9\u754c\u6846\u7684\u8fb9\u7f18\u4ee5\u5305\u542b\u60a8\u60f3\u8981\u5bfc\u51fa\u7684\u6574\u4e2a\u533a\u57df\uff0c\u786e\u4fdd\u9009\u62e9\u5b8c\u6574\u7684\u5730\u56fe\u8fdb\u884c\u5bfc\u51fa\u3002\u5f53\u5b83\u51c6\u5907\u597d\u4e86\uff0c\u70b9\u51fbApply World Changes\u3002 \u5f53\u60a8\u51c6\u5907\u5bfc\u51fa\u65f6: 1. \u5bfc\u51fa .fbx \u6587\u4ef6: \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\u9009\u62e9,\u9009\u62e9 File -> Export -> Firebox (.fbx) __2.__\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d: \u68c0\u67e5\u4ee5\u4e0b\u9009\u9879: Split by Segmentation : \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u5bf9\u7f51\u683c\u8fdb\u884c\u5212\u5206\uff0c\u6539\u5584\u884c\u4eba\u5bfc\u822a\u3002 Power of Two Texture Dimensions : \u63d0\u9ad8\u4e86\u6027\u80fd\u3002 Embed Textures : \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 Export to Tiles : \u9009\u62e9\u74f7\u7816\u7684\u5927\u5c0f\u3002CARLA\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5c3a\u5bf8\u662f2000 x 2000\u3002 Export Individual Tiles : \u751f\u6210\u5728CARLA\u4e2d\u6d41\u5f0f\u4f20\u8f93\u5927\u5730\u56fe\u6240\u9700\u7684\u5355\u4e2a\u5757\u3002 3. \u5bfc\u51fa .xodr \u6587\u4ef6: \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\u9009\u62e9 File -> Export -> OpendDRIVE (.xodr) \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u7684\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u3002 \u4e0b\u4e00\u4e2a\u6b65\u9aa4 \u73b0\u5728\u53ef\u4ee5\u5c06\u5730\u56fe\u5bfc\u5165CARLA\u4e86\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5bfc\u5165\u5927\u5730\u56fe\u6307\u5357 \u3002 \u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5728 \u8bba\u575b \u4e0a\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u5728RoadRunner\u4e2d\u521b\u5efa\u5927\u5730\u56fe"},{"location":"large_map_roadrunner/#roadrunner","text":"RoadRunner\u662f\u63a8\u8350\u7684\u8f6f\u4ef6\uff0c\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165CARLA\u7684\u5927\u5730\u56fe\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86RoadRunner\u662f\u4ec0\u4e48\uff0c\u5728\u6784\u5efa\u5927\u5730\u56fe\u65f6\u9700\u8981\u8003\u8651\u7684\u4e8b\u60c5\uff0c\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u81ea\u5b9a\u4e49\u7684\u5927\u5730\u56fe\uff0c\u4ee5\u4fbf\u5bfc\u5165CARLA\u3002 RoadRunner\u7b80\u4ecb \u5f00\u59cb\u4e4b\u524d \u5728RoadRunner\u4e2d\u521b\u5efa\u4e00\u4e2a\u5927\u5730\u56fe \u5728RoadRunner\u4e2d\u5bfc\u51fa\u4e00\u4e2a\u5927\u5730\u56fe \u4e0b\u4e00\u4e2a\u6b65\u9aa4","title":"\u5728RoadRunner\u521b\u5efa\u5927\u5730\u56fe"},{"location":"large_map_roadrunner/#roadrunner_1","text":"RoadRunner\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8bbe\u8ba13D\u573a\u666f\u6765\u6a21\u62df\u548c\u6d4b\u8bd5\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u9053\u8def\u5e03\u5c40\u548c\u4f34\u968f\u7684opdrive\u548c\u51e0\u4f55\u4fe1\u606f\u3002 \u5728\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u5173\u4e8eRoadRunner\u7684\u4fe1\u606f \u3002 RoadRunner\u662fMATLAB\u6821\u56ed\u8bb8\u53ef\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8bb8\u591a\u5927\u5b66\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9650\u5236\u7684\u5b66\u672f\u8bbf\u95ee\u3002 \u68c0\u67e5 \u4e00\u4e0b\u4f60\u7684\u5927\u5b66\u662f\u5426\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5982\u679c\u6709\u4efb\u4f55\u5173\u4e8e\u53ef\u8bbf\u95ee\u6027\u7684\u95ee\u9898\u6216\u9ebb\u70e6\uff0c\u8bf7\u8054\u7cfbautomated-driving@mathworks.com\u3002 \u8fd8\u6709\u4e00\u4e2a\u8bd5\u7528\u7248 \u3002 \u53c2\u52a0CARLA\u6392\u884c\u699c\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97RoadRunner\u7684\u8bb8\u53ef\u8bc1\u3002 \u70b9\u51fb\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a\u4fe1\u606f \u3002","title":"RoadRunner\u7b80\u4ecb"},{"location":"large_map_roadrunner/#_1","text":"\u60a8\u9700\u8981\u5b89\u88c5RoadRunner\u3002\u60a8\u53ef\u4ee5\u6309\u7167Mathworks\u7f51\u7ad9\u4e0a\u7684 \u5b89\u88c5\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"large_map_roadrunner/#roadrunner_2","text":"\u5982\u4f55\u5728RoadRunner\u4e2d\u6784\u5efa\u4e00\u4e2a\u5927\u5730\u56fe\u7684\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c\u5728 RoadRunner\u6587\u6863 \u4e2d\u6709\u89c6\u9891\u6559\u7a0b\u3002 \u5982\u679c\u60a8\u6b63\u5728\u6784\u5efa\u5e26\u6709\u9ad8\u7a0b\u7684\u5927\u5730\u56fe\uff0c\u5219\u5efa\u8bae\u5730\u56fe\u7684\u6700\u5927\u5c3a\u5bf8\u4e3a20km \u00d7 20km\u3002\u5927\u4e8e\u8fd9\u4e2a\u503c\u7684\u5730\u56fe\u53ef\u80fd\u4f1a\u5bfc\u81f4RoadRunner\u5728\u5bfc\u51fa\u65f6\u5d29\u6e83\u3002","title":"\u5728RoadRunner\u4e2d\u521b\u5efa\u4e00\u4e2a\u5927\u5730\u56fe"},{"location":"large_map_roadrunner/#roadrunner_3","text":"\u4e0b\u9762\u662f\u4eceRoadRunner\u5bfc\u51fa\u81ea\u5b9a\u4e49\u5927\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002 \u4e00\u65e6\u4f60\u5728RoadRunner\u4e2d\u5236\u4f5c\u4e86\u4f60\u7684\u5730\u56fe\uff0c\u4f60\u5c31\u53ef\u4ee5\u5bfc\u51fa\u5b83\u4e86\u3002\u8bf7\u6ce8\u610f\uff0c\u9053\u8def\u5e03\u5c40\u5728\u5bfc\u51fa\u540e\u4e0d\u80fd\u4fee\u6539\u3002\u5bfc\u51fa\u524d\uff0c\u8bf7\u786e\u4fdd: \u5730\u56fe\u4ee5(0,0)\u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u5730\u53ef\u89c6\u5316\u3002 \u6620\u5c04\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u4e00\u65e6\u5730\u56fe\u51c6\u5907\u597d\u4e86\uff0c\u70b9\u51fbopdrive\u9884\u89c8\u5de5\u5177\u6309\u94ae\u6765\u53ef\u89c6\u5316opdrive\u9053\u8def\u7f51\u7edc\uff0c\u5e76\u7ed9\u4e00\u5207\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 _opdrive\u9884\u89c8\u5de5\u5177_\u4f7f\u5b83\u66f4\u5bb9\u6613\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8def\u53e3\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u70b9\u51fb\u2018Maneuver Tool\u2019\uff0c\u7136\u540e\u70b9\u51fb\u2018Rebuild Maneuver Roads\u2019\u3002 \u901a\u8fc7\u70b9\u51fb \u4e16\u754c\u8bbe\u7f6e\u5de5\u5177 \u5e76\u62d6\u52a8\u84dd\u8272\u8fb9\u754c\u6846\u7684\u8fb9\u7f18\u4ee5\u5305\u542b\u60a8\u60f3\u8981\u5bfc\u51fa\u7684\u6574\u4e2a\u533a\u57df\uff0c\u786e\u4fdd\u9009\u62e9\u5b8c\u6574\u7684\u5730\u56fe\u8fdb\u884c\u5bfc\u51fa\u3002\u5f53\u5b83\u51c6\u5907\u597d\u4e86\uff0c\u70b9\u51fbApply World Changes\u3002 \u5f53\u60a8\u51c6\u5907\u5bfc\u51fa\u65f6: 1. \u5bfc\u51fa .fbx \u6587\u4ef6: \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\u9009\u62e9,\u9009\u62e9 File -> Export -> Firebox (.fbx) __2.__\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d: \u68c0\u67e5\u4ee5\u4e0b\u9009\u9879: Split by Segmentation : \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u5bf9\u7f51\u683c\u8fdb\u884c\u5212\u5206\uff0c\u6539\u5584\u884c\u4eba\u5bfc\u822a\u3002 Power of Two Texture Dimensions : \u63d0\u9ad8\u4e86\u6027\u80fd\u3002 Embed Textures : \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 Export to Tiles : \u9009\u62e9\u74f7\u7816\u7684\u5927\u5c0f\u3002CARLA\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u5c3a\u5bf8\u662f2000 x 2000\u3002 Export Individual Tiles : \u751f\u6210\u5728CARLA\u4e2d\u6d41\u5f0f\u4f20\u8f93\u5927\u5730\u56fe\u6240\u9700\u7684\u5355\u4e2a\u5757\u3002 3. \u5bfc\u51fa .xodr \u6587\u4ef6: \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\u9009\u62e9 File -> Export -> OpendDRIVE (.xodr) \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u7684\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u3002","title":"\u5728RoadRunner\u4e2d\u5bfc\u51fa\u4e00\u4e2a\u5927\u5730\u56fe"},{"location":"large_map_roadrunner/#_2","text":"\u73b0\u5728\u53ef\u4ee5\u5c06\u5730\u56fe\u5bfc\u5165CARLA\u4e86\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5bfc\u5165\u5927\u5730\u56fe\u6307\u5357 \u3002 \u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5728 \u8bba\u575b \u4e0a\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4e0b\u4e00\u4e2a\u6b65\u9aa4"},{"location":"map_town01/","text":"\u57ce\u9547 1 \u57ce\u9547 1 \u662f\u4e00\u5ea7\u5c0f\u9547\uff0c\u62e5\u6709\u4f17\u591a\u4e01\u5b57\u8def\u53e3\u548c\u5404\u79cd\u5efa\u7b51\uff0c\u5468\u56f4\u73af\u7ed5\u7740\u9488\u53f6\u6811\uff0c\u8fd8\u6709\u51e0\u5ea7\u6a2a\u8de8\u6cb3\u6d41\u7684\u5c0f\u6865\uff0c\u5c06\u5c0f\u9547\u5206\u4e3a\u4e24\u534a\u3002 \u8def\u7f51 \u9053\u8def\u7f51\u7edc\u6709\u51e0\u5ea7\u8de8\u6c34\u6865\u6881\u548c\u8bb8\u591a\u7b80\u5355\u7684\u4e01\u5b57\u8def\u53e3\u3002 \u7279\u5f81 \u5730\u56fe\u4e0a\u6709\u4e00\u6761\u5c0f\u6cb3\uff0c\u6709\u51e0\u4e2a\u8def\u53e3\u3002 \u5546\u4e1a\u98ce\u683c\u5efa\u7b51\u6797\u7acb\u3002 \u8fd8\u6709\u4f4f\u5b85\u697c\u3002","title":"\u57ce\u9547 1"},{"location":"map_town01/#1","text":"\u57ce\u9547 1 \u662f\u4e00\u5ea7\u5c0f\u9547\uff0c\u62e5\u6709\u4f17\u591a\u4e01\u5b57\u8def\u53e3\u548c\u5404\u79cd\u5efa\u7b51\uff0c\u5468\u56f4\u73af\u7ed5\u7740\u9488\u53f6\u6811\uff0c\u8fd8\u6709\u51e0\u5ea7\u6a2a\u8de8\u6cb3\u6d41\u7684\u5c0f\u6865\uff0c\u5c06\u5c0f\u9547\u5206\u4e3a\u4e24\u534a\u3002","title":"\u57ce\u9547 1"},{"location":"map_town01/#_1","text":"\u9053\u8def\u7f51\u7edc\u6709\u51e0\u5ea7\u8de8\u6c34\u6865\u6881\u548c\u8bb8\u591a\u7b80\u5355\u7684\u4e01\u5b57\u8def\u53e3\u3002","title":"\u8def\u7f51"},{"location":"map_town01/#_2","text":"\u5730\u56fe\u4e0a\u6709\u4e00\u6761\u5c0f\u6cb3\uff0c\u6709\u51e0\u4e2a\u8def\u53e3\u3002 \u5546\u4e1a\u98ce\u683c\u5efa\u7b51\u6797\u7acb\u3002 \u8fd8\u6709\u4f4f\u5b85\u697c\u3002","title":"\u7279\u5f81"},{"location":"map_town02/","text":"\u57ce\u9547 2 \u57ce\u9547 2 \u662f\u4e00\u4e2a\u5c0f\u9547\uff0c\u6709\u4f17\u591a\u7684\u4e01\u5b57\u8def\u53e3\u548c\u5404\u79cd\u5efa\u7b51\u7269\uff0c\u6709\u6210\u7247\u7684\u9488\u53f6\u6811\u3001\u4e00\u4e2a\u516c\u56ed\u4ee5\u53ca\u4e00\u4e2a\u4f4f\u5b85\u548c\u5546\u4e1a\u533a\u3002 \u8def\u7f51 \u8def\u7f51\u7531\u8bb8\u591a\u7b80\u5355\u7684\u4e01\u5b57\u8def\u53e3\u7ec4\u6210\u3002 \u7279\u5f81 \u5730\u56fe\u4e0a\u6709\u5546\u4e1a\u533a\u548c\u5927\u8857\u3002 \u8fd8\u6709\u4f4f\u5b85\u516c\u5bd3\u697c\u548c\u6559\u5802\u3002 \u6709\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002 \u8fd8\u6709\u7eff\u6811\u6210\u836b\u7684\u9053\u8def\u3002","title":"\u57ce\u9547 2"},{"location":"map_town02/#2","text":"\u57ce\u9547 2 \u662f\u4e00\u4e2a\u5c0f\u9547\uff0c\u6709\u4f17\u591a\u7684\u4e01\u5b57\u8def\u53e3\u548c\u5404\u79cd\u5efa\u7b51\u7269\uff0c\u6709\u6210\u7247\u7684\u9488\u53f6\u6811\u3001\u4e00\u4e2a\u516c\u56ed\u4ee5\u53ca\u4e00\u4e2a\u4f4f\u5b85\u548c\u5546\u4e1a\u533a\u3002","title":"\u57ce\u9547 2"},{"location":"map_town02/#_1","text":"\u8def\u7f51\u7531\u8bb8\u591a\u7b80\u5355\u7684\u4e01\u5b57\u8def\u53e3\u7ec4\u6210\u3002","title":"\u8def\u7f51"},{"location":"map_town02/#_2","text":"\u5730\u56fe\u4e0a\u6709\u5546\u4e1a\u533a\u548c\u5927\u8857\u3002 \u8fd8\u6709\u4f4f\u5b85\u516c\u5bd3\u697c\u548c\u6559\u5802\u3002 \u6709\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002 \u8fd8\u6709\u7eff\u6811\u6210\u836b\u7684\u9053\u8def\u3002","title":"\u7279\u5f81"},{"location":"map_town03/","text":"\u57ce\u9547 3 \u57ce\u9547 3 \u662f\u4e00\u4e2a\u8f83\u5927\u7684\u9547\uff0c\u5177\u6709\u5e02\u4e2d\u5fc3\u57ce\u533a\u7684\u7279\u70b9\u3002\u8be5\u5730\u56fe\u5305\u62ec\u4e00\u4e9b\u6709\u8da3\u7684\u9053\u8def\u7f51\u7edc\u7279\u5f81\uff0c\u4f8b\u5982\u73af\u5c9b\u3001\u5730\u4e0b\u901a\u9053\u548c\u7acb\u4ea4\u6865\u3002\u8be5\u9547\u8fd8\u5305\u62ec\u4e00\u6761\u9ad8\u67b6\u5730\u94c1\u8f68\u9053\u548c\u4e00\u5ea7\u6b63\u5728\u5efa\u8bbe\u4e2d\u7684\u5927\u578b\u5efa\u7b51\u3002 \u8def\u7f51 \u8def\u7f51\u8bbe\u6709\u4e2d\u592e\u73af\u5c9b\u548c\u4f4f\u5b85\u6b7b\u80e1\u540c\uff0c\u4ee5\u53ca\u4f17\u591a\u56db\u5411\u8def\u53e3\u548c\u4e01\u5b57\u8def\u53e3\u3002 \u7279\u5f81 \u8be5\u5730\u56fe\u4ee5\u7a81\u51fa\u7684\u4e2d\u592e\u73af\u5c9b\u4e3a\u7279\u8272\uff0c\u5176\u4e2d\u6709\u4e00\u5ea7\u73b0\u4ee3\u4e3b\u4e49\u7eaa\u5ff5\u7891\u548c\u6c34\u57df\u3002 \u4e2d\u5fc3\u5468\u56f4\u6709\u4e00\u6761\u51f8\u8d77\u7684\u5730\u94c1\u8f68\u9053\u3002 \u4e00\u4e2a\u5927\u8def\u53e3\u65c1\u8fb9\u8fd8\u6709\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002 \u8def\u7f51\u8bbe\u6709\u5730\u4e0b\u901a\u9053\u3002 \u8fd9\u91cc\u6709\u516c\u56ed\u548c\u5404\u79cd\u98ce\u683c\u5404\u5f02\u7684\u5546\u4e1a\u5efa\u7b51\u548c\u4f4f\u5b85\u697c\u3002","title":"\u57ce\u9547 3"},{"location":"map_town03/#3","text":"\u57ce\u9547 3 \u662f\u4e00\u4e2a\u8f83\u5927\u7684\u9547\uff0c\u5177\u6709\u5e02\u4e2d\u5fc3\u57ce\u533a\u7684\u7279\u70b9\u3002\u8be5\u5730\u56fe\u5305\u62ec\u4e00\u4e9b\u6709\u8da3\u7684\u9053\u8def\u7f51\u7edc\u7279\u5f81\uff0c\u4f8b\u5982\u73af\u5c9b\u3001\u5730\u4e0b\u901a\u9053\u548c\u7acb\u4ea4\u6865\u3002\u8be5\u9547\u8fd8\u5305\u62ec\u4e00\u6761\u9ad8\u67b6\u5730\u94c1\u8f68\u9053\u548c\u4e00\u5ea7\u6b63\u5728\u5efa\u8bbe\u4e2d\u7684\u5927\u578b\u5efa\u7b51\u3002","title":"\u57ce\u9547 3"},{"location":"map_town03/#_1","text":"\u8def\u7f51\u8bbe\u6709\u4e2d\u592e\u73af\u5c9b\u548c\u4f4f\u5b85\u6b7b\u80e1\u540c\uff0c\u4ee5\u53ca\u4f17\u591a\u56db\u5411\u8def\u53e3\u548c\u4e01\u5b57\u8def\u53e3\u3002","title":"\u8def\u7f51"},{"location":"map_town03/#_2","text":"\u8be5\u5730\u56fe\u4ee5\u7a81\u51fa\u7684\u4e2d\u592e\u73af\u5c9b\u4e3a\u7279\u8272\uff0c\u5176\u4e2d\u6709\u4e00\u5ea7\u73b0\u4ee3\u4e3b\u4e49\u7eaa\u5ff5\u7891\u548c\u6c34\u57df\u3002 \u4e2d\u5fc3\u5468\u56f4\u6709\u4e00\u6761\u51f8\u8d77\u7684\u5730\u94c1\u8f68\u9053\u3002 \u4e00\u4e2a\u5927\u8def\u53e3\u65c1\u8fb9\u8fd8\u6709\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002 \u8def\u7f51\u8bbe\u6709\u5730\u4e0b\u901a\u9053\u3002 \u8fd9\u91cc\u6709\u516c\u56ed\u548c\u5404\u79cd\u98ce\u683c\u5404\u5f02\u7684\u5546\u4e1a\u5efa\u7b51\u548c\u4f4f\u5b85\u697c\u3002","title":"\u7279\u5f81"},{"location":"map_town04/","text":"\u57ce\u9547 4 \u57ce\u9547 4 \u662f\u4e00\u4e2a\u4ee5\u96ea\u5c71\u548c\u9488\u53f6\u6811\u4e3a\u80cc\u666f\u7684\u5c0f\u9547\u3002\u4e00\u6761\u591a\u8f66\u9053\u9053\u8def\u4ee5 \u201c8 \u5b57\u5f62\u201d \u73af\u7ed5\u57ce\u9547\u3002 \u8def\u7f51 \u8def\u7f51\u7531\u5546\u4e1a\u548c\u4f4f\u5b85\u5efa\u7b51\u4e4b\u95f4\u7684\u77ed\u8857\u9053\u548c\u4ea4\u53c9\u8def\u53e3\u7ec4\u6210\u7684\u5c0f\u578b\u7f51\u7edc\u7ec4\u6210\uff0c\u201c8 \u5b57\u5f62\u201d\u98ce\u683c\u7684\u73af\u5f62\u9053\u8def\u73af\u7ed5\u5efa\u7b51\u7269\u548c\u9644\u8fd1\u7684\u4e00\u5ea7\u5c71\u30028 \u5b57\u5f62\u7684\u5341\u5b57\u4ee3\u8868\u5730\u4e0b\u901a\u9053/\u7acb\u4ea4\u6865\u548c\u73af\u5f62\u652f\u8def\u3002 \u8be5\u7f51\u7edc\u8fd8\u8bbe\u6709\u5e26\u73af\u5f62\u652f\u8def\u7684\u5730\u4e0b\u901a\u9053\u548c\u7acb\u4ea4\u6865\u3002 \u7279\u5f81 \u4f9d\u5c71\u800c\u5efa\u7684\u52a0\u6cb9\u7ad9\u3002 \u9547\u4e2d\u5fc3\u662f\u4e00\u4e2a\u8bbe\u6709\u6237\u5916\u5ea7\u4f4d\u7684\u6b65\u884c\u8d2d\u7269\u5546\u573a\u3002 \u8fd9\u91cc\u6709\u5404\u79cd\u98ce\u683c\u7684\u4f4f\u5b85\u548c\u5546\u4e1a\u5efa\u7b51\u4ee5\u53ca\u8857\u9053\uff0c\u5305\u62ec\u6811\u6728\u548c\u5e7f\u544a\u724c\u3002","title":"\u57ce\u9547 4"},{"location":"map_town04/#4","text":"\u57ce\u9547 4 \u662f\u4e00\u4e2a\u4ee5\u96ea\u5c71\u548c\u9488\u53f6\u6811\u4e3a\u80cc\u666f\u7684\u5c0f\u9547\u3002\u4e00\u6761\u591a\u8f66\u9053\u9053\u8def\u4ee5 \u201c8 \u5b57\u5f62\u201d \u73af\u7ed5\u57ce\u9547\u3002","title":"\u57ce\u9547 4"},{"location":"map_town04/#_1","text":"\u8def\u7f51\u7531\u5546\u4e1a\u548c\u4f4f\u5b85\u5efa\u7b51\u4e4b\u95f4\u7684\u77ed\u8857\u9053\u548c\u4ea4\u53c9\u8def\u53e3\u7ec4\u6210\u7684\u5c0f\u578b\u7f51\u7edc\u7ec4\u6210\uff0c\u201c8 \u5b57\u5f62\u201d\u98ce\u683c\u7684\u73af\u5f62\u9053\u8def\u73af\u7ed5\u5efa\u7b51\u7269\u548c\u9644\u8fd1\u7684\u4e00\u5ea7\u5c71\u30028 \u5b57\u5f62\u7684\u5341\u5b57\u4ee3\u8868\u5730\u4e0b\u901a\u9053/\u7acb\u4ea4\u6865\u548c\u73af\u5f62\u652f\u8def\u3002 \u8be5\u7f51\u7edc\u8fd8\u8bbe\u6709\u5e26\u73af\u5f62\u652f\u8def\u7684\u5730\u4e0b\u901a\u9053\u548c\u7acb\u4ea4\u6865\u3002","title":"\u8def\u7f51"},{"location":"map_town04/#_2","text":"\u4f9d\u5c71\u800c\u5efa\u7684\u52a0\u6cb9\u7ad9\u3002 \u9547\u4e2d\u5fc3\u662f\u4e00\u4e2a\u8bbe\u6709\u6237\u5916\u5ea7\u4f4d\u7684\u6b65\u884c\u8d2d\u7269\u5546\u573a\u3002 \u8fd9\u91cc\u6709\u5404\u79cd\u98ce\u683c\u7684\u4f4f\u5b85\u548c\u5546\u4e1a\u5efa\u7b51\u4ee5\u53ca\u8857\u9053\uff0c\u5305\u62ec\u6811\u6728\u548c\u5e7f\u544a\u724c\u3002","title":"\u7279\u5f81"},{"location":"map_town05/","text":"\u57ce\u9547 5 \u57ce\u9547 5 \u662f\u4e00\u4e2a\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u9488\u53f6\u6811\u8986\u76d6\u7684\u5c71\u4e18\u4e3a\u80cc\u666f\uff0c\u6709\u9ad8\u67b6\u9ad8\u901f\u516c\u8def\u548c\u5927\u578b\u591a\u8f66\u9053\u9053\u8def\u548c\u4ea4\u53c9\u53e3\u3002 \u8def\u7f51 \u8fd9\u4e9b\u9053\u8def\u7531\u8bb8\u591a\u53cc\u8f66\u9053\u57ce\u5e02\u9053\u8def\u7ec4\u6210\uff0c\u5728\u8bb8\u591a\u5927\u578b\u8def\u53e3\u76f8\u4ea4\u3002 \u57ce\u9547\u4e24\u4fa7\u7684\u8def\u53e3\u53ef\u901a\u5f80\u7528\u4f5c\u73af\u8def\u7684\u9ad8\u67b6\u9ad8\u901f\u516c\u8def\u3002 \u7279\u5f81 \u8be5\u9547\u62e5\u6709\u4f17\u591a\u5546\u4e1a\u5efa\u7b51\u3002 \u57ce\u9547\u4e2d\u5fc3\u8fd8\u6709\u4e00\u5ea7\u5efa\u7b51\u6b63\u5728\u5efa\u8bbe\u4e2d\u3002 \u6709\u4e00\u4e2a\u505c\u8f66\u573a\uff0c\u5360\u636e\u4e00\u4e2a\u8857\u533a\u3002 \u9053\u8def\u5ef6\u4f38\u5230\u4e00\u5904\u5546\u4e1a\u5efa\u7b51\u4e0b\u65b9\u3002","title":"\u57ce\u9547 5"},{"location":"map_town05/#5","text":"\u57ce\u9547 5 \u662f\u4e00\u4e2a\u57ce\u5e02\u73af\u5883\uff0c\u4ee5\u9488\u53f6\u6811\u8986\u76d6\u7684\u5c71\u4e18\u4e3a\u80cc\u666f\uff0c\u6709\u9ad8\u67b6\u9ad8\u901f\u516c\u8def\u548c\u5927\u578b\u591a\u8f66\u9053\u9053\u8def\u548c\u4ea4\u53c9\u53e3\u3002","title":"\u57ce\u9547 5"},{"location":"map_town05/#_1","text":"\u8fd9\u4e9b\u9053\u8def\u7531\u8bb8\u591a\u53cc\u8f66\u9053\u57ce\u5e02\u9053\u8def\u7ec4\u6210\uff0c\u5728\u8bb8\u591a\u5927\u578b\u8def\u53e3\u76f8\u4ea4\u3002 \u57ce\u9547\u4e24\u4fa7\u7684\u8def\u53e3\u53ef\u901a\u5f80\u7528\u4f5c\u73af\u8def\u7684\u9ad8\u67b6\u9ad8\u901f\u516c\u8def\u3002","title":"\u8def\u7f51"},{"location":"map_town05/#_2","text":"\u8be5\u9547\u62e5\u6709\u4f17\u591a\u5546\u4e1a\u5efa\u7b51\u3002 \u57ce\u9547\u4e2d\u5fc3\u8fd8\u6709\u4e00\u5ea7\u5efa\u7b51\u6b63\u5728\u5efa\u8bbe\u4e2d\u3002 \u6709\u4e00\u4e2a\u505c\u8f66\u573a\uff0c\u5360\u636e\u4e00\u4e2a\u8857\u533a\u3002 \u9053\u8def\u5ef6\u4f38\u5230\u4e00\u5904\u5546\u4e1a\u5efa\u7b51\u4e0b\u65b9\u3002","title":"\u7279\u5f81"},{"location":"map_town06/","text":"\u57ce\u9547 6 \u57ce\u9547 6 \u662f\u4e00\u4e2a\u4f4e\u5bc6\u5ea6\u5c0f\u9547\uff0c\u5750\u843d\u5728\u9488\u53f6\u6797\u666f\u89c2\u4e2d\uff0c\u62e5\u6709\u4f17\u591a\u5927\u578b 4-6 \u8f66\u9053\u9053\u8def\u548c\u7279\u6b8a\u8def\u53e3\uff0c\u4f8b\u5982 \u5bc6\u6b47\u6839\u5de6\u7ffc \u3002 \u57ce\u9547 6 \u662f\u9644\u52a0\u5730\u56fe\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5e94 \u4e0e Carla \u5305\u4e00\u8d77\u4e0b\u8f7d \u3002\u5c06\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u79fb\u52a8\u5230\u89e3\u538b\u7684 Carla \u5305\u7684 Import \u6587\u4ef6\u5939\u4e2d\uff0c\u7136\u540e\u8fd0\u884c Util/ImportAssets.sh \u811a\u672c\u3002 \u8def\u7f51 \u9053\u8def\u7f51\u6709 4 \u6761\u5927\u578b\u5e73\u884c\u9053\u8def\uff0c\u6709 4 \u81f3 6 \u6761\u8f66\u9053\uff0c\u901a\u8fc7\u591a\u4e2a\u652f\u8def\u548c\u4ea4\u53c9\u8def\u53e3\u76f8\u4e92\u8fde\u63a5\u3002 \u57ce\u9547 6 \u7684\u4f17\u591a\u652f\u8def\u4ea4\u53c9\u53e3\u5305\u62ec\u5bc6\u6b47\u6839\u5de6\u7ffc\u3002 \u5c55\u793a\u4e86\u591a\u79cd\u9053\u8def\u573a\u666f\uff0c\u5305\u62ec 5 \u8f66\u9053\u9053\u8def\u3001\u6b7b\u80e1\u540c\u548c\u6307\u5b9a\u8f6c\u5f2f\u8f66\u9053\u3002","title":"\u57ce\u9547 6"},{"location":"map_town06/#6","text":"\u57ce\u9547 6 \u662f\u4e00\u4e2a\u4f4e\u5bc6\u5ea6\u5c0f\u9547\uff0c\u5750\u843d\u5728\u9488\u53f6\u6797\u666f\u89c2\u4e2d\uff0c\u62e5\u6709\u4f17\u591a\u5927\u578b 4-6 \u8f66\u9053\u9053\u8def\u548c\u7279\u6b8a\u8def\u53e3\uff0c\u4f8b\u5982 \u5bc6\u6b47\u6839\u5de6\u7ffc \u3002 \u57ce\u9547 6 \u662f\u9644\u52a0\u5730\u56fe\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5e94 \u4e0e Carla \u5305\u4e00\u8d77\u4e0b\u8f7d \u3002\u5c06\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u79fb\u52a8\u5230\u89e3\u538b\u7684 Carla \u5305\u7684 Import \u6587\u4ef6\u5939\u4e2d\uff0c\u7136\u540e\u8fd0\u884c Util/ImportAssets.sh \u811a\u672c\u3002","title":"\u57ce\u9547 6"},{"location":"map_town06/#_1","text":"\u9053\u8def\u7f51\u6709 4 \u6761\u5927\u578b\u5e73\u884c\u9053\u8def\uff0c\u6709 4 \u81f3 6 \u6761\u8f66\u9053\uff0c\u901a\u8fc7\u591a\u4e2a\u652f\u8def\u548c\u4ea4\u53c9\u8def\u53e3\u76f8\u4e92\u8fde\u63a5\u3002 \u57ce\u9547 6 \u7684\u4f17\u591a\u652f\u8def\u4ea4\u53c9\u53e3\u5305\u62ec\u5bc6\u6b47\u6839\u5de6\u7ffc\u3002 \u5c55\u793a\u4e86\u591a\u79cd\u9053\u8def\u573a\u666f\uff0c\u5305\u62ec 5 \u8f66\u9053\u9053\u8def\u3001\u6b7b\u80e1\u540c\u548c\u6307\u5b9a\u8f6c\u5f2f\u8f66\u9053\u3002","title":"\u8def\u7f51"},{"location":"map_town07/","text":"\u57ce\u9547 7 \u57ce\u9547 7 \u6a21\u4eff\u4e86\u4e00\u4e2a\u5b89\u9759\u7684\u4e61\u6751\u793e\u533a\uff0c\u7eff\u8272\u7684\u666f\u89c2\u5145\u6ee1\u4e86\u7389\u7c73\u5730\u3001\u8c37\u4ed3\u3001\u7cae\u4ed3\u548c\u98ce\u8f66\u3002 \u57ce\u9547 7 \u662f\u9644\u52a0\u5730\u56fe\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5e94 \u4e0e Carla \u5305\u4e00\u8d77\u4e0b\u8f7d \u3002\u5c06\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u79fb\u52a8\u5230\u89e3\u538b\u7684 Carla \u5305\u7684 Import \u6587\u4ef6\u5939\u4e2d\uff0c\u7136\u540e\u8fd0\u884c Util/ImportAssets.sh \u811a\u672c\u3002 \u8def\u7f51 \u9053\u8def\u7f51\u5f88\u5c0f\uff0c\u5305\u542b\u4e00\u7ec4\u7b80\u5355\u7684\u8def\u53e3\u548c\u6ca1\u6709\u6807\u8bb0\u7684\u9053\u8def\u4ee5\u53ca\u51e0\u6761\u4f4f\u5b85\u505c\u8f66\u8857\u3002 \u7279\u5f81 \u8fd9\u4e9b\u5efa\u7b51\u7269\u5305\u62ec\u6728\u5236\u8c37\u4ed3\u548c\u519c\u573a\u5efa\u7b51\u3002 \u6709\u4e9b\u7ed3\u6784\u53ea\u5728\u519c\u6751\u519c\u4e1a\u73af\u5883\u4e2d\u51fa\u73b0\uff0c\u4f8b\u5982\u7cae\u4ed3\u548c\u98ce\u8f66\u3002 \u8fd8\u6709\u4e00\u5c0f\u7247\u6c34\u57df\uff0c\u4e0a\u9762\u6709\u4e00\u5ea7\u77ed\u516c\u8def\u6865\u3002 \u4e00\u4e9b\u9053\u8def\u4e24\u65c1\u90fd\u662f\u7389\u7c73\u5730\u3002","title":"\u57ce\u9547 7"},{"location":"map_town07/#7","text":"\u57ce\u9547 7 \u6a21\u4eff\u4e86\u4e00\u4e2a\u5b89\u9759\u7684\u4e61\u6751\u793e\u533a\uff0c\u7eff\u8272\u7684\u666f\u89c2\u5145\u6ee1\u4e86\u7389\u7c73\u5730\u3001\u8c37\u4ed3\u3001\u7cae\u4ed3\u548c\u98ce\u8f66\u3002 \u57ce\u9547 7 \u662f\u9644\u52a0\u5730\u56fe\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5e94 \u4e0e Carla \u5305\u4e00\u8d77\u4e0b\u8f7d \u3002\u5c06\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\u79fb\u52a8\u5230\u89e3\u538b\u7684 Carla \u5305\u7684 Import \u6587\u4ef6\u5939\u4e2d\uff0c\u7136\u540e\u8fd0\u884c Util/ImportAssets.sh \u811a\u672c\u3002","title":"\u57ce\u9547 7"},{"location":"map_town07/#_1","text":"\u9053\u8def\u7f51\u5f88\u5c0f\uff0c\u5305\u542b\u4e00\u7ec4\u7b80\u5355\u7684\u8def\u53e3\u548c\u6ca1\u6709\u6807\u8bb0\u7684\u9053\u8def\u4ee5\u53ca\u51e0\u6761\u4f4f\u5b85\u505c\u8f66\u8857\u3002","title":"\u8def\u7f51"},{"location":"map_town07/#_2","text":"\u8fd9\u4e9b\u5efa\u7b51\u7269\u5305\u62ec\u6728\u5236\u8c37\u4ed3\u548c\u519c\u573a\u5efa\u7b51\u3002 \u6709\u4e9b\u7ed3\u6784\u53ea\u5728\u519c\u6751\u519c\u4e1a\u73af\u5883\u4e2d\u51fa\u73b0\uff0c\u4f8b\u5982\u7cae\u4ed3\u548c\u98ce\u8f66\u3002 \u8fd8\u6709\u4e00\u5c0f\u7247\u6c34\u57df\uff0c\u4e0a\u9762\u6709\u4e00\u5ea7\u77ed\u516c\u8def\u6865\u3002 \u4e00\u4e9b\u9053\u8def\u4e24\u65c1\u90fd\u662f\u7389\u7c73\u5730\u3002","title":"\u7279\u5f81"},{"location":"map_town10/","text":"\u57ce\u9547 10 \u57ce\u9547 10 \u878d\u5408\u4e86\u5e02\u4e2d\u5fc3\u73af\u5883\u7684\u7279\u8272\uff0c\u62e5\u6709\u5149\u9c9c\u4eae\u4e3d\u7684\u6469\u5929\u5927\u697c\u548c\u5de5\u4e1a\u5efa\u7b51\uff0c\u6bd7\u90bb\u6d77\u6ee8\u957f\u5eca\u3001\u516c\u5bd3\u697c\u3001\u9152\u5e97\u3001\u516c\u5171\u5efa\u7b51\u548c\u7eff\u6811\u6210\u836b\u7684\u6797\u836b\u5927\u9053\u3002\u57ce\u9547 10 \u7684\u8def\u7f51\u62e5\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8def\u53e3\u5e03\u7f6e\uff0c\u5177\u6709\u5404\u79cd\u8f66\u9053\u6807\u8bb0\u3001\u4ea4\u53c9\u8def\u53e3\u548c\u4fe1\u53f7\u7c7b\u578b\uff0c\u4ee5\u6311\u6218\u60a8\u7684\u81ea\u4e3b\u667a\u80fd\u4f53\u4e0e\u5176\u4ed6\u4ea4\u901a\u7684\u534f\u5546\u3002 \u8def\u7f51 \u9053\u8def\u7f51\u7edc\u7531\u7f51\u683c\u5e03\u5c40\u7ec4\u6210\uff0c\u5305\u62ec\u8bb8\u591a\u4e0d\u540c\u7684\u8def\u53e3\uff0c\u5305\u62ec\u56db\u5411\u9ec4\u7bb1\u8def\u53e3\u3001\u4e13\u7528\u8f6c\u5f2f\u8f66\u9053\u548c\u4e2d\u592e\u9884\u7559\u533a\u3002 \u7279\u5f81 \u9547\u4e2d\u5fc3\u6709\u4e00\u6761\u7eff\u6811\u6210\u836b\u7684\u6797\u836b\u5927\u9053\uff0c\u5373\u4f7f\u5728\u4e2d\u5348\uff0c\u6811\u51a0\u4e5f\u4f1a\u5728\u6811\u836b\u4e0b\u6295\u4e0b\u9634\u5f71\u3002 \u4e00\u5ea7\u5b8f\u4f1f\u7684\u535a\u7269\u9986\u5360\u636e\u4e86\u9547\u4e2d\u5fc3\u7684\u4e00\u4fa7\u3002 \u57ce\u9547\u7684\u53e6\u4e00\u4fa7\u6709\u4e00\u6761\u6d77\u6d0b\u957f\u5eca\u3002 \u8be5\u5efa\u7b51\u5305\u62ec\u4f17\u591a\u98ce\u683c\u5404\u5f02\u7684\u6469\u5929\u5927\u697c\uff0c\u5305\u62ec\u5149\u6ed1\u7684\u53cd\u5149\u5efa\u7b51\u548c\u5f62\u72b6\u5f02\u5e38\u7684\u626d\u66f2\u548c\u5706\u67f1\u5f62\u5854\u697c\u3002","title":"\u57ce\u9547 10"},{"location":"map_town10/#10","text":"\u57ce\u9547 10 \u878d\u5408\u4e86\u5e02\u4e2d\u5fc3\u73af\u5883\u7684\u7279\u8272\uff0c\u62e5\u6709\u5149\u9c9c\u4eae\u4e3d\u7684\u6469\u5929\u5927\u697c\u548c\u5de5\u4e1a\u5efa\u7b51\uff0c\u6bd7\u90bb\u6d77\u6ee8\u957f\u5eca\u3001\u516c\u5bd3\u697c\u3001\u9152\u5e97\u3001\u516c\u5171\u5efa\u7b51\u548c\u7eff\u6811\u6210\u836b\u7684\u6797\u836b\u5927\u9053\u3002\u57ce\u9547 10 \u7684\u8def\u7f51\u62e5\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8def\u53e3\u5e03\u7f6e\uff0c\u5177\u6709\u5404\u79cd\u8f66\u9053\u6807\u8bb0\u3001\u4ea4\u53c9\u8def\u53e3\u548c\u4fe1\u53f7\u7c7b\u578b\uff0c\u4ee5\u6311\u6218\u60a8\u7684\u81ea\u4e3b\u667a\u80fd\u4f53\u4e0e\u5176\u4ed6\u4ea4\u901a\u7684\u534f\u5546\u3002","title":"\u57ce\u9547 10"},{"location":"map_town10/#_1","text":"\u9053\u8def\u7f51\u7edc\u7531\u7f51\u683c\u5e03\u5c40\u7ec4\u6210\uff0c\u5305\u62ec\u8bb8\u591a\u4e0d\u540c\u7684\u8def\u53e3\uff0c\u5305\u62ec\u56db\u5411\u9ec4\u7bb1\u8def\u53e3\u3001\u4e13\u7528\u8f6c\u5f2f\u8f66\u9053\u548c\u4e2d\u592e\u9884\u7559\u533a\u3002","title":"\u8def\u7f51"},{"location":"map_town10/#_2","text":"\u9547\u4e2d\u5fc3\u6709\u4e00\u6761\u7eff\u6811\u6210\u836b\u7684\u6797\u836b\u5927\u9053\uff0c\u5373\u4f7f\u5728\u4e2d\u5348\uff0c\u6811\u51a0\u4e5f\u4f1a\u5728\u6811\u836b\u4e0b\u6295\u4e0b\u9634\u5f71\u3002 \u4e00\u5ea7\u5b8f\u4f1f\u7684\u535a\u7269\u9986\u5360\u636e\u4e86\u9547\u4e2d\u5fc3\u7684\u4e00\u4fa7\u3002 \u57ce\u9547\u7684\u53e6\u4e00\u4fa7\u6709\u4e00\u6761\u6d77\u6d0b\u957f\u5eca\u3002 \u8be5\u5efa\u7b51\u5305\u62ec\u4f17\u591a\u98ce\u683c\u5404\u5f02\u7684\u6469\u5929\u5927\u697c\uff0c\u5305\u62ec\u5149\u6ed1\u7684\u53cd\u5149\u5efa\u7b51\u548c\u5f62\u72b6\u5f02\u5e38\u7684\u626d\u66f2\u548c\u5706\u67f1\u5f62\u5854\u697c\u3002","title":"\u7279\u5f81"},{"location":"map_town11/","text":"\u57ce\u9547 11 \u662f\u4e00\u5f20\u6ca1\u6709\u5efa\u7b51\u7269\u3001\u4eba\u884c\u9053\u6216\u690d\u88ab\u7b49\u88c5\u9970\u7684\u5927\u5730\u56fe\u3002\u9053\u8def\u7f51\u7531\u6742\u4e71\u65e0\u7ae0\u7684\u5355\u8f66\u9053\u9053\u8def\u7ec4\u6210\uff0c\u6563\u5e03\u7740\u5c0f\u7fa4\u7f51\u683c\u72b6\u4ea4\u53c9\u8def\u53e3\u3002\u8be5\u666f\u89c2\u6709\u4e00\u4e9b\u4e18\u9675\u548c\u9ad8\u5730\uff0c\u5e76\u4e14\u5177\u6709\u8349\u72b6\u7eb9\u7406\u3002 \u57ce\u9547 11 \u4e3b\u8981\u7528\u4f5c Carla 0.9.12 \u4e2d\u5f15\u5165\u7684\u5927\u5730\u56fe\u529f\u80fd\u7684\u6982\u5ff5\u9a8c\u8bc1\uff0c\u5e76\u4e14\u662f\u7b2c\u4e00\u5f20\u96c6\u6210\u5230 Carla \u6a21\u62df\u5668\u4e2d\u7684\u5927\u5730\u56fe\u3002\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u67e5\u770b\u57ce\u9547 11 \u7684\u8d44\u6e90\u6587\u4ef6\u6709\u52a9\u4e8e\u4e86\u89e3 Carla \u751f\u6001\u7cfb\u7edf\u4e2d\u5904\u7406\u5927\u5730\u56fe\u7684\u60c5\u51b5\u3002","title":"Map town11"},{"location":"map_town12/","text":"\u57ce\u9547 12 \u57ce\u9547 12 \u662f\u4e00\u5f20\u5c3a\u5bf8\u4e3a 10x10 km 2 \u7684\u5927\u5730\u56fe\u3002\u5b83\u5206\u4e3a 36 \u4e2a\u56fe\u5757\uff0c\u5927\u591a\u6570\u5c3a\u5bf8\u4e3a 2x2 km 2 \uff08\u67d0\u4e9b\u8fb9\u7f18\u56fe\u5757\u8f83\u5c0f\uff09\u3002\u9053\u8def\u5e03\u5c40\u90e8\u5206\u53d7\u5230 \u7f8e\u56fd\u5fb7\u514b\u8428\u65af\u5dde\u963f\u9a6c\u91cc\u6d1b\u5e02 \u9053\u8def\u5e03\u5c40\u7684\u542f\u53d1\u3002\u6709\u8bb8\u591a\u4e0e\u57ce\u5e02\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u533a\u57df\uff0c\u5305\u62ec\u57ce\u5e02\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u5730\u533a\uff0c\u8fd8\u6709\u73af\u7ed5\u57ce\u5e02\u7684\u5927\u578b\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\u548c\u73af\u5f62\u516c\u8def\u3002\u5efa\u7b51\u98ce\u683c\u53cd\u6620\u4e86\u5317\u7f8e\u8bb8\u591a\u5927\u4e2d\u57ce\u5e02\u7684\u5efa\u7b51\u98ce\u683c\u3002 \u5bfc\u822a\u5668 \u5bfc\u822a\u5668\u4ea4\u4e92\u5f0f\u5730\u56fe\u53ef\u7528\u4e8e\u6d4f\u89c8\u57ce\u9547\u5e76\u5bfc\u51fa\u5750\u6807\u4ee5\u5728 CARLA \u4eff\u771f\u5668\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528\u5bfc\u822a\u5668 : left mouse button - \u5355\u51fb\u5e76\u6309\u4f4f\uff0c\u5411\u5de6\u3001\u5411\u53f3\u3001\u5411\u4e0a\u6216\u5411\u4e0b\u62d6\u52a8\u4ee5\u79fb\u52a8\u5730\u56fe scroll mouse wheel - \u5411\u4e0b\u6eda\u52a8\u7f29\u5c0f\uff0c\u5411\u4e0a\u6eda\u52a8\u653e\u5927\u9f20\u6807\u6307\u9488\u4e0b\u65b9\u7684\u4f4d\u7f6e double click - \u53cc\u51fb\u5730\u56fe\u4e0a\u7684\u67d0\u4e2a\u70b9\u6765\u8bb0\u5f55\u5750\u6807\uff0c\u60a8\u5c06\u5728\u6587\u672c\u548c\u5730\u56fe\u6b63\u4e0b\u65b9\u7684\u4ee3\u7801\u5757\u4e2d\u627e\u5230\u5750\u6807 \u533a\u57df\u989c\u8272\u53c2\u8003 : &nbsp \u6469\u5929\u5927\u697c &nbsp \u9ad8\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u793e\u533a\u5efa\u7b51 &nbsp \u4f4e\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u516c\u56ed &nbsp \u519c\u6751\u571f\u5730 &nbsp \u6c34\u57df CARLA \u5750\u6807 : X : -- Y : -- \u53cc\u51fb\u5174\u8da3\u70b9\u540e\uff0c\u5bfc\u822a\u5668\u5c06\u663e\u793a\u76f8\u5e94\u7684 CARLA \u5750\u6807\u5e76\u5728\u4ee5\u4e0b\u4ee3\u7801\u5757\u4e2d\u66f4\u65b0\u5b83\u4eec\u3002\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u7b14\u8bb0\u672c\u6216 Python \u7ec8\u7aef\u4e2d\uff0c\u5c06\u89c2\u5bdf\u8005\u79fb\u52a8\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002\u60a8\u9996\u5148 \u9700\u8981\u8fde\u63a5\u5ba2\u6237\u7aef\u5e76\u8bbe\u7f6e\u4e16\u754c\u5bf9\u8c61 \uff1a # CARLA \u5750\u6807: X 0.0, Y 0.0 spectator = world.get_spectator() loc = carla.Location(0.0, 0.0, 500.0) rot = carla.Rotation(pitch=-90, yaw=0.0, roll=0.0) spectator.set_transform(carla.Transform(loc, rot)) \u57ce\u9547 12 \u533a \u5e02\u4e2d\u5fc3\u9ad8\u5c42\u5efa\u7b51\uff1a \u57ce\u9547 12 \u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u662f\u4e00\u5927\u7247\u9ad8\u5c42\u6469\u5929\u5927\u697c\uff0c\u5728\u4e00\u81f4\u7684\u9053\u8def\u7f51\u683c\u4e0a\u6392\u5217\u6210\u8857\u533a\uff0c\u7c7b\u4f3c\u4e8e\u8bb8\u591a\u7f8e\u56fd\u548c\u6b27\u6d32\u5927\u57ce\u5e02\u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u3002 \u9ad8\u5bc6\u5ea6\u4f4f\u5b85\uff1a \u57ce\u9547 12 \u7684\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\u533a\u62e5\u6709\u8bb8\u591a 2 \u81f3 10 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8857\u9053\u4e0a\u8fd8\u8bbe\u6709\u5496\u5561\u9986\u548c\u96f6\u552e\u5e97\u7b49\u5546\u4e1a\u5730\u4ea7\u3002 \u793e\u533a\u5efa\u7b51\uff1a \u793e\u533a\u5efa\u7b51\u662f\u4e00\u7ec4 2-4 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8272\u5f69\u7f24\u7eb7\u7684\u6ce2\u897f\u7c73\u4e9a\u98ce\u683c\uff0c\u5e95\u5c42\u8bbe\u6709\u5496\u5561\u9986\u548c\u7cbe\u54c1\u5e97\uff0c\u6bd7\u90bb\u5e02\u4e2d\u5fc3\u533a\u3002 \u4f4e\u5bc6\u5ea6\u4f4f\u5b85\uff1a \u57ce\u9547 12 \u7684\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\u533a\u53cd\u6620\u4e86\u8bb8\u591a\u7f8e\u56fd\u57ce\u5e02\u7684\u7ecf\u5178\u90ca\u533a\uff0c\u4e00\u5c42\u548c\u4e24\u5c42\u7684\u4f4f\u5b85\u5468\u56f4\u73af\u7ed5\u7740\u56f4\u680f\u82b1\u56ed\u548c\u8f66\u5e93\u3002 \u516c\u56ed\uff1a \u5bc6\u96c6\u7684\u4f4f\u5b85\u533a\u548c\u5e02\u4e2d\u5fc3\u88ab\u7eff\u8272\u516c\u5171\u7a7a\u95f4\u7684\u5c0f\u5c9b\u6240\u5206\u5272\uff0c\u7eff\u53f6\u4e0e\u57ce\u5e02\u5efa\u7b51\u5e76\u7f6e\u3002 \u9ad8\u901f\u516c\u8def\u548c\u4ea4\u53c9\u8def\u53e3\uff1a \u57ce\u9547 12 \u62e5\u6709\u5e7f\u6cdb\u7684\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\uff0c\u5305\u62ec 3-4 \u8f66\u9053\u9ad8\u901f\u516c\u8def\uff0c\u5176\u4e2d\u6563\u5e03\u7740\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u73af\u5c9b\u8def\u53e3\u548c\u5341\u5b57\u8def\u53e3\u3002 \u519c\u6751\u548c\u519c\u7530\uff1a \u57ce\u9547 12 \u8fd8\u6709\u4e61\u6751\u5730\u533a\uff0c\u6709\u7279\u8272\u519c\u7530\u5efa\u7b51\uff0c\u5982\u6728\u5236\u8c37\u4ed3\u548c\u519c\u820d\u3001\u98ce\u8f66\u3001\u7cae\u4ed3\u3001\u7389\u7c73\u7530\u3001\u5e72\u8349\u579b\u548c\u4e61\u6751\u56f4\u680f\u3002\u8fd9\u4e9b\u5730\u533a\u6709\u672a\u6807\u8bb0\u7684\u4e61\u6751\u571f\u8def\u548c\u7528\u4e8e\u57ce\u9645\u4ea4\u901a\u7684\u5355\u8f66\u9053\u57ce\u9645\u9053\u8def\u3002 \u6c34\u57df\uff1a \u57ce\u9547 12 \u4e2d\u6709\u591a\u4e2a\u6c34\u57df\uff0c\u5305\u62ec 2 \u4e2a\u5927\u6e56\u548c\u51e0\u4e2a\u6c60\u5858\u3002\u7531\u4e8e\u57ce\u5e02\u65c1\u8fb9\u6709\u4e00\u4e9b\u5927\u578b\u6c34\u666f\uff0c\u8fd9\u4e9b\u6c34\u666f\u4f1a\u4ea7\u751f\u5929\u9645\u7ebf\u7684\u5012\u53cd\u5c04\uff0c\u7ed9\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5e26\u6765\u6311\u6218\u3002 @keyframes fadeMe { from { color: #77aaff; } to { color: #000000; } } window.addEventListener('load', function () { var text_coord_x = document.getElementById(\"carlacoord_x\") var text_coord_y = document.getElementById(\"carlacoord_y\") const code_coords = document.getElementsByClassName(\"hljs-number\") const code_comment = document.getElementsByClassName(\"hljs-comment\") const image = document.querySelector('[src$=\"map\"]'); const canv = document.createElement('canvas'); canv.setAttribute('height', image.height) canv.setAttribute('width', image.width) image.parentNode.replaceChild(canv, image) var state = {mDown: false, button: 0, lastX: 0, lastY:0, canvX: 0, canvY: 0, zoom: 1.0, mdownX: 0, mdownY: 0, pX: 0.5, pY: 0.5, dblClick: false, listObj: false, touch: false} ctx = canv.getContext('2d') ctx.drawImage(image, 0, 0, canv.width, canv.height) canv.addEventListener('mousemove', (event) => { dX = event.clientX - state.lastX dY = event.clientY - state.lastY state.lastX = event.clientX state.lastY = event.clientY if(state.mDown && state.button == 0) { state.canvX += dX state.canvY += dY ctx.clearRect(0, 0, canv.width, canv.height) ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom) state.touch = true; } }) canv.addEventListener('mousedown', (event) => { state.button = event.button; state.mDown = true; state.touch = true; var rect = canv.getBoundingClientRect(); state.mdownX = event.clientX - rect.left; state.mdownY = event.clientY - rect.top; state.pX = (state.mdownX - state.canvX) / (canv.width * state.zoom); state.pY = (state.mdownY - state.canvY) / (canv.height * state.zoom); }) canv.addEventListener('mouseup', (event) => { state.mDown = false; }) canv.addEventListener('wheel', (event) => { state.mDown = false; var rect = canv.getBoundingClientRect(); dX = event.clientX - rect.left; dY = event.clientY - rect.top; state.pX = (dX - state.canvX) / (canv.width * state.zoom); state.pY = (dY - state.canvY) / (canv.height * state.zoom); if(state.touch){ event.preventDefault(); if(event.wheelDelta > 0){ state.zoom *= 1.15 } else { state.zoom *= 0.85 } if(state.zoom < 1.0){state.zoom = 1.0;} if(state.zoom > 30.0){state.zoom = 30.0} ctx.clearRect(0, 0, canv.width, canv.height) state.canvX = - canv.width * state.zoom * state.pX + dX; state.canvY = - canv.height * state.zoom * state.pY + dY; ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom); } }) canv.addEventListener('dblclick', (event) => { text_coord_x = document.getElementById(\"carlacoord_x\") text_coord_y = document.getElementById(\"carlacoord_y\") const carlaX = 10482.4274 * state.pX + -5.39801455 * state.pY - 5673.07949; const carlaY = 5.39801455 * state.pX + 10482.4274 * state.pY - 2885.15738; code_coords[0].textContent = carlaX.toFixed(1) code_coords[1].textContent = carlaY.toFixed(1) code_comment[0].textContent = \"# CARLA coordinates - X: \" + carlaX.toFixed(1) + \" Y: \" + carlaY.toFixed(1) var newX = text_coord_x.cloneNode(true) var newY = text_coord_y.cloneNode(true) newX.textContent = carlaX.toFixed(1) newY.textContent = carlaY.toFixed(1) var parentX = text_coord_x.parentNode var parentY = text_coord_y.parentNode parentX.replaceChild(newX, text_coord_x); parentY.replaceChild(newY, text_coord_y); //console.log(state.pX + \", \" + state.pY) }) })","title":"\u57ce\u9547 12"},{"location":"map_town12/#12","text":"\u57ce\u9547 12 \u662f\u4e00\u5f20\u5c3a\u5bf8\u4e3a 10x10 km 2 \u7684\u5927\u5730\u56fe\u3002\u5b83\u5206\u4e3a 36 \u4e2a\u56fe\u5757\uff0c\u5927\u591a\u6570\u5c3a\u5bf8\u4e3a 2x2 km 2 \uff08\u67d0\u4e9b\u8fb9\u7f18\u56fe\u5757\u8f83\u5c0f\uff09\u3002\u9053\u8def\u5e03\u5c40\u90e8\u5206\u53d7\u5230 \u7f8e\u56fd\u5fb7\u514b\u8428\u65af\u5dde\u963f\u9a6c\u91cc\u6d1b\u5e02 \u9053\u8def\u5e03\u5c40\u7684\u542f\u53d1\u3002\u6709\u8bb8\u591a\u4e0e\u57ce\u5e02\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u533a\u57df\uff0c\u5305\u62ec\u57ce\u5e02\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u5730\u533a\uff0c\u8fd8\u6709\u73af\u7ed5\u57ce\u5e02\u7684\u5927\u578b\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\u548c\u73af\u5f62\u516c\u8def\u3002\u5efa\u7b51\u98ce\u683c\u53cd\u6620\u4e86\u5317\u7f8e\u8bb8\u591a\u5927\u4e2d\u57ce\u5e02\u7684\u5efa\u7b51\u98ce\u683c\u3002","title":"\u57ce\u9547 12"},{"location":"map_town12/#_1","text":"\u5bfc\u822a\u5668\u4ea4\u4e92\u5f0f\u5730\u56fe\u53ef\u7528\u4e8e\u6d4f\u89c8\u57ce\u9547\u5e76\u5bfc\u51fa\u5750\u6807\u4ee5\u5728 CARLA \u4eff\u771f\u5668\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528\u5bfc\u822a\u5668 : left mouse button - \u5355\u51fb\u5e76\u6309\u4f4f\uff0c\u5411\u5de6\u3001\u5411\u53f3\u3001\u5411\u4e0a\u6216\u5411\u4e0b\u62d6\u52a8\u4ee5\u79fb\u52a8\u5730\u56fe scroll mouse wheel - \u5411\u4e0b\u6eda\u52a8\u7f29\u5c0f\uff0c\u5411\u4e0a\u6eda\u52a8\u653e\u5927\u9f20\u6807\u6307\u9488\u4e0b\u65b9\u7684\u4f4d\u7f6e double click - \u53cc\u51fb\u5730\u56fe\u4e0a\u7684\u67d0\u4e2a\u70b9\u6765\u8bb0\u5f55\u5750\u6807\uff0c\u60a8\u5c06\u5728\u6587\u672c\u548c\u5730\u56fe\u6b63\u4e0b\u65b9\u7684\u4ee3\u7801\u5757\u4e2d\u627e\u5230\u5750\u6807 \u533a\u57df\u989c\u8272\u53c2\u8003 : &nbsp \u6469\u5929\u5927\u697c &nbsp \u9ad8\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u793e\u533a\u5efa\u7b51 &nbsp \u4f4e\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u516c\u56ed &nbsp \u519c\u6751\u571f\u5730 &nbsp \u6c34\u57df CARLA \u5750\u6807 : X : -- Y : -- \u53cc\u51fb\u5174\u8da3\u70b9\u540e\uff0c\u5bfc\u822a\u5668\u5c06\u663e\u793a\u76f8\u5e94\u7684 CARLA \u5750\u6807\u5e76\u5728\u4ee5\u4e0b\u4ee3\u7801\u5757\u4e2d\u66f4\u65b0\u5b83\u4eec\u3002\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u7b14\u8bb0\u672c\u6216 Python \u7ec8\u7aef\u4e2d\uff0c\u5c06\u89c2\u5bdf\u8005\u79fb\u52a8\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002\u60a8\u9996\u5148 \u9700\u8981\u8fde\u63a5\u5ba2\u6237\u7aef\u5e76\u8bbe\u7f6e\u4e16\u754c\u5bf9\u8c61 \uff1a # CARLA \u5750\u6807: X 0.0, Y 0.0 spectator = world.get_spectator() loc = carla.Location(0.0, 0.0, 500.0) rot = carla.Rotation(pitch=-90, yaw=0.0, roll=0.0) spectator.set_transform(carla.Transform(loc, rot))","title":"\u5bfc\u822a\u5668"},{"location":"map_town12/#12_1","text":"","title":"\u57ce\u9547 12 \u533a"},{"location":"map_town12/#_2","text":"\u57ce\u9547 12 \u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u662f\u4e00\u5927\u7247\u9ad8\u5c42\u6469\u5929\u5927\u697c\uff0c\u5728\u4e00\u81f4\u7684\u9053\u8def\u7f51\u683c\u4e0a\u6392\u5217\u6210\u8857\u533a\uff0c\u7c7b\u4f3c\u4e8e\u8bb8\u591a\u7f8e\u56fd\u548c\u6b27\u6d32\u5927\u57ce\u5e02\u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u3002","title":"\u5e02\u4e2d\u5fc3\u9ad8\u5c42\u5efa\u7b51\uff1a"},{"location":"map_town12/#_3","text":"\u57ce\u9547 12 \u7684\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\u533a\u62e5\u6709\u8bb8\u591a 2 \u81f3 10 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8857\u9053\u4e0a\u8fd8\u8bbe\u6709\u5496\u5561\u9986\u548c\u96f6\u552e\u5e97\u7b49\u5546\u4e1a\u5730\u4ea7\u3002","title":"\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\uff1a"},{"location":"map_town12/#_4","text":"\u793e\u533a\u5efa\u7b51\u662f\u4e00\u7ec4 2-4 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8272\u5f69\u7f24\u7eb7\u7684\u6ce2\u897f\u7c73\u4e9a\u98ce\u683c\uff0c\u5e95\u5c42\u8bbe\u6709\u5496\u5561\u9986\u548c\u7cbe\u54c1\u5e97\uff0c\u6bd7\u90bb\u5e02\u4e2d\u5fc3\u533a\u3002","title":"\u793e\u533a\u5efa\u7b51\uff1a"},{"location":"map_town12/#_5","text":"\u57ce\u9547 12 \u7684\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\u533a\u53cd\u6620\u4e86\u8bb8\u591a\u7f8e\u56fd\u57ce\u5e02\u7684\u7ecf\u5178\u90ca\u533a\uff0c\u4e00\u5c42\u548c\u4e24\u5c42\u7684\u4f4f\u5b85\u5468\u56f4\u73af\u7ed5\u7740\u56f4\u680f\u82b1\u56ed\u548c\u8f66\u5e93\u3002","title":"\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\uff1a"},{"location":"map_town12/#_6","text":"\u5bc6\u96c6\u7684\u4f4f\u5b85\u533a\u548c\u5e02\u4e2d\u5fc3\u88ab\u7eff\u8272\u516c\u5171\u7a7a\u95f4\u7684\u5c0f\u5c9b\u6240\u5206\u5272\uff0c\u7eff\u53f6\u4e0e\u57ce\u5e02\u5efa\u7b51\u5e76\u7f6e\u3002","title":"\u516c\u56ed\uff1a"},{"location":"map_town12/#_7","text":"\u57ce\u9547 12 \u62e5\u6709\u5e7f\u6cdb\u7684\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\uff0c\u5305\u62ec 3-4 \u8f66\u9053\u9ad8\u901f\u516c\u8def\uff0c\u5176\u4e2d\u6563\u5e03\u7740\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u73af\u5c9b\u8def\u53e3\u548c\u5341\u5b57\u8def\u53e3\u3002","title":"\u9ad8\u901f\u516c\u8def\u548c\u4ea4\u53c9\u8def\u53e3\uff1a"},{"location":"map_town12/#_8","text":"\u57ce\u9547 12 \u8fd8\u6709\u4e61\u6751\u5730\u533a\uff0c\u6709\u7279\u8272\u519c\u7530\u5efa\u7b51\uff0c\u5982\u6728\u5236\u8c37\u4ed3\u548c\u519c\u820d\u3001\u98ce\u8f66\u3001\u7cae\u4ed3\u3001\u7389\u7c73\u7530\u3001\u5e72\u8349\u579b\u548c\u4e61\u6751\u56f4\u680f\u3002\u8fd9\u4e9b\u5730\u533a\u6709\u672a\u6807\u8bb0\u7684\u4e61\u6751\u571f\u8def\u548c\u7528\u4e8e\u57ce\u9645\u4ea4\u901a\u7684\u5355\u8f66\u9053\u57ce\u9645\u9053\u8def\u3002","title":"\u519c\u6751\u548c\u519c\u7530\uff1a"},{"location":"map_town12/#_9","text":"\u57ce\u9547 12 \u4e2d\u6709\u591a\u4e2a\u6c34\u57df\uff0c\u5305\u62ec 2 \u4e2a\u5927\u6e56\u548c\u51e0\u4e2a\u6c60\u5858\u3002\u7531\u4e8e\u57ce\u5e02\u65c1\u8fb9\u6709\u4e00\u4e9b\u5927\u578b\u6c34\u666f\uff0c\u8fd9\u4e9b\u6c34\u666f\u4f1a\u4ea7\u751f\u5929\u9645\u7ebf\u7684\u5012\u53cd\u5c04\uff0c\u7ed9\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5e26\u6765\u6311\u6218\u3002 @keyframes fadeMe { from { color: #77aaff; } to { color: #000000; } } window.addEventListener('load', function () { var text_coord_x = document.getElementById(\"carlacoord_x\") var text_coord_y = document.getElementById(\"carlacoord_y\") const code_coords = document.getElementsByClassName(\"hljs-number\") const code_comment = document.getElementsByClassName(\"hljs-comment\") const image = document.querySelector('[src$=\"map\"]'); const canv = document.createElement('canvas'); canv.setAttribute('height', image.height) canv.setAttribute('width', image.width) image.parentNode.replaceChild(canv, image) var state = {mDown: false, button: 0, lastX: 0, lastY:0, canvX: 0, canvY: 0, zoom: 1.0, mdownX: 0, mdownY: 0, pX: 0.5, pY: 0.5, dblClick: false, listObj: false, touch: false} ctx = canv.getContext('2d') ctx.drawImage(image, 0, 0, canv.width, canv.height) canv.addEventListener('mousemove', (event) => { dX = event.clientX - state.lastX dY = event.clientY - state.lastY state.lastX = event.clientX state.lastY = event.clientY if(state.mDown && state.button == 0) { state.canvX += dX state.canvY += dY ctx.clearRect(0, 0, canv.width, canv.height) ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom) state.touch = true; } }) canv.addEventListener('mousedown', (event) => { state.button = event.button; state.mDown = true; state.touch = true; var rect = canv.getBoundingClientRect(); state.mdownX = event.clientX - rect.left; state.mdownY = event.clientY - rect.top; state.pX = (state.mdownX - state.canvX) / (canv.width * state.zoom); state.pY = (state.mdownY - state.canvY) / (canv.height * state.zoom); }) canv.addEventListener('mouseup', (event) => { state.mDown = false; }) canv.addEventListener('wheel', (event) => { state.mDown = false; var rect = canv.getBoundingClientRect(); dX = event.clientX - rect.left; dY = event.clientY - rect.top; state.pX = (dX - state.canvX) / (canv.width * state.zoom); state.pY = (dY - state.canvY) / (canv.height * state.zoom); if(state.touch){ event.preventDefault(); if(event.wheelDelta > 0){ state.zoom *= 1.15 } else { state.zoom *= 0.85 } if(state.zoom < 1.0){state.zoom = 1.0;} if(state.zoom > 30.0){state.zoom = 30.0} ctx.clearRect(0, 0, canv.width, canv.height) state.canvX = - canv.width * state.zoom * state.pX + dX; state.canvY = - canv.height * state.zoom * state.pY + dY; ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom); } }) canv.addEventListener('dblclick', (event) => { text_coord_x = document.getElementById(\"carlacoord_x\") text_coord_y = document.getElementById(\"carlacoord_y\") const carlaX = 10482.4274 * state.pX + -5.39801455 * state.pY - 5673.07949; const carlaY = 5.39801455 * state.pX + 10482.4274 * state.pY - 2885.15738; code_coords[0].textContent = carlaX.toFixed(1) code_coords[1].textContent = carlaY.toFixed(1) code_comment[0].textContent = \"# CARLA coordinates - X: \" + carlaX.toFixed(1) + \" Y: \" + carlaY.toFixed(1) var newX = text_coord_x.cloneNode(true) var newY = text_coord_y.cloneNode(true) newX.textContent = carlaX.toFixed(1) newY.textContent = carlaY.toFixed(1) var parentX = text_coord_x.parentNode var parentY = text_coord_y.parentNode parentX.replaceChild(newX, text_coord_x); parentY.replaceChild(newY, text_coord_y); //console.log(state.pX + \", \" + state.pY) }) })","title":"\u6c34\u57df\uff1a"},{"location":"map_town13/","text":"\u57ce\u9547 13 \u57ce\u9547 13 \u662f\u4e00\u5f20\u5c3a\u5bf8\u4e3a 10x10 km 2 \u7684\u5927\u5730\u56fe\u3002\u5b83\u5206\u4e3a 36 \u4e2a\u56fe\u5757\uff0c\u5927\u591a\u6570\u5c3a\u5bf8\u4e3a 2x2 km 2 \uff08\u67d0\u4e9b\u8fb9\u7f18\u56fe\u5757\u8f83\u5c0f\uff09\u3002\u6709\u8bb8\u591a\u4e0e\u57ce\u5e02\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u533a\u57df\uff0c\u5305\u62ec\u57ce\u5e02\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u5730\u533a\uff0c\u8fd8\u6709\u73af\u7ed5\u57ce\u5e02\u7684\u5927\u578b\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\u548c\u73af\u5f62\u516c\u8def\u3002\u5efa\u7b51\u98ce\u683c\u53cd\u6620\u4e86\u5317\u7f8e\u8bb8\u591a\u5927\u4e2d\u57ce\u5e02\u7684\u5efa\u7b51\u98ce\u683c\u3002 \u7b14\u8bb0 \u57ce\u9547 13 \u88ab\u8bbe\u8ba1\u4e3a\u57ce\u9547 12 \u7684\u9644\u5c5e\u8bbe\u65bd\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u4f5c\u4e3a \u8bad\u7ec3-\u6d4b\u8bd5\u5bf9 \u3002\u8fd9\u4e9b\u57ce\u9547\u6709\u8bb8\u591a\u5171\u540c\u7279\u5f81\uff0c\u4f46\u5728\u5efa\u7b51\u98ce\u683c\u3001\u9053\u8def\u7eb9\u7406\u3001\u8def\u9762\u7eb9\u7406\u548c\u690d\u88ab\u65b9\u9762\u4e5f\u6709\u8bb8\u591a\u5dee\u5f02\u3002\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u751f\u6210\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u53e6\u4e00\u4e2a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u975e\u5e38\u9002\u5408\u66b4\u9732\u5f00\u53d1\u81ea\u52a8\u9a7e\u9a76\u6280\u672f\u6808\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u8fc7\u5ea6\u62df\u5408\u95ee\u9898\u3002 \u5bfc\u822a\u5668 \u5bfc\u822a\u5668\u4ea4\u4e92\u5f0f\u5730\u56fe\u53ef\u7528\u4e8e\u6d4f\u89c8\u57ce\u9547\u5e76\u5bfc\u51fa\u5750\u6807\u4ee5\u5728 CARLA \u4eff\u771f\u5668\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528\u5bfc\u822a\u5668 : left mouse button - \u5355\u51fb\u5e76\u6309\u4f4f\uff0c\u5411\u5de6\u3001\u5411\u53f3\u3001\u5411\u4e0a\u6216\u5411\u4e0b\u62d6\u52a8\u4ee5\u79fb\u52a8\u5730\u56fe scroll mouse wheel - \u5411\u4e0b\u6eda\u52a8\u7f29\u5c0f\uff0c\u5411\u4e0a\u6eda\u52a8\u653e\u5927\u9f20\u6807\u6307\u9488\u4e0b\u65b9\u7684\u4f4d\u7f6e double click - \u53cc\u51fb\u5730\u56fe\u4e0a\u7684\u67d0\u4e2a\u70b9\u6765\u8bb0\u5f55\u5750\u6807\uff0c\u60a8\u5c06\u5728\u6587\u672c\u548c\u5730\u56fe\u6b63\u4e0b\u65b9\u7684\u4ee3\u7801\u5757\u4e2d\u627e\u5230\u5750\u6807 \u533a\u57df\u989c\u8272\u53c2\u8003 : &nbsp \u6469\u5929\u5927\u697c &nbsp \u9ad8\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u793e\u533a\u5efa\u7b51 &nbsp \u4f4e\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u516c\u56ed &nbsp \u519c\u6751\u571f\u5730 &nbsp \u6c34\u57df CARLA \u5750\u6807 : X : -- Y : -- \u53cc\u51fb\u5174\u8da3\u70b9\u540e\uff0c\u5bfc\u822a\u5668\u5c06\u663e\u793a\u76f8\u5e94\u7684 CARLA \u5750\u6807\u5e76\u5728\u4ee5\u4e0b\u4ee3\u7801\u5757\u4e2d\u66f4\u65b0\u5b83\u4eec\u3002\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u7b14\u8bb0\u672c\u6216 Python \u7ec8\u7aef\u4e2d\uff0c\u5c06\u89c2\u4f17\u79fb\u52a8\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002\u60a8\u9996\u5148\u9700\u8981 \u8fde\u63a5\u5ba2\u6237\u7aef\u5e76\u8bbe\u7f6e\u4e16\u754c\u5bf9\u8c61 \uff1a # CARLA \u5750\u6807: X 0.0, Y 0.0 spectator = world.get_spectator() loc = carla.Location(0.0, 0.0, 300.0) rot = carla.Rotation(pitch=-90, yaw=0.0, roll=0.0) spectator.set_transform(carla.Transform(loc, rot)) \u57ce\u9547 13 \u533a \u5e02\u4e2d\u5fc3\u9ad8\u5c42\u5efa\u7b51\uff1a \u57ce\u9547 13 \u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u662f\u4e00\u5927\u7247\u9ad8\u5c42\u6469\u5929\u5927\u697c\uff0c\u5728\u4e00\u81f4\u7684\u9053\u8def\u7f51\u683c\u4e0a\u6392\u5217\u6210\u8857\u533a\uff0c\u7c7b\u4f3c\u4e8e\u8bb8\u591a\u7f8e\u56fd\u548c\u6b27\u6d32\u5927\u57ce\u5e02\u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u3002 \u793e\u533a\u5efa\u7b51\uff1a \u793e\u533a\u5efa\u7b51\u662f\u4e00\u7ec4 2-4 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8272\u5f69\u7f24\u7eb7\u7684\u6ce2\u897f\u7c73\u4e9a\u98ce\u683c\uff0c\u5e95\u5c42\u4e3a\u5546\u4e1a\uff0c\u6bd7\u90bb\u5e02\u4e2d\u5fc3\u533a\u3002 \u9ad8\u5bc6\u5ea6\u4f4f\u5b85\uff1a \u57ce\u9547 13 \u7684\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\u533a\u62e5\u6709\u8bb8\u591a 2 \u81f3 10 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8857\u9053\u4e0a\u8fd8\u8bbe\u6709\u5496\u5561\u9986\u548c\u96f6\u552e\u5e97\u7b49\u5546\u4e1a\u5730\u4ea7\u3002\u8bb8\u591a\u4f4f\u5b85\u533a\u90fd\u8bbe\u6709\u5e26\u6709\u906e\u9633\u5e18\u7684\u9633\u53f0\uff0c\u7c7b\u4f3c\u4e8e\u9633\u5149\u660e\u5a9a\u7684\u5357\u6b27\u56fd\u5bb6\u3002 \u4f4e\u5bc6\u5ea6\u4f4f\u5b85\uff1a \u57ce\u9547 13 \u7684\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\u533a\u53cd\u6620\u4e86\u8bb8\u591a\u6b27\u6d32\u57ce\u5e02\u7684\u90ca\u533a\uff0c\u4e00\u5c42\u548c\u4e24\u5c42\u7684\u4f4f\u5b85\u88ab\u56f4\u680f\u82b1\u56ed\u548c\u8f66\u5e93\u5305\u56f4\u3002 \u516c\u56ed\uff1a \u5bc6\u96c6\u7684\u4f4f\u5b85\u533a\u548c\u5e02\u4e2d\u5fc3\u88ab\u7eff\u8272\u516c\u5171\u7a7a\u95f4\u7684\u5c0f\u5c9b\u6240\u5206\u5272\uff0c\u7eff\u53f6\u4e0e\u57ce\u5e02\u5efa\u7b51\u5e76\u7f6e\u3002 \u9ad8\u901f\u516c\u8def\u548c\u4ea4\u53c9\u8def\u53e3\uff1a \u57ce\u9547 13 \u62e5\u6709\u5e7f\u6cdb\u7684\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\uff0c\u5305\u62ec 3-4 \u8f66\u9053\u9ad8\u901f\u516c\u8def\u3001\u5927\u578b\u73af\u5c9b\u548c\u6a2a\u8de8\u5927\u7247\u6c34\u57df\u7684\u5824\u9053\u3002 \u519c\u6751\u548c\u519c\u7530\uff1a \u57ce\u9547 13 \u8fd8\u6709\u4e00\u4e9b\u519c\u6751\u5730\u533a\uff0c\u6709\u7279\u8272\u519c\u7530\u5efa\u7b51\uff0c\u5982\u6728\u5236\u8c37\u4ed3\u548c\u519c\u820d\u3001\u98ce\u8f66\u3001\u7cae\u4ed3\u3001\u7389\u7c73\u7530\u3001\u5e72\u8349\u579b\u548c\u4e61\u6751\u56f4\u680f\u3002\u8fd9\u4e9b\u5730\u533a\u6709\u672a\u6807\u8bb0\u7684\u4e61\u6751\u571f\u8def\u548c\u7528\u4e8e\u57ce\u9645\u4ea4\u901a\u7684\u5355\u8f66\u9053\u57ce\u9645\u9053\u8def\u3002 \u6c34\u57df\uff1a \u57ce\u9547 13 \u4e2d\u6709\u591a\u4e2a\u6c34\u57df\uff0c\u5305\u62ec\u4e00\u4e2a\u5e26\u6709\u4e2d\u5fc3\u5c9b\u7684\u5927\u6e56\u548c\u519c\u6751\u5730\u533a\u7684\u51e0\u4e2a\u6c60\u5858\u3002 @keyframes fadeMe { from { color: #77aaff; } to { color: #000000; } } window.addEventListener('load', function () { var text_coord_x = document.getElementById(\"carlacoord_x\") var text_coord_y = document.getElementById(\"carlacoord_y\") const code_coords = document.getElementsByClassName(\"hljs-number\") const code_comment = document.getElementsByClassName(\"hljs-comment\") const image = document.querySelector('[src$=\"map\"]'); const canv = document.createElement('canvas'); canv.setAttribute('height', image.height) canv.setAttribute('width', image.width) image.parentNode.replaceChild(canv, image) var state = {mDown: false, button: 0, lastX: 0, lastY:0, canvX: 0, canvY: 0, zoom: 1.0, mdownX: 0, mdownY: 0, pX: 0.5, pY: 0.5, dblClick: false, listObj: false, touch: false} ctx = canv.getContext('2d') ctx.drawImage(image, 0, 0, canv.width, canv.height) canv.addEventListener('mousemove', (event) => { dX = event.clientX - state.lastX dY = event.clientY - state.lastY state.lastX = event.clientX state.lastY = event.clientY if(state.mDown && state.button == 0) { state.canvX += dX state.canvY += dY ctx.clearRect(0, 0, canv.width, canv.height) ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom) state.touch = true; } }) canv.addEventListener('mousedown', (event) => { state.button = event.button; state.mDown = true; state.touch = true; var rect = canv.getBoundingClientRect(); state.mdownX = event.clientX - rect.left; state.mdownY = event.clientY - rect.top; state.pX = (state.mdownX - state.canvX) / (canv.width * state.zoom); state.pY = (state.mdownY - state.canvY) / (canv.height * state.zoom); }) canv.addEventListener('mouseup', (event) => { state.mDown = false; }) canv.addEventListener('wheel', (event) => { state.mDown = false; var rect = canv.getBoundingClientRect(); dX = event.clientX - rect.left; dY = event.clientY - rect.top; state.pX = (dX - state.canvX) / (canv.width * state.zoom); state.pY = (dY - state.canvY) / (canv.height * state.zoom); if(state.touch){ event.preventDefault(); if(event.wheelDelta > 0){ state.zoom *= 1.15 } else { state.zoom *= 0.85 } if(state.zoom < 1.0){state.zoom = 1.0;} if(state.zoom > 30.0){state.zoom = 30.0} ctx.clearRect(0, 0, canv.width, canv.height) state.canvX = - canv.width * state.zoom * state.pX + dX; state.canvY = - canv.height * state.zoom * state.pY + dY; ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom); } }) canv.addEventListener('dblclick', (event) => { text_coord_x = document.getElementById(\"carlacoord_x\") text_coord_y = document.getElementById(\"carlacoord_y\") const carlaX = 14556.0868 * state.pX + -7.34734913 * state.pY - 6655.00941; const carlaY = 2.19186383 * state.pX + 12431.3323 * state.pY - 4524.46039; code_coords[0].textContent = carlaX.toFixed(1) code_coords[1].textContent = carlaY.toFixed(1) code_comment[0].textContent = \"# CARLA coordinates - X: \" + carlaX.toFixed(1) + \" Y: \" + carlaY.toFixed(1) var newX = text_coord_x.cloneNode(true) var newY = text_coord_y.cloneNode(true) newX.textContent = carlaX.toFixed(1) newY.textContent = carlaY.toFixed(1) var parentX = text_coord_x.parentNode var parentY = text_coord_y.parentNode parentX.replaceChild(newX, text_coord_x); parentY.replaceChild(newY, text_coord_y); //console.log(state.pX + \", \" + state.pY) }) })","title":"\u57ce\u9547 13"},{"location":"map_town13/#13","text":"\u57ce\u9547 13 \u662f\u4e00\u5f20\u5c3a\u5bf8\u4e3a 10x10 km 2 \u7684\u5927\u5730\u56fe\u3002\u5b83\u5206\u4e3a 36 \u4e2a\u56fe\u5757\uff0c\u5927\u591a\u6570\u5c3a\u5bf8\u4e3a 2x2 km 2 \uff08\u67d0\u4e9b\u8fb9\u7f18\u56fe\u5757\u8f83\u5c0f\uff09\u3002\u6709\u8bb8\u591a\u4e0e\u57ce\u5e02\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u533a\u57df\uff0c\u5305\u62ec\u57ce\u5e02\u3001\u4f4f\u5b85\u533a\u548c\u4e61\u6751\u5730\u533a\uff0c\u8fd8\u6709\u73af\u7ed5\u57ce\u5e02\u7684\u5927\u578b\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\u548c\u73af\u5f62\u516c\u8def\u3002\u5efa\u7b51\u98ce\u683c\u53cd\u6620\u4e86\u5317\u7f8e\u8bb8\u591a\u5927\u4e2d\u57ce\u5e02\u7684\u5efa\u7b51\u98ce\u683c\u3002 \u7b14\u8bb0 \u57ce\u9547 13 \u88ab\u8bbe\u8ba1\u4e3a\u57ce\u9547 12 \u7684\u9644\u5c5e\u8bbe\u65bd\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u4f5c\u4e3a \u8bad\u7ec3-\u6d4b\u8bd5\u5bf9 \u3002\u8fd9\u4e9b\u57ce\u9547\u6709\u8bb8\u591a\u5171\u540c\u7279\u5f81\uff0c\u4f46\u5728\u5efa\u7b51\u98ce\u683c\u3001\u9053\u8def\u7eb9\u7406\u3001\u8def\u9762\u7eb9\u7406\u548c\u690d\u88ab\u65b9\u9762\u4e5f\u6709\u8bb8\u591a\u5dee\u5f02\u3002\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u751f\u6210\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u53e6\u4e00\u4e2a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u975e\u5e38\u9002\u5408\u66b4\u9732\u5f00\u53d1\u81ea\u52a8\u9a7e\u9a76\u6280\u672f\u6808\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u8fc7\u5ea6\u62df\u5408\u95ee\u9898\u3002","title":"\u57ce\u9547 13"},{"location":"map_town13/#_1","text":"\u5bfc\u822a\u5668\u4ea4\u4e92\u5f0f\u5730\u56fe\u53ef\u7528\u4e8e\u6d4f\u89c8\u57ce\u9547\u5e76\u5bfc\u51fa\u5750\u6807\u4ee5\u5728 CARLA \u4eff\u771f\u5668\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528\u5bfc\u822a\u5668 : left mouse button - \u5355\u51fb\u5e76\u6309\u4f4f\uff0c\u5411\u5de6\u3001\u5411\u53f3\u3001\u5411\u4e0a\u6216\u5411\u4e0b\u62d6\u52a8\u4ee5\u79fb\u52a8\u5730\u56fe scroll mouse wheel - \u5411\u4e0b\u6eda\u52a8\u7f29\u5c0f\uff0c\u5411\u4e0a\u6eda\u52a8\u653e\u5927\u9f20\u6807\u6307\u9488\u4e0b\u65b9\u7684\u4f4d\u7f6e double click - \u53cc\u51fb\u5730\u56fe\u4e0a\u7684\u67d0\u4e2a\u70b9\u6765\u8bb0\u5f55\u5750\u6807\uff0c\u60a8\u5c06\u5728\u6587\u672c\u548c\u5730\u56fe\u6b63\u4e0b\u65b9\u7684\u4ee3\u7801\u5757\u4e2d\u627e\u5230\u5750\u6807 \u533a\u57df\u989c\u8272\u53c2\u8003 : &nbsp \u6469\u5929\u5927\u697c &nbsp \u9ad8\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u793e\u533a\u5efa\u7b51 &nbsp \u4f4e\u5bc6\u5ea6\u4f4f\u5b85 &nbsp \u516c\u56ed &nbsp \u519c\u6751\u571f\u5730 &nbsp \u6c34\u57df CARLA \u5750\u6807 : X : -- Y : -- \u53cc\u51fb\u5174\u8da3\u70b9\u540e\uff0c\u5bfc\u822a\u5668\u5c06\u663e\u793a\u76f8\u5e94\u7684 CARLA \u5750\u6807\u5e76\u5728\u4ee5\u4e0b\u4ee3\u7801\u5757\u4e2d\u66f4\u65b0\u5b83\u4eec\u3002\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u7b14\u8bb0\u672c\u6216 Python \u7ec8\u7aef\u4e2d\uff0c\u5c06\u89c2\u4f17\u79fb\u52a8\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002\u60a8\u9996\u5148\u9700\u8981 \u8fde\u63a5\u5ba2\u6237\u7aef\u5e76\u8bbe\u7f6e\u4e16\u754c\u5bf9\u8c61 \uff1a # CARLA \u5750\u6807: X 0.0, Y 0.0 spectator = world.get_spectator() loc = carla.Location(0.0, 0.0, 300.0) rot = carla.Rotation(pitch=-90, yaw=0.0, roll=0.0) spectator.set_transform(carla.Transform(loc, rot))","title":"\u5bfc\u822a\u5668"},{"location":"map_town13/#13_1","text":"","title":"\u57ce\u9547 13 \u533a"},{"location":"map_town13/#_2","text":"\u57ce\u9547 13 \u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u662f\u4e00\u5927\u7247\u9ad8\u5c42\u6469\u5929\u5927\u697c\uff0c\u5728\u4e00\u81f4\u7684\u9053\u8def\u7f51\u683c\u4e0a\u6392\u5217\u6210\u8857\u533a\uff0c\u7c7b\u4f3c\u4e8e\u8bb8\u591a\u7f8e\u56fd\u548c\u6b27\u6d32\u5927\u57ce\u5e02\u7684\u5e02\u4e2d\u5fc3\u533a\u57df\u3002","title":"\u5e02\u4e2d\u5fc3\u9ad8\u5c42\u5efa\u7b51\uff1a"},{"location":"map_town13/#_3","text":"\u793e\u533a\u5efa\u7b51\u662f\u4e00\u7ec4 2-4 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8272\u5f69\u7f24\u7eb7\u7684\u6ce2\u897f\u7c73\u4e9a\u98ce\u683c\uff0c\u5e95\u5c42\u4e3a\u5546\u4e1a\uff0c\u6bd7\u90bb\u5e02\u4e2d\u5fc3\u533a\u3002","title":"\u793e\u533a\u5efa\u7b51\uff1a"},{"location":"map_town13/#_4","text":"\u57ce\u9547 13 \u7684\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\u533a\u62e5\u6709\u8bb8\u591a 2 \u81f3 10 \u5c42\u7684\u516c\u5bd3\u697c\uff0c\u8857\u9053\u4e0a\u8fd8\u8bbe\u6709\u5496\u5561\u9986\u548c\u96f6\u552e\u5e97\u7b49\u5546\u4e1a\u5730\u4ea7\u3002\u8bb8\u591a\u4f4f\u5b85\u533a\u90fd\u8bbe\u6709\u5e26\u6709\u906e\u9633\u5e18\u7684\u9633\u53f0\uff0c\u7c7b\u4f3c\u4e8e\u9633\u5149\u660e\u5a9a\u7684\u5357\u6b27\u56fd\u5bb6\u3002","title":"\u9ad8\u5bc6\u5ea6\u4f4f\u5b85\uff1a"},{"location":"map_town13/#_5","text":"\u57ce\u9547 13 \u7684\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\u533a\u53cd\u6620\u4e86\u8bb8\u591a\u6b27\u6d32\u57ce\u5e02\u7684\u90ca\u533a\uff0c\u4e00\u5c42\u548c\u4e24\u5c42\u7684\u4f4f\u5b85\u88ab\u56f4\u680f\u82b1\u56ed\u548c\u8f66\u5e93\u5305\u56f4\u3002","title":"\u4f4e\u5bc6\u5ea6\u4f4f\u5b85\uff1a"},{"location":"map_town13/#_6","text":"\u5bc6\u96c6\u7684\u4f4f\u5b85\u533a\u548c\u5e02\u4e2d\u5fc3\u88ab\u7eff\u8272\u516c\u5171\u7a7a\u95f4\u7684\u5c0f\u5c9b\u6240\u5206\u5272\uff0c\u7eff\u53f6\u4e0e\u57ce\u5e02\u5efa\u7b51\u5e76\u7f6e\u3002","title":"\u516c\u56ed\uff1a"},{"location":"map_town13/#_7","text":"\u57ce\u9547 13 \u62e5\u6709\u5e7f\u6cdb\u7684\u9ad8\u901f\u516c\u8def\u7cfb\u7edf\uff0c\u5305\u62ec 3-4 \u8f66\u9053\u9ad8\u901f\u516c\u8def\u3001\u5927\u578b\u73af\u5c9b\u548c\u6a2a\u8de8\u5927\u7247\u6c34\u57df\u7684\u5824\u9053\u3002","title":"\u9ad8\u901f\u516c\u8def\u548c\u4ea4\u53c9\u8def\u53e3\uff1a"},{"location":"map_town13/#_8","text":"\u57ce\u9547 13 \u8fd8\u6709\u4e00\u4e9b\u519c\u6751\u5730\u533a\uff0c\u6709\u7279\u8272\u519c\u7530\u5efa\u7b51\uff0c\u5982\u6728\u5236\u8c37\u4ed3\u548c\u519c\u820d\u3001\u98ce\u8f66\u3001\u7cae\u4ed3\u3001\u7389\u7c73\u7530\u3001\u5e72\u8349\u579b\u548c\u4e61\u6751\u56f4\u680f\u3002\u8fd9\u4e9b\u5730\u533a\u6709\u672a\u6807\u8bb0\u7684\u4e61\u6751\u571f\u8def\u548c\u7528\u4e8e\u57ce\u9645\u4ea4\u901a\u7684\u5355\u8f66\u9053\u57ce\u9645\u9053\u8def\u3002","title":"\u519c\u6751\u548c\u519c\u7530\uff1a"},{"location":"map_town13/#_9","text":"\u57ce\u9547 13 \u4e2d\u6709\u591a\u4e2a\u6c34\u57df\uff0c\u5305\u62ec\u4e00\u4e2a\u5e26\u6709\u4e2d\u5fc3\u5c9b\u7684\u5927\u6e56\u548c\u519c\u6751\u5730\u533a\u7684\u51e0\u4e2a\u6c60\u5858\u3002 @keyframes fadeMe { from { color: #77aaff; } to { color: #000000; } } window.addEventListener('load', function () { var text_coord_x = document.getElementById(\"carlacoord_x\") var text_coord_y = document.getElementById(\"carlacoord_y\") const code_coords = document.getElementsByClassName(\"hljs-number\") const code_comment = document.getElementsByClassName(\"hljs-comment\") const image = document.querySelector('[src$=\"map\"]'); const canv = document.createElement('canvas'); canv.setAttribute('height', image.height) canv.setAttribute('width', image.width) image.parentNode.replaceChild(canv, image) var state = {mDown: false, button: 0, lastX: 0, lastY:0, canvX: 0, canvY: 0, zoom: 1.0, mdownX: 0, mdownY: 0, pX: 0.5, pY: 0.5, dblClick: false, listObj: false, touch: false} ctx = canv.getContext('2d') ctx.drawImage(image, 0, 0, canv.width, canv.height) canv.addEventListener('mousemove', (event) => { dX = event.clientX - state.lastX dY = event.clientY - state.lastY state.lastX = event.clientX state.lastY = event.clientY if(state.mDown && state.button == 0) { state.canvX += dX state.canvY += dY ctx.clearRect(0, 0, canv.width, canv.height) ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom) state.touch = true; } }) canv.addEventListener('mousedown', (event) => { state.button = event.button; state.mDown = true; state.touch = true; var rect = canv.getBoundingClientRect(); state.mdownX = event.clientX - rect.left; state.mdownY = event.clientY - rect.top; state.pX = (state.mdownX - state.canvX) / (canv.width * state.zoom); state.pY = (state.mdownY - state.canvY) / (canv.height * state.zoom); }) canv.addEventListener('mouseup', (event) => { state.mDown = false; }) canv.addEventListener('wheel', (event) => { state.mDown = false; var rect = canv.getBoundingClientRect(); dX = event.clientX - rect.left; dY = event.clientY - rect.top; state.pX = (dX - state.canvX) / (canv.width * state.zoom); state.pY = (dY - state.canvY) / (canv.height * state.zoom); if(state.touch){ event.preventDefault(); if(event.wheelDelta > 0){ state.zoom *= 1.15 } else { state.zoom *= 0.85 } if(state.zoom < 1.0){state.zoom = 1.0;} if(state.zoom > 30.0){state.zoom = 30.0} ctx.clearRect(0, 0, canv.width, canv.height) state.canvX = - canv.width * state.zoom * state.pX + dX; state.canvY = - canv.height * state.zoom * state.pY + dY; ctx.drawImage(image, state.canvX, state.canvY, canv.width * state.zoom, canv.height * state.zoom); } }) canv.addEventListener('dblclick', (event) => { text_coord_x = document.getElementById(\"carlacoord_x\") text_coord_y = document.getElementById(\"carlacoord_y\") const carlaX = 14556.0868 * state.pX + -7.34734913 * state.pY - 6655.00941; const carlaY = 2.19186383 * state.pX + 12431.3323 * state.pY - 4524.46039; code_coords[0].textContent = carlaX.toFixed(1) code_coords[1].textContent = carlaY.toFixed(1) code_comment[0].textContent = \"# CARLA coordinates - X: \" + carlaX.toFixed(1) + \" Y: \" + carlaY.toFixed(1) var newX = text_coord_x.cloneNode(true) var newY = text_coord_y.cloneNode(true) newX.textContent = carlaX.toFixed(1) newY.textContent = carlaY.toFixed(1) var parentX = text_coord_x.parentNode var parentY = text_coord_y.parentNode parentX.replaceChild(newX, text_coord_x); parentY.replaceChild(newY, text_coord_y); //console.log(state.pX + \", \" + state.pY) }) })","title":"\u6c34\u57df\uff1a"},{"location":"map_town15/","text":"\u57ce\u9547 15 \u57ce\u9547 15 \u662f\u6839\u636e\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u7684\u9053\u8def\u5e03\u5c40\u7ed8\u5236\u7684\u5730\u56fe\u3002\u5730\u56fe\u4e2d\u4eff\u771f\u4e86\u73b0\u4ee3\u6821\u56ed\u7684\u4e00\u4e9b\u6807\u5fd7\u6027\u5efa\u7b51\uff0c\u5305\u62ec\u4eba\u6587\u56fe\u4e66\u9986\u3001\u533b\u5b66\u5927\u697c\u4ee5\u53ca Carla \u7684\u8bde\u751f\u5730\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3\u3002 \u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3 \u8be5\u5730\u56fe\u5305\u62ec\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3\uff0c\u8be5\u4e2d\u5fc3\u662f\u4e16\u754c\u77e5\u540d\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u7814\u7a76\u4e2d\u5fc3\uff0c\u4e5f\u662f Carla \u5f00\u53d1\u56e2\u961f\u7684\u6240\u5728\u5730\u3002 \u4eba\u6587\u56fe\u4e66\u9986 \u8fd9\u5ea7\u5efa\u7b51\u5728\u52a0\u6cf0\u7f57\u5c3c\u4e9a\u8bed\u4e2d\u88ab\u79f0\u4e3a Biblioteca d'Humanitats\uff0c\u4e3a\u5728\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u5b66\u4e60\u548c\u5de5\u4f5c\u7684\u5b66\u751f\u548c\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6db5\u76d6\u591a\u4e2a\u5b66\u79d1\u7684\u6587\u732e\u3002","title":"\u57ce\u9547 15"},{"location":"map_town15/#15","text":"\u57ce\u9547 15 \u662f\u6839\u636e\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u7684\u9053\u8def\u5e03\u5c40\u7ed8\u5236\u7684\u5730\u56fe\u3002\u5730\u56fe\u4e2d\u4eff\u771f\u4e86\u73b0\u4ee3\u6821\u56ed\u7684\u4e00\u4e9b\u6807\u5fd7\u6027\u5efa\u7b51\uff0c\u5305\u62ec\u4eba\u6587\u56fe\u4e66\u9986\u3001\u533b\u5b66\u5927\u697c\u4ee5\u53ca Carla \u7684\u8bde\u751f\u5730\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3\u3002","title":"\u57ce\u9547 15"},{"location":"map_town15/#_1","text":"\u8be5\u5730\u56fe\u5305\u62ec\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3\uff0c\u8be5\u4e2d\u5fc3\u662f\u4e16\u754c\u77e5\u540d\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u7814\u7a76\u4e2d\u5fc3\uff0c\u4e5f\u662f Carla \u5f00\u53d1\u56e2\u961f\u7684\u6240\u5728\u5730\u3002","title":"\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5fc3"},{"location":"map_town15/#_2","text":"\u8fd9\u5ea7\u5efa\u7b51\u5728\u52a0\u6cf0\u7f57\u5c3c\u4e9a\u8bed\u4e2d\u88ab\u79f0\u4e3a Biblioteca d'Humanitats\uff0c\u4e3a\u5728\u5df4\u585e\u7f57\u90a3\u81ea\u6cbb\u5927\u5b66\u5b66\u4e60\u548c\u5de5\u4f5c\u7684\u5b66\u751f\u548c\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6db5\u76d6\u591a\u4e2a\u5b66\u79d1\u7684\u6587\u732e\u3002","title":"\u4eba\u6587\u56fe\u4e66\u9986"},{"location":"maps_tutorials/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe \u5728 Carla \u4e2d\uff0c\u5730\u56fe\u5305\u62ec\u57ce\u9547\u7684\u4e09\u7ef4\u6a21\u578b\u53ca\u5176\u9053\u8def\u7f51\u7edc\u7684\u5b9a\u4e49\u3002\u9053\u8def\u7f51\u7edc\u662f\u901a\u8fc7 OpenDRIVE \u6807\u51c6\u5b9a\u4e49\u7684\u3002Carla \u63d0\u4f9b\u4e86\u591a\u79cd\u5f00\u7bb1\u5373\u7528\u7684\u5730\u56fe\uff0c\u53ef\u7528\u4e8e\u591a\u79cd\u5e94\u7528\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5730\u56fe\u5e76\u5c06\u5176\u52a0\u8f7d\u5230 Carla \u4e2d\u3002\u4ee5\u4e0b\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u5c06\u5176\u52a0\u8f7d\u5230 Carla \u4e2d\u7684\u5fc5\u8981\u6b65\u9aa4\u3002 \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5","title":"\u81ea\u5b9a\u4e49\u5730\u56fe"},{"location":"maps_tutorials/#_1","text":"\u5728 Carla \u4e2d\uff0c\u5730\u56fe\u5305\u62ec\u57ce\u9547\u7684\u4e09\u7ef4\u6a21\u578b\u53ca\u5176\u9053\u8def\u7f51\u7edc\u7684\u5b9a\u4e49\u3002\u9053\u8def\u7f51\u7edc\u662f\u901a\u8fc7 OpenDRIVE \u6807\u51c6\u5b9a\u4e49\u7684\u3002Carla \u63d0\u4f9b\u4e86\u591a\u79cd\u5f00\u7bb1\u5373\u7528\u7684\u5730\u56fe\uff0c\u53ef\u7528\u4e8e\u591a\u79cd\u5e94\u7528\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5730\u56fe\u5e76\u5c06\u5176\u52a0\u8f7d\u5230 Carla \u4e2d\u3002\u4ee5\u4e0b\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u5c06\u5176\u52a0\u8f7d\u5230 Carla \u4e2d\u7684\u5fc5\u8981\u6b65\u9aa4\u3002 \u6982\u8ff0 \u9053\u8def\u6d82\u88c5 \u5b9a\u5236\u5efa\u7b51 \u751f\u6210\u5730\u56fe \u6dfb\u52a0\u5730\u56fe\u5305 \u6dfb\u52a0\u5730\u56fe\u6e90 \u66ff\u4ee3\u65b9\u6cd5","title":"\u81ea\u5b9a\u4e49\u5730\u56fe"},{"location":"plugins_carlaviz/","text":"carlaviz carlaviz \u63d2\u4ef6\u7528\u4e8e\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u53ef\u89c6\u5316\u4eff\u771f\u3002\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u573a\u666f\u7684\u4e00\u4e9b\u57fa\u672c\u8868\u793a\u7684\u7a97\u53e3\u3002\u53c2\u4e0e\u8005\u53ef\u4ee5\u5373\u65f6\u66f4\u65b0\uff0c\u53ef\u4ee5\u68c0\u7d22\u4f20\u611f\u5668\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5728\u573a\u666f\u4e2d\u7ed8\u5236\u9644\u52a0\u6587\u672c\u3001\u7ebf\u6761\u548c\u6298\u7ebf\u3002 \u4e00\u822c\u4fe1\u606f \u652f\u6301 \u83b7\u53d6 carlaviz \u5148\u51b3\u6761\u4ef6 \u4e0b\u8f7d\u63d2\u4ef6 \u5de5\u5177 \u4e00\u822c\u4fe1\u606f \u8d21\u732e\u8005 \u2014 Minjun Xu, also known as wx9698 . \u8bb8\u53ef\u8bc1 \u2014 MIT . \u652f\u6301 Linux \u2014 CARLA 0.9.6, 0.9.7, 0.9.8, 0.9.9, 0.9.10. Windows \u2014 CARLA 0.9.9, 0.9.10. \u4ece\u6e90\u4ee3\u7801\u6784\u5efa \u2014 \u6700\u65b0\u66f4\u65b0\u3002 \u83b7\u53d6 carlaviz \u5148\u51b3\u6761\u4ef6 Docker \u2014 \u8bbf\u95ee\u6587\u6863\u5e76 \u5b89\u88c5 Docker . \u64cd\u4f5c\u7cfb\u7edf \u2014 \u4efb\u4f55\u80fd\u591f\u8fd0\u884c CARLA \u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c\u3002 Websocket-client \u2014 pip3 install websocket_client \u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u5c1a\u672a\u5b89\u88c5 pip \u3002 \u4e0b\u8f7d\u63d2\u4ef6 \u6253\u5f00\u7ec8\u7aef\u5e76\u6839\u636e\u8981\u8fd0\u884c\u7684 CARLA \u7248\u672c\u62c9\u53d6 carlaviz \u7684 Docker \u6620\u50cf\u3002 # \u4ec5\u62c9\u53d6\u548c\u6240\u4f7f\u7528\u7684Carla\u5305\u5339\u914d\u7684\u955c\u50cf\u3002 docker pull mjxu96/carlaviz:0.9.6 docker pull mjxu96/carlaviz:0.9.7 docker pull mjxu96/carlaviz:0.9.8 docker pull mjxu96/carlaviz:0.9.9 docker pull mjxu96/carlaviz:0.9.10 # \u5982\u679c\u5de5\u4f5c\u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e0a\uff0c\u5219\u62c9\u53d6\u8be5\u955c\u50cf docker pull mjxu96/carlaviz:latest \u91cd\u8981 \u76ee\u524d\u5728 Windows \u4e2d\u4ec5\u652f\u6301 0.9.9 \u548c 0.9.10\u3002 CARLA \u81f3 0.9.9\uff08\u5305\u542b\uff09\u8bbe\u7f6e\u4e3a\u5355\u6d41\u3002\u5bf9\u4e8e\u66f4\u9ad8\u7248\u672c\uff0c\u5b9e\u73b0\u4e86\u4f20\u611f\u5668\u7684\u591a\u6d41\u3002 \u5728\u5355\u6d41\u4e2d , \u4e00\u4e2a\u4f20\u611f\u5668\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u542c\u5230\u3002\u5f53\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u542c\u5230\u4f20\u611f\u5668\u65f6\uff0c\u4f8b\u5982\u5728\u8fd0\u884c manual_control.py \u65f6\uff0ccarlaviz \u88ab\u8feb\u590d\u5236\u4f20\u611f\u5668\u4ee5\u68c0\u7d22\u6570\u636e\uff0c\u5e76\u4e14\u6027\u80fd\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 \u5728\u591a\u6d41\u4e2d \uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u542c\u5230\u4e00\u4e2a\u4f20\u611f\u5668\u3002carlaviz \u4e0d\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\uff0c\u5e76\u4e14\u6027\u80fd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 \u7b14\u8bb0 \u6216\u8005\uff0c\u5728 Linux \u4e0a\uff0c\u7528\u6237\u53ef\u4ee5\u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u6784\u5efa carlaviz \uff0c\u4f46\u4f7f\u7528 Docker \u6620\u50cf\u5c06\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u8fd0\u884c carlaviz 1. \u8fd0\u884c CARLA\u3002 a) \u5728 CARLA \u5305\u4e2d \u2014 \u8f6c\u81f3 CARLA \u6587\u4ef6\u5939\u5e76\u4f7f\u7528 CarlaUE4.exe (Windows) \u6216 ./CarlaUE4.sh (Linux) \u542f\u52a8\u4eff\u771f\u3002 b) \u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u5305\u4e2d \u2014 \u8f6c\u5230 CARLA \u6587\u4ef6\u5939\uff0c\u4f7f\u7528 make launch \u8fd0\u884c\u865a\u5e7b\u7f16\u8f91\u5668\uff0c\u5e76\u6309 Play \u3002 2. \u8fd0\u884c carlaviz. \u6839\u636e\u5df2\u4e0b\u8f7d\u7684 Docker \u955c\u50cf\uff0c\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 \u66f4\u6539\u5148\u524d\u4e0b\u8f7d\u7684\u955c\u50cf\u7684\u540d\u79f0 <name_of_Docker_image> \uff0c\u4f8b\u5982 mjxu96/carlaviz:latest \u6216 mjxu96/carlaviz:0.9.10 \u3002 # \u5728 Linux \u7cfb\u7edf docker run -it --network=\"host\" -e CARLAVIZ_HOST_IP=localhost -e CARLA_SERVER_IP=localhost -e CARLA_SERVER_PORT=2000 <name_of_Docker_image> # \u5728 Windows/MacOS \u7cfb\u7edf docker run -it -e CARLAVIZ_HOST_IP=localhost -e CARLA_SERVER_IP=host.docker.internal -e CARLA_SERVER_PORT=2000 -p 8080-8081:8080-8081 -p 8089:8089 <name_of_Docker_image> \u5982\u679c\u4e00\u5207\u90fd\u5df2\u6b63\u786e\u8bbe\u7f6e\uff0ccarlaviz \u5c06\u663e\u793a\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u6210\u529f\u6d88\u606f\u3002 \u8b66\u544a \u8bf7\u8bb0\u4f4f\u7f16\u8f91\u524d\u9762\u7684\u547d\u4ee4\u4ee5\u5339\u914d\u6b63\u5728\u4f7f\u7528\u7684 Docker \u6620\u50cf\u3002 3. \u4ece\u672c\u5730\u6253\u5f00 \u6253\u5f00 Web \u6d4f\u89c8\u5668\u5e76\u8f6c\u5230 http://127.0.0.1:8080/ \u3002carlaviz \u9ed8\u8ba4\u5728 8080 \u7aef\u53e3\u8fd0\u884c\u3002\u8f93\u51fa\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u3002 \u5de5\u5177 \u4e00\u65e6\u63d2\u4ef6\u8fd0\u884c\uff0c\u5b83\u5c31\u53ef\u4ee5\u7528\u4e8e\u53ef\u89c6\u5316\u4eff\u771f\u3001\u5176\u4e2d\u7684\u53c2\u4e0e\u8005\u4ee5\u53ca\u4f20\u611f\u5668\u68c0\u7d22\u7684\u6570\u636e\u3002\u8be5\u63d2\u4ef6\u5728\u53f3\u4fa7\u663e\u793a\u4e00\u4e2a\u53ef\u89c6\u5316\u7a97\u53e3\uff0c\u573a\u666f\u5b9e\u65f6\u66f4\u65b0\uff0c\u5de6\u4fa7\u663e\u793a\u4e00\u4e2a\u4fa7\u8fb9\u680f\uff0c\u5176\u4e2d\u5305\u542b\u8981\u663e\u793a\u7684\u9879\u76ee\u5217\u8868\u3002\u5176\u4e2d\u4e00\u4e9b\u9879\u76ee\u5c06\u51fa\u73b0\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\uff0c\u5176\u4ed6\u9879\u76ee\uff08\u4e3b\u8981\u662f\u4f20\u611f\u5668\u548c\u6e38\u620f\u6570\u636e\uff09\u51fa\u73b0\u5728\u9879\u76ee\u5217\u8868\u4e0a\u65b9\u3002 \u4ee5\u4e0b\u662f\u53ef\u7528\u4e8e\u53ef\u89c6\u5316\u7684\u9009\u9879\u5217\u8868\u3002\u53ef\u80fd\u4f1a\u663e\u793a\u5176\u4ed6\u5143\u7d20\uff0c\u4f8b\u5982 View Mode \u2014 \u66f4\u6539\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u7684\u89c6\u89d2\u3002 Top Down \u2014 \u7a7a\u4e2d\u89c6\u89d2\u3002 Perspective \u2014 \u81ea\u7531\u7684\u89c6\u89d2\u3002 Driver \u2014 \u7b2c\u4e00\u4eba\u79f0\u89c6\u89d2\u3002 /vehicle \u2014 \u663e\u793a\u81ea\u6211\u8f66\u8f86\u7684\u5c5e\u6027\u3002\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u5305\u62ec\u901f\u5ea6\u8ba1\u548c\u52a0\u901f\u5ea6\u8ba1\uff0c\u4ee5\u53ca IMU\u3001GNSS \u548c\u78b0\u649e\u68c0\u6d4b\u4f20\u611f\u5668\u68c0\u7d22\u7684\u6570\u636e\u3002 /velocity \u2014 \u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u3002 /acceleration \u2014 \u81ea\u6211\u8f66\u8f86\u7684\u52a0\u901f\u3002 /drawing \u2014 \u5728\u4f7f\u7528 CarlaPainter \u7ed8\u5236\u7684\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5176\u4ed6\u5143\u7d20\u3002 /texts \u2014 \u6587\u672c\u5143\u7d20\u3002 /points \u2014 \u70b9\u5143\u7d20\u3002 /polylines \u2014 \u6298\u7ebf\u5143\u7d20\u3002 /objects \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u53c2\u4e0e\u8005\u3002 /walkers \u2014 \u66f4\u65b0\u884c\u4eba\u3002 /vehicles \u2014 \u66f4\u65b0\u8f66\u8f86\u3002 /game \u2014 \u663e\u793a\u6e38\u620f\u6570\u636e\u3002 /time \u2014 \u5f53\u524d\u4eff\u771f\u65f6\u95f4\u548c\u5e27\u3002 /lidar \u2014 LIDAR \u4f20\u611f\u5668\u6570\u636e\u3002 /points \u2014 LIDAR \u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u70b9\u4e91\u3002 /radar \u2014 LIDAR \u4f20\u611f\u5668\u6570\u636e\u3002 /points \u2014 \u96f7\u8fbe\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u70b9\u4e91\u3002 /traffic \u2014 \u5730\u6807\u6570\u636e\u3002 /traffic_light \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5730\u56fe\u7684\u4ea4\u901a\u706f\u3002 /stop_sign \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5730\u56fe\u7684\u505c\u8f66\u6807\u5fd7\u3002 \u5c1d\u8bd5\u751f\u6210\u4e00\u4e9b\u53c2\u4e0e\u8005\u3002\u8fd9\u4e9b\u5c06\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u81ea\u52a8\u66f4\u65b0\u3002 cd PythonAPI/examples # \u5728\u540c\u6b65\u6a21\u5f0f\u4eff\u771f\u4e0b\u751f\u6210\u53c2\u4e0e\u8005 python3 generate_traffic.py -n 10 -w 5 \u751f\u6210\u4e00\u4e2a\u624b\u52a8\u63a7\u5236\u7684\u81ea\u6211\u8f66\u8f86\u5e76\u56db\u5904\u79fb\u52a8\uff0c\u4ee5\u67e5\u770b\u63d2\u4ef6\u5982\u4f55\u66f4\u65b0\u4f20\u611f\u5668\u6570\u636e\u3002 cd PythonAPI/examples python3 manual_control.py \u8d21\u732e\u8005 ( wx9698 ) \u521b\u5efa\u4e86\u4e00\u4e2a\u9644\u52a0\u7c7b CarlaPainter \uff0c\u5b83\u5141\u8bb8\u7528\u6237\u7ed8\u5236\u8981\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u7684\u5143\u7d20\u3002\u5176\u4e2d\u5305\u62ec\u6587\u672c\u3001\u70b9\u548c\u6298\u7ebf\u3002\u6309\u7167 \u6b64\u793a\u4f8b \u751f\u6210\u5e26\u6709 LIDAR \u7684\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u7ed8\u5236 LIDAR \u6570\u636e\u3001\u8f66\u8f86\u7684\u8f68\u8ff9\u548c\u901f\u5ea6\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e carlaviz \u63d2\u4ef6\u7684\u5168\u90e8\u4fe1\u606f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"carlaviz \u2014 web \u53ef\u89c6\u5316\u5668"},{"location":"plugins_carlaviz/#carlaviz","text":"carlaviz \u63d2\u4ef6\u7528\u4e8e\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u53ef\u89c6\u5316\u4eff\u771f\u3002\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u573a\u666f\u7684\u4e00\u4e9b\u57fa\u672c\u8868\u793a\u7684\u7a97\u53e3\u3002\u53c2\u4e0e\u8005\u53ef\u4ee5\u5373\u65f6\u66f4\u65b0\uff0c\u53ef\u4ee5\u68c0\u7d22\u4f20\u611f\u5668\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u5728\u573a\u666f\u4e2d\u7ed8\u5236\u9644\u52a0\u6587\u672c\u3001\u7ebf\u6761\u548c\u6298\u7ebf\u3002 \u4e00\u822c\u4fe1\u606f \u652f\u6301 \u83b7\u53d6 carlaviz \u5148\u51b3\u6761\u4ef6 \u4e0b\u8f7d\u63d2\u4ef6 \u5de5\u5177","title":"carlaviz"},{"location":"plugins_carlaviz/#_1","text":"\u8d21\u732e\u8005 \u2014 Minjun Xu, also known as wx9698 . \u8bb8\u53ef\u8bc1 \u2014 MIT .","title":"\u4e00\u822c\u4fe1\u606f"},{"location":"plugins_carlaviz/#_2","text":"Linux \u2014 CARLA 0.9.6, 0.9.7, 0.9.8, 0.9.9, 0.9.10. Windows \u2014 CARLA 0.9.9, 0.9.10. \u4ece\u6e90\u4ee3\u7801\u6784\u5efa \u2014 \u6700\u65b0\u66f4\u65b0\u3002","title":"\u652f\u6301"},{"location":"plugins_carlaviz/#carlaviz_1","text":"","title":"\u83b7\u53d6 carlaviz"},{"location":"plugins_carlaviz/#_3","text":"Docker \u2014 \u8bbf\u95ee\u6587\u6863\u5e76 \u5b89\u88c5 Docker . \u64cd\u4f5c\u7cfb\u7edf \u2014 \u4efb\u4f55\u80fd\u591f\u8fd0\u884c CARLA \u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c\u3002 Websocket-client \u2014 pip3 install websocket_client \u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u5c1a\u672a\u5b89\u88c5 pip \u3002","title":"\u5148\u51b3\u6761\u4ef6"},{"location":"plugins_carlaviz/#_4","text":"\u6253\u5f00\u7ec8\u7aef\u5e76\u6839\u636e\u8981\u8fd0\u884c\u7684 CARLA \u7248\u672c\u62c9\u53d6 carlaviz \u7684 Docker \u6620\u50cf\u3002 # \u4ec5\u62c9\u53d6\u548c\u6240\u4f7f\u7528\u7684Carla\u5305\u5339\u914d\u7684\u955c\u50cf\u3002 docker pull mjxu96/carlaviz:0.9.6 docker pull mjxu96/carlaviz:0.9.7 docker pull mjxu96/carlaviz:0.9.8 docker pull mjxu96/carlaviz:0.9.9 docker pull mjxu96/carlaviz:0.9.10 # \u5982\u679c\u5de5\u4f5c\u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e0a\uff0c\u5219\u62c9\u53d6\u8be5\u955c\u50cf docker pull mjxu96/carlaviz:latest \u91cd\u8981 \u76ee\u524d\u5728 Windows \u4e2d\u4ec5\u652f\u6301 0.9.9 \u548c 0.9.10\u3002 CARLA \u81f3 0.9.9\uff08\u5305\u542b\uff09\u8bbe\u7f6e\u4e3a\u5355\u6d41\u3002\u5bf9\u4e8e\u66f4\u9ad8\u7248\u672c\uff0c\u5b9e\u73b0\u4e86\u4f20\u611f\u5668\u7684\u591a\u6d41\u3002 \u5728\u5355\u6d41\u4e2d , \u4e00\u4e2a\u4f20\u611f\u5668\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u542c\u5230\u3002\u5f53\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\u5df2\u7ecf\u542c\u5230\u4f20\u611f\u5668\u65f6\uff0c\u4f8b\u5982\u5728\u8fd0\u884c manual_control.py \u65f6\uff0ccarlaviz \u88ab\u8feb\u590d\u5236\u4f20\u611f\u5668\u4ee5\u68c0\u7d22\u6570\u636e\uff0c\u5e76\u4e14\u6027\u80fd\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 \u5728\u591a\u6d41\u4e2d \uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u542c\u5230\u4e00\u4e2a\u4f20\u611f\u5668\u3002carlaviz \u4e0d\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\uff0c\u5e76\u4e14\u6027\u80fd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002 \u7b14\u8bb0 \u6216\u8005\uff0c\u5728 Linux \u4e0a\uff0c\u7528\u6237\u53ef\u4ee5\u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u6784\u5efa carlaviz \uff0c\u4f46\u4f7f\u7528 Docker \u6620\u50cf\u5c06\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002","title":"\u4e0b\u8f7d\u63d2\u4ef6"},{"location":"plugins_carlaviz/#carlaviz_2","text":"1. \u8fd0\u884c CARLA\u3002 a) \u5728 CARLA \u5305\u4e2d \u2014 \u8f6c\u81f3 CARLA \u6587\u4ef6\u5939\u5e76\u4f7f\u7528 CarlaUE4.exe (Windows) \u6216 ./CarlaUE4.sh (Linux) \u542f\u52a8\u4eff\u771f\u3002 b) \u5728\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u5305\u4e2d \u2014 \u8f6c\u5230 CARLA \u6587\u4ef6\u5939\uff0c\u4f7f\u7528 make launch \u8fd0\u884c\u865a\u5e7b\u7f16\u8f91\u5668\uff0c\u5e76\u6309 Play \u3002 2. \u8fd0\u884c carlaviz. \u6839\u636e\u5df2\u4e0b\u8f7d\u7684 Docker \u955c\u50cf\uff0c\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 \u66f4\u6539\u5148\u524d\u4e0b\u8f7d\u7684\u955c\u50cf\u7684\u540d\u79f0 <name_of_Docker_image> \uff0c\u4f8b\u5982 mjxu96/carlaviz:latest \u6216 mjxu96/carlaviz:0.9.10 \u3002 # \u5728 Linux \u7cfb\u7edf docker run -it --network=\"host\" -e CARLAVIZ_HOST_IP=localhost -e CARLA_SERVER_IP=localhost -e CARLA_SERVER_PORT=2000 <name_of_Docker_image> # \u5728 Windows/MacOS \u7cfb\u7edf docker run -it -e CARLAVIZ_HOST_IP=localhost -e CARLA_SERVER_IP=host.docker.internal -e CARLA_SERVER_PORT=2000 -p 8080-8081:8080-8081 -p 8089:8089 <name_of_Docker_image> \u5982\u679c\u4e00\u5207\u90fd\u5df2\u6b63\u786e\u8bbe\u7f6e\uff0ccarlaviz \u5c06\u663e\u793a\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u6210\u529f\u6d88\u606f\u3002 \u8b66\u544a \u8bf7\u8bb0\u4f4f\u7f16\u8f91\u524d\u9762\u7684\u547d\u4ee4\u4ee5\u5339\u914d\u6b63\u5728\u4f7f\u7528\u7684 Docker \u6620\u50cf\u3002 3. \u4ece\u672c\u5730\u6253\u5f00 \u6253\u5f00 Web \u6d4f\u89c8\u5668\u5e76\u8f6c\u5230 http://127.0.0.1:8080/ \u3002carlaviz \u9ed8\u8ba4\u5728 8080 \u7aef\u53e3\u8fd0\u884c\u3002\u8f93\u51fa\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u3002","title":"\u8fd0\u884c carlaviz"},{"location":"plugins_carlaviz/#_5","text":"\u4e00\u65e6\u63d2\u4ef6\u8fd0\u884c\uff0c\u5b83\u5c31\u53ef\u4ee5\u7528\u4e8e\u53ef\u89c6\u5316\u4eff\u771f\u3001\u5176\u4e2d\u7684\u53c2\u4e0e\u8005\u4ee5\u53ca\u4f20\u611f\u5668\u68c0\u7d22\u7684\u6570\u636e\u3002\u8be5\u63d2\u4ef6\u5728\u53f3\u4fa7\u663e\u793a\u4e00\u4e2a\u53ef\u89c6\u5316\u7a97\u53e3\uff0c\u573a\u666f\u5b9e\u65f6\u66f4\u65b0\uff0c\u5de6\u4fa7\u663e\u793a\u4e00\u4e2a\u4fa7\u8fb9\u680f\uff0c\u5176\u4e2d\u5305\u542b\u8981\u663e\u793a\u7684\u9879\u76ee\u5217\u8868\u3002\u5176\u4e2d\u4e00\u4e9b\u9879\u76ee\u5c06\u51fa\u73b0\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\uff0c\u5176\u4ed6\u9879\u76ee\uff08\u4e3b\u8981\u662f\u4f20\u611f\u5668\u548c\u6e38\u620f\u6570\u636e\uff09\u51fa\u73b0\u5728\u9879\u76ee\u5217\u8868\u4e0a\u65b9\u3002 \u4ee5\u4e0b\u662f\u53ef\u7528\u4e8e\u53ef\u89c6\u5316\u7684\u9009\u9879\u5217\u8868\u3002\u53ef\u80fd\u4f1a\u663e\u793a\u5176\u4ed6\u5143\u7d20\uff0c\u4f8b\u5982 View Mode \u2014 \u66f4\u6539\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u7684\u89c6\u89d2\u3002 Top Down \u2014 \u7a7a\u4e2d\u89c6\u89d2\u3002 Perspective \u2014 \u81ea\u7531\u7684\u89c6\u89d2\u3002 Driver \u2014 \u7b2c\u4e00\u4eba\u79f0\u89c6\u89d2\u3002 /vehicle \u2014 \u663e\u793a\u81ea\u6211\u8f66\u8f86\u7684\u5c5e\u6027\u3002\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u5305\u62ec\u901f\u5ea6\u8ba1\u548c\u52a0\u901f\u5ea6\u8ba1\uff0c\u4ee5\u53ca IMU\u3001GNSS \u548c\u78b0\u649e\u68c0\u6d4b\u4f20\u611f\u5668\u68c0\u7d22\u7684\u6570\u636e\u3002 /velocity \u2014 \u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u3002 /acceleration \u2014 \u81ea\u6211\u8f66\u8f86\u7684\u52a0\u901f\u3002 /drawing \u2014 \u5728\u4f7f\u7528 CarlaPainter \u7ed8\u5236\u7684\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5176\u4ed6\u5143\u7d20\u3002 /texts \u2014 \u6587\u672c\u5143\u7d20\u3002 /points \u2014 \u70b9\u5143\u7d20\u3002 /polylines \u2014 \u6298\u7ebf\u5143\u7d20\u3002 /objects \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u53c2\u4e0e\u8005\u3002 /walkers \u2014 \u66f4\u65b0\u884c\u4eba\u3002 /vehicles \u2014 \u66f4\u65b0\u8f66\u8f86\u3002 /game \u2014 \u663e\u793a\u6e38\u620f\u6570\u636e\u3002 /time \u2014 \u5f53\u524d\u4eff\u771f\u65f6\u95f4\u548c\u5e27\u3002 /lidar \u2014 LIDAR \u4f20\u611f\u5668\u6570\u636e\u3002 /points \u2014 LIDAR \u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u70b9\u4e91\u3002 /radar \u2014 LIDAR \u4f20\u611f\u5668\u6570\u636e\u3002 /points \u2014 \u96f7\u8fbe\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u7684\u70b9\u4e91\u3002 /traffic \u2014 \u5730\u6807\u6570\u636e\u3002 /traffic_light \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5730\u56fe\u7684\u4ea4\u901a\u706f\u3002 /stop_sign \u2014 \u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u5730\u56fe\u7684\u505c\u8f66\u6807\u5fd7\u3002 \u5c1d\u8bd5\u751f\u6210\u4e00\u4e9b\u53c2\u4e0e\u8005\u3002\u8fd9\u4e9b\u5c06\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u81ea\u52a8\u66f4\u65b0\u3002 cd PythonAPI/examples # \u5728\u540c\u6b65\u6a21\u5f0f\u4eff\u771f\u4e0b\u751f\u6210\u53c2\u4e0e\u8005 python3 generate_traffic.py -n 10 -w 5 \u751f\u6210\u4e00\u4e2a\u624b\u52a8\u63a7\u5236\u7684\u81ea\u6211\u8f66\u8f86\u5e76\u56db\u5904\u79fb\u52a8\uff0c\u4ee5\u67e5\u770b\u63d2\u4ef6\u5982\u4f55\u66f4\u65b0\u4f20\u611f\u5668\u6570\u636e\u3002 cd PythonAPI/examples python3 manual_control.py \u8d21\u732e\u8005 ( wx9698 ) \u521b\u5efa\u4e86\u4e00\u4e2a\u9644\u52a0\u7c7b CarlaPainter \uff0c\u5b83\u5141\u8bb8\u7528\u6237\u7ed8\u5236\u8981\u5728\u53ef\u89c6\u5316\u7a97\u53e3\u4e2d\u663e\u793a\u7684\u5143\u7d20\u3002\u5176\u4e2d\u5305\u62ec\u6587\u672c\u3001\u70b9\u548c\u6298\u7ebf\u3002\u6309\u7167 \u6b64\u793a\u4f8b \u751f\u6210\u5e26\u6709 LIDAR \u7684\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u7ed8\u5236 LIDAR \u6570\u636e\u3001\u8f66\u8f86\u7684\u8f68\u8ff9\u548c\u901f\u5ea6\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e carlaviz \u63d2\u4ef6\u7684\u5168\u90e8\u4fe1\u606f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u5de5\u5177"},{"location":"python_api/","text":"Python API \u53c2\u8003 \u6b64\u53c2\u8003\u5305\u542b Python API \u7684\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002\u8981\u67e5\u9605\u7279\u5b9a CARLA \u7248\u672c\u7684\u5148\u524d\u53c2\u8003\uff0c\u8bf7\u4f7f\u7528\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u6587\u6863\u7248\u672c\u3002 \u8fd9\u4f1a\u5c06\u6574\u4e2a\u6587\u6863\u66f4\u6539\u4e3a\u4e4b\u524d\u7684\u72b6\u6001\u3002\u8bf7\u8bb0\u4f4f\uff0c \u6700\u65b0 \u7248\u672c\u662f dev \u5206\u652f\uff0c\u53ef\u80fd\u4f1a\u663e\u793a\u4efb\u4f55 CARLA \u6253\u5305\u7248\u672c\u4e2d\u4e0d\u53ef\u7528\u7684\u529f\u80fd\u3002 carla.AckermannControllerSettings \u7ba1\u7406 Ackermann PID \u63a7\u5236\u5668\u7684\u8bbe\u7f6e\u3002 \u5b9e\u4f8b\u53d8\u91cf speed_kp ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u6bd4\u4f8b\u9879\u3002 speed_ki ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u79ef\u5206\u9879\u3002 speed_kd ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u5fae\u5206\u9879\u3002 accel_kp ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u6bd4\u4f8b\u9879\u3002 accel_ki ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u79ef\u5206\u9879\u3002 accel_kd ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u5fae\u5206\u9879\u3002 \u65b9\u6cd5 __init__ ( self , speed_kp =0.15 , speed_ki =0.0 , speed_kd =0.25 , accel_kp =0.01 , accel_ki =0.0 , accel_kd =0.01 ) Parameters: speed_kp ( float ) speed_ki ( float ) speed_kd ( float ) accel_kp ( float ) accel_ki ( float ) accel_kd ( float ) Dunder methods __eq__ ( self , other = carla.AckermannControllerSettings ) __ne__ ( self , other = carla.AckermannControllerSettings ) __str__ ( self ) carla.Actor CARLA \u5c06\u53c2\u4e0e\u8005\u5b9a\u4e49\u4e3a\u5728\u4eff\u771f\u4e2d\u53d1\u6325\u4f5c\u7528\u6216\u53ef\u4ee5\u79fb\u52a8\u7684\u4efb\u4f55\u7269\u4f53\u3002\u5176\u4e2d\u5305\u62ec\uff1a\u884c\u4eba\u3001\u8f66\u8f86\u3001\u4f20\u611f\u5668\u548c\u4ea4\u901a\u6807\u5fd7\uff08\u5c06\u4ea4\u901a\u706f\u89c6\u4e3a\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff09\u3002\u53c2\u4e0e\u8005\u5728\u4eff\u771f\u4e2d\u7531 carla.World \u751f\u6210\uff0c\u5e76\u4e14\u9700\u8981\u521b\u5efa carla.ActorBlueprint \u3002\u8fd9\u4e9b\u84dd\u56fe\u5c5e\u4e8e CARLA \u63d0\u4f9b\u7684\u5e93\uff0c\u8bf7\u5728 \u6b64\u5904 \u627e\u5230\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5b9e\u4f8b\u53d8\u91cf attributes ( dict ) \u5305\u542b\u8be5\u53c2\u4e0e\u8005\u6240\u57fa\u4e8e\u84dd\u56fe\u5c5e\u6027\u7684\u5b57\u5178\u3002 id ( int ) \u8be5\u53c2\u4e0e\u8005\u7684\u6807\u8bc6\u7b26\u3002\u5728\u7ed9\u5b9a\u7684\u60c5\u8282\u4e2d\u662f\u552f\u4e00\u7684\u3002 type_id ( str ) \u8be5\u53c2\u4e0e\u8005\u6240\u57fa\u4e8e\u7684\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\uff0c\u4f8b\u5982 vehicle.ford.mustang \u3002 is_alive ( bool ) \u8fd4\u56de\u6b64\u5bf9\u8c61\u662f\u5426\u662f\u4f7f\u7528\u6b64\u53c2\u4e0e\u8005\u53e5\u67c4\u9500\u6bc1\u7684\u3002 is_active ( bool ) \u8fd4\u56de\u6b64\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001 (True) \u6216\u975e\u6d3b\u52a8\u72b6\u6001 (False)\u3002 is_dormant ( bool ) \u8fd4\u56de\u6b64\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u4f11\u7720\u72b6\u6001 (True) \u6216\u975e\u4f11\u7720\u72b6\u6001 (False) - \u4e0e is_active \u76f8\u53cd\u3002 parent ( carla.Actor ) \u53c2\u4e0e\u8005\u53ef\u4ee5\u9644\u52a0\u5230\u4ed6\u4eec\u5c06\u8ddf\u968f\u7684\u7236\u53c2\u4e0e\u8005\u3002\u8fd9\u5c31\u662f\u6240\u8bf4\u7684\u53c2\u4e0e\u8005\u3002 semantic_tags ( list(int) ) \u84dd\u56fe\u5217\u8868\u7ec4\u4ef6\u4e3a\u6b64\u53c2\u4e0e\u8005\u63d0\u4f9b\u7684\u8bed\u4e49\u6807\u7b7e\u5217\u8868\u3002\u4f8b\u5982\uff0c\u4ea4\u901a\u706f\u53ef\u4ee5\u7528 Pole \u548c TrafficLight . \u3002\u8fd9\u4e9b\u6807\u7b7e\u7531\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u4f7f\u7528\u3002\u5728 \u6b64\u5904 \u67e5\u627e\u6709\u5173\u6b64\u4f20\u611f\u5668\u548c\u5176\u4ed6\u4f20\u611f\u5668\u7684\u66f4\u591a\u4fe1\u606f\u3002 actor_state ( carla.ActorState ) \u8fd4\u56de carla.ActorState \uff0c\u5b83\u53ef\u4ee5\u8bc6\u522b\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u3001\u4f11\u7720\u6216\u65e0\u6548\u72b6\u6001\u3002 bounding_box ( carla.BoundingBox ) \u5305\u542b\u53c2\u4e0e\u8005\u51e0\u4f55\u5f62\u72b6\u7684\u8fb9\u754c\u6846\u3002\u5b83\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u662f\u76f8\u5bf9\u4e8e\u5b83\u6240\u9644\u7740\u7684\u53c2\u4e0e\u8005\u7684\u3002 \u65b9\u6cd5 add_angular_impulse ( self , angular_impulse ) \u5728\u89d2\u8272\u7684\u8d28\u5fc3\u5904\u5e94\u7528\u89d2\u51b2\u91cf\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u77ac\u65f6\u626d\u77e9\uff0c\u901a\u5e38\u5e94\u7528\u4e00\u6b21\u3002\u4f7f\u7528 add_torque() \u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u65bd\u52a0\u65cb\u8f6c\u529b\u3002 \u53c2\u6570: angular_impulse ( carla.Vector3D - degrees*s ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u89d2\u8109\u51b2\u77e2\u91cf\u3002 add_force ( self , force ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u65bd\u52a0\u529b\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u65bd\u52a0\u7684\u529b\u3002\u4f7f\u7528 add_impulse() \u65bd\u52a0\u4ec5\u6301\u7eed\u77ac\u95f4\u7684\u8109\u51b2\u3002 \u53c2\u6570: force ( carla.Vector3D - N ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u529b\u77e2\u91cf\u3002 add_impulse ( self , impulse ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u65bd\u52a0\u8109\u51b2\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u77ac\u65f6\u529b\uff0c\u901a\u5e38\u5e94\u7528\u4e00\u6b21\u3002\u4f7f\u7528 add_force() \u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u65bd\u52a0\u529b\u3002 \u53c2\u6570: impulse ( carla.Vector3D - N*s ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u8109\u51b2\u77e2\u91cf\u3002 add_torque ( self , torque ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u5e94\u7528\u626d\u77e9\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u65bd\u52a0\u7684\u626d\u77e9\u3002\u4f7f\u7528 add_angular_impulse() \u65bd\u52a0\u4ec5\u6301\u7eed\u77ac\u95f4\u7684\u626d\u77e9\u3002 \u53c2\u6570: torque ( carla.Vector3D - degrees ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u626d\u77e9\u77e2\u91cf\u3002 destroy ( self ) \u544a\u8bc9\u4eff\u771f\u5668\u9500\u6bc1\u8fd9\u4e2a\u53c2\u4e0e\u8005\uff0c\u5982\u679c\u6210\u529f\u5219 True \u3002\u5982\u679c\u5df2\u7ecf\u88ab\u7834\u574f\u5219\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u8fd4\u56de: bool \u8b66\u544a: T\u6b64\u65b9\u6cd5\u4f1a\u963b\u6b62\u811a\u672c\uff0c\u76f4\u5230\u6a21\u62df\u5668\u5b8c\u6210\u9500\u6bc1\u4e3a\u6b62\u3002 disable_constant_velocity ( self ) \u7981\u7528\u4e4b\u524d\u4e3a carla.Vehicle \u53c2\u4e0e\u8005\u8bbe\u7f6e\u7684\u4efb\u4f55\u6052\u5b9a\u901f\u5ea6\u3002 enable_constant_velocity ( self , velocity ) \u5c06\u8f66\u8f86\u7684\u901f\u5ea6\u77e2\u91cf\u8bbe\u7f6e\u4e3a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6052\u5b9a\u503c\u3002\u6240\u5f97\u5230\u7684\u901f\u5ea6\u5c06\u8fd1\u4f3c\u4e8e velocity \u6240\u8bbe\u7f6e\u7684\u901f\u5ea6\uff0c\u4e0e set_target_velocity() \u4e00\u6837\u3002 \u53c2\u6570: velocity ( carla.Vector3D - m/s ) - Velocity vector in local space. \u6ce8\u610f: \u53ea\u6709 carla.Vehicle \u53c2\u4e0e\u8005\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002 \u8b66\u544a: \u4e3a \u4ea4\u901a\u7ba1\u7406\u5668 \u7ba1\u7406\u7684\u8f66\u8f86\u542f\u7528\u6052\u5b9a\u901f\u5ea6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\u3002\u6b64\u65b9\u6cd5\u4f1a\u8986\u76d6\u4ea4\u901a\u7ba1\u7406\u5668\u5bf9\u901f\u5ea6\u7684\u4efb\u4f55\u66f4\u6539\u3002 \u83b7\u53d6\u5668 get_acceleration ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u6536\u5230\u7684\u89d2\u8272\u7684\u4e09\u7ef4\u52a0\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de: carla.Vector3D - m/s 2 get_angular_velocity ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u89d2\u8272\u7684\u89d2\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Vector3D - deg/s get_location ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u4e0a\u4e00\u6b21tick\u671f\u95f4\u63a5\u6536\u5230\u7684\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Location - meters \u8bbe\u7f6e\u5668: carla.Actor.set_location get_transform ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u53c2\u4e0e\u8005\u7684\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de: carla.Transform \u8bbe\u7f6e\u5668: carla.Actor.set_transform get_velocity ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u89d2\u8272\u7684\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s get_world ( self ) \u8fd4\u56de\u8be5\u53c2\u4e0e\u8005\u6240\u5c5e\u7684\u4e16\u754c\u3002 \u8fd4\u56de: carla.World \u8bbe\u7f6e\u5668 set_enable_gravity ( self , enabled ) \u542f\u7528\u6216\u7981\u7528\u6f14\u5458\u7684\u91cd\u529b\u3002 \u9ed8\u8ba4 \u4e3a True\u3002 \u53c2\u6570\uff1a enabled ( bool ) set_location ( self , location ) \u5c06\u89d2\u8272\u4f20\u9001\u5230\u7ed9\u5b9a\u4f4d\u7f6e\u3002 \u53c2\u6570\uff1a location ( carla.Location - meters ) \u83b7\u53d6\u5668\uff1a carla.Actor.get_location set_simulate_physics ( self , enabled =True ) \u542f\u7528\u6216\u7981\u7528\u6b64\u53c2\u4e0e\u8005\u4e0a\u7684\u7269\u7406\u4eff\u771f\u3002 \u53c2\u4e0e\u8005\uff1a enabled ( bool ) set_target_angular_velocity ( self , angular_velocity ) \u8bbe\u7f6e\u89d2\u8272\u7684\u89d2\u901f\u5ea6\u77e2\u91cf\u3002\u8fd9\u662f\u5728\u7269\u7406\u6b65\u9aa4\u4e4b\u524d\u5e94\u7528\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u89d2\u901f\u5ea6\u5c06\u53d7\u5230\u6469\u64e6\u7b49\u5916\u529b\u7684\u5f71\u54cd\u3002 \u53c2\u6570\uff1a angular_velocity ( carla.Vector3D - deg/s ) set_target_velocity ( self , velocity ) \u8bbe\u7f6e\u53c2\u4e0e\u8005\u7684\u901f\u5ea6\u5411\u91cf\u3002\u8fd9\u662f\u5728\u7269\u7406\u6b65\u9aa4\u4e4b\u524d\u5e94\u7528\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u89d2\u901f\u5ea6\u5c06\u53d7\u5230\u6469\u64e6\u7b49\u5916\u529b\u7684\u5f71\u54cd\u3002 \u53c2\u6570\uff1a velocity ( carla.Vector3D ) set_transform ( self , transform ) \u5c06\u89d2\u8272\u4f20\u9001\u5230\u7ed9\u5b9a\u7684\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002 \u53c2\u6570\uff1a transform ( carla.Transform ) \u83b7\u53d6\u5668\uff1a carla.Actor.get_transform Dunder methods __str__ ( self ) carla.ActorAttribute CARLA \u4e3a\u53c2\u4e0e\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.BlueprintLibrary \u8fdb\u884c\u8bbf\u95ee\u3002\u6bcf\u4e2a\u84dd\u56fe\u90fd\u6709\u4e00\u7cfb\u5217\u5185\u90e8\u5b9a\u4e49\u7684\u5c5e\u6027\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u53e6\u4e00\u4e9b\u5219\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u4e3a\u53ef\u8bbe\u7f6e\u7684\u503c\u63d0\u4f9b\u4e86\u63a8\u8350\u503c\u5217\u8868\u3002 \u5b9e\u4f8b\u53d8\u91cf id ( str ) \u5e93\u4e2d\u5c5e\u6027\u7684\u540d\u79f0\u548c\u6807\u8bc6\u7b26\u3002 is_modifiable ( bool ) \u5982\u679c\u5c5e\u6027\u7684\u503c\u53ef\u4ee5\u4fee\u6539\uff0c\u5219\u4e3a True \u3002 recommended_values ( list(str) ) \u8bbe\u8ba1\u84dd\u56fe\u7684\u4eba\u5458\u5efa\u8bae\u7684\u503c\u5217\u8868\u3002 type ( carla.ActorAttributeType ) \u5c5e\u6027\u7684\u53c2\u6570\u7c7b\u578b\u3002 \u65b9\u6cd5 as_bool ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u5e03\u5c14\u503c\u3002 as_color ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a carla.Color \u3002 as_float ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u6d6e\u70b9\u578b\u3002 as_int ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a int\u3002 as_str ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u5b57\u7b26\u4e32\u3002 Dunder methods __bool__ ( self ) __eq__ ( self , other =bool / int / float / str / carla.Color / carla.ActorAttribute ) \u5982\u679c\u6b64\u53c2\u4e0e\u8005\u7684\u5c5e\u6027 \u548c other \u76f8\u540c\uff0c\u5219\u8fd4\u56de true\u3002 \u8fd4\u56de\uff1a bool __float__ ( self ) __int__ ( self ) __ne__ ( self , other =bool / int / float / str / carla.Color / carla.ActorAttribute ) \u5982\u679c\u6b64 actor \u7684\u5c5e\u6027\u548c other \u4e0d\u540c\uff0c\u5219\u8fd4\u56de true\u3002 \u8fd4\u56de\uff1a bool __nonzero__ ( self ) \u5982\u679c\u6b64\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u4e0d\u4e3a\u96f6\u6216 null\uff0c\u5219\u8fd4\u56de true\u3002 Return: bool __str__ ( self ) carla.ActorAttributeType CARLA \u5728 carla.BlueprintLibrary \u4e2d\u4e3a\u53c2\u4e0e\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u6bcf\u4e2a\u84dd\u56fe\u5177\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u3002\u6b64\u7c7b\u5c06 carla.ActorAttribute \u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u3002\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u5747\u5728\u5185\u90e8\u7ba1\u7406\uff0c\u5e76\u5728\u6b64\u5904\u5217\u51fa\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u3002 \u5b9e\u4f8b\u53d8\u91cf Bool Int Float String RGBColor carla.ActorBlueprint CARLA \u4e3a Actor \u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.BlueprintLibrary \u8fdb\u884c\u67e5\u9605\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u5305\u542b\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\u548c\u4e00\u7cfb\u5217\u53ef\u4ee5\u4fee\u6539\u6216\u4e0d\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u3002\u8be5\u7c7b\u662f\u5e93\u548c\u53c2\u4e0e\u8005\u521b\u5efa\u4e4b\u95f4\u7684\u4e2d\u95f4\u6b65\u9aa4\u3002\u53c2\u4e0e\u8005\u9700\u8981\u4e00\u4e2a\u53c2\u4e0e\u8005\u84dd\u56fe\u624d\u80fd\u4ea7\u751f\u3002\u8fd9\u4e9b\u5c06\u6240\u8ff0\u84dd\u56fe\u7684\u4fe1\u606f\u53ca\u5176\u5c5e\u6027\u548c\u4e00\u4e9b\u6807\u7b7e\u5b58\u50a8\u5728\u5bf9\u8c61\u4e2d\u4ee5\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\u3002\u7136\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u5c5e\u6027\u5e76\u6700\u7ec8\u901a\u8fc7 carla.World \u751f\u6210\u53c2\u4e0e\u8005\u3002 \u5b9e\u4f8b\u53d8\u91cf id ( str ) \u5e93\u5185\u6240\u8ff0\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\u3002\u4f8b\u5982 walker.pedestrian.0001 \u3002 tags ( list(str) ) \u6bcf\u4e2a\u84dd\u56fe\u5177\u6709\u7684\u6709\u52a9\u4e8e\u63cf\u8ff0\u5b83\u4eec\u7684\u6807\u7b7e\u5217\u8868\u3002\u4f8b\u5982 ['0001', 'pedestrian', 'walker'] \u3002 \u65b9\u6cd5 has_attribute ( self , id ) \u5982\u679c\u84dd\u56fe\u5305\u542b\u8be5 id \u5c5e\u6027\uff0c\u5219\u8fd4\u56de True \u3002 \u53c2\u6570\uff1a id ( str ) - \u4f8b\u5982 gender \u5c06\u4e3a\u884c\u4eba\u7684\u84dd\u56fe\u8fd4\u56de True \u3002 \u8fd4\u56de\uff1a bool has_tag ( self , tag ) \u5982\u679c\u84dd\u56fe\u5df2\u5217\u51fa\u6307\u5b9a tag \u7684\u5185\u5bb9\uff0c\u5219\u8fd4\u56de True \u3002 \u53c2\u6570\uff1a tag ( str ) - \u4f8b\u5982\uff1a 'walker'\u3002 \u8fd4\u56de\uff1a bool match_tags ( self , wildcard_pattern ) \u5982\u679c\u4e3a\u6b64\u84dd\u56fe\u5217\u51fa\u7684\u4efb\u4f55\u6807\u8bb0\u5339\u914d wildcard_pattern \uff0c\u5219\u8fd4\u56de True \u3002\u5339\u914d\u9075\u5faa fnmatch \u6807\u51c6\u3002 \u53c2\u6570\uff1a wildcard_pattern ( str ) \u8fd4\u56de\uff1a bool \u83b7\u53d6\u5668 get_attribute ( self , id ) \u8fd4\u56de\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u4ee5\u53ca id \u6807\u8bc6\u7b26\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u53c2\u4e0e\u8005\uff1a id ( str ) \u8fd4\u56de\uff1a carla.ActorAttribute \u8bbe\u7f6e\u5668\uff1a carla.ActorBlueprint.set_attribute \u8bbe\u7f6e\u5668 set_attribute ( self , id , value ) snippet \u2192 If the id attribute is modifiable, changes its value to value . \u53c2\u6570\uff1a id ( str ) - The identifier for the attribute that is intended to be changed. value ( str ) - The new value for said attribute. \u83b7\u53d6\u5668\uff1a carla.ActorBlueprint.get_attribute Dunder methods __iter__ ( self ) Iterate over the carla.ActorAttribute that this blueprint has. __len__ ( self ) Returns the amount of attributes for this blueprint. __str__ ( self ) carla.ActorList A class that contains every actor present on the scene and provides access to them. The list is automatically created and updated by the server and it can be returned using carla.World . Methods filter ( self , wildcard_pattern ) Filters a list of Actors matching wildcard_pattern against their variable type_id (which identifies the blueprint used to spawn them). Matching follows fnmatch standard. Parameters: wildcard_pattern ( str ) Return: list find ( self , actor_id ) Finds an actor using its identifier and returns it or None if it is not present. Parameters: actor_id ( int ) Return: carla.Actor Dunder methods __getitem__ ( self , pos =int ) Returns the actor corresponding to pos position in the list. Return: carla.Actor __iter__ ( self ) Iterate over the carla.Actor contained in the list. __len__ ( self ) Returns the amount of actors listed. Return: int __str__ ( self ) Parses to the ID for every actor listed. Return: str carla.ActorSnapshot \u5305\u542b\u53c2\u4e0e\u8005\u5728\u7279\u5b9a\u65f6\u523b\u7684\u6240\u6709\u4fe1\u606f\u7684\u7c7b\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5305\u542b\u5728 carla.WorldSnapshot \u4e2d\uff0c\u5e76\u5728\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u4e00\u6b21\u3002 \u5b9e\u4f8b\u53d8\u91cf id ( int ) \u5feb\u7167\u672c\u8eab\u7684\u6807\u8bc6\u7b26\u3002 \u65b9\u6cd5 \u83b7\u53d6\u5668 get_acceleration ( self ) \u8fd4\u56de\u5728\u8be5tick\u4e2d\u4e3a\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u52a0\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s 2 get_angular_velocity ( self ) \u8fd4\u56de\u4e3a\u8be5tick\u4e2d\u7684\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u89d2\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - rad/s get_transform ( self ) \u8fd4\u56de\u8be5 tick \u4e2d\u53c2\u4e0e\u8005\u7684\u53c2\u4e0e\u8005\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002 \u8fd4\u56de\uff1a carla.Transform get_velocity ( self ) \u8fd4\u56de\u5728\u8be5tick\u4e2d\u4e3a\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s carla.ActorState \u5b9a\u4e49\u53c2\u4e0e\u8005\u72b6\u6001\u7684\u7c7b\u3002 \u5b9e\u4f8b\u53d8\u91cf Invalid \u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u53c2\u4e0e\u8005\u5c31\u662f\u65e0\u6548\u7684\u3002 Active \u5f53\u4e00\u4e2a\u53c2\u4e0e\u8005\u53ef\u89c6\u5316\u5e76\u4e14\u53ef\u4ee5\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u65f6\uff0c\u5b83\u5c31\u662f\u6d3b\u8dc3\u7684\u3002 Dormant \u5f53\u53c2\u4e0e\u8005\u4e0d\u88ab\u53ef\u89c6\u5316\u5e76\u4e14\u4e0d\u4f1a\u901a\u8fc7\u7269\u7406\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u65f6\uff0c\u53c2\u4e0e\u8005\u5c31\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53c2\u4e0e\u8005\u4f4d\u4e8e\u5927\u5730\u56fe\u4e2d\u5df2\u5378\u8f7d\u7684\u56fe\u5757\u4e0a\uff0c\u5219\u53c2\u4e0e\u8005\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u3002 carla.AttachmentType \u5b9a\u4e49\u53c2\u4e0e\u8005\u4e0e\u5176\u7236\u7ea7\u4e4b\u95f4\u7684\u9644\u4ef6\u9009\u9879\u7684\u7c7b\u3002\u5f53\u751f\u6210\u53c2\u4e0e\u8005\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\u4e0a\uff0c\u8fd9\u6837\u5b83\u4eec\u7684\u4f4d\u7f6e\u5c31\u4f1a\u76f8\u5e94\u6539\u53d8\u3002\u8fd9\u5bf9\u4e8e\u4f20\u611f\u5668\u7279\u522b\u6709\u7528\u3002 carla.World.spawn_actor \u4e2d\u7684\u7247\u6bb5\u663e\u793a\u4e86\u4e00\u4e9b\u4f20\u611f\u5668\u5728\u751f\u6210\u65f6\u8fde\u63a5\u5230\u6c7d\u8f66\u4e0a\u3002\u8bf7\u6ce8\u610f\uff0c\u9644\u4ef6\u7c7b\u578b\u5728\u7c7b\u4e2d\u58f0\u660e\u4e3a\u679a\u4e3e\u3002 \u5b9e\u4f8b\u53d8\u91cf Rigid \u901a\u8fc7\u6b64\u56fa\u5b9a\u9644\u4ef6\uff0c\u5bf9\u8c61\u4e25\u683c\u9075\u5faa\u5176\u7236\u4f4d\u7f6e\u3002\u8fd9\u662f\u63a8\u8350\u7684\u9644\u4ef6\uff0c\u7528\u4e8e\u4ece\u4eff\u771f\u4e2d\u68c0\u7d22\u7cbe\u786e\u6570\u636e\u3002 SpringArm \u4e00\u79cd\u9644\u4ef6\uff0c\u53ef\u6839\u636e\u5176\u7236\u7ea7\u6269\u5c55\u6216\u7f29\u56de\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u3002\u4ec5\u5efa\u8bae\u5728\u9700\u8981\u5e73\u6ed1\u8fd0\u52a8\u7684\u6a21\u62df\u4e2d\u5f55\u5236\u89c6\u9891\u65f6\u4f7f\u7528\u6b64\u9644\u4ef6\u3002SpringArms \u662f\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u7ec4\u4ef6\uff0c\u56e0\u6b64 check the UE \u6587\u6863 \u4ee5\u4e86\u89e3\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8b66\u544a\uff1a The SpringArm attachment presents weird behaviors when an actor is spawned with a relative translation in the Z-axis (e.g. child_location = Location(0,0,2) ). SpringArmGhost An attachment like the previous one but that does not make the collision test, and that means that it does not expands or retracts the position of the actor. The term ghost is because then the camera can cross walls and other geometries. This attachment is only recommended to record videos from the simulation where a smooth movement is needed. SpringArms are an Unreal Engine component so check the UE docs to learn more about them. Warning: The SpringArm attachment presents weird behaviors when an actor is spawned with a relative translation in the Z-axis (e.g. child_location = Location(0,0,2) ). carla.BlueprintLibrary \u5305\u542b\u4e3a\u53c2\u4e0e\u8005\u751f\u6210\u63d0\u4f9b\u7684\u84dd\u56fe\u7684\u7c7b\u3002\u5b83\u7684\u4e3b\u8981\u5e94\u7528\u662f\u8fd4\u56de\u751f\u6210\u53c2\u4e0e\u8005\u6240\u9700\u7684 carla.ActorBlueprint \u5bf9\u8c61\u3002\u6bcf\u4e2a\u84dd\u56fe\u90fd\u6709\u4e00\u4e2a\u6807\u8bc6\u7b26\u548c\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u662f\u53ef\u4fee\u6539\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u8be5\u5e93\u7531\u670d\u52a1\u5668\u81ea\u52a8\u521b\u5efa\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.World \u8bbf\u95ee\u3002 \u8fd9 \u662f\u5305\u542b\u6bcf\u4e2a\u53ef\u7528\u84dd\u56fe\u53ca\u5176\u7ec6\u8282\u7684\u53c2\u8003\u3002 \u65b9\u6cd5 filter ( self , wildcard_pattern ) Filters a list of blueprints matching the wildcard_pattern against the id and tags of every blueprint contained in this library and returns the result as a new one. Matching follows fnmatch standard. \u53c2\u6570\uff1a wildcard_pattern ( str ) \u8fd4\u56de\uff1a carla.BlueprintLibrary filter_by_attribute ( self , name , value ) Filters a list of blueprints with a given attribute matching the value against every blueprint contained in this library and returns the result as a new one. Matching follows fnmatch standard. Parameters: name ( str ) value ( str ) Return: carla.BlueprintLibrary find ( self , id ) Returns the blueprint corresponding to that identifier. Parameters: id ( str ) Return: carla.ActorBlueprint Dunder methods __getitem__ ( self , pos =int ) Returns the blueprint stored in pos position inside the data structure containing them. Return: carla.ActorBlueprint __iter__ ( self ) Iterate over the carla.ActorBlueprint stored in the library. __len__ ( self ) Returns the amount of blueprints comprising the library. Return: int __str__ ( self ) Parses the identifiers for every blueprint to string. Return: string carla.BoundingBox Bounding boxes contain the geometry of an actor or an element in the scene. They can be used by carla.DebugHelper or a carla.Client to draw their shapes for debugging. Check out the snipet in carla.DebugHelper.draw_box where a snapshot of the world is used to draw bounding boxes for traffic lights. \u5b9e\u4f8b\u53d8\u91cf extent ( carla.Vector3D - meters ) Vector from the center of the box to one vertex. The value in each axis equals half the size of the box for that axis. extent.x * 2 would return the size of the box in the X-axis. location ( carla.Location - meters ) The center of the bounding box. rotation ( carla.Rotation ) The orientation of the bounding box. \u65b9\u6cd5 __init__ ( self , location , extent ) Parameters: location ( carla.Location ) - Center of the box, relative to its parent. extent ( carla.Vector3D - meters ) - Vector containing half the size of the box for every axis. contains ( self , world_point , transform ) Returns True if a point passed in world space is inside this bounding box. Parameters: world_point ( carla.Location - meters ) - The point in world space to be checked. transform ( carla.Transform ) - Contains location and rotation needed to convert this object's local space to world space. Return: bool \u83b7\u53d6\u5668 get_local_vertices ( self ) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5bf9\u8c61\u7684\u9876\u70b9\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002 \u8fd4\u56de\uff1a list( carla.Location ) get_world_vertices ( self , transform ) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5bf9\u8c61\u7684\u9876\u70b9\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002 \u53c2\u6570\uff1a transform ( carla.Transform ) - \u5305\u542b\u5c06\u6b64\u5bf9\u8c61\u7684\u672c\u5730\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u6240\u9700\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 \u8fd4\u56de\uff1a list( carla.Location ) Dunder methods __eq__ ( self , other = carla.BoundingBox ) Returns true if both location and extent are equal for this and other . Return: bool __ne__ ( self , other = carla.BoundingBox ) Returns true if either location or extent are different for this and other . Return: bool __str__ ( self ) Parses the location and extent of the bounding box to string. Return: str carla.CityObjectLabel \u5305\u542b\u53ef\u7528\u4e8e\u8fc7\u6ee4 carla.World.get_level_bbs () \u8fd4\u56de\u7684\u8fb9\u754c\u6846\u7684\u4e0d\u540c\u6807\u7b7e\u7684\u679a\u4e3e\u58f0\u660e\u3002\u8fd9\u4e9b\u503c\u5bf9\u5e94\u4e8e\u573a\u666f\u4e2d\u5143\u7d20\u6240\u5177\u6709\u7684 \u8bed\u4e49\u6807\u7b7e \u3002 \u5b9e\u4f8b\u53d8\u91cf None Buildings Fences Other Pedestrians Poles RoadLines Roads Sidewalks TrafficSigns Vegetation Vehicles Walls Sky Ground Bridge RailTrack GuardRail TrafficLight Static Dynamic Water Terrain Any carla.Client \u5ba2\u6237\u7aef\u5c06 CARLA \u8fde\u63a5\u5230\u8fd0\u884c\u4eff\u771f\u7684\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u90fd\u5305\u542b CARLA \u5e93 (libcarla)\uff0c\u4f46\u5b58\u5728\u4e00\u4e9b\u5dee\u5f02\uff0c\u5141\u8bb8\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u4f1a\u8fde\u63a5\u5230\u6a21\u62df\u5185\u7684 RPC \u670d\u52a1\u5668\u4ee5\u53d1\u9001\u547d\u4ee4\u3002\u4eff\u771f\u5728\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u3002\u4e00\u65e6\u5efa\u7acb\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u5c06\u4ec5\u63a5\u6536\u4ece\u4eff\u771f\u68c0\u7d22\u7684\u6570\u636e\u3002\u6b65\u884c\u8005\u662f\u4f8b\u5916\u3002\u5ba2\u6237\u7aef\u8d1f\u8d23\u7ba1\u7406\u884c\u4eba\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u4e0e\u591a\u4e2a\u5ba2\u6237\u7aef\u4e00\u8d77\u8fd0\u884c\u6a21\u62df\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u901a\u8fc7\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u751f\u6210\u6b65\u884c\u8005\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ea\u77e5\u9053\u5b83\u8d1f\u8d23\u7684\u5ba2\u6237\u7aef\u3002 \u5ba2\u6237\u7aef\u8fd8\u5177\u6709\u8bb0\u5f55\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u6a21\u62df\u65f6\u4fdd\u5b58\u6a21\u62df\u7684\u6240\u6709\u4fe1\u606f\u3002\u8fd9\u4f7f\u5f97\u670d\u52a1\u5668\u53ef\u4ee5\u968f\u610f\u91cd\u653e\u4ee5\u83b7\u53d6\u4fe1\u606f\u5e76\u8fdb\u884c\u5b9e\u9a8c\u3002 \u4ee5\u4e0b \u662f\u6709\u5173\u5982\u4f55\u4f7f\u7528\u6b64\u5f55\u97f3\u673a\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u65b9\u6cd5 __init__ ( self , host =127.0.0.1 , port =2000 , worker_threads =0 ) snippet \u2192 Client constructor. \u53c2\u6570\uff1a host ( str ) - IP address where a CARLA Simulator instance is running. Default is localhost (127.0.0.1). port ( int ) - TCP port where the CARLA Simulator instance is running. Default are 2000 and the subsequent 2001. worker_threads ( int ) - Number of working threads used for background updates. If 0, use all available concurrency. apply_batch ( self , commands ) Executes a list of commands on a single simulation step and retrieves no information. If you need information about the response of each command, use the apply_batch_sync() method. Here is an example on how to delete the actors that appear in carla.ActorList all at once. Parameters: commands ( list ) - A list of commands to execute in batch. Each command is different and has its own parameters. They appear listed at the bottom of this page. apply_batch_sync ( self , commands , due_tick_cue =False ) snippet \u2192 Executes a list of commands on a single simulation step, blocks until the commands are linked, and returns a list of command.Response that can be used to determine whether a single command succeeded or not. Here is an example of it being used to spawn actors. Parameters: commands ( list ) - A list of commands to execute in batch. The commands available are listed right above, in the method apply_batch() . due_tick_cue ( bool ) - A boolean parameter to specify whether or not to perform a carla.World.tick after applying the batch in synchronous mode . It is False by default. Return: list(command.Response) generate_opendrive_world ( self , opendrive , parameters =(2.0, 50.0, 1.0, 0.6, true, true) , reset_settings =True ) Loads a new world with a basic 3D topology generated from the content of an OpenDRIVE file. This content is passed as a string parameter. It is similar to client.load_world(map_name) but allows for custom OpenDRIVE maps in server side. Cars can drive around the map, but there are no graphics besides the road and sidewalks. Parameters: opendrive ( str ) - Content of an OpenDRIVE file as string , not the path to the .xodr . parameters ( carla.OpendriveGenerationParameters ) - Additional settings for the mesh generation. If none are provided, default values will be used. reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. load_world ( self , map_name , reset_settings =True , map_layers = carla.MapLayer.All ) Creates a new world with default settings using map_name map. All actors in the current world will be destroyed. Parameters: map_name ( str ) - Name of the map to be used in this world. Accepts both full paths and map names, e.g. '/Game/Carla/Maps/Town01' or 'Town01'. Remember that these paths are dynamic. reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. map_layers ( carla.MapLayer ) - Layers of the map that will be loaded. By default all layers are loaded. This parameter works like a flag mask. Warning: map_layers are only available for \"Opt\" maps reload_world ( self , reset_settings =True ) Reload the current world, note that a new world is created with default settings using the same map. All actors present in the world will be destroyed, but traffic manager instances will stay alive. Parameters: reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. Raises: RuntimeError when corresponding. replay_file ( self , name , start , duration , follow_id , replay_sensors ) Load a new world with default settings using map_name map. All actors present in the current world will be destroyed, but traffic manager instances will stay alive. Parameters: name ( str ) - Name of the file containing the information of the simulation. start ( float - seconds ) - Time where to start playing the simulation. Negative is read as beginning from the end, being -10 just 10 seconds before the recording finished. duration ( float - seconds ) - Time that will be reenacted using the information name file. If the end is reached, the simulation will continue. follow_id ( int ) - ID of the actor to follow. If this is 0 then camera is disabled. replay_sensors ( bool ) - Flag to enable or disable the spawn of sensors during playback. request_file ( self , name ) Requests one of the required files returned by carla.Client.get_required_files . Parameters: name ( str ) - Name of the file you are requesting. show_recorder_actors_blocked ( self , filename , min_time , min_distance ) The terminal will show the information registered for actors considered blocked. An actor is considered blocked when it does not move a minimum distance in a period of time, being these min_distance and min_time . Parameters: filename ( str ) - Name of the recorded file to load. min_time ( float - seconds ) - Minimum time the actor has to move a minimum distance before being considered blocked. Default is 60 seconds. min_distance ( float - centimeters ) - Minimum distance the actor has to move to not be considered blocked. Default is 100 centimeters. Return: string show_recorder_collisions ( self , filename , category1 , category2 ) The terminal will show the collisions registered by the recorder. These can be filtered by specifying the type of actor involved. The categories will be specified in category1 and category2 as follows: 'h' = Hero, the one vehicle that can be controlled manually or managed by the user. 'v' = Vehicle 'w' = Walker 't' = Traffic light 'o' = Other 'a' = Any If you want to see only collisions between a vehicles and a walkers, use for category1 as 'v' and category2 as 'w' or vice versa. If you want to see all the collisions (filter off) you can use 'a' for both parameters. Parameters: filename ( str ) - Name or absolute path of the file recorded, depending on your previous choice. category1 ( single char ) - Character variable specifying a first type of actor involved in the collision. category2 ( single char ) - Character variable specifying the second type of actor involved in the collision. Return: string show_recorder_file_info ( self , filename , show_all ) The information saved by the recorder will be parsed and shown in your terminal as text (frames, times, events, state, positions...). The information shown can be specified by using the show_all parameter. Here is some more information about how to read the recorder file. Parameters: filename ( str ) - Name or absolute path of the file recorded, depending on your previous choice. show_all ( bool ) - If True , returns all the information stored for every frame (traffic light states, positions of all actors, orientation and animation data...). If False , returns a summary of key events and frames. Return: string start_recorder ( self , filename , additional_data =False ) Enables the recording feature, which will start saving every information possible needed by the server to replay the simulation. Parameters: filename ( str ) - Name of the file to write the recorded data. A simple name will save the recording in 'CarlaUE4/Saved/recording.log'. Otherwise, if some folder appears in the name, it will be considered an absolute path. additional_data ( bool ) - Enables or disable recording non-essential data for reproducing the simulation (bounding box location, physics control parameters, etc). stop_recorder ( self ) Stops the recording in progress. If you specified a path in filename , the recording will be there. If not, look inside CarlaUE4/Saved/ . stop_replayer ( self , keep_actors ) Stop current replayer. Parameters: keep_actors ( bool ) - True if you want autoremove all actors from the replayer, or False to keep them. Getters get_available_maps ( self ) Returns a list of strings containing the paths of the maps available on server. These paths are dynamic, they will be created during the simulation and so you will not find them when looking up in your files. One of the possible returns for this method would be: ['/Game/Carla/Maps/Town01', '/Game/Carla/Maps/Town02', '/Game/Carla/Maps/Town03', '/Game/Carla/Maps/Town04', '/Game/Carla/Maps/Town05', '/Game/Carla/Maps/Town06', '/Game/Carla/Maps/Town07']. Return: list(str) get_client_version ( self ) Returns the client libcarla version by consulting it in the \"Version.h\" file. Both client and server can use different libcarla versions but some issues may arise regarding unexpected incompatibilities. Return: str get_required_files ( self , folder , download =True ) Asks the server which files are required by the client to use the current map. Option to download files automatically if they are not already in the cache. Parameters: folder ( str ) - Folder where files required by the client will be downloaded to. download ( bool ) - If True, downloads files that are not already in cache. get_server_version ( self ) Returns the server libcarla version by consulting it in the \"Version.h\" file. Both client and server should use the same libcarla version. Return: str get_trafficmanager ( self , client_connection =8000 ) Returns an instance of the traffic manager related to the specified port. If it does not exist, this will be created. Parameters: client_connection ( int ) - Port that will be used by the traffic manager. Default is 8000 . Return: carla.TrafficManager get_world ( self ) Returns the world object currently active in the simulation. This world will be later used for example to load maps. Return: carla.World Setters set_files_base_folder ( self , path ) Parameters: path ( str ) - Specifies the base folder where the local cache for required files will be placed. set_replayer_ignore_hero ( self , ignore_hero ) Parameters: ignore_hero ( bool ) - Enables or disables playback of the hero vehicle during a playback of a recorded simulation. set_replayer_ignore_spectator ( self , ignore_spectator ) Parameters: ignore_spectator ( bool ) - Determines whether the recorded spectator movements will be replicated by the replayer. set_replayer_time_factor ( self , time_factor =1.0 ) When used, the time speed of the reenacted simulation is modified at will. It can be used several times while a playback is in curse. Parameters: time_factor ( float ) - 1.0 means normal time speed. Greater than 1.0 means fast motion (2.0 would be double speed) and lesser means slow motion (0.5 would be half speed). set_timeout ( self , seconds ) Sets the maximum time a network call is allowed before blocking it and raising a timeout exceeded error. Parameters: seconds ( float - seconds ) - New timeout value. Default is 5 seconds. carla.CollisionEvent Inherited from carla.SensorData Class that defines a collision data for sensor.other.collision . The sensor creates one of these for every collision detected. Each collision sensor produces one collision event per collision per frame. Multiple collision events may be produced in a single frame by collisions with multiple other actors. Learn more about this here . Instance Variables actor ( carla.Actor ) The actor the sensor is attached to, the one that measured the collision. other_actor ( carla.Actor ) The second actor involved in the collision. normal_impulse ( carla.Vector3D - N*s ) Normal impulse resulting of the collision. carla.Color Class that defines a 32-bit RGBA color. Instance Variables r ( int ) Red color (0-255). g ( int ) Green color (0-255). b ( int ) Blue color (0-255). a ( int ) Alpha channel (0-255). Methods __init__ ( self , r =0 , g =0 , b =0 , a =255 ) Initializes a color, black by default. Parameters: r ( int ) g ( int ) b ( int ) a ( int ) Dunder methods __eq__ ( self , other = carla.Color ) __ne__ ( self , other = carla.Color ) __str__ ( self ) carla.ColorConverter Class that defines conversion patterns that can be applied to a carla.Image in order to show information provided by carla.Sensor . Depth conversions cause a loss of accuracy, as sensors detect depth as float that is then converted to a grayscale value between 0 and 255. Take a look at the snipet in carla.Sensor.listen to see an example of how to create and save image data for sensor.camera.semantic_segmentation . Instance Variables CityScapesPalette Converts the image to a segmented map using tags provided by the blueprint library. Used by the semantic segmentation camera . Depth Converts the image to a linear depth map. Used by the depth camera . LogarithmicDepth Converts the image to a depth map using a logarithmic scale, leading to better precision for small distances at the expense of losing it when further away. Raw No changes applied to the image. Used by the RGB camera . carla.DVSEvent Class that defines a DVS event. An event is a quadruple, so a tuple of 4 elements, with x , y pixel coordinate location, timestamp t and polarity pol of the event. Learn more about them here . Instance Variables x ( int ) X pixel coordinate. y ( int ) Y pixel coordinate. t ( int ) Timestamp of the moment the event happened. pol ( bool ) Polarity of the event. True for positive and False for negative. Methods Dunder methods __str__ ( self ) carla.DVSEventArray Class that defines a stream of events in carla.DVSEvent . Such stream is an array of arbitrary size depending on the number of events. This class also stores the field of view, the height and width of the image and the timestamp from convenience. Learn more about them here . Instance Variables fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes ) Methods to_array ( self ) Converts the stream of events to an array of int values in the following order [x, y, t, pol] . to_array_pol ( self ) Returns an array with the polarity of all the events in the stream. to_array_t ( self ) Returns an array with the timestamp of all the events in the stream. to_array_x ( self ) Returns an array with X pixel coordinate of all the events in the stream. to_array_y ( self ) Returns an array with Y pixel coordinate of all the events in the stream. to_image ( self ) Converts the image following this pattern: blue indicates positive events, red indicates negative events. Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.DVSEvent retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self ) carla.DebugHelper Helper class part of carla.World that defines methods for creating debug shapes. By default, shapes last one second. They can be permanent, but take into account the resources needed to do so. Take a look at the snipets available for this class to learn how to debug easily in CARLA. Methods draw_arrow ( self , begin , end , thickness =0.1 , arrow_size =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws an arrow from begin to end pointing in that direction. Parameters: begin ( carla.Location - meters ) - Point in the coordinate system where the arrow starts. end ( carla.Location - meters ) - Point in the coordinate system where the arrow ends and points towards to. thickness ( float - meters ) - Density of the line. arrow_size ( float - meters ) - Size of the tip of the arrow. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_box ( self , box , rotation , thickness =0.1 , color =(255,0,0) , life_time =-1.0 ) snippet \u2192 Draws a box, ussually to act for object colliders. Parameters: box ( carla.BoundingBox ) - Object containing a location and the length of a box for every axis. rotation ( carla.Rotation - degrees (pitch,yaw,roll) ) - Orientation of the box according to Unreal Engine's axis system. thickness ( float - meters ) - Density of the lines that define the box. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_line ( self , begin , end , thickness =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws a line in between begin and end . Parameters: begin ( carla.Location - meters ) - Point in the coordinate system where the line starts. end ( carla.Location - meters ) - Spot in the coordinate system where the line ends. thickness ( float - meters ) - Density of the line. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_point ( self , location , size =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws a point location . Parameters: location ( carla.Location - meters ) - Spot in the coordinate system to center the object. size ( float - meters ) - Density of the point. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_string ( self , location , text , draw_shadow =False , color =(255,0,0) , life_time =-1.0 ) snippet \u2192 Draws a string in a given location of the simulation which can only be seen server-side. Parameters: location ( carla.Location - meters ) - Spot in the simulation where the text will be centered. text ( str ) - Text intended to be shown in the world. draw_shadow ( bool ) - Casts a shadow for the string that could help in visualization. It is disabled by default. color ( carla.Color ) - RGB code to color the string. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. carla.EnvironmentObject Class that represents a geometry in the level, this geometry could be part of an actor formed with other EnvironmentObjects (ie: buildings). Instance Variables transform ( carla.Transform ) Contains the location and orientation of the EnvironmentObject in world space. bounding_box ( carla.BoundingBox ) Object containing a location, rotation and the length of a box for every axis in world space. id ( int ) Unique ID to identify the object in the level. name ( string ) Name of the EnvironmentObject. type ( carla.CityObjectLabel ) Semantic tag. Methods Dunder methods __str__ ( self ) Parses the EnvironmentObject to a string and shows them in command line. Return: str carla.FloatColor Class that defines a float RGBA color. Instance Variables r ( float ) Red color. g ( float ) Green color. b ( float ) Blue color. a ( float ) Alpha channel. Methods __init__ ( self , r =0 , g =0 , b =0 , a =1.0 ) Initializes a color, black by default. Parameters: r ( float ) g ( float ) b ( float ) a ( float ) Dunder methods __eq__ ( self , other = carla.FloatColor ) __ne__ ( self , other = carla.FloatColor ) carla.GBufferTextureID Defines the identifiers of each GBuffer texture (See the method [carla.Sensor.listen_to_gbuffer](#carla.Sensor.listen_to_gbuffer) ). Instance Variables SceneColor The texture \"SceneColor\" contains the final color of the image. SceneDepth The texture \"SceneDepth\" contains the depth buffer - linear in world units. SceneStencil The texture \"SceneStencil\" contains the stencil buffer. GBufferA The texture \"GBufferA\" contains the world-space normal vectors in the RGB channels. The alpha channel contains \"per-object data\". GBufferB The texture \"GBufferB\" contains the metallic, specular and roughness in the RGB channels, respectively. The alpha channel contains a mask where the lower 4 bits indicate the shading model and the upper 4 bits contain the selective output mask. GBufferC The texture \"GBufferC\" contains the diffuse color in the RGB channels, with the indirect irradiance in the alpha channel. If static lightning is not allowed, the alpha channel will contain the ambient occlusion instead. GBufferD The contents of the \"GBufferD\" varies depending on the rendered object's material shading model (GBufferB): MSM_Subsurface (2), MSM_PreintegratedSkin (3), MSM_TwoSidedFoliage (6): RGB: Subsurface color. A: Opacity. MSM_ClearCoat (4): R: Clear coat. G: Roughness. MSM_SubsurfaceProfile (5): RGB: Subsurface profile. MSM_Hair (7): RG: World normal. B: Backlit value. MSM_Cloth (8): RGB: Subsurface color. A: Cloth value. MSM_Eye (9): RG: Eye tangent. B: Iris mask. A: Iris distance. GBufferE The texture \"GBufferE\" contains the precomputed shadow factors in the RGBA channels. This texture is unavailable if the selective output mask (GBufferB) does not have its 4th bit set. GBufferF The texture \"GBufferF\" contains the world-space tangent in the RGB channels and the anisotropy in the alpha channel. This texture is unavailable if the selective output mask (GBufferB) does not have its 5th bit set. Velocity The texture \"Velocity\" contains the screen-space velocity of the scene objects. SSAO The texture \"SSAO\" contains the screen-space ambient occlusion texture. CustomDepth The texture \"CustomDepth\" contains the Unreal Engine custom depth data. CustomStencil The texture \"CustomStencil\" contains the Unreal Engine custom stencil data. carla.GearPhysicsControl Class that provides access to vehicle transmission details by defining a gear and when to run on it. This will be later used by carla.VehiclePhysicsControl to help simulate physics. Instance Variables ratio ( float ) The transmission ratio of the gear. down_ratio ( float ) Quotient between current RPM and MaxRPM where the autonomous gear box should shift down. up_ratio ( float ) Quotient between current RPM and MaxRPM where the autonomous gear box should shift up. Methods __init__ ( self , ratio =1.0 , down_ratio =0.5 , up_ratio =0.65 ) Parameters: ratio ( float ) down_ratio ( float ) up_ratio ( float ) Dunder methods __eq__ ( self , other = carla.GearPhysicsControl ) __ne__ ( self , other = carla.GearPhysicsControl ) __str__ ( self ) carla.GeoLocation Class that contains geographical coordinates simulated data. The carla.Map can convert simulation locations by using the tag in the OpenDRIVE file. Instance Variables latitude ( float - degrees ) North/South value of a point on the map. longitude ( float - degrees ) West/East value of a point on the map. altitude ( float - meters ) Height regarding ground level. Methods __init__ ( self , latitude =0.0 , longitude =0.0 , altitude =0.0 ) Parameters: latitude ( float - degrees ) longitude ( float - degrees ) altitude ( float - meters ) Dunder methods __eq__ ( self , other = carla.GeoLocation ) __ne__ ( self , other = carla.GeoLocation ) __str__ ( self ) carla.GnssMeasurement Inherited from carla.SensorData Class that defines the Gnss data registered by a sensor.other.gnss . It essentially reports its position with the position of the sensor and an OpenDRIVE geo-reference. Instance Variables altitude ( float - meters ) Height regarding ground level. latitude ( float - degrees ) North/South value of a point on the map. longitude ( float - degrees ) West/East value of a point on the map. Methods Dunder methods __str__ ( self ) carla.IMUMeasurement Inherited from carla.SensorData Class that defines the data registered by a sensor.other.imu , regarding the sensor's transformation according to the current carla.World . It essentially acts as accelerometer, gyroscope and compass. Instance Variables accelerometer ( carla.Vector3D - m/s 2 ) Linear acceleration. compass ( float - radians ) Orientation with regard to the North ([0.0, -1.0, 0.0] in Unreal Engine). gyroscope ( carla.Vector3D - rad/s ) Angular velocity. Methods Dunder methods __str__ ( self ) carla.Image Inherited from carla.SensorData Class that defines an image of 32-bit BGRA colors that will be used as initial data retrieved by camera sensors. There are different camera sensors (currently three, RGB, depth and semantic segmentation) and each of these makes different use for the images. Learn more about them here . Instance Variables fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes ) Flattened array of pixel data, use reshape to create an image array. Methods convert ( self , color_converter ) Converts the image following the color_converter pattern. Parameters: color_converter ( carla.ColorConverter ) save_to_disk ( self , path , color_converter =Raw ) Saves the image to disk using a converter pattern stated as color_converter . The default conversion pattern is Raw that will make no changes to the image. Parameters: path ( str ) - Path that will contain the image. color_converter ( carla.ColorConverter ) - Default Raw will make no changes. Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.Color that form the image. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self ) carla.Junction Class that embodies the intersections on the road described in the OpenDRIVE file according to OpenDRIVE 1.4 standards. Instance Variables id ( int ) Identifier found in the OpenDRIVE file. bounding_box ( carla.BoundingBox ) Bounding box encapsulating the junction lanes. Methods Getters get_waypoints ( self , lane_type ) Returns a list of pairs of waypoints. Every tuple on the list contains first an initial and then a final waypoint within the intersection boundaries that describe the beginning and the end of said lane along the junction. Lanes follow their OpenDRIVE definitions so there may be many different tuples with the same starting waypoint due to possible deviations, as this are considered different lanes. Parameters: lane_type ( carla.LaneType ) - Type of lanes to get the waypoints. Return: list(tuple( carla.Waypoint )) carla.LabelledPoint Class that represent a position in space with a semantic label. Instance Variables location Position in 3D space. label Semantic tag of the point. carla.Landmark Class that defines any type of traffic landmark or sign affecting a road. These class mediates between the OpenDRIVE 1.4 standard definition of the landmarks and their representation in the simulation. This class retrieves all the information defining a landmark in OpenDRIVE and facilitates information about which lanes does it affect and when. Landmarks will be accessed by carla.Waypoint objects trying to retrieve the regulation of their lane. Therefore some attributes depend on the waypoint that is consulting the landmark and so, creating the object. Instance Variables road_id ( int ) The OpenDRIVE ID of the road where this landmark is defined. Due to OpenDRIVE road definitions, this road may be different from the road the landmark is currently affecting. It is mostly the case in junctions where the road diverges in different routes. Example: a traffic light is defined in one of the divergent roads in a junction, but it affects all the possible routes . distance ( float - meters ) Distance between the landmark and the waypoint creating the object (querying get_landmarks or get_landmarks_of_type ). s ( float - meters ) Distance where the landmark is positioned along the geometry of the road road_id . t ( float - meters ) Lateral distance where the landmark is positioned from the edge of the road road_id . id ( str ) Unique ID of the landmark in the OpenDRIVE file. name ( str ) Name of the landmark in the in the OpenDRIVE file. is_dynamic ( bool ) Indicates if the landmark has state changes over time such as traffic lights. orientation ( carla.LandmarkOrientation - degrees ) Indicates which lanes the landmark is facing towards to. z_offset ( float - meters ) Height where the landmark is placed. country ( str ) Country code where the landmark is defined (default to OpenDRIVE is Germany 2017). type ( str ) Type identifier of the landmark according to the country code. sub_type ( str ) Subtype identifier of the landmark according to the country code. value ( float ) Value printed in the signal (e.g. speed limit, maximum weight, etc). unit ( str ) Units of measurement for the attribute value . height ( float - meters ) Total height of the signal. width ( float - meters ) Total width of the signal. text ( str ) Additional text in the signal. h_offset ( float - meters ) Orientation offset of the signal relative to the the definition of road_id at s in OpenDRIVE. pitch ( float - meters ) Pitch rotation of the signal (Y-axis in UE coordinates system ). roll ( float ) Roll rotation of the signal (X-axis in UE coordinates system ). waypoint ( carla.Waypoint ) A waypoint placed in the lane of the one that made the query and at the s of the landmark. It is the first waypoint for which the landmark will be effective. transform ( carla.Transform ) The location and orientation of the landmark in the simulation. Methods Getters get_lane_validities ( self ) Returns which lanes the landmark is affecting to. As there may be specific lanes where the landmark is not effective, the return is a list of pairs containing ranges of the lane_id affected: Example: In a road with 5 lanes, being 3 not affected: [(from_lane1,to_lane2),(from_lane4,to_lane5)] . Return: list(tuple(int)) carla.LandmarkOrientation Helper class to define the orientation of a landmark in the road. The definition is not directly translated from OpenDRIVE but converted for the sake of understanding. Instance Variables Positive The landmark faces towards vehicles going on the same direction as the road's geometry definition (lanes 0 and negative in OpenDRIVE). Negative The landmark faces towards vehicles going on the opposite direction to the road's geometry definition (positive lanes in OpenDRIVE). Both Affects vehicles going in both directions of the road. carla.LandmarkType Helper class containing a set of commonly used landmark types as defined by the default country code in the OpenDRIVE standard (Germany 2017). carla.Landmark does not reference this class . The landmark type is a string that varies greatly depending on the country code being used. This class only makes it easier to manage some of the most commonly used in the default set by describing them as an enum. Instance Variables Danger Type 101. LanesMerging Type 121. CautionPedestrian Type 133. CautionBicycle Type 138. LevelCrossing Type 150. StopSign Type 206. YieldSign Type 205. MandatoryTurnDirection Type 209. MandatoryLeftRightDirection Type 211. TwoChoiceTurnDirection Type 214. Roundabout Type 215. PassRightLeft Type 222. AccessForbidden Type 250. AccessForbiddenMotorvehicles Type 251. AccessForbiddenTrucks Type 253. AccessForbiddenBicycle Type 254. AccessForbiddenWeight Type 263. AccessForbiddenWidth Type 264. AccessForbiddenHeight Type 265. AccessForbiddenWrongDirection Type 267. ForbiddenUTurn Type 272. MaximumSpeed Type 274. ForbiddenOvertakingMotorvehicles Type 276. ForbiddenOvertakingTrucks Type 277. AbsoluteNoStop Type 283. RestrictedStop Type 286. HasWayNextIntersection Type 301. PriorityWay Type 306. PriorityWayEnd Type 307. CityBegin Type 310. CityEnd Type 311. Highway Type 330. DeadEnd Type 357. RecomendedSpeed Type 380. RecomendedSpeedEnd Type 381. carla.LaneChange Class that defines the permission to turn either left, right, both or none (meaning only going straight is allowed). This information is stored for every carla.Waypoint according to the OpenDRIVE file. The snipet in carla.Map.get_waypoint shows how a waypoint can be used to learn which turns are permitted. Instance Variables NONE Traffic rules do not allow turning right or left, only going straight. Right Traffic rules allow turning right. Left Traffic rules allow turning left. Both Traffic rules allow turning either right or left. carla.LaneInvasionEvent Inherited from carla.SensorData Class that defines lanes invasion for sensor.other.lane_invasion . It works only client-side and is dependant on OpenDRIVE to provide reliable information. The sensor creates one of this every time there is a lane invasion, which may be more than once per simulation step. Learn more about this here . Instance Variables actor ( carla.Actor ) Gets the actor the sensor is attached to, the one that invaded another lane. crossed_lane_markings ( list( carla.LaneMarking ) ) List of lane markings that have been crossed and detected by the sensor. Methods Dunder methods __str__ ( self ) carla.LaneMarking Class that gathers all the information regarding a lane marking according to OpenDRIVE 1.4 standard standard. Instance Variables color ( carla.LaneMarkingColor ) Actual color of the marking. lane_change ( carla.LaneChange ) Permissions for said lane marking to be crossed. type ( carla.LaneMarkingType ) Lane marking type. width ( float ) Horizontal lane marking thickness. carla.LaneMarkingColor Class that defines the lane marking colors according to OpenDRIVE 1.4. Instance Variables Standard White by default. Blue Green Red White Yellow Other carla.LaneMarkingType Class that defines the lane marking types accepted by OpenDRIVE 1.4. The snipet in carla.Map.get_waypoint shows how a waypoint can be used to retrieve the information about adjacent lane markings. Note on double types: Lane markings are defined under the OpenDRIVE standard that determines whereas a line will be considered \"BrokenSolid\" or \"SolidBroken\". For each road there is a center lane marking, defined from left to right regarding the lane's directions. The rest of the lane markings are defined in order from the center lane to the closest outside of the road. Instance Variables NONE Other Broken Solid SolidSolid SolidBroken BrokenSolid BrokenBroken BottsDots Grass Curb carla.LaneType Class that defines the possible lane types accepted by OpenDRIVE 1.4. This standards define the road information. The snipet in carla.Map.get_waypoint makes use of a waypoint to get the current and adjacent lane types. Instance Variables NONE Driving Stop Shoulder Biking Sidewalk Border Restricted Parking Bidirectional Median Special1 Special2 Special3 RoadWorks Tram Rail Entry Exit OffRamp OnRamp Any Every type except for NONE. carla.LidarDetection Data contained inside a carla.LidarMeasurement . Each of these represents one of the points in the cloud with its location and its associated intensity. Instance Variables point ( carla.Location - meters ) Point in xyz coordinates. intensity ( float ) Computed intensity for this point as a scalar value between [0.0 , 1.0]. Methods Dunder methods __str__ ( self ) carla.LidarMeasurement Inherited from carla.SensorData Class that defines the LIDAR data retrieved by a sensor.lidar.ray_cast . This essentially simulates a rotating LIDAR using ray-casting. Learn more about this here . Instance Variables channels ( int ) Number of lasers shot. horizontal_angle ( float - radians ) Horizontal angle the LIDAR is rotated at the time of the measurement. raw_data ( bytes ) Received list of 4D points. Each point consists of [x,y,z] coordinates plus the intensity computed for that point. Methods save_to_disk ( self , path ) Saves the point cloud to disk as a .ply file describing data from 3D scanners. The files generated are ready to be used within MeshLab , an open source system for processing said files. Just take into account that axis may differ from Unreal Engine and so, need to be reallocated. Parameters: path ( str ) Getters get_point_count ( self , channel ) Retrieves the number of points sorted by channel that are generated by this measure. Sorting by channel allows to identify the original channel for every point. Parameters: channel ( int ) Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.LidarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.LidarDetection ) __str__ ( self ) carla.Light This class exposes the lights that exist in the scene, except for vehicle lights. The properties of a light can be queried and changed at will. Lights are automatically turned on when the simulator enters night mode (sun altitude is below zero). Instance Variables color ( carla.Color ) Color of the light. id ( int ) Identifier of the light. intensity ( float - lumens ) Intensity of the light. is_on ( bool ) Switch of the light. It is True when the light is on. When the night mode starts, this is set to True . location ( carla.Location - meters ) Position of the light. light_group ( carla.LightGroup ) Group the light belongs to. light_state ( carla.LightState ) State of the light. Summarizes its attributes, group, and if it is on/off. Methods turn_off ( self ) Switches off the light. turn_on ( self ) Switches on the light. Setters set_color ( self , color ) Changes the color of the light to color . Parameters: color ( carla.Color ) set_intensity ( self , intensity ) Changes the intensity of the light to intensity . Parameters: intensity ( float - lumens ) set_light_group ( self , light_group ) Changes the light to the group light_group . Parameters: light_group ( carla.LightGroup ) set_light_state ( self , light_state ) Changes the state of the light to light_state . This may change attributes, group and turn the light on/off all at once. Parameters: light_state ( carla.LightState ) carla.LightGroup This class categorizes the lights on scene into different groups. These groups available are provided as a enum values that can be used as flags. Note. So far, though there is a vehicle group, vehicle lights are not available as carla.Light objects. These have to be managed using carla.Vehicle and carla.VehicleLightState . Instance Variables None All lights. Vehicle Street Building Other carla.LightManager This class handles the lights in the scene. Its main use is to get and set the state of groups or lists of lights in one call. An instance of this class can be retrieved by the carla.World.get_lightmanager (). Note. So far, though there is a vehicle group, vehicle lights are not available as carla.Light objects. These have to be managed using carla.Vehicle and carla.VehicleLightState . Methods is_active ( self , lights ) Returns a list with booleans stating if the elements in lights are switched on/off. Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list(bool) turn_off ( self , lights ) Switches off all the lights in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched off. turn_on ( self , lights ) Switches on all the lights in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched on. Getters get_all_lights ( self , light_group = carla.LightGroup.None ) Returns a list containing the lights in a certain group. By default, the group is None . Parameters: light_group ( carla.LightGroup ) - Group to filter the lights returned. Default is None . Return: list( carla.Light ) get_color ( self , lights ) Returns a list with the colors of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.Color ) Setter: carla.LightManager.set_color get_intensity ( self , lights ) Returns a list with the intensity of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list(float) - lumens Setter: carla.LightManager.set_intensity get_light_group ( self , lights ) Returns a list with the group of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.LightGroup ) Setter: carla.LightManager.set_light_group get_light_state ( self , lights ) Returns a list with the state of all the attributes of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.LightState ) Setter: carla.LightManager.set_light_state get_turned_off_lights ( self , light_group ) Returns a list containing lights switched off in the scene, filtered by group. Parameters: light_group ( carla.LightGroup ) - List of lights to be queried. Return: list( carla.Light ) get_turned_on_lights ( self , light_group ) Returns a list containing lights switched on in the scene, filtered by group. Parameters: light_group ( carla.LightGroup ) - List of lights to be queried. Return: list( carla.Light ) Setters set_active ( self , lights , active ) Switches on/off the elements in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched on/off. active ( list(bool) ) - List of booleans to be applied. set_color ( self , lights , color ) Changes the color of the elements in lights to color . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. color ( carla.Color ) - Color to be applied. Getter: carla.LightManager.get_color set_colors ( self , lights , colors ) Changes the color of each element in lights to the corresponding in colors . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. colors ( list( carla.Color ) ) - List of colors to be applied. set_day_night_cycle ( self , active ) All scene lights have a day-night cycle, automatically turning on and off with the altitude of the sun. This interferes in cases where full control of the scene lights is required, so setting this to False deactivates it. It can reactivated by setting it to True . Parameters: active ( bool ) - (De)activation of the day-night cycle. set_intensities ( self , lights , intensities ) Changes the intensity of each element in lights to the corresponding in intensities . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. intensities ( list(float) - lumens ) - List of intensities to be applied. set_intensity ( self , lights , intensity ) Changes the intensity of every element in lights to intensity . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. intensity ( float - lumens ) - Intensity to be applied. Getter: carla.LightManager.get_intensity set_light_group ( self , lights , light_group ) Changes the group of every element in lights to light_group . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_group ( carla.LightGroup ) - Group to be applied. Getter: carla.LightManager.get_light_group set_light_groups ( self , lights , light_groups ) Changes the group of each element in lights to the corresponding in light_groups . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_groups ( list( carla.LightGroup ) ) - List of groups to be applied. set_light_state ( self , lights , light_state ) Changes the state of the attributes of every element in lights to light_state . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_state ( carla.LightState ) - State of the attributes to be applied. Getter: carla.LightManager.get_light_state set_light_states ( self , lights , light_states ) Changes the state of the attributes of each element in lights to the corresponding in light_states . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_states ( list( carla.LightState ) ) - List of state of the attributes to be applied. carla.LightState This class represents all the light variables except the identifier and the location, which are should to be static. Using this class allows to manage all the parametrization of the light in one call. Instance Variables intensity ( float - lumens ) Intensity of a light. color ( carla.Color ) Color of a light. group ( carla.LightGroup ) Group a light belongs to. active ( bool ) Switch of a light. It is True when the light is on. Methods __init__ ( self , intensity =0.0 , color = carla.Color () , group = carla.LightGroup.None , active =False ) Parameters: intensity ( float - lumens ) - Intensity of the light. Default is 0.0 . color ( carla.Color ) - Color of the light. Default is black. group ( carla.LightGroup ) - Group the light belongs to. Default is the generic group None . active ( bool ) - Swith of the light. Default is False , light is off. carla.Location Inherited from carla.Vector3D Represents a spot in the world. Instance Variables x ( float - meters ) Distance from origin to spot on X axis. y ( float - meters ) Distance from origin to spot on Y axis. z ( float - meters ) Distance from origin to spot on Z axis. Methods __init__ ( self , x =0.0 , y =0.0 , z =0.0 ) Parameters: x ( float ) y ( float ) z ( float ) distance ( self , location ) Returns Euclidean distance from this location to another one. Parameters: location ( carla.Location ) - The other point to compute the distance with. Return: float - meters Dunder methods __abs__ ( self ) Returns a Location with the absolute value of the components x, y and z. Return: carla.Location __eq__ ( self , other = carla.Location ) Returns True if both locations are the same point in space. Return: bool __ne__ ( self , other = carla.Location ) Returns True if both locations are different points in space. Return: bool __str__ ( self ) Parses the axis' values to string. Return: str carla.Map Class containing the road information and waypoint managing. Data is retrieved from an OpenDRIVE file that describes the road. A query system is defined which works hand in hand with carla.Waypoint to translate geometrical information from the .xodr to natural world points. CARLA is currently working with OpenDRIVE 1.4 standard . Instance Variables name ( str ) The name of the map. It corresponds to the .umap from Unreal Engine that is loaded from a CARLA server, which then references to the .xodr road description. Methods __init__ ( self , name , xodr_content ) Constructor for this class. Though a map is automatically generated when initializing the world, using this method in no-rendering mode facilitates working with an .xodr without any CARLA server running. Parameters: name ( str ) - Name of the current map. xodr_content ( str ) - .xodr content in string format. Return: list( carla.Transform ) cook_in_memory_map ( self , path ) Generates a binary file from the CARLA map containing information used by the Traffic Manager. This method is only used during the import process for maps. Parameters: path ( str ) - Path to the intended location of the stored binary map file. generate_waypoints ( self , distance ) Returns a list of waypoints with a certain distance between them for every lane and centered inside of it. Waypoints are not listed in any particular order. Remember that waypoints closer than 2cm within the same road, section and lane will have the same identificator. Parameters: distance ( float - meters ) - Approximate distance between waypoints. Return: list( carla.Waypoint ) save_to_disk ( self , path ) Saves the .xodr OpenDRIVE file of the current map to disk. Parameters: path - Path where the file will be saved. to_opendrive ( self ) Returns the .xodr OpenDRIVe file of the current map as string. Return: str transform_to_geolocation ( self , location ) Converts a given location , a point in the simulation, to a carla.GeoLocation , which represents world coordinates. The geographical location of the map is defined inside OpenDRIVE within the tag . Parameters: location ( carla.Location ) Return: carla.GeoLocation Getters get_all_landmarks ( self ) Returns all the landmarks in the map. Landmarks retrieved using this method have a null waypoint. Return: list( carla.Landmark ) get_all_landmarks_from_id ( self , opendrive_id ) Returns the landmarks with a certain OpenDRIVE ID. Landmarks retrieved using this method have a null waypoint. Parameters: opendrive_id ( string ) - The OpenDRIVE ID of the landmarks. Return: list( carla.Landmark ) get_all_landmarks_of_type ( self , type ) Returns the landmarks of a specific type. Landmarks retrieved using this method have a null waypoint. Parameters: type ( string ) - The type of the landmarks. Return: list( carla.Landmark ) get_crosswalks ( self ) Returns a list of locations with all crosswalk zones in the form of closed polygons. The first point is repeated, symbolizing where the polygon begins and ends. Return: list( carla.Location ) get_landmark_group ( self , landmark ) Returns the landmarks in the same group as the specified landmark (including itself). Returns an empty list if the landmark does not belong to any group. Parameters: landmark ( carla.Landmark ) - A landmark that belongs to the group. Return: list( carla.Landmark ) get_spawn_points ( self ) Returns a list of recommendations made by the creators of the map to be used as spawning points for the vehicles. The list includes carla.Transform objects with certain location and orientation. Said locations are slightly on-air in order to avoid Z-collisions, so vehicles fall for a bit before starting their way. Return: list( carla.Transform ) get_topology ( self ) Returns a list of tuples describing a minimal graph of the topology of the OpenDRIVE file. The tuples contain pairs of waypoints located either at the point a road begins or ends. The first one is the origin and the second one represents another road end that can be reached. This graph can be loaded into NetworkX to work with. Output could look like this: [(w0, w1), (w0, w2), (w1, w3), (w2, w3), (w0, w4)] . Return: list(tuple( carla.Waypoint , carla.Waypoint )) get_waypoint ( self , location , project_to_road =True , lane_type = carla.LaneType.Driving ) snippet \u2192 Returns a waypoint that can be located in an exact location or translated to the center of the nearest lane. Said lane type can be defined using flags such as LaneType.Driving & LaneType.Shoulder . The method will return None if the waypoint is not found, which may happen only when trying to retrieve a waypoint for an exact location. That eases checking if a point is inside a certain road, as otherwise, it will return the corresponding waypoint. Parameters: location ( carla.Location - meters ) - Location used as reference for the carla.Waypoint . project_to_road ( bool ) - If True , the waypoint will be at the center of the closest lane. This is the default setting. If False , the waypoint will be exactly in location . None means said location does not belong to a road. lane_type ( carla.LaneType ) - Limits the search for nearest lane to one or various lane types that can be flagged. Return: carla.Waypoint get_waypoint_xodr ( self , road_id , lane_id , s ) Returns a waypoint if all the parameters passed are correct. Otherwise, returns None . Parameters: road_id ( int ) - ID of the road to get the waypoint. lane_id ( int ) - ID of the lane to get the waypoint. s ( float - meters ) - Specify the length from the road start. Return: carla.Waypoint Dunder methods __str__ ( self ) carla.MapLayer Class that represents each manageable layer of the map. Can be used as flags. WARNING: Only \"Opt\" maps are able to work with map layers. . Instance Variables NONE No layers selected. Buildings Decals Foliage Ground ParkedVehicles Particles Props StreetLights Walls All All layers selected. carla.MaterialParameter Class that represents material parameters. Not all objects in the scene contain all parameters. Instance Variables Normal The Normal map of the object. Present in all objects. Diffuse The Diffuse texture of the object. Present in all objects. AO_Roughness_Metallic_Emissive A texture where each color channel represent a property of the material (R: Ambien oclusion, G: Roughness, B: Metallic, A: Emissive/Height map in some objects). Emissive Emissive texture. Present in a few objects. carla.ObstacleDetectionEvent Inherited from carla.SensorData Class that defines the obstacle data for sensor.other.obstacle . Learn more about this here . Instance Variables actor ( carla.Actor ) The actor the sensor is attached to. other_actor ( carla.Actor ) The actor or object considered to be an obstacle. distance ( float - meters ) Distance between actor and other . Methods Dunder methods __str__ ( self ) carla.OpendriveGenerationParameters This class defines the parameters used when generating a world using an OpenDRIVE file. Instance Variables vertex_distance ( float ) Distance between vertices of the mesh generated. Default is 2.0 . max_road_length ( float ) Max road length for a single mesh portion. The mesh of the map is divided into portions, in order to avoid propagating issues. Default is 50.0 . wall_height ( float ) Height of walls created on the boundaries of the road. These prevent vehicles from falling off the road. Default is 1.0 . additional_width ( float ) Additional with applied junction lanes. Complex situations tend to occur at junctions, and a little increase can prevent vehicles from falling off the road. Default is 0.6 . smooth_junctions ( bool ) If True , the mesh at junctions will be smoothed to prevent issues where roads blocked other roads. Default is True . enable_mesh_visibility ( bool ) If True , the road mesh will be rendered. Setting this to False should reduce the rendering overhead. Default is True . enable_pedestrian_navigation ( bool ) If True , Pedestrian navigation will be enabled using Recast tool. For very large maps it is recomended to disable this option. Default is True . carla.OpticalFlowImage Inherited from carla.SensorData Class that defines an optical flow image of 2-Dimension float (32-bit) vectors representing the optical flow detected in the field of view. The components of the vector represents the displacement of an object in the image plane. Each component outputs values in the normalized range [-2,2] which scales to [-2 size, 2 size] with size being the total resolution in the corresponding component. Instance Variables fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes ) Flattened array of pixel data, use reshape to create an image array. Methods Getters get_color_coded_flow ( self ) Visualization helper. Converts the optical flow image to an RGB image. Return: carla.Image Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.OpticalFlowPixel that form the image. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self ) carla.OpticalFlowPixel Class that defines a 2 dimensional vector representing an optical flow pixel. Instance Variables x ( float ) Optical flow in the x component. y ( float ) Optical flow in the y component. Methods __init__ ( self , x =0 , y =0 ) Initializes the Optical Flow Pixel. Zero by default. Parameters: x ( float ) y ( float ) Dunder methods __eq__ ( self , other = carla.OpticalFlowPixel ) __ne__ ( self , other = carla.OpticalFlowPixel ) __str__ ( self ) carla.Osm2Odr Class that converts an OpenStreetMap map to OpenDRIVE format, so that it can be loaded in CARLA. Find out more about this feature in the docs . Methods convert ( osm_file , settings ) Takes the content of an .osm file (OpenStreetMap format) and returns the content of the .xodr (OpenDRIVE format) describing said map. Some parameterization is passed to do the conversion. Parameters: osm_file ( str ) - The content of the input OpenStreetMap file parsed as string. settings ( carla.OSM2ODRSettings ) - Parameterization for the conversion. Return: str carla.Osm2OdrSettings Helper class that contains the parameterization that will be used by carla.Osm2Odr to convert an OpenStreetMap map to OpenDRIVE format. Find out more about this feature in the docs . Instance Variables use_offsets ( bool ) Enables the use of offset for the conversion. The offset will move the origin position of the map. Default value is False . offset_x ( float - meters ) Offset in the X axis. Default value is 0.0 . offset_y ( float - meters ) Offset in the Y axis. Default value is 0.0 . default_lane_width ( float - meters ) Width of the lanes described in the resulting XODR map. Default value is 4.0 . elevation_layer_height ( float - meters ) Defines the height separating two different OpenStreetMap layers . Default value is 0.0 . center_map ( bool ) When this option is enabled, the geometry of the map will be displaced so that the origin of coordinates matches the center of the bounding box of the entire road map. proj_string ( str ) Defines the proj4 string that will be used to compute the projection from geocoordinates to cartesian coordinates. This string will be written in the resulting OpenDRIVE unless the options use_offsets or center_map are enabled as these options override some of the definitions in the string. generate_traffic_lights ( bool ) Indicates wether to generate traffic light data in the OpenDRIVE. Road types defined by set_traffic_light_excluded_way_types(way_types) will not generate traffic lights. all_junctions_with_traffic_lights ( bool ) When disabled, the converter will generate traffic light data from the OpenStreetMaps data only. When enabled, all junctions will generate traffic lights. Methods Setters set_osm_way_types ( self , way_types ) Defines the OpenStreetMaps road types that will be imported to OpenDRIVE. By default the road types imported are motorway, motorway_link, trunk, trunk_link, primary, primary_link, secondary, secondary_link, tertiary, tertiary_link, unclassified, residential . For a full list of road types check here . Parameters: way_types ( list(str) ) - The list of road types. set_traffic_light_excluded_way_types ( self , way_types ) Defines the OpenStreetMaps road types that will not generate traffic lights even if generate_traffic_lights is enabled. By default the road types excluded are motorway_link, primary_link, secondary_link, tertiary_link . Parameters: way_types ( list(str) ) - The list of road types. carla.RadarDetection Data contained inside a carla.RadarMeasurement . Each of these represents one of the points in the cloud that a sensor.other.radar registers and contains the distance, angle and velocity in relation to the radar. Instance Variables altitude ( float - radians ) Altitude angle of the detection. azimuth ( float - radians ) Azimuth angle of the detection. depth ( float - meters ) Distance from the sensor to the detection position. velocity ( float - m/s ) The velocity of the detected object towards the sensor. Methods Dunder methods __str__ ( self ) carla.RadarMeasurement Inherited from carla.SensorData Class that defines and gathers the measures registered by a sensor.other.radar , representing a wall of points in front of the sensor with a distance, angle and velocity in relation to it. The data consists of a carla.RadarDetection array. Learn more about this here . Instance Variables raw_data ( bytes ) The complete information of the carla.RadarDetection the radar has registered. Methods Getters get_detection_count ( self ) Retrieves the number of entries generated, same as __str__() . Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.RadarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.RadarDetection ) __str__ ( self ) carla.Rotation Class that represents a 3D rotation and therefore, an orientation in space. CARLA uses the Unreal Engine coordinates system. This is a Z-up left-handed system. The constructor method follows a specific order of declaration: (pitch, yaw, roll) , which corresponds to (Y-rotation,Z-rotation,X-rotation) . Unreal Engine's coordinates system . Instance Variables pitch ( float - degrees ) Y-axis rotation angle. yaw ( float - degrees ) Z-axis rotation angle. roll ( float - degrees ) X-axis rotation angle. Methods __init__ ( self , pitch =0.0 , yaw =0.0 , roll =0.0 ) Parameters: pitch ( float - degrees ) - Y-axis rotation angle. yaw ( float - degrees ) - Z-axis rotation angle. roll ( float - degrees ) - X-axis rotation angle. Warning: The declaration order is different in CARLA (pitch,yaw,roll) , and in the Unreal Engine Editor (roll,pitch,yaw) . When working in a build from source, don't mix up the axes' rotations. Getters get_forward_vector ( self ) Computes the vector pointing forward according to the rotation of the object. Return: carla.Vector3D get_right_vector ( self ) Computes the vector pointing to the right according to the rotation of the object. Return: carla.Vector3D get_up_vector ( self ) Computes the vector pointing upwards according to the rotation of the object. Return: carla.Vector3D Dunder methods __eq__ ( self , other = carla.Rotation ) Returns True if both rotations represent the same orientation for every axis. Return: bool __ne__ ( self , other = carla.Rotation ) Returns True if both rotations represent the same orientation for every axis. Return: bool __str__ ( self ) Parses the axis' orientations to string. carla.RssActorConstellationData Data structure that is provided within the callback registered by RssSensor.register_actor_constellation_callback(). Instance Variables ego_match_object ( ad.map.match.Object ) The ego map matched information. ego_route ( ad.map.route.FullRoute ) The ego route. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) Current ego vehicle dynamics regarding the route. other_match_object ( ad.map.match.Object ) The other object's map matched information. This is only valid if 'other_actor' is not 'None'. other_actor ( carla.Actor ) The other actor. This is 'None' in case of query of default parameters or articial objects of kind ad.rss.world.ObjectType.ArtificialObject with no dedicated ' carla.Actor ' (as e.g. for the road boundaries at the moment). Methods Dunder methods __str__ ( self ) carla.RssActorConstellationResult Data structure that should be returned by the callback registered by RssSensor.register_actor_constellation_callback(). Instance Variables rss_calculation_mode ( ad.rss.map.RssMode ) The calculation mode to be applied with the actor. restrict_speed_limit_mode ( ad.rss.map.RestrictSpeedLimitMode ) The mode for restricting speed limit. ego_vehicle_dynamics ( ad.rss.world.RssDynamics ) The RSS dynamics to be applied for the ego vehicle. actor_object_type ( ad.rss.world.ObjectType ) The RSS object type to be used for the actor. actor_dynamics ( ad.rss.world.RssDynamics ) The RSS dynamics to be applied for the actor. Methods Dunder methods __str__ ( self ) carla.RssEgoDynamicsOnRoute Part of the data contained inside a carla.RssResponse describing the state of the vehicle. The parameters include its current dynamics, and how it is heading regarding the target route. Instance Variables ego_speed ( ad.physics.Speed ) The ego vehicle's speed. min_stopping_distance ( ad.physics.Distance ) The current minimum stopping distance. ego_center ( ad.map.point.ENUPoint ) The considered enu position of the ego vehicle. ego_heading ( ad.map.point.ENUHeading ) The considered heading of the ego vehicle. ego_center_within_route ( bool ) States if the ego vehicle's center is within the route. crossing_border ( bool ) States if the vehicle is already crossing one of the lane borders. route_heading ( ad.map.point.ENUHeading ) The considered heading of the route. route_nominal_center ( ad.map.point.ENUPoint ) The considered nominal center of the current route. heading_diff ( ad.map.point.ENUHeading ) The considered heading diff towards the route. route_speed_lat ( ad.physics.Speed ) The ego vehicle's speed component lat regarding the route. route_speed_lon ( ad.physics.Speed ) The ego vehicle's speed component lon regarding the route. route_accel_lat ( ad.physics.Acceleration ) The ego vehicle's acceleration component lat regarding the route. route_accel_lon ( ad.physics.Acceleration ) The ego vehicle's acceleration component lon regarding the route. avg_route_accel_lat ( ad.physics.Acceleration ) The ego vehicle's acceleration component lat regarding the route smoothened by an average filter. avg_route_accel_lon ( ad.physics.Acceleration ) The ego acceleration component lon regarding the route smoothened by an average filter. Methods Dunder methods __str__ ( self ) carla.RssLogLevel Enum declaration used in carla.RssSensor to set the log level. Instance Variables trace debug info warn err critical off carla.RssResponse Inherited from carla.SensorData Class that contains the output of a carla.RssSensor . This is the result of the RSS calculations performed for the parent vehicle of the sensor. A carla.RssRestrictor will use the data to modify the carla.VehicleControl of the vehicle. Instance Variables response_valid ( bool ) States if the response is valid. It is False if calculations failed or an exception occured. proper_response ( ad.rss.state.ProperResponse ) The proper response that the RSS calculated for the vehicle. rss_state_snapshot ( ad.rss.state.RssStateSnapshot ) Detailed RSS states at the current moment in time. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) Current ego vehicle dynamics regarding the route. world_model ( ad.rss.world.WorldModel ) World model used for calculations. situation_snapshot ( ad.rss.situation.SituationSnapshot ) Detailed RSS situations extracted from the world model. Methods Dunder methods __str__ ( self ) carla.RssRestrictor These objects apply restrictions to a carla.VehicleControl . It is part of the CARLA implementation of the C++ Library for Responsibility Sensitive Safety . This class works hand in hand with a rss sensor , which provides the data of the restrictions to be applied. Methods restrict_vehicle_control ( self , vehicle_control , proper_response , ego_dynamics_on_route , vehicle_physics ) Applies the safety restrictions given by a carla.RssSensor to a carla.VehicleControl . Parameters: vehicle_control ( carla.VehicleControl ) - The input vehicle control to be restricted. proper_response ( ad.rss.state.ProperResponse ) - Part of the response generated by the sensor. Contains restrictions to be applied to the acceleration of the vehicle. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) - Part of the response generated by the sensor. Contains dynamics and heading of the vehicle regarding its route. vehicle_physics ( carla.VehiclePhysicsControl ) - The current physics of the vehicle. Used to apply the restrictions properly. Return: carla.VehicleControl Setters set_log_level ( self , log_level ) Sets the log level. Parameters: log_level ( carla.RssLogLevel ) - New log level. carla.RssRoadBoundariesMode Enum declaration used in carla.RssSensor to enable or disable the stay on road feature. In summary, this feature considers the road boundaries as virtual objects. The minimum safety distance check is applied to these virtual walls, in order to make sure the vehicle does not drive off the road. Instance Variables On Enables the stay on road feature. Off Disables the stay on road feature. carla.RssSensor Inherited from carla.Sensor This sensor works a bit differently than the rest. Take look at the specific documentation , and the rss sensor reference to gain full understanding of it. The RSS sensor uses world information, and a RSS library to make safety checks on a vehicle. The output retrieved by the sensor is a carla.RssResponse . This will be used by a carla.RssRestrictor to modify a carla.VehicleControl before applying it to a vehicle. Instance Variables ego_vehicle_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for the ego vehicle if no actor constellation callback is registered. other_vehicle_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for the rest of vehicles if no actor constellation callback is registered. pedestrian_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for pedestrians if no actor constellation callback is registered. road_boundaries_mode ( carla.RssRoadBoundariesMode ) Switches the stay on road feature. By default is Off . routing_targets ( vector< carla.Transform > ) The current list of targets considered to route the vehicle. If no routing targets are defined, a route is generated at random. Methods append_routing_target ( self , routing_target ) Appends a new target position to the current route of the vehicle. Parameters: routing_target ( carla.Transform ) - New target point for the route. Choose these after the intersections to force the route to take the desired turn. drop_route ( self ) Discards the current route. If there are targets remaining in routing_targets , creates a new route using those. Otherwise, a new route is created at random. register_actor_constellation_callback ( self , callback ) Register a callback to customize a carla.RssActorConstellationResult . By this callback the settings of RSS parameters are done per actor constellation and the settings (ego_vehicle_dynamics, other_vehicle_dynamics and pedestrian_dynamics) have no effect. Parameters: callback - The function to be called whenever a RSS situation is about to be calculated. reset_routing_targets ( self ) Erases the targets that have been appended to the route. Setters set_log_level ( self , log_level ) Sets the log level. Parameters: log_level ( carla.RssLogLevel ) - New log level. set_map_log_level ( self , log_level ) Sets the map log level. Parameters: log_level ( carla.RssLogLevel ) - New map log level. Dunder methods __str__ ( self ) carla.SemanticLidarDetection Data contained inside a carla.SemanticLidarMeasurement . Each of these represents one of the points in the cloud with its location, the cosine of the incident angle, index of the object hit, and its semantic tag. Instance Variables point ( carla.Location - meters ) [x,y,z] coordinates of the point. cos_inc_angle ( float ) Cosine of the incident angle between the ray, and the normal of the hit object. object_idx ( uint ) ID of the actor hit by the ray. object_tag ( uint ) Semantic tag of the component hit by the ray. Methods Dunder methods __str__ ( self ) carla.SemanticLidarMeasurement Inherited from carla.SensorData Class that defines the semantic LIDAR data retrieved by a sensor.lidar.ray_cast_semantic . This essentially simulates a rotating LIDAR using ray-casting. Learn more about this here . Instance Variables channels ( int ) Number of lasers shot. horizontal_angle ( float - radians ) Horizontal angle the LIDAR is rotated at the time of the measurement. raw_data ( bytes ) Received list of raw detection points. Each point consists of [x,y,z] coordinates plus the cosine of the incident angle, the index of the hit actor, and its semantic tag. Methods save_to_disk ( self , path ) Saves the point cloud to disk as a .ply file describing data from 3D scanners. The files generated are ready to be used within MeshLab , an open-source system for processing said files. Just take into account that axis may differ from Unreal Engine and so, need to be reallocated. Parameters: path ( str ) Getters get_point_count ( self , channel ) Retrieves the number of points sorted by channel that are generated by this measure. Sorting by channel allows to identify the original channel for every point. Parameters: channel ( int ) Dunder methods __getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.SemanticLidarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.SemanticLidarDetection ) __str__ ( self ) carla.Sensor Inherited from carla.Actor Sensors compound a specific family of actors quite diverse and unique. They are normally spawned as attachment/sons of a vehicle (take a look at carla.World to learn about actor spawning). Sensors are thoroughly designed to retrieve different types of data that they are listening to. The data they receive is shaped as different subclasses inherited from carla.SensorData (depending on the sensor). Most sensors can be divided in two groups: those receiving data on every tick (cameras, point clouds and some specific sensors) and those who only receive under certain circumstances (trigger detectors). CARLA provides a specific set of sensors and their blueprint can be found in carla.BlueprintLibrary . All the information on their preferences and settlement can be found here , but the list of those available in CARLA so far goes as follow. Receive data on every tick. - Depth camera . - Gnss sensor . - IMU sensor . - Lidar raycast . - SemanticLidar raycast . - Radar . - RGB camera . - RSS sensor . - Semantic Segmentation camera . Only receive data when triggered. - Collision detector . - Lane invasion detector . - Obstacle detector . Instance Variables is_listening ( boolean ) When True the sensor will be waiting for data. Methods is_listening ( self ) Returns whether the sensor is in a listening state. is_listening_gbuffer ( self , gbuffer_id ) Returns whether the sensor is in a listening state for a specific GBuffer texture. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the target Unreal Engine GBuffer texture. listen ( self , callback ) snippet \u2192 The function the sensor will be calling to every time a new measurement is received. This function needs for an argument containing an object type carla.SensorData to work with. Parameters: callback ( function ) - The called function with one argument containing the sensor data. listen_to_gbuffer ( self , gbuffer_id , callback ) The function the sensor will be calling to every time the desired GBuffer texture is received. This function needs for an argument containing an object type carla.SensorData to work with. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the target Unreal Engine GBuffer texture. callback ( function ) - The called function with one argument containing the received GBuffer texture. stop ( self ) Commands the sensor to stop listening for data. stop_gbuffer ( self , gbuffer_id ) Commands the sensor to stop listening for the specified GBuffer texture. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the Unreal Engine GBuffer texture. Dunder methods __str__ ( self ) carla.SensorData Base class for all the objects containing data generated by a carla.Sensor . This objects should be the argument of the function said sensor is listening to, in order to work with them. Each of these sensors needs for a specific type of sensor data. Hereunder is a list of the sensors and their corresponding data. - Cameras (RGB, depth and semantic segmentation): carla.Image . - Collision detector: carla.CollisionEvent . - GNSS sensor: carla.GnssMeasurement . - IMU sensor: carla.IMUMeasurement . - Lane invasion detector: carla.LaneInvasionEvent . - LIDAR sensor: carla.LidarMeasurement . - Obstacle detector: carla.ObstacleDetectionEvent . - Radar sensor: carla.RadarMeasurement . - RSS sensor: carla.RssResponse . - Semantic LIDAR sensor: carla.SemanticLidarMeasurement . Instance Variables frame ( int ) Frame count when the data was generated. timestamp ( float - seconds ) Simulation-time when the data was generated. transform ( carla.Transform ) Sensor's transform when the data was generated. carla.TextureColor Class representing a texture object to be uploaded to the server. Pixel format is RGBA, uint8 per channel. Instance Variables width ( int ) X-coordinate size of the texture. height ( int ) Y-coordinate size of the texture. Methods __init__ ( self , width , height ) Initializes a the texture with a ( width , height ) size. Parameters: width ( int ) height ( int ) get ( self , x , y ) Get the (x,y) pixel data. Parameters: x ( int ) y ( int ) Return: carla.Color set ( self , x , y , value ) Sets the (x,y) pixel data with value . Parameters: x ( int ) y ( int ) value ( carla.Color ) Setters set_dimensions ( self , width , height ) Resizes the texture to te specified dimensions. Parameters: width ( int ) height ( int ) carla.TextureFloatColor Class representing a texture object to be uploaded to the server. Pixel format is RGBA, float per channel. Instance Variables width ( int ) X-coordinate size of the texture. height ( int ) Y-coordinate size of the texture. Methods __init__ ( self , width , height ) Initializes a the texture with a ( width , height ) size. Parameters: width ( int ) height ( int ) get ( self , x , y ) Get the (x,y) pixel data. Parameters: x ( int ) y ( int ) Return: carla.FloatColor set ( self , x , y , value ) Sets the (x,y) pixel data with value . Parameters: x ( int ) y ( int ) value ( carla.FloatColor ) Setters set_dimensions ( self , width , height ) Resizes the texture to te specified dimensions. Parameters: width ( int ) height ( int ) carla.Timestamp Class that contains time information for simulated data. This information is automatically retrieved as part of the carla.WorldSnapshot the client gets on every frame, but might also be used in many other situations such as a carla.Sensor retrieveing data. Instance Variables frame ( int ) The number of frames elapsed since the simulator was launched. elapsed_seconds ( float - seconds ) Simulated seconds elapsed since the beginning of the current episode. delta_seconds ( float - seconds ) Simulated seconds elapsed since the previous frame. platform_timestamp ( float - seconds ) Time register of the frame at which this measurement was taken given by the OS in seconds. Methods __init__ ( self , frame , elapsed_seconds , delta_seconds , platform_timestamp ) Parameters: frame ( int ) elapsed_seconds ( float - seconds ) delta_seconds ( float - seconds ) platform_timestamp ( float - seconds ) Dunder methods __eq__ ( self , other = carla.Timestamp ) __ne__ ( self , other = carla.Timestamp ) __str__ ( self ) carla.TrafficLight Inherited from carla.TrafficSign A traffic light actor, considered a specific type of traffic sign. As traffic lights will mostly appear at junctions, they belong to a group which contains the different traffic lights in it. Inside the group, traffic lights are differenciated by their pole index. Within a group the state of traffic lights is changed in a cyclic pattern: one index is chosen and it spends a few seconds in green, yellow and eventually red. The rest of the traffic lights remain frozen in red this whole time, meaning that there is a gap in the last seconds of the cycle where all the traffic lights are red. However, the state of a traffic light can be changed manually. Instance Variables state ( carla.TrafficLightState ) Current state of the traffic light. Methods freeze ( self , freeze ) Stops all the traffic lights in the scene at their current state. Parameters: freeze ( bool ) is_frozen ( self ) The client returns True if a traffic light is frozen according to last tick. The method does not call the simulator. Return: bool reset_group ( self ) Resets the state of the traffic lights of the group to the initial state at the start of the simulation. Note: This method calls the simulator. Getters get_affected_lane_waypoints ( self ) Returns a list of waypoints indicating the positions and lanes where the traffic light is having an effect. Return: list( carla.Waypoint ) get_elapsed_time ( self ) The client returns the time in seconds since current light state started according to last tick. The method does not call the simulator. Return: float - seconds get_green_time ( self ) The client returns the time set for the traffic light to be green, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_green_time get_group_traffic_lights ( self ) Returns all traffic lights in the group this one belongs to. Return: list( carla.TrafficLight ) Note: This method calls the simulator. get_light_boxes ( self ) Returns a list of the bounding boxes encapsulating each light box of the traffic light. Return: list( carla.BoundingBox ) get_opendrive_id ( self ) Returns the OpenDRIVE id of this traffic light. Return: str get_pole_index ( self ) Returns the index of the pole that identifies it as part of the traffic light group of a junction. Return: int get_red_time ( self ) The client returns the time set for the traffic light to be red, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_red_time get_state ( self ) The client returns the state of the traffic light according to last tick. The method does not call the simulator. Return: carla.TrafficLightState Setter: carla.TrafficLight.set_state get_stop_waypoints ( self ) Returns a list of waypoints indicating the stop position for the traffic light. These waypoints are computed from the trigger boxes of the traffic light that indicate where a vehicle should stop. Return: list( carla.Waypoint ) get_yellow_time ( self ) The client returns the time set for the traffic light to be yellow, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_yellow_time Setters set_green_time ( self , green_time ) Parameters: green_time ( float - seconds ) - Sets a given time for the green light to be active. Getter: carla.TrafficLight.get_green_time set_red_time ( self , red_time ) Sets a given time for the red state to be active. Parameters: red_time ( float - seconds ) Getter: carla.TrafficLight.get_red_time set_state ( self , state ) snippet \u2192 Sets a given state to a traffic light actor. Parameters: state ( carla.TrafficLightState ) Getter: carla.TrafficLight.get_state set_yellow_time ( self , yellow_time ) Sets a given time for the yellow light to be active. Parameters: yellow_time ( float - seconds ) Getter: carla.TrafficLight.get_yellow_time Dunder methods __str__ ( self ) carla.TrafficLightState \u4ea4\u901a\u706f\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u3002\u8fd9\u4e9b\u53ef\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u6b65\u957f\u66f4\u6539\u6216\u624b\u52a8\u66f4\u6539\u3002 carla.TrafficLight.set_state \u4e2d\u7684\u7247\u6bb5\u4f1a\u52a8\u6001\u66f4\u6539\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002 Instance Variables Red Yellow Green Off Unknown carla.TrafficManager The traffic manager is a module built on top of the CARLA API in C++. It handles any group of vehicles set to autopilot mode to populate the simulation with realistic urban traffic conditions and give the chance to user to customize some behaviours. The architecture of the traffic manager is divided in five different goal-oriented stages and a PID controller where the information flows until eventually, a carla.VehicleControl is applied to every vehicle registered in a traffic manager. In order to learn more, visit the documentation regarding this module. Methods auto_lane_change ( self , actor , enable ) Turns on or off lane changing behaviour for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle whose settings are changed. enable ( bool ) - True is default and enables lane changes. False will disable them. collision_detection ( self , reference_actor , other_actor , detect_collision ) Tunes on/off collisions between a vehicle and another specific actor. In order to ignore all other vehicles, traffic lights or walkers, use the specific ignore methods described in this same section. Parameters: reference_actor ( carla.Actor ) - Vehicle that is going to ignore collisions. other_actor ( carla.Actor ) - The actor that reference_actor is going to ignore collisions with. detect_collision ( bool ) - True is default and enables collisions. False will disable them. distance_to_leading_vehicle ( self , actor , distance ) Sets the minimum distance in meters that a vehicle has to keep with the others. The distance is in meters and will affect the minimum moving distance. It is computed from front to back of the vehicle objects. Parameters: actor ( carla.Actor ) - Vehicle whose minimum distance is being changed. distance ( float - meters ) - Meters between both vehicles. force_lane_change ( self , actor , direction ) Forces a vehicle to change either to the lane on its left or right, if existing, as indicated in direction . This method applies the lane change no matter what, disregarding possible collisions. Parameters: actor ( carla.Actor ) - Vehicle being forced to change lanes. direction ( bool ) - Destination lane. True is the one on the right and False is the left one. global_lane_offset ( self , offset ) Sets a global lane offset displacement from the center line. Positive values imply a right offset while negative ones mean a left one. Default is 0. Numbers high enough to cause the vehicle to drive through other lanes might break the controller. Parameters: offset ( float ) - Lane offset displacement from the center line. global_percentage_speed_difference ( self , percentage ) Sets the difference the vehicle's intended speed and its current speed limit. Speed limits can be exceeded by setting the perc to a negative value. Default is 30. Exceeding a speed limit can be done using negative percentages. Parameters: percentage ( float ) - Percentage difference between intended speed and the current limit. ignore_lights_percentage ( self , actor , perc ) During the traffic light stage, which runs every frame, this method sets the percent chance that traffic lights will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The actor that is going to ignore traffic lights. perc ( float ) - Between 0 and 100. Amount of times traffic lights will be ignored. ignore_signs_percentage ( self , actor , perc ) During the traffic light stage, which runs every frame, this method sets the percent chance that stop signs will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The actor that is going to ignore stop signs. perc ( float ) - Between 0 and 100. Amount of times stop signs will be ignored. ignore_vehicles_percentage ( self , actor , perc ) During the collision detection stage, which runs every frame, this method sets a percent chance that collisions with another vehicle will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle that is going to ignore other vehicles. perc ( float ) - Between 0 and 100. Amount of times collisions will be ignored. ignore_walkers_percentage ( self , actor , perc ) During the collision detection stage, which runs every frame, this method sets a percent chance that collisions with walkers will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle that is going to ignore walkers on scene. perc ( float ) - Between 0 and 100. Amount of times collisions will be ignored. keep_right_rule_percentage ( self , actor , perc ) During the localization stage, this method sets a percent chance that vehicle will follow the keep right rule, and stay in the right lane. Parameters: actor ( carla.Actor ) - Vehicle whose behaviour is being changed. perc ( float ) - Between 0 and 100. Amount of times the vehicle will follow the keep right rule. random_left_lanechange_percentage ( self , actor , percentage ) Adjust probability that in each timestep the actor will perform a left lane change, dependent on lane change availability. Parameters: actor ( carla.Actor ) - The actor that you wish to query. percentage ( float ) - The probability of lane change in percentage units (between 0 and 100). random_right_lanechange_percentage ( self , actor , percentage ) Adjust probability that in each timestep the actor will perform a right lane change, dependent on lane change availability. Parameters: actor ( carla.Actor ) - The actor that you wish to query. percentage ( float ) - The probability of lane change in percentage units (between 0 and 100). shut_down ( self ) Shuts down the traffic manager. update_vehicle_lights ( self , actor , do_update ) Sets if the Traffic Manager is responsible of updating the vehicle lights, or not. Default is False . The traffic manager will not change the vehicle light status of a vehicle, unless its auto_update_status is st to True . Parameters: actor ( carla.Actor ) - Vehicle whose lights status is being changed. do_update ( bool ) - If True the traffic manager will manage the vehicle lights for the specified vehicle. vehicle_lane_offset ( self , actor , offset ) Sets a lane offset displacement from the center line. Positive values imply a right offset while negative ones mean a left one. Default is 0. Numbers high enough to cause the vehicle to drive through other lanes might break the controller. Parameters: actor ( carla.Actor ) - Vehicle whose lane offset behaviour is being changed. offset ( float ) - Lane offset displacement from the center line. vehicle_percentage_speed_difference ( self , actor , percentage ) Sets the difference the vehicle's intended speed and its current speed limit. Speed limits can be exceeded by setting the perc to a negative value. Default is 30. Exceeding a speed limit can be done using negative percentages. Parameters: actor ( carla.Actor ) - Vehicle whose speed behaviour is being changed. percentage ( float ) - Percentage difference between intended speed and the current limit. Getters get_all_actions ( self , actor ) Returns all known actions (i.e. road options and waypoints) that an actor controlled by the Traffic Manager will perform in its next steps. Parameters: actor ( carla.Actor ) - The actor that you wish to query. Return: list of lists with each element as follows - [Road option (string e.g. 'Left', 'Right', 'Straight'), Next waypoint ( carla.Waypoint )] get_next_action ( self , actor ) Returns the next known road option and waypoint that an actor controlled by the Traffic Manager will follow. Parameters: actor ( carla.Actor ) - The actor that you wish to query. Return: list of two elements - [Road option (string e.g. 'Left', 'Right', 'Straight'), Next waypoint ( carla.Waypoint )] get_port ( self ) Returns the port where the Traffic Manager is connected. If the object is a TM-Client, it will return the port of its TM-Server. Read the documentation to learn the difference. Return: uint16 Setters set_boundaries_respawn_dormant_vehicles ( self , lower_bound =25.0 , upper_bound =actor_active_distance ) Sets the upper and lower boundaries for dormant actors to be respawned near the hero vehicle. Parameters: lower_bound ( float ) - The minimum distance in meters from the hero vehicle that a dormant actor will be respawned. upper_bound ( float ) - The maximum distance in meters from the hero vehicle that a dormant actor will be respawned. Warning: The upper_bound cannot be higher than the actor_active_distance . The lower_bound cannot be less than 25. set_desired_speed ( self , actor , speed ) Sets the speed of a vehicle to the specified value. Parameters: actor ( carla.Actor ) - Vehicle whose speed is being changed. speed ( float ) - Desired speed at which the vehicle will move. set_global_distance_to_leading_vehicle ( self , distance ) Sets the minimum distance in meters that vehicles have to keep with the rest. The distance is in meters and will affect the minimum moving distance. It is computed from center to center of the vehicle objects. Parameters: distance ( float - meters ) - Meters between vehicles. set_hybrid_physics_mode ( self , enabled =False ) Enables or disables the hybrid physics mode. In this mode, vehicle's farther than a certain radius from the ego vehicle will have their physics disabled. Computation cost will be reduced by not calculating vehicle dynamics. Vehicles will be teleported. Parameters: enabled ( bool ) - If True , enables the hybrid physics. set_hybrid_physics_radius ( self , r =50.0 ) With hybrid physics on, changes the radius of the area of influence where physics are enabled. Parameters: r ( float - meters ) - New radius where physics are enabled. set_osm_mode ( self , mode_switch =True ) Enables or disables the OSM mode. This mode allows the user to run TM in a map created with the OSM feature . These maps allow having dead-end streets. Normally, if vehicles cannot find the next waypoint, TM crashes. If OSM mode is enabled, it will show a warning, and destroy vehicles when necessary. Parameters: mode_switch ( bool ) - If True , the OSM mode is enabled. set_path ( self , actor , path ) Sets a list of locations for a vehicle to follow while controlled by the Traffic Manager. Parameters: actor ( carla.Actor ) - The actor that must follow the given path. path ( list ) - The list of carla.Locations for the actor to follow. Warning: Ensure that the road topology doesn't impede the given path. set_random_device_seed ( self , value ) Sets a specific random seed for the Traffic Manager, thereby setting it to be deterministic. Parameters: value ( int ) - Seed value for the random number generation of the Traffic Manager. set_respawn_dormant_vehicles ( self , mode_switch =False ) If True , vehicles in large maps will respawn near the hero vehicle when they become dormant. Otherwise, they will stay dormant until they are within actor_active_distance of the hero vehicle again. Parameters: mode_switch ( bool ) set_route ( self , actor , path ) Sets a list of route instructions for a vehicle to follow while controlled by the Traffic Manager. The possible route instructions are 'Left', 'Right', 'Straight'. Parameters: actor ( carla.Actor ) - The actor that must follow the given route instructions. path ( list ) - The list of route instructions (string) for the vehicle to follow. Warning: Ensure that the lane topology doesn't impede the given route. set_synchronous_mode ( self , mode_switch =True ) Sets the Traffic Manager to synchronous mode . In a multiclient situation , only the TM-Server can tick. Similarly, in a multiTM situation , only one TM-Server must tick. Use this method in the client that does the world tick, and right after setting the world to synchronous mode, to set which TM will be the master while in sync. Parameters: mode_switch ( bool ) - If True , the TM synchronous mode is enabled. Warning: If the server is set to synchronous mode, the TM must be set to synchronous mode too in the same client that does the tick. carla.TrafficSign Inherited from carla.Actor Traffic signs appearing in the simulation except for traffic lights. These have their own class inherited from this in carla.TrafficLight . Right now, speed signs, stops and yields are mainly the ones implemented, but many others are borne in mind. Instance Variables trigger_volume A carla.BoundingBox situated near a traffic sign where the carla.Actor who is inside can know about it. carla.Transform \u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u6362\uff0c\u5373\u4f4d\u7f6e\u548c\u65cb\u8f6c\u7684\u7ec4\u5408\uff0c\u800c\u4e0d\u8fdb\u884c\u7f29\u653e\u3002 Instance Variables location ( carla.Location ) \u63cf\u8ff0\u5750\u6807\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002 rotation ( carla.Rotation - degrees (pitch, yaw, roll) ) \u63cf\u8ff0\u6839\u636e\u865a\u5e7b\u5f15\u64ce\u7684\u8f74\u7cfb\u7edf\u8fdb\u884c\u5bf9\u8c61\u7684\u65cb\u8f6c\u3002 Methods __init__ ( self , location , rotation ) Parameters: location ( carla.Location ) rotation ( carla.Rotation - degrees (pitch, yaw, roll) ) transform ( self , in_point ) Translates a 3D point from local to global coordinates using the current transformation as frame of reference. Parameters: in_point ( carla.Location ) - Location in the space to which the transformation will be applied. transform_vector ( self , in_vector ) Rotates a vector using the current transformation as frame of reference, without applying translation. Use this to transform, for example, a velocity. Parameters: in_vector ( carla.Vector3D ) - Vector to which the transformation will be applied. Getters get_forward_vector ( self ) Computes a forward vector using the rotation of the object. Return: carla.Vector3D get_inverse_matrix ( self ) Computes the 4-matrix representation of the inverse transformation. Return: list(list(float)) get_matrix ( self ) Computes the 4-matrix representation of the transformation. Return: list(list(float)) get_right_vector ( self ) Computes a right vector using the rotation of the object. Return: carla.Vector3D get_up_vector ( self ) Computes an up vector using the rotation of the object. Return: carla.Vector3D Dunder methods __eq__ ( self , other = carla.Transform ) Returns True if both location and rotation are equal for this and other . Return: bool __ne__ ( self , other = carla.Transform ) Returns True if any location and rotation are not equal for this and other . Return: bool __str__ ( self ) Parses both location and rotation to string. Return: str carla.Vector2D Helper class to perform 2D operations. Instance Variables x ( float ) X-axis value. y ( float ) Y-axis value. Methods __init__ ( self , x =0.0 , y =0.0 ) Parameters: x ( float ) y ( float ) length ( self ) Computes the length of the vector. Return: float make_unit_vector ( self ) Returns a vector with the same direction and unitary length. Return: carla.Vector3D squared_length ( self ) Computes the squared length of the vector. Return: float Dunder methods __add__ ( self , other = carla.Vector2D ) __eq__ ( self , other = carla.Vector2D ) Returns True if values for every axis are equal. Return: bool __mul__ ( self , other = carla.Vector2D ) __ne__ ( self , bool = carla.Vector2D ) Returns True if the value for any axis is different. Return: bool __str__ ( self ) Returns the axis values for the vector parsed as string. Return: str __sub__ ( self , other = carla.Vector2D ) __truediv__ ( self , other = carla.Vector2D ) carla.Vector3D Helper class to perform 3D operations. Instance Variables x ( float ) X-axis value. y ( float ) Y-axis value. z ( float ) Z-axis value. Methods __init__ ( self , x =0.0 , y =0.0 , z =0.0 ) Parameters: x ( float ) y ( float ) z ( float ) cross ( self , vector ) Computes the cross product between two vectors. Parameters: vector ( carla.Vector3D ) Return: carla.Vector3D distance ( self , vector ) Computes the distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_2d ( self , vector ) Computes the 2-dimensional distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_squared ( self , vector ) Computes the squared distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_squared_2d ( self , vector ) Computes the 2-dimensional squared distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float dot ( self , vector ) Computes the dot product between two vectors. Parameters: vector ( carla.Vector3D ) Return: float dot_2d ( self , vector ) Computes the 2-dimensional dot product between two vectors. Parameters: vector ( carla.Vector3D ) Return: float length ( self ) Computes the length of the vector. Return: float make_unit_vector ( self ) Returns a vector with the same direction and unitary length. Return: carla.Vector3D squared_length ( self ) Computes the squared length of the vector. Return: float Getters get_vector_angle ( self , vector ) Computes the angle between a pair of 3D vectors in radians. Parameters: vector ( carla.Vector3D ) Return: float Dunder methods __abs__ ( self ) Returns a Vector3D with the absolute value of the components x, y and z. Return: carla.Vector3D __add__ ( self , other = carla.Vector3D ) __eq__ ( self , other = carla.Vector3D ) Returns True if values for every axis are equal. Return: bool __mul__ ( self , other = carla.Vector3D ) __ne__ ( self , other = carla.Vector3D ) Returns True if the value for any axis is different. Return: bool __str__ ( self ) Returns the axis values for the vector parsed as string. Return: str __sub__ ( self , other = carla.Vector3D ) __truediv__ ( self , other = carla.Vector3D ) carla.Vehicle Inherited from carla.Actor One of the most important groups of actors in CARLA. These include any type of vehicle from cars to trucks, motorbikes, vans, bycicles and also official vehicles such as police cars. A wide set of these actors is provided in carla.BlueprintLibrary to facilitate differente requirements. Vehicles can be either manually controlled or set to an autopilot mode that will be conducted client-side by the traffic manager . Instance Variables bounding_box ( carla.BoundingBox ) Bounding box containing the geometry of the vehicle. Its location and rotation are relative to the vehicle it is attached to. Methods apply_ackermann_control ( self , control ) Applies an Ackermann control object on the next tick. Parameters: control ( carla.VehicleAckermannControl ) apply_ackermann_controller_settings ( self , settings ) Applies a new Ackermann control settings to this vehicle in the next tick. Parameters: settings ( carla.AckermannControllerSettings ) Warning: This method does call the simulator. apply_control ( self , control ) Applies a control object on the next tick, containing driving parameters such as throttle, steering or gear shifting. Parameters: control ( carla.VehicleControl ) apply_physics_control ( self , physics_control ) Applies a physics control object in the next tick containing the parameters that define the vehicle as a corporeal body. E.g.: moment of inertia, mass, drag coefficient and many more. Parameters: physics_control ( carla.VehiclePhysicsControl ) close_door ( self , door_idx ) Close the door door_idx if the vehicle has it. Use carla.VehicleDoor.All to close all available doors. Parameters: door_idx ( carla.VehicleDoor ) - door index. enable_carsim ( self , simfile_path ) Enables the CarSim physics solver for this particular vehicle. In order for this function to work, there needs to be a valid license manager running on the server side. The control inputs are redirected to CarSim which will provide the position and orientation of the vehicle for every frame. Parameters: simfile_path ( str ) - Path to the .simfile file with the parameters of the simulation. enable_chrono_physics ( self , max_substeps , max_substep_delta_time , vehicle_json , powertrain_json , tire_json , base_json_path ) Enables Chrono physics on a spawned vehicle. Parameters: max_substeps ( int ) - Max number of Chrono substeps. max_substep_delta_time ( int ) - Max size of substep. vehicle_json ( str ) - Path to vehicle json file relative to base_json_path . powertrain_json ( str ) - Path to powertrain json file relative to base_json_path . tire_json ( str ) - Path to tire json file relative to base_json_path . base_json_path ( str ) - Path to chrono/data/vehicle folder. E.g., /home/user/carla/Build/chrono-install/share/chrono/data/vehicle/ (the final / character is required). Note: Ensure that you have started the CARLA server with the ARGS=\"--chrono\" flag. You will not be able to use Chrono physics without this flag set. Warning: Collisions are not supported. When a collision is detected, physics will revert to the default CARLA physics. is_at_traffic_light ( self ) Vehicles will be affected by a traffic light when the light is red and the vehicle is inside its bounding box. The client returns whether a traffic light is affecting this vehicle according to last tick (it does not call the simulator). Return: bool open_door ( self , door_idx ) Open the door door_idx if the vehicle has it. Use carla.VehicleDoor.All to open all available doors. Parameters: door_idx ( carla.VehicleDoor ) - door index. show_debug_telemetry ( self , enabled =True ) Enables or disables the telemetry on this vehicle. This shows information about the vehicles current state and forces applied to it in the spectator window. Only information for one vehicle can be shown so that, if you enable a second one, the previous will be automatically disabled. Parameters: enabled ( bool ) use_carsim_road ( self , enabled ) Enables or disables the usage of CarSim vs terrain file specified in the .simfile . By default this option is disabled and CarSim uses unreal engine methods to process the geometry of the scene. Parameters: enabled ( bool ) Getters get_ackermann_controller_settings ( self ) Returns the last Ackermann control settings applied to this vehicle. Return: carla.AckermannControllerSettings Warning: This method does call the simulator to retrieve the value. get_control ( self ) The client returns the control applied in the last tick. The method does not call the simulator. Return: carla.VehicleControl get_failure_state ( self ) Vehicle have failure states, to indicate that it is incapable of continuing its route. This function returns the vehicle's specific failure state, or in other words, the cause that resulted in it. Return: carla.VehicleFailureState get_light_state ( self ) Returns a flag representing the vehicle light state, this represents which lights are active or not. Return: carla.VehicleLightState Setter: carla.Vehicle.set_light_state get_physics_control ( self ) The simulator returns the last physics control applied to this vehicle. Return: carla.VehiclePhysicsControl Warning: This method does call the simulator to retrieve the value. get_speed_limit ( self ) The client returns the speed limit affecting this vehicle according to last tick (it does not call the simulator). The speed limit is updated when passing by a speed limit signal, so a vehicle might have none right after spawning. Return: float - km/h get_traffic_light ( self ) Retrieves the traffic light actor affecting this vehicle (if any) according to last tick. The method does not call the simulator. Return: carla.TrafficLight get_traffic_light_state ( self ) The client returns the state of the traffic light affecting this vehicle according to last tick. The method does not call the simulator. If no traffic light is currently affecting the vehicle, returns green . Return: carla.TrafficLightState get_wheel_steer_angle ( self , wheel_location ) Returns the physics angle in degrees of a vehicle's wheel. Parameters: wheel_location ( carla.VehicleWheelLocation ) Return: float Note: Returns the angle based on the physics of the wheel, not the visual angle. Setters set_autopilot ( self , enabled =True , port =8000 ) Registers or deletes the vehicle from a Traffic Manager's list. When True , the Traffic Manager passed as parameter will move the vehicle around. The autopilot takes place client-side. Parameters: enabled ( bool ) port ( uint16 ) - The port of the TM-Server where the vehicle is to be registered or unlisted. If None is passed, it will consider a TM at default port 8000 . set_light_state ( self , light_state ) Sets the light state of a vehicle using a flag that represents the lights that are on and off. Parameters: light_state ( carla.VehicleLightState ) Getter: carla.Vehicle.get_light_state set_wheel_steer_direction ( self , wheel_location , angle_in_deg ) snippet \u2192 Sets the angle of a vehicle's wheel visually. Parameters: wheel_location ( carla.VehicleWheelLocation ) angle_in_deg ( float ) Warning: Does not affect the physics of the vehicle. Dunder methods __str__ ( self ) carla.VehicleAckermannControl Manages the basic movement of a vehicle using Ackermann driving controls. Instance Variables steer ( float ) Desired steer (rad). Positive value is to the right. Default is 0.0. steer_speed ( float ) Steering velocity (rad/s). Zero steering angle velocity means change the steering angle as quickly as possible. Default is 0.0. speed ( float ) Desired speed (m/s). Default is 0.0. acceleration ( float ) Desired acceleration (m/s2) Default is 0.0. jerk ( float ) Desired jerk (m/s3). Default is 0.0. Methods __init__ ( self , steer =0.0 , steer_speed =0.0 , speed =0.0 , acceleration =0.0 , jerk =0.0 ) Parameters: steer ( float ) steer_speed ( float ) speed ( float ) acceleration ( float ) jerk ( float ) Dunder methods __eq__ ( self , other = carla.AckermannVehicleControl ) __ne__ ( self , other = carla.AckermannVehicleControl ) __str__ ( self ) carla.VehicleControl Manages the basic movement of a vehicle using typical driving controls. Instance Variables throttle ( float ) A scalar value to control the vehicle throttle [0.0, 1.0]. Default is 0.0. steer ( float ) A scalar value to control the vehicle steering [-1.0, 1.0]. Default is 0.0. brake ( float ) A scalar value to control the vehicle brake [0.0, 1.0]. Default is 0.0. hand_brake ( bool ) Determines whether hand brake will be used. Default is False . reverse ( bool ) Determines whether the vehicle will move backwards. Default is False . manual_gear_shift ( bool ) Determines whether the vehicle will be controlled by changing gears manually. Default is False . gear ( int ) States which gear is the vehicle running on. Methods __init__ ( self , throttle =0.0 , steer =0.0 , brake =0.0 , hand_brake =False , reverse =False , manual_gear_shift =False , gear =0 ) Parameters: throttle ( float ) - Scalar value between [0.0,1.0]. steer ( float ) - Scalar value between [0.0,1.0]. brake ( float ) - Scalar value between [0.0,1.0]. hand_brake ( bool ) reverse ( bool ) manual_gear_shift ( bool ) gear ( int ) Dunder methods __eq__ ( self , other = carla.VehicleControl ) __ne__ ( self , other = carla.VehicleControl ) __str__ ( self ) carla.VehicleDoor Possible index representing the possible doors that can be open. Notice that not all possible doors are able to open in some vehicles. Instance Variables FL Front left door. FR Front right door. RL Back left door. RR Back right door. All Represents all doors. carla.VehicleFailureState Enum containing the different failure states of a vehicle, from which the it cannot recover. These are returned by get_failure_state() and only Rollover is currently implemented. Instance Variables NONE Rollover Engine TirePuncture carla.VehicleLightState Class that recaps the state of the lights of a vehicle, these can be used as a flags. E.g: VehicleLightState.HighBeam & VehicleLightState.Brake will return True when both are active. Lights are off by default in any situation and should be managed by the user via script. The blinkers blink automatically. Warning: Right now, not all vehicles have been prepared to work with this functionality, this will be added to all of them in later updates . Instance Variables NONE All lights off. Position LowBeam HighBeam Brake RightBlinker LeftBlinker Reverse Fog Interior Special1 This is reserved for certain vehicles that can have special lights, like a siren. Special2 This is reserved for certain vehicles that can have special lights, like a siren. All All lights on. carla.VehiclePhysicsControl Summarizes the parameters that will be used to simulate a carla.Vehicle as a physical object. The specific settings for the wheels though are stipulated using carla.WheelPhysicsControl . Instance Variables torque_curve ( list( carla.Vector2D ) ) Curve that indicates the torque measured in Nm for a specific RPM of the vehicle's engine. max_rpm ( float ) The maximum RPM of the vehicle's engine. moi ( float - kg*m 2 ) The moment of inertia of the vehicle's engine. damping_rate_full_throttle ( float ) Damping ratio when the throttle is maximum. damping_rate_zero_throttle_clutch_engaged ( float ) Damping ratio when the throttle is zero with clutch engaged. damping_rate_zero_throttle_clutch_disengaged ( float ) Damping ratio when the throttle is zero with clutch disengaged. use_gear_autobox ( bool ) If True , the vehicle will have an automatic transmission. gear_switch_time ( float - seconds ) Switching time between gears. clutch_strength ( float - kg*m 2 /s ) Clutch strength of the vehicle. final_ratio ( float ) Fixed ratio from transmission to wheels. forward_gears ( list( carla.GearPhysicsControl ) ) List of objects defining the vehicle's gears. mass ( float - kilograms ) Mass of the vehicle. drag_coefficient ( float ) Drag coefficient of the vehicle's chassis. center_of_mass ( carla.Vector3D - meters ) Center of mass of the vehicle. steering_curve ( list( carla.Vector2D ) ) Curve that indicates the maximum steering for a specific forward speed. use_sweep_wheel_collision ( bool ) Enable the use of sweep for wheel collision. By default, it is disabled and it uses a simple raycast from the axis to the floor for each wheel. This option provides a better collision model in which the full volume of the wheel is checked against collisions. wheels ( list( carla.WheelPhysicsControl ) ) List of wheel physics objects. This list should have 4 elements, where index 0 corresponds to the front left wheel, index 1 corresponds to the front right wheel, index 2 corresponds to the back left wheel and index 3 corresponds to the back right wheel. For 2 wheeled vehicles, set the same values for both front and back wheels. Methods __init__ ( self , torque_curve =[[0.0, 500.0], [5000.0, 500.0]] , max_rpm =5000.0 , moi =1.0 , damping_rate_full_throttle =0.15 , damping_rate_zero_throttle_clutch_engaged =2.0 , damping_rate_zero_throttle_clutch_disengaged =0.35 , use_gear_autobox =True , gear_switch_time =0.5 , clutch_strength =10.0 , final_ratio =4.0 , forward_gears =list() , drag_coefficient =0.3 , center_of_mass =[0.0, 0.0, 0.0] , steering_curve =[[0.0, 1.0], [10.0, 0.5]] , wheels =list() , use_sweep_wheel_collision =False , mass =1000.0 ) VehiclePhysicsControl constructor. Parameters: torque_curve ( list( carla.Vector2D ) ) max_rpm ( float ) moi ( float - kg*m 2 ) damping_rate_full_throttle ( float ) damping_rate_zero_throttle_clutch_engaged ( float ) damping_rate_zero_throttle_clutch_disengaged ( float ) use_gear_autobox ( bool ) gear_switch_time ( float - seconds ) clutch_strength ( float - kg*m 2 /s ) final_ratio ( float ) forward_gears ( list( carla.GearPhysicsControl ) ) drag_coefficient ( float ) center_of_mass ( carla.Vector3D ) steering_curve ( carla.Vector2D ) wheels ( list( carla.WheelPhysicsControl ) ) use_sweep_wheel_collision ( bool ) mass ( float - kilograms ) Dunder methods __eq__ ( self , other = carla.VehiclePhysicsControl ) __ne__ ( self , other = carla.VehiclePhysicsControl ) __str__ ( self ) carla.VehicleWheelLocation enum representing the position of each wheel on a vehicle. Used to identify the target wheel when setting an angle in carla.Vehicle.set_wheel_steer_direction or carla.Vehicle.get_wheel_steer_angle . Instance Variables FL_Wheel Front left wheel of a 4 wheeled vehicle. FR_Wheel Front right wheel of a 4 wheeled vehicle. BL_Wheel Back left wheel of a 4 wheeled vehicle. BR_Wheel Back right wheel of a 4 wheeled vehicle. Front_Wheel Front wheel of a 2 wheeled vehicle. Back_Wheel Back wheel of a 2 wheeled vehicle. carla.Walker Inherited from carla.Actor This class inherits from the carla.Actor and defines pedestrians in the simulation. Walkers are a special type of actor that can be controlled either by an AI ( carla.WalkerAIController ) or manually via script, using a series of carla.WalkerControl to move these and their skeletons. Methods apply_control ( self , control ) On the next tick, the control will move the walker in a certain direction with a certain speed. Jumps can be commanded too. Parameters: control ( carla.WalkerControl ) blend_pose ( self , blend_value ) Set the blending value of the custom pose with the animation. The values can be: 0: will show only the animation 1: will show only the custom pose (set by the user with set_bones()) any other: will interpolate all the bone positions between animation and the custom pose. Parameters: blend_value ( float - value from 0 to 1 with the blend percentage ) hide_pose ( self ) Hide the custom pose and show the animation (same as calling blend_pose(0)). show_pose ( self ) Show the custom pose and hide the animation (same as calling blend_pose(1)). Getters get_bones ( self ) Return the structure with all the bone transformations from the actor. For each bone, we get the name and its transform in three different spaces: name: bone name world: transform in world coordinates component: transform based on the pivot of the actor relative: transform based on the bone parent. Return: carla.WalkerBoneControlOut Setter: carla.Walker.set_bones get_control ( self ) The client returns the control applied to this walker during last tick. The method does not call the simulator. Return: carla.WalkerControl get_pose_from_animation ( self ) Make a copy of the current animation frame as the custom pose. Initially the custom pose is the neutral pedestrian pose. Setters set_bones ( self , bones ) Set the bones of the actor. For each bone we want to set we use a relative transform. Only the bones in this list will be set. For each bone you need to setup this info: name: bone name relative: transform based on the bone parent. Parameters: bones ( carla.WalkerBoneControlIn - list of pairs (bone_name, transform) for the bones that we want to set ) Getter: carla.Walker.get_bones Dunder methods __str__ ( self ) carla.WalkerAIController Inherited from carla.Actor Class that conducts AI control for a walker. The controllers are defined as actors, but they are quite different from the rest. They need to be attached to a parent actor during their creation, which is the walker they will be controlling (take a look at carla.World if you are yet to learn on how to spawn actors). They also need for a special blueprint (already defined in carla.BlueprintLibrary as \"controller.ai.walker\"). This is an empty blueprint, as the AI controller will be invisible in the simulation but will follow its parent around to dictate every step of the way. Methods go_to_location ( self , destination ) Sets the destination that the pedestrian will reach. Parameters: destination ( carla.Location - meters ) start ( self ) Enables AI control for its parent walker. stop ( self ) snippet \u2192 Disables AI control for its parent walker. Setters set_max_speed ( self , speed =1.4 ) Sets a speed for the walker in meters per second. Parameters: speed ( float - m/s ) - An easy walking speed is set by default. Dunder methods __str__ ( self ) carla.WalkerBoneControlIn This class grants bone specific manipulation for walker. The skeletons of walkers have been unified for clarity and the transform applied to each bone are always relative to its parent. Take a look here to learn more on how to create a walker and define its movement. Instance Variables bone_transforms ( list([name,transform]) ) List with the data for each bone we want to set: name: bone name relative: transform based on the bone parent. Methods __init__ ( self , list(name,transform) ) Initializes an object containing moves to be applied on tick. These are listed with the name of the bone and the transform that will be applied to it. Parameters: list(name,transform) ( tuple ) Dunder methods __str__ ( self ) carla.WalkerBoneControlOut This class is used to return all bone positions of a pedestrian. For each bone we get its name and its transform in three different spaces (world, actor and relative). Instance Variables bone_transforms ( list([name,world, actor, relative]) ) List of one entry per bone with this information: name: bone name world: transform in world coordinates component: transform based on the pivot of the actor relative: transform based on the bone parent. Methods Dunder methods __str__ ( self ) carla.WalkerControl This class defines specific directions that can be commanded to a carla.Walker to control it via script. AI control can be settled for walkers, but the control used to do so is carla.WalkerAIController . Instance Variables direction ( carla.Vector3D ) Vector using global coordinates that will correspond to the direction of the walker. speed ( float - m/s ) A scalar value to control the walker's speed. jump ( bool ) If True , the walker will perform a jump. Methods __init__ ( self , direction =[1.0, 0.0, 0.0] , speed =0.0 , jump =False ) Parameters: direction ( carla.Vector3D ) speed ( float - m/s ) jump ( bool ) Dunder methods __eq__ ( self , other = carla.WalkerControl ) Compares every variable with other and returns True if these are all the same. __ne__ ( self , other = carla.WalkerControl ) Compares every variable with other and returns True if any of these differ. __str__ ( self ) carla.Waypoint Waypoints in CARLA are described as 3D directed points. They have a carla.Transform which locates the waypoint in a road and orientates it according to the lane. They also store the road information belonging to said point regarding its lane and lane markings. All the information regarding waypoints and the waypoint API is retrieved as provided by the OpenDRIVE file. Once the client asks for the map object to the server, no longer communication will be needed. Instance Variables id ( int ) The identifier is generated using a hash combination of the road , section , lane and s values that correspond to said point in the OpenDRIVE geometry. The s precision is set to 2 centimeters, so 2 waypoints closer than 2 centimeters in the same road, section and lane, will have the same identificator. transform ( carla.Transform ) Position and orientation of the waypoint according to the current lane information. This data is computed the first time it is accessed. It is not created right away in order to ease computing costs when lots of waypoints are created but their specific transform is not needed. road_id ( int ) OpenDRIVE road's id. section_id ( int ) OpenDRIVE section's id, based on the order that they are originally defined. is_junction ( bool ) True if the current Waypoint is on a junction as defined by OpenDRIVE. junction_id ( int ) OpenDRIVE junction's id. For more information refer to OpenDRIVE documentation . lane_id ( int ) OpenDRIVE lane's id, this value can be positive or negative which represents the direction of the current lane with respect to the road. For more information refer to OpenDRIVE documentation . s ( float ) OpenDRIVE s value of the current position. lane_width ( float ) Horizontal size of the road at current s . lane_change ( carla.LaneChange ) Lane change definition of the current Waypoint's location, based on the traffic rules defined in the OpenDRIVE file. It states if a lane change can be done and in which direction. lane_type ( carla.LaneType ) The lane type of the current Waypoint, based on OpenDRIVE 1.4 standard. right_lane_marking ( carla.LaneMarking ) The right lane marking information based on the direction of the Waypoint. left_lane_marking ( carla.LaneMarking ) The left lane marking information based on the direction of the Waypoint. Methods next ( self , distance ) Returns a list of waypoints at a certain approximate distance from the current one. It takes into account the road and its possible deviations without performing any lane change and returns one waypoint per option. The list may be empty if the lane is not connected to any other at the specified distance. Parameters: distance ( float - meters ) - The approximate distance where to get the next waypoints. Return: list( carla.Waypoint ) next_until_lane_end ( self , distance ) Returns a list of waypoints from this to the end of the lane separated by a certain distance . Parameters: distance ( float - meters ) - The approximate distance between waypoints. Return: list( carla.Waypoint ) previous ( self , distance ) This method does not return the waypoint previously visited by an actor, but a list of waypoints at an approximate distance but in the opposite direction of the lane. Similarly to next() , it takes into account the road and its possible deviations without performing any lane change and returns one waypoint per option. The list may be empty if the lane is not connected to any other at the specified distance. Parameters: distance ( float - meters ) - The approximate distance where to get the previous waypoints. Return: list( carla.Waypoint ) previous_until_lane_start ( self , distance ) Returns a list of waypoints from this to the start of the lane separated by a certain distance . Parameters: distance ( float - meters ) - The approximate distance between waypoints. Return: list( carla.Waypoint ) Getters get_junction ( self ) If the waypoint belongs to a junction this method returns the associated junction object. Otherwise returns null. Return: carla.Junction get_landmarks ( self , distance , stop_at_junction =False ) Returns a list of landmarks in the road from the current waypoint until the specified distance. Parameters: distance ( float - meters ) - The maximum distance to search for landmarks from the current waypoint. stop_at_junction ( bool ) - Enables or disables the landmark search through junctions. Return: list( carla.Landmark ) get_landmarks_of_type ( self , distance , type , stop_at_junction =False ) Returns a list of landmarks in the road of a specified type from the current waypoint until the specified distance. Parameters: distance ( float - meters ) - The maximum distance to search for landmarks from the current waypoint. type ( str ) - The type of landmarks to search. stop_at_junction ( bool ) - Enables or disables the landmark search through junctions. Return: list( carla.Landmark ) get_left_lane ( self ) Generates a Waypoint at the center of the left lane based on the direction of the current Waypoint, taking into account if the lane change is allowed in this location. Will return None if the lane does not exist. Return: carla.Waypoint get_right_lane ( self ) Generates a waypoint at the center of the right lane based on the direction of the current waypoint, taking into account if the lane change is allowed in this location. Will return None if the lane does not exist. Return: carla.Waypoint Dunder methods __str__ ( self ) carla.WeatherParameters This class defines objects containing lighting and weather specifications that can later be applied in carla.World . So far, these conditions only intervene with sensor.camera.rgb . They neither affect the actor's physics nor other sensors. Each of these parameters acts indepently from the rest. Increasing the rainfall will not automatically create puddles nor change the road's humidity. That makes for a better customization but means that realistic conditions need to be scripted. However an example of dynamic weather conditions working realistically can be found here . Instance Variables cloudiness ( float ) Values range from 0 to 100, being 0 a clear sky and 100 one completely covered with clouds. precipitation ( float ) Rain intensity values range from 0 to 100, being 0 none at all and 100 a heavy rain. precipitation_deposits ( float ) Determines the creation of puddles. Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water. Puddles are created with static noise, meaning that they will always appear at the same locations. wind_intensity ( float ) Controls the strenght of the wind with values from 0, no wind at all, to 100, a strong wind. The wind does affect rain direction and leaves from trees, so this value is restricted to avoid animation issues. sun_azimuth_angle ( float - degrees ) The azimuth angle of the sun. Values range from 0 to 360. Zero is an origin point in a sphere determined by Unreal Engine. sun_altitude_angle ( float - degrees ) Altitude angle of the sun. Values range from -90 to 90 corresponding to midnight and midday each. fog_density ( float ) Fog concentration or thickness. It only affects the RGB camera sensor. Values range from 0 to 100. fog_distance ( float - meters ) Fog start distance. Values range from 0 to infinite. wetness ( float ) Wetness intensity. It only affects the RGB camera sensor. Values range from 0 to 100. fog_falloff ( float ) Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights. Corresponds to Fog Height Falloff in the UE docs. If the value is 0, the fog will be lighter than air, and will cover the whole scene. A value of 1 is approximately as dense as the air, and reaches normal-sized buildings. For values greater than 5, the air will be so dense that it will be compressed on ground level. scattering_intensity ( float ) Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution. mie_scattering_scale ( float ) Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution. rayleigh_scattering_scale ( float ) Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening. dust_storm ( float ) Determines the strength of the dust storm weather. Values range from 0 to 100. Methods __init__ ( self , cloudiness =0.0 , precipitation =0.0 , precipitation_deposits =0.0 , wind_intensity =0.0 , sun_azimuth_angle =0.0 , sun_altitude_angle =0.0 , fog_density =0.0 , fog_distance =0.0 , wetness =0.0 , fog_falloff =0.0 , scattering_intensity =0.0 , mie_scattering_scale =0.0 , rayleigh_scattering_scale =0.0331 ) Method to initialize an object defining weather conditions. This class has some presets for different noon and sunset conditions listed in a note below. Parameters: cloudiness ( float ) - 0 is a clear sky, 100 complete overcast. precipitation ( float ) - 0 is no rain at all, 100 a heavy rain. precipitation_deposits ( float ) - 0 means no puddles on the road, 100 means roads completely capped by rain. wind_intensity ( float ) - 0 is calm, 100 a strong wind. sun_azimuth_angle ( float - degrees ) - 0 is an arbitrary North, 180 its corresponding South. sun_altitude_angle ( float - degrees ) - 90 is midday, -90 is midnight. fog_density ( float ) - Concentration or thickness of the fog, from 0 to 100. fog_distance ( float - meters ) - Distance where the fog starts in meters. wetness ( float ) - Humidity percentages of the road, from 0 to 100. fog_falloff ( float ) - Density (specific mass) of the fog, from 0 to infinity. scattering_intensity ( float ) - Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution. mie_scattering_scale ( float ) - Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution. rayleigh_scattering_scale ( float ) - Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening. Note: ClearNoon, CloudyNoon, WetNoon, WetCloudyNoon, SoftRainNoon, MidRainyNoon, HardRainNoon, ClearSunset, CloudySunset, WetSunset, WetCloudySunset, SoftRainSunset, MidRainSunset, HardRainSunset. Dunder methods __eq__ ( self , other ) Returns True if both objects' variables are the same. Return: bool __ne__ ( self , other ) Returns True if both objects' variables are different. Return: bool __str__ ( self ) carla.WheelPhysicsControl Class that defines specific physical parameters for wheel objects that will be part of a carla.VehiclePhysicsControl to simulate vehicle it as a material object. Instance Variables tire_friction ( float ) A scalar value that indicates the friction of the wheel. damping_rate ( float ) Damping rate of the wheel. max_steer_angle ( float - degrees ) Maximum angle that the wheel can steer. radius ( float - centimeters ) Radius of the wheel. max_brake_torque ( float - N*m ) Maximum brake torque. max_handbrake_torque ( float - N*m ) Maximum handbrake torque. position ( carla.Vector3D ) World position of the wheel. This is a read-only parameter. long_stiff_value ( float - kg per radian ) Tire longitudinal stiffness per unit gravitational acceleration. Each vehicle has a custom value. lat_stiff_max_load ( float ) Maximum normalized tire load at which the tire can deliver no more lateral stiffness no matter how much extra load is applied to the tire. Each vehicle has a custom value. lat_stiff_value ( float ) Maximum stiffness per unit of lateral slip. Each vehicle has a custom value. Methods __init__ ( self , tire_friction =2.0 , damping_rate =0.25 , max_steer_angle =70.0 , radius =30.0 , max_brake_torque =1500.0 , max_handbrake_torque =3000.0 , position =(0.0,0.0,0.0) ) Parameters: tire_friction ( float ) damping_rate ( float ) max_steer_angle ( float - degrees ) radius ( float - centimerers ) max_brake_torque ( float - N*m ) max_handbrake_torque ( float - N*m ) position ( carla.Vector3D - meters ) Dunder methods __eq__ ( self , other = carla.WheelPhysicsControl ) __ne__ ( self , other = carla.WheelPhysicsControl ) __str__ ( self ) carla.World World objects are created by the client to have a place for the simulation to happen. The world contains the map we can see, meaning the asset, not the navigation map. Navigation maps are part of the carla.Map class. It also manages the weather and actors present in it. There can only be one world per simulation, but it can be changed anytime. Instance Variables id ( int ) The ID of the episode associated with this world. Episodes are different sessions of a simulation. These change everytime a world is disabled or reloaded. Keeping track is useful to avoid possible issues. debug ( carla.DebugHelper ) Responsible for creating different shapes for debugging. Take a look at its class to learn more about it. Methods apply_color_texture_to_object ( self , object_name , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to object_name . Parameters: object_name ( str ) material_parameter ( carla.MaterialParameter ) texture ( TextureColor ) apply_color_texture_to_objects ( self , objects_name_list , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to all objects in objects_name_list . Parameters: objects_name_list ( list(str) ) material_parameter ( carla.MaterialParameter ) texture ( TextureColor ) apply_float_color_texture_to_object ( self , object_name , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to object_name . Parameters: object_name ( str ) material_parameter ( carla.MaterialParameter ) texture ( TextureFloatColor ) apply_float_color_texture_to_objects ( self , objects_name_list , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to all objects in objects_name_list . Parameters: objects_name_list ( list(str) ) material_parameter ( carla.MaterialParameter ) texture ( TextureFloatColor ) apply_settings ( self , world_settings ) This method applies settings contained in an object to the simulation running and returns the ID of the frame they were implemented. Parameters: world_settings ( carla.WorldSettings ) Return: int Warning: If synchronous mode is enabled, and there is a Traffic Manager running, this must be set to sync mode too. Read this to learn how to do it. apply_textures_to_object ( self , object_name , diffuse_texture , emissive_texture , normal_texture , ao_roughness_metallic_emissive_texture ) Applies all texture fields in carla.MaterialParameter to the object object_name . Empty textures here will not be applied. Parameters: object_name ( str ) diffuse_texture ( TextureColor ) emissive_texture ( TextureFloatColor ) normal_texture ( TextureFloatColor ) ao_roughness_metallic_emissive_texture ( TextureFloatColor ) apply_textures_to_objects ( self , objects_name_list , diffuse_texture , emissive_texture , normal_texture , ao_roughness_metallic_emissive_texture ) Applies all texture fields in carla.MaterialParameter to all objects in objects_name_list . Empty textures here will not be applied. Parameters: objects_name_list ( list(str) ) diffuse_texture ( TextureColor ) emissive_texture ( TextureFloatColor ) normal_texture ( TextureFloatColor ) ao_roughness_metallic_emissive_texture ( TextureFloatColor ) cast_ray ( self , initial_location , final_location ) Casts a ray from the specified initial_location to final_location. The function then detects all geometries intersecting the ray and returns a list of carla.LabelledPoint in order. Parameters: initial_location ( carla.Location ) - The initial position of the ray. final_location ( carla.Location ) - The final position of the ray. Return: list( carla.LabelledPoint ) enable_environment_objects ( self , env_objects_ids , enable ) snippet \u2192 Enable or disable a set of EnvironmentObject identified by their id. These objects will appear or disappear from the level. Parameters: env_objects_ids ( set(int) ) - Set of EnvironmentObject ids to change. enable ( bool ) - State to be applied to all the EnvironmentObject of the set. freeze_all_traffic_lights ( self , frozen ) Freezes or unfreezes all traffic lights in the scene. Frozen traffic lights can be modified by the user but the time will not update them until unfrozen. Parameters: frozen ( bool ) ground_projection ( self , location , search_distance ) Projects the specified point downwards in the scene. The functions casts a ray from location in the direction (0,0,-1) (downwards) and returns a carla.LabelledPoint object with the first geometry this ray intersects (usually the ground). If no geometry is found in the search_distance range the function returns None . Parameters: location ( carla.Location ) - The point to be projected. search_distance ( float ) - The maximum distance to perform the projection. Return: carla.LabelledPoint load_map_layer ( self , map_layers ) snippet \u2192 \u52a0\u8f7d\u56fe\u5c42\u5230\u6307\u5b9a\u5c42\u6b21\u3002\u5982\u679c\u8be5\u5c42\u6b21\u5df2\u7ecf\u52a0\u8f7d\u5219\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u53c2\u6570\uff1a map_layers ( carla.MapLayer ) - \u52a0\u8f7d\u5230\u6307\u5b9a\u5c42\u6b21\u7684\u63a9\u819c\u3002 \u8b66\u544a\uff1a \u8fd9\u4ec5\u4ec5\u5f71\u54cd\u5206\u5c42\uff08Opt\uff09\u5730\u56fe\u3002\u6700\u5c0f\u5e03\u5c40\u5305\u62ec\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u3002 on_tick ( self , callback ) \u6b64\u65b9\u6cd5\u7528\u4e8e __\u5f02\u6b65\u6a21\u5f0f \u3002\u5b83\u4ece\u5ba2\u6237\u7aef\u5b9a\u4e49\u7684 callback \u51fd\u6570\u542f\u52a8\u56de\u8c03\uff0c\u5e76\u8fd4\u56de\u56de\u8c03\u7684 ID\u3002\u6bcf\u5f53\u670d\u52a1\u5668\u53d1\u51fa\u65f6\u6ef4\u7b54\u4fe1\u53f7\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002\u5b83\u9700\u8981\u4e00\u4e2a carla.WorldSnapshot \u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u53ef\u4ee5\u4ece wait_for_tick() \u83b7\u5f97\u3002\u4f7f\u7528 remove_on_tick() \u6765\u505c\u6b62\u56de\u8c03\u3002 \u53c2\u6570\uff1a callback ( carla.WorldSnapshot ) - \u5c06\u5feb\u7167\u4f5c\u4e3a\u5f3a\u5236\u53c2\u6570\u7684\u51fd\u6570\uff0c\u5f53\u5ba2\u6237\u7aef\u6536\u5230\u6ef4\u7b54\u4fe1\u53f7\u65f6\u5c06\u8c03\u7528\u8be5\u51fd\u6570\u3002 Return: int project_point ( self , location , direction , search_distance ) Projects the specified point to the desired direction in the scene. The functions casts a ray from location in a direction and returns a carla.Labelled object with the first geometry this ray intersects. If no geometry is found in the search_distance range the function returns None . Parameters: location ( carla.Location ) - The point to be projected. direction ( carla.Vector3D ) - The direction of projection. search_distance ( float ) - The maximum distance to perform the projection. Return: carla.LabelledPoint remove_on_tick ( self , callback_id ) Stops the callback for callback_id started with on_tick() . Parameters: callback_id ( callback ) - The callback to be removed. The ID is returned when creating the callback. reset_all_traffic_lights ( self ) Resets the cycle of all traffic lights in the map to the initial state. spawn_actor ( self , blueprint , transform , attach_to =None , attachment =Rigid ) snippet \u2192 The method will create, return and spawn an actor into the world. The actor will need an available blueprint to be created and a transform (location and rotation). It can also be attached to a parent with a certain attachment type. Parameters: blueprint ( carla.ActorBlueprint ) - The reference from which the actor will be created. transform ( carla.Transform ) - Contains the location and orientation the actor will be spawned with. attach_to ( carla.Actor ) - The parent object that the spawned actor will follow around. attachment ( carla.AttachmentType ) - Determines how fixed and rigorous should be the changes in position according to its parent object. Return: carla.Actor tick ( self , seconds =10.0 ) \u8be5\u65b9\u6cd5\u7528\u4e8e \u540c\u6b65 \u6a21\u5f0f \uff0c\u5373\u670d\u52a1\u5668\u5728\u8ba1\u7b97\u4e0b\u4e00\u5e27\u4e4b\u524d\u7b49\u5f85\u5ba2\u6237\u7aef\u5ba2\u6237\u7aef\u6ef4\u7b54\u4fe1\u53f7\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\uff0c\u5e76\u8ba9\u4f4d\u4e8e\u670d\u52a1\u5668\u3002\u5b83\u8fd4\u56de\u7531\u670d\u52a1\u5668\u8ba1\u7b97\u7684\u65b0\u5e27ID\u3002 \u53c2\u6570\uff1a seconds ( float - \u79d2 ) - \u670d\u52a1\u5668\u5e94\u8be5\u7b49\u5f85\u6ef4\u7b54\u4fe1\u53f7\u7684\u6700\u5927\u65f6\u95f4\u3002\u5b83\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a 10.0 \u3002 \u8fd4\u56de\uff1a int \u6ce8\u610f\uff1a \u5982\u679c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u6ca1\u6709\u6536\u5230\u6ef4\u7b54\u4fe1\u53f7\uff0c\u6a21\u62df\u5c06\u51bb\u7ed3\u3002\u6b64\u5916\uff0c\u5982\u679c\u4ece\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u8bb8\u591a\u6ef4\u7b54\u4fe1\u53f7\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u540c\u6b65\u95ee\u9898\u3002\u8bf7\u9605\u8bfb\u6709\u5173 \u540c\u6b65\u6a21\u5f0f \u7684\u6587\u6863\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 try_spawn_actor ( self , blueprint , transform , attach_to =None , attachment =Rigid ) \u548c spawn_actor() \u4e00\u6837\uff0c\u4f46\u662f\u5355\u5931\u8d25\u65f6\u5019\u8fd4\u56de None \u800c\u4e0d\u662f\u629b\u51fa\u5f02\u5e38\u3002 \u53c2\u6570\uff1a blueprint ( carla.ActorBlueprint ) - \u5c06\u4ece\u4e2d\u521b\u5efa\u53c2\u4e0e\u8005\u7684\u5f15\u7528\u3002 transform ( carla.Transform ) - \u5305\u542b\u53c2\u4e0e\u8005\u5c06\u4f7f\u7528\u7684\u4f4d\u7f6e\u548c\u671d\u5411\u3002 attach_to ( carla.Actor ) - \u6d3e\u751f\u7684\u53c2\u4e0e\u8005\u5c06\u8ddf\u968f\u7684\u7236\u5bf9\u8c61\u3002 attachment ( carla.AttachmentType ) - \u6839\u636e\u5176\u7236\u5bf9\u8c61\u786e\u5b9a\u4f4d\u7f6e\u66f4\u6539\u7684\u56fa\u5b9a\u548c\u4e25\u683c\u7a0b\u5ea6\u3002 \u8fd4\u56de\uff1a carla.Actor unload_map_layer ( self , map_layers ) snippet \u2192 \u5c06\u9009\u5b9a\u7684\u56fe\u5c42\u5378\u8f7d\u5230\u6307\u5b9a\u5c42\u6b21\u3002\u5982\u679c\u5c42\u5df2\u7ecf\u5378\u8f7d\uff0c\u5219\u8c03\u7528\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u53c2\u6570: map_layers ( carla.MapLayer ) - \u8981\u5378\u8f7d\u56fe\u5c42\u7684\u63a9\u819c\u3002 \u8b66\u544a: \u8fd9\u4ec5\u4ec5\u5f71\u54cd\u5206\u5c42\uff08Opt\uff09\u5730\u56fe\u3002\u6700\u5c0f\u5e03\u5c40\u5305\u62ec\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u3002 wait_for_tick ( self , seconds =10.0 ) This method is used in asynchronous mode . It makes the client wait for a server tick. When the next frame is computed, the server will tick and return a snapshot describing the new state of the world. Parameters: seconds ( float - seconds ) - Maximum time the server should wait for a tick. It is set to 10.0 by default. Return: carla.WorldSnapshot Getters get_actor ( self , actor_id ) Looks up for an actor by ID and returns None if not found. Parameters: actor_id ( int ) Return: carla.Actor get_actors ( self , actor_ids =None ) Retrieves a list of carla.Actor elements, either using a list of IDs provided or just listing everyone on stage. If an ID does not correspond with any actor, it will be excluded from the list returned, meaning that both the list of IDs and the list of actors may have different lengths. Parameters: actor_ids ( list ) - The IDs of the actors being searched. By default it is set to None and returns every actor on scene. Return: carla.ActorList get_blueprint_library ( self ) Returns a list of actor blueprints available to ease the spawn of these into the world. Return: carla.BlueprintLibrary get_environment_objects ( self , object_type =Any ) Returns a list of EnvironmentObject with the requested semantic tag. The method returns all the EnvironmentObjects in the level by default, but the query can be filtered by semantic tags with the argument object_type . Parameters: object_type ( carla.CityObjectLabel ) - Semantic tag of the EnvironmentObjects that are returned. Return: array( carla.EnvironmentObject ) get_level_bbs ( self , actor_type =Any ) Returns an array of bounding boxes with location and rotation in world space. The method returns all the bounding boxes in the level by default, but the query can be filtered by semantic tags with the argument actor_type . Parameters: actor_type ( carla.CityObjectLabel ) - Semantic tag of the elements contained in the bounding boxes that are returned. Return: array( carla.BoundingBox ) get_lightmanager ( self ) Returns an instance of carla.LightManager that can be used to handle the lights in the scene. Return: carla.LightManager get_map ( self ) Asks the server for the XODR containing the map file, and returns this parsed as a carla.Map . Return: carla.Map Warning: This method does call the simulation. It is expensive, and should only be called once. get_names_of_all_objects ( self ) Returns a list of the names of all objects in the scene that can be painted with the apply texture functions. Return: list(str) get_random_location_from_navigation ( self ) This can only be used with walkers. It retrieves a random location to be used as a destination using the go_to_location() method in carla.WalkerAIController . This location will be part of a sidewalk. Roads, crosswalks and grass zones are excluded. The method does not take into consideration locations of existing actors so if a collision happens when trying to spawn an actor, it will return an error. Take a look at generate_traffic.py for an example. Return: carla.Location get_settings ( self ) Returns an object containing some data about the simulation such as synchrony between client and server or rendering mode. Return: carla.WorldSettings get_snapshot ( self ) Returns a snapshot of the world at a certain moment comprising all the information about the actors. Return: carla.WorldSnapshot get_spectator ( self ) snippet \u2192 Returns the spectator actor. The spectator is a special type of actor created by Unreal Engine, usually with ID=0, that acts as a camera and controls the view in the simulator window. Return: carla.Actor get_traffic_light ( self , landmark ) Provided a landmark, returns the traffic light object it describes. Parameters: landmark ( carla.Landmark ) - The landmark object describing a traffic light. Return: carla.TrafficLight get_traffic_light_from_opendrive_id ( self , traffic_light_id ) Returns the traffic light actor corresponding to the indicated OpenDRIVE id. Parameters: traffic_light_id ( str ) - The OpenDRIVE id. Return: carla.TrafficLight get_traffic_lights_from_waypoint ( self , waypoint , distance ) This function performs a search along the road in front of the specified waypoint and returns a list of traffic light actors found in the specified search distance. Parameters: waypoint ( carla.Waypoint ) - The input waypoint. distance ( float ) - Search distance. Return: list( carla.TrafficLight ) get_traffic_lights_in_junction ( self , junction_id ) Returns the list of traffic light actors affecting the junction indicated in junction_id . Parameters: junction_id ( int ) - The id of the junction. Return: list( carla.TrafficLight ) get_traffic_sign ( self , landmark ) Provided a landmark, returns the traffic sign object it describes. Parameters: landmark ( carla.Landmark ) - The landmark object describing a traffic sign. Return: carla.TrafficSign get_vehicles_light_states ( self ) Returns a dict where the keys are carla.Actor IDs and the values are carla.VehicleLightState of that vehicle. Return: dict get_weather ( self ) Retrieves an object containing weather parameters currently active in the simulation, mainly cloudiness, precipitation, wind and sun position. Return: carla.WeatherParameters Setter: carla.World.set_weather Setters set_pedestrians_cross_factor ( self , percentage ) Parameters: percentage ( float ) - Sets the percentage of pedestrians that can walk on the road or cross at any point on the road. Value should be between 0.0 and 1.0 . For example, a value of 0.1 would allow 10% of pedestrians to walk on the road. Default is 0.0 . Note: Should be set before pedestrians are spawned. set_pedestrians_seed ( self , seed ) Parameters: seed ( int ) - Sets the seed to use for any random number generated in relation to pedestrians. Note: Should be set before pedestrians are spawned. If you want to repeat the same exact bodies (blueprint) for each pedestrian, then use the same seed in the Python code (where the blueprint is choosen randomly) and here, otherwise the pedestrians will repeat the same paths but the bodies will be different. set_weather ( self , weather ) Changes the weather parameteres ruling the simulation to another ones defined in an object. Parameters: weather ( carla.WeatherParameters ) - New conditions to be applied. Getter: carla.World.get_weather Dunder methods __str__ ( self ) The content of the world is parsed and printed as a brief report of its current state. Return: string carla.WorldSettings The simulation has some advanced configuration options that are contained in this class and can be managed using carla.World and its methods. These allow the user to choose between client-server synchrony/asynchrony, activation of \"no rendering mode\" and either if the simulation should run with a fixed or variable time-step. Check this out if you want to learn about it. Instance Variables synchronous_mode ( bool ) States the synchrony between client and server. When set to true, the server will wait for a client tick in order to move forward. It is false by default. no_rendering_mode ( bool ) When enabled, the simulation will run no rendering at all. This is mainly used to avoid overhead during heavy traffic simulations. It is false by default. fixed_delta_seconds ( float ) Ensures that the time elapsed between two steps of the simulation is fixed. Set this to 0.0 to work with a variable time-step, as happens by default. substepping ( bool ) Enable the physics substepping. This option allows computing some physics substeps between two render frames. If synchronous mode is set, the number of substeps and its time interval are fixed and computed are so they fulfilled the requirements of carla.WorldSettings.max_substep and carla.WorldSettings.max_substep_delta_time . These last two parameters need to be compatible with carla.WorldSettings.fixed_delta_seconds . Enabled by default. max_substep_delta_time ( float ) Maximum delta time of the substeps. If the carla.WorldSettingsmax_substep is high enough, the substep delta time would be always below or equal to this value. By default, the value is set to 0.01. max_substeps ( int ) The maximum number of physics substepping that are allowed. By default, the value is set to 10. max_culling_distance ( float ) Configure the max draw distance for each mesh of the level. deterministic_ragdolls ( bool ) Defines wether to use deterministic physics for pedestrian death animations or physical ragdoll simulation. When enabled, pedestrians have less realistic death animation but ensures determinism. When disabled, pedestrians are simulated as ragdolls with more realistic simulation and collision but no determinsm can be ensured. tile_stream_distance ( float ) Used for large maps only. Configures the maximum distance from the hero vehicle to stream tiled maps. Regions of the map within this range will be visible (and capable of simulating physics). Regions outside this region will not be loaded. actor_active_distance ( float ) Used for large maps only. Configures the distance from the hero vehicle to convert actors to dormant. Actors within this range will be active, and actors outside will become dormant. spectator_as_ego ( bool ) Used for large maps only. Defines the influence of the spectator on tile loading in Large Maps. By default, the spectator will provoke loading of neighboring tiles in the absence of an ego actor. This might be inconvenient for applications that immediately spawn an ego actor. Methods __init__ ( self , synchronous_mode =False , no_rendering_mode =False , fixed_delta_seconds =0.0 , max_culling_distance =0.0 , deterministic_ragdolls =False , tile_stream_distance =3000 , actor_active_distance =2000 , spectator_as_ego =True ) Creates an object containing desired settings that could later be applied through carla.World and its method apply_settings() . Parameters: synchronous_mode ( bool ) - Set this to true to enable client-server synchrony. no_rendering_mode ( bool ) - Set this to true to completely disable rendering in the simulation. fixed_delta_seconds ( float - seconds ) - Set a fixed time-step in between frames. 0.0 means variable time-step and it is the default mode. max_culling_distance ( float - meters ) - Configure the max draw distance for each mesh of the level. deterministic_ragdolls ( bool ) - Defines wether to use deterministic physics or ragdoll simulation for pedestrian deaths. tile_stream_distance ( float - meters ) - Used for large maps only. Configures the maximum distance from the hero vehicle to stream tiled maps. actor_active_distance ( float - meters ) - Used for large maps only. Configures the distance from the hero vehicle to convert actors to dormant. spectator_as_ego ( bool ) - Used for large maps only. Defines the influence of the spectator on tile loading in Large Maps. Dunder methods __eq__ ( self , other = carla.WorldSettings ) Returns True if both objects' variables are the same. Return: bool __ne__ ( self , other = carla.WorldSettings ) Returns True if both objects' variables are different. Return: bool __str__ ( self ) Parses the established settings to a string and shows them in command line. Return: str carla.WorldSnapshot This snapshot comprises all the information for every actor on scene at a certain moment of time. It creates and gives acces to a data structure containing a series of carla.ActorSnapshot . The client recieves a new snapshot on every tick that cannot be stored. Instance Variables id ( int ) A value unique for every snapshot to differentiate them. frame ( int ) Simulation frame in which the snapshot was taken. timestamp ( carla.Timestamp - seconds ) Precise moment in time when snapshot was taken. This class works in seconds as given by the operative system. Methods find ( self , actor_id ) Given a certain actor ID, returns its corresponding snapshot or None if it is not found. Parameters: actor_id ( int ) Return: carla.ActorSnapshot has_actor ( self , actor_id ) Given a certain actor ID, checks if there is a snapshot corresponding it and so, if the actor was present at that moment. Parameters: actor_id ( int ) Return: bool Dunder methods __eq__ ( self , other = carla.WorldSnapshot ) Returns True if both timestamp are the same. Return: bool __iter__ ( self ) Iterate over the carla.ActorSnapshot stored in the snapshot. __len__ ( self ) Returns the amount of carla.ActorSnapshot present in this snapshot. Return: int __ne__ ( self , other = carla.WorldSnapshot ) Returns True if both timestamp are different. Return: bool command.ApplyAngularImpulse Command adaptation of add_angular_impulse() in carla.Actor . Applies an angular impulse to an actor. Instance Variables actor_id ( int ) Actor affected by the command. impulse ( carla.Vector3D - degrees*s ) Angular impulse applied to the actor. Methods __init__ ( self , actor , impulse ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. impulse ( carla.Vector3D - degrees*s ) command.ApplyForce Command adaptation of add_force() in carla.Actor . Applies a force to an actor. Instance Variables actor_id ( int ) Actor affected by the command. force ( carla.Vector3D - N ) Force applied to the actor over time. Methods __init__ ( self , actor , force ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. force ( carla.Vector3D - N ) command.ApplyImpulse Command adaptation of add_impulse() in carla.Actor . Applies an impulse to an actor. Instance Variables actor_id ( int ) Actor affected by the command. impulse ( carla.Vector3D - N*s ) Impulse applied to the actor. Methods __init__ ( self , actor , impulse ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. impulse ( carla.Vector3D - N*s ) command.ApplyTargetAngularVelocity Command adaptation of set_target_angular_velocity() in carla.Actor . Sets the actor's angular velocity vector. Instance Variables actor_id ( int ) Actor affected by the command. angular_velocity ( carla.Vector3D - deg/s ) The 3D angular velocity that will be applied to the actor. Methods __init__ ( self , actor , angular_velocity ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. angular_velocity ( carla.Vector3D - deg/s ) - Angular velocity vector applied to the actor. command.ApplyTargetVelocity Command adaptation of set_target_velocity() in carla.Actor . Instance Variables actor_id ( int ) Actor affected by the command. velocity ( carla.Vector3D - m/s ) The 3D velocity applied to the actor. Methods __init__ ( self , actor , velocity ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. velocity ( carla.Vector3D - m/s ) - Velocity vector applied to the actor. command.ApplyTorque Command adaptation of add_torque() in carla.Actor . Applies a torque to an actor. Instance Variables actor_id ( int ) Actor affected by the command. torque ( carla.Vector3D - degrees ) Torque applied to the actor over time. Methods __init__ ( self , actor , torque ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. torque ( carla.Vector3D - degrees ) command.ApplyTransform Command adaptation of set_transform() in carla.Actor . Sets a new transform to an actor. Instance Variables actor_id ( int ) Actor affected by the command. transform ( carla.Transform ) Transformation to be applied. Methods __init__ ( self , actor , transform ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. transform ( carla.Transform ) command.ApplyVehicleAckermannControl Command adaptation of apply_ackermann_control() in carla.Vehicle . Applies a certain akermann control to a vehicle. Instance Variables actor_id ( int ) Vehicle actor affected by the command. control ( carla.AckermannVehicleControl ) Vehicle ackermann control to be applied. Methods __init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.AckermannVehicleControl ) command.ApplyVehicleControl Command adaptation of apply_control() in carla.Vehicle . Applies a certain control to a vehicle. Instance Variables actor_id ( int ) Vehicle actor affected by the command. control ( carla.VehicleControl ) Vehicle control to be applied. Methods __init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.VehicleControl ) command.ApplyVehiclePhysicsControl Command adaptation of apply_physics_control() in carla.Vehicle . Applies a new physics control to a vehicle, modifying its physical parameters. Instance Variables actor_id ( int ) Vehicle actor affected by the command. physics_control ( carla.VehiclePhysicsControl ) Physics control to be applied. Methods __init__ ( self , actor , physics_control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. physics_control ( carla.VehiclePhysicsControl ) command.ApplyWalkerControl Command adaptation of apply_control() in carla.Walker . Applies a control to a walker. Instance Variables actor_id ( int ) Walker actor affected by the command. control ( carla.WalkerControl ) Walker control to be applied. Methods __init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.WalkerControl ) command.ApplyWalkerState Apply a state to the walker actor. Specially useful to initialize an actor them with a specific location, orientation and speed. Instance Variables actor_id ( int ) Walker actor affected by the command. transform ( carla.Transform ) Transform to be applied. speed ( float - m/s ) Speed to be applied. Methods __init__ ( self , actor , transform , speed ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. transform ( carla.Transform ) speed ( float - m/s ) command.DestroyActor Command adaptation of destroy() in carla.Actor that tells the simulator to destroy this actor. It has no effect if the actor was already destroyed. When executed with apply_batch_sync() in carla.Client there will be a command.Response that will return a boolean stating whether the actor was successfully destroyed. Instance Variables actor_id ( int ) Actor affected by the command. Methods __init__ ( self , actor ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. command.Response States the result of executing a command as either the ID of the actor to whom the command was applied to (when succeeded) or an error string (when failed). actor ID, depending on whether or not the command succeeded. The method apply_batch_sync() in carla.Client returns a list of these to summarize the execution of a batch. Instance Variables actor_id ( int ) Actor to whom the command was applied to. States that the command was successful. error ( str ) A string stating the command has failed. Methods has_error ( self ) Returns True if the command execution fails, and False if it was successful. Return: bool command.SetAutopilot Command adaptation of set_autopilot() in carla.Vehicle . Turns on/off the vehicle's autopilot mode. Instance Variables actor_id ( int ) Actor that is affected by the command. enabled ( bool ) If autopilot should be activated or not. port ( uint16 ) Port of the Traffic Manager where the vehicle is to be registered or unlisted. Methods __init__ ( self , actor , enabled , port =8000 ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. enabled ( bool ) port ( uint16 ) - The Traffic Manager port where the vehicle is to be registered or unlisted. If None is passed, it will consider a TM at default port 8000 . command.SetEnableGravity Command adaptation of set_enable_gravity() in carla.Actor . Enables or disables gravity on an actor. Instance Variables actor_id ( carla.Actor or int ) Actor that is affected by the command. enabled ( bool ) Methods __init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or Actor ID to which the command will be applied to. enabled ( bool ) command.SetSimulatePhysics Command adaptation of set_simulate_physics() in carla.Actor . Determines whether an actor will be affected by physics or not. Instance Variables actor_id ( int ) Actor affected by the command. enabled ( bool ) If physics should be activated or not. Methods __init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. enabled ( bool ) command.SetVehicleLightState Command adaptation of set_light_state() in carla.Vehicle . Sets the light state of a vehicle. Instance Variables actor_id ( int ) Actor that is affected by the command. light_state ( carla.VehicleLightState ) Defines the light state of a vehicle. Methods __init__ ( self , actor , light_state ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. light_state ( carla.VehicleLightState ) - Recaps the state of the lights of a vehicle, these can be used as a flags. command.ShowDebugTelemetry Command adaptation of show_debug_telemetry() in carla.Actor . Displays vehicle control telemetry data. Instance Variables actor_id ( carla.Actor or int ) Actor that is affected by the command. enabled ( bool ) Methods __init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or Actor ID to which the command will be applied to. enabled ( bool ) command.SpawnActor Command adaptation of spawn_actor() in carla.World . Spawns an actor into the world based on the blueprint provided and the transform. If a parent is provided, the actor is attached to it. Instance Variables transform ( carla.Transform ) Transform to be applied. parent_id ( int ) Identificator of the parent actor. Methods __init__ ( self ) __init__ ( self , blueprint , transform ) Parameters: blueprint ( carla.ActorBlueprint ) transform ( carla.Transform ) __init__ ( self , blueprint , transform , parent ) Parameters: blueprint ( carla.ActorBlueprint ) transform ( carla.Transform ) parent ( carla.Actor or int ) then ( self , command ) Links another command to be executed right after. It allows to ease very common flows such as spawning a set of vehicles by command and then using this method to set them to autopilot automatically. Parameters: command ( any carla Command ) - a Carla command. function CopyToClipboard(containerid) { if (document.selection) { var range = document.body.createTextRange(); range.moveToElementText(document.getElementById(containerid)); range.select().createTextRange(); document.execCommand(\"copy\"); } else if (window.getSelection) { var range = document.createRange(); range.selectNode(document.getElementById(containerid)); window.getSelection().addRange(range); document.execCommand(\"copy\"); } } function CloseSnipet() { document.getElementById(\"snipets-container\").innerHTML = null; } Snippet for carla.World.enable_environment_objects # This recipe turn visibility off and on for two specifc buildings on the map # Get the buildings in the world world = client.get_world() env_objs = world.get_environment_objects(carla.CityObjectLabel.Buildings) # Access individual building IDs and save in a set building_01 = env_objs[0] building_02 = env_objs[1] objects_to_toggle = {building_01.id, building_02.id} # Toggle buildings off world.enable_environment_objects(objects_to_toggle, False) # Toggle buildings on world.enable_environment_objects(objects_to_toggle, True) Copy snippet Close snippet Snippet for carla.DebugHelper.draw_string # This recipe is a modification of lane_explorer.py example. # It draws the path of an actor through the world, printing information at each waypoint. # ... current_w = map.get_waypoint(vehicle.get_location()) while True: next_w = map.get_waypoint(vehicle.get_location(), lane_type=carla.LaneType.Driving | carla.LaneType.Shoulder | carla.LaneType.Sidewalk ) # Check if the vehicle is moving if next_w.id != current_w.id: vector = vehicle.get_velocity() # Check if the vehicle is on a sidewalk if current_w.lane_type == carla.LaneType.Sidewalk: draw_waypoint_union(debug, current_w, next_w, cyan if current_w.is_junction else red, 60) else: draw_waypoint_union(debug, current_w, next_w, cyan if current_w.is_junction else green, 60) debug.draw_string(current_w.transform.location, str('%15.0f km/h' % (3.6 * math.sqrt(vector.x**2 + vector.y**2 + vector.z**2))), False, orange, 60) draw_transform(debug, current_w.transform, white, 60) # Update the current waypoint and sleep for some time current_w = next_w time.sleep(args.tick_time) # ... Copy snippet Close snippet Snippet for carla.World.unload_map_layer # This recipe toggles off several layers in our \"_Opt\" maps # Load town one with minimum layout (roads, sidewalks, traffic lights and traffic signs) # as well as buildings and parked vehicles world = client.load_world('Town01_Opt', carla.MapLayer.Buildings | carla.MapLayer.ParkedVehicles) # Toggle all buildings off world.unload_map_layer(carla.MapLayer.Buildings) # Toggle all parked vehicles off world.unload_map_layer(carla.MapLayer.ParkedVehicles) Copy snippet Close snippet Snippet for carla.Vehicle.set_wheel_steer_direction # Sets the appearance of the vehicles front wheels to 40\u00b0. Vehicle physics will not be affected. vehicle.set_wheel_steer_direction(carla.VehicleWheelLocation.FR_Wheel, 40.0) vehicle.set_wheel_steer_direction(carla.VehicleWheelLocation.FL_Wheel, 40.0) Copy snippet Close snippet Snippet for carla.Client.__init__ # This recipe shows in every script provided in PythonAPI/Examples # and it is used to parse the client creation arguments when running the script. argparser = argparse.ArgumentParser( description=__doc__) argparser.add_argument( '--host', metavar='H', default='127.0.0.1', help='IP of the host server (default: 127.0.0.1)') argparser.add_argument( '-p', '--port', metavar='P', default=2000, type=int, help='TCP port to listen to (default: 2000)') argparser.add_argument( '-s', '--speed', metavar='FACTOR', default=1.0, type=float, help='rate at which the weather changes (default: 1.0)') args = argparser.parse_args() speed_factor = args.speed update_freq = 0.1 / speed_factor client = carla.Client(args.host, args.port) Copy snippet Close snippet Snippet for carla.Map.get_waypoint # This recipe shows the current traffic rules affecting the vehicle. # Shows the current lane type and if a lane change can be done in the actual lane or the surrounding ones. # ... waypoint = world.get_map().get_waypoint(vehicle.get_location(),project_to_road=True, lane_type=(carla.LaneType.Driving | carla.LaneType.Shoulder | carla.LaneType.Sidewalk)) print(\"Current lane type: \" + str(waypoint.lane_type)) # Check current lane change allowed print(\"Current Lane change: \" + str(waypoint.lane_change)) # Left and Right lane markings print(\"L lane marking type: \" + str(waypoint.left_lane_marking.type)) print(\"L lane marking change: \" + str(waypoint.left_lane_marking.lane_change)) print(\"R lane marking type: \" + str(waypoint.right_lane_marking.type)) print(\"R lane marking change: \" + str(waypoint.right_lane_marking.lane_change)) # ... Copy snippet Close snippet Snippet for carla.World.spawn_actor # This recipe attaches different camera / sensors to a vehicle with different attachments. # ... camera = world.spawn_actor(rgb_camera_bp, transform, attach_to=vehicle, attachment_type=Attachment.Rigid) # Default attachment: Attachment.Rigid gnss_sensor = world.spawn_actor(sensor_gnss_bp, transform, attach_to=vehicle) collision_sensor = world.spawn_actor(sensor_collision_bp, transform, attach_to=vehicle) lane_invasion_sensor = world.spawn_actor(sensor_lane_invasion_bp, transform, attach_to=vehicle) # ... Copy snippet Close snippet Snippet for carla.WalkerAIController.stop #To destroy the pedestrians, stop them from the navigation, and then destroy the objects (actor and controller). # stop pedestrians (list is [controller, actor, controller, actor ...]) for i in range(0, len(all_id), 2): all_actors[i].stop() # destroy pedestrian (actor and controller) client.apply_batch([carla.command.DestroyActor(x) for x in all_id]) Copy snippet Close snippet Snippet for carla.DebugHelper.draw_box # This recipe shows how to draw traffic light actor bounding boxes from a world snapshot. # .... debug = world.debug world_snapshot = world.get_snapshot() for actor_snapshot in world_snapshot: actual_actor = world.get_actor(actor_snapshot.id) if actual_actor.type_id == 'traffic.traffic_light': debug.draw_box(carla.BoundingBox(actor_snapshot.get_transform().location,carla.Vector3D(0.5,0.5,2)),actor_snapshot.get_transform().rotation, 0.05, carla.Color(255,0,0,0),0) # ... Copy snippet Close snippet Snippet for carla.World.get_spectator # This recipe spawns an actor and the spectator camera at the actor's location. # ... world = client.get_world() spectator = world.get_spectator() vehicle_bp = random.choice(world.get_blueprint_library().filter('vehicle.bmw.*')) transform = random.choice(world.get_map().get_spawn_points()) vehicle = world.try_spawn_actor(vehicle_bp, transform) # Wait for world to get the vehicle actor world.tick() world_snapshot = world.wait_for_tick() actor_snapshot = world_snapshot.find(vehicle.id) # Set spectator at given transform (vehicle transform) spectator.set_transform(actor_snapshot.get_transform()) # ... Copy snippet Close snippet Snippet for carla.Sensor.listen # This recipe applies a color conversion to the image taken by a camera sensor, # so it is converted to a semantic segmentation image. # ... camera_bp = world.get_blueprint_library().filter('sensor.camera.semantic_segmentation') # ... cc = carla.ColorConverter.CityScapesPalette camera.listen(lambda image: image.save_to_disk('output/%06d.png' % image.frame, cc)) # ... Copy snippet Close snippet Snippet for carla.TrafficLight.set_state # This recipe changes from red to green the traffic light that affects the vehicle. # This is done by detecting if the vehicle actor is at a traffic light. # ... world = client.get_world() spectator = world.get_spectator() vehicle_bp = random.choice(world.get_blueprint_library().filter('vehicle.bmw.*')) transform = random.choice(world.get_map().get_spawn_points()) vehicle = world.try_spawn_actor(vehicle_bp, transform) # Wait for world to get the vehicle actor world.tick() world_snapshot = world.wait_for_tick() actor_snapshot = world_snapshot.find(vehicle.id) # Set spectator at given transform (vehicle transform) spectator.set_transform(actor_snapshot.get_transform()) # ...# ... if vehicle_actor.is_at_traffic_light(): traffic_light = vehicle_actor.get_traffic_light() if traffic_light.get_state() == carla.TrafficLightState.Red: # world.hud.notification(\"Traffic light changed! Good to go!\") traffic_light.set_state(carla.TrafficLightState.Green) # ... Copy snippet Close snippet Snippet for carla.ActorBlueprint.set_attribute # This recipe changes attributes of different type of blueprint actors. # ... walker_bp = world.get_blueprint_library().filter('walker.pedestrian.0002') walker_bp.set_attribute('is_invincible', True) # ... # Changes attribute randomly by the recommended value vehicle_bp = wolrd.get_blueprint_library().filter('vehicle.bmw.*') color = random.choice(vehicle_bp.get_attribute('color').recommended_values) vehicle_bp.set_attribute('color', color) # ... camera_bp = world.get_blueprint_library().filter('sensor.camera.rgb') camera_bp.set_attribute('image_size_x', 600) camera_bp.set_attribute('image_size_y', 600) # ... Copy snippet Close snippet Snippet for carla.Client.apply_batch_sync # 0. Choose a blueprint fo the walkers world = client.get_world() blueprintsWalkers = world.get_blueprint_library().filter(\"walker.pedestrian.*\") walker_bp = random.choice(blueprintsWalkers) # 1. Take all the random locations to spawn spawn_points = [] for i in range(50): spawn_point = carla.Transform() spawn_point.location = world.get_random_location_from_navigation() if (spawn_point.location != None): spawn_points.append(spawn_point) # 2. Build the batch of commands to spawn the pedestrians batch = [] for spawn_point in spawn_points: walker_bp = random.choice(blueprintsWalkers) batch.append(carla.command.SpawnActor(walker_bp, spawn_point)) # 2.1 apply the batch results = client.apply_batch_sync(batch, True) for i in range(len(results)): if results[i].error: logging.error(results[i].error) else: walkers_list.append({\"id\": results[i].actor_id}) # 3. Spawn walker AI controllers for each walker batch = [] walker_controller_bp = world.get_blueprint_library().find('controller.ai.walker') for i in range(len(walkers_list)): batch.append(carla.command.SpawnActor(walker_controller_bp, carla.Transform(), walkers_list[i][\"id\"])) # 3.1 apply the batch results = client.apply_batch_sync(batch, True) for i in range(len(results)): if results[i].error: logging.error(results[i].error) else: walkers_list[i][\"con\"] = results[i].actor_id # 4. Put altogether the walker and controller ids for i in range(len(walkers_list)): all_id.append(walkers_list[i][\"con\"]) all_id.append(walkers_list[i][\"id\"]) all_actors = world.get_actors(all_id) # wait for a tick to ensure client receives the last transform of the walkers we have just created world.wait_for_tick() # 5. initialize each controller and set target to walk to (list is [controller, actor, controller, actor ...]) for i in range(0, len(all_actors), 2): # start walker all_actors[i].start() # set walk to random point all_actors[i].go_to_location(world.get_random_location_from_navigation()) # random max speed all_actors[i].set_max_speed(1 + random.random()) # max speed between 1 and 2 (default is 1.4 m/s) Copy snippet Close snippet Snippet for carla.World.load_map_layer # This recipe toggles on several layers in our \"_Opt\" maps # Load town one with only minimum layout (roads, sidewalks, traffic lights and traffic signs) world = client.load_world('Town01_Opt', carla.MapLayer.None) # Toggle all buildings on world.load_map_layer(carla.MapLayer.Buildings) # Toggle all foliage on world.load_map_layer(carla.MapLayer.Foliage) # Toggle all parked vehicles on world.load_map_layer(carla.MapLayer.ParkedVehicles) Copy snippet Close snippet function ButtonAction(container_name){ if(window_big){ snipet_name = container_name.replace('-snipet_button','-snipet'); document.getElementById(\"snipets-container\").innerHTML = document.getElementById(snipet_name).innerHTML; } else{ document.getElementById(\"snipets-container\").innerHTML = null;code_name = container_name.replace('-snipet_button','-code'); var range = document.createRange(); range.selectNode(document.getElementById(code_name)); alert(range); } } function WindowResize(){ if(window.innerWidth > 1200){ window_big = true; } else{ window_big = false; } } var window_big; if(window.innerWidth > 1200){ window_big = true; } else{ window_big = false; } buttons = document.getElementsByClassName('SnipetButton') for (let i = 0; i < buttons.length; i++) { buttons[i].addEventListener(\"click\",function(){ButtonAction(buttons[i].id);},true); } window.onresize = WindowResize;","title":"Python API \u53c2\u8003"},{"location":"python_api/#python-api","text":"\u6b64\u53c2\u8003\u5305\u542b Python API \u7684\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002\u8981\u67e5\u9605\u7279\u5b9a CARLA \u7248\u672c\u7684\u5148\u524d\u53c2\u8003\uff0c\u8bf7\u4f7f\u7528\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u6587\u6863\u7248\u672c\u3002 \u8fd9\u4f1a\u5c06\u6574\u4e2a\u6587\u6863\u66f4\u6539\u4e3a\u4e4b\u524d\u7684\u72b6\u6001\u3002\u8bf7\u8bb0\u4f4f\uff0c \u6700\u65b0 \u7248\u672c\u662f dev \u5206\u652f\uff0c\u53ef\u80fd\u4f1a\u663e\u793a\u4efb\u4f55 CARLA \u6253\u5305\u7248\u672c\u4e2d\u4e0d\u53ef\u7528\u7684\u529f\u80fd\u3002","title":"Python API \u53c2\u8003"},{"location":"python_api/#carlaackermanncontrollersettings","text":"\u7ba1\u7406 Ackermann PID \u63a7\u5236\u5668\u7684\u8bbe\u7f6e\u3002","title":"carla.AckermannControllerSettings"},{"location":"python_api/#_1","text":"speed_kp ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u6bd4\u4f8b\u9879\u3002 speed_ki ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u79ef\u5206\u9879\u3002 speed_kd ( float ) \u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u5fae\u5206\u9879\u3002 accel_kp ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u6bd4\u4f8b\u9879\u3002 accel_ki ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u79ef\u5206\u9879\u3002 accel_kd ( float ) \u52a0\u901f\u5ea6 PID \u63a7\u5236\u5668\u7684\u5fae\u5206\u9879\u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_2","text":"__init__ ( self , speed_kp =0.15 , speed_ki =0.0 , speed_kd =0.25 , accel_kp =0.01 , accel_ki =0.0 , accel_kd =0.01 ) Parameters: speed_kp ( float ) speed_ki ( float ) speed_kd ( float ) accel_kp ( float ) accel_ki ( float ) accel_kd ( float )","title":"\u65b9\u6cd5"},{"location":"python_api/#dunder-methods","text":"__eq__ ( self , other = carla.AckermannControllerSettings ) __ne__ ( self , other = carla.AckermannControllerSettings ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaactor","text":"CARLA \u5c06\u53c2\u4e0e\u8005\u5b9a\u4e49\u4e3a\u5728\u4eff\u771f\u4e2d\u53d1\u6325\u4f5c\u7528\u6216\u53ef\u4ee5\u79fb\u52a8\u7684\u4efb\u4f55\u7269\u4f53\u3002\u5176\u4e2d\u5305\u62ec\uff1a\u884c\u4eba\u3001\u8f66\u8f86\u3001\u4f20\u611f\u5668\u548c\u4ea4\u901a\u6807\u5fd7\uff08\u5c06\u4ea4\u901a\u706f\u89c6\u4e3a\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff09\u3002\u53c2\u4e0e\u8005\u5728\u4eff\u771f\u4e2d\u7531 carla.World \u751f\u6210\uff0c\u5e76\u4e14\u9700\u8981\u521b\u5efa carla.ActorBlueprint \u3002\u8fd9\u4e9b\u84dd\u56fe\u5c5e\u4e8e CARLA \u63d0\u4f9b\u7684\u5e93\uff0c\u8bf7\u5728 \u6b64\u5904 \u627e\u5230\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002","title":"carla.Actor"},{"location":"python_api/#_3","text":"attributes ( dict ) \u5305\u542b\u8be5\u53c2\u4e0e\u8005\u6240\u57fa\u4e8e\u84dd\u56fe\u5c5e\u6027\u7684\u5b57\u5178\u3002 id ( int ) \u8be5\u53c2\u4e0e\u8005\u7684\u6807\u8bc6\u7b26\u3002\u5728\u7ed9\u5b9a\u7684\u60c5\u8282\u4e2d\u662f\u552f\u4e00\u7684\u3002 type_id ( str ) \u8be5\u53c2\u4e0e\u8005\u6240\u57fa\u4e8e\u7684\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\uff0c\u4f8b\u5982 vehicle.ford.mustang \u3002 is_alive ( bool ) \u8fd4\u56de\u6b64\u5bf9\u8c61\u662f\u5426\u662f\u4f7f\u7528\u6b64\u53c2\u4e0e\u8005\u53e5\u67c4\u9500\u6bc1\u7684\u3002 is_active ( bool ) \u8fd4\u56de\u6b64\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001 (True) \u6216\u975e\u6d3b\u52a8\u72b6\u6001 (False)\u3002 is_dormant ( bool ) \u8fd4\u56de\u6b64\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u4f11\u7720\u72b6\u6001 (True) \u6216\u975e\u4f11\u7720\u72b6\u6001 (False) - \u4e0e is_active \u76f8\u53cd\u3002 parent ( carla.Actor ) \u53c2\u4e0e\u8005\u53ef\u4ee5\u9644\u52a0\u5230\u4ed6\u4eec\u5c06\u8ddf\u968f\u7684\u7236\u53c2\u4e0e\u8005\u3002\u8fd9\u5c31\u662f\u6240\u8bf4\u7684\u53c2\u4e0e\u8005\u3002 semantic_tags ( list(int) ) \u84dd\u56fe\u5217\u8868\u7ec4\u4ef6\u4e3a\u6b64\u53c2\u4e0e\u8005\u63d0\u4f9b\u7684\u8bed\u4e49\u6807\u7b7e\u5217\u8868\u3002\u4f8b\u5982\uff0c\u4ea4\u901a\u706f\u53ef\u4ee5\u7528 Pole \u548c TrafficLight . \u3002\u8fd9\u4e9b\u6807\u7b7e\u7531\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u4f7f\u7528\u3002\u5728 \u6b64\u5904 \u67e5\u627e\u6709\u5173\u6b64\u4f20\u611f\u5668\u548c\u5176\u4ed6\u4f20\u611f\u5668\u7684\u66f4\u591a\u4fe1\u606f\u3002 actor_state ( carla.ActorState ) \u8fd4\u56de carla.ActorState \uff0c\u5b83\u53ef\u4ee5\u8bc6\u522b\u53c2\u4e0e\u8005\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u3001\u4f11\u7720\u6216\u65e0\u6548\u72b6\u6001\u3002 bounding_box ( carla.BoundingBox ) \u5305\u542b\u53c2\u4e0e\u8005\u51e0\u4f55\u5f62\u72b6\u7684\u8fb9\u754c\u6846\u3002\u5b83\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u662f\u76f8\u5bf9\u4e8e\u5b83\u6240\u9644\u7740\u7684\u53c2\u4e0e\u8005\u7684\u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_4","text":"add_angular_impulse ( self , angular_impulse ) \u5728\u89d2\u8272\u7684\u8d28\u5fc3\u5904\u5e94\u7528\u89d2\u51b2\u91cf\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u77ac\u65f6\u626d\u77e9\uff0c\u901a\u5e38\u5e94\u7528\u4e00\u6b21\u3002\u4f7f\u7528 add_torque() \u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u65bd\u52a0\u65cb\u8f6c\u529b\u3002 \u53c2\u6570: angular_impulse ( carla.Vector3D - degrees*s ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u89d2\u8109\u51b2\u77e2\u91cf\u3002 add_force ( self , force ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u65bd\u52a0\u529b\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u65bd\u52a0\u7684\u529b\u3002\u4f7f\u7528 add_impulse() \u65bd\u52a0\u4ec5\u6301\u7eed\u77ac\u95f4\u7684\u8109\u51b2\u3002 \u53c2\u6570: force ( carla.Vector3D - N ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u529b\u77e2\u91cf\u3002 add_impulse ( self , impulse ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u65bd\u52a0\u8109\u51b2\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u77ac\u65f6\u529b\uff0c\u901a\u5e38\u5e94\u7528\u4e00\u6b21\u3002\u4f7f\u7528 add_force() \u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u65bd\u52a0\u529b\u3002 \u53c2\u6570: impulse ( carla.Vector3D - N*s ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u8109\u51b2\u77e2\u91cf\u3002 add_torque ( self , torque ) \u5728\u53c2\u4e0e\u8005\u7684\u8d28\u5fc3\u5904\u5e94\u7528\u626d\u77e9\u3002\u6b64\u65b9\u6cd5\u9002\u7528\u4e8e\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u65bd\u52a0\u7684\u626d\u77e9\u3002\u4f7f\u7528 add_angular_impulse() \u65bd\u52a0\u4ec5\u6301\u7eed\u77ac\u95f4\u7684\u626d\u77e9\u3002 \u53c2\u6570: torque ( carla.Vector3D - degrees ) - \u5168\u5c40\u5750\u6807\u4e2d\u7684\u626d\u77e9\u77e2\u91cf\u3002 destroy ( self ) \u544a\u8bc9\u4eff\u771f\u5668\u9500\u6bc1\u8fd9\u4e2a\u53c2\u4e0e\u8005\uff0c\u5982\u679c\u6210\u529f\u5219 True \u3002\u5982\u679c\u5df2\u7ecf\u88ab\u7834\u574f\u5219\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u8fd4\u56de: bool \u8b66\u544a: T\u6b64\u65b9\u6cd5\u4f1a\u963b\u6b62\u811a\u672c\uff0c\u76f4\u5230\u6a21\u62df\u5668\u5b8c\u6210\u9500\u6bc1\u4e3a\u6b62\u3002 disable_constant_velocity ( self ) \u7981\u7528\u4e4b\u524d\u4e3a carla.Vehicle \u53c2\u4e0e\u8005\u8bbe\u7f6e\u7684\u4efb\u4f55\u6052\u5b9a\u901f\u5ea6\u3002 enable_constant_velocity ( self , velocity ) \u5c06\u8f66\u8f86\u7684\u901f\u5ea6\u77e2\u91cf\u8bbe\u7f6e\u4e3a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6052\u5b9a\u503c\u3002\u6240\u5f97\u5230\u7684\u901f\u5ea6\u5c06\u8fd1\u4f3c\u4e8e velocity \u6240\u8bbe\u7f6e\u7684\u901f\u5ea6\uff0c\u4e0e set_target_velocity() \u4e00\u6837\u3002 \u53c2\u6570: velocity ( carla.Vector3D - m/s ) - Velocity vector in local space. \u6ce8\u610f: \u53ea\u6709 carla.Vehicle \u53c2\u4e0e\u8005\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002 \u8b66\u544a: \u4e3a \u4ea4\u901a\u7ba1\u7406\u5668 \u7ba1\u7406\u7684\u8f66\u8f86\u542f\u7528\u6052\u5b9a\u901f\u5ea6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\u3002\u6b64\u65b9\u6cd5\u4f1a\u8986\u76d6\u4ea4\u901a\u7ba1\u7406\u5668\u5bf9\u901f\u5ea6\u7684\u4efb\u4f55\u66f4\u6539\u3002","title":"\u65b9\u6cd5"},{"location":"python_api/#_5","text":"get_acceleration ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u6536\u5230\u7684\u89d2\u8272\u7684\u4e09\u7ef4\u52a0\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de: carla.Vector3D - m/s 2 get_angular_velocity ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u89d2\u8272\u7684\u89d2\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Vector3D - deg/s get_location ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u4e0a\u4e00\u6b21tick\u671f\u95f4\u63a5\u6536\u5230\u7684\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Location - meters \u8bbe\u7f6e\u5668: carla.Actor.set_location get_transform ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u53c2\u4e0e\u8005\u7684\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de: carla.Transform \u8bbe\u7f6e\u5668: carla.Actor.set_transform get_velocity ( self ) \u8fd4\u56de\u5ba2\u6237\u7aef\u5728\u6700\u540e\u4e00\u4e2atick\u671f\u95f4\u63a5\u6536\u5230\u7684\u89d2\u8272\u7684\u901f\u5ea6\u5411\u91cf\u3002\u8be5\u65b9\u6cd5\u4e0d\u8c03\u7528\u4eff\u771f\u5668\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s get_world ( self ) \u8fd4\u56de\u8be5\u53c2\u4e0e\u8005\u6240\u5c5e\u7684\u4e16\u754c\u3002 \u8fd4\u56de: carla.World","title":"\u83b7\u53d6\u5668"},{"location":"python_api/#_6","text":"set_enable_gravity ( self , enabled ) \u542f\u7528\u6216\u7981\u7528\u6f14\u5458\u7684\u91cd\u529b\u3002 \u9ed8\u8ba4 \u4e3a True\u3002 \u53c2\u6570\uff1a enabled ( bool ) set_location ( self , location ) \u5c06\u89d2\u8272\u4f20\u9001\u5230\u7ed9\u5b9a\u4f4d\u7f6e\u3002 \u53c2\u6570\uff1a location ( carla.Location - meters ) \u83b7\u53d6\u5668\uff1a carla.Actor.get_location set_simulate_physics ( self , enabled =True ) \u542f\u7528\u6216\u7981\u7528\u6b64\u53c2\u4e0e\u8005\u4e0a\u7684\u7269\u7406\u4eff\u771f\u3002 \u53c2\u4e0e\u8005\uff1a enabled ( bool ) set_target_angular_velocity ( self , angular_velocity ) \u8bbe\u7f6e\u89d2\u8272\u7684\u89d2\u901f\u5ea6\u77e2\u91cf\u3002\u8fd9\u662f\u5728\u7269\u7406\u6b65\u9aa4\u4e4b\u524d\u5e94\u7528\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u89d2\u901f\u5ea6\u5c06\u53d7\u5230\u6469\u64e6\u7b49\u5916\u529b\u7684\u5f71\u54cd\u3002 \u53c2\u6570\uff1a angular_velocity ( carla.Vector3D - deg/s ) set_target_velocity ( self , velocity ) \u8bbe\u7f6e\u53c2\u4e0e\u8005\u7684\u901f\u5ea6\u5411\u91cf\u3002\u8fd9\u662f\u5728\u7269\u7406\u6b65\u9aa4\u4e4b\u524d\u5e94\u7528\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u89d2\u901f\u5ea6\u5c06\u53d7\u5230\u6469\u64e6\u7b49\u5916\u529b\u7684\u5f71\u54cd\u3002 \u53c2\u6570\uff1a velocity ( carla.Vector3D ) set_transform ( self , transform ) \u5c06\u89d2\u8272\u4f20\u9001\u5230\u7ed9\u5b9a\u7684\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002 \u53c2\u6570\uff1a transform ( carla.Transform ) \u83b7\u53d6\u5668\uff1a carla.Actor.get_transform","title":"\u8bbe\u7f6e\u5668"},{"location":"python_api/#dunder-methods_1","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaactorattribute","text":"CARLA \u4e3a\u53c2\u4e0e\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.BlueprintLibrary \u8fdb\u884c\u8bbf\u95ee\u3002\u6bcf\u4e2a\u84dd\u56fe\u90fd\u6709\u4e00\u7cfb\u5217\u5185\u90e8\u5b9a\u4e49\u7684\u5c5e\u6027\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u53e6\u4e00\u4e9b\u5219\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u4e3a\u53ef\u8bbe\u7f6e\u7684\u503c\u63d0\u4f9b\u4e86\u63a8\u8350\u503c\u5217\u8868\u3002","title":"carla.ActorAttribute"},{"location":"python_api/#_7","text":"id ( str ) \u5e93\u4e2d\u5c5e\u6027\u7684\u540d\u79f0\u548c\u6807\u8bc6\u7b26\u3002 is_modifiable ( bool ) \u5982\u679c\u5c5e\u6027\u7684\u503c\u53ef\u4ee5\u4fee\u6539\uff0c\u5219\u4e3a True \u3002 recommended_values ( list(str) ) \u8bbe\u8ba1\u84dd\u56fe\u7684\u4eba\u5458\u5efa\u8bae\u7684\u503c\u5217\u8868\u3002 type ( carla.ActorAttributeType ) \u5c5e\u6027\u7684\u53c2\u6570\u7c7b\u578b\u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_8","text":"as_bool ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u5e03\u5c14\u503c\u3002 as_color ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a carla.Color \u3002 as_float ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u6d6e\u70b9\u578b\u3002 as_int ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a int\u3002 as_str ( self ) \u5c06\u5c5e\u6027\u8bfb\u53d6\u4e3a\u5b57\u7b26\u4e32\u3002","title":"\u65b9\u6cd5"},{"location":"python_api/#dunder-methods_2","text":"__bool__ ( self ) __eq__ ( self , other =bool / int / float / str / carla.Color / carla.ActorAttribute ) \u5982\u679c\u6b64\u53c2\u4e0e\u8005\u7684\u5c5e\u6027 \u548c other \u76f8\u540c\uff0c\u5219\u8fd4\u56de true\u3002 \u8fd4\u56de\uff1a bool __float__ ( self ) __int__ ( self ) __ne__ ( self , other =bool / int / float / str / carla.Color / carla.ActorAttribute ) \u5982\u679c\u6b64 actor \u7684\u5c5e\u6027\u548c other \u4e0d\u540c\uff0c\u5219\u8fd4\u56de true\u3002 \u8fd4\u56de\uff1a bool __nonzero__ ( self ) \u5982\u679c\u6b64\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u4e0d\u4e3a\u96f6\u6216 null\uff0c\u5219\u8fd4\u56de true\u3002 Return: bool __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaactorattributetype","text":"CARLA \u5728 carla.BlueprintLibrary \u4e2d\u4e3a\u53c2\u4e0e\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u6bcf\u4e2a\u84dd\u56fe\u5177\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u3002\u6b64\u7c7b\u5c06 carla.ActorAttribute \u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u4e3a\u4e00\u7cfb\u5217\u679a\u4e3e\u3002\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u5747\u5728\u5185\u90e8\u7ba1\u7406\uff0c\u5e76\u5728\u6b64\u5904\u5217\u51fa\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"carla.ActorAttributeType"},{"location":"python_api/#_9","text":"Bool Int Float String RGBColor","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#carlaactorblueprint","text":"CARLA \u4e3a Actor \u63d0\u4f9b\u4e86\u4e00\u4e2a\u84dd\u56fe\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.BlueprintLibrary \u8fdb\u884c\u67e5\u9605\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u5305\u542b\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\u548c\u4e00\u7cfb\u5217\u53ef\u4ee5\u4fee\u6539\u6216\u4e0d\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u3002\u8be5\u7c7b\u662f\u5e93\u548c\u53c2\u4e0e\u8005\u521b\u5efa\u4e4b\u95f4\u7684\u4e2d\u95f4\u6b65\u9aa4\u3002\u53c2\u4e0e\u8005\u9700\u8981\u4e00\u4e2a\u53c2\u4e0e\u8005\u84dd\u56fe\u624d\u80fd\u4ea7\u751f\u3002\u8fd9\u4e9b\u5c06\u6240\u8ff0\u84dd\u56fe\u7684\u4fe1\u606f\u53ca\u5176\u5c5e\u6027\u548c\u4e00\u4e9b\u6807\u7b7e\u5b58\u50a8\u5728\u5bf9\u8c61\u4e2d\u4ee5\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\u3002\u7136\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u5c5e\u6027\u5e76\u6700\u7ec8\u901a\u8fc7 carla.World \u751f\u6210\u53c2\u4e0e\u8005\u3002","title":"carla.ActorBlueprint"},{"location":"python_api/#_10","text":"id ( str ) \u5e93\u5185\u6240\u8ff0\u84dd\u56fe\u7684\u6807\u8bc6\u7b26\u3002\u4f8b\u5982 walker.pedestrian.0001 \u3002 tags ( list(str) ) \u6bcf\u4e2a\u84dd\u56fe\u5177\u6709\u7684\u6709\u52a9\u4e8e\u63cf\u8ff0\u5b83\u4eec\u7684\u6807\u7b7e\u5217\u8868\u3002\u4f8b\u5982 ['0001', 'pedestrian', 'walker'] \u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_11","text":"has_attribute ( self , id ) \u5982\u679c\u84dd\u56fe\u5305\u542b\u8be5 id \u5c5e\u6027\uff0c\u5219\u8fd4\u56de True \u3002 \u53c2\u6570\uff1a id ( str ) - \u4f8b\u5982 gender \u5c06\u4e3a\u884c\u4eba\u7684\u84dd\u56fe\u8fd4\u56de True \u3002 \u8fd4\u56de\uff1a bool has_tag ( self , tag ) \u5982\u679c\u84dd\u56fe\u5df2\u5217\u51fa\u6307\u5b9a tag \u7684\u5185\u5bb9\uff0c\u5219\u8fd4\u56de True \u3002 \u53c2\u6570\uff1a tag ( str ) - \u4f8b\u5982\uff1a 'walker'\u3002 \u8fd4\u56de\uff1a bool match_tags ( self , wildcard_pattern ) \u5982\u679c\u4e3a\u6b64\u84dd\u56fe\u5217\u51fa\u7684\u4efb\u4f55\u6807\u8bb0\u5339\u914d wildcard_pattern \uff0c\u5219\u8fd4\u56de True \u3002\u5339\u914d\u9075\u5faa fnmatch \u6807\u51c6\u3002 \u53c2\u6570\uff1a wildcard_pattern ( str ) \u8fd4\u56de\uff1a bool","title":"\u65b9\u6cd5"},{"location":"python_api/#_12","text":"get_attribute ( self , id ) \u8fd4\u56de\u53c2\u4e0e\u8005\u7684\u5c5e\u6027\u4ee5\u53ca id \u6807\u8bc6\u7b26\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u53c2\u4e0e\u8005\uff1a id ( str ) \u8fd4\u56de\uff1a carla.ActorAttribute \u8bbe\u7f6e\u5668\uff1a carla.ActorBlueprint.set_attribute","title":"\u83b7\u53d6\u5668"},{"location":"python_api/#_13","text":"set_attribute ( self , id , value ) snippet \u2192 If the id attribute is modifiable, changes its value to value . \u53c2\u6570\uff1a id ( str ) - The identifier for the attribute that is intended to be changed. value ( str ) - The new value for said attribute. \u83b7\u53d6\u5668\uff1a carla.ActorBlueprint.get_attribute","title":"\u8bbe\u7f6e\u5668"},{"location":"python_api/#dunder-methods_3","text":"__iter__ ( self ) Iterate over the carla.ActorAttribute that this blueprint has. __len__ ( self ) Returns the amount of attributes for this blueprint. __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaactorlist","text":"A class that contains every actor present on the scene and provides access to them. The list is automatically created and updated by the server and it can be returned using carla.World .","title":"carla.ActorList"},{"location":"python_api/#methods","text":"filter ( self , wildcard_pattern ) Filters a list of Actors matching wildcard_pattern against their variable type_id (which identifies the blueprint used to spawn them). Matching follows fnmatch standard. Parameters: wildcard_pattern ( str ) Return: list find ( self , actor_id ) Finds an actor using its identifier and returns it or None if it is not present. Parameters: actor_id ( int ) Return: carla.Actor","title":"Methods"},{"location":"python_api/#dunder-methods_4","text":"__getitem__ ( self , pos =int ) Returns the actor corresponding to pos position in the list. Return: carla.Actor __iter__ ( self ) Iterate over the carla.Actor contained in the list. __len__ ( self ) Returns the amount of actors listed. Return: int __str__ ( self ) Parses to the ID for every actor listed. Return: str","title":"Dunder methods"},{"location":"python_api/#carlaactorsnapshot","text":"\u5305\u542b\u53c2\u4e0e\u8005\u5728\u7279\u5b9a\u65f6\u523b\u7684\u6240\u6709\u4fe1\u606f\u7684\u7c7b\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5305\u542b\u5728 carla.WorldSnapshot \u4e2d\uff0c\u5e76\u5728\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u4e00\u6b21\u3002","title":"carla.ActorSnapshot"},{"location":"python_api/#_14","text":"id ( int ) \u5feb\u7167\u672c\u8eab\u7684\u6807\u8bc6\u7b26\u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_15","text":"","title":"\u65b9\u6cd5"},{"location":"python_api/#_16","text":"get_acceleration ( self ) \u8fd4\u56de\u5728\u8be5tick\u4e2d\u4e3a\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u52a0\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s 2 get_angular_velocity ( self ) \u8fd4\u56de\u4e3a\u8be5tick\u4e2d\u7684\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u89d2\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - rad/s get_transform ( self ) \u8fd4\u56de\u8be5 tick \u4e2d\u53c2\u4e0e\u8005\u7684\u53c2\u4e0e\u8005\u53d8\u6362\uff08\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff09\u3002 \u8fd4\u56de\uff1a carla.Transform get_velocity ( self ) \u8fd4\u56de\u5728\u8be5tick\u4e2d\u4e3a\u53c2\u4e0e\u8005\u6ce8\u518c\u7684\u901f\u5ea6\u5411\u91cf\u3002 \u8fd4\u56de\uff1a carla.Vector3D - m/s","title":"\u83b7\u53d6\u5668"},{"location":"python_api/#carlaactorstate","text":"\u5b9a\u4e49\u53c2\u4e0e\u8005\u72b6\u6001\u7684\u7c7b\u3002","title":"carla.ActorState"},{"location":"python_api/#_17","text":"Invalid \u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u53c2\u4e0e\u8005\u5c31\u662f\u65e0\u6548\u7684\u3002 Active \u5f53\u4e00\u4e2a\u53c2\u4e0e\u8005\u53ef\u89c6\u5316\u5e76\u4e14\u53ef\u4ee5\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u65f6\uff0c\u5b83\u5c31\u662f\u6d3b\u8dc3\u7684\u3002 Dormant \u5f53\u53c2\u4e0e\u8005\u4e0d\u88ab\u53ef\u89c6\u5316\u5e76\u4e14\u4e0d\u4f1a\u901a\u8fc7\u7269\u7406\u5f71\u54cd\u5176\u4ed6\u53c2\u4e0e\u8005\u65f6\uff0c\u53c2\u4e0e\u8005\u5c31\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53c2\u4e0e\u8005\u4f4d\u4e8e\u5927\u5730\u56fe\u4e2d\u5df2\u5378\u8f7d\u7684\u56fe\u5757\u4e0a\uff0c\u5219\u53c2\u4e0e\u8005\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u3002","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#carlaattachmenttype","text":"\u5b9a\u4e49\u53c2\u4e0e\u8005\u4e0e\u5176\u7236\u7ea7\u4e4b\u95f4\u7684\u9644\u4ef6\u9009\u9879\u7684\u7c7b\u3002\u5f53\u751f\u6210\u53c2\u4e0e\u8005\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\u4e0a\uff0c\u8fd9\u6837\u5b83\u4eec\u7684\u4f4d\u7f6e\u5c31\u4f1a\u76f8\u5e94\u6539\u53d8\u3002\u8fd9\u5bf9\u4e8e\u4f20\u611f\u5668\u7279\u522b\u6709\u7528\u3002 carla.World.spawn_actor \u4e2d\u7684\u7247\u6bb5\u663e\u793a\u4e86\u4e00\u4e9b\u4f20\u611f\u5668\u5728\u751f\u6210\u65f6\u8fde\u63a5\u5230\u6c7d\u8f66\u4e0a\u3002\u8bf7\u6ce8\u610f\uff0c\u9644\u4ef6\u7c7b\u578b\u5728\u7c7b\u4e2d\u58f0\u660e\u4e3a\u679a\u4e3e\u3002","title":"carla.AttachmentType"},{"location":"python_api/#_18","text":"Rigid \u901a\u8fc7\u6b64\u56fa\u5b9a\u9644\u4ef6\uff0c\u5bf9\u8c61\u4e25\u683c\u9075\u5faa\u5176\u7236\u4f4d\u7f6e\u3002\u8fd9\u662f\u63a8\u8350\u7684\u9644\u4ef6\uff0c\u7528\u4e8e\u4ece\u4eff\u771f\u4e2d\u68c0\u7d22\u7cbe\u786e\u6570\u636e\u3002 SpringArm \u4e00\u79cd\u9644\u4ef6\uff0c\u53ef\u6839\u636e\u5176\u7236\u7ea7\u6269\u5c55\u6216\u7f29\u56de\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u3002\u4ec5\u5efa\u8bae\u5728\u9700\u8981\u5e73\u6ed1\u8fd0\u52a8\u7684\u6a21\u62df\u4e2d\u5f55\u5236\u89c6\u9891\u65f6\u4f7f\u7528\u6b64\u9644\u4ef6\u3002SpringArms \u662f\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u7ec4\u4ef6\uff0c\u56e0\u6b64 check the UE \u6587\u6863 \u4ee5\u4e86\u89e3\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8b66\u544a\uff1a The SpringArm attachment presents weird behaviors when an actor is spawned with a relative translation in the Z-axis (e.g. child_location = Location(0,0,2) ). SpringArmGhost An attachment like the previous one but that does not make the collision test, and that means that it does not expands or retracts the position of the actor. The term ghost is because then the camera can cross walls and other geometries. This attachment is only recommended to record videos from the simulation where a smooth movement is needed. SpringArms are an Unreal Engine component so check the UE docs to learn more about them. Warning: The SpringArm attachment presents weird behaviors when an actor is spawned with a relative translation in the Z-axis (e.g. child_location = Location(0,0,2) ).","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#carlablueprintlibrary","text":"\u5305\u542b\u4e3a\u53c2\u4e0e\u8005\u751f\u6210\u63d0\u4f9b\u7684\u84dd\u56fe\u7684\u7c7b\u3002\u5b83\u7684\u4e3b\u8981\u5e94\u7528\u662f\u8fd4\u56de\u751f\u6210\u53c2\u4e0e\u8005\u6240\u9700\u7684 carla.ActorBlueprint \u5bf9\u8c61\u3002\u6bcf\u4e2a\u84dd\u56fe\u90fd\u6709\u4e00\u4e2a\u6807\u8bc6\u7b26\u548c\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u662f\u53ef\u4fee\u6539\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u8be5\u5e93\u7531\u670d\u52a1\u5668\u81ea\u52a8\u521b\u5efa\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.World \u8bbf\u95ee\u3002 \u8fd9 \u662f\u5305\u542b\u6bcf\u4e2a\u53ef\u7528\u84dd\u56fe\u53ca\u5176\u7ec6\u8282\u7684\u53c2\u8003\u3002","title":"carla.BlueprintLibrary"},{"location":"python_api/#_19","text":"filter ( self , wildcard_pattern ) Filters a list of blueprints matching the wildcard_pattern against the id and tags of every blueprint contained in this library and returns the result as a new one. Matching follows fnmatch standard. \u53c2\u6570\uff1a wildcard_pattern ( str ) \u8fd4\u56de\uff1a carla.BlueprintLibrary filter_by_attribute ( self , name , value ) Filters a list of blueprints with a given attribute matching the value against every blueprint contained in this library and returns the result as a new one. Matching follows fnmatch standard. Parameters: name ( str ) value ( str ) Return: carla.BlueprintLibrary find ( self , id ) Returns the blueprint corresponding to that identifier. Parameters: id ( str ) Return: carla.ActorBlueprint","title":"\u65b9\u6cd5"},{"location":"python_api/#dunder-methods_5","text":"__getitem__ ( self , pos =int ) Returns the blueprint stored in pos position inside the data structure containing them. Return: carla.ActorBlueprint __iter__ ( self ) Iterate over the carla.ActorBlueprint stored in the library. __len__ ( self ) Returns the amount of blueprints comprising the library. Return: int __str__ ( self ) Parses the identifiers for every blueprint to string. Return: string","title":"Dunder methods"},{"location":"python_api/#carlaboundingbox","text":"Bounding boxes contain the geometry of an actor or an element in the scene. They can be used by carla.DebugHelper or a carla.Client to draw their shapes for debugging. Check out the snipet in carla.DebugHelper.draw_box where a snapshot of the world is used to draw bounding boxes for traffic lights.","title":"carla.BoundingBox"},{"location":"python_api/#_20","text":"extent ( carla.Vector3D - meters ) Vector from the center of the box to one vertex. The value in each axis equals half the size of the box for that axis. extent.x * 2 would return the size of the box in the X-axis. location ( carla.Location - meters ) The center of the bounding box. rotation ( carla.Rotation ) The orientation of the bounding box.","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#_21","text":"__init__ ( self , location , extent ) Parameters: location ( carla.Location ) - Center of the box, relative to its parent. extent ( carla.Vector3D - meters ) - Vector containing half the size of the box for every axis. contains ( self , world_point , transform ) Returns True if a point passed in world space is inside this bounding box. Parameters: world_point ( carla.Location - meters ) - The point in world space to be checked. transform ( carla.Transform ) - Contains location and rotation needed to convert this object's local space to world space. Return: bool","title":"\u65b9\u6cd5"},{"location":"python_api/#_22","text":"get_local_vertices ( self ) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5bf9\u8c61\u7684\u9876\u70b9\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002 \u8fd4\u56de\uff1a list( carla.Location ) get_world_vertices ( self , transform ) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u8be5\u5bf9\u8c61\u7684\u9876\u70b9\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002 \u53c2\u6570\uff1a transform ( carla.Transform ) - \u5305\u542b\u5c06\u6b64\u5bf9\u8c61\u7684\u672c\u5730\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u6240\u9700\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 \u8fd4\u56de\uff1a list( carla.Location )","title":"\u83b7\u53d6\u5668"},{"location":"python_api/#dunder-methods_6","text":"__eq__ ( self , other = carla.BoundingBox ) Returns true if both location and extent are equal for this and other . Return: bool __ne__ ( self , other = carla.BoundingBox ) Returns true if either location or extent are different for this and other . Return: bool __str__ ( self ) Parses the location and extent of the bounding box to string. Return: str","title":"Dunder methods"},{"location":"python_api/#carlacityobjectlabel","text":"\u5305\u542b\u53ef\u7528\u4e8e\u8fc7\u6ee4 carla.World.get_level_bbs () \u8fd4\u56de\u7684\u8fb9\u754c\u6846\u7684\u4e0d\u540c\u6807\u7b7e\u7684\u679a\u4e3e\u58f0\u660e\u3002\u8fd9\u4e9b\u503c\u5bf9\u5e94\u4e8e\u573a\u666f\u4e2d\u5143\u7d20\u6240\u5177\u6709\u7684 \u8bed\u4e49\u6807\u7b7e \u3002","title":"carla.CityObjectLabel"},{"location":"python_api/#_23","text":"None Buildings Fences Other Pedestrians Poles RoadLines Roads Sidewalks TrafficSigns Vegetation Vehicles Walls Sky Ground Bridge RailTrack GuardRail TrafficLight Static Dynamic Water Terrain Any","title":"\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python_api/#carlaclient","text":"\u5ba2\u6237\u7aef\u5c06 CARLA \u8fde\u63a5\u5230\u8fd0\u884c\u4eff\u771f\u7684\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u90fd\u5305\u542b CARLA \u5e93 (libcarla)\uff0c\u4f46\u5b58\u5728\u4e00\u4e9b\u5dee\u5f02\uff0c\u5141\u8bb8\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u4f1a\u8fde\u63a5\u5230\u6a21\u62df\u5185\u7684 RPC \u670d\u52a1\u5668\u4ee5\u53d1\u9001\u547d\u4ee4\u3002\u4eff\u771f\u5728\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u3002\u4e00\u65e6\u5efa\u7acb\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u5c06\u4ec5\u63a5\u6536\u4ece\u4eff\u771f\u68c0\u7d22\u7684\u6570\u636e\u3002\u6b65\u884c\u8005\u662f\u4f8b\u5916\u3002\u5ba2\u6237\u7aef\u8d1f\u8d23\u7ba1\u7406\u884c\u4eba\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u4e0e\u591a\u4e2a\u5ba2\u6237\u7aef\u4e00\u8d77\u8fd0\u884c\u6a21\u62df\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u901a\u8fc7\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u751f\u6210\u6b65\u884c\u8005\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ea\u77e5\u9053\u5b83\u8d1f\u8d23\u7684\u5ba2\u6237\u7aef\u3002 \u5ba2\u6237\u7aef\u8fd8\u5177\u6709\u8bb0\u5f55\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u6a21\u62df\u65f6\u4fdd\u5b58\u6a21\u62df\u7684\u6240\u6709\u4fe1\u606f\u3002\u8fd9\u4f7f\u5f97\u670d\u52a1\u5668\u53ef\u4ee5\u968f\u610f\u91cd\u653e\u4ee5\u83b7\u53d6\u4fe1\u606f\u5e76\u8fdb\u884c\u5b9e\u9a8c\u3002 \u4ee5\u4e0b \u662f\u6709\u5173\u5982\u4f55\u4f7f\u7528\u6b64\u5f55\u97f3\u673a\u7684\u4e00\u4e9b\u4fe1\u606f\u3002","title":"carla.Client"},{"location":"python_api/#_24","text":"__init__ ( self , host =127.0.0.1 , port =2000 , worker_threads =0 ) snippet \u2192 Client constructor. \u53c2\u6570\uff1a host ( str ) - IP address where a CARLA Simulator instance is running. Default is localhost (127.0.0.1). port ( int ) - TCP port where the CARLA Simulator instance is running. Default are 2000 and the subsequent 2001. worker_threads ( int ) - Number of working threads used for background updates. If 0, use all available concurrency. apply_batch ( self , commands ) Executes a list of commands on a single simulation step and retrieves no information. If you need information about the response of each command, use the apply_batch_sync() method. Here is an example on how to delete the actors that appear in carla.ActorList all at once. Parameters: commands ( list ) - A list of commands to execute in batch. Each command is different and has its own parameters. They appear listed at the bottom of this page. apply_batch_sync ( self , commands , due_tick_cue =False ) snippet \u2192 Executes a list of commands on a single simulation step, blocks until the commands are linked, and returns a list of command.Response that can be used to determine whether a single command succeeded or not. Here is an example of it being used to spawn actors. Parameters: commands ( list ) - A list of commands to execute in batch. The commands available are listed right above, in the method apply_batch() . due_tick_cue ( bool ) - A boolean parameter to specify whether or not to perform a carla.World.tick after applying the batch in synchronous mode . It is False by default. Return: list(command.Response) generate_opendrive_world ( self , opendrive , parameters =(2.0, 50.0, 1.0, 0.6, true, true) , reset_settings =True ) Loads a new world with a basic 3D topology generated from the content of an OpenDRIVE file. This content is passed as a string parameter. It is similar to client.load_world(map_name) but allows for custom OpenDRIVE maps in server side. Cars can drive around the map, but there are no graphics besides the road and sidewalks. Parameters: opendrive ( str ) - Content of an OpenDRIVE file as string , not the path to the .xodr . parameters ( carla.OpendriveGenerationParameters ) - Additional settings for the mesh generation. If none are provided, default values will be used. reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. load_world ( self , map_name , reset_settings =True , map_layers = carla.MapLayer.All ) Creates a new world with default settings using map_name map. All actors in the current world will be destroyed. Parameters: map_name ( str ) - Name of the map to be used in this world. Accepts both full paths and map names, e.g. '/Game/Carla/Maps/Town01' or 'Town01'. Remember that these paths are dynamic. reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. map_layers ( carla.MapLayer ) - Layers of the map that will be loaded. By default all layers are loaded. This parameter works like a flag mask. Warning: map_layers are only available for \"Opt\" maps reload_world ( self , reset_settings =True ) Reload the current world, note that a new world is created with default settings using the same map. All actors present in the world will be destroyed, but traffic manager instances will stay alive. Parameters: reset_settings ( bool ) - Option to reset the episode setting to default values, set to false to keep the current settings. This is useful to keep sync mode when changing map and to keep deterministic scenarios. Raises: RuntimeError when corresponding. replay_file ( self , name , start , duration , follow_id , replay_sensors ) Load a new world with default settings using map_name map. All actors present in the current world will be destroyed, but traffic manager instances will stay alive. Parameters: name ( str ) - Name of the file containing the information of the simulation. start ( float - seconds ) - Time where to start playing the simulation. Negative is read as beginning from the end, being -10 just 10 seconds before the recording finished. duration ( float - seconds ) - Time that will be reenacted using the information name file. If the end is reached, the simulation will continue. follow_id ( int ) - ID of the actor to follow. If this is 0 then camera is disabled. replay_sensors ( bool ) - Flag to enable or disable the spawn of sensors during playback. request_file ( self , name ) Requests one of the required files returned by carla.Client.get_required_files . Parameters: name ( str ) - Name of the file you are requesting. show_recorder_actors_blocked ( self , filename , min_time , min_distance ) The terminal will show the information registered for actors considered blocked. An actor is considered blocked when it does not move a minimum distance in a period of time, being these min_distance and min_time . Parameters: filename ( str ) - Name of the recorded file to load. min_time ( float - seconds ) - Minimum time the actor has to move a minimum distance before being considered blocked. Default is 60 seconds. min_distance ( float - centimeters ) - Minimum distance the actor has to move to not be considered blocked. Default is 100 centimeters. Return: string show_recorder_collisions ( self , filename , category1 , category2 ) The terminal will show the collisions registered by the recorder. These can be filtered by specifying the type of actor involved. The categories will be specified in category1 and category2 as follows: 'h' = Hero, the one vehicle that can be controlled manually or managed by the user. 'v' = Vehicle 'w' = Walker 't' = Traffic light 'o' = Other 'a' = Any If you want to see only collisions between a vehicles and a walkers, use for category1 as 'v' and category2 as 'w' or vice versa. If you want to see all the collisions (filter off) you can use 'a' for both parameters. Parameters: filename ( str ) - Name or absolute path of the file recorded, depending on your previous choice. category1 ( single char ) - Character variable specifying a first type of actor involved in the collision. category2 ( single char ) - Character variable specifying the second type of actor involved in the collision. Return: string show_recorder_file_info ( self , filename , show_all ) The information saved by the recorder will be parsed and shown in your terminal as text (frames, times, events, state, positions...). The information shown can be specified by using the show_all parameter. Here is some more information about how to read the recorder file. Parameters: filename ( str ) - Name or absolute path of the file recorded, depending on your previous choice. show_all ( bool ) - If True , returns all the information stored for every frame (traffic light states, positions of all actors, orientation and animation data...). If False , returns a summary of key events and frames. Return: string start_recorder ( self , filename , additional_data =False ) Enables the recording feature, which will start saving every information possible needed by the server to replay the simulation. Parameters: filename ( str ) - Name of the file to write the recorded data. A simple name will save the recording in 'CarlaUE4/Saved/recording.log'. Otherwise, if some folder appears in the name, it will be considered an absolute path. additional_data ( bool ) - Enables or disable recording non-essential data for reproducing the simulation (bounding box location, physics control parameters, etc). stop_recorder ( self ) Stops the recording in progress. If you specified a path in filename , the recording will be there. If not, look inside CarlaUE4/Saved/ . stop_replayer ( self , keep_actors ) Stop current replayer. Parameters: keep_actors ( bool ) - True if you want autoremove all actors from the replayer, or False to keep them.","title":"\u65b9\u6cd5"},{"location":"python_api/#getters","text":"get_available_maps ( self ) Returns a list of strings containing the paths of the maps available on server. These paths are dynamic, they will be created during the simulation and so you will not find them when looking up in your files. One of the possible returns for this method would be: ['/Game/Carla/Maps/Town01', '/Game/Carla/Maps/Town02', '/Game/Carla/Maps/Town03', '/Game/Carla/Maps/Town04', '/Game/Carla/Maps/Town05', '/Game/Carla/Maps/Town06', '/Game/Carla/Maps/Town07']. Return: list(str) get_client_version ( self ) Returns the client libcarla version by consulting it in the \"Version.h\" file. Both client and server can use different libcarla versions but some issues may arise regarding unexpected incompatibilities. Return: str get_required_files ( self , folder , download =True ) Asks the server which files are required by the client to use the current map. Option to download files automatically if they are not already in the cache. Parameters: folder ( str ) - Folder where files required by the client will be downloaded to. download ( bool ) - If True, downloads files that are not already in cache. get_server_version ( self ) Returns the server libcarla version by consulting it in the \"Version.h\" file. Both client and server should use the same libcarla version. Return: str get_trafficmanager ( self , client_connection =8000 ) Returns an instance of the traffic manager related to the specified port. If it does not exist, this will be created. Parameters: client_connection ( int ) - Port that will be used by the traffic manager. Default is 8000 . Return: carla.TrafficManager get_world ( self ) Returns the world object currently active in the simulation. This world will be later used for example to load maps. Return: carla.World","title":"Getters"},{"location":"python_api/#setters","text":"set_files_base_folder ( self , path ) Parameters: path ( str ) - Specifies the base folder where the local cache for required files will be placed. set_replayer_ignore_hero ( self , ignore_hero ) Parameters: ignore_hero ( bool ) - Enables or disables playback of the hero vehicle during a playback of a recorded simulation. set_replayer_ignore_spectator ( self , ignore_spectator ) Parameters: ignore_spectator ( bool ) - Determines whether the recorded spectator movements will be replicated by the replayer. set_replayer_time_factor ( self , time_factor =1.0 ) When used, the time speed of the reenacted simulation is modified at will. It can be used several times while a playback is in curse. Parameters: time_factor ( float ) - 1.0 means normal time speed. Greater than 1.0 means fast motion (2.0 would be double speed) and lesser means slow motion (0.5 would be half speed). set_timeout ( self , seconds ) Sets the maximum time a network call is allowed before blocking it and raising a timeout exceeded error. Parameters: seconds ( float - seconds ) - New timeout value. Default is 5 seconds.","title":"Setters"},{"location":"python_api/#carlacollisionevent","text":"Inherited from carla.SensorData Class that defines a collision data for sensor.other.collision . The sensor creates one of these for every collision detected. Each collision sensor produces one collision event per collision per frame. Multiple collision events may be produced in a single frame by collisions with multiple other actors. Learn more about this here .","title":"carla.CollisionEvent"},{"location":"python_api/#instance-variables","text":"actor ( carla.Actor ) The actor the sensor is attached to, the one that measured the collision. other_actor ( carla.Actor ) The second actor involved in the collision. normal_impulse ( carla.Vector3D - N*s ) Normal impulse resulting of the collision.","title":"Instance Variables"},{"location":"python_api/#carlacolor","text":"Class that defines a 32-bit RGBA color.","title":"carla.Color"},{"location":"python_api/#instance-variables_1","text":"r ( int ) Red color (0-255). g ( int ) Green color (0-255). b ( int ) Blue color (0-255). a ( int ) Alpha channel (0-255).","title":"Instance Variables"},{"location":"python_api/#methods_1","text":"__init__ ( self , r =0 , g =0 , b =0 , a =255 ) Initializes a color, black by default. Parameters: r ( int ) g ( int ) b ( int ) a ( int )","title":"Methods"},{"location":"python_api/#dunder-methods_7","text":"__eq__ ( self , other = carla.Color ) __ne__ ( self , other = carla.Color ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlacolorconverter","text":"Class that defines conversion patterns that can be applied to a carla.Image in order to show information provided by carla.Sensor . Depth conversions cause a loss of accuracy, as sensors detect depth as float that is then converted to a grayscale value between 0 and 255. Take a look at the snipet in carla.Sensor.listen to see an example of how to create and save image data for sensor.camera.semantic_segmentation .","title":"carla.ColorConverter"},{"location":"python_api/#instance-variables_2","text":"CityScapesPalette Converts the image to a segmented map using tags provided by the blueprint library. Used by the semantic segmentation camera . Depth Converts the image to a linear depth map. Used by the depth camera . LogarithmicDepth Converts the image to a depth map using a logarithmic scale, leading to better precision for small distances at the expense of losing it when further away. Raw No changes applied to the image. Used by the RGB camera .","title":"Instance Variables"},{"location":"python_api/#carladvsevent","text":"Class that defines a DVS event. An event is a quadruple, so a tuple of 4 elements, with x , y pixel coordinate location, timestamp t and polarity pol of the event. Learn more about them here .","title":"carla.DVSEvent"},{"location":"python_api/#instance-variables_3","text":"x ( int ) X pixel coordinate. y ( int ) Y pixel coordinate. t ( int ) Timestamp of the moment the event happened. pol ( bool ) Polarity of the event. True for positive and False for negative.","title":"Instance Variables"},{"location":"python_api/#methods_2","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_8","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carladvseventarray","text":"Class that defines a stream of events in carla.DVSEvent . Such stream is an array of arbitrary size depending on the number of events. This class also stores the field of view, the height and width of the image and the timestamp from convenience. Learn more about them here .","title":"carla.DVSEventArray"},{"location":"python_api/#instance-variables_4","text":"fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes )","title":"Instance Variables"},{"location":"python_api/#methods_3","text":"to_array ( self ) Converts the stream of events to an array of int values in the following order [x, y, t, pol] . to_array_pol ( self ) Returns an array with the polarity of all the events in the stream. to_array_t ( self ) Returns an array with the timestamp of all the events in the stream. to_array_x ( self ) Returns an array with X pixel coordinate of all the events in the stream. to_array_y ( self ) Returns an array with Y pixel coordinate of all the events in the stream. to_image ( self ) Converts the image following this pattern: blue indicates positive events, red indicates negative events.","title":"Methods"},{"location":"python_api/#dunder-methods_9","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.DVSEvent retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carladebughelper","text":"Helper class part of carla.World that defines methods for creating debug shapes. By default, shapes last one second. They can be permanent, but take into account the resources needed to do so. Take a look at the snipets available for this class to learn how to debug easily in CARLA.","title":"carla.DebugHelper"},{"location":"python_api/#methods_4","text":"draw_arrow ( self , begin , end , thickness =0.1 , arrow_size =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws an arrow from begin to end pointing in that direction. Parameters: begin ( carla.Location - meters ) - Point in the coordinate system where the arrow starts. end ( carla.Location - meters ) - Point in the coordinate system where the arrow ends and points towards to. thickness ( float - meters ) - Density of the line. arrow_size ( float - meters ) - Size of the tip of the arrow. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_box ( self , box , rotation , thickness =0.1 , color =(255,0,0) , life_time =-1.0 ) snippet \u2192 Draws a box, ussually to act for object colliders. Parameters: box ( carla.BoundingBox ) - Object containing a location and the length of a box for every axis. rotation ( carla.Rotation - degrees (pitch,yaw,roll) ) - Orientation of the box according to Unreal Engine's axis system. thickness ( float - meters ) - Density of the lines that define the box. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_line ( self , begin , end , thickness =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws a line in between begin and end . Parameters: begin ( carla.Location - meters ) - Point in the coordinate system where the line starts. end ( carla.Location - meters ) - Spot in the coordinate system where the line ends. thickness ( float - meters ) - Density of the line. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_point ( self , location , size =0.1 , color =(255,0,0) , life_time =-1.0 ) Draws a point location . Parameters: location ( carla.Location - meters ) - Spot in the coordinate system to center the object. size ( float - meters ) - Density of the point. color ( carla.Color ) - RGB code to color the object. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes. draw_string ( self , location , text , draw_shadow =False , color =(255,0,0) , life_time =-1.0 ) snippet \u2192 Draws a string in a given location of the simulation which can only be seen server-side. Parameters: location ( carla.Location - meters ) - Spot in the simulation where the text will be centered. text ( str ) - Text intended to be shown in the world. draw_shadow ( bool ) - Casts a shadow for the string that could help in visualization. It is disabled by default. color ( carla.Color ) - RGB code to color the string. Red by default. life_time ( float - seconds ) - Shape's lifespan. By default it only lasts one frame. Set this to 0 for permanent shapes.","title":"Methods"},{"location":"python_api/#carlaenvironmentobject","text":"Class that represents a geometry in the level, this geometry could be part of an actor formed with other EnvironmentObjects (ie: buildings).","title":"carla.EnvironmentObject"},{"location":"python_api/#instance-variables_5","text":"transform ( carla.Transform ) Contains the location and orientation of the EnvironmentObject in world space. bounding_box ( carla.BoundingBox ) Object containing a location, rotation and the length of a box for every axis in world space. id ( int ) Unique ID to identify the object in the level. name ( string ) Name of the EnvironmentObject. type ( carla.CityObjectLabel ) Semantic tag.","title":"Instance Variables"},{"location":"python_api/#methods_5","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_10","text":"__str__ ( self ) Parses the EnvironmentObject to a string and shows them in command line. Return: str","title":"Dunder methods"},{"location":"python_api/#carlafloatcolor","text":"Class that defines a float RGBA color.","title":"carla.FloatColor"},{"location":"python_api/#instance-variables_6","text":"r ( float ) Red color. g ( float ) Green color. b ( float ) Blue color. a ( float ) Alpha channel.","title":"Instance Variables"},{"location":"python_api/#methods_6","text":"__init__ ( self , r =0 , g =0 , b =0 , a =1.0 ) Initializes a color, black by default. Parameters: r ( float ) g ( float ) b ( float ) a ( float )","title":"Methods"},{"location":"python_api/#dunder-methods_11","text":"__eq__ ( self , other = carla.FloatColor ) __ne__ ( self , other = carla.FloatColor )","title":"Dunder methods"},{"location":"python_api/#carlagbuffertextureid","text":"Defines the identifiers of each GBuffer texture (See the method [carla.Sensor.listen_to_gbuffer](#carla.Sensor.listen_to_gbuffer) ).","title":"carla.GBufferTextureID"},{"location":"python_api/#instance-variables_7","text":"SceneColor The texture \"SceneColor\" contains the final color of the image. SceneDepth The texture \"SceneDepth\" contains the depth buffer - linear in world units. SceneStencil The texture \"SceneStencil\" contains the stencil buffer. GBufferA The texture \"GBufferA\" contains the world-space normal vectors in the RGB channels. The alpha channel contains \"per-object data\". GBufferB The texture \"GBufferB\" contains the metallic, specular and roughness in the RGB channels, respectively. The alpha channel contains a mask where the lower 4 bits indicate the shading model and the upper 4 bits contain the selective output mask. GBufferC The texture \"GBufferC\" contains the diffuse color in the RGB channels, with the indirect irradiance in the alpha channel. If static lightning is not allowed, the alpha channel will contain the ambient occlusion instead. GBufferD The contents of the \"GBufferD\" varies depending on the rendered object's material shading model (GBufferB): MSM_Subsurface (2), MSM_PreintegratedSkin (3), MSM_TwoSidedFoliage (6): RGB: Subsurface color. A: Opacity. MSM_ClearCoat (4): R: Clear coat. G: Roughness. MSM_SubsurfaceProfile (5): RGB: Subsurface profile. MSM_Hair (7): RG: World normal. B: Backlit value. MSM_Cloth (8): RGB: Subsurface color. A: Cloth value. MSM_Eye (9): RG: Eye tangent. B: Iris mask. A: Iris distance. GBufferE The texture \"GBufferE\" contains the precomputed shadow factors in the RGBA channels. This texture is unavailable if the selective output mask (GBufferB) does not have its 4th bit set. GBufferF The texture \"GBufferF\" contains the world-space tangent in the RGB channels and the anisotropy in the alpha channel. This texture is unavailable if the selective output mask (GBufferB) does not have its 5th bit set. Velocity The texture \"Velocity\" contains the screen-space velocity of the scene objects. SSAO The texture \"SSAO\" contains the screen-space ambient occlusion texture. CustomDepth The texture \"CustomDepth\" contains the Unreal Engine custom depth data. CustomStencil The texture \"CustomStencil\" contains the Unreal Engine custom stencil data.","title":"Instance Variables"},{"location":"python_api/#carlagearphysicscontrol","text":"Class that provides access to vehicle transmission details by defining a gear and when to run on it. This will be later used by carla.VehiclePhysicsControl to help simulate physics.","title":"carla.GearPhysicsControl"},{"location":"python_api/#instance-variables_8","text":"ratio ( float ) The transmission ratio of the gear. down_ratio ( float ) Quotient between current RPM and MaxRPM where the autonomous gear box should shift down. up_ratio ( float ) Quotient between current RPM and MaxRPM where the autonomous gear box should shift up.","title":"Instance Variables"},{"location":"python_api/#methods_7","text":"__init__ ( self , ratio =1.0 , down_ratio =0.5 , up_ratio =0.65 ) Parameters: ratio ( float ) down_ratio ( float ) up_ratio ( float )","title":"Methods"},{"location":"python_api/#dunder-methods_12","text":"__eq__ ( self , other = carla.GearPhysicsControl ) __ne__ ( self , other = carla.GearPhysicsControl ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlageolocation","text":"Class that contains geographical coordinates simulated data. The carla.Map can convert simulation locations by using the tag in the OpenDRIVE file.","title":"carla.GeoLocation"},{"location":"python_api/#instance-variables_9","text":"latitude ( float - degrees ) North/South value of a point on the map. longitude ( float - degrees ) West/East value of a point on the map. altitude ( float - meters ) Height regarding ground level.","title":"Instance Variables"},{"location":"python_api/#methods_8","text":"__init__ ( self , latitude =0.0 , longitude =0.0 , altitude =0.0 ) Parameters: latitude ( float - degrees ) longitude ( float - degrees ) altitude ( float - meters )","title":"Methods"},{"location":"python_api/#dunder-methods_13","text":"__eq__ ( self , other = carla.GeoLocation ) __ne__ ( self , other = carla.GeoLocation ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlagnssmeasurement","text":"Inherited from carla.SensorData Class that defines the Gnss data registered by a sensor.other.gnss . It essentially reports its position with the position of the sensor and an OpenDRIVE geo-reference.","title":"carla.GnssMeasurement"},{"location":"python_api/#instance-variables_10","text":"altitude ( float - meters ) Height regarding ground level. latitude ( float - degrees ) North/South value of a point on the map. longitude ( float - degrees ) West/East value of a point on the map.","title":"Instance Variables"},{"location":"python_api/#methods_9","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_14","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaimumeasurement","text":"Inherited from carla.SensorData Class that defines the data registered by a sensor.other.imu , regarding the sensor's transformation according to the current carla.World . It essentially acts as accelerometer, gyroscope and compass.","title":"carla.IMUMeasurement"},{"location":"python_api/#instance-variables_11","text":"accelerometer ( carla.Vector3D - m/s 2 ) Linear acceleration. compass ( float - radians ) Orientation with regard to the North ([0.0, -1.0, 0.0] in Unreal Engine). gyroscope ( carla.Vector3D - rad/s ) Angular velocity.","title":"Instance Variables"},{"location":"python_api/#methods_10","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_15","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaimage","text":"Inherited from carla.SensorData Class that defines an image of 32-bit BGRA colors that will be used as initial data retrieved by camera sensors. There are different camera sensors (currently three, RGB, depth and semantic segmentation) and each of these makes different use for the images. Learn more about them here .","title":"carla.Image"},{"location":"python_api/#instance-variables_12","text":"fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes ) Flattened array of pixel data, use reshape to create an image array.","title":"Instance Variables"},{"location":"python_api/#methods_11","text":"convert ( self , color_converter ) Converts the image following the color_converter pattern. Parameters: color_converter ( carla.ColorConverter ) save_to_disk ( self , path , color_converter =Raw ) Saves the image to disk using a converter pattern stated as color_converter . The default conversion pattern is Raw that will make no changes to the image. Parameters: path ( str ) - Path that will contain the image. color_converter ( carla.ColorConverter ) - Default Raw will make no changes.","title":"Methods"},{"location":"python_api/#dunder-methods_16","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.Color that form the image. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlajunction","text":"Class that embodies the intersections on the road described in the OpenDRIVE file according to OpenDRIVE 1.4 standards.","title":"carla.Junction"},{"location":"python_api/#instance-variables_13","text":"id ( int ) Identifier found in the OpenDRIVE file. bounding_box ( carla.BoundingBox ) Bounding box encapsulating the junction lanes.","title":"Instance Variables"},{"location":"python_api/#methods_12","text":"","title":"Methods"},{"location":"python_api/#getters_1","text":"get_waypoints ( self , lane_type ) Returns a list of pairs of waypoints. Every tuple on the list contains first an initial and then a final waypoint within the intersection boundaries that describe the beginning and the end of said lane along the junction. Lanes follow their OpenDRIVE definitions so there may be many different tuples with the same starting waypoint due to possible deviations, as this are considered different lanes. Parameters: lane_type ( carla.LaneType ) - Type of lanes to get the waypoints. Return: list(tuple( carla.Waypoint ))","title":"Getters"},{"location":"python_api/#carlalabelledpoint","text":"Class that represent a position in space with a semantic label.","title":"carla.LabelledPoint"},{"location":"python_api/#instance-variables_14","text":"location Position in 3D space. label Semantic tag of the point.","title":"Instance Variables"},{"location":"python_api/#carlalandmark","text":"Class that defines any type of traffic landmark or sign affecting a road. These class mediates between the OpenDRIVE 1.4 standard definition of the landmarks and their representation in the simulation. This class retrieves all the information defining a landmark in OpenDRIVE and facilitates information about which lanes does it affect and when. Landmarks will be accessed by carla.Waypoint objects trying to retrieve the regulation of their lane. Therefore some attributes depend on the waypoint that is consulting the landmark and so, creating the object.","title":"carla.Landmark"},{"location":"python_api/#instance-variables_15","text":"road_id ( int ) The OpenDRIVE ID of the road where this landmark is defined. Due to OpenDRIVE road definitions, this road may be different from the road the landmark is currently affecting. It is mostly the case in junctions where the road diverges in different routes. Example: a traffic light is defined in one of the divergent roads in a junction, but it affects all the possible routes . distance ( float - meters ) Distance between the landmark and the waypoint creating the object (querying get_landmarks or get_landmarks_of_type ). s ( float - meters ) Distance where the landmark is positioned along the geometry of the road road_id . t ( float - meters ) Lateral distance where the landmark is positioned from the edge of the road road_id . id ( str ) Unique ID of the landmark in the OpenDRIVE file. name ( str ) Name of the landmark in the in the OpenDRIVE file. is_dynamic ( bool ) Indicates if the landmark has state changes over time such as traffic lights. orientation ( carla.LandmarkOrientation - degrees ) Indicates which lanes the landmark is facing towards to. z_offset ( float - meters ) Height where the landmark is placed. country ( str ) Country code where the landmark is defined (default to OpenDRIVE is Germany 2017). type ( str ) Type identifier of the landmark according to the country code. sub_type ( str ) Subtype identifier of the landmark according to the country code. value ( float ) Value printed in the signal (e.g. speed limit, maximum weight, etc). unit ( str ) Units of measurement for the attribute value . height ( float - meters ) Total height of the signal. width ( float - meters ) Total width of the signal. text ( str ) Additional text in the signal. h_offset ( float - meters ) Orientation offset of the signal relative to the the definition of road_id at s in OpenDRIVE. pitch ( float - meters ) Pitch rotation of the signal (Y-axis in UE coordinates system ). roll ( float ) Roll rotation of the signal (X-axis in UE coordinates system ). waypoint ( carla.Waypoint ) A waypoint placed in the lane of the one that made the query and at the s of the landmark. It is the first waypoint for which the landmark will be effective. transform ( carla.Transform ) The location and orientation of the landmark in the simulation.","title":"Instance Variables"},{"location":"python_api/#methods_13","text":"","title":"Methods"},{"location":"python_api/#getters_2","text":"get_lane_validities ( self ) Returns which lanes the landmark is affecting to. As there may be specific lanes where the landmark is not effective, the return is a list of pairs containing ranges of the lane_id affected: Example: In a road with 5 lanes, being 3 not affected: [(from_lane1,to_lane2),(from_lane4,to_lane5)] . Return: list(tuple(int))","title":"Getters"},{"location":"python_api/#carlalandmarkorientation","text":"Helper class to define the orientation of a landmark in the road. The definition is not directly translated from OpenDRIVE but converted for the sake of understanding.","title":"carla.LandmarkOrientation"},{"location":"python_api/#instance-variables_16","text":"Positive The landmark faces towards vehicles going on the same direction as the road's geometry definition (lanes 0 and negative in OpenDRIVE). Negative The landmark faces towards vehicles going on the opposite direction to the road's geometry definition (positive lanes in OpenDRIVE). Both Affects vehicles going in both directions of the road.","title":"Instance Variables"},{"location":"python_api/#carlalandmarktype","text":"Helper class containing a set of commonly used landmark types as defined by the default country code in the OpenDRIVE standard (Germany 2017). carla.Landmark does not reference this class . The landmark type is a string that varies greatly depending on the country code being used. This class only makes it easier to manage some of the most commonly used in the default set by describing them as an enum.","title":"carla.LandmarkType"},{"location":"python_api/#instance-variables_17","text":"Danger Type 101. LanesMerging Type 121. CautionPedestrian Type 133. CautionBicycle Type 138. LevelCrossing Type 150. StopSign Type 206. YieldSign Type 205. MandatoryTurnDirection Type 209. MandatoryLeftRightDirection Type 211. TwoChoiceTurnDirection Type 214. Roundabout Type 215. PassRightLeft Type 222. AccessForbidden Type 250. AccessForbiddenMotorvehicles Type 251. AccessForbiddenTrucks Type 253. AccessForbiddenBicycle Type 254. AccessForbiddenWeight Type 263. AccessForbiddenWidth Type 264. AccessForbiddenHeight Type 265. AccessForbiddenWrongDirection Type 267. ForbiddenUTurn Type 272. MaximumSpeed Type 274. ForbiddenOvertakingMotorvehicles Type 276. ForbiddenOvertakingTrucks Type 277. AbsoluteNoStop Type 283. RestrictedStop Type 286. HasWayNextIntersection Type 301. PriorityWay Type 306. PriorityWayEnd Type 307. CityBegin Type 310. CityEnd Type 311. Highway Type 330. DeadEnd Type 357. RecomendedSpeed Type 380. RecomendedSpeedEnd Type 381.","title":"Instance Variables"},{"location":"python_api/#carlalanechange","text":"Class that defines the permission to turn either left, right, both or none (meaning only going straight is allowed). This information is stored for every carla.Waypoint according to the OpenDRIVE file. The snipet in carla.Map.get_waypoint shows how a waypoint can be used to learn which turns are permitted.","title":"carla.LaneChange"},{"location":"python_api/#instance-variables_18","text":"NONE Traffic rules do not allow turning right or left, only going straight. Right Traffic rules allow turning right. Left Traffic rules allow turning left. Both Traffic rules allow turning either right or left.","title":"Instance Variables"},{"location":"python_api/#carlalaneinvasionevent","text":"Inherited from carla.SensorData Class that defines lanes invasion for sensor.other.lane_invasion . It works only client-side and is dependant on OpenDRIVE to provide reliable information. The sensor creates one of this every time there is a lane invasion, which may be more than once per simulation step. Learn more about this here .","title":"carla.LaneInvasionEvent"},{"location":"python_api/#instance-variables_19","text":"actor ( carla.Actor ) Gets the actor the sensor is attached to, the one that invaded another lane. crossed_lane_markings ( list( carla.LaneMarking ) ) List of lane markings that have been crossed and detected by the sensor.","title":"Instance Variables"},{"location":"python_api/#methods_14","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_17","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlalanemarking","text":"Class that gathers all the information regarding a lane marking according to OpenDRIVE 1.4 standard standard.","title":"carla.LaneMarking"},{"location":"python_api/#instance-variables_20","text":"color ( carla.LaneMarkingColor ) Actual color of the marking. lane_change ( carla.LaneChange ) Permissions for said lane marking to be crossed. type ( carla.LaneMarkingType ) Lane marking type. width ( float ) Horizontal lane marking thickness.","title":"Instance Variables"},{"location":"python_api/#carlalanemarkingcolor","text":"Class that defines the lane marking colors according to OpenDRIVE 1.4.","title":"carla.LaneMarkingColor"},{"location":"python_api/#instance-variables_21","text":"Standard White by default. Blue Green Red White Yellow Other","title":"Instance Variables"},{"location":"python_api/#carlalanemarkingtype","text":"Class that defines the lane marking types accepted by OpenDRIVE 1.4. The snipet in carla.Map.get_waypoint shows how a waypoint can be used to retrieve the information about adjacent lane markings. Note on double types: Lane markings are defined under the OpenDRIVE standard that determines whereas a line will be considered \"BrokenSolid\" or \"SolidBroken\". For each road there is a center lane marking, defined from left to right regarding the lane's directions. The rest of the lane markings are defined in order from the center lane to the closest outside of the road.","title":"carla.LaneMarkingType"},{"location":"python_api/#instance-variables_22","text":"NONE Other Broken Solid SolidSolid SolidBroken BrokenSolid BrokenBroken BottsDots Grass Curb","title":"Instance Variables"},{"location":"python_api/#carlalanetype","text":"Class that defines the possible lane types accepted by OpenDRIVE 1.4. This standards define the road information. The snipet in carla.Map.get_waypoint makes use of a waypoint to get the current and adjacent lane types.","title":"carla.LaneType"},{"location":"python_api/#instance-variables_23","text":"NONE Driving Stop Shoulder Biking Sidewalk Border Restricted Parking Bidirectional Median Special1 Special2 Special3 RoadWorks Tram Rail Entry Exit OffRamp OnRamp Any Every type except for NONE.","title":"Instance Variables"},{"location":"python_api/#carlalidardetection","text":"Data contained inside a carla.LidarMeasurement . Each of these represents one of the points in the cloud with its location and its associated intensity.","title":"carla.LidarDetection"},{"location":"python_api/#instance-variables_24","text":"point ( carla.Location - meters ) Point in xyz coordinates. intensity ( float ) Computed intensity for this point as a scalar value between [0.0 , 1.0].","title":"Instance Variables"},{"location":"python_api/#methods_15","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_18","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlalidarmeasurement","text":"Inherited from carla.SensorData Class that defines the LIDAR data retrieved by a sensor.lidar.ray_cast . This essentially simulates a rotating LIDAR using ray-casting. Learn more about this here .","title":"carla.LidarMeasurement"},{"location":"python_api/#instance-variables_25","text":"channels ( int ) Number of lasers shot. horizontal_angle ( float - radians ) Horizontal angle the LIDAR is rotated at the time of the measurement. raw_data ( bytes ) Received list of 4D points. Each point consists of [x,y,z] coordinates plus the intensity computed for that point.","title":"Instance Variables"},{"location":"python_api/#methods_16","text":"save_to_disk ( self , path ) Saves the point cloud to disk as a .ply file describing data from 3D scanners. The files generated are ready to be used within MeshLab , an open source system for processing said files. Just take into account that axis may differ from Unreal Engine and so, need to be reallocated. Parameters: path ( str )","title":"Methods"},{"location":"python_api/#getters_3","text":"get_point_count ( self , channel ) Retrieves the number of points sorted by channel that are generated by this measure. Sorting by channel allows to identify the original channel for every point. Parameters: channel ( int )","title":"Getters"},{"location":"python_api/#dunder-methods_19","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.LidarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.LidarDetection ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlalight","text":"This class exposes the lights that exist in the scene, except for vehicle lights. The properties of a light can be queried and changed at will. Lights are automatically turned on when the simulator enters night mode (sun altitude is below zero).","title":"carla.Light"},{"location":"python_api/#instance-variables_26","text":"color ( carla.Color ) Color of the light. id ( int ) Identifier of the light. intensity ( float - lumens ) Intensity of the light. is_on ( bool ) Switch of the light. It is True when the light is on. When the night mode starts, this is set to True . location ( carla.Location - meters ) Position of the light. light_group ( carla.LightGroup ) Group the light belongs to. light_state ( carla.LightState ) State of the light. Summarizes its attributes, group, and if it is on/off.","title":"Instance Variables"},{"location":"python_api/#methods_17","text":"turn_off ( self ) Switches off the light. turn_on ( self ) Switches on the light.","title":"Methods"},{"location":"python_api/#setters_1","text":"set_color ( self , color ) Changes the color of the light to color . Parameters: color ( carla.Color ) set_intensity ( self , intensity ) Changes the intensity of the light to intensity . Parameters: intensity ( float - lumens ) set_light_group ( self , light_group ) Changes the light to the group light_group . Parameters: light_group ( carla.LightGroup ) set_light_state ( self , light_state ) Changes the state of the light to light_state . This may change attributes, group and turn the light on/off all at once. Parameters: light_state ( carla.LightState )","title":"Setters"},{"location":"python_api/#carlalightgroup","text":"This class categorizes the lights on scene into different groups. These groups available are provided as a enum values that can be used as flags. Note. So far, though there is a vehicle group, vehicle lights are not available as carla.Light objects. These have to be managed using carla.Vehicle and carla.VehicleLightState .","title":"carla.LightGroup"},{"location":"python_api/#instance-variables_27","text":"None All lights. Vehicle Street Building Other","title":"Instance Variables"},{"location":"python_api/#carlalightmanager","text":"This class handles the lights in the scene. Its main use is to get and set the state of groups or lists of lights in one call. An instance of this class can be retrieved by the carla.World.get_lightmanager (). Note. So far, though there is a vehicle group, vehicle lights are not available as carla.Light objects. These have to be managed using carla.Vehicle and carla.VehicleLightState .","title":"carla.LightManager"},{"location":"python_api/#methods_18","text":"is_active ( self , lights ) Returns a list with booleans stating if the elements in lights are switched on/off. Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list(bool) turn_off ( self , lights ) Switches off all the lights in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched off. turn_on ( self , lights ) Switches on all the lights in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched on.","title":"Methods"},{"location":"python_api/#getters_4","text":"get_all_lights ( self , light_group = carla.LightGroup.None ) Returns a list containing the lights in a certain group. By default, the group is None . Parameters: light_group ( carla.LightGroup ) - Group to filter the lights returned. Default is None . Return: list( carla.Light ) get_color ( self , lights ) Returns a list with the colors of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.Color ) Setter: carla.LightManager.set_color get_intensity ( self , lights ) Returns a list with the intensity of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list(float) - lumens Setter: carla.LightManager.set_intensity get_light_group ( self , lights ) Returns a list with the group of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.LightGroup ) Setter: carla.LightManager.set_light_group get_light_state ( self , lights ) Returns a list with the state of all the attributes of every element in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be queried. Return: list( carla.LightState ) Setter: carla.LightManager.set_light_state get_turned_off_lights ( self , light_group ) Returns a list containing lights switched off in the scene, filtered by group. Parameters: light_group ( carla.LightGroup ) - List of lights to be queried. Return: list( carla.Light ) get_turned_on_lights ( self , light_group ) Returns a list containing lights switched on in the scene, filtered by group. Parameters: light_group ( carla.LightGroup ) - List of lights to be queried. Return: list( carla.Light )","title":"Getters"},{"location":"python_api/#setters_2","text":"set_active ( self , lights , active ) Switches on/off the elements in lights . Parameters: lights ( list( carla.Light ) ) - List of lights to be switched on/off. active ( list(bool) ) - List of booleans to be applied. set_color ( self , lights , color ) Changes the color of the elements in lights to color . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. color ( carla.Color ) - Color to be applied. Getter: carla.LightManager.get_color set_colors ( self , lights , colors ) Changes the color of each element in lights to the corresponding in colors . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. colors ( list( carla.Color ) ) - List of colors to be applied. set_day_night_cycle ( self , active ) All scene lights have a day-night cycle, automatically turning on and off with the altitude of the sun. This interferes in cases where full control of the scene lights is required, so setting this to False deactivates it. It can reactivated by setting it to True . Parameters: active ( bool ) - (De)activation of the day-night cycle. set_intensities ( self , lights , intensities ) Changes the intensity of each element in lights to the corresponding in intensities . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. intensities ( list(float) - lumens ) - List of intensities to be applied. set_intensity ( self , lights , intensity ) Changes the intensity of every element in lights to intensity . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. intensity ( float - lumens ) - Intensity to be applied. Getter: carla.LightManager.get_intensity set_light_group ( self , lights , light_group ) Changes the group of every element in lights to light_group . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_group ( carla.LightGroup ) - Group to be applied. Getter: carla.LightManager.get_light_group set_light_groups ( self , lights , light_groups ) Changes the group of each element in lights to the corresponding in light_groups . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_groups ( list( carla.LightGroup ) ) - List of groups to be applied. set_light_state ( self , lights , light_state ) Changes the state of the attributes of every element in lights to light_state . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_state ( carla.LightState ) - State of the attributes to be applied. Getter: carla.LightManager.get_light_state set_light_states ( self , lights , light_states ) Changes the state of the attributes of each element in lights to the corresponding in light_states . Parameters: lights ( list( carla.Light ) ) - List of lights to be changed. light_states ( list( carla.LightState ) ) - List of state of the attributes to be applied.","title":"Setters"},{"location":"python_api/#carlalightstate","text":"This class represents all the light variables except the identifier and the location, which are should to be static. Using this class allows to manage all the parametrization of the light in one call.","title":"carla.LightState"},{"location":"python_api/#instance-variables_28","text":"intensity ( float - lumens ) Intensity of a light. color ( carla.Color ) Color of a light. group ( carla.LightGroup ) Group a light belongs to. active ( bool ) Switch of a light. It is True when the light is on.","title":"Instance Variables"},{"location":"python_api/#methods_19","text":"__init__ ( self , intensity =0.0 , color = carla.Color () , group = carla.LightGroup.None , active =False ) Parameters: intensity ( float - lumens ) - Intensity of the light. Default is 0.0 . color ( carla.Color ) - Color of the light. Default is black. group ( carla.LightGroup ) - Group the light belongs to. Default is the generic group None . active ( bool ) - Swith of the light. Default is False , light is off.","title":"Methods"},{"location":"python_api/#carlalocation","text":"Inherited from carla.Vector3D Represents a spot in the world.","title":"carla.Location"},{"location":"python_api/#instance-variables_29","text":"x ( float - meters ) Distance from origin to spot on X axis. y ( float - meters ) Distance from origin to spot on Y axis. z ( float - meters ) Distance from origin to spot on Z axis.","title":"Instance Variables"},{"location":"python_api/#methods_20","text":"__init__ ( self , x =0.0 , y =0.0 , z =0.0 ) Parameters: x ( float ) y ( float ) z ( float ) distance ( self , location ) Returns Euclidean distance from this location to another one. Parameters: location ( carla.Location ) - The other point to compute the distance with. Return: float - meters","title":"Methods"},{"location":"python_api/#dunder-methods_20","text":"__abs__ ( self ) Returns a Location with the absolute value of the components x, y and z. Return: carla.Location __eq__ ( self , other = carla.Location ) Returns True if both locations are the same point in space. Return: bool __ne__ ( self , other = carla.Location ) Returns True if both locations are different points in space. Return: bool __str__ ( self ) Parses the axis' values to string. Return: str","title":"Dunder methods"},{"location":"python_api/#carlamap","text":"Class containing the road information and waypoint managing. Data is retrieved from an OpenDRIVE file that describes the road. A query system is defined which works hand in hand with carla.Waypoint to translate geometrical information from the .xodr to natural world points. CARLA is currently working with OpenDRIVE 1.4 standard .","title":"carla.Map"},{"location":"python_api/#instance-variables_30","text":"name ( str ) The name of the map. It corresponds to the .umap from Unreal Engine that is loaded from a CARLA server, which then references to the .xodr road description.","title":"Instance Variables"},{"location":"python_api/#methods_21","text":"__init__ ( self , name , xodr_content ) Constructor for this class. Though a map is automatically generated when initializing the world, using this method in no-rendering mode facilitates working with an .xodr without any CARLA server running. Parameters: name ( str ) - Name of the current map. xodr_content ( str ) - .xodr content in string format. Return: list( carla.Transform ) cook_in_memory_map ( self , path ) Generates a binary file from the CARLA map containing information used by the Traffic Manager. This method is only used during the import process for maps. Parameters: path ( str ) - Path to the intended location of the stored binary map file. generate_waypoints ( self , distance ) Returns a list of waypoints with a certain distance between them for every lane and centered inside of it. Waypoints are not listed in any particular order. Remember that waypoints closer than 2cm within the same road, section and lane will have the same identificator. Parameters: distance ( float - meters ) - Approximate distance between waypoints. Return: list( carla.Waypoint ) save_to_disk ( self , path ) Saves the .xodr OpenDRIVE file of the current map to disk. Parameters: path - Path where the file will be saved. to_opendrive ( self ) Returns the .xodr OpenDRIVe file of the current map as string. Return: str transform_to_geolocation ( self , location ) Converts a given location , a point in the simulation, to a carla.GeoLocation , which represents world coordinates. The geographical location of the map is defined inside OpenDRIVE within the tag . Parameters: location ( carla.Location ) Return: carla.GeoLocation","title":"Methods"},{"location":"python_api/#getters_5","text":"get_all_landmarks ( self ) Returns all the landmarks in the map. Landmarks retrieved using this method have a null waypoint. Return: list( carla.Landmark ) get_all_landmarks_from_id ( self , opendrive_id ) Returns the landmarks with a certain OpenDRIVE ID. Landmarks retrieved using this method have a null waypoint. Parameters: opendrive_id ( string ) - The OpenDRIVE ID of the landmarks. Return: list( carla.Landmark ) get_all_landmarks_of_type ( self , type ) Returns the landmarks of a specific type. Landmarks retrieved using this method have a null waypoint. Parameters: type ( string ) - The type of the landmarks. Return: list( carla.Landmark ) get_crosswalks ( self ) Returns a list of locations with all crosswalk zones in the form of closed polygons. The first point is repeated, symbolizing where the polygon begins and ends. Return: list( carla.Location ) get_landmark_group ( self , landmark ) Returns the landmarks in the same group as the specified landmark (including itself). Returns an empty list if the landmark does not belong to any group. Parameters: landmark ( carla.Landmark ) - A landmark that belongs to the group. Return: list( carla.Landmark ) get_spawn_points ( self ) Returns a list of recommendations made by the creators of the map to be used as spawning points for the vehicles. The list includes carla.Transform objects with certain location and orientation. Said locations are slightly on-air in order to avoid Z-collisions, so vehicles fall for a bit before starting their way. Return: list( carla.Transform ) get_topology ( self ) Returns a list of tuples describing a minimal graph of the topology of the OpenDRIVE file. The tuples contain pairs of waypoints located either at the point a road begins or ends. The first one is the origin and the second one represents another road end that can be reached. This graph can be loaded into NetworkX to work with. Output could look like this: [(w0, w1), (w0, w2), (w1, w3), (w2, w3), (w0, w4)] . Return: list(tuple( carla.Waypoint , carla.Waypoint )) get_waypoint ( self , location , project_to_road =True , lane_type = carla.LaneType.Driving ) snippet \u2192 Returns a waypoint that can be located in an exact location or translated to the center of the nearest lane. Said lane type can be defined using flags such as LaneType.Driving & LaneType.Shoulder . The method will return None if the waypoint is not found, which may happen only when trying to retrieve a waypoint for an exact location. That eases checking if a point is inside a certain road, as otherwise, it will return the corresponding waypoint. Parameters: location ( carla.Location - meters ) - Location used as reference for the carla.Waypoint . project_to_road ( bool ) - If True , the waypoint will be at the center of the closest lane. This is the default setting. If False , the waypoint will be exactly in location . None means said location does not belong to a road. lane_type ( carla.LaneType ) - Limits the search for nearest lane to one or various lane types that can be flagged. Return: carla.Waypoint get_waypoint_xodr ( self , road_id , lane_id , s ) Returns a waypoint if all the parameters passed are correct. Otherwise, returns None . Parameters: road_id ( int ) - ID of the road to get the waypoint. lane_id ( int ) - ID of the lane to get the waypoint. s ( float - meters ) - Specify the length from the road start. Return: carla.Waypoint","title":"Getters"},{"location":"python_api/#dunder-methods_21","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlamaplayer","text":"Class that represents each manageable layer of the map. Can be used as flags. WARNING: Only \"Opt\" maps are able to work with map layers. .","title":"carla.MapLayer"},{"location":"python_api/#instance-variables_31","text":"NONE No layers selected. Buildings Decals Foliage Ground ParkedVehicles Particles Props StreetLights Walls All All layers selected.","title":"Instance Variables"},{"location":"python_api/#carlamaterialparameter","text":"Class that represents material parameters. Not all objects in the scene contain all parameters.","title":"carla.MaterialParameter"},{"location":"python_api/#instance-variables_32","text":"Normal The Normal map of the object. Present in all objects. Diffuse The Diffuse texture of the object. Present in all objects. AO_Roughness_Metallic_Emissive A texture where each color channel represent a property of the material (R: Ambien oclusion, G: Roughness, B: Metallic, A: Emissive/Height map in some objects). Emissive Emissive texture. Present in a few objects.","title":"Instance Variables"},{"location":"python_api/#carlaobstacledetectionevent","text":"Inherited from carla.SensorData Class that defines the obstacle data for sensor.other.obstacle . Learn more about this here .","title":"carla.ObstacleDetectionEvent"},{"location":"python_api/#instance-variables_33","text":"actor ( carla.Actor ) The actor the sensor is attached to. other_actor ( carla.Actor ) The actor or object considered to be an obstacle. distance ( float - meters ) Distance between actor and other .","title":"Instance Variables"},{"location":"python_api/#methods_22","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_22","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaopendrivegenerationparameters","text":"This class defines the parameters used when generating a world using an OpenDRIVE file.","title":"carla.OpendriveGenerationParameters"},{"location":"python_api/#instance-variables_34","text":"vertex_distance ( float ) Distance between vertices of the mesh generated. Default is 2.0 . max_road_length ( float ) Max road length for a single mesh portion. The mesh of the map is divided into portions, in order to avoid propagating issues. Default is 50.0 . wall_height ( float ) Height of walls created on the boundaries of the road. These prevent vehicles from falling off the road. Default is 1.0 . additional_width ( float ) Additional with applied junction lanes. Complex situations tend to occur at junctions, and a little increase can prevent vehicles from falling off the road. Default is 0.6 . smooth_junctions ( bool ) If True , the mesh at junctions will be smoothed to prevent issues where roads blocked other roads. Default is True . enable_mesh_visibility ( bool ) If True , the road mesh will be rendered. Setting this to False should reduce the rendering overhead. Default is True . enable_pedestrian_navigation ( bool ) If True , Pedestrian navigation will be enabled using Recast tool. For very large maps it is recomended to disable this option. Default is True .","title":"Instance Variables"},{"location":"python_api/#carlaopticalflowimage","text":"Inherited from carla.SensorData Class that defines an optical flow image of 2-Dimension float (32-bit) vectors representing the optical flow detected in the field of view. The components of the vector represents the displacement of an object in the image plane. Each component outputs values in the normalized range [-2,2] which scales to [-2 size, 2 size] with size being the total resolution in the corresponding component.","title":"carla.OpticalFlowImage"},{"location":"python_api/#instance-variables_35","text":"fov ( float - degrees ) Horizontal field of view of the image. height ( int ) Image height in pixels. width ( int ) Image width in pixels. raw_data ( bytes ) Flattened array of pixel data, use reshape to create an image array.","title":"Instance Variables"},{"location":"python_api/#methods_23","text":"","title":"Methods"},{"location":"python_api/#getters_6","text":"get_color_coded_flow ( self ) Visualization helper. Converts the optical flow image to an RGB image. Return: carla.Image","title":"Getters"},{"location":"python_api/#dunder-methods_23","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.OpticalFlowPixel that form the image. __len__ ( self ) __setitem__ ( self , pos =int , color = carla.Color ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaopticalflowpixel","text":"Class that defines a 2 dimensional vector representing an optical flow pixel.","title":"carla.OpticalFlowPixel"},{"location":"python_api/#instance-variables_36","text":"x ( float ) Optical flow in the x component. y ( float ) Optical flow in the y component.","title":"Instance Variables"},{"location":"python_api/#methods_24","text":"__init__ ( self , x =0 , y =0 ) Initializes the Optical Flow Pixel. Zero by default. Parameters: x ( float ) y ( float )","title":"Methods"},{"location":"python_api/#dunder-methods_24","text":"__eq__ ( self , other = carla.OpticalFlowPixel ) __ne__ ( self , other = carla.OpticalFlowPixel ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaosm2odr","text":"Class that converts an OpenStreetMap map to OpenDRIVE format, so that it can be loaded in CARLA. Find out more about this feature in the docs .","title":"carla.Osm2Odr"},{"location":"python_api/#methods_25","text":"convert ( osm_file , settings ) Takes the content of an .osm file (OpenStreetMap format) and returns the content of the .xodr (OpenDRIVE format) describing said map. Some parameterization is passed to do the conversion. Parameters: osm_file ( str ) - The content of the input OpenStreetMap file parsed as string. settings ( carla.OSM2ODRSettings ) - Parameterization for the conversion. Return: str","title":"Methods"},{"location":"python_api/#carlaosm2odrsettings","text":"Helper class that contains the parameterization that will be used by carla.Osm2Odr to convert an OpenStreetMap map to OpenDRIVE format. Find out more about this feature in the docs .","title":"carla.Osm2OdrSettings"},{"location":"python_api/#instance-variables_37","text":"use_offsets ( bool ) Enables the use of offset for the conversion. The offset will move the origin position of the map. Default value is False . offset_x ( float - meters ) Offset in the X axis. Default value is 0.0 . offset_y ( float - meters ) Offset in the Y axis. Default value is 0.0 . default_lane_width ( float - meters ) Width of the lanes described in the resulting XODR map. Default value is 4.0 . elevation_layer_height ( float - meters ) Defines the height separating two different OpenStreetMap layers . Default value is 0.0 . center_map ( bool ) When this option is enabled, the geometry of the map will be displaced so that the origin of coordinates matches the center of the bounding box of the entire road map. proj_string ( str ) Defines the proj4 string that will be used to compute the projection from geocoordinates to cartesian coordinates. This string will be written in the resulting OpenDRIVE unless the options use_offsets or center_map are enabled as these options override some of the definitions in the string. generate_traffic_lights ( bool ) Indicates wether to generate traffic light data in the OpenDRIVE. Road types defined by set_traffic_light_excluded_way_types(way_types) will not generate traffic lights. all_junctions_with_traffic_lights ( bool ) When disabled, the converter will generate traffic light data from the OpenStreetMaps data only. When enabled, all junctions will generate traffic lights.","title":"Instance Variables"},{"location":"python_api/#methods_26","text":"","title":"Methods"},{"location":"python_api/#setters_3","text":"set_osm_way_types ( self , way_types ) Defines the OpenStreetMaps road types that will be imported to OpenDRIVE. By default the road types imported are motorway, motorway_link, trunk, trunk_link, primary, primary_link, secondary, secondary_link, tertiary, tertiary_link, unclassified, residential . For a full list of road types check here . Parameters: way_types ( list(str) ) - The list of road types. set_traffic_light_excluded_way_types ( self , way_types ) Defines the OpenStreetMaps road types that will not generate traffic lights even if generate_traffic_lights is enabled. By default the road types excluded are motorway_link, primary_link, secondary_link, tertiary_link . Parameters: way_types ( list(str) ) - The list of road types.","title":"Setters"},{"location":"python_api/#carlaradardetection","text":"Data contained inside a carla.RadarMeasurement . Each of these represents one of the points in the cloud that a sensor.other.radar registers and contains the distance, angle and velocity in relation to the radar.","title":"carla.RadarDetection"},{"location":"python_api/#instance-variables_38","text":"altitude ( float - radians ) Altitude angle of the detection. azimuth ( float - radians ) Azimuth angle of the detection. depth ( float - meters ) Distance from the sensor to the detection position. velocity ( float - m/s ) The velocity of the detected object towards the sensor.","title":"Instance Variables"},{"location":"python_api/#methods_27","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_25","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaradarmeasurement","text":"Inherited from carla.SensorData Class that defines and gathers the measures registered by a sensor.other.radar , representing a wall of points in front of the sensor with a distance, angle and velocity in relation to it. The data consists of a carla.RadarDetection array. Learn more about this here .","title":"carla.RadarMeasurement"},{"location":"python_api/#instance-variables_39","text":"raw_data ( bytes ) The complete information of the carla.RadarDetection the radar has registered.","title":"Instance Variables"},{"location":"python_api/#methods_28","text":"","title":"Methods"},{"location":"python_api/#getters_7","text":"get_detection_count ( self ) Retrieves the number of entries generated, same as __str__() .","title":"Getters"},{"location":"python_api/#dunder-methods_26","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.RadarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.RadarDetection ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlarotation","text":"Class that represents a 3D rotation and therefore, an orientation in space. CARLA uses the Unreal Engine coordinates system. This is a Z-up left-handed system. The constructor method follows a specific order of declaration: (pitch, yaw, roll) , which corresponds to (Y-rotation,Z-rotation,X-rotation) . Unreal Engine's coordinates system .","title":"carla.Rotation"},{"location":"python_api/#instance-variables_40","text":"pitch ( float - degrees ) Y-axis rotation angle. yaw ( float - degrees ) Z-axis rotation angle. roll ( float - degrees ) X-axis rotation angle.","title":"Instance Variables"},{"location":"python_api/#methods_29","text":"__init__ ( self , pitch =0.0 , yaw =0.0 , roll =0.0 ) Parameters: pitch ( float - degrees ) - Y-axis rotation angle. yaw ( float - degrees ) - Z-axis rotation angle. roll ( float - degrees ) - X-axis rotation angle. Warning: The declaration order is different in CARLA (pitch,yaw,roll) , and in the Unreal Engine Editor (roll,pitch,yaw) . When working in a build from source, don't mix up the axes' rotations.","title":"Methods"},{"location":"python_api/#getters_8","text":"get_forward_vector ( self ) Computes the vector pointing forward according to the rotation of the object. Return: carla.Vector3D get_right_vector ( self ) Computes the vector pointing to the right according to the rotation of the object. Return: carla.Vector3D get_up_vector ( self ) Computes the vector pointing upwards according to the rotation of the object. Return: carla.Vector3D","title":"Getters"},{"location":"python_api/#dunder-methods_27","text":"__eq__ ( self , other = carla.Rotation ) Returns True if both rotations represent the same orientation for every axis. Return: bool __ne__ ( self , other = carla.Rotation ) Returns True if both rotations represent the same orientation for every axis. Return: bool __str__ ( self ) Parses the axis' orientations to string.","title":"Dunder methods"},{"location":"python_api/#carlarssactorconstellationdata","text":"Data structure that is provided within the callback registered by RssSensor.register_actor_constellation_callback().","title":"carla.RssActorConstellationData"},{"location":"python_api/#instance-variables_41","text":"ego_match_object ( ad.map.match.Object ) The ego map matched information. ego_route ( ad.map.route.FullRoute ) The ego route. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) Current ego vehicle dynamics regarding the route. other_match_object ( ad.map.match.Object ) The other object's map matched information. This is only valid if 'other_actor' is not 'None'. other_actor ( carla.Actor ) The other actor. This is 'None' in case of query of default parameters or articial objects of kind ad.rss.world.ObjectType.ArtificialObject with no dedicated ' carla.Actor ' (as e.g. for the road boundaries at the moment).","title":"Instance Variables"},{"location":"python_api/#methods_30","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_28","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlarssactorconstellationresult","text":"Data structure that should be returned by the callback registered by RssSensor.register_actor_constellation_callback().","title":"carla.RssActorConstellationResult"},{"location":"python_api/#instance-variables_42","text":"rss_calculation_mode ( ad.rss.map.RssMode ) The calculation mode to be applied with the actor. restrict_speed_limit_mode ( ad.rss.map.RestrictSpeedLimitMode ) The mode for restricting speed limit. ego_vehicle_dynamics ( ad.rss.world.RssDynamics ) The RSS dynamics to be applied for the ego vehicle. actor_object_type ( ad.rss.world.ObjectType ) The RSS object type to be used for the actor. actor_dynamics ( ad.rss.world.RssDynamics ) The RSS dynamics to be applied for the actor.","title":"Instance Variables"},{"location":"python_api/#methods_31","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_29","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlarssegodynamicsonroute","text":"Part of the data contained inside a carla.RssResponse describing the state of the vehicle. The parameters include its current dynamics, and how it is heading regarding the target route.","title":"carla.RssEgoDynamicsOnRoute"},{"location":"python_api/#instance-variables_43","text":"ego_speed ( ad.physics.Speed ) The ego vehicle's speed. min_stopping_distance ( ad.physics.Distance ) The current minimum stopping distance. ego_center ( ad.map.point.ENUPoint ) The considered enu position of the ego vehicle. ego_heading ( ad.map.point.ENUHeading ) The considered heading of the ego vehicle. ego_center_within_route ( bool ) States if the ego vehicle's center is within the route. crossing_border ( bool ) States if the vehicle is already crossing one of the lane borders. route_heading ( ad.map.point.ENUHeading ) The considered heading of the route. route_nominal_center ( ad.map.point.ENUPoint ) The considered nominal center of the current route. heading_diff ( ad.map.point.ENUHeading ) The considered heading diff towards the route. route_speed_lat ( ad.physics.Speed ) The ego vehicle's speed component lat regarding the route. route_speed_lon ( ad.physics.Speed ) The ego vehicle's speed component lon regarding the route. route_accel_lat ( ad.physics.Acceleration ) The ego vehicle's acceleration component lat regarding the route. route_accel_lon ( ad.physics.Acceleration ) The ego vehicle's acceleration component lon regarding the route. avg_route_accel_lat ( ad.physics.Acceleration ) The ego vehicle's acceleration component lat regarding the route smoothened by an average filter. avg_route_accel_lon ( ad.physics.Acceleration ) The ego acceleration component lon regarding the route smoothened by an average filter.","title":"Instance Variables"},{"location":"python_api/#methods_32","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_30","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlarssloglevel","text":"Enum declaration used in carla.RssSensor to set the log level.","title":"carla.RssLogLevel"},{"location":"python_api/#instance-variables_44","text":"trace debug info warn err critical off","title":"Instance Variables"},{"location":"python_api/#carlarssresponse","text":"Inherited from carla.SensorData Class that contains the output of a carla.RssSensor . This is the result of the RSS calculations performed for the parent vehicle of the sensor. A carla.RssRestrictor will use the data to modify the carla.VehicleControl of the vehicle.","title":"carla.RssResponse"},{"location":"python_api/#instance-variables_45","text":"response_valid ( bool ) States if the response is valid. It is False if calculations failed or an exception occured. proper_response ( ad.rss.state.ProperResponse ) The proper response that the RSS calculated for the vehicle. rss_state_snapshot ( ad.rss.state.RssStateSnapshot ) Detailed RSS states at the current moment in time. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) Current ego vehicle dynamics regarding the route. world_model ( ad.rss.world.WorldModel ) World model used for calculations. situation_snapshot ( ad.rss.situation.SituationSnapshot ) Detailed RSS situations extracted from the world model.","title":"Instance Variables"},{"location":"python_api/#methods_33","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_31","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlarssrestrictor","text":"These objects apply restrictions to a carla.VehicleControl . It is part of the CARLA implementation of the C++ Library for Responsibility Sensitive Safety . This class works hand in hand with a rss sensor , which provides the data of the restrictions to be applied.","title":"carla.RssRestrictor"},{"location":"python_api/#methods_34","text":"restrict_vehicle_control ( self , vehicle_control , proper_response , ego_dynamics_on_route , vehicle_physics ) Applies the safety restrictions given by a carla.RssSensor to a carla.VehicleControl . Parameters: vehicle_control ( carla.VehicleControl ) - The input vehicle control to be restricted. proper_response ( ad.rss.state.ProperResponse ) - Part of the response generated by the sensor. Contains restrictions to be applied to the acceleration of the vehicle. ego_dynamics_on_route ( carla.RssEgoDynamicsOnRoute ) - Part of the response generated by the sensor. Contains dynamics and heading of the vehicle regarding its route. vehicle_physics ( carla.VehiclePhysicsControl ) - The current physics of the vehicle. Used to apply the restrictions properly. Return: carla.VehicleControl","title":"Methods"},{"location":"python_api/#setters_4","text":"set_log_level ( self , log_level ) Sets the log level. Parameters: log_level ( carla.RssLogLevel ) - New log level.","title":"Setters"},{"location":"python_api/#carlarssroadboundariesmode","text":"Enum declaration used in carla.RssSensor to enable or disable the stay on road feature. In summary, this feature considers the road boundaries as virtual objects. The minimum safety distance check is applied to these virtual walls, in order to make sure the vehicle does not drive off the road.","title":"carla.RssRoadBoundariesMode"},{"location":"python_api/#instance-variables_46","text":"On Enables the stay on road feature. Off Disables the stay on road feature.","title":"Instance Variables"},{"location":"python_api/#carlarsssensor","text":"Inherited from carla.Sensor This sensor works a bit differently than the rest. Take look at the specific documentation , and the rss sensor reference to gain full understanding of it. The RSS sensor uses world information, and a RSS library to make safety checks on a vehicle. The output retrieved by the sensor is a carla.RssResponse . This will be used by a carla.RssRestrictor to modify a carla.VehicleControl before applying it to a vehicle.","title":"carla.RssSensor"},{"location":"python_api/#instance-variables_47","text":"ego_vehicle_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for the ego vehicle if no actor constellation callback is registered. other_vehicle_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for the rest of vehicles if no actor constellation callback is registered. pedestrian_dynamics ( ad.rss.world.RssDynamics ) States the RSS parameters that the sensor will consider for pedestrians if no actor constellation callback is registered. road_boundaries_mode ( carla.RssRoadBoundariesMode ) Switches the stay on road feature. By default is Off . routing_targets ( vector< carla.Transform > ) The current list of targets considered to route the vehicle. If no routing targets are defined, a route is generated at random.","title":"Instance Variables"},{"location":"python_api/#methods_35","text":"append_routing_target ( self , routing_target ) Appends a new target position to the current route of the vehicle. Parameters: routing_target ( carla.Transform ) - New target point for the route. Choose these after the intersections to force the route to take the desired turn. drop_route ( self ) Discards the current route. If there are targets remaining in routing_targets , creates a new route using those. Otherwise, a new route is created at random. register_actor_constellation_callback ( self , callback ) Register a callback to customize a carla.RssActorConstellationResult . By this callback the settings of RSS parameters are done per actor constellation and the settings (ego_vehicle_dynamics, other_vehicle_dynamics and pedestrian_dynamics) have no effect. Parameters: callback - The function to be called whenever a RSS situation is about to be calculated. reset_routing_targets ( self ) Erases the targets that have been appended to the route.","title":"Methods"},{"location":"python_api/#setters_5","text":"set_log_level ( self , log_level ) Sets the log level. Parameters: log_level ( carla.RssLogLevel ) - New log level. set_map_log_level ( self , log_level ) Sets the map log level. Parameters: log_level ( carla.RssLogLevel ) - New map log level.","title":"Setters"},{"location":"python_api/#dunder-methods_32","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlasemanticlidardetection","text":"Data contained inside a carla.SemanticLidarMeasurement . Each of these represents one of the points in the cloud with its location, the cosine of the incident angle, index of the object hit, and its semantic tag.","title":"carla.SemanticLidarDetection"},{"location":"python_api/#instance-variables_48","text":"point ( carla.Location - meters ) [x,y,z] coordinates of the point. cos_inc_angle ( float ) Cosine of the incident angle between the ray, and the normal of the hit object. object_idx ( uint ) ID of the actor hit by the ray. object_tag ( uint ) Semantic tag of the component hit by the ray.","title":"Instance Variables"},{"location":"python_api/#methods_36","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_33","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlasemanticlidarmeasurement","text":"Inherited from carla.SensorData Class that defines the semantic LIDAR data retrieved by a sensor.lidar.ray_cast_semantic . This essentially simulates a rotating LIDAR using ray-casting. Learn more about this here .","title":"carla.SemanticLidarMeasurement"},{"location":"python_api/#instance-variables_49","text":"channels ( int ) Number of lasers shot. horizontal_angle ( float - radians ) Horizontal angle the LIDAR is rotated at the time of the measurement. raw_data ( bytes ) Received list of raw detection points. Each point consists of [x,y,z] coordinates plus the cosine of the incident angle, the index of the hit actor, and its semantic tag.","title":"Instance Variables"},{"location":"python_api/#methods_37","text":"save_to_disk ( self , path ) Saves the point cloud to disk as a .ply file describing data from 3D scanners. The files generated are ready to be used within MeshLab , an open-source system for processing said files. Just take into account that axis may differ from Unreal Engine and so, need to be reallocated. Parameters: path ( str )","title":"Methods"},{"location":"python_api/#getters_9","text":"get_point_count ( self , channel ) Retrieves the number of points sorted by channel that are generated by this measure. Sorting by channel allows to identify the original channel for every point. Parameters: channel ( int )","title":"Getters"},{"location":"python_api/#dunder-methods_34","text":"__getitem__ ( self , pos =int ) __iter__ ( self ) Iterate over the carla.SemanticLidarDetection retrieved as data. __len__ ( self ) __setitem__ ( self , pos =int , detection = carla.SemanticLidarDetection ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlasensor","text":"Inherited from carla.Actor Sensors compound a specific family of actors quite diverse and unique. They are normally spawned as attachment/sons of a vehicle (take a look at carla.World to learn about actor spawning). Sensors are thoroughly designed to retrieve different types of data that they are listening to. The data they receive is shaped as different subclasses inherited from carla.SensorData (depending on the sensor). Most sensors can be divided in two groups: those receiving data on every tick (cameras, point clouds and some specific sensors) and those who only receive under certain circumstances (trigger detectors). CARLA provides a specific set of sensors and their blueprint can be found in carla.BlueprintLibrary . All the information on their preferences and settlement can be found here , but the list of those available in CARLA so far goes as follow. Receive data on every tick. - Depth camera . - Gnss sensor . - IMU sensor . - Lidar raycast . - SemanticLidar raycast . - Radar . - RGB camera . - RSS sensor . - Semantic Segmentation camera . Only receive data when triggered. - Collision detector . - Lane invasion detector . - Obstacle detector .","title":"carla.Sensor"},{"location":"python_api/#instance-variables_50","text":"is_listening ( boolean ) When True the sensor will be waiting for data.","title":"Instance Variables"},{"location":"python_api/#methods_38","text":"is_listening ( self ) Returns whether the sensor is in a listening state. is_listening_gbuffer ( self , gbuffer_id ) Returns whether the sensor is in a listening state for a specific GBuffer texture. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the target Unreal Engine GBuffer texture. listen ( self , callback ) snippet \u2192 The function the sensor will be calling to every time a new measurement is received. This function needs for an argument containing an object type carla.SensorData to work with. Parameters: callback ( function ) - The called function with one argument containing the sensor data. listen_to_gbuffer ( self , gbuffer_id , callback ) The function the sensor will be calling to every time the desired GBuffer texture is received. This function needs for an argument containing an object type carla.SensorData to work with. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the target Unreal Engine GBuffer texture. callback ( function ) - The called function with one argument containing the received GBuffer texture. stop ( self ) Commands the sensor to stop listening for data. stop_gbuffer ( self , gbuffer_id ) Commands the sensor to stop listening for the specified GBuffer texture. Parameters: gbuffer_id ( carla.GBufferTextureID ) - The ID of the Unreal Engine GBuffer texture.","title":"Methods"},{"location":"python_api/#dunder-methods_35","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlasensordata","text":"Base class for all the objects containing data generated by a carla.Sensor . This objects should be the argument of the function said sensor is listening to, in order to work with them. Each of these sensors needs for a specific type of sensor data. Hereunder is a list of the sensors and their corresponding data. - Cameras (RGB, depth and semantic segmentation): carla.Image . - Collision detector: carla.CollisionEvent . - GNSS sensor: carla.GnssMeasurement . - IMU sensor: carla.IMUMeasurement . - Lane invasion detector: carla.LaneInvasionEvent . - LIDAR sensor: carla.LidarMeasurement . - Obstacle detector: carla.ObstacleDetectionEvent . - Radar sensor: carla.RadarMeasurement . - RSS sensor: carla.RssResponse . - Semantic LIDAR sensor: carla.SemanticLidarMeasurement .","title":"carla.SensorData"},{"location":"python_api/#instance-variables_51","text":"frame ( int ) Frame count when the data was generated. timestamp ( float - seconds ) Simulation-time when the data was generated. transform ( carla.Transform ) Sensor's transform when the data was generated.","title":"Instance Variables"},{"location":"python_api/#carlatexturecolor","text":"Class representing a texture object to be uploaded to the server. Pixel format is RGBA, uint8 per channel.","title":"carla.TextureColor"},{"location":"python_api/#instance-variables_52","text":"width ( int ) X-coordinate size of the texture. height ( int ) Y-coordinate size of the texture.","title":"Instance Variables"},{"location":"python_api/#methods_39","text":"__init__ ( self , width , height ) Initializes a the texture with a ( width , height ) size. Parameters: width ( int ) height ( int ) get ( self , x , y ) Get the (x,y) pixel data. Parameters: x ( int ) y ( int ) Return: carla.Color set ( self , x , y , value ) Sets the (x,y) pixel data with value . Parameters: x ( int ) y ( int ) value ( carla.Color )","title":"Methods"},{"location":"python_api/#setters_6","text":"set_dimensions ( self , width , height ) Resizes the texture to te specified dimensions. Parameters: width ( int ) height ( int )","title":"Setters"},{"location":"python_api/#carlatexturefloatcolor","text":"Class representing a texture object to be uploaded to the server. Pixel format is RGBA, float per channel.","title":"carla.TextureFloatColor"},{"location":"python_api/#instance-variables_53","text":"width ( int ) X-coordinate size of the texture. height ( int ) Y-coordinate size of the texture.","title":"Instance Variables"},{"location":"python_api/#methods_40","text":"__init__ ( self , width , height ) Initializes a the texture with a ( width , height ) size. Parameters: width ( int ) height ( int ) get ( self , x , y ) Get the (x,y) pixel data. Parameters: x ( int ) y ( int ) Return: carla.FloatColor set ( self , x , y , value ) Sets the (x,y) pixel data with value . Parameters: x ( int ) y ( int ) value ( carla.FloatColor )","title":"Methods"},{"location":"python_api/#setters_7","text":"set_dimensions ( self , width , height ) Resizes the texture to te specified dimensions. Parameters: width ( int ) height ( int )","title":"Setters"},{"location":"python_api/#carlatimestamp","text":"Class that contains time information for simulated data. This information is automatically retrieved as part of the carla.WorldSnapshot the client gets on every frame, but might also be used in many other situations such as a carla.Sensor retrieveing data.","title":"carla.Timestamp"},{"location":"python_api/#instance-variables_54","text":"frame ( int ) The number of frames elapsed since the simulator was launched. elapsed_seconds ( float - seconds ) Simulated seconds elapsed since the beginning of the current episode. delta_seconds ( float - seconds ) Simulated seconds elapsed since the previous frame. platform_timestamp ( float - seconds ) Time register of the frame at which this measurement was taken given by the OS in seconds.","title":"Instance Variables"},{"location":"python_api/#methods_41","text":"__init__ ( self , frame , elapsed_seconds , delta_seconds , platform_timestamp ) Parameters: frame ( int ) elapsed_seconds ( float - seconds ) delta_seconds ( float - seconds ) platform_timestamp ( float - seconds )","title":"Methods"},{"location":"python_api/#dunder-methods_36","text":"__eq__ ( self , other = carla.Timestamp ) __ne__ ( self , other = carla.Timestamp ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlatrafficlight","text":"Inherited from carla.TrafficSign A traffic light actor, considered a specific type of traffic sign. As traffic lights will mostly appear at junctions, they belong to a group which contains the different traffic lights in it. Inside the group, traffic lights are differenciated by their pole index. Within a group the state of traffic lights is changed in a cyclic pattern: one index is chosen and it spends a few seconds in green, yellow and eventually red. The rest of the traffic lights remain frozen in red this whole time, meaning that there is a gap in the last seconds of the cycle where all the traffic lights are red. However, the state of a traffic light can be changed manually.","title":"carla.TrafficLight"},{"location":"python_api/#instance-variables_55","text":"state ( carla.TrafficLightState ) Current state of the traffic light.","title":"Instance Variables"},{"location":"python_api/#methods_42","text":"freeze ( self , freeze ) Stops all the traffic lights in the scene at their current state. Parameters: freeze ( bool ) is_frozen ( self ) The client returns True if a traffic light is frozen according to last tick. The method does not call the simulator. Return: bool reset_group ( self ) Resets the state of the traffic lights of the group to the initial state at the start of the simulation. Note: This method calls the simulator.","title":"Methods"},{"location":"python_api/#getters_10","text":"get_affected_lane_waypoints ( self ) Returns a list of waypoints indicating the positions and lanes where the traffic light is having an effect. Return: list( carla.Waypoint ) get_elapsed_time ( self ) The client returns the time in seconds since current light state started according to last tick. The method does not call the simulator. Return: float - seconds get_green_time ( self ) The client returns the time set for the traffic light to be green, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_green_time get_group_traffic_lights ( self ) Returns all traffic lights in the group this one belongs to. Return: list( carla.TrafficLight ) Note: This method calls the simulator. get_light_boxes ( self ) Returns a list of the bounding boxes encapsulating each light box of the traffic light. Return: list( carla.BoundingBox ) get_opendrive_id ( self ) Returns the OpenDRIVE id of this traffic light. Return: str get_pole_index ( self ) Returns the index of the pole that identifies it as part of the traffic light group of a junction. Return: int get_red_time ( self ) The client returns the time set for the traffic light to be red, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_red_time get_state ( self ) The client returns the state of the traffic light according to last tick. The method does not call the simulator. Return: carla.TrafficLightState Setter: carla.TrafficLight.set_state get_stop_waypoints ( self ) Returns a list of waypoints indicating the stop position for the traffic light. These waypoints are computed from the trigger boxes of the traffic light that indicate where a vehicle should stop. Return: list( carla.Waypoint ) get_yellow_time ( self ) The client returns the time set for the traffic light to be yellow, according to last tick. The method does not call the simulator. Return: float - seconds Setter: carla.TrafficLight.set_yellow_time","title":"Getters"},{"location":"python_api/#setters_8","text":"set_green_time ( self , green_time ) Parameters: green_time ( float - seconds ) - Sets a given time for the green light to be active. Getter: carla.TrafficLight.get_green_time set_red_time ( self , red_time ) Sets a given time for the red state to be active. Parameters: red_time ( float - seconds ) Getter: carla.TrafficLight.get_red_time set_state ( self , state ) snippet \u2192 Sets a given state to a traffic light actor. Parameters: state ( carla.TrafficLightState ) Getter: carla.TrafficLight.get_state set_yellow_time ( self , yellow_time ) Sets a given time for the yellow light to be active. Parameters: yellow_time ( float - seconds ) Getter: carla.TrafficLight.get_yellow_time","title":"Setters"},{"location":"python_api/#dunder-methods_37","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlatrafficlightstate","text":"\u4ea4\u901a\u706f\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u3002\u8fd9\u4e9b\u53ef\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u6b65\u957f\u66f4\u6539\u6216\u624b\u52a8\u66f4\u6539\u3002 carla.TrafficLight.set_state \u4e2d\u7684\u7247\u6bb5\u4f1a\u52a8\u6001\u66f4\u6539\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002","title":"carla.TrafficLightState"},{"location":"python_api/#instance-variables_56","text":"Red Yellow Green Off Unknown","title":"Instance Variables"},{"location":"python_api/#carlatrafficmanager","text":"The traffic manager is a module built on top of the CARLA API in C++. It handles any group of vehicles set to autopilot mode to populate the simulation with realistic urban traffic conditions and give the chance to user to customize some behaviours. The architecture of the traffic manager is divided in five different goal-oriented stages and a PID controller where the information flows until eventually, a carla.VehicleControl is applied to every vehicle registered in a traffic manager. In order to learn more, visit the documentation regarding this module.","title":"carla.TrafficManager"},{"location":"python_api/#methods_43","text":"auto_lane_change ( self , actor , enable ) Turns on or off lane changing behaviour for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle whose settings are changed. enable ( bool ) - True is default and enables lane changes. False will disable them. collision_detection ( self , reference_actor , other_actor , detect_collision ) Tunes on/off collisions between a vehicle and another specific actor. In order to ignore all other vehicles, traffic lights or walkers, use the specific ignore methods described in this same section. Parameters: reference_actor ( carla.Actor ) - Vehicle that is going to ignore collisions. other_actor ( carla.Actor ) - The actor that reference_actor is going to ignore collisions with. detect_collision ( bool ) - True is default and enables collisions. False will disable them. distance_to_leading_vehicle ( self , actor , distance ) Sets the minimum distance in meters that a vehicle has to keep with the others. The distance is in meters and will affect the minimum moving distance. It is computed from front to back of the vehicle objects. Parameters: actor ( carla.Actor ) - Vehicle whose minimum distance is being changed. distance ( float - meters ) - Meters between both vehicles. force_lane_change ( self , actor , direction ) Forces a vehicle to change either to the lane on its left or right, if existing, as indicated in direction . This method applies the lane change no matter what, disregarding possible collisions. Parameters: actor ( carla.Actor ) - Vehicle being forced to change lanes. direction ( bool ) - Destination lane. True is the one on the right and False is the left one. global_lane_offset ( self , offset ) Sets a global lane offset displacement from the center line. Positive values imply a right offset while negative ones mean a left one. Default is 0. Numbers high enough to cause the vehicle to drive through other lanes might break the controller. Parameters: offset ( float ) - Lane offset displacement from the center line. global_percentage_speed_difference ( self , percentage ) Sets the difference the vehicle's intended speed and its current speed limit. Speed limits can be exceeded by setting the perc to a negative value. Default is 30. Exceeding a speed limit can be done using negative percentages. Parameters: percentage ( float ) - Percentage difference between intended speed and the current limit. ignore_lights_percentage ( self , actor , perc ) During the traffic light stage, which runs every frame, this method sets the percent chance that traffic lights will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The actor that is going to ignore traffic lights. perc ( float ) - Between 0 and 100. Amount of times traffic lights will be ignored. ignore_signs_percentage ( self , actor , perc ) During the traffic light stage, which runs every frame, this method sets the percent chance that stop signs will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The actor that is going to ignore stop signs. perc ( float ) - Between 0 and 100. Amount of times stop signs will be ignored. ignore_vehicles_percentage ( self , actor , perc ) During the collision detection stage, which runs every frame, this method sets a percent chance that collisions with another vehicle will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle that is going to ignore other vehicles. perc ( float ) - Between 0 and 100. Amount of times collisions will be ignored. ignore_walkers_percentage ( self , actor , perc ) During the collision detection stage, which runs every frame, this method sets a percent chance that collisions with walkers will be ignored for a vehicle. Parameters: actor ( carla.Actor ) - The vehicle that is going to ignore walkers on scene. perc ( float ) - Between 0 and 100. Amount of times collisions will be ignored. keep_right_rule_percentage ( self , actor , perc ) During the localization stage, this method sets a percent chance that vehicle will follow the keep right rule, and stay in the right lane. Parameters: actor ( carla.Actor ) - Vehicle whose behaviour is being changed. perc ( float ) - Between 0 and 100. Amount of times the vehicle will follow the keep right rule. random_left_lanechange_percentage ( self , actor , percentage ) Adjust probability that in each timestep the actor will perform a left lane change, dependent on lane change availability. Parameters: actor ( carla.Actor ) - The actor that you wish to query. percentage ( float ) - The probability of lane change in percentage units (between 0 and 100). random_right_lanechange_percentage ( self , actor , percentage ) Adjust probability that in each timestep the actor will perform a right lane change, dependent on lane change availability. Parameters: actor ( carla.Actor ) - The actor that you wish to query. percentage ( float ) - The probability of lane change in percentage units (between 0 and 100). shut_down ( self ) Shuts down the traffic manager. update_vehicle_lights ( self , actor , do_update ) Sets if the Traffic Manager is responsible of updating the vehicle lights, or not. Default is False . The traffic manager will not change the vehicle light status of a vehicle, unless its auto_update_status is st to True . Parameters: actor ( carla.Actor ) - Vehicle whose lights status is being changed. do_update ( bool ) - If True the traffic manager will manage the vehicle lights for the specified vehicle. vehicle_lane_offset ( self , actor , offset ) Sets a lane offset displacement from the center line. Positive values imply a right offset while negative ones mean a left one. Default is 0. Numbers high enough to cause the vehicle to drive through other lanes might break the controller. Parameters: actor ( carla.Actor ) - Vehicle whose lane offset behaviour is being changed. offset ( float ) - Lane offset displacement from the center line. vehicle_percentage_speed_difference ( self , actor , percentage ) Sets the difference the vehicle's intended speed and its current speed limit. Speed limits can be exceeded by setting the perc to a negative value. Default is 30. Exceeding a speed limit can be done using negative percentages. Parameters: actor ( carla.Actor ) - Vehicle whose speed behaviour is being changed. percentage ( float ) - Percentage difference between intended speed and the current limit.","title":"Methods"},{"location":"python_api/#getters_11","text":"get_all_actions ( self , actor ) Returns all known actions (i.e. road options and waypoints) that an actor controlled by the Traffic Manager will perform in its next steps. Parameters: actor ( carla.Actor ) - The actor that you wish to query. Return: list of lists with each element as follows - [Road option (string e.g. 'Left', 'Right', 'Straight'), Next waypoint ( carla.Waypoint )] get_next_action ( self , actor ) Returns the next known road option and waypoint that an actor controlled by the Traffic Manager will follow. Parameters: actor ( carla.Actor ) - The actor that you wish to query. Return: list of two elements - [Road option (string e.g. 'Left', 'Right', 'Straight'), Next waypoint ( carla.Waypoint )] get_port ( self ) Returns the port where the Traffic Manager is connected. If the object is a TM-Client, it will return the port of its TM-Server. Read the documentation to learn the difference. Return: uint16","title":"Getters"},{"location":"python_api/#setters_9","text":"set_boundaries_respawn_dormant_vehicles ( self , lower_bound =25.0 , upper_bound =actor_active_distance ) Sets the upper and lower boundaries for dormant actors to be respawned near the hero vehicle. Parameters: lower_bound ( float ) - The minimum distance in meters from the hero vehicle that a dormant actor will be respawned. upper_bound ( float ) - The maximum distance in meters from the hero vehicle that a dormant actor will be respawned. Warning: The upper_bound cannot be higher than the actor_active_distance . The lower_bound cannot be less than 25. set_desired_speed ( self , actor , speed ) Sets the speed of a vehicle to the specified value. Parameters: actor ( carla.Actor ) - Vehicle whose speed is being changed. speed ( float ) - Desired speed at which the vehicle will move. set_global_distance_to_leading_vehicle ( self , distance ) Sets the minimum distance in meters that vehicles have to keep with the rest. The distance is in meters and will affect the minimum moving distance. It is computed from center to center of the vehicle objects. Parameters: distance ( float - meters ) - Meters between vehicles. set_hybrid_physics_mode ( self , enabled =False ) Enables or disables the hybrid physics mode. In this mode, vehicle's farther than a certain radius from the ego vehicle will have their physics disabled. Computation cost will be reduced by not calculating vehicle dynamics. Vehicles will be teleported. Parameters: enabled ( bool ) - If True , enables the hybrid physics. set_hybrid_physics_radius ( self , r =50.0 ) With hybrid physics on, changes the radius of the area of influence where physics are enabled. Parameters: r ( float - meters ) - New radius where physics are enabled. set_osm_mode ( self , mode_switch =True ) Enables or disables the OSM mode. This mode allows the user to run TM in a map created with the OSM feature . These maps allow having dead-end streets. Normally, if vehicles cannot find the next waypoint, TM crashes. If OSM mode is enabled, it will show a warning, and destroy vehicles when necessary. Parameters: mode_switch ( bool ) - If True , the OSM mode is enabled. set_path ( self , actor , path ) Sets a list of locations for a vehicle to follow while controlled by the Traffic Manager. Parameters: actor ( carla.Actor ) - The actor that must follow the given path. path ( list ) - The list of carla.Locations for the actor to follow. Warning: Ensure that the road topology doesn't impede the given path. set_random_device_seed ( self , value ) Sets a specific random seed for the Traffic Manager, thereby setting it to be deterministic. Parameters: value ( int ) - Seed value for the random number generation of the Traffic Manager. set_respawn_dormant_vehicles ( self , mode_switch =False ) If True , vehicles in large maps will respawn near the hero vehicle when they become dormant. Otherwise, they will stay dormant until they are within actor_active_distance of the hero vehicle again. Parameters: mode_switch ( bool ) set_route ( self , actor , path ) Sets a list of route instructions for a vehicle to follow while controlled by the Traffic Manager. The possible route instructions are 'Left', 'Right', 'Straight'. Parameters: actor ( carla.Actor ) - The actor that must follow the given route instructions. path ( list ) - The list of route instructions (string) for the vehicle to follow. Warning: Ensure that the lane topology doesn't impede the given route. set_synchronous_mode ( self , mode_switch =True ) Sets the Traffic Manager to synchronous mode . In a multiclient situation , only the TM-Server can tick. Similarly, in a multiTM situation , only one TM-Server must tick. Use this method in the client that does the world tick, and right after setting the world to synchronous mode, to set which TM will be the master while in sync. Parameters: mode_switch ( bool ) - If True , the TM synchronous mode is enabled. Warning: If the server is set to synchronous mode, the TM must be set to synchronous mode too in the same client that does the tick.","title":"Setters"},{"location":"python_api/#carlatrafficsign","text":"Inherited from carla.Actor Traffic signs appearing in the simulation except for traffic lights. These have their own class inherited from this in carla.TrafficLight . Right now, speed signs, stops and yields are mainly the ones implemented, but many others are borne in mind.","title":"carla.TrafficSign"},{"location":"python_api/#instance-variables_57","text":"trigger_volume A carla.BoundingBox situated near a traffic sign where the carla.Actor who is inside can know about it.","title":"Instance Variables"},{"location":"python_api/#carlatransform","text":"\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u6362\uff0c\u5373\u4f4d\u7f6e\u548c\u65cb\u8f6c\u7684\u7ec4\u5408\uff0c\u800c\u4e0d\u8fdb\u884c\u7f29\u653e\u3002","title":"carla.Transform"},{"location":"python_api/#instance-variables_58","text":"location ( carla.Location ) \u63cf\u8ff0\u5750\u6807\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002 rotation ( carla.Rotation - degrees (pitch, yaw, roll) ) \u63cf\u8ff0\u6839\u636e\u865a\u5e7b\u5f15\u64ce\u7684\u8f74\u7cfb\u7edf\u8fdb\u884c\u5bf9\u8c61\u7684\u65cb\u8f6c\u3002","title":"Instance Variables"},{"location":"python_api/#methods_44","text":"__init__ ( self , location , rotation ) Parameters: location ( carla.Location ) rotation ( carla.Rotation - degrees (pitch, yaw, roll) ) transform ( self , in_point ) Translates a 3D point from local to global coordinates using the current transformation as frame of reference. Parameters: in_point ( carla.Location ) - Location in the space to which the transformation will be applied. transform_vector ( self , in_vector ) Rotates a vector using the current transformation as frame of reference, without applying translation. Use this to transform, for example, a velocity. Parameters: in_vector ( carla.Vector3D ) - Vector to which the transformation will be applied.","title":"Methods"},{"location":"python_api/#getters_12","text":"get_forward_vector ( self ) Computes a forward vector using the rotation of the object. Return: carla.Vector3D get_inverse_matrix ( self ) Computes the 4-matrix representation of the inverse transformation. Return: list(list(float)) get_matrix ( self ) Computes the 4-matrix representation of the transformation. Return: list(list(float)) get_right_vector ( self ) Computes a right vector using the rotation of the object. Return: carla.Vector3D get_up_vector ( self ) Computes an up vector using the rotation of the object. Return: carla.Vector3D","title":"Getters"},{"location":"python_api/#dunder-methods_38","text":"__eq__ ( self , other = carla.Transform ) Returns True if both location and rotation are equal for this and other . Return: bool __ne__ ( self , other = carla.Transform ) Returns True if any location and rotation are not equal for this and other . Return: bool __str__ ( self ) Parses both location and rotation to string. Return: str","title":"Dunder methods"},{"location":"python_api/#carlavector2d","text":"Helper class to perform 2D operations.","title":"carla.Vector2D"},{"location":"python_api/#instance-variables_59","text":"x ( float ) X-axis value. y ( float ) Y-axis value.","title":"Instance Variables"},{"location":"python_api/#methods_45","text":"__init__ ( self , x =0.0 , y =0.0 ) Parameters: x ( float ) y ( float ) length ( self ) Computes the length of the vector. Return: float make_unit_vector ( self ) Returns a vector with the same direction and unitary length. Return: carla.Vector3D squared_length ( self ) Computes the squared length of the vector. Return: float","title":"Methods"},{"location":"python_api/#dunder-methods_39","text":"__add__ ( self , other = carla.Vector2D ) __eq__ ( self , other = carla.Vector2D ) Returns True if values for every axis are equal. Return: bool __mul__ ( self , other = carla.Vector2D ) __ne__ ( self , bool = carla.Vector2D ) Returns True if the value for any axis is different. Return: bool __str__ ( self ) Returns the axis values for the vector parsed as string. Return: str __sub__ ( self , other = carla.Vector2D ) __truediv__ ( self , other = carla.Vector2D )","title":"Dunder methods"},{"location":"python_api/#carlavector3d","text":"Helper class to perform 3D operations.","title":"carla.Vector3D"},{"location":"python_api/#instance-variables_60","text":"x ( float ) X-axis value. y ( float ) Y-axis value. z ( float ) Z-axis value.","title":"Instance Variables"},{"location":"python_api/#methods_46","text":"__init__ ( self , x =0.0 , y =0.0 , z =0.0 ) Parameters: x ( float ) y ( float ) z ( float ) cross ( self , vector ) Computes the cross product between two vectors. Parameters: vector ( carla.Vector3D ) Return: carla.Vector3D distance ( self , vector ) Computes the distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_2d ( self , vector ) Computes the 2-dimensional distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_squared ( self , vector ) Computes the squared distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float distance_squared_2d ( self , vector ) Computes the 2-dimensional squared distance between two vectors. Parameters: vector ( carla.Vector3D ) Return: float dot ( self , vector ) Computes the dot product between two vectors. Parameters: vector ( carla.Vector3D ) Return: float dot_2d ( self , vector ) Computes the 2-dimensional dot product between two vectors. Parameters: vector ( carla.Vector3D ) Return: float length ( self ) Computes the length of the vector. Return: float make_unit_vector ( self ) Returns a vector with the same direction and unitary length. Return: carla.Vector3D squared_length ( self ) Computes the squared length of the vector. Return: float","title":"Methods"},{"location":"python_api/#getters_13","text":"get_vector_angle ( self , vector ) Computes the angle between a pair of 3D vectors in radians. Parameters: vector ( carla.Vector3D ) Return: float","title":"Getters"},{"location":"python_api/#dunder-methods_40","text":"__abs__ ( self ) Returns a Vector3D with the absolute value of the components x, y and z. Return: carla.Vector3D __add__ ( self , other = carla.Vector3D ) __eq__ ( self , other = carla.Vector3D ) Returns True if values for every axis are equal. Return: bool __mul__ ( self , other = carla.Vector3D ) __ne__ ( self , other = carla.Vector3D ) Returns True if the value for any axis is different. Return: bool __str__ ( self ) Returns the axis values for the vector parsed as string. Return: str __sub__ ( self , other = carla.Vector3D ) __truediv__ ( self , other = carla.Vector3D )","title":"Dunder methods"},{"location":"python_api/#carlavehicle","text":"Inherited from carla.Actor One of the most important groups of actors in CARLA. These include any type of vehicle from cars to trucks, motorbikes, vans, bycicles and also official vehicles such as police cars. A wide set of these actors is provided in carla.BlueprintLibrary to facilitate differente requirements. Vehicles can be either manually controlled or set to an autopilot mode that will be conducted client-side by the traffic manager .","title":"carla.Vehicle"},{"location":"python_api/#instance-variables_61","text":"bounding_box ( carla.BoundingBox ) Bounding box containing the geometry of the vehicle. Its location and rotation are relative to the vehicle it is attached to.","title":"Instance Variables"},{"location":"python_api/#methods_47","text":"apply_ackermann_control ( self , control ) Applies an Ackermann control object on the next tick. Parameters: control ( carla.VehicleAckermannControl ) apply_ackermann_controller_settings ( self , settings ) Applies a new Ackermann control settings to this vehicle in the next tick. Parameters: settings ( carla.AckermannControllerSettings ) Warning: This method does call the simulator. apply_control ( self , control ) Applies a control object on the next tick, containing driving parameters such as throttle, steering or gear shifting. Parameters: control ( carla.VehicleControl ) apply_physics_control ( self , physics_control ) Applies a physics control object in the next tick containing the parameters that define the vehicle as a corporeal body. E.g.: moment of inertia, mass, drag coefficient and many more. Parameters: physics_control ( carla.VehiclePhysicsControl ) close_door ( self , door_idx ) Close the door door_idx if the vehicle has it. Use carla.VehicleDoor.All to close all available doors. Parameters: door_idx ( carla.VehicleDoor ) - door index. enable_carsim ( self , simfile_path ) Enables the CarSim physics solver for this particular vehicle. In order for this function to work, there needs to be a valid license manager running on the server side. The control inputs are redirected to CarSim which will provide the position and orientation of the vehicle for every frame. Parameters: simfile_path ( str ) - Path to the .simfile file with the parameters of the simulation. enable_chrono_physics ( self , max_substeps , max_substep_delta_time , vehicle_json , powertrain_json , tire_json , base_json_path ) Enables Chrono physics on a spawned vehicle. Parameters: max_substeps ( int ) - Max number of Chrono substeps. max_substep_delta_time ( int ) - Max size of substep. vehicle_json ( str ) - Path to vehicle json file relative to base_json_path . powertrain_json ( str ) - Path to powertrain json file relative to base_json_path . tire_json ( str ) - Path to tire json file relative to base_json_path . base_json_path ( str ) - Path to chrono/data/vehicle folder. E.g., /home/user/carla/Build/chrono-install/share/chrono/data/vehicle/ (the final / character is required). Note: Ensure that you have started the CARLA server with the ARGS=\"--chrono\" flag. You will not be able to use Chrono physics without this flag set. Warning: Collisions are not supported. When a collision is detected, physics will revert to the default CARLA physics. is_at_traffic_light ( self ) Vehicles will be affected by a traffic light when the light is red and the vehicle is inside its bounding box. The client returns whether a traffic light is affecting this vehicle according to last tick (it does not call the simulator). Return: bool open_door ( self , door_idx ) Open the door door_idx if the vehicle has it. Use carla.VehicleDoor.All to open all available doors. Parameters: door_idx ( carla.VehicleDoor ) - door index. show_debug_telemetry ( self , enabled =True ) Enables or disables the telemetry on this vehicle. This shows information about the vehicles current state and forces applied to it in the spectator window. Only information for one vehicle can be shown so that, if you enable a second one, the previous will be automatically disabled. Parameters: enabled ( bool ) use_carsim_road ( self , enabled ) Enables or disables the usage of CarSim vs terrain file specified in the .simfile . By default this option is disabled and CarSim uses unreal engine methods to process the geometry of the scene. Parameters: enabled ( bool )","title":"Methods"},{"location":"python_api/#getters_14","text":"get_ackermann_controller_settings ( self ) Returns the last Ackermann control settings applied to this vehicle. Return: carla.AckermannControllerSettings Warning: This method does call the simulator to retrieve the value. get_control ( self ) The client returns the control applied in the last tick. The method does not call the simulator. Return: carla.VehicleControl get_failure_state ( self ) Vehicle have failure states, to indicate that it is incapable of continuing its route. This function returns the vehicle's specific failure state, or in other words, the cause that resulted in it. Return: carla.VehicleFailureState get_light_state ( self ) Returns a flag representing the vehicle light state, this represents which lights are active or not. Return: carla.VehicleLightState Setter: carla.Vehicle.set_light_state get_physics_control ( self ) The simulator returns the last physics control applied to this vehicle. Return: carla.VehiclePhysicsControl Warning: This method does call the simulator to retrieve the value. get_speed_limit ( self ) The client returns the speed limit affecting this vehicle according to last tick (it does not call the simulator). The speed limit is updated when passing by a speed limit signal, so a vehicle might have none right after spawning. Return: float - km/h get_traffic_light ( self ) Retrieves the traffic light actor affecting this vehicle (if any) according to last tick. The method does not call the simulator. Return: carla.TrafficLight get_traffic_light_state ( self ) The client returns the state of the traffic light affecting this vehicle according to last tick. The method does not call the simulator. If no traffic light is currently affecting the vehicle, returns green . Return: carla.TrafficLightState get_wheel_steer_angle ( self , wheel_location ) Returns the physics angle in degrees of a vehicle's wheel. Parameters: wheel_location ( carla.VehicleWheelLocation ) Return: float Note: Returns the angle based on the physics of the wheel, not the visual angle.","title":"Getters"},{"location":"python_api/#setters_10","text":"set_autopilot ( self , enabled =True , port =8000 ) Registers or deletes the vehicle from a Traffic Manager's list. When True , the Traffic Manager passed as parameter will move the vehicle around. The autopilot takes place client-side. Parameters: enabled ( bool ) port ( uint16 ) - The port of the TM-Server where the vehicle is to be registered or unlisted. If None is passed, it will consider a TM at default port 8000 . set_light_state ( self , light_state ) Sets the light state of a vehicle using a flag that represents the lights that are on and off. Parameters: light_state ( carla.VehicleLightState ) Getter: carla.Vehicle.get_light_state set_wheel_steer_direction ( self , wheel_location , angle_in_deg ) snippet \u2192 Sets the angle of a vehicle's wheel visually. Parameters: wheel_location ( carla.VehicleWheelLocation ) angle_in_deg ( float ) Warning: Does not affect the physics of the vehicle.","title":"Setters"},{"location":"python_api/#dunder-methods_41","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlavehicleackermanncontrol","text":"Manages the basic movement of a vehicle using Ackermann driving controls.","title":"carla.VehicleAckermannControl"},{"location":"python_api/#instance-variables_62","text":"steer ( float ) Desired steer (rad). Positive value is to the right. Default is 0.0. steer_speed ( float ) Steering velocity (rad/s). Zero steering angle velocity means change the steering angle as quickly as possible. Default is 0.0. speed ( float ) Desired speed (m/s). Default is 0.0. acceleration ( float ) Desired acceleration (m/s2) Default is 0.0. jerk ( float ) Desired jerk (m/s3). Default is 0.0.","title":"Instance Variables"},{"location":"python_api/#methods_48","text":"__init__ ( self , steer =0.0 , steer_speed =0.0 , speed =0.0 , acceleration =0.0 , jerk =0.0 ) Parameters: steer ( float ) steer_speed ( float ) speed ( float ) acceleration ( float ) jerk ( float )","title":"Methods"},{"location":"python_api/#dunder-methods_42","text":"__eq__ ( self , other = carla.AckermannVehicleControl ) __ne__ ( self , other = carla.AckermannVehicleControl ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlavehiclecontrol","text":"Manages the basic movement of a vehicle using typical driving controls.","title":"carla.VehicleControl"},{"location":"python_api/#instance-variables_63","text":"throttle ( float ) A scalar value to control the vehicle throttle [0.0, 1.0]. Default is 0.0. steer ( float ) A scalar value to control the vehicle steering [-1.0, 1.0]. Default is 0.0. brake ( float ) A scalar value to control the vehicle brake [0.0, 1.0]. Default is 0.0. hand_brake ( bool ) Determines whether hand brake will be used. Default is False . reverse ( bool ) Determines whether the vehicle will move backwards. Default is False . manual_gear_shift ( bool ) Determines whether the vehicle will be controlled by changing gears manually. Default is False . gear ( int ) States which gear is the vehicle running on.","title":"Instance Variables"},{"location":"python_api/#methods_49","text":"__init__ ( self , throttle =0.0 , steer =0.0 , brake =0.0 , hand_brake =False , reverse =False , manual_gear_shift =False , gear =0 ) Parameters: throttle ( float ) - Scalar value between [0.0,1.0]. steer ( float ) - Scalar value between [0.0,1.0]. brake ( float ) - Scalar value between [0.0,1.0]. hand_brake ( bool ) reverse ( bool ) manual_gear_shift ( bool ) gear ( int )","title":"Methods"},{"location":"python_api/#dunder-methods_43","text":"__eq__ ( self , other = carla.VehicleControl ) __ne__ ( self , other = carla.VehicleControl ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlavehicledoor","text":"Possible index representing the possible doors that can be open. Notice that not all possible doors are able to open in some vehicles.","title":"carla.VehicleDoor"},{"location":"python_api/#instance-variables_64","text":"FL Front left door. FR Front right door. RL Back left door. RR Back right door. All Represents all doors.","title":"Instance Variables"},{"location":"python_api/#carlavehiclefailurestate","text":"Enum containing the different failure states of a vehicle, from which the it cannot recover. These are returned by get_failure_state() and only Rollover is currently implemented.","title":"carla.VehicleFailureState"},{"location":"python_api/#instance-variables_65","text":"NONE Rollover Engine TirePuncture","title":"Instance Variables"},{"location":"python_api/#carlavehiclelightstate","text":"Class that recaps the state of the lights of a vehicle, these can be used as a flags. E.g: VehicleLightState.HighBeam & VehicleLightState.Brake will return True when both are active. Lights are off by default in any situation and should be managed by the user via script. The blinkers blink automatically. Warning: Right now, not all vehicles have been prepared to work with this functionality, this will be added to all of them in later updates .","title":"carla.VehicleLightState"},{"location":"python_api/#instance-variables_66","text":"NONE All lights off. Position LowBeam HighBeam Brake RightBlinker LeftBlinker Reverse Fog Interior Special1 This is reserved for certain vehicles that can have special lights, like a siren. Special2 This is reserved for certain vehicles that can have special lights, like a siren. All All lights on.","title":"Instance Variables"},{"location":"python_api/#carlavehiclephysicscontrol","text":"Summarizes the parameters that will be used to simulate a carla.Vehicle as a physical object. The specific settings for the wheels though are stipulated using carla.WheelPhysicsControl .","title":"carla.VehiclePhysicsControl"},{"location":"python_api/#instance-variables_67","text":"torque_curve ( list( carla.Vector2D ) ) Curve that indicates the torque measured in Nm for a specific RPM of the vehicle's engine. max_rpm ( float ) The maximum RPM of the vehicle's engine. moi ( float - kg*m 2 ) The moment of inertia of the vehicle's engine. damping_rate_full_throttle ( float ) Damping ratio when the throttle is maximum. damping_rate_zero_throttle_clutch_engaged ( float ) Damping ratio when the throttle is zero with clutch engaged. damping_rate_zero_throttle_clutch_disengaged ( float ) Damping ratio when the throttle is zero with clutch disengaged. use_gear_autobox ( bool ) If True , the vehicle will have an automatic transmission. gear_switch_time ( float - seconds ) Switching time between gears. clutch_strength ( float - kg*m 2 /s ) Clutch strength of the vehicle. final_ratio ( float ) Fixed ratio from transmission to wheels. forward_gears ( list( carla.GearPhysicsControl ) ) List of objects defining the vehicle's gears. mass ( float - kilograms ) Mass of the vehicle. drag_coefficient ( float ) Drag coefficient of the vehicle's chassis. center_of_mass ( carla.Vector3D - meters ) Center of mass of the vehicle. steering_curve ( list( carla.Vector2D ) ) Curve that indicates the maximum steering for a specific forward speed. use_sweep_wheel_collision ( bool ) Enable the use of sweep for wheel collision. By default, it is disabled and it uses a simple raycast from the axis to the floor for each wheel. This option provides a better collision model in which the full volume of the wheel is checked against collisions. wheels ( list( carla.WheelPhysicsControl ) ) List of wheel physics objects. This list should have 4 elements, where index 0 corresponds to the front left wheel, index 1 corresponds to the front right wheel, index 2 corresponds to the back left wheel and index 3 corresponds to the back right wheel. For 2 wheeled vehicles, set the same values for both front and back wheels.","title":"Instance Variables"},{"location":"python_api/#methods_50","text":"__init__ ( self , torque_curve =[[0.0, 500.0], [5000.0, 500.0]] , max_rpm =5000.0 , moi =1.0 , damping_rate_full_throttle =0.15 , damping_rate_zero_throttle_clutch_engaged =2.0 , damping_rate_zero_throttle_clutch_disengaged =0.35 , use_gear_autobox =True , gear_switch_time =0.5 , clutch_strength =10.0 , final_ratio =4.0 , forward_gears =list() , drag_coefficient =0.3 , center_of_mass =[0.0, 0.0, 0.0] , steering_curve =[[0.0, 1.0], [10.0, 0.5]] , wheels =list() , use_sweep_wheel_collision =False , mass =1000.0 ) VehiclePhysicsControl constructor. Parameters: torque_curve ( list( carla.Vector2D ) ) max_rpm ( float ) moi ( float - kg*m 2 ) damping_rate_full_throttle ( float ) damping_rate_zero_throttle_clutch_engaged ( float ) damping_rate_zero_throttle_clutch_disengaged ( float ) use_gear_autobox ( bool ) gear_switch_time ( float - seconds ) clutch_strength ( float - kg*m 2 /s ) final_ratio ( float ) forward_gears ( list( carla.GearPhysicsControl ) ) drag_coefficient ( float ) center_of_mass ( carla.Vector3D ) steering_curve ( carla.Vector2D ) wheels ( list( carla.WheelPhysicsControl ) ) use_sweep_wheel_collision ( bool ) mass ( float - kilograms )","title":"Methods"},{"location":"python_api/#dunder-methods_44","text":"__eq__ ( self , other = carla.VehiclePhysicsControl ) __ne__ ( self , other = carla.VehiclePhysicsControl ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlavehiclewheellocation","text":"enum representing the position of each wheel on a vehicle. Used to identify the target wheel when setting an angle in carla.Vehicle.set_wheel_steer_direction or carla.Vehicle.get_wheel_steer_angle .","title":"carla.VehicleWheelLocation"},{"location":"python_api/#instance-variables_68","text":"FL_Wheel Front left wheel of a 4 wheeled vehicle. FR_Wheel Front right wheel of a 4 wheeled vehicle. BL_Wheel Back left wheel of a 4 wheeled vehicle. BR_Wheel Back right wheel of a 4 wheeled vehicle. Front_Wheel Front wheel of a 2 wheeled vehicle. Back_Wheel Back wheel of a 2 wheeled vehicle.","title":"Instance Variables"},{"location":"python_api/#carlawalker","text":"Inherited from carla.Actor This class inherits from the carla.Actor and defines pedestrians in the simulation. Walkers are a special type of actor that can be controlled either by an AI ( carla.WalkerAIController ) or manually via script, using a series of carla.WalkerControl to move these and their skeletons.","title":"carla.Walker"},{"location":"python_api/#methods_51","text":"apply_control ( self , control ) On the next tick, the control will move the walker in a certain direction with a certain speed. Jumps can be commanded too. Parameters: control ( carla.WalkerControl ) blend_pose ( self , blend_value ) Set the blending value of the custom pose with the animation. The values can be: 0: will show only the animation 1: will show only the custom pose (set by the user with set_bones()) any other: will interpolate all the bone positions between animation and the custom pose. Parameters: blend_value ( float - value from 0 to 1 with the blend percentage ) hide_pose ( self ) Hide the custom pose and show the animation (same as calling blend_pose(0)). show_pose ( self ) Show the custom pose and hide the animation (same as calling blend_pose(1)).","title":"Methods"},{"location":"python_api/#getters_15","text":"get_bones ( self ) Return the structure with all the bone transformations from the actor. For each bone, we get the name and its transform in three different spaces: name: bone name world: transform in world coordinates component: transform based on the pivot of the actor relative: transform based on the bone parent. Return: carla.WalkerBoneControlOut Setter: carla.Walker.set_bones get_control ( self ) The client returns the control applied to this walker during last tick. The method does not call the simulator. Return: carla.WalkerControl get_pose_from_animation ( self ) Make a copy of the current animation frame as the custom pose. Initially the custom pose is the neutral pedestrian pose.","title":"Getters"},{"location":"python_api/#setters_11","text":"set_bones ( self , bones ) Set the bones of the actor. For each bone we want to set we use a relative transform. Only the bones in this list will be set. For each bone you need to setup this info: name: bone name relative: transform based on the bone parent. Parameters: bones ( carla.WalkerBoneControlIn - list of pairs (bone_name, transform) for the bones that we want to set ) Getter: carla.Walker.get_bones","title":"Setters"},{"location":"python_api/#dunder-methods_45","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawalkeraicontroller","text":"Inherited from carla.Actor Class that conducts AI control for a walker. The controllers are defined as actors, but they are quite different from the rest. They need to be attached to a parent actor during their creation, which is the walker they will be controlling (take a look at carla.World if you are yet to learn on how to spawn actors). They also need for a special blueprint (already defined in carla.BlueprintLibrary as \"controller.ai.walker\"). This is an empty blueprint, as the AI controller will be invisible in the simulation but will follow its parent around to dictate every step of the way.","title":"carla.WalkerAIController"},{"location":"python_api/#methods_52","text":"go_to_location ( self , destination ) Sets the destination that the pedestrian will reach. Parameters: destination ( carla.Location - meters ) start ( self ) Enables AI control for its parent walker. stop ( self ) snippet \u2192 Disables AI control for its parent walker.","title":"Methods"},{"location":"python_api/#setters_12","text":"set_max_speed ( self , speed =1.4 ) Sets a speed for the walker in meters per second. Parameters: speed ( float - m/s ) - An easy walking speed is set by default.","title":"Setters"},{"location":"python_api/#dunder-methods_46","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawalkerbonecontrolin","text":"This class grants bone specific manipulation for walker. The skeletons of walkers have been unified for clarity and the transform applied to each bone are always relative to its parent. Take a look here to learn more on how to create a walker and define its movement.","title":"carla.WalkerBoneControlIn"},{"location":"python_api/#instance-variables_69","text":"bone_transforms ( list([name,transform]) ) List with the data for each bone we want to set: name: bone name relative: transform based on the bone parent.","title":"Instance Variables"},{"location":"python_api/#methods_53","text":"__init__ ( self , list(name,transform) ) Initializes an object containing moves to be applied on tick. These are listed with the name of the bone and the transform that will be applied to it. Parameters: list(name,transform) ( tuple )","title":"Methods"},{"location":"python_api/#dunder-methods_47","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawalkerbonecontrolout","text":"This class is used to return all bone positions of a pedestrian. For each bone we get its name and its transform in three different spaces (world, actor and relative).","title":"carla.WalkerBoneControlOut"},{"location":"python_api/#instance-variables_70","text":"bone_transforms ( list([name,world, actor, relative]) ) List of one entry per bone with this information: name: bone name world: transform in world coordinates component: transform based on the pivot of the actor relative: transform based on the bone parent.","title":"Instance Variables"},{"location":"python_api/#methods_54","text":"","title":"Methods"},{"location":"python_api/#dunder-methods_48","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawalkercontrol","text":"This class defines specific directions that can be commanded to a carla.Walker to control it via script. AI control can be settled for walkers, but the control used to do so is carla.WalkerAIController .","title":"carla.WalkerControl"},{"location":"python_api/#instance-variables_71","text":"direction ( carla.Vector3D ) Vector using global coordinates that will correspond to the direction of the walker. speed ( float - m/s ) A scalar value to control the walker's speed. jump ( bool ) If True , the walker will perform a jump.","title":"Instance Variables"},{"location":"python_api/#methods_55","text":"__init__ ( self , direction =[1.0, 0.0, 0.0] , speed =0.0 , jump =False ) Parameters: direction ( carla.Vector3D ) speed ( float - m/s ) jump ( bool )","title":"Methods"},{"location":"python_api/#dunder-methods_49","text":"__eq__ ( self , other = carla.WalkerControl ) Compares every variable with other and returns True if these are all the same. __ne__ ( self , other = carla.WalkerControl ) Compares every variable with other and returns True if any of these differ. __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawaypoint","text":"Waypoints in CARLA are described as 3D directed points. They have a carla.Transform which locates the waypoint in a road and orientates it according to the lane. They also store the road information belonging to said point regarding its lane and lane markings. All the information regarding waypoints and the waypoint API is retrieved as provided by the OpenDRIVE file. Once the client asks for the map object to the server, no longer communication will be needed.","title":"carla.Waypoint"},{"location":"python_api/#instance-variables_72","text":"id ( int ) The identifier is generated using a hash combination of the road , section , lane and s values that correspond to said point in the OpenDRIVE geometry. The s precision is set to 2 centimeters, so 2 waypoints closer than 2 centimeters in the same road, section and lane, will have the same identificator. transform ( carla.Transform ) Position and orientation of the waypoint according to the current lane information. This data is computed the first time it is accessed. It is not created right away in order to ease computing costs when lots of waypoints are created but their specific transform is not needed. road_id ( int ) OpenDRIVE road's id. section_id ( int ) OpenDRIVE section's id, based on the order that they are originally defined. is_junction ( bool ) True if the current Waypoint is on a junction as defined by OpenDRIVE. junction_id ( int ) OpenDRIVE junction's id. For more information refer to OpenDRIVE documentation . lane_id ( int ) OpenDRIVE lane's id, this value can be positive or negative which represents the direction of the current lane with respect to the road. For more information refer to OpenDRIVE documentation . s ( float ) OpenDRIVE s value of the current position. lane_width ( float ) Horizontal size of the road at current s . lane_change ( carla.LaneChange ) Lane change definition of the current Waypoint's location, based on the traffic rules defined in the OpenDRIVE file. It states if a lane change can be done and in which direction. lane_type ( carla.LaneType ) The lane type of the current Waypoint, based on OpenDRIVE 1.4 standard. right_lane_marking ( carla.LaneMarking ) The right lane marking information based on the direction of the Waypoint. left_lane_marking ( carla.LaneMarking ) The left lane marking information based on the direction of the Waypoint.","title":"Instance Variables"},{"location":"python_api/#methods_56","text":"next ( self , distance ) Returns a list of waypoints at a certain approximate distance from the current one. It takes into account the road and its possible deviations without performing any lane change and returns one waypoint per option. The list may be empty if the lane is not connected to any other at the specified distance. Parameters: distance ( float - meters ) - The approximate distance where to get the next waypoints. Return: list( carla.Waypoint ) next_until_lane_end ( self , distance ) Returns a list of waypoints from this to the end of the lane separated by a certain distance . Parameters: distance ( float - meters ) - The approximate distance between waypoints. Return: list( carla.Waypoint ) previous ( self , distance ) This method does not return the waypoint previously visited by an actor, but a list of waypoints at an approximate distance but in the opposite direction of the lane. Similarly to next() , it takes into account the road and its possible deviations without performing any lane change and returns one waypoint per option. The list may be empty if the lane is not connected to any other at the specified distance. Parameters: distance ( float - meters ) - The approximate distance where to get the previous waypoints. Return: list( carla.Waypoint ) previous_until_lane_start ( self , distance ) Returns a list of waypoints from this to the start of the lane separated by a certain distance . Parameters: distance ( float - meters ) - The approximate distance between waypoints. Return: list( carla.Waypoint )","title":"Methods"},{"location":"python_api/#getters_16","text":"get_junction ( self ) If the waypoint belongs to a junction this method returns the associated junction object. Otherwise returns null. Return: carla.Junction get_landmarks ( self , distance , stop_at_junction =False ) Returns a list of landmarks in the road from the current waypoint until the specified distance. Parameters: distance ( float - meters ) - The maximum distance to search for landmarks from the current waypoint. stop_at_junction ( bool ) - Enables or disables the landmark search through junctions. Return: list( carla.Landmark ) get_landmarks_of_type ( self , distance , type , stop_at_junction =False ) Returns a list of landmarks in the road of a specified type from the current waypoint until the specified distance. Parameters: distance ( float - meters ) - The maximum distance to search for landmarks from the current waypoint. type ( str ) - The type of landmarks to search. stop_at_junction ( bool ) - Enables or disables the landmark search through junctions. Return: list( carla.Landmark ) get_left_lane ( self ) Generates a Waypoint at the center of the left lane based on the direction of the current Waypoint, taking into account if the lane change is allowed in this location. Will return None if the lane does not exist. Return: carla.Waypoint get_right_lane ( self ) Generates a waypoint at the center of the right lane based on the direction of the current waypoint, taking into account if the lane change is allowed in this location. Will return None if the lane does not exist. Return: carla.Waypoint","title":"Getters"},{"location":"python_api/#dunder-methods_50","text":"__str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaweatherparameters","text":"This class defines objects containing lighting and weather specifications that can later be applied in carla.World . So far, these conditions only intervene with sensor.camera.rgb . They neither affect the actor's physics nor other sensors. Each of these parameters acts indepently from the rest. Increasing the rainfall will not automatically create puddles nor change the road's humidity. That makes for a better customization but means that realistic conditions need to be scripted. However an example of dynamic weather conditions working realistically can be found here .","title":"carla.WeatherParameters"},{"location":"python_api/#instance-variables_73","text":"cloudiness ( float ) Values range from 0 to 100, being 0 a clear sky and 100 one completely covered with clouds. precipitation ( float ) Rain intensity values range from 0 to 100, being 0 none at all and 100 a heavy rain. precipitation_deposits ( float ) Determines the creation of puddles. Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water. Puddles are created with static noise, meaning that they will always appear at the same locations. wind_intensity ( float ) Controls the strenght of the wind with values from 0, no wind at all, to 100, a strong wind. The wind does affect rain direction and leaves from trees, so this value is restricted to avoid animation issues. sun_azimuth_angle ( float - degrees ) The azimuth angle of the sun. Values range from 0 to 360. Zero is an origin point in a sphere determined by Unreal Engine. sun_altitude_angle ( float - degrees ) Altitude angle of the sun. Values range from -90 to 90 corresponding to midnight and midday each. fog_density ( float ) Fog concentration or thickness. It only affects the RGB camera sensor. Values range from 0 to 100. fog_distance ( float - meters ) Fog start distance. Values range from 0 to infinite. wetness ( float ) Wetness intensity. It only affects the RGB camera sensor. Values range from 0 to 100. fog_falloff ( float ) Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights. Corresponds to Fog Height Falloff in the UE docs. If the value is 0, the fog will be lighter than air, and will cover the whole scene. A value of 1 is approximately as dense as the air, and reaches normal-sized buildings. For values greater than 5, the air will be so dense that it will be compressed on ground level. scattering_intensity ( float ) Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution. mie_scattering_scale ( float ) Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution. rayleigh_scattering_scale ( float ) Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening. dust_storm ( float ) Determines the strength of the dust storm weather. Values range from 0 to 100.","title":"Instance Variables"},{"location":"python_api/#methods_57","text":"__init__ ( self , cloudiness =0.0 , precipitation =0.0 , precipitation_deposits =0.0 , wind_intensity =0.0 , sun_azimuth_angle =0.0 , sun_altitude_angle =0.0 , fog_density =0.0 , fog_distance =0.0 , wetness =0.0 , fog_falloff =0.0 , scattering_intensity =0.0 , mie_scattering_scale =0.0 , rayleigh_scattering_scale =0.0331 ) Method to initialize an object defining weather conditions. This class has some presets for different noon and sunset conditions listed in a note below. Parameters: cloudiness ( float ) - 0 is a clear sky, 100 complete overcast. precipitation ( float ) - 0 is no rain at all, 100 a heavy rain. precipitation_deposits ( float ) - 0 means no puddles on the road, 100 means roads completely capped by rain. wind_intensity ( float ) - 0 is calm, 100 a strong wind. sun_azimuth_angle ( float - degrees ) - 0 is an arbitrary North, 180 its corresponding South. sun_altitude_angle ( float - degrees ) - 90 is midday, -90 is midnight. fog_density ( float ) - Concentration or thickness of the fog, from 0 to 100. fog_distance ( float - meters ) - Distance where the fog starts in meters. wetness ( float ) - Humidity percentages of the road, from 0 to 100. fog_falloff ( float ) - Density (specific mass) of the fog, from 0 to infinity. scattering_intensity ( float ) - Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution. mie_scattering_scale ( float ) - Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution. rayleigh_scattering_scale ( float ) - Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening. Note: ClearNoon, CloudyNoon, WetNoon, WetCloudyNoon, SoftRainNoon, MidRainyNoon, HardRainNoon, ClearSunset, CloudySunset, WetSunset, WetCloudySunset, SoftRainSunset, MidRainSunset, HardRainSunset.","title":"Methods"},{"location":"python_api/#dunder-methods_51","text":"__eq__ ( self , other ) Returns True if both objects' variables are the same. Return: bool __ne__ ( self , other ) Returns True if both objects' variables are different. Return: bool __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlawheelphysicscontrol","text":"Class that defines specific physical parameters for wheel objects that will be part of a carla.VehiclePhysicsControl to simulate vehicle it as a material object.","title":"carla.WheelPhysicsControl"},{"location":"python_api/#instance-variables_74","text":"tire_friction ( float ) A scalar value that indicates the friction of the wheel. damping_rate ( float ) Damping rate of the wheel. max_steer_angle ( float - degrees ) Maximum angle that the wheel can steer. radius ( float - centimeters ) Radius of the wheel. max_brake_torque ( float - N*m ) Maximum brake torque. max_handbrake_torque ( float - N*m ) Maximum handbrake torque. position ( carla.Vector3D ) World position of the wheel. This is a read-only parameter. long_stiff_value ( float - kg per radian ) Tire longitudinal stiffness per unit gravitational acceleration. Each vehicle has a custom value. lat_stiff_max_load ( float ) Maximum normalized tire load at which the tire can deliver no more lateral stiffness no matter how much extra load is applied to the tire. Each vehicle has a custom value. lat_stiff_value ( float ) Maximum stiffness per unit of lateral slip. Each vehicle has a custom value.","title":"Instance Variables"},{"location":"python_api/#methods_58","text":"__init__ ( self , tire_friction =2.0 , damping_rate =0.25 , max_steer_angle =70.0 , radius =30.0 , max_brake_torque =1500.0 , max_handbrake_torque =3000.0 , position =(0.0,0.0,0.0) ) Parameters: tire_friction ( float ) damping_rate ( float ) max_steer_angle ( float - degrees ) radius ( float - centimerers ) max_brake_torque ( float - N*m ) max_handbrake_torque ( float - N*m ) position ( carla.Vector3D - meters )","title":"Methods"},{"location":"python_api/#dunder-methods_52","text":"__eq__ ( self , other = carla.WheelPhysicsControl ) __ne__ ( self , other = carla.WheelPhysicsControl ) __str__ ( self )","title":"Dunder methods"},{"location":"python_api/#carlaworld","text":"World objects are created by the client to have a place for the simulation to happen. The world contains the map we can see, meaning the asset, not the navigation map. Navigation maps are part of the carla.Map class. It also manages the weather and actors present in it. There can only be one world per simulation, but it can be changed anytime.","title":"carla.World"},{"location":"python_api/#instance-variables_75","text":"id ( int ) The ID of the episode associated with this world. Episodes are different sessions of a simulation. These change everytime a world is disabled or reloaded. Keeping track is useful to avoid possible issues. debug ( carla.DebugHelper ) Responsible for creating different shapes for debugging. Take a look at its class to learn more about it.","title":"Instance Variables"},{"location":"python_api/#methods_59","text":"apply_color_texture_to_object ( self , object_name , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to object_name . Parameters: object_name ( str ) material_parameter ( carla.MaterialParameter ) texture ( TextureColor ) apply_color_texture_to_objects ( self , objects_name_list , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to all objects in objects_name_list . Parameters: objects_name_list ( list(str) ) material_parameter ( carla.MaterialParameter ) texture ( TextureColor ) apply_float_color_texture_to_object ( self , object_name , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to object_name . Parameters: object_name ( str ) material_parameter ( carla.MaterialParameter ) texture ( TextureFloatColor ) apply_float_color_texture_to_objects ( self , objects_name_list , material_parameter , texture ) Applies a texture object in the field corresponfing to material_parameter (normal, diffuse, etc) to the object in the scene corresponding to all objects in objects_name_list . Parameters: objects_name_list ( list(str) ) material_parameter ( carla.MaterialParameter ) texture ( TextureFloatColor ) apply_settings ( self , world_settings ) This method applies settings contained in an object to the simulation running and returns the ID of the frame they were implemented. Parameters: world_settings ( carla.WorldSettings ) Return: int Warning: If synchronous mode is enabled, and there is a Traffic Manager running, this must be set to sync mode too. Read this to learn how to do it. apply_textures_to_object ( self , object_name , diffuse_texture , emissive_texture , normal_texture , ao_roughness_metallic_emissive_texture ) Applies all texture fields in carla.MaterialParameter to the object object_name . Empty textures here will not be applied. Parameters: object_name ( str ) diffuse_texture ( TextureColor ) emissive_texture ( TextureFloatColor ) normal_texture ( TextureFloatColor ) ao_roughness_metallic_emissive_texture ( TextureFloatColor ) apply_textures_to_objects ( self , objects_name_list , diffuse_texture , emissive_texture , normal_texture , ao_roughness_metallic_emissive_texture ) Applies all texture fields in carla.MaterialParameter to all objects in objects_name_list . Empty textures here will not be applied. Parameters: objects_name_list ( list(str) ) diffuse_texture ( TextureColor ) emissive_texture ( TextureFloatColor ) normal_texture ( TextureFloatColor ) ao_roughness_metallic_emissive_texture ( TextureFloatColor ) cast_ray ( self , initial_location , final_location ) Casts a ray from the specified initial_location to final_location. The function then detects all geometries intersecting the ray and returns a list of carla.LabelledPoint in order. Parameters: initial_location ( carla.Location ) - The initial position of the ray. final_location ( carla.Location ) - The final position of the ray. Return: list( carla.LabelledPoint ) enable_environment_objects ( self , env_objects_ids , enable ) snippet \u2192 Enable or disable a set of EnvironmentObject identified by their id. These objects will appear or disappear from the level. Parameters: env_objects_ids ( set(int) ) - Set of EnvironmentObject ids to change. enable ( bool ) - State to be applied to all the EnvironmentObject of the set. freeze_all_traffic_lights ( self , frozen ) Freezes or unfreezes all traffic lights in the scene. Frozen traffic lights can be modified by the user but the time will not update them until unfrozen. Parameters: frozen ( bool ) ground_projection ( self , location , search_distance ) Projects the specified point downwards in the scene. The functions casts a ray from location in the direction (0,0,-1) (downwards) and returns a carla.LabelledPoint object with the first geometry this ray intersects (usually the ground). If no geometry is found in the search_distance range the function returns None . Parameters: location ( carla.Location ) - The point to be projected. search_distance ( float ) - The maximum distance to perform the projection. Return: carla.LabelledPoint load_map_layer ( self , map_layers ) snippet \u2192 \u52a0\u8f7d\u56fe\u5c42\u5230\u6307\u5b9a\u5c42\u6b21\u3002\u5982\u679c\u8be5\u5c42\u6b21\u5df2\u7ecf\u52a0\u8f7d\u5219\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u53c2\u6570\uff1a map_layers ( carla.MapLayer ) - \u52a0\u8f7d\u5230\u6307\u5b9a\u5c42\u6b21\u7684\u63a9\u819c\u3002 \u8b66\u544a\uff1a \u8fd9\u4ec5\u4ec5\u5f71\u54cd\u5206\u5c42\uff08Opt\uff09\u5730\u56fe\u3002\u6700\u5c0f\u5e03\u5c40\u5305\u62ec\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u3002 on_tick ( self , callback ) \u6b64\u65b9\u6cd5\u7528\u4e8e __\u5f02\u6b65\u6a21\u5f0f \u3002\u5b83\u4ece\u5ba2\u6237\u7aef\u5b9a\u4e49\u7684 callback \u51fd\u6570\u542f\u52a8\u56de\u8c03\uff0c\u5e76\u8fd4\u56de\u56de\u8c03\u7684 ID\u3002\u6bcf\u5f53\u670d\u52a1\u5668\u53d1\u51fa\u65f6\u6ef4\u7b54\u4fe1\u53f7\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002\u5b83\u9700\u8981\u4e00\u4e2a carla.WorldSnapshot \u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u53ef\u4ee5\u4ece wait_for_tick() \u83b7\u5f97\u3002\u4f7f\u7528 remove_on_tick() \u6765\u505c\u6b62\u56de\u8c03\u3002 \u53c2\u6570\uff1a callback ( carla.WorldSnapshot ) - \u5c06\u5feb\u7167\u4f5c\u4e3a\u5f3a\u5236\u53c2\u6570\u7684\u51fd\u6570\uff0c\u5f53\u5ba2\u6237\u7aef\u6536\u5230\u6ef4\u7b54\u4fe1\u53f7\u65f6\u5c06\u8c03\u7528\u8be5\u51fd\u6570\u3002 Return: int project_point ( self , location , direction , search_distance ) Projects the specified point to the desired direction in the scene. The functions casts a ray from location in a direction and returns a carla.Labelled object with the first geometry this ray intersects. If no geometry is found in the search_distance range the function returns None . Parameters: location ( carla.Location ) - The point to be projected. direction ( carla.Vector3D ) - The direction of projection. search_distance ( float ) - The maximum distance to perform the projection. Return: carla.LabelledPoint remove_on_tick ( self , callback_id ) Stops the callback for callback_id started with on_tick() . Parameters: callback_id ( callback ) - The callback to be removed. The ID is returned when creating the callback. reset_all_traffic_lights ( self ) Resets the cycle of all traffic lights in the map to the initial state. spawn_actor ( self , blueprint , transform , attach_to =None , attachment =Rigid ) snippet \u2192 The method will create, return and spawn an actor into the world. The actor will need an available blueprint to be created and a transform (location and rotation). It can also be attached to a parent with a certain attachment type. Parameters: blueprint ( carla.ActorBlueprint ) - The reference from which the actor will be created. transform ( carla.Transform ) - Contains the location and orientation the actor will be spawned with. attach_to ( carla.Actor ) - The parent object that the spawned actor will follow around. attachment ( carla.AttachmentType ) - Determines how fixed and rigorous should be the changes in position according to its parent object. Return: carla.Actor tick ( self , seconds =10.0 ) \u8be5\u65b9\u6cd5\u7528\u4e8e \u540c\u6b65 \u6a21\u5f0f \uff0c\u5373\u670d\u52a1\u5668\u5728\u8ba1\u7b97\u4e0b\u4e00\u5e27\u4e4b\u524d\u7b49\u5f85\u5ba2\u6237\u7aef\u5ba2\u6237\u7aef\u6ef4\u7b54\u4fe1\u53f7\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u53d1\u9001\u6ef4\u7b54\u4fe1\u53f7\uff0c\u5e76\u8ba9\u4f4d\u4e8e\u670d\u52a1\u5668\u3002\u5b83\u8fd4\u56de\u7531\u670d\u52a1\u5668\u8ba1\u7b97\u7684\u65b0\u5e27ID\u3002 \u53c2\u6570\uff1a seconds ( float - \u79d2 ) - \u670d\u52a1\u5668\u5e94\u8be5\u7b49\u5f85\u6ef4\u7b54\u4fe1\u53f7\u7684\u6700\u5927\u65f6\u95f4\u3002\u5b83\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a 10.0 \u3002 \u8fd4\u56de\uff1a int \u6ce8\u610f\uff1a \u5982\u679c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u6ca1\u6709\u6536\u5230\u6ef4\u7b54\u4fe1\u53f7\uff0c\u6a21\u62df\u5c06\u51bb\u7ed3\u3002\u6b64\u5916\uff0c\u5982\u679c\u4ece\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u8bb8\u591a\u6ef4\u7b54\u4fe1\u53f7\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u540c\u6b65\u95ee\u9898\u3002\u8bf7\u9605\u8bfb\u6709\u5173 \u540c\u6b65\u6a21\u5f0f \u7684\u6587\u6863\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 try_spawn_actor ( self , blueprint , transform , attach_to =None , attachment =Rigid ) \u548c spawn_actor() \u4e00\u6837\uff0c\u4f46\u662f\u5355\u5931\u8d25\u65f6\u5019\u8fd4\u56de None \u800c\u4e0d\u662f\u629b\u51fa\u5f02\u5e38\u3002 \u53c2\u6570\uff1a blueprint ( carla.ActorBlueprint ) - \u5c06\u4ece\u4e2d\u521b\u5efa\u53c2\u4e0e\u8005\u7684\u5f15\u7528\u3002 transform ( carla.Transform ) - \u5305\u542b\u53c2\u4e0e\u8005\u5c06\u4f7f\u7528\u7684\u4f4d\u7f6e\u548c\u671d\u5411\u3002 attach_to ( carla.Actor ) - \u6d3e\u751f\u7684\u53c2\u4e0e\u8005\u5c06\u8ddf\u968f\u7684\u7236\u5bf9\u8c61\u3002 attachment ( carla.AttachmentType ) - \u6839\u636e\u5176\u7236\u5bf9\u8c61\u786e\u5b9a\u4f4d\u7f6e\u66f4\u6539\u7684\u56fa\u5b9a\u548c\u4e25\u683c\u7a0b\u5ea6\u3002 \u8fd4\u56de\uff1a carla.Actor unload_map_layer ( self , map_layers ) snippet \u2192 \u5c06\u9009\u5b9a\u7684\u56fe\u5c42\u5378\u8f7d\u5230\u6307\u5b9a\u5c42\u6b21\u3002\u5982\u679c\u5c42\u5df2\u7ecf\u5378\u8f7d\uff0c\u5219\u8c03\u7528\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002 \u53c2\u6570: map_layers ( carla.MapLayer ) - \u8981\u5378\u8f7d\u56fe\u5c42\u7684\u63a9\u819c\u3002 \u8b66\u544a: \u8fd9\u4ec5\u4ec5\u5f71\u54cd\u5206\u5c42\uff08Opt\uff09\u5730\u56fe\u3002\u6700\u5c0f\u5e03\u5c40\u5305\u62ec\u9053\u8def\u3001\u4eba\u884c\u9053\u3001\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\u3002 wait_for_tick ( self , seconds =10.0 ) This method is used in asynchronous mode . It makes the client wait for a server tick. When the next frame is computed, the server will tick and return a snapshot describing the new state of the world. Parameters: seconds ( float - seconds ) - Maximum time the server should wait for a tick. It is set to 10.0 by default. Return: carla.WorldSnapshot","title":"Methods"},{"location":"python_api/#getters_17","text":"get_actor ( self , actor_id ) Looks up for an actor by ID and returns None if not found. Parameters: actor_id ( int ) Return: carla.Actor get_actors ( self , actor_ids =None ) Retrieves a list of carla.Actor elements, either using a list of IDs provided or just listing everyone on stage. If an ID does not correspond with any actor, it will be excluded from the list returned, meaning that both the list of IDs and the list of actors may have different lengths. Parameters: actor_ids ( list ) - The IDs of the actors being searched. By default it is set to None and returns every actor on scene. Return: carla.ActorList get_blueprint_library ( self ) Returns a list of actor blueprints available to ease the spawn of these into the world. Return: carla.BlueprintLibrary get_environment_objects ( self , object_type =Any ) Returns a list of EnvironmentObject with the requested semantic tag. The method returns all the EnvironmentObjects in the level by default, but the query can be filtered by semantic tags with the argument object_type . Parameters: object_type ( carla.CityObjectLabel ) - Semantic tag of the EnvironmentObjects that are returned. Return: array( carla.EnvironmentObject ) get_level_bbs ( self , actor_type =Any ) Returns an array of bounding boxes with location and rotation in world space. The method returns all the bounding boxes in the level by default, but the query can be filtered by semantic tags with the argument actor_type . Parameters: actor_type ( carla.CityObjectLabel ) - Semantic tag of the elements contained in the bounding boxes that are returned. Return: array( carla.BoundingBox ) get_lightmanager ( self ) Returns an instance of carla.LightManager that can be used to handle the lights in the scene. Return: carla.LightManager get_map ( self ) Asks the server for the XODR containing the map file, and returns this parsed as a carla.Map . Return: carla.Map Warning: This method does call the simulation. It is expensive, and should only be called once. get_names_of_all_objects ( self ) Returns a list of the names of all objects in the scene that can be painted with the apply texture functions. Return: list(str) get_random_location_from_navigation ( self ) This can only be used with walkers. It retrieves a random location to be used as a destination using the go_to_location() method in carla.WalkerAIController . This location will be part of a sidewalk. Roads, crosswalks and grass zones are excluded. The method does not take into consideration locations of existing actors so if a collision happens when trying to spawn an actor, it will return an error. Take a look at generate_traffic.py for an example. Return: carla.Location get_settings ( self ) Returns an object containing some data about the simulation such as synchrony between client and server or rendering mode. Return: carla.WorldSettings get_snapshot ( self ) Returns a snapshot of the world at a certain moment comprising all the information about the actors. Return: carla.WorldSnapshot get_spectator ( self ) snippet \u2192 Returns the spectator actor. The spectator is a special type of actor created by Unreal Engine, usually with ID=0, that acts as a camera and controls the view in the simulator window. Return: carla.Actor get_traffic_light ( self , landmark ) Provided a landmark, returns the traffic light object it describes. Parameters: landmark ( carla.Landmark ) - The landmark object describing a traffic light. Return: carla.TrafficLight get_traffic_light_from_opendrive_id ( self , traffic_light_id ) Returns the traffic light actor corresponding to the indicated OpenDRIVE id. Parameters: traffic_light_id ( str ) - The OpenDRIVE id. Return: carla.TrafficLight get_traffic_lights_from_waypoint ( self , waypoint , distance ) This function performs a search along the road in front of the specified waypoint and returns a list of traffic light actors found in the specified search distance. Parameters: waypoint ( carla.Waypoint ) - The input waypoint. distance ( float ) - Search distance. Return: list( carla.TrafficLight ) get_traffic_lights_in_junction ( self , junction_id ) Returns the list of traffic light actors affecting the junction indicated in junction_id . Parameters: junction_id ( int ) - The id of the junction. Return: list( carla.TrafficLight ) get_traffic_sign ( self , landmark ) Provided a landmark, returns the traffic sign object it describes. Parameters: landmark ( carla.Landmark ) - The landmark object describing a traffic sign. Return: carla.TrafficSign get_vehicles_light_states ( self ) Returns a dict where the keys are carla.Actor IDs and the values are carla.VehicleLightState of that vehicle. Return: dict get_weather ( self ) Retrieves an object containing weather parameters currently active in the simulation, mainly cloudiness, precipitation, wind and sun position. Return: carla.WeatherParameters Setter: carla.World.set_weather","title":"Getters"},{"location":"python_api/#setters_13","text":"set_pedestrians_cross_factor ( self , percentage ) Parameters: percentage ( float ) - Sets the percentage of pedestrians that can walk on the road or cross at any point on the road. Value should be between 0.0 and 1.0 . For example, a value of 0.1 would allow 10% of pedestrians to walk on the road. Default is 0.0 . Note: Should be set before pedestrians are spawned. set_pedestrians_seed ( self , seed ) Parameters: seed ( int ) - Sets the seed to use for any random number generated in relation to pedestrians. Note: Should be set before pedestrians are spawned. If you want to repeat the same exact bodies (blueprint) for each pedestrian, then use the same seed in the Python code (where the blueprint is choosen randomly) and here, otherwise the pedestrians will repeat the same paths but the bodies will be different. set_weather ( self , weather ) Changes the weather parameteres ruling the simulation to another ones defined in an object. Parameters: weather ( carla.WeatherParameters ) - New conditions to be applied. Getter: carla.World.get_weather","title":"Setters"},{"location":"python_api/#dunder-methods_53","text":"__str__ ( self ) The content of the world is parsed and printed as a brief report of its current state. Return: string","title":"Dunder methods"},{"location":"python_api/#carlaworldsettings","text":"The simulation has some advanced configuration options that are contained in this class and can be managed using carla.World and its methods. These allow the user to choose between client-server synchrony/asynchrony, activation of \"no rendering mode\" and either if the simulation should run with a fixed or variable time-step. Check this out if you want to learn about it.","title":"carla.WorldSettings"},{"location":"python_api/#instance-variables_76","text":"synchronous_mode ( bool ) States the synchrony between client and server. When set to true, the server will wait for a client tick in order to move forward. It is false by default. no_rendering_mode ( bool ) When enabled, the simulation will run no rendering at all. This is mainly used to avoid overhead during heavy traffic simulations. It is false by default. fixed_delta_seconds ( float ) Ensures that the time elapsed between two steps of the simulation is fixed. Set this to 0.0 to work with a variable time-step, as happens by default. substepping ( bool ) Enable the physics substepping. This option allows computing some physics substeps between two render frames. If synchronous mode is set, the number of substeps and its time interval are fixed and computed are so they fulfilled the requirements of carla.WorldSettings.max_substep and carla.WorldSettings.max_substep_delta_time . These last two parameters need to be compatible with carla.WorldSettings.fixed_delta_seconds . Enabled by default. max_substep_delta_time ( float ) Maximum delta time of the substeps. If the carla.WorldSettingsmax_substep is high enough, the substep delta time would be always below or equal to this value. By default, the value is set to 0.01. max_substeps ( int ) The maximum number of physics substepping that are allowed. By default, the value is set to 10. max_culling_distance ( float ) Configure the max draw distance for each mesh of the level. deterministic_ragdolls ( bool ) Defines wether to use deterministic physics for pedestrian death animations or physical ragdoll simulation. When enabled, pedestrians have less realistic death animation but ensures determinism. When disabled, pedestrians are simulated as ragdolls with more realistic simulation and collision but no determinsm can be ensured. tile_stream_distance ( float ) Used for large maps only. Configures the maximum distance from the hero vehicle to stream tiled maps. Regions of the map within this range will be visible (and capable of simulating physics). Regions outside this region will not be loaded. actor_active_distance ( float ) Used for large maps only. Configures the distance from the hero vehicle to convert actors to dormant. Actors within this range will be active, and actors outside will become dormant. spectator_as_ego ( bool ) Used for large maps only. Defines the influence of the spectator on tile loading in Large Maps. By default, the spectator will provoke loading of neighboring tiles in the absence of an ego actor. This might be inconvenient for applications that immediately spawn an ego actor.","title":"Instance Variables"},{"location":"python_api/#methods_60","text":"__init__ ( self , synchronous_mode =False , no_rendering_mode =False , fixed_delta_seconds =0.0 , max_culling_distance =0.0 , deterministic_ragdolls =False , tile_stream_distance =3000 , actor_active_distance =2000 , spectator_as_ego =True ) Creates an object containing desired settings that could later be applied through carla.World and its method apply_settings() . Parameters: synchronous_mode ( bool ) - Set this to true to enable client-server synchrony. no_rendering_mode ( bool ) - Set this to true to completely disable rendering in the simulation. fixed_delta_seconds ( float - seconds ) - Set a fixed time-step in between frames. 0.0 means variable time-step and it is the default mode. max_culling_distance ( float - meters ) - Configure the max draw distance for each mesh of the level. deterministic_ragdolls ( bool ) - Defines wether to use deterministic physics or ragdoll simulation for pedestrian deaths. tile_stream_distance ( float - meters ) - Used for large maps only. Configures the maximum distance from the hero vehicle to stream tiled maps. actor_active_distance ( float - meters ) - Used for large maps only. Configures the distance from the hero vehicle to convert actors to dormant. spectator_as_ego ( bool ) - Used for large maps only. Defines the influence of the spectator on tile loading in Large Maps.","title":"Methods"},{"location":"python_api/#dunder-methods_54","text":"__eq__ ( self , other = carla.WorldSettings ) Returns True if both objects' variables are the same. Return: bool __ne__ ( self , other = carla.WorldSettings ) Returns True if both objects' variables are different. Return: bool __str__ ( self ) Parses the established settings to a string and shows them in command line. Return: str","title":"Dunder methods"},{"location":"python_api/#carlaworldsnapshot","text":"This snapshot comprises all the information for every actor on scene at a certain moment of time. It creates and gives acces to a data structure containing a series of carla.ActorSnapshot . The client recieves a new snapshot on every tick that cannot be stored.","title":"carla.WorldSnapshot"},{"location":"python_api/#instance-variables_77","text":"id ( int ) A value unique for every snapshot to differentiate them. frame ( int ) Simulation frame in which the snapshot was taken. timestamp ( carla.Timestamp - seconds ) Precise moment in time when snapshot was taken. This class works in seconds as given by the operative system.","title":"Instance Variables"},{"location":"python_api/#methods_61","text":"find ( self , actor_id ) Given a certain actor ID, returns its corresponding snapshot or None if it is not found. Parameters: actor_id ( int ) Return: carla.ActorSnapshot has_actor ( self , actor_id ) Given a certain actor ID, checks if there is a snapshot corresponding it and so, if the actor was present at that moment. Parameters: actor_id ( int ) Return: bool","title":"Methods"},{"location":"python_api/#dunder-methods_55","text":"__eq__ ( self , other = carla.WorldSnapshot ) Returns True if both timestamp are the same. Return: bool __iter__ ( self ) Iterate over the carla.ActorSnapshot stored in the snapshot. __len__ ( self ) Returns the amount of carla.ActorSnapshot present in this snapshot. Return: int __ne__ ( self , other = carla.WorldSnapshot ) Returns True if both timestamp are different. Return: bool","title":"Dunder methods"},{"location":"python_api/#commandapplyangularimpulse","text":"Command adaptation of add_angular_impulse() in carla.Actor . Applies an angular impulse to an actor.","title":"command.ApplyAngularImpulse"},{"location":"python_api/#instance-variables_78","text":"actor_id ( int ) Actor affected by the command. impulse ( carla.Vector3D - degrees*s ) Angular impulse applied to the actor.","title":"Instance Variables"},{"location":"python_api/#methods_62","text":"__init__ ( self , actor , impulse ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. impulse ( carla.Vector3D - degrees*s )","title":"Methods"},{"location":"python_api/#commandapplyforce","text":"Command adaptation of add_force() in carla.Actor . Applies a force to an actor.","title":"command.ApplyForce"},{"location":"python_api/#instance-variables_79","text":"actor_id ( int ) Actor affected by the command. force ( carla.Vector3D - N ) Force applied to the actor over time.","title":"Instance Variables"},{"location":"python_api/#methods_63","text":"__init__ ( self , actor , force ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. force ( carla.Vector3D - N )","title":"Methods"},{"location":"python_api/#commandapplyimpulse","text":"Command adaptation of add_impulse() in carla.Actor . Applies an impulse to an actor.","title":"command.ApplyImpulse"},{"location":"python_api/#instance-variables_80","text":"actor_id ( int ) Actor affected by the command. impulse ( carla.Vector3D - N*s ) Impulse applied to the actor.","title":"Instance Variables"},{"location":"python_api/#methods_64","text":"__init__ ( self , actor , impulse ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. impulse ( carla.Vector3D - N*s )","title":"Methods"},{"location":"python_api/#commandapplytargetangularvelocity","text":"Command adaptation of set_target_angular_velocity() in carla.Actor . Sets the actor's angular velocity vector.","title":"command.ApplyTargetAngularVelocity"},{"location":"python_api/#instance-variables_81","text":"actor_id ( int ) Actor affected by the command. angular_velocity ( carla.Vector3D - deg/s ) The 3D angular velocity that will be applied to the actor.","title":"Instance Variables"},{"location":"python_api/#methods_65","text":"__init__ ( self , actor , angular_velocity ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. angular_velocity ( carla.Vector3D - deg/s ) - Angular velocity vector applied to the actor.","title":"Methods"},{"location":"python_api/#commandapplytargetvelocity","text":"Command adaptation of set_target_velocity() in carla.Actor .","title":"command.ApplyTargetVelocity"},{"location":"python_api/#instance-variables_82","text":"actor_id ( int ) Actor affected by the command. velocity ( carla.Vector3D - m/s ) The 3D velocity applied to the actor.","title":"Instance Variables"},{"location":"python_api/#methods_66","text":"__init__ ( self , actor , velocity ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. velocity ( carla.Vector3D - m/s ) - Velocity vector applied to the actor.","title":"Methods"},{"location":"python_api/#commandapplytorque","text":"Command adaptation of add_torque() in carla.Actor . Applies a torque to an actor.","title":"command.ApplyTorque"},{"location":"python_api/#instance-variables_83","text":"actor_id ( int ) Actor affected by the command. torque ( carla.Vector3D - degrees ) Torque applied to the actor over time.","title":"Instance Variables"},{"location":"python_api/#methods_67","text":"__init__ ( self , actor , torque ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. torque ( carla.Vector3D - degrees )","title":"Methods"},{"location":"python_api/#commandapplytransform","text":"Command adaptation of set_transform() in carla.Actor . Sets a new transform to an actor.","title":"command.ApplyTransform"},{"location":"python_api/#instance-variables_84","text":"actor_id ( int ) Actor affected by the command. transform ( carla.Transform ) Transformation to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_68","text":"__init__ ( self , actor , transform ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. transform ( carla.Transform )","title":"Methods"},{"location":"python_api/#commandapplyvehicleackermanncontrol","text":"Command adaptation of apply_ackermann_control() in carla.Vehicle . Applies a certain akermann control to a vehicle.","title":"command.ApplyVehicleAckermannControl"},{"location":"python_api/#instance-variables_85","text":"actor_id ( int ) Vehicle actor affected by the command. control ( carla.AckermannVehicleControl ) Vehicle ackermann control to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_69","text":"__init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.AckermannVehicleControl )","title":"Methods"},{"location":"python_api/#commandapplyvehiclecontrol","text":"Command adaptation of apply_control() in carla.Vehicle . Applies a certain control to a vehicle.","title":"command.ApplyVehicleControl"},{"location":"python_api/#instance-variables_86","text":"actor_id ( int ) Vehicle actor affected by the command. control ( carla.VehicleControl ) Vehicle control to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_70","text":"__init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.VehicleControl )","title":"Methods"},{"location":"python_api/#commandapplyvehiclephysicscontrol","text":"Command adaptation of apply_physics_control() in carla.Vehicle . Applies a new physics control to a vehicle, modifying its physical parameters.","title":"command.ApplyVehiclePhysicsControl"},{"location":"python_api/#instance-variables_87","text":"actor_id ( int ) Vehicle actor affected by the command. physics_control ( carla.VehiclePhysicsControl ) Physics control to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_71","text":"__init__ ( self , actor , physics_control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. physics_control ( carla.VehiclePhysicsControl )","title":"Methods"},{"location":"python_api/#commandapplywalkercontrol","text":"Command adaptation of apply_control() in carla.Walker . Applies a control to a walker.","title":"command.ApplyWalkerControl"},{"location":"python_api/#instance-variables_88","text":"actor_id ( int ) Walker actor affected by the command. control ( carla.WalkerControl ) Walker control to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_72","text":"__init__ ( self , actor , control ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. control ( carla.WalkerControl )","title":"Methods"},{"location":"python_api/#commandapplywalkerstate","text":"Apply a state to the walker actor. Specially useful to initialize an actor them with a specific location, orientation and speed.","title":"command.ApplyWalkerState"},{"location":"python_api/#instance-variables_89","text":"actor_id ( int ) Walker actor affected by the command. transform ( carla.Transform ) Transform to be applied. speed ( float - m/s ) Speed to be applied.","title":"Instance Variables"},{"location":"python_api/#methods_73","text":"__init__ ( self , actor , transform , speed ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. transform ( carla.Transform ) speed ( float - m/s )","title":"Methods"},{"location":"python_api/#commanddestroyactor","text":"Command adaptation of destroy() in carla.Actor that tells the simulator to destroy this actor. It has no effect if the actor was already destroyed. When executed with apply_batch_sync() in carla.Client there will be a command.Response that will return a boolean stating whether the actor was successfully destroyed.","title":"command.DestroyActor"},{"location":"python_api/#instance-variables_90","text":"actor_id ( int ) Actor affected by the command.","title":"Instance Variables"},{"location":"python_api/#methods_74","text":"__init__ ( self , actor ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to.","title":"Methods"},{"location":"python_api/#commandresponse","text":"States the result of executing a command as either the ID of the actor to whom the command was applied to (when succeeded) or an error string (when failed). actor ID, depending on whether or not the command succeeded. The method apply_batch_sync() in carla.Client returns a list of these to summarize the execution of a batch.","title":"command.Response"},{"location":"python_api/#instance-variables_91","text":"actor_id ( int ) Actor to whom the command was applied to. States that the command was successful. error ( str ) A string stating the command has failed.","title":"Instance Variables"},{"location":"python_api/#methods_75","text":"has_error ( self ) Returns True if the command execution fails, and False if it was successful. Return: bool","title":"Methods"},{"location":"python_api/#commandsetautopilot","text":"Command adaptation of set_autopilot() in carla.Vehicle . Turns on/off the vehicle's autopilot mode.","title":"command.SetAutopilot"},{"location":"python_api/#instance-variables_92","text":"actor_id ( int ) Actor that is affected by the command. enabled ( bool ) If autopilot should be activated or not. port ( uint16 ) Port of the Traffic Manager where the vehicle is to be registered or unlisted.","title":"Instance Variables"},{"location":"python_api/#methods_76","text":"__init__ ( self , actor , enabled , port =8000 ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. enabled ( bool ) port ( uint16 ) - The Traffic Manager port where the vehicle is to be registered or unlisted. If None is passed, it will consider a TM at default port 8000 .","title":"Methods"},{"location":"python_api/#commandsetenablegravity","text":"Command adaptation of set_enable_gravity() in carla.Actor . Enables or disables gravity on an actor.","title":"command.SetEnableGravity"},{"location":"python_api/#instance-variables_93","text":"actor_id ( carla.Actor or int ) Actor that is affected by the command. enabled ( bool )","title":"Instance Variables"},{"location":"python_api/#methods_77","text":"__init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or Actor ID to which the command will be applied to. enabled ( bool )","title":"Methods"},{"location":"python_api/#commandsetsimulatephysics","text":"Command adaptation of set_simulate_physics() in carla.Actor . Determines whether an actor will be affected by physics or not.","title":"command.SetSimulatePhysics"},{"location":"python_api/#instance-variables_94","text":"actor_id ( int ) Actor affected by the command. enabled ( bool ) If physics should be activated or not.","title":"Instance Variables"},{"location":"python_api/#methods_78","text":"__init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. enabled ( bool )","title":"Methods"},{"location":"python_api/#commandsetvehiclelightstate","text":"Command adaptation of set_light_state() in carla.Vehicle . Sets the light state of a vehicle.","title":"command.SetVehicleLightState"},{"location":"python_api/#instance-variables_95","text":"actor_id ( int ) Actor that is affected by the command. light_state ( carla.VehicleLightState ) Defines the light state of a vehicle.","title":"Instance Variables"},{"location":"python_api/#methods_79","text":"__init__ ( self , actor , light_state ) Parameters: actor ( carla.Actor or int ) - Actor or its ID to whom the command will be applied to. light_state ( carla.VehicleLightState ) - Recaps the state of the lights of a vehicle, these can be used as a flags.","title":"Methods"},{"location":"python_api/#commandshowdebugtelemetry","text":"Command adaptation of show_debug_telemetry() in carla.Actor . Displays vehicle control telemetry data.","title":"command.ShowDebugTelemetry"},{"location":"python_api/#instance-variables_96","text":"actor_id ( carla.Actor or int ) Actor that is affected by the command. enabled ( bool )","title":"Instance Variables"},{"location":"python_api/#methods_80","text":"__init__ ( self , actor , enabled ) Parameters: actor ( carla.Actor or int ) - Actor or Actor ID to which the command will be applied to. enabled ( bool )","title":"Methods"},{"location":"python_api/#commandspawnactor","text":"Command adaptation of spawn_actor() in carla.World . Spawns an actor into the world based on the blueprint provided and the transform. If a parent is provided, the actor is attached to it.","title":"command.SpawnActor"},{"location":"python_api/#instance-variables_97","text":"transform ( carla.Transform ) Transform to be applied. parent_id ( int ) Identificator of the parent actor.","title":"Instance Variables"},{"location":"python_api/#methods_81","text":"__init__ ( self ) __init__ ( self , blueprint , transform ) Parameters: blueprint ( carla.ActorBlueprint ) transform ( carla.Transform ) __init__ ( self , blueprint , transform , parent ) Parameters: blueprint ( carla.ActorBlueprint ) transform ( carla.Transform ) parent ( carla.Actor or int ) then ( self , command ) Links another command to be executed right after. It allows to ease very common flows such as spawning a set of vehicles by command and then using this method to set them to autopilot automatically. Parameters: command ( any carla Command ) - a Carla command. function CopyToClipboard(containerid) { if (document.selection) { var range = document.body.createTextRange(); range.moveToElementText(document.getElementById(containerid)); range.select().createTextRange(); document.execCommand(\"copy\"); } else if (window.getSelection) { var range = document.createRange(); range.selectNode(document.getElementById(containerid)); window.getSelection().addRange(range); document.execCommand(\"copy\"); } } function CloseSnipet() { document.getElementById(\"snipets-container\").innerHTML = null; } Snippet for carla.World.enable_environment_objects # This recipe turn visibility off and on for two specifc buildings on the map # Get the buildings in the world world = client.get_world() env_objs = world.get_environment_objects(carla.CityObjectLabel.Buildings) # Access individual building IDs and save in a set building_01 = env_objs[0] building_02 = env_objs[1] objects_to_toggle = {building_01.id, building_02.id} # Toggle buildings off world.enable_environment_objects(objects_to_toggle, False) # Toggle buildings on world.enable_environment_objects(objects_to_toggle, True) Copy snippet Close snippet Snippet for carla.DebugHelper.draw_string # This recipe is a modification of lane_explorer.py example. # It draws the path of an actor through the world, printing information at each waypoint. # ... current_w = map.get_waypoint(vehicle.get_location()) while True: next_w = map.get_waypoint(vehicle.get_location(), lane_type=carla.LaneType.Driving | carla.LaneType.Shoulder | carla.LaneType.Sidewalk ) # Check if the vehicle is moving if next_w.id != current_w.id: vector = vehicle.get_velocity() # Check if the vehicle is on a sidewalk if current_w.lane_type == carla.LaneType.Sidewalk: draw_waypoint_union(debug, current_w, next_w, cyan if current_w.is_junction else red, 60) else: draw_waypoint_union(debug, current_w, next_w, cyan if current_w.is_junction else green, 60) debug.draw_string(current_w.transform.location, str('%15.0f km/h' % (3.6 * math.sqrt(vector.x**2 + vector.y**2 + vector.z**2))), False, orange, 60) draw_transform(debug, current_w.transform, white, 60) # Update the current waypoint and sleep for some time current_w = next_w time.sleep(args.tick_time) # ... Copy snippet Close snippet Snippet for carla.World.unload_map_layer # This recipe toggles off several layers in our \"_Opt\" maps # Load town one with minimum layout (roads, sidewalks, traffic lights and traffic signs) # as well as buildings and parked vehicles world = client.load_world('Town01_Opt', carla.MapLayer.Buildings | carla.MapLayer.ParkedVehicles) # Toggle all buildings off world.unload_map_layer(carla.MapLayer.Buildings) # Toggle all parked vehicles off world.unload_map_layer(carla.MapLayer.ParkedVehicles) Copy snippet Close snippet Snippet for carla.Vehicle.set_wheel_steer_direction # Sets the appearance of the vehicles front wheels to 40\u00b0. Vehicle physics will not be affected. vehicle.set_wheel_steer_direction(carla.VehicleWheelLocation.FR_Wheel, 40.0) vehicle.set_wheel_steer_direction(carla.VehicleWheelLocation.FL_Wheel, 40.0) Copy snippet Close snippet Snippet for carla.Client.__init__ # This recipe shows in every script provided in PythonAPI/Examples # and it is used to parse the client creation arguments when running the script. argparser = argparse.ArgumentParser( description=__doc__) argparser.add_argument( '--host', metavar='H', default='127.0.0.1', help='IP of the host server (default: 127.0.0.1)') argparser.add_argument( '-p', '--port', metavar='P', default=2000, type=int, help='TCP port to listen to (default: 2000)') argparser.add_argument( '-s', '--speed', metavar='FACTOR', default=1.0, type=float, help='rate at which the weather changes (default: 1.0)') args = argparser.parse_args() speed_factor = args.speed update_freq = 0.1 / speed_factor client = carla.Client(args.host, args.port) Copy snippet Close snippet Snippet for carla.Map.get_waypoint # This recipe shows the current traffic rules affecting the vehicle. # Shows the current lane type and if a lane change can be done in the actual lane or the surrounding ones. # ... waypoint = world.get_map().get_waypoint(vehicle.get_location(),project_to_road=True, lane_type=(carla.LaneType.Driving | carla.LaneType.Shoulder | carla.LaneType.Sidewalk)) print(\"Current lane type: \" + str(waypoint.lane_type)) # Check current lane change allowed print(\"Current Lane change: \" + str(waypoint.lane_change)) # Left and Right lane markings print(\"L lane marking type: \" + str(waypoint.left_lane_marking.type)) print(\"L lane marking change: \" + str(waypoint.left_lane_marking.lane_change)) print(\"R lane marking type: \" + str(waypoint.right_lane_marking.type)) print(\"R lane marking change: \" + str(waypoint.right_lane_marking.lane_change)) # ... Copy snippet Close snippet Snippet for carla.World.spawn_actor # This recipe attaches different camera / sensors to a vehicle with different attachments. # ... camera = world.spawn_actor(rgb_camera_bp, transform, attach_to=vehicle, attachment_type=Attachment.Rigid) # Default attachment: Attachment.Rigid gnss_sensor = world.spawn_actor(sensor_gnss_bp, transform, attach_to=vehicle) collision_sensor = world.spawn_actor(sensor_collision_bp, transform, attach_to=vehicle) lane_invasion_sensor = world.spawn_actor(sensor_lane_invasion_bp, transform, attach_to=vehicle) # ... Copy snippet Close snippet Snippet for carla.WalkerAIController.stop #To destroy the pedestrians, stop them from the navigation, and then destroy the objects (actor and controller). # stop pedestrians (list is [controller, actor, controller, actor ...]) for i in range(0, len(all_id), 2): all_actors[i].stop() # destroy pedestrian (actor and controller) client.apply_batch([carla.command.DestroyActor(x) for x in all_id]) Copy snippet Close snippet Snippet for carla.DebugHelper.draw_box # This recipe shows how to draw traffic light actor bounding boxes from a world snapshot. # .... debug = world.debug world_snapshot = world.get_snapshot() for actor_snapshot in world_snapshot: actual_actor = world.get_actor(actor_snapshot.id) if actual_actor.type_id == 'traffic.traffic_light': debug.draw_box(carla.BoundingBox(actor_snapshot.get_transform().location,carla.Vector3D(0.5,0.5,2)),actor_snapshot.get_transform().rotation, 0.05, carla.Color(255,0,0,0),0) # ... Copy snippet Close snippet Snippet for carla.World.get_spectator # This recipe spawns an actor and the spectator camera at the actor's location. # ... world = client.get_world() spectator = world.get_spectator() vehicle_bp = random.choice(world.get_blueprint_library().filter('vehicle.bmw.*')) transform = random.choice(world.get_map().get_spawn_points()) vehicle = world.try_spawn_actor(vehicle_bp, transform) # Wait for world to get the vehicle actor world.tick() world_snapshot = world.wait_for_tick() actor_snapshot = world_snapshot.find(vehicle.id) # Set spectator at given transform (vehicle transform) spectator.set_transform(actor_snapshot.get_transform()) # ... Copy snippet Close snippet Snippet for carla.Sensor.listen # This recipe applies a color conversion to the image taken by a camera sensor, # so it is converted to a semantic segmentation image. # ... camera_bp = world.get_blueprint_library().filter('sensor.camera.semantic_segmentation') # ... cc = carla.ColorConverter.CityScapesPalette camera.listen(lambda image: image.save_to_disk('output/%06d.png' % image.frame, cc)) # ... Copy snippet Close snippet Snippet for carla.TrafficLight.set_state # This recipe changes from red to green the traffic light that affects the vehicle. # This is done by detecting if the vehicle actor is at a traffic light. # ... world = client.get_world() spectator = world.get_spectator() vehicle_bp = random.choice(world.get_blueprint_library().filter('vehicle.bmw.*')) transform = random.choice(world.get_map().get_spawn_points()) vehicle = world.try_spawn_actor(vehicle_bp, transform) # Wait for world to get the vehicle actor world.tick() world_snapshot = world.wait_for_tick() actor_snapshot = world_snapshot.find(vehicle.id) # Set spectator at given transform (vehicle transform) spectator.set_transform(actor_snapshot.get_transform()) # ...# ... if vehicle_actor.is_at_traffic_light(): traffic_light = vehicle_actor.get_traffic_light() if traffic_light.get_state() == carla.TrafficLightState.Red: # world.hud.notification(\"Traffic light changed! Good to go!\") traffic_light.set_state(carla.TrafficLightState.Green) # ... Copy snippet Close snippet Snippet for carla.ActorBlueprint.set_attribute # This recipe changes attributes of different type of blueprint actors. # ... walker_bp = world.get_blueprint_library().filter('walker.pedestrian.0002') walker_bp.set_attribute('is_invincible', True) # ... # Changes attribute randomly by the recommended value vehicle_bp = wolrd.get_blueprint_library().filter('vehicle.bmw.*') color = random.choice(vehicle_bp.get_attribute('color').recommended_values) vehicle_bp.set_attribute('color', color) # ... camera_bp = world.get_blueprint_library().filter('sensor.camera.rgb') camera_bp.set_attribute('image_size_x', 600) camera_bp.set_attribute('image_size_y', 600) # ... Copy snippet Close snippet Snippet for carla.Client.apply_batch_sync # 0. Choose a blueprint fo the walkers world = client.get_world() blueprintsWalkers = world.get_blueprint_library().filter(\"walker.pedestrian.*\") walker_bp = random.choice(blueprintsWalkers) # 1. Take all the random locations to spawn spawn_points = [] for i in range(50): spawn_point = carla.Transform() spawn_point.location = world.get_random_location_from_navigation() if (spawn_point.location != None): spawn_points.append(spawn_point) # 2. Build the batch of commands to spawn the pedestrians batch = [] for spawn_point in spawn_points: walker_bp = random.choice(blueprintsWalkers) batch.append(carla.command.SpawnActor(walker_bp, spawn_point)) # 2.1 apply the batch results = client.apply_batch_sync(batch, True) for i in range(len(results)): if results[i].error: logging.error(results[i].error) else: walkers_list.append({\"id\": results[i].actor_id}) # 3. Spawn walker AI controllers for each walker batch = [] walker_controller_bp = world.get_blueprint_library().find('controller.ai.walker') for i in range(len(walkers_list)): batch.append(carla.command.SpawnActor(walker_controller_bp, carla.Transform(), walkers_list[i][\"id\"])) # 3.1 apply the batch results = client.apply_batch_sync(batch, True) for i in range(len(results)): if results[i].error: logging.error(results[i].error) else: walkers_list[i][\"con\"] = results[i].actor_id # 4. Put altogether the walker and controller ids for i in range(len(walkers_list)): all_id.append(walkers_list[i][\"con\"]) all_id.append(walkers_list[i][\"id\"]) all_actors = world.get_actors(all_id) # wait for a tick to ensure client receives the last transform of the walkers we have just created world.wait_for_tick() # 5. initialize each controller and set target to walk to (list is [controller, actor, controller, actor ...]) for i in range(0, len(all_actors), 2): # start walker all_actors[i].start() # set walk to random point all_actors[i].go_to_location(world.get_random_location_from_navigation()) # random max speed all_actors[i].set_max_speed(1 + random.random()) # max speed between 1 and 2 (default is 1.4 m/s) Copy snippet Close snippet Snippet for carla.World.load_map_layer # This recipe toggles on several layers in our \"_Opt\" maps # Load town one with only minimum layout (roads, sidewalks, traffic lights and traffic signs) world = client.load_world('Town01_Opt', carla.MapLayer.None) # Toggle all buildings on world.load_map_layer(carla.MapLayer.Buildings) # Toggle all foliage on world.load_map_layer(carla.MapLayer.Foliage) # Toggle all parked vehicles on world.load_map_layer(carla.MapLayer.ParkedVehicles) Copy snippet Close snippet function ButtonAction(container_name){ if(window_big){ snipet_name = container_name.replace('-snipet_button','-snipet'); document.getElementById(\"snipets-container\").innerHTML = document.getElementById(snipet_name).innerHTML; } else{ document.getElementById(\"snipets-container\").innerHTML = null;code_name = container_name.replace('-snipet_button','-code'); var range = document.createRange(); range.selectNode(document.getElementById(code_name)); alert(range); } } function WindowResize(){ if(window.innerWidth > 1200){ window_big = true; } else{ window_big = false; } } var window_big; if(window.innerWidth > 1200){ window_big = true; } else{ window_big = false; } buttons = document.getElementsByClassName('SnipetButton') for (let i = 0; i < buttons.length; i++) { buttons[i].addEventListener(\"click\",function(){ButtonAction(buttons[i].id);},true); } window.onresize = WindowResize;","title":"Methods"},{"location":"ref_cpp/","text":"C++ \u53c2\u8003 \u6211\u4eec\u4f7f\u7528 Doxygen \u751f\u6210 C++ \u4ee3\u7801\u7684\u6587\u6863\uff1a Libcarla/source Unreal/CarlaUE4/Source Unreal/CarlaUE4/Plugins \u751f\u6210\u7684\u6587\u6863\u53ef\u901a\u8fc7\u6b64\u94fe\u63a5\u83b7\u53d6\uff1a http://carla.org/Doxygen/html/index.html \u7b14\u8bb0 \u6587\u6863\u66f4\u65b0\u7531 GitHub \u81ea\u52a8\u5b8c\u6210\u3002 \u521b\u5efa doxygen \u6587\u6863 \u91cd\u8981 \u9700\u8981 Doxygen \u6765\u751f\u6210\u6587\u6863\uff0c\u9700\u8981 Graphviz \u4f5c\u4e3a\u56fe\u5f62\u7ed8\u5236\u5de5\u5177\u5305\u3002 1- \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 doxygen \u548c graphviz\uff1a # linux > sudo apt-get install doxygen graphviz 2- \u5b89\u88c5\u540e\uff0c\u8f6c\u5230 Doxyfile \u6587\u4ef6\u6240\u5728\u7684\u9879\u76ee\u6839\u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a > doxygen \u5b83\u5c06\u5f00\u59cb\u6784\u5efa\u6587\u6863\u7f51\u9875\u3002 \u751f\u6210\u7684\u7f51\u9875\u53ef\u4ee5\u5728 Doxygen/html/ \u4e2d\u627e\u5230 3- \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u3002\u73b0\u5728\u60a8\u5df2\u7ecf\u6709\u4e86\u672c\u5730 cpp \u6587\u6863\uff01","title":"C++ \u53c2\u8003"},{"location":"ref_cpp/#c","text":"\u6211\u4eec\u4f7f\u7528 Doxygen \u751f\u6210 C++ \u4ee3\u7801\u7684\u6587\u6863\uff1a Libcarla/source Unreal/CarlaUE4/Source Unreal/CarlaUE4/Plugins \u751f\u6210\u7684\u6587\u6863\u53ef\u901a\u8fc7\u6b64\u94fe\u63a5\u83b7\u53d6\uff1a http://carla.org/Doxygen/html/index.html \u7b14\u8bb0 \u6587\u6863\u66f4\u65b0\u7531 GitHub \u81ea\u52a8\u5b8c\u6210\u3002","title":"C++ \u53c2\u8003"},{"location":"ref_cpp/#doxygen","text":"\u91cd\u8981 \u9700\u8981 Doxygen \u6765\u751f\u6210\u6587\u6863\uff0c\u9700\u8981 Graphviz \u4f5c\u4e3a\u56fe\u5f62\u7ed8\u5236\u5de5\u5177\u5305\u3002 1- \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 doxygen \u548c graphviz\uff1a # linux > sudo apt-get install doxygen graphviz 2- \u5b89\u88c5\u540e\uff0c\u8f6c\u5230 Doxyfile \u6587\u4ef6\u6240\u5728\u7684\u9879\u76ee\u6839\u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a > doxygen \u5b83\u5c06\u5f00\u59cb\u6784\u5efa\u6587\u6863\u7f51\u9875\u3002 \u751f\u6210\u7684\u7f51\u9875\u53ef\u4ee5\u5728 Doxygen/html/ \u4e2d\u627e\u5230 3- \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u3002\u73b0\u5728\u60a8\u5df2\u7ecf\u6709\u4e86\u672c\u5730 cpp \u6587\u6863\uff01","title":"\u521b\u5efa doxygen \u6587\u6863"},{"location":"ref_recorder_binary_file_format/","text":"\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f \u8bb0\u5f55\u5668\u7cfb\u7edf\u5c06\u91cd\u653e\u4eff\u771f\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u4fdd\u5b58\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5bf9\u591a\u5b57\u8282\u503c\u4f7f\u7528\u5c0f\u7aef\u5b57\u8282\u987a\u5e8f\u3002 1- \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 2- \u4fe1\u606f\u5934 3- \u6570\u636e\u5305 \u6570\u636e\u5305 0 - \u5e27\u5f00\u59cb \u6570\u636e\u5305 1 - \u5e27\u7ed3\u675f \u6570\u636e\u5305 2 - \u4e8b\u4ef6\u6dfb\u52a0 \u6570\u636e\u5305 3 - \u4e8b\u4ef6\u5220\u9664 \u6570\u636e\u5305 4 - \u4e8b\u4ef6\u7236\u7ea7 \u6570\u636e\u5305 5 - \u4e8b\u4ef6\u78b0\u649e \u6570\u636e\u5305 6 - \u4f4d\u7f6e \u6570\u636e\u5305 7 - \u4ea4\u901a\u706f \u6570\u636e\u5305 8 - \u8f66\u8f86\u52a8\u753b \u6570\u636e\u5305 9 - \u884c\u4eba\u52a8\u753b 4- \u5e27\u5e03\u5c40 5- \u6587\u4ef6\u5e03\u5c40 \u5728\u4e0b\u4e00\u5f20\u4ee3\u8868\u6587\u4ef6\u683c\u5f0f\u7684\u56fe\u50cf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002\u56fe\u50cf\u4e2d\u53ef\u89c6\u5316\u7684\u6bcf\u4e2a\u90e8\u5206\u5c06\u5728\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8fdb\u884c\u89e3\u91ca\uff1a \u603b\u4e4b\uff0c\u8be5\u6587\u4ef6\u683c\u5f0f\u6709\u4e00\u4e2a\u5c0f\u5934\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u822c\u4fe1\u606f\uff08\u7248\u672c\u3001\u9b54\u672f\u5b57\u7b26\u4e32\u3001\u65e5\u671f\u548c\u4f7f\u7528\u7684\u5730\u56fe\uff09\u548c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u5305\u96c6\u5408\uff08\u76ee\u524d\u6211\u4eec\u4f7f\u7528 10 \u79cd\u7c7b\u578b\uff0c\u4f46\u5c06\u6765\u4f1a\u7ee7\u7eed\u589e\u957f\uff09 \u3002 1- \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u9996\u5148\u4f7f\u7528\u5176\u957f\u5ea6\u8fdb\u884c\u7f16\u7801\uff0c\u7136\u540e\u662f\u5176\u5b57\u7b26\uff08\u4e0d\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\uff09\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u201cTown06\u201d\u5c06\u4fdd\u5b58\u4e3a\u5341\u516d\u8fdb\u5236\u503c\uff1a06 00 54 6f 77 6e 30 36 2- \u4fe1\u606f\u5934 \u4fe1\u606f\u6807\u5934\u5305\u542b\u6709\u5173\u5f55\u5236\u6587\u4ef6\u7684\u4e00\u822c\u4fe1\u606f\u3002\u57fa\u672c\u4e0a\uff0c\u5b83\u5305\u542b\u7248\u672c\u548c\u4e00\u4e2a\u9b54\u672f\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5c06\u8be5\u6587\u4ef6\u6807\u8bc6\u4e3a\u8bb0\u5f55\u5668\u6587\u4ef6\u3002\u5982\u679c\u6807\u9898\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u7248\u672c\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5305\u542b\u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u6233\uff0c\u4ee5\u53ca\u4ece 1900 \u5e74\u5f00\u59cb\u7684\u79d2\u6570\uff0c\u5e76\u4e14\u8fd8\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u7528\u4e8e\u8bb0\u5f55\u7684\u5730\u56fe\u540d\u79f0\u3002 \u793a\u4f8b\u4fe1\u606f\u5934\u662f\uff1a 3- \u6570\u636e\u5305 \u6bcf\u4e2a\u6570\u636e\u5305\u4ee5\u4e24\u4e2a\u5b57\u6bb5\uff085 \u4e2a\u5b57\u8282\uff09\u7684\u5c0f\u6807\u5934\u5f00\u5934\uff1a id : \u6570\u636e\u5305\u7c7b\u578b size : \u6570\u636e\u5305\u6570\u636e\u7684\u5927\u5c0f \u5934\u4fe1\u606f\u540e\u9762\u8ddf\u7740 \u6570\u636e \u3002\u6570\u636e\u662f\u53ef\u9009\u7684\uff0c \u5927\u5c0f \u4e3a 0 \u8868\u793a\u6570\u636e\u5305\u4e2d\u6ca1\u6709 \u6570\u636e \u3002\u5982\u679c \u5927\u5c0f \u5927\u4e8e 0\uff0c\u5219\u8868\u793a\u6570\u636e\u5305\u6709 \u6570\u636e \u5b57\u8282\u3002\u56e0\u6b64\uff0c\u9700\u8981\u6839\u636e\u6570\u636e\u5305\u7684\u7c7b\u578b\u91cd\u65b0\u89e3\u91ca \u6570\u636e \u3002 \u6570\u636e\u5305\u7684\u5934\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u64ad\u653e\u65f6\u5ffd\u7565\u90a3\u4e9b\u6211\u4eec\u4e0d\u611f\u5174\u8da3\u7684\u6570\u636e\u5305\u3002\u6211\u4eec\u53ea\u9700\u8981\u8bfb\u53d6\u6570\u636e\u5305\u7684\u5934\uff08\u524d 5 \u4e2a\u5b57\u8282\uff09\u5e76\u8df3\u8fc7\u6570\u636e\u5305\u7684\u6570\u636e\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\uff1a \u6570\u636e\u5305\u7684\u7c7b\u578b\u6709\uff1a \u6211\u4eec\u5efa\u8bae\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u5305\u4f7f\u7528\u8d85\u8fc7 100 \u7684 id \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5217\u8868\u5c06\u6765\u4f1a\u4e0d\u65ad\u589e\u957f\u3002 \u6570\u636e\u5305 0 - \u5e27\u5f00\u59cb \u8be5\u6570\u636e\u5305\u6807\u8bb0\u65b0\u5e27\u7684\u5f00\u59cb\uff0c\u5e76\u4e14\u5b83\u5c06\u662f\u5f00\u59cb\u6bcf\u4e2a\u5e27\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u5305\u3002\u6240\u6709\u6570\u636e\u5305\u90fd\u9700\u8981\u653e\u7f6e\u5728 Frame Start \u548c Frame End \u4e4b\u95f4\u3002 \u56e0\u6b64\uff0c\u7ecf\u8fc7\u65f6\u95f4 + \u6301\u7eed\u65f6\u95f4 = \u4e0b\u4e00\u5e27\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002 \u6570\u636e\u5305 1 - \u5e27\u7ed3\u675f \u8be5\u5e27\u6ca1\u6709\u6570\u636e\uff0c\u4ec5\u6807\u8bb0\u5f53\u524d\u5e27\u7684\u7ed3\u675f\u3002\u8fd9\u6709\u52a9\u4e8e\u91cd\u653e\u5668\u5728\u65b0\u4e00\u5e27\u5f00\u59cb\u4e4b\u524d\u77e5\u9053\u6bcf\u4e00\u5e27\u7684\u7ed3\u675f\u3002\u901a\u5e38\uff0c\u4e0b\u4e00\u5e27\u5e94\u8be5\u662f\u5e27\u8d77\u59cb\u6570\u636e\u5305\u4ee5\u5f00\u59cb\u65b0\u5e27\u3002 \u6570\u636e\u5305 2 - \u4e8b\u4ef6\u6dfb\u52a0 \u8fd9\u4e2a\u6570\u636e\u5305\u8bf4\u660e\u4e86\u6211\u4eec\u9700\u8981\u5728\u5f53\u524d\u5e27\u521b\u5efa\u591a\u5c11\u4e2a\u53c2\u4e0e\u8005\u3002 \u5b57\u6bb5 \u603b\u8ba1 \u8868\u793a\u540e\u9762\u6709\u591a\u5c11\u6761\u8bb0\u5f55\u3002\u6bcf\u6761\u8bb0\u5f55\u90fd\u4ee5 id \u5b57\u6bb5\u5f00\u5934\uff0c\u5373\u53c2\u4e0e\u8005\u5728\u5f55\u5236\u65f6\u6240\u62e5\u6709\u7684 id\uff08\u5728\u64ad\u653e\u65f6\uff0c\u8be5 id \u53ef\u4ee5\u5728\u5185\u90e8\u66f4\u6539\uff0c\u4f46\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6b64 id \uff09\u3002\u53c2\u4e0e\u8005\u7684 \u7c7b\u578b \u53ef\u4ee5\u6709\u4ee5\u4e0b\u53ef\u80fd\u7684\u503c\uff1a 0 = \u5176\u4ed6 1 = \u8f66\u8f86 2 = \u884c\u4eba 3 = \u4ea4\u901a\u706f 4 = \u65e0\u6548 \u4e4b\u540e\uff0c\u7ee7\u7eed\u6211\u4eec\u60f3\u8981\u521b\u5efa\u53c2\u4e0e\u8005\u7684 \u4f4d\u7f6e \u548c \u65cb\u8f6c \u3002 \u5728\u6211\u4eec\u5f97\u5230\u53c2\u4e0e\u8005\u7684\u63cf\u8ff0\u4e4b\u540e\u3002\u63cf\u8ff0 uid \u662f\u63cf\u8ff0\u7684\u6570\u5b57 ID\uff0c\u800c id \u662f\u6587\u672c ID\uff0c\u4f8b\u5982\"vehicle.seat.leon\"\u3002 \u7136\u540e\u662f\u5176 \u5c5e\u6027 \u7684\u96c6\u5408\uff0c\u4f8b\u5982\u989c\u8272\u3001\u8f6e\u5b50\u6570\u91cf\u3001\u89d2\u8272\u7b49\u3002\u5c5e\u6027\u7684\u6570\u91cf\u662f\u53ef\u53d8\u7684\uff0c\u5e94\u8be5\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a number_of_wheels = 4 sticky_control = true color = 79,33,85 role_name = autopilot \u6570\u636e\u5305 3 - \u4e8b\u4ef6\u5220\u9664 \u8fd9\u4e2a\u6570\u636e\u5305\u8bf4\u660e\u4e86\u8fd9\u4e00\u5e27\u9700\u8981\u9500\u6bc1\u591a\u5c11\u4e2a\u53c2\u4e0e\u8005\u3002 \u5b83\u6709\u8bb0\u5f55 \u603b\u6570 \uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u6709\u8981\u5220\u9664\u7684\u53c2\u4e0e\u8005\u7684ID \u3002 \u4f8b\u5982\uff0c\u8fd9\u4e2a\u6570\u636e\u5305\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a \u6570\u5b57 3 \u5c06\u6570\u636e\u5305\u6807\u8bc6\u4e3a\u4e8b\u4ef6\u5220\u9664\u3002\u6570\u5b57 16 \u662f\u6570\u636e\u5305\u6570\u636e\u7684\u5927\u5c0f\uff084 \u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5 4 \u5b57\u8282\uff09\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u5904\u7406\u8fd9\u4e2a\u6570\u636e\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u63a5\u4e0b\u6765\u7684 16 \u4e2a\u5b57\u8282\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u7684\u5f00\u5934\u3002\u63a5\u4e0b\u6765\u7684 3 \u8868\u793a\u540e\u9762\u7684\u603b\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u662f\u8981\u5220\u9664\u7684\u53c2\u4e0e\u8005\u7684 id\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e00\u5e27\u4e2d\u5220\u9664\u53c2\u4e0e\u8005 100\u3001101 \u548c 120\u3002 \u6570\u636e\u5305 4 - \u4e8b\u4ef6\u7236\u7ea7 \u8be5\u6570\u636e\u5305\u8bf4\u660e\u54ea\u4e2a\u53c2\u4e0e\u8005\u662f\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\uff08\u7236\u6bcd\uff09\u7684\u5b69\u5b50\u3002 \u7b2c\u4e00\u4e2a id \u662f\u5b50\u53c2\u4e0e\u8005\uff0c\u7b2c\u4e8c\u4e2a id \u662f\u7236\u53c2\u4e0e\u8005\u3002 \u6570\u636e\u5305 5 - \u4e8b\u4ef6\u78b0\u649e \u5982\u679c\u4e24\u4e2a\u53c2\u4e0e\u8005\u4e4b\u95f4\u53d1\u751f\u78b0\u649e\uff0c\u5b83\u5c06\u88ab\u6ce8\u518c\u5230\u8fd9\u4e2a\u6570\u636e\u5305\u4e2d\u3002\u76ee\u524d\uff0c\u53ea\u6709\u5177\u6709\u78b0\u649e\u4f20\u611f\u5668\u7684\u53c2\u4e0e\u8005\u624d\u4f1a\u62a5\u544a\u78b0\u649e\uff0c\u56e0\u6b64\u76ee\u524d\u53ea\u6709\u82f1\u96c4\u8f66\u8f86\u4f1a\u81ea\u52a8\u8fde\u63a5\u8be5\u4f20\u611f\u5668\u3002 id \u53ea\u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u5185\u90e8\u6807\u8bc6\u6bcf\u6b21\u78b0\u649e\u7684\u5e8f\u5217\u3002\u540c\u4e00\u5e27\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u540c\u4e00\u5bf9\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u591a\u6b21\u78b0\u649e\uff0c\u56e0\u4e3a\u7269\u7406\u5e27\u901f\u7387\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u540c\u4e00\u6e32\u67d3\u5e27\u4e2d\u901a\u5e38\u5b58\u5728\u591a\u4e2a\u7269\u7406\u5b50\u6b65\u9aa4\u3002 \u6570\u636e\u5305 6 - \u4f4d\u7f6e \u8be5\u6570\u636e\u5305\u8bb0\u5f55\u573a\u666f\u4e2d\u5b58\u5728\u7684 \u8f66\u8f86 \u548c \u884c\u4eba \u7c7b\u578b\u7684\u6240\u6709\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002 \u6570\u636e\u5305 7 - \u4ea4\u901a\u706f \u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u573a\u666f\u4e2d\u6240\u6709 \u4ea4\u901a\u706f \u7684\u72b6\u6001\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5b58\u50a8\u72b6\u6001\uff08\u7ea2\u8272\u3001\u6a59\u8272\u6216\u7eff\u8272\uff09\u4ee5\u53ca\u7b49\u5f85\u66f4\u6539\u4e3a\u65b0\u72b6\u6001\u7684\u65f6\u95f4\u3002 \u6570\u636e\u5305 8 - \u8f66\u8f86\u52a8\u753b \u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u8f66\u8f86\u3001\u81ea\u884c\u8f66\u548c\u5c71\u5730\u81ea\u884c\u8f66\u7684\u52a8\u753b\u3002\u8be5\u6570\u636e\u5305\u5b58\u50a8\u4e86 \u6cb9\u95e8 \u3001 \u65b9\u5411\u76d8 \u3001 \u5220\u8f66 \u3001 \u624b\u5239 \u548c \u6392\u6321 \u8f93\u5165\uff0c\u7136\u540e\u5728\u64ad\u653e\u65f6\u8bbe\u7f6e\u5b83\u4eec\u3002 \u6570\u636e\u5305 9 - \u884c\u4eba\u52a8\u753b \u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u884c\u4eba\u7684\u52a8\u753b\u3002\u5b83\u53ea\u662f\u4fdd\u5b58\u52a8\u753b\u4e2d\u4f7f\u7528\u7684\u884c\u4eba\u7684 \u901f\u5ea6 \u3002 4- \u5e27\u5e03\u5c40 \u4e00\u4e2a\u5e27\u7531\u591a\u4e2a\u6570\u636e\u5305\u7ec4\u6210\uff0c\u5176\u4e2d\u6240\u6709\u6570\u636e\u5305\u90fd\u662f\u53ef\u9009\u7684\uff0c\u9664\u4e86\u90a3\u4e9b\u5728\u8be5\u5e27\u4e2d\u5177\u6709 \u5f00\u59cb \u548c \u7ed3\u675f \u7684\u6570\u636e\u5305\u4e4b\u5916\uff0c\u5b83\u4eec\u5fc5\u987b\u59cb\u7ec8\u5b58\u5728\u3002 \u4e8b\u4ef6 \u6570\u636e\u5305\u4ec5\u5b58\u5728\u4e8e\u5b83\u4eec\u53d1\u751f\u7684\u5e27\u4e2d\u3002 \u4f4d\u7f6e \u548c \u4ea4\u901a\u706f \u6570\u636e\u5305\u5e94\u8be5\u5b58\u5728\u4e8e\u6240\u6709\u5e27\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u79fb\u52a8\u6240\u6709\u53c2\u4e0e\u8005\u5e76\u5c06\u4ea4\u901a\u706f\u8bbe\u7f6e\u4e3a\u5176\u72b6\u6001\u3002\u5b83\u4eec\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5982\u679c\u5b83\u4eec\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u91cd\u653e\u5668\u5c06\u65e0\u6cd5\u79fb\u52a8\u6216\u8bbe\u7f6e\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002 \u52a8\u753b \u5305\u4e5f\u662f\u53ef\u9009\u7684\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u4f1a\u88ab\u8bb0\u5f55\u3002\u8fd9\u6837\u884c\u4eba\u5c31\u4f1a\u88ab\u52a8\u753b\u5316\uff0c\u5e76\u4e14\u8f66\u8f6e\u4e5f\u4f1a\u8ddf\u968f\u8f66\u8f86\u7684\u65b9\u5411\u3002 5- \u6587\u4ef6\u5e03\u5c40 \u6587\u4ef6\u7684\u5e03\u5c40\u4ee5 \u4fe1\u606f\u5934 \u5f00\u59cb\uff0c\u7136\u540e\u662f\u5206\u7ec4\u7684\u6570\u636e\u5305\u96c6\u5408\u3002\u6bcf\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u662f \u5e27\u5f00\u59cb \u6570\u636e\u5305\uff0c\u6700\u540e\u4e00\u4e2a\u662f \u5e27\u7ed3\u675f \u6570\u636e\u5305\u3002\u5728\u8fd9\u4e24\u8005\u4e4b\u95f4\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u627e\u5230\u5176\u4f59\u7684\u6570\u636e\u5305\u3002 \u901a\u5e38\uff0c\u6700\u597d\u9996\u5148\u62e5\u6709\u6709\u5173\u4e8b\u4ef6\u7684\u6240\u6709\u6570\u636e\u5305\uff0c\u7136\u540e\u518d\u62e5\u6709\u6709\u5173\u4f4d\u7f6e\u548c\u72b6\u6001\u7684\u6570\u636e\u5305\u3002 \u4e8b\u4ef6\u5305\u662f\u53ef\u9009\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u53d1\u751f\u65f6\u51fa\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6709\u8fd9\u6837\u7684\u5e03\u5c40\uff1a \u5728 \u7b2c 1 \u5e27 \u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e9b\u53c2\u4e0e\u8005\u5e76\u91cd\u65b0\u8bbe\u7f6e\u4e86\u7236\u7ea7\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u89c2\u5bdf\u5176\u4e8b\u4ef6\u3002\u5728 \u7b2c 2 \u5e27 \u4e2d\u6ca1\u6709\u4e8b\u4ef6\u3002\u5728 \u7b2c 3 \u5e27 \u4e2d\uff0c\u4e00\u4e9b\u53c2\u4e0e\u8005\u53d1\u751f\u4e86\u78b0\u649e\uff0c\u56e0\u6b64\u78b0\u649e\u4e8b\u4ef6\u4f1a\u968f\u8be5\u4fe1\u606f\u4e00\u8d77\u51fa\u73b0\u3002\u5728 \u7b2c 4 \u5e27 \u4e2d\uff0c\u53c2\u4e0e\u8005\u88ab\u6467\u6bc1\u3002","title":"\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f"},{"location":"ref_recorder_binary_file_format/#_1","text":"\u8bb0\u5f55\u5668\u7cfb\u7edf\u5c06\u91cd\u653e\u4eff\u771f\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u4fdd\u5b58\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5bf9\u591a\u5b57\u8282\u503c\u4f7f\u7528\u5c0f\u7aef\u5b57\u8282\u987a\u5e8f\u3002 1- \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 2- \u4fe1\u606f\u5934 3- \u6570\u636e\u5305 \u6570\u636e\u5305 0 - \u5e27\u5f00\u59cb \u6570\u636e\u5305 1 - \u5e27\u7ed3\u675f \u6570\u636e\u5305 2 - \u4e8b\u4ef6\u6dfb\u52a0 \u6570\u636e\u5305 3 - \u4e8b\u4ef6\u5220\u9664 \u6570\u636e\u5305 4 - \u4e8b\u4ef6\u7236\u7ea7 \u6570\u636e\u5305 5 - \u4e8b\u4ef6\u78b0\u649e \u6570\u636e\u5305 6 - \u4f4d\u7f6e \u6570\u636e\u5305 7 - \u4ea4\u901a\u706f \u6570\u636e\u5305 8 - \u8f66\u8f86\u52a8\u753b \u6570\u636e\u5305 9 - \u884c\u4eba\u52a8\u753b 4- \u5e27\u5e03\u5c40 5- \u6587\u4ef6\u5e03\u5c40 \u5728\u4e0b\u4e00\u5f20\u4ee3\u8868\u6587\u4ef6\u683c\u5f0f\u7684\u56fe\u50cf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6240\u6709\u8be6\u7ec6\u4fe1\u606f\u3002\u56fe\u50cf\u4e2d\u53ef\u89c6\u5316\u7684\u6bcf\u4e2a\u90e8\u5206\u5c06\u5728\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8fdb\u884c\u89e3\u91ca\uff1a \u603b\u4e4b\uff0c\u8be5\u6587\u4ef6\u683c\u5f0f\u6709\u4e00\u4e2a\u5c0f\u5934\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u822c\u4fe1\u606f\uff08\u7248\u672c\u3001\u9b54\u672f\u5b57\u7b26\u4e32\u3001\u65e5\u671f\u548c\u4f7f\u7528\u7684\u5730\u56fe\uff09\u548c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u5305\u96c6\u5408\uff08\u76ee\u524d\u6211\u4eec\u4f7f\u7528 10 \u79cd\u7c7b\u578b\uff0c\u4f46\u5c06\u6765\u4f1a\u7ee7\u7eed\u589e\u957f\uff09 \u3002","title":"\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f"},{"location":"ref_recorder_binary_file_format/#1-","text":"\u5b57\u7b26\u4e32\u9996\u5148\u4f7f\u7528\u5176\u957f\u5ea6\u8fdb\u884c\u7f16\u7801\uff0c\u7136\u540e\u662f\u5176\u5b57\u7b26\uff08\u4e0d\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\uff09\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u201cTown06\u201d\u5c06\u4fdd\u5b58\u4e3a\u5341\u516d\u8fdb\u5236\u503c\uff1a06 00 54 6f 77 6e 30 36","title":"1- \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32"},{"location":"ref_recorder_binary_file_format/#2-","text":"\u4fe1\u606f\u6807\u5934\u5305\u542b\u6709\u5173\u5f55\u5236\u6587\u4ef6\u7684\u4e00\u822c\u4fe1\u606f\u3002\u57fa\u672c\u4e0a\uff0c\u5b83\u5305\u542b\u7248\u672c\u548c\u4e00\u4e2a\u9b54\u672f\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5c06\u8be5\u6587\u4ef6\u6807\u8bc6\u4e3a\u8bb0\u5f55\u5668\u6587\u4ef6\u3002\u5982\u679c\u6807\u9898\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u7248\u672c\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5305\u542b\u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u6233\uff0c\u4ee5\u53ca\u4ece 1900 \u5e74\u5f00\u59cb\u7684\u79d2\u6570\uff0c\u5e76\u4e14\u8fd8\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u7528\u4e8e\u8bb0\u5f55\u7684\u5730\u56fe\u540d\u79f0\u3002 \u793a\u4f8b\u4fe1\u606f\u5934\u662f\uff1a","title":"2- \u4fe1\u606f\u5934"},{"location":"ref_recorder_binary_file_format/#3-","text":"\u6bcf\u4e2a\u6570\u636e\u5305\u4ee5\u4e24\u4e2a\u5b57\u6bb5\uff085 \u4e2a\u5b57\u8282\uff09\u7684\u5c0f\u6807\u5934\u5f00\u5934\uff1a id : \u6570\u636e\u5305\u7c7b\u578b size : \u6570\u636e\u5305\u6570\u636e\u7684\u5927\u5c0f \u5934\u4fe1\u606f\u540e\u9762\u8ddf\u7740 \u6570\u636e \u3002\u6570\u636e\u662f\u53ef\u9009\u7684\uff0c \u5927\u5c0f \u4e3a 0 \u8868\u793a\u6570\u636e\u5305\u4e2d\u6ca1\u6709 \u6570\u636e \u3002\u5982\u679c \u5927\u5c0f \u5927\u4e8e 0\uff0c\u5219\u8868\u793a\u6570\u636e\u5305\u6709 \u6570\u636e \u5b57\u8282\u3002\u56e0\u6b64\uff0c\u9700\u8981\u6839\u636e\u6570\u636e\u5305\u7684\u7c7b\u578b\u91cd\u65b0\u89e3\u91ca \u6570\u636e \u3002 \u6570\u636e\u5305\u7684\u5934\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u64ad\u653e\u65f6\u5ffd\u7565\u90a3\u4e9b\u6211\u4eec\u4e0d\u611f\u5174\u8da3\u7684\u6570\u636e\u5305\u3002\u6211\u4eec\u53ea\u9700\u8981\u8bfb\u53d6\u6570\u636e\u5305\u7684\u5934\uff08\u524d 5 \u4e2a\u5b57\u8282\uff09\u5e76\u8df3\u8fc7\u6570\u636e\u5305\u7684\u6570\u636e\u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\uff1a \u6570\u636e\u5305\u7684\u7c7b\u578b\u6709\uff1a \u6211\u4eec\u5efa\u8bae\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u5305\u4f7f\u7528\u8d85\u8fc7 100 \u7684 id \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5217\u8868\u5c06\u6765\u4f1a\u4e0d\u65ad\u589e\u957f\u3002","title":"3- \u6570\u636e\u5305"},{"location":"ref_recorder_binary_file_format/#0-","text":"\u8be5\u6570\u636e\u5305\u6807\u8bb0\u65b0\u5e27\u7684\u5f00\u59cb\uff0c\u5e76\u4e14\u5b83\u5c06\u662f\u5f00\u59cb\u6bcf\u4e2a\u5e27\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u5305\u3002\u6240\u6709\u6570\u636e\u5305\u90fd\u9700\u8981\u653e\u7f6e\u5728 Frame Start \u548c Frame End \u4e4b\u95f4\u3002 \u56e0\u6b64\uff0c\u7ecf\u8fc7\u65f6\u95f4 + \u6301\u7eed\u65f6\u95f4 = \u4e0b\u4e00\u5e27\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002","title":"\u6570\u636e\u5305 0 - \u5e27\u5f00\u59cb"},{"location":"ref_recorder_binary_file_format/#1-_1","text":"\u8be5\u5e27\u6ca1\u6709\u6570\u636e\uff0c\u4ec5\u6807\u8bb0\u5f53\u524d\u5e27\u7684\u7ed3\u675f\u3002\u8fd9\u6709\u52a9\u4e8e\u91cd\u653e\u5668\u5728\u65b0\u4e00\u5e27\u5f00\u59cb\u4e4b\u524d\u77e5\u9053\u6bcf\u4e00\u5e27\u7684\u7ed3\u675f\u3002\u901a\u5e38\uff0c\u4e0b\u4e00\u5e27\u5e94\u8be5\u662f\u5e27\u8d77\u59cb\u6570\u636e\u5305\u4ee5\u5f00\u59cb\u65b0\u5e27\u3002","title":"\u6570\u636e\u5305 1 - \u5e27\u7ed3\u675f"},{"location":"ref_recorder_binary_file_format/#2-_1","text":"\u8fd9\u4e2a\u6570\u636e\u5305\u8bf4\u660e\u4e86\u6211\u4eec\u9700\u8981\u5728\u5f53\u524d\u5e27\u521b\u5efa\u591a\u5c11\u4e2a\u53c2\u4e0e\u8005\u3002 \u5b57\u6bb5 \u603b\u8ba1 \u8868\u793a\u540e\u9762\u6709\u591a\u5c11\u6761\u8bb0\u5f55\u3002\u6bcf\u6761\u8bb0\u5f55\u90fd\u4ee5 id \u5b57\u6bb5\u5f00\u5934\uff0c\u5373\u53c2\u4e0e\u8005\u5728\u5f55\u5236\u65f6\u6240\u62e5\u6709\u7684 id\uff08\u5728\u64ad\u653e\u65f6\uff0c\u8be5 id \u53ef\u4ee5\u5728\u5185\u90e8\u66f4\u6539\uff0c\u4f46\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6b64 id \uff09\u3002\u53c2\u4e0e\u8005\u7684 \u7c7b\u578b \u53ef\u4ee5\u6709\u4ee5\u4e0b\u53ef\u80fd\u7684\u503c\uff1a 0 = \u5176\u4ed6 1 = \u8f66\u8f86 2 = \u884c\u4eba 3 = \u4ea4\u901a\u706f 4 = \u65e0\u6548 \u4e4b\u540e\uff0c\u7ee7\u7eed\u6211\u4eec\u60f3\u8981\u521b\u5efa\u53c2\u4e0e\u8005\u7684 \u4f4d\u7f6e \u548c \u65cb\u8f6c \u3002 \u5728\u6211\u4eec\u5f97\u5230\u53c2\u4e0e\u8005\u7684\u63cf\u8ff0\u4e4b\u540e\u3002\u63cf\u8ff0 uid \u662f\u63cf\u8ff0\u7684\u6570\u5b57 ID\uff0c\u800c id \u662f\u6587\u672c ID\uff0c\u4f8b\u5982\"vehicle.seat.leon\"\u3002 \u7136\u540e\u662f\u5176 \u5c5e\u6027 \u7684\u96c6\u5408\uff0c\u4f8b\u5982\u989c\u8272\u3001\u8f6e\u5b50\u6570\u91cf\u3001\u89d2\u8272\u7b49\u3002\u5c5e\u6027\u7684\u6570\u91cf\u662f\u53ef\u53d8\u7684\uff0c\u5e94\u8be5\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a number_of_wheels = 4 sticky_control = true color = 79,33,85 role_name = autopilot","title":"\u6570\u636e\u5305 2 - \u4e8b\u4ef6\u6dfb\u52a0"},{"location":"ref_recorder_binary_file_format/#3-_1","text":"\u8fd9\u4e2a\u6570\u636e\u5305\u8bf4\u660e\u4e86\u8fd9\u4e00\u5e27\u9700\u8981\u9500\u6bc1\u591a\u5c11\u4e2a\u53c2\u4e0e\u8005\u3002 \u5b83\u6709\u8bb0\u5f55 \u603b\u6570 \uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u6709\u8981\u5220\u9664\u7684\u53c2\u4e0e\u8005\u7684ID \u3002 \u4f8b\u5982\uff0c\u8fd9\u4e2a\u6570\u636e\u5305\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a \u6570\u5b57 3 \u5c06\u6570\u636e\u5305\u6807\u8bc6\u4e3a\u4e8b\u4ef6\u5220\u9664\u3002\u6570\u5b57 16 \u662f\u6570\u636e\u5305\u6570\u636e\u7684\u5927\u5c0f\uff084 \u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5 4 \u5b57\u8282\uff09\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u5904\u7406\u8fd9\u4e2a\u6570\u636e\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u63a5\u4e0b\u6765\u7684 16 \u4e2a\u5b57\u8282\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u7684\u5f00\u5934\u3002\u63a5\u4e0b\u6765\u7684 3 \u8868\u793a\u540e\u9762\u7684\u603b\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u662f\u8981\u5220\u9664\u7684\u53c2\u4e0e\u8005\u7684 id\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e00\u5e27\u4e2d\u5220\u9664\u53c2\u4e0e\u8005 100\u3001101 \u548c 120\u3002","title":"\u6570\u636e\u5305 3 - \u4e8b\u4ef6\u5220\u9664"},{"location":"ref_recorder_binary_file_format/#4-","text":"\u8be5\u6570\u636e\u5305\u8bf4\u660e\u54ea\u4e2a\u53c2\u4e0e\u8005\u662f\u53e6\u4e00\u4e2a\u53c2\u4e0e\u8005\uff08\u7236\u6bcd\uff09\u7684\u5b69\u5b50\u3002 \u7b2c\u4e00\u4e2a id \u662f\u5b50\u53c2\u4e0e\u8005\uff0c\u7b2c\u4e8c\u4e2a id \u662f\u7236\u53c2\u4e0e\u8005\u3002","title":"\u6570\u636e\u5305 4 - \u4e8b\u4ef6\u7236\u7ea7"},{"location":"ref_recorder_binary_file_format/#5-","text":"\u5982\u679c\u4e24\u4e2a\u53c2\u4e0e\u8005\u4e4b\u95f4\u53d1\u751f\u78b0\u649e\uff0c\u5b83\u5c06\u88ab\u6ce8\u518c\u5230\u8fd9\u4e2a\u6570\u636e\u5305\u4e2d\u3002\u76ee\u524d\uff0c\u53ea\u6709\u5177\u6709\u78b0\u649e\u4f20\u611f\u5668\u7684\u53c2\u4e0e\u8005\u624d\u4f1a\u62a5\u544a\u78b0\u649e\uff0c\u56e0\u6b64\u76ee\u524d\u53ea\u6709\u82f1\u96c4\u8f66\u8f86\u4f1a\u81ea\u52a8\u8fde\u63a5\u8be5\u4f20\u611f\u5668\u3002 id \u53ea\u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u5185\u90e8\u6807\u8bc6\u6bcf\u6b21\u78b0\u649e\u7684\u5e8f\u5217\u3002\u540c\u4e00\u5e27\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u540c\u4e00\u5bf9\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u591a\u6b21\u78b0\u649e\uff0c\u56e0\u4e3a\u7269\u7406\u5e27\u901f\u7387\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u540c\u4e00\u6e32\u67d3\u5e27\u4e2d\u901a\u5e38\u5b58\u5728\u591a\u4e2a\u7269\u7406\u5b50\u6b65\u9aa4\u3002","title":"\u6570\u636e\u5305 5 - \u4e8b\u4ef6\u78b0\u649e"},{"location":"ref_recorder_binary_file_format/#6-","text":"\u8be5\u6570\u636e\u5305\u8bb0\u5f55\u573a\u666f\u4e2d\u5b58\u5728\u7684 \u8f66\u8f86 \u548c \u884c\u4eba \u7c7b\u578b\u7684\u6240\u6709\u53c2\u4e0e\u8005\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002","title":"\u6570\u636e\u5305 6 - \u4f4d\u7f6e"},{"location":"ref_recorder_binary_file_format/#7-","text":"\u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u573a\u666f\u4e2d\u6240\u6709 \u4ea4\u901a\u706f \u7684\u72b6\u6001\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5b58\u50a8\u72b6\u6001\uff08\u7ea2\u8272\u3001\u6a59\u8272\u6216\u7eff\u8272\uff09\u4ee5\u53ca\u7b49\u5f85\u66f4\u6539\u4e3a\u65b0\u72b6\u6001\u7684\u65f6\u95f4\u3002","title":"\u6570\u636e\u5305 7 - \u4ea4\u901a\u706f"},{"location":"ref_recorder_binary_file_format/#8-","text":"\u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u8f66\u8f86\u3001\u81ea\u884c\u8f66\u548c\u5c71\u5730\u81ea\u884c\u8f66\u7684\u52a8\u753b\u3002\u8be5\u6570\u636e\u5305\u5b58\u50a8\u4e86 \u6cb9\u95e8 \u3001 \u65b9\u5411\u76d8 \u3001 \u5220\u8f66 \u3001 \u624b\u5239 \u548c \u6392\u6321 \u8f93\u5165\uff0c\u7136\u540e\u5728\u64ad\u653e\u65f6\u8bbe\u7f6e\u5b83\u4eec\u3002","title":"\u6570\u636e\u5305 8 - \u8f66\u8f86\u52a8\u753b"},{"location":"ref_recorder_binary_file_format/#9-","text":"\u8be5\u6570\u636e\u5305\u8bb0\u5f55\u4e86\u884c\u4eba\u7684\u52a8\u753b\u3002\u5b83\u53ea\u662f\u4fdd\u5b58\u52a8\u753b\u4e2d\u4f7f\u7528\u7684\u884c\u4eba\u7684 \u901f\u5ea6 \u3002","title":"\u6570\u636e\u5305 9 - \u884c\u4eba\u52a8\u753b"},{"location":"ref_recorder_binary_file_format/#4-_1","text":"\u4e00\u4e2a\u5e27\u7531\u591a\u4e2a\u6570\u636e\u5305\u7ec4\u6210\uff0c\u5176\u4e2d\u6240\u6709\u6570\u636e\u5305\u90fd\u662f\u53ef\u9009\u7684\uff0c\u9664\u4e86\u90a3\u4e9b\u5728\u8be5\u5e27\u4e2d\u5177\u6709 \u5f00\u59cb \u548c \u7ed3\u675f \u7684\u6570\u636e\u5305\u4e4b\u5916\uff0c\u5b83\u4eec\u5fc5\u987b\u59cb\u7ec8\u5b58\u5728\u3002 \u4e8b\u4ef6 \u6570\u636e\u5305\u4ec5\u5b58\u5728\u4e8e\u5b83\u4eec\u53d1\u751f\u7684\u5e27\u4e2d\u3002 \u4f4d\u7f6e \u548c \u4ea4\u901a\u706f \u6570\u636e\u5305\u5e94\u8be5\u5b58\u5728\u4e8e\u6240\u6709\u5e27\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u79fb\u52a8\u6240\u6709\u53c2\u4e0e\u8005\u5e76\u5c06\u4ea4\u901a\u706f\u8bbe\u7f6e\u4e3a\u5176\u72b6\u6001\u3002\u5b83\u4eec\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5982\u679c\u5b83\u4eec\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u91cd\u653e\u5668\u5c06\u65e0\u6cd5\u79fb\u52a8\u6216\u8bbe\u7f6e\u4ea4\u901a\u706f\u7684\u72b6\u6001\u3002 \u52a8\u753b \u5305\u4e5f\u662f\u53ef\u9009\u7684\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u4f1a\u88ab\u8bb0\u5f55\u3002\u8fd9\u6837\u884c\u4eba\u5c31\u4f1a\u88ab\u52a8\u753b\u5316\uff0c\u5e76\u4e14\u8f66\u8f6e\u4e5f\u4f1a\u8ddf\u968f\u8f66\u8f86\u7684\u65b9\u5411\u3002","title":"4- \u5e27\u5e03\u5c40"},{"location":"ref_recorder_binary_file_format/#5-_1","text":"\u6587\u4ef6\u7684\u5e03\u5c40\u4ee5 \u4fe1\u606f\u5934 \u5f00\u59cb\uff0c\u7136\u540e\u662f\u5206\u7ec4\u7684\u6570\u636e\u5305\u96c6\u5408\u3002\u6bcf\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u662f \u5e27\u5f00\u59cb \u6570\u636e\u5305\uff0c\u6700\u540e\u4e00\u4e2a\u662f \u5e27\u7ed3\u675f \u6570\u636e\u5305\u3002\u5728\u8fd9\u4e24\u8005\u4e4b\u95f4\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u627e\u5230\u5176\u4f59\u7684\u6570\u636e\u5305\u3002 \u901a\u5e38\uff0c\u6700\u597d\u9996\u5148\u62e5\u6709\u6709\u5173\u4e8b\u4ef6\u7684\u6240\u6709\u6570\u636e\u5305\uff0c\u7136\u540e\u518d\u62e5\u6709\u6709\u5173\u4f4d\u7f6e\u548c\u72b6\u6001\u7684\u6570\u636e\u5305\u3002 \u4e8b\u4ef6\u5305\u662f\u53ef\u9009\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u53d1\u751f\u65f6\u51fa\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6709\u8fd9\u6837\u7684\u5e03\u5c40\uff1a \u5728 \u7b2c 1 \u5e27 \u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e9b\u53c2\u4e0e\u8005\u5e76\u91cd\u65b0\u8bbe\u7f6e\u4e86\u7236\u7ea7\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u89c2\u5bdf\u5176\u4e8b\u4ef6\u3002\u5728 \u7b2c 2 \u5e27 \u4e2d\u6ca1\u6709\u4e8b\u4ef6\u3002\u5728 \u7b2c 3 \u5e27 \u4e2d\uff0c\u4e00\u4e9b\u53c2\u4e0e\u8005\u53d1\u751f\u4e86\u78b0\u649e\uff0c\u56e0\u6b64\u78b0\u649e\u4e8b\u4ef6\u4f1a\u968f\u8be5\u4fe1\u606f\u4e00\u8d77\u51fa\u73b0\u3002\u5728 \u7b2c 4 \u5e27 \u4e2d\uff0c\u53c2\u4e0e\u8005\u88ab\u6467\u6bc1\u3002","title":"5- \u6587\u4ef6\u5e03\u5c40"},{"location":"ref_sensors/","text":"\u4f20\u611f\u5668\u53c2\u8003 \u78b0\u649e\u68c0\u6d4b\u5668 \u6df1\u5ea6\u76f8\u673a \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668 \u60ef\u6027\u6d4b\u91cf\u5355\u5143\u4f20\u611f\u5668 \u8f66\u9053\u5165\u4fb5\u68c0\u6d4b\u5668 \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u969c\u788d\u7269\u68c0\u6d4b\u5668 \u96f7\u8fbe\u4f20\u611f\u5668 RGB\u76f8\u673a \u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u8bed\u4e49\u5206\u5272\u76f8\u673a \u5b9e\u4f8b\u5206\u5272\u76f8\u673a \u52a8\u6001\u89c6\u89c9\u4f20\u611f\u5668\u76f8\u673a \u5149\u6d41\u76f8\u673a \u91cd\u8981 \u6240\u6709\u4f20\u611f\u5668\u90fd\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u5750\u6807\u7cfb\uff08 x - \u5411\u524d \uff0c y - \u5411\u53f3 \uff0c z - \u5411\u4e0a \uff09\uff0c\u5e76\u8fd4\u56de\u672c\u5730\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3002\u4f7f\u7528\u4efb\u4f55\u53ef\u89c6\u5316\u8f6f\u4ef6\u65f6\uff0c\u8bf7\u6ce8\u610f\u5176\u5750\u6807\u7cfb\u3002\u8bb8\u591a\u53cd\u8f6c Y \u8f74\uff0c\u56e0\u6b64\u76f4\u63a5\u53ef\u89c6\u5316\u4f20\u611f\u5668\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u955c\u50cf\u8f93\u51fa\u3002 \u78b0\u649e\u68c0\u6d4b\u5668 \u84dd\u56fe\uff1a sensor.other.collision \u8f93\u51fa\uff1a \u6bcf\u6b21\u78b0\u649e\u7684 carla.CollisionEvent \u3002 \u6bcf\u5f53\u5176\u7236\u53c2\u4e0e\u8005\u4e0e\u4e16\u754c\u4e0a\u7684\u67d0\u4e9b\u7269\u4f53\u53d1\u751f\u78b0\u649e\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u90fd\u4f1a\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u3002\u6bcf\u4e2a\u78b0\u649e\u4f20\u611f\u5668\u6bcf\u5e27\u6bcf\u6b21\u78b0\u649e\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u78b0\u649e\u4e8b\u4ef6\u3002\u901a\u8fc7\u4e0e\u591a\u4e2a\u5176\u4ed6\u53c2\u4e0e\u8005\u7684\u78b0\u649e\uff0c\u53ef\u4ee5\u5728\u5355\u4e2a\u5e27\u4e2d\u4ea7\u751f\u591a\u4e2a\u78b0\u649e\u4e8b\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u68c0\u6d4b\u5230\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u78b0\u649e\uff0c\u670d\u52a1\u5668\u4e3a\u5efa\u7b51\u7269\u6216\u704c\u6728\u4e1b\u7b49\u5143\u7d20\u521b\u5efa\u201c\u5047\u201d\u53c2\u4e0e\u8005\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u68c0\u7d22\u8bed\u4e49\u6807\u7b7e\u6765\u8bc6\u522b\u5b83\u3002 \u78b0\u649e\u68c0\u6d4b\u5668\u6ca1\u6709\u4efb\u4f55\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u6d4b\u91cf\u78b0\u649e\u7684\u53c2\u4e0e\u8005\uff08\u4f20\u611f\u5668\u7684\u7236\u7ea7\uff09\u3002 other_actor carla.Actor \u4e0e\u7236\u7ea7\u76f8\u649e\u7684\u53c2\u4e0e\u8005\u3002 normal_impulse carla.Vector3D \u78b0\u649e\u7684\u6b63\u5e38\u8109\u51b2\u7ed3\u679c\u3002 \u6df1\u5ea6\u76f8\u673a \u84dd\u56fe\uff1a sensor.camera.depth \u8f93\u51fa\uff1a \u6bcf\u6b65\u7684\u56fe\u50cf carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u76f8\u673a\u63d0\u4f9b\u573a\u666f\u7684\u539f\u59cb\u6570\u636e\uff0c\u7f16\u7801\u6bcf\u4e2a\u50cf\u7d20\u5230\u76f8\u673a\u7684\u8ddd\u79bb\uff08\u4e5f\u79f0\u4e3a \u6df1\u5ea6\u7f13\u51b2\u533a \u6216 z \u7f13\u51b2\u533a \uff09\u4ee5\u521b\u5efa\u5143\u7d20\u7684\u6df1\u5ea6\u56fe\u3002 \u8be5\u56fe\u50cf\u4f7f\u7528 RGB \u989c\u8272\u7a7a\u95f4\u7684 3 \u4e2a\u901a\u9053\uff08\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff09\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u7f16\u7801\uff1a R -> G -> B \u3002\u4ee5\u7c73\u4e3a\u5355\u4f4d\u7684\u5b9e\u9645\u8ddd\u79bb\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u89e3\u7801\uff1a normalized = (R + G * 256 + B * 256 * 256) / (256 * 256 * 256 - 1) in_meters = 1000 * normalized \u7136\u540e\uff0c\u5e94\u4f7f\u7528 carla.colorConverter \u5c06\u8f93\u51fa carla.Image \u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u8be5 carla.colorConverter \u4f1a\u5c06\u5b58\u50a8\u5728 RGB \u901a\u9053\u4e2d\u7684\u8ddd\u79bb\u8f6c\u6362\u4e3a\u5305\u542b\u8be5\u8ddd\u79bb\u7684 [0,1] \u6d6e\u70b9\u6570\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u3002 carla.colorConverter \u4e2d\u6709\u4e24\u4e2a\u9009\u9879\u53ef\u83b7\u53d6\u6df1\u5ea6\u89c6\u56fe\uff1a Depth \u548c Logaritmic depth \u3002\u4e24\u8005\u7684\u7cbe\u5ea6\u90fd\u662f\u6beb\u7c73\u7ea7\u7684\uff0c\u4f46\u5bf9\u6570\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u66f4\u8fd1\u7684\u7269\u4f53\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\u3002 ... raw_image.save_to_disk(\"path/to/save/converted/image\",carla.Depth) \u76f8\u673a\u57fa\u672c\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.other.gnss Output: \u6bcf\u4e00\u6b65\u7684\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u7684\u6d4b\u91cf carla.GNSSMeasurement \uff08 sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u62a5\u544a\u5176\u7236\u5bf9\u8c61\u7684\u5f53\u524d gnss \u4f4d\u7f6e \u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u5ea6\u91cf\u4f4d\u7f6e\u6dfb\u52a0\u5230 OpenDRIVE \u5730\u56fe\u5b9a\u4e49\u4e2d\u5b9a\u4e49\u7684\u521d\u59cb\u5730\u7406\u53c2\u8003\u4f4d\u7f6e\u6765\u8ba1\u7b97\u7684\u3002 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 noise_alt_bias float 0.0 \u6d77\u62d4\u9ad8\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_alt_stddev float 0.0 \u6d77\u62d4\u9ad8\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_lat_bias float 0.0 \u7eac\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_lat_stddev float 0.0 \u7eac\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_lon_bias float 0.0 \u7ecf\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_lon_stddev float 0.0 \u7ecf\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_seed int 0 \u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 latitude double \u53c2\u4e0e\u8005\u7684\u7eac\u5ea6\u3002 longitude double \u53c2\u4e0e\u8005\u7684\u7ecf\u5ea6\u3002 altitude double \u53c2\u4e0e\u8005\u7684\u6d77\u62d4\u9ad8\u5ea6\u3002 \u60ef\u6027\u6d4b\u91cf\u5355\u5143\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.other.imu \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65\u7684\u60ef\u6027\u6d4b\u91cf\u5355\u5143\u7684\u6d4b\u91cf\u503c carla.IMUMeasurement \uff08\u9664\u975e\u4f20\u611f\u5668\u6ef4\u7b54\u4fe1\u53f7 sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u63d0\u4f9b\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u5c06\u4e3a\u7236\u5bf9\u8c61\u68c0\u7d22\u7684\u6d4b\u91cf\u503c\u3002\u6570\u636e\u662f\u4ece\u5bf9\u8c61\u7684\u5f53\u524d\u72b6\u6001\u6536\u96c6\u7684\u3002 \u60ef\u6027\u6d4b\u91cf\u5355\u5143\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 noise_accel_stddev_x float 0.0 \u52a0\u901f\u5ea6\uff08X \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_accel_stddev_y float 0.0 \u52a0\u901f\u5ea6\uff08Y \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_accel_stddev_z float 0.0 \u52a0\u901f\u5ea6\uff08Z \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_gyro_bias_x float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08X \u8f74\uff09\u3002 noise_gyro_bias_y float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08Y \u8f74\uff09\u3002 noise_gyro_bias_z float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08Z \u8f74\uff09\u3002 noise_gyro_stddev_x float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08X \u8f74\uff09\u3002 noise_gyro_stddev_y float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08Y \u8f74\uff09\u3002 noise_gyro_stddev_z float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08Z \u8f74\uff09\u3002 noise_seed int 0 \u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 accelerometer carla.Vector3D \u6d4b\u91cf\u7ebf\u6027\u52a0\u901f\u5ea6\uff08\u4ee5 m/s^2 \u4e3a\u5355\u4f4d\uff09\u3002 gyroscope carla.Vector3D \u6d4b\u91cf\u89d2\u901f\u5ea6\uff08\u4ee5 rad/sec \u4e3a\u5355\u4f4d\uff09\u3002 compass float \u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\u7684\u65b9\u5411\u3002\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5317\u662f (0.0, -1.0, 0.0) \u3002 \u8f66\u9053\u4fb5\u5165\u68c0\u6d4b\u5668 \u84dd\u56fe\uff1a sensor.other.lane_invasion \u8f93\u51fa\uff1a \u6bcf\u6b21\u4ea4\u53c9\u8def\u53e3\u7684 carla.LaneInvasionEvent \u3002 \u6bcf\u6b21\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u90fd\u4f1a\u6ce8\u518c\u4e00\u4e2a\u4e8b\u4ef6\u3002\u4f20\u611f\u5668\u4f7f\u7528\u5730\u56fe\u7684 OpenDRIVE \u63cf\u8ff0\u63d0\u4f9b\u7684\u9053\u8def\u6570\u636e\uff0c\u901a\u8fc7\u8003\u8651\u8f66\u8f6e\u4e4b\u95f4\u7684\u7a7a\u95f4\u6765\u786e\u5b9a\u4e3b\u8f66\u8f86\u662f\u5426\u6b63\u5728\u4fb5\u5165\u53e6\u4e00\u8f66\u9053\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u4e8b\u60c5\u9700\u8981\u8003\u8651\uff1a OpenDRIVE \u6587\u4ef6\u548c\u5730\u56fe\u4e4b\u95f4\u7684\u5dee\u5f02\u5c06\u5bfc\u81f4\u4e0d\u89c4\u5219\u73b0\u8c61\uff0c\u4f8b\u5982\u5728\u5730\u56fe\u4e2d\u4e0d\u53ef\u89c1\u7684\u4ea4\u53c9\u8f66\u9053\u3002 \u8f93\u51fa\u68c0\u7d22\u4ea4\u53c9\u8f66\u9053\u6807\u8bb0\u5217\u8868\uff1a\u8ba1\u7b97\u5728 OpenDRIVE \u4e2d\u5b8c\u6210\uff0c\u5e76\u5c06\u56db\u4e2a\u8f66\u8f6e\u4e4b\u95f4\u7684\u6574\u4e2a\u7a7a\u95f4\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u6709\u4e0d\u6b62\u4e00\u6761\u8f66\u9053\u540c\u65f6\u7a7f\u8fc7\u3002 \u8be5\u4f20\u611f\u5668\u6ca1\u6709\u4efb\u4f55\u53ef\u914d\u7f6e\u5c5e\u6027\u3002 \u91cd\u8981 \u8be5\u4f20\u611f\u5668\u5b8c\u5168\u5728\u5ba2\u6237\u7aef\u5de5\u4f5c\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u4fb5\u5165\u53e6\u4e00\u8f66\u9053\u7684\u8f66\u8f86\uff08\u7236\u53c2\u4e0e\u8005\uff09\u3002 crossed_lane_markings list( carla.LaneMarking ) \u5df2\u7a7f\u8d8a\u7684\u8f66\u9053\u6807\u8bb0\u5217\u8868\u3002 \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.lidar.ray_cast \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.LidarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u5305\u542b\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5728\u67d0\u4e2a\u65f6\u95f4\u95f4\u9694\u5185\u751f\u6210\u7684\u6240\u6709\u70b91/FPS\u3002\u5728\u6b64\u95f4\u9694\u671f\u95f4\uff0c\u7269\u7406\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u6d4b\u91cf\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u53cd\u6620\u573a\u666f\u7684\u76f8\u540c\u201c\u9759\u6001\u56fe\u7247\u201d\u3002 points_per_channel_each_step = points_per_second / (FPS * channels) \u6b64\u8f93\u51fa\u5305\u542b\u4eff\u771f\u70b9\u4e91\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u4ee5\u68c0\u7d22\u5b83\u4eec\u7684\u5217\u8868 carla.Location \uff1a for location in lidar_measurement: print(location) \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u7684\u4fe1\u606f\u88ab\u7f16\u7801\u4e3a 4D \u70b9\u3002\u524d\u4e09\u4e2a\u662f xyz \u5750\u6807\u4e2d\u7684\u7a7a\u95f4\u70b9\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u65c5\u884c\u8fc7\u7a0b\u4e2d\u7684\u5f3a\u5ea6\u635f\u5931\u3002\u8be5\u5f3a\u5ea6\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\u3002 a \u2014 \u8870\u51cf\u7cfb\u6570\u3002\u8fd9\u53ef\u80fd\u53d6\u51b3\u4e8e\u4f20\u611f\u5668\u7684\u6ce2\u957f\u548c\u5927\u6c14\u6761\u4ef6\u3002\u53ef\u4ee5\u4f7f\u7528\u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027\u5bf9\u5176\u8fdb\u884c\u4fee\u6539 atmosphere_attenuation_rate \u3002 d \u2014 \u4ece\u51fb\u4e2d\u70b9\u5230\u4f20\u611f\u5668\u7684\u8ddd\u79bb \u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u771f\u5b9e\u611f\uff0c\u53ef\u4ee5\u5220\u9664\u4e91\u4e2d\u7684\u70b9\u3002\u8fd9\u662f\u6a21\u62df\u5916\u90e8\u6270\u52a8\u9020\u6210\u7684\u635f\u5931\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u8fd9\u53ef\u4ee5\u7ed3\u5408\u4e24\u4e2a\u4e0d\u540c\u7684\u6765\u5b8c\u6210\u3002 General drop-off \u2014 \u968f\u673a\u6389\u843d\u7684\u5206\u6570\u6bd4\u4f8b\u3002\u8fd9\u662f\u5728\u8ddf\u8e2a\u4e4b\u524d\u5b8c\u6210\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u4f1a\u8ba1\u7b97\u88ab\u4e22\u5f03\u7684\u70b9\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002\u5982\u679c\u662f dropoff_general_rate = 0.5 \uff0c\u5219\u6263\u6389\u4e00\u534a\u7684\u5206\u6570\u3002 Instensity-based drop-off \u2014 \u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u6bcf\u4e2a\u70b9\uff0c\u6839\u636e\u8ba1\u7b97\u7684\u5f3a\u5ea6\u7684\u6982\u7387\u6267\u884c\u989d\u5916\u7684\u4e0b\u964d\u3002\u8be5\u6982\u7387\u7531\u4e24\u4e2a\u53c2\u6570\u786e\u5b9a\u3002 dropoff_zero_intensity \u662f\u5f3a\u5ea6\u4e3a\u96f6\u7684\u70b9\u88ab\u4e22\u5f03\u7684\u6982\u7387\u3002 dropoff_intensity_limit \u662f\u9608\u503c\u5f3a\u5ea6\uff0c\u8d85\u8fc7\u8be5\u9608\u503c\u5c06\u4e0d\u4f1a\u6389\u843d\u4efb\u4f55\u5206\u6570\u3002\u8303\u56f4\u5185\u7684\u70b9\u88ab\u4e22\u5f03\u7684\u6982\u7387\u662f\u57fa\u4e8e\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u7ebf\u6027\u6bd4\u4f8b\u3002 \u6b64\u5916\uff0c\u8be5 noise_stddev \u5c5e\u6027\u8fd8\u4f7f\u566a\u58f0\u6a21\u578b\u80fd\u591f\u6a21\u62df\u73b0\u5b9e\u4f20\u611f\u5668\u4e2d\u51fa\u73b0\u7684\u610f\u5916\u504f\u5dee\u3002\u5bf9\u4e8e\u6b63\u503c\uff0c\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u6cbf\u7740\u6fc0\u5149\u5c04\u7ebf\u7684\u77e2\u91cf\u968f\u673a\u6270\u52a8\u3002\u7ed3\u679c\u662f\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u5177\u6709\u5b8c\u7f8e\u7684\u89d2\u5ea6\u5b9a\u4f4d\uff0c\u4f46\u8ddd\u79bb\u6d4b\u91cf\u5b58\u5728\u566a\u97f3\u3002 \u53ef\u4ee5\u8c03\u6574\u6fc0\u5149\u96f7\u8fbe\u7684\u65cb\u8f6c\u4ee5\u8986\u76d6\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u7684\u7279\u5b9a\u89d2\u5ea6\uff08\u4f7f\u7528 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff09\u3002\u4f8b\u5982\uff0c\u6bcf\u6b65\u65cb\u8f6c\u4e00\u6b21\uff08\u6574\u5708\u8f93\u51fa\uff0c\u5982\u4e0b\u56fe\uff09\uff0c\u65cb\u8f6c\u9891\u7387\u548c\u4eff\u771f\u7684 FPS \u5e94\u8be5\u76f8\u7b49\u3002 1. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u9891\u7387 sensors_bp['lidar'][0].set_attribute('rotation_frequency','10') . 2. \u4f7f\u7528 python3 config.py --fps=10 \u8fd0\u884c\u4eff\u771f\u3002 \u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 channels int 32 \u6fc0\u5149\u5668\u6570\u91cf\u3002 range float 10.0 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff08CARLA 0.9.6 \u6216\u66f4\u4f4e\u7248\u672c\u4e3a\u5398\u7c73\uff09\u3002 points_per_second int 56000 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 rotation_frequency float 10.0 \u6fc0\u5149\u96f7\u8fbe\u65cb\u8f6c\u9891\u7387\u3002 upper_fov float 10.0 \u6700\u9ad8\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 lower_fov float -30.0 \u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 horizontal_fov float 360.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c0 - 360\u3002 atmosphere_attenuation_rate float 0.004 \u6d4b\u91cf\u6bcf\u7c73\u6fc0\u5149\u96f7\u8fbe\u5f3a\u5ea6\u635f\u5931\u7684\u7cfb\u6570\u3002\u68c0\u67e5\u4e0a\u9762\u7684\u5f3a\u5ea6\u8ba1\u7b97\u3002 dropoff_general_rate float 0.45 \u968f\u673a\u4e22\u5f03\u7684\u70b9\u7684\u4e00\u822c\u6bd4\u4f8b\u3002 dropoff_intensity_limit float 0.8 \u5bf9\u4e8e\u57fa\u4e8e\u5f3a\u5ea6\u7684\u4e0b\u964d\uff0c\u5f3a\u5ea6\u9608\u503c\uff0c\u9ad8\u4e8e\u8be5\u503c\u5219\u4e0d\u4f1a\u4e0b\u964d\u4efb\u4f55\u70b9\u3002 dropoff_zero_intensity float 0.4 \u5bf9\u4e8e\u57fa\u4e8e\u5f3a\u5ea6\u7684\u4e0b\u964d\uff0c\u6bcf\u4e2a\u5f3a\u5ea6\u4e3a\u96f6\u7684\u70b9\u88ab\u4e0b\u964d\u7684\u6982\u7387\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 noise_stddev float 0.0 \u566a\u58f0\u6a21\u578b\u7684\u6807\u51c6\u504f\u5dee\uff0c\u7528\u4e8e\u5e72\u6270\u6cbf\u5176\u5149\u7ebf\u6295\u5c04\u77e2\u91cf\u7684\u6bcf\u4e2a\u70b9\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 horizontal_angle float \u5f53\u524d\u5e27\u4e2d\u6fc0\u5149\u96f7\u8fbe\u7684 XY \u5e73\u9762\u4e2d\u7684\u89d2\u5ea6\uff08\u5f27\u5ea6\uff09\u3002 channels int \u6fc0\u5149\u96f7\u8fbe\u7684\u901a\u9053\uff08\u6fc0\u5149\u5668\uff09\u6570\u91cf\u3002 get_point_count(channel) int \u6bcf\u4e2a\u901a\u9053\u6355\u83b7\u6b64\u5e27\u7684\u70b9\u6570\u3002 raw_data bytes 32 \u4f4d\u6d6e\u70b9\u6570\u7ec4\uff08\u6bcf\u4e2a\u70b9\u7684 XYZI\uff09\u3002 \u969c\u788d\u7269\u68c0\u6d4b\u5668 \u84dd\u56fe\uff1a sensor.other.obstacle \u8f93\u51fa\uff1a \u6bcf\u4e2a\u969c\u788d\u7269\u7684 carla.ObstacleDetectionEvent \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u6bcf\u5f53\u7236\u7ea7\u53c2\u4e0e\u8005\u524d\u65b9\u6709\u969c\u788d\u65f6\uff0c\u90fd\u4f1a\u6ce8\u518c\u4e00\u4e2a\u4e8b\u4ef6\u3002\u4e3a\u4e86\u9884\u6d4b\u969c\u788d\u7269\uff0c\u4f20\u611f\u5668\u5728\u6bcd\u8f66\u524d\u65b9\u521b\u5efa\u4e00\u4e2a\u80f6\u56ca\u5f62\u72b6\uff0c\u5e76\u7528\u5b83\u6765\u68c0\u67e5\u78b0\u649e\u3002\u4e3a\u4e86\u786e\u4fdd\u68c0\u6d4b\u5230\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u78b0\u649e\uff0c\u670d\u52a1\u5668\u4e3a\u5efa\u7b51\u7269\u6216\u704c\u6728\u4e1b\u7b49\u5143\u7d20\u521b\u5efa\u201c\u5047\u201d\u53c2\u4e0e\u8005\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u68c0\u7d22\u8bed\u4e49\u6807\u7b7e\u6765\u8bc6\u522b\u5b83\u3002 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 distance float 5 \u8f68\u8ff9\u8ddd\u79bb\u3002 hit_radius float 0.5 \u8f68\u8ff9\u7684\u534a\u5f84\u3002 only_dynamics bool False \u5982\u679c\u4e3a true\uff0c\u5219\u8f68\u8ff9\u5c06\u4ec5\u8003\u8651\u52a8\u6001\u5bf9\u8c61\u3002 debug_linetrace bool False \u5982\u679c\u4e3a true\uff0c\u5219\u8f68\u8ff9\u5c06\u53ef\u89c1\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u8f66\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u68c0\u6d4b\u5230\u969c\u788d\u7269\u7684\u53c2\u4e0e\u8005\uff08\u7236\u7ea7\u53c2\u4e0e\u8005\uff09\u3002 other_actor carla.Actor \u53c2\u4e0e\u8005\u88ab\u68c0\u6d4b\u4e3a\u969c\u788d\u7269\u3002 distance float \u4ece\u53c2\u4e0e\u8005 actor \u5230\u5176\u4ed6\u53c2\u4e0e\u8005 other_actor \u7684\u8ddd\u79bb\u3002 \u96f7\u8fbe\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.other.radar \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.RadarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u4f20\u611f\u5668\u521b\u5efa\u4e00\u4e2a\u5706\u9525\u89c6\u56fe\uff0c\u8be5\u89c6\u56fe\u88ab\u8f6c\u6362\u4e3a\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u53ca\u5176\u76f8\u5bf9\u4e8e\u4f20\u611f\u5668\u7684\u901f\u5ea6\u7684\u4e8c\u7ef4\u70b9\u56fe\u3002\u8fd9\u53ef\u7528\u4e8e\u5851\u9020\u5143\u7d20\u5e76\u8bc4\u4f30\u5b83\u4eec\u7684\u8fd0\u52a8\u548c\u65b9\u5411\u3002\u7531\u4e8e\u4f7f\u7528\u6781\u5750\u6807\uff0c\u8fd9\u4e9b\u70b9\u5c06\u96c6\u4e2d\u5728\u89c6\u56fe\u4e2d\u5fc3\u5468\u56f4\u3002 \u6d4b\u91cf\u7684\u70b9\u4f5c\u4e3a carla.RadarDetection \u6570\u7ec4\u5305\u542b\u5728 carla.RadarMeasurement \u4e2d\uff0c\u8be5\u6570\u7ec4\u6307\u5b9a\u5b83\u4eec\u7684\u6781\u5750\u6807\u3001\u8ddd\u79bb\u548c\u901f\u5ea6\u3002\u96f7\u8fbe\u4f20\u611f\u5668\u63d0\u4f9b\u7684\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u8f7b\u677e\u8f6c\u6362\u4e3a numpy \u53ef\u7ba1\u7406\u7684\u683c\u5f0f\uff1a # To get a numpy [[vel, azimuth, altitude, depth],...[,,,]]: points = np.frombuffer(radar_data.raw_data, dtype=np.dtype('f4')) points = np.reshape(points, (len(radar_data), 4)) \u63d0\u4f9b\u7684\u811a\u672c manual_control.py \u4f7f\u7528\u6b64\u4f20\u611f\u5668\u6765\u663e\u793a\u6b63\u5728\u68c0\u6d4b\u7684\u70b9\uff0c\u5e76\u5728\u9759\u6001\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u767d\u8272\uff0c\u5728\u5411\u7269\u4f53\u79fb\u52a8\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u7ea2\u8272\uff0c\u5728\u8fdc\u79bb\u7269\u4f53\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u84dd\u8272\uff1a \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 horizontal_fov float 30.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 points_per_second int 1500 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 range float 100 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 vertical_fov float 30.0 \u5782\u76f4\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 raw_data carla.RadarDetection \u68c0\u6d4b\u5230\u7684\u70b9\u5217\u8868\u3002 RadarDetection \u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 altitude float \u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u9ad8\u5ea6\u89d2\u3002 azimuth float \u65b9\u4f4d\u89d2\uff08\u4ee5\u5f27\u5ea6\u8868\u793a\uff09\u3002 depth float \u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\u3002 velocity float \u671d\u5411\u4f20\u611f\u5668\u7684\u901f\u5ea6\u3002 RGB \u76f8\u673a \u84dd\u56fe\uff1a sensor.camera.rgb \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u201cRGB\u201d\u76f8\u673a\u5145\u5f53\u6355\u83b7\u573a\u666f\u56fe\u50cf\u7684\u5e38\u89c4\u76f8\u673a\u3002 carla.colorConverter \u5982\u679c enable_postprocess_effects \u542f\u7528\uff0c\u4e3a\u4e86\u771f\u5b9e\u611f\uff0c\u4e00\u7ec4\u540e\u5904\u7406\u6548\u679c\u5c06\u5e94\u7528\u4e8e\u56fe\u50cf\uff1a Vignette: \u4f7f\u5c4f\u5e55\u8fb9\u6846\u53d8\u6697\u3002 Grain jitter: \u4e3a\u6e32\u67d3\u6dfb\u52a0\u4e00\u4e9b\u566a\u70b9\u3002 Bloom: \u5f3a\u70c8\u7684\u5149\u7ebf\u4f1a\u707c\u70e7\u5b83\u4eec\u5468\u56f4\u7684\u533a\u57df\u3002 Auto exposure: \u4fee\u6539\u56fe\u50cf\u4f3d\u739b\u4ee5\u6a21\u62df\u773c\u775b\u5bf9\u8f83\u6697\u6216\u8f83\u4eae\u533a\u57df\u7684\u9002\u5e94\u3002 Lens flares: \u4eff\u771f\u660e\u4eae\u7269\u4f53\u5728\u955c\u5934\u4e0a\u7684\u53cd\u5c04\u3002 Depth of field: \u6a21\u7cca\u9760\u8fd1\u6216\u8fdc\u79bb\u76f8\u673a\u7684\u7269\u4f53\u3002 sensor_tick \u544a\u8bc9\u6211\u4eec\u5e0c\u671b\u4f20\u611f\u5668\u6355\u83b7\u6570\u636e\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u503c\u4e3a 1.5 \u610f\u5473\u7740\u6211\u4eec\u5e0c\u671b\u4f20\u611f\u5668\u6bcf\u534a\u79d2\u6355\u83b7\u4e00\u6b21\u6570\u636e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u503c 0.0 \u8868\u793a\u5c3d\u53ef\u80fd\u5feb\u3002 \u76f8\u673a\u57fa\u672c\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 bloom_intensity float 0.675 \u5149\u6655\u540e\u5904\u7406\u6548\u679c\u7684\u5f3a\u5ea6\uff0c 0.0 \u7528\u4e8e\u7981\u7528\u5b83\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 fstop float 1.4 \u76f8\u673a\u955c\u5934\u7684\u6253\u5f00\u3002\u5178\u578b\u955c\u5934\u7684\u5149\u5708 1/fstop \u4e3a f/1.2\uff08\u66f4\u5927\u7684\u5149\u5708\uff09\u3002\u8f83\u5927\u7684\u6570\u5b57\u5c06\u51cf\u5c11\u666f\u6df1\u6548\u679c\u3002 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 iso float 100.0 \u76f8\u673a\u4f20\u611f\u5668\u7684\u7075\u654f\u5ea6\u3002 gamma float 2.2 \u76f8\u673a\u7684\u76ee\u6807\u4f3d\u739b\u503c\u3002 lens_flare_intensity float 0.1 \u955c\u5934\u7729\u5149\u540e\u5904\u7406\u6548\u679c\u7684\u5f3a\u5ea6\uff0c 0.0 \u7528\u4e8e\u7981\u7528\u5b83\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 shutter_speed float 200.0 \u76f8\u673a\u5feb\u95e8\u901f\u5ea6\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d (1.0/s)\u3002 \u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] \u9ad8\u7ea7\u76f8\u673a\u5c5e\u6027 \u7531\u4e8e\u8fd9\u4e9b\u6548\u679c\u662f\u7531\u865a\u5e7b\u5f15\u64ce\u63d0\u4f9b\u7684\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u4ed6\u4eec\u7684\u6587\u6863\uff1a \u81ea\u52a8\u66dd\u5149 Cinematic Depth of Field Method \u989c\u8272\u5206\u7ea7\u548c\u7535\u5f71\u8272\u8c03\u6620\u5c04\u5668 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 min_fstop float 1.2 \u6700\u5927\u5149\u5708\u3002 blade_count int 5 \u6784\u6210\u9694\u819c\u673a\u6784\u7684\u53f6\u7247\u6570\u91cf\u3002 exposure_mode str histogram \u53ef\u4ee5\u662f manual \u6216or histogram \u3002\u66f4\u591a\u5185\u5bb9\u8bf7\u53c2\u89c1 UE4 \u6587\u6863 \u3002 exposure_compensation float Linux: +0.75 Windows: 0.0 \u66dd\u5149\u7684\u5bf9\u6570\u8c03\u6574\u30020\uff1a\u65e0\u8c03\u6574\uff0c-1\uff1a2 \u500d\u66f4\u6697\uff0c-2\uff1a4 \u66f4\u6697\uff0c1\uff1a2 \u500d\u66f4\u4eae\uff0c2\uff1a4 \u500d\u66f4\u4eae\u3002 exposure_min_bright float 10.0 \u5728 exposure_mode: \"histogram\" \u3002\u81ea\u52a8\u66dd\u5149\u7684\u6700\u4f4e\u4eae\u5ea6\u3002\u773c\u775b\u80fd\u9002\u5e94\u7684\u6700\u4f4e\u9650\u5ea6\u3002\u5fc5\u987b\u5927\u4e8e 0 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e exposure_max_bright \u3002 exposure_max_bright float 12.0 \u5728`exposure_mode: \"histogram\"`\u4e2d\u3002\u81ea\u52a8\u66dd\u5149\u7684\u6700\u5927\u4eae\u5ea6\u3002\u773c\u775b\u80fd\u9002\u5e94\u7684\u6700\u9ad8\u9650\u5ea6\u3002\u5fc5\u987b\u5927\u4e8e 0 \u4e14\u5927\u4e8e\u6216\u7b49\u4e8e `exposure_min_bright`\u3002 exposure_speed_up float 3.0 \u5728 exposure_mode: \"histogram\" \u3002\u3002\u4ece\u9ed1\u6697\u73af\u5883\u5230\u660e\u4eae\u73af\u5883\u7684\u9002\u5e94\u901f\u5ea6\u3002 exposure_speed_down float 1.0 \u5728 exposure_mode: \"histogram\" \u3002\u4ece\u660e\u4eae\u73af\u5883\u5230\u9ed1\u6697\u73af\u5883\u7684\u9002\u5e94\u901f\u5ea6\u3002 calibration_constant float 16.0 18% \u53cd\u7167\u7387\u7684\u6821\u51c6\u5e38\u6570\u3002 focal_distance float 1000.0 \u666f\u6df1\u6548\u679c\u5e94\u6e05\u6670\u7684\u8ddd\u79bb\u3002\u4ee5\u5398\u7c73\uff08\u865a\u5e7b\u5f15\u64ce\u5355\u4f4d\uff09\u4e3a\u5355\u4f4d\u6d4b\u91cf\u3002 blur_amount float 1.0 \u8fd0\u52a8\u6a21\u7cca\u7684\u5f3a\u5ea6/\u5f3a\u5ea6\u3002 blur_radius float 0.0 1080p \u5206\u8fa8\u7387\u4e0b\u7684\u534a\u5f84\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\uff0c\u6839\u636e\u8ddd\u76f8\u673a\u7684\u8ddd\u79bb\u6a21\u62df\u5927\u6c14\u6563\u5c04\u3002 motion_blur_intensity float 0.45 \u8fd0\u52a8\u6a21\u7cca\u7684\u5f3a\u5ea6 [0,1]\u3002 motion_blur_max_distortion float 0.35 \u8fd0\u52a8\u6a21\u7cca\u5f15\u8d77\u7684\u6700\u5927\u5931\u771f\u3002\u5c4f\u5e55\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\u3002 motion_blur_min_object_screen_size float 0.1 \u5bf9\u4e8e\u8fd0\u52a8\u6a21\u7cca\uff0c\u5bf9\u8c61\u5fc5\u987b\u5177\u6709\u5c4f\u5e55\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\uff0c\u8f83\u4f4e\u7684\u503c\u610f\u5473\u7740\u8f83\u5c11\u7684\u7ed8\u5236\u8c03\u7528\u3002 slope float 0.88 \u8272\u8c03\u6620\u5c04\u5668 S \u66f2\u7ebf\u7684\u9661\u5ea6\u3002\u503c\u8d8a\u5927\uff0c\u659c\u7387\u8d8a\u9661\uff08\u8d8a\u6697\uff09[0.0, 1.0]\u3002 toe float 0.55 \u8c03\u6574\u8272\u8c03\u6620\u5c04\u5668\u4e2d\u7684\u6df1\u8272 [0.0, 1.0]\u3002 shoulder float 0.26 \u8c03\u6574\u8272\u8c03\u6620\u5c04\u5668\u4e2d\u7684\u660e\u4eae\u989c\u8272 [0.0, 1.0]\u3002 black_clip float 0.0 \u4e0d\u5e94\u8c03\u6574\u6b64\u503c\u3002\u8bbe\u7f6e\u4ea4\u53c9\u53d1\u751f\u548c\u9ed1\u8272\u8272\u8c03\u5f00\u59cb\u5207\u65ad\u5176\u503c\u7684\u4f4d\u7f6e [0.0, 1.0]\u3002 white_clip float 0.04 \u8bbe\u7f6e\u4ea4\u53c9\u53d1\u751f\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u767d\u8272\u8272\u8c03\u5f00\u59cb\u5207\u65ad\u5176\u503c\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u6709\u7ec6\u5fae\u7684\u53d8\u5316 [0.0, 1.0]\u3002 temp float 6500.0 \u767d\u5e73\u8861\u4e0e\u573a\u666f\u4e2d\u5149\u7ebf\u7684\u6e29\u5ea6\u6709\u5173\u3002 \u767d\u5149 \uff1a\u5f53\u4e0e\u5149\u6e29\u5339\u914d\u65f6\u3002 \u6696\u5149 \uff1a\u5f53\u9ad8\u4e8e\u573a\u666f\u4e2d\u7684\u5149\u7ebf\u65f6\uff0c\u5448\u6de1\u9ec4\u8272\u3002 \u51b7\u5149 \uff1a\u4f4e\u4e8e\u5149\u7ebf\u65f6\u3002\u84dd\u8272\u3002 tint float 0.0 \u767d\u5e73\u8861\u6e29\u5ea6\u8272\u8c03\u3002\u8c03\u6574\u9752\u8272\u548c\u6d0b\u7ea2\u8272\u7684\u989c\u8272\u8303\u56f4\u3002\u8fd9\u5e94\u8be5\u4e0e\u767d\u5e73\u8861\u6e29\u5ea6\u5c5e\u6027\u4e00\u8d77\u4f7f\u7528\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u989c\u8272\u3002\u5728\u67d0\u4e9b\u5149\u6e29\u4e0b\uff0c\u989c\u8272\u53ef\u80fd\u770b\u8d77\u6765\u66f4\u9ec4\u6216\u66f4\u84dd\u3002\u8fd9\u53ef\u7528\u4e8e\u5e73\u8861\u6700\u7ec8\u7684\u989c\u8272\uff0c\u4f7f\u5176\u770b\u8d77\u6765\u66f4\u81ea\u7136\u3002 chromatic_aberration_intensity float 0.0 \u7528\u4e8e\u63a7\u5236\u8272\u5f69\u504f\u79fb\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u5728\u5c4f\u5e55\u8fb9\u6846\u4e0a\u66f4\u660e\u663e\u3002 chromatic_aberration_offset float 0.0 \u5230\u53d1\u751f\u6548\u679c\u7684\u56fe\u50cf\u4e2d\u5fc3\u7684\u6b63\u5219\u5316\u8ddd\u79bb\u3002 enable_postprocess_effects bool True \u540e\u5904\u7406\u6548\u679c\u6fc0\u6d3b\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.other.rss \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.RssResponse \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u91cd\u8981 \u5f3a\u70c8\u5efa\u8bae\u5728\u9605\u8bfb\u672c\u6587\u4e4b\u524d\u5148\u9605\u8bfb\u5177\u4f53\u7684 \u4efb\u654f\u611f\u5b89\u5168\u6587\u6863 \u3002 \u8be5\u4f20\u611f\u5668\u96c6\u6210\u4e86 CARLA \u4e2d\u7684 \u8d23\u4efb\u654f\u611f\u5b89\u5168 C++ \u5e93 \u3002\u5b83\u5728 CARLA \u4e2d\u9ed8\u8ba4\u88ab\u7981\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u663e\u5f0f\u6784\u5efa\u624d\u80fd\u4f7f\u7528\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668\u8ba1\u7b97\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u72b6\u6001\u5e76\u68c0\u7d22\u5f53\u524d\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u54cd\u5e94\u4f5c\u4e3a\u4f20\u611f\u5668\u6570\u636e\u3002 carla.RssRestrictor \u5c06\u4f7f\u7528\u6b64\u6570\u636e\u6765\u8c03\u6574 carla.VehicleControl \uff0c\u7136\u540e\u518d\u5c06\u5176\u5e94\u7528\u4e8e\u8f66\u8f86\u3002 \u8fd9\u4e9b\u63a7\u5236\u5668\u53ef\u4ee5\u901a\u8fc7 \u81ea\u52a8\u9a7e\u9a76 \u5806\u6808\u6216\u7528\u6237\u8f93\u5165\u751f\u6210\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6709\u4e00\u6bb5\u6765\u81ea \u7684\u4ee3\u7801\u7247\u6bb5 PythonAPI/examples/rss/manual_control_rss.py \uff0c\u5176\u4e2d\u5728\u5fc5\u8981\u65f6\u4f7f\u7528\u8d23\u4efb\u654f\u611f\u5b89\u5168\u4fee\u6539\u7528\u6237\u8f93\u5165\u3002 1. \u68c0\u67e5 RssSensor \u662f\u5426\u751f\u6210\u5305\u542b\u9650\u5236\u7684\u6709\u6548\u54cd\u5e94\u3002 2. \u6536\u96c6\u8f66\u8f86\u7684\u5f53\u524d\u52a8\u6001\u548c\u8f66\u8f86\u7269\u7406\u7279\u6027\u3002 3. \u4f7f\u7528 RssSensor \u7684\u54cd\u5e94\u4ee5\u53ca\u8f66\u8f86\u5f53\u524d\u7684\u52a8\u6001\u548c\u7269\u7406\u7279\u6027\u5bf9\u8f66\u8f86\u63a7\u5236\u65bd\u52a0\u9650\u5236\u3002 rss_proper_response = self._world.rss_sensor.proper_response if self._world.rss_sensor and self._world.rss_sensor.response_valid else None if rss_proper_response: ... vehicle_control = self._restrictor.restrict_vehicle_control( vehicle_control, rss_proper_response, self._world.rss_sensor.ego_dynamics_on_route, self._vehicle_physics) carla.RssSensor \u7c7b \u8be5\u4f20\u611f\u5668\u7684\u84dd\u56fe\u6ca1\u6709\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u5b83\u5b9e\u4f8b\u5316\u7684 carla.RssSensor \u5bf9\u8c61\u5177\u6709 Python API \u53c2\u8003\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u6458\u8981\u3002 carla.RssSensor \u53d8\u91cf \u7c7b\u578b \u63cf\u8ff0 ego_vehicle_dynamics ad.rss.world.RssDynamics \u5e94\u7528\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 other_vehicle_dynamics ad.rss.world.RssDynamics \u9002\u7528\u4e8e\u5176\u4ed6\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 pedestrian_dynamics ad.rss.world.RssDynamics \u9002\u7528\u4e8e\u884c\u4eba\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 road_boundaries_mode carla.RssRoadBoundariesMode \u542f\u7528/\u7981\u7528 \u7559\u5728\u9053\u8def\u4e0a \u529f\u80fd\u3002\u9ed8\u8ba4\u4e3a \u5173\u95ed \u3002 # Fragment of rss_sensor.py # The carla.RssSensor is updated when listening for a new carla.RssResponse def _on_rss_response(weak_self, response): ... self.timestamp = response.timestamp self.response_valid = response.response_valid self.proper_response = response.proper_response self.ego_dynamics_on_route = response.ego_dynamics_on_route self.rss_state_snapshot = response.rss_state_snapshot self.situation_snapshot = response.situation_snapshot self.world_model = response.world_model \u8b66\u544a \u8be5\u4f20\u611f\u5668\u5728\u5ba2\u6237\u7aef\u5b8c\u5168\u5de5\u4f5c\u3002\u670d\u52a1\u5668\u4e2d\u6ca1\u6709\u84dd\u56fe\u3002\u5bf9\u5c5e\u6027\u7684\u66f4\u6539\u5c06\u5728\u8c03\u7528 listen() \u540e \u751f\u6548\u3002 \u6b64\u7c7b\u4e2d\u53ef\u7528\u7684\u65b9\u6cd5\u4e0e\u8f66\u8f86\u7684\u8def\u7ebf\u6709\u5173\u3002\u8d23\u4efb\u654f\u611f\u5b89\u5168\u8ba1\u7b97\u59cb\u7ec8\u57fa\u4e8e\u672c\u8f66\u901a\u8fc7\u9053\u8def\u7f51\u7edc\u7684\u8def\u7ebf\u3002 \u4f20\u611f\u5668\u5141\u8bb8\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e9b\u5173\u952e\u70b9\u6765\u63a7\u5236\u6240\u8003\u8651\u7684\u8def\u7ebf\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u53ef\u80fd\u662f carla.Transform \u4e2d\u7684 carla.Waypoint \u3002\u6700\u597d\u5728\u4ea4\u53c9\u70b9\u4e4b\u540e\u9009\u62e9\u8fd9\u4e9b\u70b9\uff0c\u4ee5\u5f3a\u5236\u8def\u7ebf\u91c7\u53d6\u6240\u9700\u7684\u8f6c\u5f2f\u3002 carla.RssSensor \u65b9\u6cd5 \u63cf\u8ff0 routing_targets \u83b7\u53d6\u7528\u4e8e\u8def\u7531\u7684\u5f53\u524d\u8def\u7531\u76ee\u6807\u5217\u8868\u3002 append_routing_target \u5c06\u9644\u52a0\u4f4d\u7f6e\u9644\u52a0\u5230\u5f53\u524d\u8def\u7531\u76ee\u6807\u3002 reset_routing_targets \u5220\u9664\u9644\u52a0\u7684\u8def\u7531\u76ee\u6807\u3002 drop_route \u653e\u5f03\u5f53\u524d\u8def\u7531\u5e76\u521b\u5efa\u4e00\u6761\u65b0\u8def\u7531\u3002 register_actor_constellation_callback \u6ce8\u518c\u56de\u8c03\u6765\u81ea\u5b9a\u4e49\u8ba1\u7b97\u3002 set_log_level \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002 set_map_log_level \u8bbe\u7f6e\u7528\u4e8e\u5730\u56fe\u76f8\u5173\u65e5\u5fd7\u7684\u65e5\u5fd7\u7ea7\u522b\u3002 # Update the current route self.sensor.reset_routing_targets() if routing_targets: for target in routing_targets: self.sensor.append_routing_target(target) \u7b14\u8bb0 \u5982\u679c\u672a\u5b9a\u4e49\u8def\u7531\u76ee\u6807\uff0c\u5219\u4f1a\u521b\u5efa\u968f\u673a\u8def\u7531\u3002 \u8f93\u51fa\u5c5e\u6027 carla.RssResponse \u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 response_valid bool \u54cd\u5e94\u6570\u636e\u7684\u6709\u6548\u6027\u3002 proper_response ad.rss.state.ProperResponse RSS \u4e3a\u8f66\u8f86\u8ba1\u7b97\u7684\u6b63\u786e\u54cd\u5e94\uff0c\u5305\u62ec\u52a0\u901f\u9650\u5236\u3002 rss_state_snapshot ad.rss.state.RssStateSnapshot RSS \u72b6\u6001\u4e3a\u5f53\u524d\u65f6\u95f4\u70b9\u3002\u8fd9\u662f RSS \u8ba1\u7b97\u7684\u8be6\u7ec6\u7684\u5355\u72ec\u8f93\u51fa\u3002 situation_snapshot ad.rss.situation.SituationSnapshot \u5f53\u524d\u65f6\u95f4\u70b9\u7684 RSS \u60c5\u51b5\u3002\u8fd9\u662f\u7528\u4e8e RSS \u8ba1\u7b97\u7684\u7ecf\u8fc7\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\u3002 world_model ad.rss.world.WorldModel \u5f53\u524d\u65f6\u95f4\u70b9\u7684 RSS \u4e16\u754c\u6a21\u578b\u3002\u8fd9\u662f RSS \u8ba1\u7b97\u7684\u8f93\u5165\u6570\u636e\u3002 ego_dynamics_on_route carla.RssEgoDynamicsOnRoute \u5173\u4e8e\u8def\u7ebf\u7684\u5f53\u524d\u81ea\u6211\u8f66\u8f86\u52a8\u6001\u3002 \u5982\u679c\u6ce8\u518c\u4e86 actor_constellation_callback\uff0c\u5219\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u8c03\u7528\uff1a \u9ed8\u8ba4\u8ba1\u7b97 ( actor_constellation_data.other_actor=None ) \u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684\u8ba1\u7b97 # Fragment of rss_sensor.py # The function is registered as actor_constellation_callback def _on_actor_constellation_request(self, actor_constellation_data): actor_constellation_result = carla.RssActorConstellationResult() actor_constellation_result.rss_calculation_mode = ad.rss.map.RssMode.NotRelevant actor_constellation_result.restrict_speed_limit_mode = ad.rss.map.RssSceneCreation.RestrictSpeedLimitMode.IncreasedSpeedLimit10 actor_constellation_result.ego_vehicle_dynamics = self.current_vehicle_parameters actor_constellation_result.actor_object_type = ad.rss.world.ObjectType.Invalid actor_constellation_result.actor_dynamics = self.current_vehicle_parameters actor_id = -1 actor_type_id = \"none\" if actor_constellation_data.other_actor != None: # customize actor_constellation_result for specific actor ... else: # default ... return actor_constellation_result \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u84dd\u56fe\uff1a sensor.lidar.ray_cast_semantic \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.SemanticLidarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u8be5\u4f20\u611f\u5668\u6a21\u62df\u4f7f\u7528\u5c04\u7ebf\u6295\u5c04\u5b9e\u73b0\u7684\u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\uff0c\u516c\u5f00\u6709\u5173\u5c04\u7ebf\u6295\u5c04\u547d\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002\u5b83\u7684\u884c\u4e3a\u4e0e \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u4e4b\u95f4\u6709\u4e24\u4e2a\u4e3b\u8981\u533a\u522b\u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u68c0\u7d22\u5230\u7684\u539f\u59cb\u6570\u636e\u6bcf\u4e2a\u70b9\u5305\u542b\u66f4\u591a\u6570\u636e\u3002 \u8be5\u70b9\u7684\u5750\u6807\uff08\u4e0e\u666e\u901a\u6fc0\u5149\u96f7\u8fbe\u4e00\u6837\uff09\u3002 \u5165\u5c04\u89d2\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u4f59\u5f26\u503c\u3002 \u5b9e\u4f8b\u548c\u8bed\u4e49\u57fa\u7840\u4e8b\u5b9e\u3002\u57fa\u672c\u4e0a\u662f CARLA \u5bf9\u8c61\u547d\u4e2d\u7684\u7d22\u5f15\u53ca\u5176\u8bed\u4e49\u6807\u7b7e\u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u65e2\u4e0d\u5305\u542b\u5f3a\u5ea6\u3001\u8870\u51cf\u4e5f\u4e0d\u5305\u542b\u566a\u58f0\u6a21\u578b\u5c5e\u6027\u3002 \u8fd9\u4e9b\u70b9\u662f\u901a\u8fc7\u4e3a\u5782\u76f4 FOV \u4e2d\u5206\u5e03\u7684\u6bcf\u4e2a\u901a\u9053\u6dfb\u52a0\u6fc0\u5149\u6765\u8ba1\u7b97\u7684\u3002\u65cb\u8f6c\u662f\u901a\u8fc7\u8ba1\u7b97\u6fc0\u5149\u96f7\u8fbe\u5728\u4e00\u5e27\u4e2d\u65cb\u8f6c\u7684\u6c34\u5e73\u89d2\u5ea6\u6765\u6a21\u62df\u7684\u3002\u70b9\u4e91\u662f\u901a\u8fc7\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5bf9\u6bcf\u4e2a\u6fc0\u5149\u8fdb\u884c\u5149\u7ebf\u6295\u5c04\u6765\u8ba1\u7b97\u7684\u3002 points_per_channel_each_step = points_per_second / (FPS * channels) \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u5305\u542b\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5728\u67d0\u4e2a\u65f6\u95f4 1/FPS \u95f4\u9694\u5185\u751f\u6210\u7684\u6240\u6709\u70b9\u3002\u5728\u6b64\u95f4\u9694\u671f\u95f4\uff0c\u7269\u7406\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u6d4b\u91cf\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u53cd\u6620\u573a\u666f\u7684\u76f8\u540c\u201c\u9759\u6001\u56fe\u7247\u201d\u3002 \u6b64\u8f93\u51fa\u5305\u542b\u6fc0\u5149\u96f7\u8fbe\u8bed\u4e49\u68c0\u6d4b\u4e91\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u4ee5\u68c0\u7d22\u5176\u5217\u8868 carla.SemanticLidarDetection \uff1a for detection in semantic_lidar_measurement: print(detection) \u53ef\u4ee5\u8c03\u6574\u6fc0\u5149\u96f7\u8fbe\u7684\u65cb\u8f6c\u4ee5\u8986\u76d6\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u7684\u7279\u5b9a\u89d2\u5ea6\uff08\u4f7f\u7528 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff09\u3002\u4f8b\u5982\uff0c\u6bcf\u6b65\u65cb\u8f6c\u4e00\u6b21\uff08\u6574\u5708\u8f93\u51fa\uff0c\u5982\u4e0b\u56fe\uff09\uff0c\u65cb\u8f6c\u9891\u7387\u548c\u6a21\u62df\u7684FPS\u5e94\u8be5\u76f8\u7b49\u3002 1. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u9891\u7387 sensors_bp['lidar'][0].set_attribute('rotation_frequency','10') \u3002 2. \u4f7f\u7528 python3 config.py --fps=10 \u8fd0\u884c\u4eff\u771f\u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 channels int 32 \u6fc0\u5149\u5668\u6570\u91cf\u3002 range float 10.0 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff08CARLA 0.9.6 \u6216\u66f4\u4f4e\u7248\u672c\u4e3a\u5398\u7c73\uff09\u3002 points_per_second int 56000 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 rotation_frequency float 10.0 \u6fc0\u5149\u96f7\u8fbe\u65cb\u8f6c\u9891\u7387\u3002 upper_fov float 10.0 \u6700\u9ad8\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 lower_fov float -30.0 \u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 horizontal_fov float 360.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c0 - 360\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 horizontal_angle float \u5f53\u524d\u5e27\u4e2d LIDAR \u7684 XY \u5e73\u9762\u4e2d\u7684\u89d2\u5ea6\uff08\u5f27\u5ea6\uff09\u3002 channels int LIDAR \u7684\u901a\u9053\uff08\u6fc0\u5149\u5668\uff09\u6570\u91cf\u3002 get_point_count(channel) int \u5f53\u524d\u5e27\u4e2d\u6355\u83b7\u7684\u6bcf\u4e2a\u901a\u9053\u7684\u70b9\u6570\u3002 raw_data bytes \u5305\u542b\u5177\u6709\u5b9e\u4f8b\u548c\u8bed\u4e49\u4fe1\u606f\u7684\u70b9\u4e91\u7684\u6570\u7ec4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5b58\u50a8\u56db\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u3002 XYZ \u5750\u6807\u3002 \u5165\u5c04\u89d2\u7684\u4f59\u5f26\u3002 Unsigned int \u5305\u542b\u547d\u4e2d\u5bf9\u8c61\u7684\u7d22\u5f15\u3002 Unsigned int \u5305\u542b\u5bf9\u8c61 it \u7684\u8bed\u4e49\u6807\u7b7e\u3002 \u8bed\u4e49\u5206\u5272\u76f8\u673a \u84dd\u56fe\uff1a sensor.camera.semantic_segmentation \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u8be5\u6444\u50cf\u673a\u6839\u636e\u5176\u6807\u7b7e\u4ee5\u4e0d\u540c\u7684\u989c\u8272\u663e\u793a\u5b83\uff0c\u4ece\u800c\u5bf9\u53ef\u89c1\u7684\u6bcf\u4e2a\u7269\u4f53\u8fdb\u884c\u5206\u7c7b\uff08\u4f8b\u5982\uff0c\u884c\u4eba\u4e0e\u8f66\u8f86\u7684\u989c\u8272\u4e0d\u540c\uff09\u3002\u5f53\u6a21\u62df\u5f00\u59cb\u65f6\uff0c\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u4f7f\u7528\u6807\u7b7e\u521b\u5efa\u3002\u6240\u4ee5\u5f53\u6f14\u5458\u4ea7\u751f\u65f6\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5bf9\u8c61\u6309\u5176\u5728\u9879\u76ee\u4e2d\u7684\u76f8\u5bf9\u6587\u4ef6\u8def\u5f84\u8fdb\u884c\u5206\u7c7b\u3002\u4f8b\u5982\uff0c\u5b58\u50a8\u5728\u4e2d\u7684\u7f51\u683c Unreal/CarlaUE4/Content/Static/Pedestrians \u88ab\u6807\u8bb0\u4e3a Pedestrian \u3002 \u670d\u52a1\u5668\u63d0\u4f9b\u7684\u56fe\u50cf\u7684\u6807\u7b7e\u4fe1\u606f \u7f16\u7801\u5728\u7ea2\u8272\u901a\u9053\u4e2d \uff1a \u7ea2\u8272\u503c\u4e3a \u7684\u50cf\u7d20 x \u5c5e\u4e8e\u5e26\u6709\u6807\u7b7e\u7684\u5bf9\u8c61 x \u3002\u8fd9\u4e2a\u539f\u59cb\u7684 carla.Image \u53ef\u4ee5\u5728 carla.ColorConverter \u4e2d\u7684 CityScapesPalette \u7684\u5e2e\u52a9\u4e0b\u5b58\u50a8\u548c\u8f6c\u6362\uff0c\u4ee5\u5e94\u7528\u6807\u7b7e\u4fe1\u606f\u5e76\u901a\u8fc7\u8bed\u4e49\u5206\u5272\u663e\u793a\u56fe\u7247\u3002 ... raw_image.save_to_disk(\"path/to/save/converted/image\",carla.cityScapesPalette) \u76ee\u524d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6807\u7b7e\uff1a \u503c \u6807\u7b7e \u8f6c\u6362\u540e\u7684\u989c\u8272 \u63cf\u8ff0 0 Unlabeled (0, 0, 0) \u8003\u8651\u5c1a\u672a\u5206\u7c7b\u7684\u5143\u7d20 Unlabeled \u3002\u8be5\u7c7b\u522b\u5e94\u8be5\u662f\u7a7a\u7684\u6216\u81f3\u5c11\u5305\u542b\u6ca1\u6709\u51b2\u7a81\u7684\u5143\u7d20\u3002 1 Building (70, 70, 70) \u623f\u5c4b\u3001\u6469\u5929\u5927\u697c\u7b49\u5efa\u7b51\u7269\u4ee5\u53ca\u9644\u7740\u5728\u5176\u4e0a\u7684\u5143\u7d20\u3002 \u4f8b\u5982\u7a7a\u8c03\u3001\u811a\u624b\u67b6\u3001\u906e\u9633\u7bf7\u6216\u68af\u5b50\u7b49\u7b49\u3002 2 Fence (100, 40, 40) \u969c\u788d\u7269\u3001\u680f\u6746\u6216\u5176\u4ed6\u76f4\u7acb\u7ed3\u6784\u3002\u57fa\u672c\u4e0a\u662f\u5305\u56f4\u5730\u9762\u533a\u57df\u7684\u6728\u6750\u6216\u7535\u7ebf\u7ec4\u4ef6\u3002 3 Other (55, 90, 80) \u4e00\u5207\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u7684\u4e1c\u897f\u3002 4 Pedestrian (220, 20, 60) \u6b65\u884c\u6216\u4e58\u5750/\u9a7e\u9a76\u4efb\u4f55\u7c7b\u578b\u7684\u8f66\u8f86\u6216\u79fb\u52a8\u7cfb\u7edf\u7684\u4eba\u3002 \u4f8b\u5982\u81ea\u884c\u8f66\u6216\u8e0f\u677f\u8f66\u3001\u6ed1\u677f\u3001\u9a6c\u3001\u65f1\u51b0\u978b\u3001\u8f6e\u6905\u7b49\u3002 5 Pole (153, 153, 153) \u4e3b\u8981\u4e3a\u5782\u76f4\u65b9\u5411\u7684\u5c0f\u578b\u6746\u3002\u5982\u679c\u6746\u6709\u6c34\u5e73\u90e8\u5206\uff08\u901a\u5e38\u7528\u4e8e\u4ea4\u901a\u706f\u6746\uff09\uff0c\u5219\u4e5f\u88ab\u89c6\u4e3a\u6746\u3002 \u4f8b\u5982\u6807\u5fd7\u6746\u3001\u4ea4\u901a\u706f\u6746\u3002 6 RoadLine (157, 234, 50) \u9053\u8def\u4e0a\u7684\u6807\u8bb0\u3002 7 Road (128, 64, 128) \u6c7d\u8f66\u901a\u5e38\u884c\u9a76\u7684\u90e8\u5206\u5730\u9762\u3002 \u4f8b\u5982\u4efb\u4f55\u65b9\u5411\u7684\u8f66\u9053\u548c\u8857\u9053\u3002 8 SideWalk (244, 35, 232) \u6307\u5b9a\u4f9b\u884c\u4eba\u6216\u9a91\u81ea\u884c\u8f66\u8005\u4f7f\u7528\u7684\u5730\u9762\u7684\u4e00\u90e8\u5206\u3002\u4e0d\u4ec5\u901a\u8fc7\u6807\u8bb0\uff0c\u8fd8\u901a\u8fc7\u4e00\u4e9b\u969c\u788d\u7269\uff08\u4f8b\u5982\u8def\u7f18\u77f3\u6216\u6746\u5b50\uff09\u5c06\u9053\u8def\u4e0e\u9053\u8def\u5206\u9694\u5f00\u3002\u8be5\u6807\u7b7e\u5305\u62ec\u53ef\u80fd\u5212\u5b9a\u7684\u8def\u8fb9\u3001\u4ea4\u901a\u5c9b\uff08\u6b65\u884c\u90e8\u5206\uff09\u548c\u6b65\u884c\u533a\u3002 9 Vegetation (107, 142, 35) \u6811\u6728\u3001\u6811\u7bf1\u3001\u5404\u79cd\u5782\u76f4\u690d\u88ab\u3002\u8003\u8651\u5730\u9762\u690d\u88ab Terrain \u3002 10 Vehicles (0, 0, 142) \u6c7d\u8f66\u3001\u8d27\u8f66\u3001\u5361\u8f66\u3001\u6469\u6258\u8f66\u3001\u81ea\u884c\u8f66\u3001\u516c\u5171\u6c7d\u8f66\u3001\u706b\u8f66\u3002 11 Wall (102, 102, 156) \u72ec\u7acb\u7684\u7acb\u5899\u3002\u4e0d\u662f\u5efa\u7b51\u7269\u7684\u4e00\u90e8\u5206\u3002 12 TrafficSign (220, 220, 0) \u7531\u5dde/\u5e02\u5f53\u5c40\u5b89\u88c5\u7684\u6807\u5fd7\uff0c\u901a\u5e38\u7528\u4e8e\u4ea4\u901a\u7ba1\u5236\u3002\u6b64\u7c7b\u522b\u4e0d\u5305\u62ec\u9644\u6709\u6807\u5fd7\u7684\u6746\u3002 \u4f8b\u5982\u4ea4\u901a\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u3001\u65b9\u5411\u6807\u5fd7... 13 Sky (70, 130, 180) \u5f00\u9614\u7684\u5929\u7a7a\u3002\u5305\u62ec\u4e91\u548c\u592a\u9633\u3002 14 Ground (81, 0, 81) \u4e0e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u4e0d\u5339\u914d\u7684\u4efb\u4f55\u6c34\u5e73\u5730\u9762\u7ed3\u6784\u3002\u4f8b\u5982\uff0c\u8f66\u8f86\u548c\u884c\u4eba\u5171\u4eab\u7684\u533a\u57df\uff0c\u6216\u901a\u8fc7\u8def\u7f18\u4e0e\u9053\u8def\u5206\u9694\u7684\u5e73\u5766\u73af\u5c9b\u3002 15 Bridge (150, 100, 100) \u53ea\u6709\u6865\u7684\u7ed3\u6784\u3002\u6805\u680f\u3001\u4eba\u3001\u8f66\u8f86\u4ee5\u53ca\u5176\u4e0a\u7684\u5176\u4ed6\u5143\u7d20\u90fd\u88ab\u5355\u72ec\u6807\u8bb0\u3002 16 RailTrack (230, 150, 140) \u5404\u79cd\u975e\u6c7d\u8f66\u884c\u9a76\u7684\u94c1\u8f68\u3002 \u4f8b\u5982\u5730\u94c1\u548c\u706b\u8f66\u94c1\u8f68\u3002 17 GuardRail (180, 165, 180) \u6240\u6709\u7c7b\u578b\u7684\u62a4\u680f/\u9632\u649e\u680f\u3002 18 TrafficLight (250, 170, 30) \u6ca1\u6709\u706f\u6746\u7684\u4ea4\u901a\u706f\u7bb1\u3002 19 Static (110, 190, 160) \u573a\u666f\u4e2d\u7684\u5143\u7d20\u548c\u9053\u5177\u662f\u4e0d\u53ef\u79fb\u52a8\u7684\u3002 \u4f8b\u5982\u6d88\u9632\u6813\u3001\u56fa\u5b9a\u957f\u51f3\u3001\u55b7\u6cc9\u3001\u516c\u4ea4\u8f66\u7ad9\u7b49\u3002 20 Dynamic (170, 120, 50) \u4f4d\u7f6e\u5bb9\u6613\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5143\u7d20\u3002 \u4f8b\u5982\u53ef\u79fb\u52a8\u5783\u573e\u6876\u3001\u624b\u63a8\u8f66\u3001\u888b\u5b50\u3001\u8f6e\u6905\u3001\u52a8\u7269\u7b49\u3002 21 Water (45, 60, 150) \u6c34\u5e73\u6c34\u9762\u3002 \u4f8b\u5982\u6e56\u6cca\u3001\u6d77\u6d0b\u3001\u6cb3\u6d41\u3002 22 Terrain (145, 170, 100) \u8349\u3001\u5730\u9762\u690d\u88ab\u3001\u571f\u58e4\u6216\u6c99\u5b50\u3002\u8fd9\u4e9b\u533a\u57df\u4e0d\u9002\u5408\u884c\u9a76\u3002\u8be5\u6807\u7b7e\u5305\u62ec\u53ef\u80fd\u7684\u9650\u5236\u6027\u8def\u7f18\u77f3\u3002 \u7b14\u8bb0 \u9605\u8bfb \u672c \u6559\u7a0b\u4ee5\u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e\u3002 \u76f8\u673a\u57fa\u672c\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u58f0\uff09\u3002 \u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u6a21\u62df\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 DVS \u76f8\u673a \u84dd\u56fe\uff1a sensor.camera.dvs \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.DVSEventArray \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u52a8\u6001\u89c6\u89c9\u4f20\u611f\u5668\u6216\u4e8b\u4ef6\u76f8\u673a\u662f\u4e00\u79cd\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4f20\u7edf\u76f8\u673a\u5b8c\u5168\u4e0d\u540c\u7684\u4f20\u611f\u5668\u3002\u4e8b\u4ef6\u76f8\u673a\u4e0d\u662f\u4ee5\u56fa\u5b9a\u901f\u7387\u6355\u83b7\u5f3a\u5ea6\u56fe\u50cf\uff0c\u800c\u662f\u4ee5\u4e8b\u4ef6\u6d41\u7684\u5f62\u5f0f\u5f02\u6b65\u6d4b\u91cf\u5f3a\u5ea6\u53d8\u5316\uff0c\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u7684\u4eae\u5ea6\u53d8\u5316\u8fdb\u884c\u7f16\u7801\u3002\u4e0e\u6807\u51c6\u6444\u50cf\u673a\u76f8\u6bd4\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u5177\u6709\u72ec\u7279\u7684\u5c5e\u6027\u3002\u5b83\u4eec\u5177\u6709\u975e\u5e38\u9ad8\u7684\u52a8\u6001\u8303\u56f4\uff08140 dB \u4e0e 60 dB\uff09\u3001\u65e0\u8fd0\u52a8\u6a21\u7cca\u548c\u9ad8\u65f6\u95f4\u5206\u8fa8\u7387\uff08\u5fae\u79d2\u7ea7\uff09\u3002\u56e0\u6b64\uff0c\u4e8b\u4ef6\u76f8\u673a\u662f\u5373\u4f7f\u5728\u5177\u6709\u6311\u6218\u6027\u7684\u9ad8\u901f\u573a\u666f\u548c\u9ad8\u52a8\u6001\u8303\u56f4\u73af\u5883\u4e0b\u4e5f\u80fd\u63d0\u4f9b\u9ad8\u8d28\u91cf\u89c6\u89c9\u4fe1\u606f\u7684\u4f20\u611f\u5668\uff0c\u4e3a\u57fa\u4e8e\u89c6\u89c9\u7684\u7b97\u6cd5\u63d0\u4f9b\u4e86\u65b0\u7684\u5e94\u7528\u9886\u57df\u3002 DVS \u6444\u50cf\u673a\u8f93\u51fa\u4e8b\u4ef6\u6d41\u3002\u5f53\u5bf9\u6570\u5f3a\u5ea6\u7684\u53d8\u5316\u8fbe\u5230\u9884\u5b9a\u4e49\u7684\u6052\u5b9a\u9608\u503c\uff08\u901a\u5e38\u5728 15% \u5230 30% \u4e4b\u95f4\uff09\u65f6\uff0c\u5728\u65f6\u95f4\u6233\u5904\u7684\u50cf\u7d20\u5904 e=(x,y,t,pol) \u89e6\u53d1\u4e8b\u4ef6\u3002 L(x,y,t) - L(x,y,t-\\delta t) = pol C t-\\delta t \u662f\u8be5\u50cf\u7d20\u4e0a\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u88ab\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u5e76\u4e14 pol \u662f\u6839\u636e\u4eae\u5ea6\u53d8\u5316\u7684\u7b26\u53f7\u7684\u4e8b\u4ef6\u7684\u6781\u6027\u3002 +1 \u5f53\u4eae\u5ea6\u589e\u52a0\u65f6\u6781\u6027\u4e3a\u6b63\uff0c -1 \u5f53\u4eae\u5ea6\u51cf\u5c11\u65f6\u6781\u6027\u4e3a\u8d1f\u3002\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\u3002\u6807\u51c6\u76f8\u673a\u4ee5\u56fa\u5b9a\u901f\u7387\u8f93\u51fa\u5e27\uff0c\u4ece\u800c\u5728\u573a\u666f\u4e2d\u4e0d\u5b58\u5728\u8fd0\u52a8\u65f6\u53d1\u9001\u5197\u4f59\u4fe1\u606f\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u662f\u6570\u636e\u9a71\u52a8\u7684\u4f20\u611f\u5668\uff0c\u80fd\u591f\u4ee5\u5fae\u79d2\u5ef6\u8fdf\u54cd\u5e94\u4eae\u5ea6\u53d8\u5316\u3002\u5728\u7ed8\u56fe\u4e2d\uff0c\u53ea\u8981\uff08\u5e26\u7b26\u53f7\u7684\uff09\u4eae\u5ea6\u53d8\u5316\u968f\u65f6\u95f4\u8d85\u8fc7 C \u4e00\u7ef4\u7684\u5bf9\u6bd4\u5ea6\u9608\u503c\uff0c\u5c31\u4f1a\u751f\u6210\u6b63\uff08\u6216\u8d1f\uff09\u4e8b\u4ef6\uff08\u84dd\u70b9\u3001\u7ea2\u70b9\uff09 \u3002\u89c2\u5bdf\u4fe1\u53f7\u5feb\u901f\u53d8\u5316\u65f6\u4e8b\u4ef6\u7387\u5982\u4f55\u589e\u957f\u3002 DVS \u6444\u50cf\u673a\u7684\u5f53\u524d\u5b9e\u73b0\u5728\u4e24\u4e2a\u8fde\u7eed\u540c\u6b65\u5e27\u4e4b\u95f4\u4ee5\u7edf\u4e00\u91c7\u6837\u65b9\u5f0f\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u4e8b\u4ef6\u76f8\u673a\u7684\u9ad8\u65f6\u95f4\u5206\u8fa8\u7387\uff08\u5fae\u79d2\u7ea7\uff09\uff0c\u4f20\u611f\u5668\u9700\u8981\u4ee5\u9ad8\u9891\u7387\u6267\u884c\uff08\u6bd4\u4f20\u7edf\u76f8\u673a\u7684\u9891\u7387\u9ad8\u5f97\u591a\uff09\u3002\u5b9e\u9645\u4e0a\uff0cCARLA \u6c7d\u8f66\u884c\u9a76\u901f\u5ea6\u8d8a\u5feb\uff0c\u4e8b\u4ef6\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\u3002\u56e0\u6b64\uff0c\u4f20\u611f\u5668\u9891\u7387\u5e94\u968f\u7740\u573a\u666f\u7684\u52a8\u6001\u800c\u76f8\u5e94\u589e\u52a0\u3002\u7528\u6237\u5e94\u8be5\u5728\u65f6\u95f4\u7cbe\u5ea6\u548c\u8ba1\u7b97\u6210\u672c\u4e4b\u95f4\u627e\u5230\u5e73\u8861\u3002 \u63d0\u4f9b\u7684\u811a\u672c[ manual_control.py ]\u4f7f\u7528 DVS \u6444\u50cf\u5934\u6765\u5c55\u793a\u5982\u4f55\u914d\u7f6e\u4f20\u611f\u5668\u3001\u5982\u4f55\u83b7\u53d6\u4e8b\u4ef6\u6d41\u4ee5\u53ca\u5982\u4f55\u4ee5\u56fe\u50cf\u683c\u5f0f\uff08\u901a\u5e38\u79f0\u4e3a\u4e8b\u4ef6\u6846\u67b6\uff09\u63cf\u8ff0\u6b64\u7c7b\u4e8b\u4ef6\u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e DVS \u6444\u50cf\u673a\u7684\u91c7\u6837\u65b9\u6cd5\uff0c\u5982\u679c\u4e24\u4e2a\u8fde\u7eed\u540c\u6b65\u5e27\u4e4b\u95f4\u6ca1\u6709\u50cf\u7d20\u5dee\u5f02\uff0c\u6444\u50cf\u673a\u5c06\u4e0d\u4f1a\u8fd4\u56de\u56fe\u50cf\u3002\u8fd9\u603b\u662f\u53d1\u751f\u5728\u7b2c\u4e00\u5e27\u4e2d\uff0c\u56e0\u4e3a\u6ca1\u6709\u524d\u4e00\u5e27\u53ef\u4f9b\u6bd4\u8f83\uff0c\u5e76\u4e14\u5728\u5e27\u4e4b\u95f4\u6ca1\u6709\u79fb\u52a8\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002 DVS \u662f\u4e00\u4e2a\u76f8\u673a\uff0c\u56e0\u6b64\u5177\u6709 RGB \u76f8\u673a\u4e2d\u53ef\u7528\u7684\u6240\u6709\u5c5e\u6027\u3002\u7136\u800c\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u7684\u5de5\u4f5c\u539f\u7406\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u72ec\u6709\u7684\u5c5e\u6027\u3002 DVS \u76f8\u673a\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 positive_threshold float 0.3 \u4e0e\u4eae\u5ea6\u53d8\u5316\u589e\u91cf\u76f8\u5173\u7684\u6b63\u9608\u503c C (0-1)\u3002 negative_threshold float 0.3 \u4e0e\u4eae\u5ea6\u53d8\u5316\u51cf\u5c11\u76f8\u5173\u7684\u8d1f\u9608\u503c C (0-1)\u3002 sigma_positive_threshold float 0 \u79ef\u6781\u4e8b\u4ef6\u7684\u767d\u566a\u58f0\u6807\u51c6\u5dee (0-1)\u3002 sigma_negative_threshold float 0 \u8d1f\u9762\u4e8b\u4ef6\u7684\u767d\u566a\u58f0\u6807\u51c6\u5dee (0-1)\u3002 refractory_period_ns int 0.0 \u4e0d\u5e94\u671f\uff08\u50cf\u7d20\u5728\u89e6\u53d1\u4e8b\u4ef6\u540e\u65e0\u6cd5\u89e6\u53d1\u4e8b\u4ef6\u7684\u65f6\u95f4\uff09\uff0c\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\u3002\u5b83\u9650\u5236\u4e86\u89e6\u53d1\u4e8b\u4ef6\u7684\u6700\u9ad8\u9891\u7387\u3002 use_log bool true \u662f\u5426\u4ee5\u5bf9\u6570\u5f3a\u5ea6\u6807\u5ea6\u5de5\u4f5c\u3002 log_eps float 0.001 \u7528\u4e8e\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u65e5\u5fd7\u7684 Epsilon \u503c\uff1a L = log(eps + I / 255.0) . \u5176\u4e2d I \u662f RGB \u56fe\u50cf\u7684\u7070\u5ea6\u503c\uff1a I = 0.2989*R + 0.5870*G + 0.1140*B . \u5149\u6d41\u76f8\u673a \u5149\u6d41\u76f8\u673a\u6355\u6349\u4ece\u76f8\u673a\u7684\u89d2\u5ea6\u611f\u77e5\u7684\u8fd0\u52a8\u3002\u8be5\u4f20\u611f\u5668\u8bb0\u5f55\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u5bf9\u6295\u5f71\u5230\u56fe\u50cf\u5e73\u9762\u7684\u8be5\u70b9\u7684\u901f\u5ea6\u8fdb\u884c\u7f16\u7801\u3002\u50cf\u7d20\u7684\u901f\u5ea6\u5728 [-2,2] \u8303\u56f4\u5185\u7f16\u7801\u3002\u4e3a\u4e86\u83b7\u5f97\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\u7684\u8fd0\u52a8\uff0c\u53ef\u4ee5\u5c06\u8be5\u4fe1\u606f\u4e0e\u56fe\u50cf\u5927\u5c0f\u4e00\u8d77\u7f29\u653e\u81f3[-2 * image_size, 2 * image_size]\u3002 \u5149\u6d41\u76f8\u673a\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 \u5149\u6d41\u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] \u8f93\u51fa\u5c5e\u6027 \u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes \u5305\u542b\u4e24\u4e2a\u6d6e\u70b9\u503c\u7684 BGRA 64 \u4f4d\u50cf\u7d20\u6570\u7ec4\u3002","title":"\u4f20\u611f\u5668\u53c2\u8003"},{"location":"ref_sensors/#_1","text":"\u78b0\u649e\u68c0\u6d4b\u5668 \u6df1\u5ea6\u76f8\u673a \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668 \u60ef\u6027\u6d4b\u91cf\u5355\u5143\u4f20\u611f\u5668 \u8f66\u9053\u5165\u4fb5\u68c0\u6d4b\u5668 \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u969c\u788d\u7269\u68c0\u6d4b\u5668 \u96f7\u8fbe\u4f20\u611f\u5668 RGB\u76f8\u673a \u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u8bed\u4e49\u5206\u5272\u76f8\u673a \u5b9e\u4f8b\u5206\u5272\u76f8\u673a \u52a8\u6001\u89c6\u89c9\u4f20\u611f\u5668\u76f8\u673a \u5149\u6d41\u76f8\u673a \u91cd\u8981 \u6240\u6709\u4f20\u611f\u5668\u90fd\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u5750\u6807\u7cfb\uff08 x - \u5411\u524d \uff0c y - \u5411\u53f3 \uff0c z - \u5411\u4e0a \uff09\uff0c\u5e76\u8fd4\u56de\u672c\u5730\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3002\u4f7f\u7528\u4efb\u4f55\u53ef\u89c6\u5316\u8f6f\u4ef6\u65f6\uff0c\u8bf7\u6ce8\u610f\u5176\u5750\u6807\u7cfb\u3002\u8bb8\u591a\u53cd\u8f6c Y \u8f74\uff0c\u56e0\u6b64\u76f4\u63a5\u53ef\u89c6\u5316\u4f20\u611f\u5668\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u955c\u50cf\u8f93\u51fa\u3002","title":"\u4f20\u611f\u5668\u53c2\u8003"},{"location":"ref_sensors/#_2","text":"\u84dd\u56fe\uff1a sensor.other.collision \u8f93\u51fa\uff1a \u6bcf\u6b21\u78b0\u649e\u7684 carla.CollisionEvent \u3002 \u6bcf\u5f53\u5176\u7236\u53c2\u4e0e\u8005\u4e0e\u4e16\u754c\u4e0a\u7684\u67d0\u4e9b\u7269\u4f53\u53d1\u751f\u78b0\u649e\u65f6\uff0c\u8be5\u4f20\u611f\u5668\u90fd\u4f1a\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u3002\u6bcf\u4e2a\u78b0\u649e\u4f20\u611f\u5668\u6bcf\u5e27\u6bcf\u6b21\u78b0\u649e\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u78b0\u649e\u4e8b\u4ef6\u3002\u901a\u8fc7\u4e0e\u591a\u4e2a\u5176\u4ed6\u53c2\u4e0e\u8005\u7684\u78b0\u649e\uff0c\u53ef\u4ee5\u5728\u5355\u4e2a\u5e27\u4e2d\u4ea7\u751f\u591a\u4e2a\u78b0\u649e\u4e8b\u4ef6\u3002\u4e3a\u4e86\u786e\u4fdd\u68c0\u6d4b\u5230\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u78b0\u649e\uff0c\u670d\u52a1\u5668\u4e3a\u5efa\u7b51\u7269\u6216\u704c\u6728\u4e1b\u7b49\u5143\u7d20\u521b\u5efa\u201c\u5047\u201d\u53c2\u4e0e\u8005\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u68c0\u7d22\u8bed\u4e49\u6807\u7b7e\u6765\u8bc6\u522b\u5b83\u3002 \u78b0\u649e\u68c0\u6d4b\u5668\u6ca1\u6709\u4efb\u4f55\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u3002","title":"\u78b0\u649e\u68c0\u6d4b\u5668"},{"location":"ref_sensors/#_3","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u6d4b\u91cf\u78b0\u649e\u7684\u53c2\u4e0e\u8005\uff08\u4f20\u611f\u5668\u7684\u7236\u7ea7\uff09\u3002 other_actor carla.Actor \u4e0e\u7236\u7ea7\u76f8\u649e\u7684\u53c2\u4e0e\u8005\u3002 normal_impulse carla.Vector3D \u78b0\u649e\u7684\u6b63\u5e38\u8109\u51b2\u7ed3\u679c\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_4","text":"\u84dd\u56fe\uff1a sensor.camera.depth \u8f93\u51fa\uff1a \u6bcf\u6b65\u7684\u56fe\u50cf carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u76f8\u673a\u63d0\u4f9b\u573a\u666f\u7684\u539f\u59cb\u6570\u636e\uff0c\u7f16\u7801\u6bcf\u4e2a\u50cf\u7d20\u5230\u76f8\u673a\u7684\u8ddd\u79bb\uff08\u4e5f\u79f0\u4e3a \u6df1\u5ea6\u7f13\u51b2\u533a \u6216 z \u7f13\u51b2\u533a \uff09\u4ee5\u521b\u5efa\u5143\u7d20\u7684\u6df1\u5ea6\u56fe\u3002 \u8be5\u56fe\u50cf\u4f7f\u7528 RGB \u989c\u8272\u7a7a\u95f4\u7684 3 \u4e2a\u901a\u9053\uff08\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff09\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u7f16\u7801\uff1a R -> G -> B \u3002\u4ee5\u7c73\u4e3a\u5355\u4f4d\u7684\u5b9e\u9645\u8ddd\u79bb\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u89e3\u7801\uff1a normalized = (R + G * 256 + B * 256 * 256) / (256 * 256 * 256 - 1) in_meters = 1000 * normalized \u7136\u540e\uff0c\u5e94\u4f7f\u7528 carla.colorConverter \u5c06\u8f93\u51fa carla.Image \u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u8be5 carla.colorConverter \u4f1a\u5c06\u5b58\u50a8\u5728 RGB \u901a\u9053\u4e2d\u7684\u8ddd\u79bb\u8f6c\u6362\u4e3a\u5305\u542b\u8be5\u8ddd\u79bb\u7684 [0,1] \u6d6e\u70b9\u6570\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u3002 carla.colorConverter \u4e2d\u6709\u4e24\u4e2a\u9009\u9879\u53ef\u83b7\u53d6\u6df1\u5ea6\u89c6\u56fe\uff1a Depth \u548c Logaritmic depth \u3002\u4e24\u8005\u7684\u7cbe\u5ea6\u90fd\u662f\u6beb\u7c73\u7ea7\u7684\uff0c\u4f46\u5bf9\u6570\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u66f4\u8fd1\u7684\u7269\u4f53\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\u3002 ... raw_image.save_to_disk(\"path/to/save/converted/image\",carla.Depth)","title":"\u6df1\u5ea6\u76f8\u673a"},{"location":"ref_sensors/#_5","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u76f8\u673a\u57fa\u672c\u5c5e\u6027"},{"location":"ref_sensors/#_6","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0]","title":"\u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027"},{"location":"ref_sensors/#_7","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_8","text":"\u84dd\u56fe\uff1a sensor.other.gnss Output: \u6bcf\u4e00\u6b65\u7684\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u7684\u6d4b\u91cf carla.GNSSMeasurement \uff08 sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u62a5\u544a\u5176\u7236\u5bf9\u8c61\u7684\u5f53\u524d gnss \u4f4d\u7f6e \u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u5ea6\u91cf\u4f4d\u7f6e\u6dfb\u52a0\u5230 OpenDRIVE \u5730\u56fe\u5b9a\u4e49\u4e2d\u5b9a\u4e49\u7684\u521d\u59cb\u5730\u7406\u53c2\u8003\u4f4d\u7f6e\u6765\u8ba1\u7b97\u7684\u3002","title":"\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668"},{"location":"ref_sensors/#_9","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 noise_alt_bias float 0.0 \u6d77\u62d4\u9ad8\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_alt_stddev float 0.0 \u6d77\u62d4\u9ad8\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_lat_bias float 0.0 \u7eac\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_lat_stddev float 0.0 \u7eac\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_lon_bias float 0.0 \u7ecf\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\u3002 noise_lon_stddev float 0.0 \u7ecf\u5ea6\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_seed int 0 \u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u5c5e\u6027"},{"location":"ref_sensors/#_10","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 latitude double \u53c2\u4e0e\u8005\u7684\u7eac\u5ea6\u3002 longitude double \u53c2\u4e0e\u8005\u7684\u7ecf\u5ea6\u3002 altitude double \u53c2\u4e0e\u8005\u7684\u6d77\u62d4\u9ad8\u5ea6\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_11","text":"\u84dd\u56fe\uff1a sensor.other.imu \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65\u7684\u60ef\u6027\u6d4b\u91cf\u5355\u5143\u7684\u6d4b\u91cf\u503c carla.IMUMeasurement \uff08\u9664\u975e\u4f20\u611f\u5668\u6ef4\u7b54\u4fe1\u53f7 sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u63d0\u4f9b\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u5c06\u4e3a\u7236\u5bf9\u8c61\u68c0\u7d22\u7684\u6d4b\u91cf\u503c\u3002\u6570\u636e\u662f\u4ece\u5bf9\u8c61\u7684\u5f53\u524d\u72b6\u6001\u6536\u96c6\u7684\u3002","title":"\u60ef\u6027\u6d4b\u91cf\u5355\u5143\u4f20\u611f\u5668"},{"location":"ref_sensors/#_12","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 noise_accel_stddev_x float 0.0 \u52a0\u901f\u5ea6\uff08X \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_accel_stddev_y float 0.0 \u52a0\u901f\u5ea6\uff08Y \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_accel_stddev_z float 0.0 \u52a0\u901f\u5ea6\uff08Z \u8f74\uff09\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002 noise_gyro_bias_x float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08X \u8f74\uff09\u3002 noise_gyro_bias_y float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08Y \u8f74\uff09\u3002 noise_gyro_bias_z float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u53c2\u6570\uff08Z \u8f74\uff09\u3002 noise_gyro_stddev_x float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08X \u8f74\uff09\u3002 noise_gyro_stddev_y float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08Y \u8f74\uff09\u3002 noise_gyro_stddev_z float 0.0 \u9640\u87ba\u4eea\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u6807\u51c6\u504f\u5dee\u53c2\u6570\uff08Z \u8f74\uff09\u3002 noise_seed int 0 \u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u60ef\u6027\u6d4b\u91cf\u5355\u5143\u5c5e\u6027"},{"location":"ref_sensors/#_13","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 accelerometer carla.Vector3D \u6d4b\u91cf\u7ebf\u6027\u52a0\u901f\u5ea6\uff08\u4ee5 m/s^2 \u4e3a\u5355\u4f4d\uff09\u3002 gyroscope carla.Vector3D \u6d4b\u91cf\u89d2\u901f\u5ea6\uff08\u4ee5 rad/sec \u4e3a\u5355\u4f4d\uff09\u3002 compass float \u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d\u7684\u65b9\u5411\u3002\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5317\u662f (0.0, -1.0, 0.0) \u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_14","text":"\u84dd\u56fe\uff1a sensor.other.lane_invasion \u8f93\u51fa\uff1a \u6bcf\u6b21\u4ea4\u53c9\u8def\u53e3\u7684 carla.LaneInvasionEvent \u3002 \u6bcf\u6b21\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u90fd\u4f1a\u6ce8\u518c\u4e00\u4e2a\u4e8b\u4ef6\u3002\u4f20\u611f\u5668\u4f7f\u7528\u5730\u56fe\u7684 OpenDRIVE \u63cf\u8ff0\u63d0\u4f9b\u7684\u9053\u8def\u6570\u636e\uff0c\u901a\u8fc7\u8003\u8651\u8f66\u8f6e\u4e4b\u95f4\u7684\u7a7a\u95f4\u6765\u786e\u5b9a\u4e3b\u8f66\u8f86\u662f\u5426\u6b63\u5728\u4fb5\u5165\u53e6\u4e00\u8f66\u9053\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u4e8b\u60c5\u9700\u8981\u8003\u8651\uff1a OpenDRIVE \u6587\u4ef6\u548c\u5730\u56fe\u4e4b\u95f4\u7684\u5dee\u5f02\u5c06\u5bfc\u81f4\u4e0d\u89c4\u5219\u73b0\u8c61\uff0c\u4f8b\u5982\u5728\u5730\u56fe\u4e2d\u4e0d\u53ef\u89c1\u7684\u4ea4\u53c9\u8f66\u9053\u3002 \u8f93\u51fa\u68c0\u7d22\u4ea4\u53c9\u8f66\u9053\u6807\u8bb0\u5217\u8868\uff1a\u8ba1\u7b97\u5728 OpenDRIVE \u4e2d\u5b8c\u6210\uff0c\u5e76\u5c06\u56db\u4e2a\u8f66\u8f6e\u4e4b\u95f4\u7684\u6574\u4e2a\u7a7a\u95f4\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u6709\u4e0d\u6b62\u4e00\u6761\u8f66\u9053\u540c\u65f6\u7a7f\u8fc7\u3002 \u8be5\u4f20\u611f\u5668\u6ca1\u6709\u4efb\u4f55\u53ef\u914d\u7f6e\u5c5e\u6027\u3002 \u91cd\u8981 \u8be5\u4f20\u611f\u5668\u5b8c\u5168\u5728\u5ba2\u6237\u7aef\u5de5\u4f5c\u3002","title":"\u8f66\u9053\u4fb5\u5165\u68c0\u6d4b\u5668"},{"location":"ref_sensors/#_15","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u4fb5\u5165\u53e6\u4e00\u8f66\u9053\u7684\u8f66\u8f86\uff08\u7236\u53c2\u4e0e\u8005\uff09\u3002 crossed_lane_markings list( carla.LaneMarking ) \u5df2\u7a7f\u8d8a\u7684\u8f66\u9053\u6807\u8bb0\u5217\u8868\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_16","text":"\u84dd\u56fe\uff1a sensor.lidar.ray_cast \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.LidarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u5305\u542b\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5728\u67d0\u4e2a\u65f6\u95f4\u95f4\u9694\u5185\u751f\u6210\u7684\u6240\u6709\u70b91/FPS\u3002\u5728\u6b64\u95f4\u9694\u671f\u95f4\uff0c\u7269\u7406\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u6d4b\u91cf\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u53cd\u6620\u573a\u666f\u7684\u76f8\u540c\u201c\u9759\u6001\u56fe\u7247\u201d\u3002 points_per_channel_each_step = points_per_second / (FPS * channels) \u6b64\u8f93\u51fa\u5305\u542b\u4eff\u771f\u70b9\u4e91\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u4ee5\u68c0\u7d22\u5b83\u4eec\u7684\u5217\u8868 carla.Location \uff1a for location in lidar_measurement: print(location) \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u7684\u4fe1\u606f\u88ab\u7f16\u7801\u4e3a 4D \u70b9\u3002\u524d\u4e09\u4e2a\u662f xyz \u5750\u6807\u4e2d\u7684\u7a7a\u95f4\u70b9\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u65c5\u884c\u8fc7\u7a0b\u4e2d\u7684\u5f3a\u5ea6\u635f\u5931\u3002\u8be5\u5f3a\u5ea6\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\u3002 a \u2014 \u8870\u51cf\u7cfb\u6570\u3002\u8fd9\u53ef\u80fd\u53d6\u51b3\u4e8e\u4f20\u611f\u5668\u7684\u6ce2\u957f\u548c\u5927\u6c14\u6761\u4ef6\u3002\u53ef\u4ee5\u4f7f\u7528\u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027\u5bf9\u5176\u8fdb\u884c\u4fee\u6539 atmosphere_attenuation_rate \u3002 d \u2014 \u4ece\u51fb\u4e2d\u70b9\u5230\u4f20\u611f\u5668\u7684\u8ddd\u79bb \u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u771f\u5b9e\u611f\uff0c\u53ef\u4ee5\u5220\u9664\u4e91\u4e2d\u7684\u70b9\u3002\u8fd9\u662f\u6a21\u62df\u5916\u90e8\u6270\u52a8\u9020\u6210\u7684\u635f\u5931\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u8fd9\u53ef\u4ee5\u7ed3\u5408\u4e24\u4e2a\u4e0d\u540c\u7684\u6765\u5b8c\u6210\u3002 General drop-off \u2014 \u968f\u673a\u6389\u843d\u7684\u5206\u6570\u6bd4\u4f8b\u3002\u8fd9\u662f\u5728\u8ddf\u8e2a\u4e4b\u524d\u5b8c\u6210\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u4f1a\u8ba1\u7b97\u88ab\u4e22\u5f03\u7684\u70b9\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002\u5982\u679c\u662f dropoff_general_rate = 0.5 \uff0c\u5219\u6263\u6389\u4e00\u534a\u7684\u5206\u6570\u3002 Instensity-based drop-off \u2014 \u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u6bcf\u4e2a\u70b9\uff0c\u6839\u636e\u8ba1\u7b97\u7684\u5f3a\u5ea6\u7684\u6982\u7387\u6267\u884c\u989d\u5916\u7684\u4e0b\u964d\u3002\u8be5\u6982\u7387\u7531\u4e24\u4e2a\u53c2\u6570\u786e\u5b9a\u3002 dropoff_zero_intensity \u662f\u5f3a\u5ea6\u4e3a\u96f6\u7684\u70b9\u88ab\u4e22\u5f03\u7684\u6982\u7387\u3002 dropoff_intensity_limit \u662f\u9608\u503c\u5f3a\u5ea6\uff0c\u8d85\u8fc7\u8be5\u9608\u503c\u5c06\u4e0d\u4f1a\u6389\u843d\u4efb\u4f55\u5206\u6570\u3002\u8303\u56f4\u5185\u7684\u70b9\u88ab\u4e22\u5f03\u7684\u6982\u7387\u662f\u57fa\u4e8e\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u7ebf\u6027\u6bd4\u4f8b\u3002 \u6b64\u5916\uff0c\u8be5 noise_stddev \u5c5e\u6027\u8fd8\u4f7f\u566a\u58f0\u6a21\u578b\u80fd\u591f\u6a21\u62df\u73b0\u5b9e\u4f20\u611f\u5668\u4e2d\u51fa\u73b0\u7684\u610f\u5916\u504f\u5dee\u3002\u5bf9\u4e8e\u6b63\u503c\uff0c\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u6cbf\u7740\u6fc0\u5149\u5c04\u7ebf\u7684\u77e2\u91cf\u968f\u673a\u6270\u52a8\u3002\u7ed3\u679c\u662f\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u5177\u6709\u5b8c\u7f8e\u7684\u89d2\u5ea6\u5b9a\u4f4d\uff0c\u4f46\u8ddd\u79bb\u6d4b\u91cf\u5b58\u5728\u566a\u97f3\u3002 \u53ef\u4ee5\u8c03\u6574\u6fc0\u5149\u96f7\u8fbe\u7684\u65cb\u8f6c\u4ee5\u8986\u76d6\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u7684\u7279\u5b9a\u89d2\u5ea6\uff08\u4f7f\u7528 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff09\u3002\u4f8b\u5982\uff0c\u6bcf\u6b65\u65cb\u8f6c\u4e00\u6b21\uff08\u6574\u5708\u8f93\u51fa\uff0c\u5982\u4e0b\u56fe\uff09\uff0c\u65cb\u8f6c\u9891\u7387\u548c\u4eff\u771f\u7684 FPS \u5e94\u8be5\u76f8\u7b49\u3002 1. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u9891\u7387 sensors_bp['lidar'][0].set_attribute('rotation_frequency','10') . 2. \u4f7f\u7528 python3 config.py --fps=10 \u8fd0\u884c\u4eff\u771f\u3002","title":"\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668"},{"location":"ref_sensors/#_17","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 channels int 32 \u6fc0\u5149\u5668\u6570\u91cf\u3002 range float 10.0 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff08CARLA 0.9.6 \u6216\u66f4\u4f4e\u7248\u672c\u4e3a\u5398\u7c73\uff09\u3002 points_per_second int 56000 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 rotation_frequency float 10.0 \u6fc0\u5149\u96f7\u8fbe\u65cb\u8f6c\u9891\u7387\u3002 upper_fov float 10.0 \u6700\u9ad8\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 lower_fov float -30.0 \u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 horizontal_fov float 360.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c0 - 360\u3002 atmosphere_attenuation_rate float 0.004 \u6d4b\u91cf\u6bcf\u7c73\u6fc0\u5149\u96f7\u8fbe\u5f3a\u5ea6\u635f\u5931\u7684\u7cfb\u6570\u3002\u68c0\u67e5\u4e0a\u9762\u7684\u5f3a\u5ea6\u8ba1\u7b97\u3002 dropoff_general_rate float 0.45 \u968f\u673a\u4e22\u5f03\u7684\u70b9\u7684\u4e00\u822c\u6bd4\u4f8b\u3002 dropoff_intensity_limit float 0.8 \u5bf9\u4e8e\u57fa\u4e8e\u5f3a\u5ea6\u7684\u4e0b\u964d\uff0c\u5f3a\u5ea6\u9608\u503c\uff0c\u9ad8\u4e8e\u8be5\u503c\u5219\u4e0d\u4f1a\u4e0b\u964d\u4efb\u4f55\u70b9\u3002 dropoff_zero_intensity float 0.4 \u5bf9\u4e8e\u57fa\u4e8e\u5f3a\u5ea6\u7684\u4e0b\u964d\uff0c\u6bcf\u4e2a\u5f3a\u5ea6\u4e3a\u96f6\u7684\u70b9\u88ab\u4e0b\u964d\u7684\u6982\u7387\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 noise_stddev float 0.0 \u566a\u58f0\u6a21\u578b\u7684\u6807\u51c6\u504f\u5dee\uff0c\u7528\u4e8e\u5e72\u6270\u6cbf\u5176\u5149\u7ebf\u6295\u5c04\u77e2\u91cf\u7684\u6bcf\u4e2a\u70b9\u3002","title":"\u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027"},{"location":"ref_sensors/#_18","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 horizontal_angle float \u5f53\u524d\u5e27\u4e2d\u6fc0\u5149\u96f7\u8fbe\u7684 XY \u5e73\u9762\u4e2d\u7684\u89d2\u5ea6\uff08\u5f27\u5ea6\uff09\u3002 channels int \u6fc0\u5149\u96f7\u8fbe\u7684\u901a\u9053\uff08\u6fc0\u5149\u5668\uff09\u6570\u91cf\u3002 get_point_count(channel) int \u6bcf\u4e2a\u901a\u9053\u6355\u83b7\u6b64\u5e27\u7684\u70b9\u6570\u3002 raw_data bytes 32 \u4f4d\u6d6e\u70b9\u6570\u7ec4\uff08\u6bcf\u4e2a\u70b9\u7684 XYZI\uff09\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_19","text":"\u84dd\u56fe\uff1a sensor.other.obstacle \u8f93\u51fa\uff1a \u6bcf\u4e2a\u969c\u788d\u7269\u7684 carla.ObstacleDetectionEvent \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u6bcf\u5f53\u7236\u7ea7\u53c2\u4e0e\u8005\u524d\u65b9\u6709\u969c\u788d\u65f6\uff0c\u90fd\u4f1a\u6ce8\u518c\u4e00\u4e2a\u4e8b\u4ef6\u3002\u4e3a\u4e86\u9884\u6d4b\u969c\u788d\u7269\uff0c\u4f20\u611f\u5668\u5728\u6bcd\u8f66\u524d\u65b9\u521b\u5efa\u4e00\u4e2a\u80f6\u56ca\u5f62\u72b6\uff0c\u5e76\u7528\u5b83\u6765\u68c0\u67e5\u78b0\u649e\u3002\u4e3a\u4e86\u786e\u4fdd\u68c0\u6d4b\u5230\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u78b0\u649e\uff0c\u670d\u52a1\u5668\u4e3a\u5efa\u7b51\u7269\u6216\u704c\u6728\u4e1b\u7b49\u5143\u7d20\u521b\u5efa\u201c\u5047\u201d\u53c2\u4e0e\u8005\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u68c0\u7d22\u8bed\u4e49\u6807\u7b7e\u6765\u8bc6\u522b\u5b83\u3002 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 distance float 5 \u8f68\u8ff9\u8ddd\u79bb\u3002 hit_radius float 0.5 \u8f68\u8ff9\u7684\u534a\u5f84\u3002 only_dynamics bool False \u5982\u679c\u4e3a true\uff0c\u5219\u8f68\u8ff9\u5c06\u4ec5\u8003\u8651\u52a8\u6001\u5bf9\u8c61\u3002 debug_linetrace bool False \u5982\u679c\u4e3a true\uff0c\u5219\u8f68\u8ff9\u5c06\u53ef\u89c1\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u969c\u788d\u7269\u68c0\u6d4b\u5668"},{"location":"ref_sensors/#_20","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u8f66\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 actor carla.Actor \u68c0\u6d4b\u5230\u969c\u788d\u7269\u7684\u53c2\u4e0e\u8005\uff08\u7236\u7ea7\u53c2\u4e0e\u8005\uff09\u3002 other_actor carla.Actor \u53c2\u4e0e\u8005\u88ab\u68c0\u6d4b\u4e3a\u969c\u788d\u7269\u3002 distance float \u4ece\u53c2\u4e0e\u8005 actor \u5230\u5176\u4ed6\u53c2\u4e0e\u8005 other_actor \u7684\u8ddd\u79bb\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_21","text":"\u84dd\u56fe\uff1a sensor.other.radar \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.RadarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u4f20\u611f\u5668\u521b\u5efa\u4e00\u4e2a\u5706\u9525\u89c6\u56fe\uff0c\u8be5\u89c6\u56fe\u88ab\u8f6c\u6362\u4e3a\u89c6\u91ce\u4e2d\u7684\u5143\u7d20\u53ca\u5176\u76f8\u5bf9\u4e8e\u4f20\u611f\u5668\u7684\u901f\u5ea6\u7684\u4e8c\u7ef4\u70b9\u56fe\u3002\u8fd9\u53ef\u7528\u4e8e\u5851\u9020\u5143\u7d20\u5e76\u8bc4\u4f30\u5b83\u4eec\u7684\u8fd0\u52a8\u548c\u65b9\u5411\u3002\u7531\u4e8e\u4f7f\u7528\u6781\u5750\u6807\uff0c\u8fd9\u4e9b\u70b9\u5c06\u96c6\u4e2d\u5728\u89c6\u56fe\u4e2d\u5fc3\u5468\u56f4\u3002 \u6d4b\u91cf\u7684\u70b9\u4f5c\u4e3a carla.RadarDetection \u6570\u7ec4\u5305\u542b\u5728 carla.RadarMeasurement \u4e2d\uff0c\u8be5\u6570\u7ec4\u6307\u5b9a\u5b83\u4eec\u7684\u6781\u5750\u6807\u3001\u8ddd\u79bb\u548c\u901f\u5ea6\u3002\u96f7\u8fbe\u4f20\u611f\u5668\u63d0\u4f9b\u7684\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u8f7b\u677e\u8f6c\u6362\u4e3a numpy \u53ef\u7ba1\u7406\u7684\u683c\u5f0f\uff1a # To get a numpy [[vel, azimuth, altitude, depth],...[,,,]]: points = np.frombuffer(radar_data.raw_data, dtype=np.dtype('f4')) points = np.reshape(points, (len(radar_data), 4)) \u63d0\u4f9b\u7684\u811a\u672c manual_control.py \u4f7f\u7528\u6b64\u4f20\u611f\u5668\u6765\u663e\u793a\u6b63\u5728\u68c0\u6d4b\u7684\u70b9\uff0c\u5e76\u5728\u9759\u6001\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u767d\u8272\uff0c\u5728\u5411\u7269\u4f53\u79fb\u52a8\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u7ea2\u8272\uff0c\u5728\u8fdc\u79bb\u7269\u4f53\u65f6\u5c06\u5176\u7ed8\u5236\u4e3a\u84dd\u8272\uff1a \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 horizontal_fov float 30.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 points_per_second int 1500 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 range float 100 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 vertical_fov float 30.0 \u5782\u76f4\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002","title":"\u96f7\u8fbe\u4f20\u611f\u5668"},{"location":"ref_sensors/#_22","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 raw_data carla.RadarDetection \u68c0\u6d4b\u5230\u7684\u70b9\u5217\u8868\u3002 RadarDetection \u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 altitude float \u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u9ad8\u5ea6\u89d2\u3002 azimuth float \u65b9\u4f4d\u89d2\uff08\u4ee5\u5f27\u5ea6\u8868\u793a\uff09\u3002 depth float \u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\u3002 velocity float \u671d\u5411\u4f20\u611f\u5668\u7684\u901f\u5ea6\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#rgb","text":"\u84dd\u56fe\uff1a sensor.camera.rgb \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u201cRGB\u201d\u76f8\u673a\u5145\u5f53\u6355\u83b7\u573a\u666f\u56fe\u50cf\u7684\u5e38\u89c4\u76f8\u673a\u3002 carla.colorConverter \u5982\u679c enable_postprocess_effects \u542f\u7528\uff0c\u4e3a\u4e86\u771f\u5b9e\u611f\uff0c\u4e00\u7ec4\u540e\u5904\u7406\u6548\u679c\u5c06\u5e94\u7528\u4e8e\u56fe\u50cf\uff1a Vignette: \u4f7f\u5c4f\u5e55\u8fb9\u6846\u53d8\u6697\u3002 Grain jitter: \u4e3a\u6e32\u67d3\u6dfb\u52a0\u4e00\u4e9b\u566a\u70b9\u3002 Bloom: \u5f3a\u70c8\u7684\u5149\u7ebf\u4f1a\u707c\u70e7\u5b83\u4eec\u5468\u56f4\u7684\u533a\u57df\u3002 Auto exposure: \u4fee\u6539\u56fe\u50cf\u4f3d\u739b\u4ee5\u6a21\u62df\u773c\u775b\u5bf9\u8f83\u6697\u6216\u8f83\u4eae\u533a\u57df\u7684\u9002\u5e94\u3002 Lens flares: \u4eff\u771f\u660e\u4eae\u7269\u4f53\u5728\u955c\u5934\u4e0a\u7684\u53cd\u5c04\u3002 Depth of field: \u6a21\u7cca\u9760\u8fd1\u6216\u8fdc\u79bb\u76f8\u673a\u7684\u7269\u4f53\u3002 sensor_tick \u544a\u8bc9\u6211\u4eec\u5e0c\u671b\u4f20\u611f\u5668\u6355\u83b7\u6570\u636e\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u503c\u4e3a 1.5 \u610f\u5473\u7740\u6211\u4eec\u5e0c\u671b\u4f20\u611f\u5668\u6bcf\u534a\u79d2\u6355\u83b7\u4e00\u6b21\u6570\u636e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u503c 0.0 \u8868\u793a\u5c3d\u53ef\u80fd\u5feb\u3002","title":"RGB \u76f8\u673a"},{"location":"ref_sensors/#_23","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 bloom_intensity float 0.675 \u5149\u6655\u540e\u5904\u7406\u6548\u679c\u7684\u5f3a\u5ea6\uff0c 0.0 \u7528\u4e8e\u7981\u7528\u5b83\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 fstop float 1.4 \u76f8\u673a\u955c\u5934\u7684\u6253\u5f00\u3002\u5178\u578b\u955c\u5934\u7684\u5149\u5708 1/fstop \u4e3a f/1.2\uff08\u66f4\u5927\u7684\u5149\u5708\uff09\u3002\u8f83\u5927\u7684\u6570\u5b57\u5c06\u51cf\u5c11\u666f\u6df1\u6548\u679c\u3002 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 iso float 100.0 \u76f8\u673a\u4f20\u611f\u5668\u7684\u7075\u654f\u5ea6\u3002 gamma float 2.2 \u76f8\u673a\u7684\u76ee\u6807\u4f3d\u739b\u503c\u3002 lens_flare_intensity float 0.1 \u955c\u5934\u7729\u5149\u540e\u5904\u7406\u6548\u679c\u7684\u5f3a\u5ea6\uff0c 0.0 \u7528\u4e8e\u7981\u7528\u5b83\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002 shutter_speed float 200.0 \u76f8\u673a\u5feb\u95e8\u901f\u5ea6\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d (1.0/s)\u3002","title":"\u76f8\u673a\u57fa\u672c\u5c5e\u6027"},{"location":"ref_sensors/#_24","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0]","title":"\u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027"},{"location":"ref_sensors/#_25","text":"\u7531\u4e8e\u8fd9\u4e9b\u6548\u679c\u662f\u7531\u865a\u5e7b\u5f15\u64ce\u63d0\u4f9b\u7684\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u4ed6\u4eec\u7684\u6587\u6863\uff1a \u81ea\u52a8\u66dd\u5149 Cinematic Depth of Field Method \u989c\u8272\u5206\u7ea7\u548c\u7535\u5f71\u8272\u8c03\u6620\u5c04\u5668 \u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 min_fstop float 1.2 \u6700\u5927\u5149\u5708\u3002 blade_count int 5 \u6784\u6210\u9694\u819c\u673a\u6784\u7684\u53f6\u7247\u6570\u91cf\u3002 exposure_mode str histogram \u53ef\u4ee5\u662f manual \u6216or histogram \u3002\u66f4\u591a\u5185\u5bb9\u8bf7\u53c2\u89c1 UE4 \u6587\u6863 \u3002 exposure_compensation float Linux: +0.75 Windows: 0.0 \u66dd\u5149\u7684\u5bf9\u6570\u8c03\u6574\u30020\uff1a\u65e0\u8c03\u6574\uff0c-1\uff1a2 \u500d\u66f4\u6697\uff0c-2\uff1a4 \u66f4\u6697\uff0c1\uff1a2 \u500d\u66f4\u4eae\uff0c2\uff1a4 \u500d\u66f4\u4eae\u3002 exposure_min_bright float 10.0 \u5728 exposure_mode: \"histogram\" \u3002\u81ea\u52a8\u66dd\u5149\u7684\u6700\u4f4e\u4eae\u5ea6\u3002\u773c\u775b\u80fd\u9002\u5e94\u7684\u6700\u4f4e\u9650\u5ea6\u3002\u5fc5\u987b\u5927\u4e8e 0 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e exposure_max_bright \u3002 exposure_max_bright float 12.0 \u5728`exposure_mode: \"histogram\"`\u4e2d\u3002\u81ea\u52a8\u66dd\u5149\u7684\u6700\u5927\u4eae\u5ea6\u3002\u773c\u775b\u80fd\u9002\u5e94\u7684\u6700\u9ad8\u9650\u5ea6\u3002\u5fc5\u987b\u5927\u4e8e 0 \u4e14\u5927\u4e8e\u6216\u7b49\u4e8e `exposure_min_bright`\u3002 exposure_speed_up float 3.0 \u5728 exposure_mode: \"histogram\" \u3002\u3002\u4ece\u9ed1\u6697\u73af\u5883\u5230\u660e\u4eae\u73af\u5883\u7684\u9002\u5e94\u901f\u5ea6\u3002 exposure_speed_down float 1.0 \u5728 exposure_mode: \"histogram\" \u3002\u4ece\u660e\u4eae\u73af\u5883\u5230\u9ed1\u6697\u73af\u5883\u7684\u9002\u5e94\u901f\u5ea6\u3002 calibration_constant float 16.0 18% \u53cd\u7167\u7387\u7684\u6821\u51c6\u5e38\u6570\u3002 focal_distance float 1000.0 \u666f\u6df1\u6548\u679c\u5e94\u6e05\u6670\u7684\u8ddd\u79bb\u3002\u4ee5\u5398\u7c73\uff08\u865a\u5e7b\u5f15\u64ce\u5355\u4f4d\uff09\u4e3a\u5355\u4f4d\u6d4b\u91cf\u3002 blur_amount float 1.0 \u8fd0\u52a8\u6a21\u7cca\u7684\u5f3a\u5ea6/\u5f3a\u5ea6\u3002 blur_radius float 0.0 1080p \u5206\u8fa8\u7387\u4e0b\u7684\u534a\u5f84\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\uff0c\u6839\u636e\u8ddd\u76f8\u673a\u7684\u8ddd\u79bb\u6a21\u62df\u5927\u6c14\u6563\u5c04\u3002 motion_blur_intensity float 0.45 \u8fd0\u52a8\u6a21\u7cca\u7684\u5f3a\u5ea6 [0,1]\u3002 motion_blur_max_distortion float 0.35 \u8fd0\u52a8\u6a21\u7cca\u5f15\u8d77\u7684\u6700\u5927\u5931\u771f\u3002\u5c4f\u5e55\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\u3002 motion_blur_min_object_screen_size float 0.1 \u5bf9\u4e8e\u8fd0\u52a8\u6a21\u7cca\uff0c\u5bf9\u8c61\u5fc5\u987b\u5177\u6709\u5c4f\u5e55\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\uff0c\u8f83\u4f4e\u7684\u503c\u610f\u5473\u7740\u8f83\u5c11\u7684\u7ed8\u5236\u8c03\u7528\u3002 slope float 0.88 \u8272\u8c03\u6620\u5c04\u5668 S \u66f2\u7ebf\u7684\u9661\u5ea6\u3002\u503c\u8d8a\u5927\uff0c\u659c\u7387\u8d8a\u9661\uff08\u8d8a\u6697\uff09[0.0, 1.0]\u3002 toe float 0.55 \u8c03\u6574\u8272\u8c03\u6620\u5c04\u5668\u4e2d\u7684\u6df1\u8272 [0.0, 1.0]\u3002 shoulder float 0.26 \u8c03\u6574\u8272\u8c03\u6620\u5c04\u5668\u4e2d\u7684\u660e\u4eae\u989c\u8272 [0.0, 1.0]\u3002 black_clip float 0.0 \u4e0d\u5e94\u8c03\u6574\u6b64\u503c\u3002\u8bbe\u7f6e\u4ea4\u53c9\u53d1\u751f\u548c\u9ed1\u8272\u8272\u8c03\u5f00\u59cb\u5207\u65ad\u5176\u503c\u7684\u4f4d\u7f6e [0.0, 1.0]\u3002 white_clip float 0.04 \u8bbe\u7f6e\u4ea4\u53c9\u53d1\u751f\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u767d\u8272\u8272\u8c03\u5f00\u59cb\u5207\u65ad\u5176\u503c\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u6709\u7ec6\u5fae\u7684\u53d8\u5316 [0.0, 1.0]\u3002 temp float 6500.0 \u767d\u5e73\u8861\u4e0e\u573a\u666f\u4e2d\u5149\u7ebf\u7684\u6e29\u5ea6\u6709\u5173\u3002 \u767d\u5149 \uff1a\u5f53\u4e0e\u5149\u6e29\u5339\u914d\u65f6\u3002 \u6696\u5149 \uff1a\u5f53\u9ad8\u4e8e\u573a\u666f\u4e2d\u7684\u5149\u7ebf\u65f6\uff0c\u5448\u6de1\u9ec4\u8272\u3002 \u51b7\u5149 \uff1a\u4f4e\u4e8e\u5149\u7ebf\u65f6\u3002\u84dd\u8272\u3002 tint float 0.0 \u767d\u5e73\u8861\u6e29\u5ea6\u8272\u8c03\u3002\u8c03\u6574\u9752\u8272\u548c\u6d0b\u7ea2\u8272\u7684\u989c\u8272\u8303\u56f4\u3002\u8fd9\u5e94\u8be5\u4e0e\u767d\u5e73\u8861\u6e29\u5ea6\u5c5e\u6027\u4e00\u8d77\u4f7f\u7528\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u989c\u8272\u3002\u5728\u67d0\u4e9b\u5149\u6e29\u4e0b\uff0c\u989c\u8272\u53ef\u80fd\u770b\u8d77\u6765\u66f4\u9ec4\u6216\u66f4\u84dd\u3002\u8fd9\u53ef\u7528\u4e8e\u5e73\u8861\u6700\u7ec8\u7684\u989c\u8272\uff0c\u4f7f\u5176\u770b\u8d77\u6765\u66f4\u81ea\u7136\u3002 chromatic_aberration_intensity float 0.0 \u7528\u4e8e\u63a7\u5236\u8272\u5f69\u504f\u79fb\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u5728\u5c4f\u5e55\u8fb9\u6846\u4e0a\u66f4\u660e\u663e\u3002 chromatic_aberration_offset float 0.0 \u5230\u53d1\u751f\u6548\u679c\u7684\u56fe\u50cf\u4e2d\u5fc3\u7684\u6b63\u5219\u5316\u8ddd\u79bb\u3002 enable_postprocess_effects bool True \u540e\u5904\u7406\u6548\u679c\u6fc0\u6d3b\u3002","title":"\u9ad8\u7ea7\u76f8\u673a\u5c5e\u6027"},{"location":"ref_sensors/#_26","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_27","text":"\u84dd\u56fe\uff1a sensor.other.rss \u8f93\u51fa\uff1a \u6bcf\u4e00\u6b65 carla.RssResponse \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u91cd\u8981 \u5f3a\u70c8\u5efa\u8bae\u5728\u9605\u8bfb\u672c\u6587\u4e4b\u524d\u5148\u9605\u8bfb\u5177\u4f53\u7684 \u4efb\u654f\u611f\u5b89\u5168\u6587\u6863 \u3002 \u8be5\u4f20\u611f\u5668\u96c6\u6210\u4e86 CARLA \u4e2d\u7684 \u8d23\u4efb\u654f\u611f\u5b89\u5168 C++ \u5e93 \u3002\u5b83\u5728 CARLA \u4e2d\u9ed8\u8ba4\u88ab\u7981\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u663e\u5f0f\u6784\u5efa\u624d\u80fd\u4f7f\u7528\u3002 \u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668\u8ba1\u7b97\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u72b6\u6001\u5e76\u68c0\u7d22\u5f53\u524d\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u54cd\u5e94\u4f5c\u4e3a\u4f20\u611f\u5668\u6570\u636e\u3002 carla.RssRestrictor \u5c06\u4f7f\u7528\u6b64\u6570\u636e\u6765\u8c03\u6574 carla.VehicleControl \uff0c\u7136\u540e\u518d\u5c06\u5176\u5e94\u7528\u4e8e\u8f66\u8f86\u3002 \u8fd9\u4e9b\u63a7\u5236\u5668\u53ef\u4ee5\u901a\u8fc7 \u81ea\u52a8\u9a7e\u9a76 \u5806\u6808\u6216\u7528\u6237\u8f93\u5165\u751f\u6210\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6709\u4e00\u6bb5\u6765\u81ea \u7684\u4ee3\u7801\u7247\u6bb5 PythonAPI/examples/rss/manual_control_rss.py \uff0c\u5176\u4e2d\u5728\u5fc5\u8981\u65f6\u4f7f\u7528\u8d23\u4efb\u654f\u611f\u5b89\u5168\u4fee\u6539\u7528\u6237\u8f93\u5165\u3002 1. \u68c0\u67e5 RssSensor \u662f\u5426\u751f\u6210\u5305\u542b\u9650\u5236\u7684\u6709\u6548\u54cd\u5e94\u3002 2. \u6536\u96c6\u8f66\u8f86\u7684\u5f53\u524d\u52a8\u6001\u548c\u8f66\u8f86\u7269\u7406\u7279\u6027\u3002 3. \u4f7f\u7528 RssSensor \u7684\u54cd\u5e94\u4ee5\u53ca\u8f66\u8f86\u5f53\u524d\u7684\u52a8\u6001\u548c\u7269\u7406\u7279\u6027\u5bf9\u8f66\u8f86\u63a7\u5236\u65bd\u52a0\u9650\u5236\u3002 rss_proper_response = self._world.rss_sensor.proper_response if self._world.rss_sensor and self._world.rss_sensor.response_valid else None if rss_proper_response: ... vehicle_control = self._restrictor.restrict_vehicle_control( vehicle_control, rss_proper_response, self._world.rss_sensor.ego_dynamics_on_route, self._vehicle_physics)","title":"\u8d23\u4efb\u654f\u611f\u5b89\u5168\u4f20\u611f\u5668"},{"location":"ref_sensors/#carlarsssensor","text":"\u8be5\u4f20\u611f\u5668\u7684\u84dd\u56fe\u6ca1\u6709\u53ef\u4fee\u6539\u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u5b83\u5b9e\u4f8b\u5316\u7684 carla.RssSensor \u5bf9\u8c61\u5177\u6709 Python API \u53c2\u8003\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u6458\u8981\u3002 carla.RssSensor \u53d8\u91cf \u7c7b\u578b \u63cf\u8ff0 ego_vehicle_dynamics ad.rss.world.RssDynamics \u5e94\u7528\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 other_vehicle_dynamics ad.rss.world.RssDynamics \u9002\u7528\u4e8e\u5176\u4ed6\u8f66\u8f86\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 pedestrian_dynamics ad.rss.world.RssDynamics \u9002\u7528\u4e8e\u884c\u4eba\u7684\u8d23\u4efb\u654f\u611f\u5b89\u5168\u53c2\u6570 road_boundaries_mode carla.RssRoadBoundariesMode \u542f\u7528/\u7981\u7528 \u7559\u5728\u9053\u8def\u4e0a \u529f\u80fd\u3002\u9ed8\u8ba4\u4e3a \u5173\u95ed \u3002 # Fragment of rss_sensor.py # The carla.RssSensor is updated when listening for a new carla.RssResponse def _on_rss_response(weak_self, response): ... self.timestamp = response.timestamp self.response_valid = response.response_valid self.proper_response = response.proper_response self.ego_dynamics_on_route = response.ego_dynamics_on_route self.rss_state_snapshot = response.rss_state_snapshot self.situation_snapshot = response.situation_snapshot self.world_model = response.world_model \u8b66\u544a \u8be5\u4f20\u611f\u5668\u5728\u5ba2\u6237\u7aef\u5b8c\u5168\u5de5\u4f5c\u3002\u670d\u52a1\u5668\u4e2d\u6ca1\u6709\u84dd\u56fe\u3002\u5bf9\u5c5e\u6027\u7684\u66f4\u6539\u5c06\u5728\u8c03\u7528 listen() \u540e \u751f\u6548\u3002 \u6b64\u7c7b\u4e2d\u53ef\u7528\u7684\u65b9\u6cd5\u4e0e\u8f66\u8f86\u7684\u8def\u7ebf\u6709\u5173\u3002\u8d23\u4efb\u654f\u611f\u5b89\u5168\u8ba1\u7b97\u59cb\u7ec8\u57fa\u4e8e\u672c\u8f66\u901a\u8fc7\u9053\u8def\u7f51\u7edc\u7684\u8def\u7ebf\u3002 \u4f20\u611f\u5668\u5141\u8bb8\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e9b\u5173\u952e\u70b9\u6765\u63a7\u5236\u6240\u8003\u8651\u7684\u8def\u7ebf\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u53ef\u80fd\u662f carla.Transform \u4e2d\u7684 carla.Waypoint \u3002\u6700\u597d\u5728\u4ea4\u53c9\u70b9\u4e4b\u540e\u9009\u62e9\u8fd9\u4e9b\u70b9\uff0c\u4ee5\u5f3a\u5236\u8def\u7ebf\u91c7\u53d6\u6240\u9700\u7684\u8f6c\u5f2f\u3002 carla.RssSensor \u65b9\u6cd5 \u63cf\u8ff0 routing_targets \u83b7\u53d6\u7528\u4e8e\u8def\u7531\u7684\u5f53\u524d\u8def\u7531\u76ee\u6807\u5217\u8868\u3002 append_routing_target \u5c06\u9644\u52a0\u4f4d\u7f6e\u9644\u52a0\u5230\u5f53\u524d\u8def\u7531\u76ee\u6807\u3002 reset_routing_targets \u5220\u9664\u9644\u52a0\u7684\u8def\u7531\u76ee\u6807\u3002 drop_route \u653e\u5f03\u5f53\u524d\u8def\u7531\u5e76\u521b\u5efa\u4e00\u6761\u65b0\u8def\u7531\u3002 register_actor_constellation_callback \u6ce8\u518c\u56de\u8c03\u6765\u81ea\u5b9a\u4e49\u8ba1\u7b97\u3002 set_log_level \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002 set_map_log_level \u8bbe\u7f6e\u7528\u4e8e\u5730\u56fe\u76f8\u5173\u65e5\u5fd7\u7684\u65e5\u5fd7\u7ea7\u522b\u3002 # Update the current route self.sensor.reset_routing_targets() if routing_targets: for target in routing_targets: self.sensor.append_routing_target(target) \u7b14\u8bb0 \u5982\u679c\u672a\u5b9a\u4e49\u8def\u7531\u76ee\u6807\uff0c\u5219\u4f1a\u521b\u5efa\u968f\u673a\u8def\u7531\u3002","title":"carla.RssSensor \u7c7b"},{"location":"ref_sensors/#_28","text":"carla.RssResponse \u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 response_valid bool \u54cd\u5e94\u6570\u636e\u7684\u6709\u6548\u6027\u3002 proper_response ad.rss.state.ProperResponse RSS \u4e3a\u8f66\u8f86\u8ba1\u7b97\u7684\u6b63\u786e\u54cd\u5e94\uff0c\u5305\u62ec\u52a0\u901f\u9650\u5236\u3002 rss_state_snapshot ad.rss.state.RssStateSnapshot RSS \u72b6\u6001\u4e3a\u5f53\u524d\u65f6\u95f4\u70b9\u3002\u8fd9\u662f RSS \u8ba1\u7b97\u7684\u8be6\u7ec6\u7684\u5355\u72ec\u8f93\u51fa\u3002 situation_snapshot ad.rss.situation.SituationSnapshot \u5f53\u524d\u65f6\u95f4\u70b9\u7684 RSS \u60c5\u51b5\u3002\u8fd9\u662f\u7528\u4e8e RSS \u8ba1\u7b97\u7684\u7ecf\u8fc7\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\u3002 world_model ad.rss.world.WorldModel \u5f53\u524d\u65f6\u95f4\u70b9\u7684 RSS \u4e16\u754c\u6a21\u578b\u3002\u8fd9\u662f RSS \u8ba1\u7b97\u7684\u8f93\u5165\u6570\u636e\u3002 ego_dynamics_on_route carla.RssEgoDynamicsOnRoute \u5173\u4e8e\u8def\u7ebf\u7684\u5f53\u524d\u81ea\u6211\u8f66\u8f86\u52a8\u6001\u3002 \u5982\u679c\u6ce8\u518c\u4e86 actor_constellation_callback\uff0c\u5219\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u8c03\u7528\uff1a \u9ed8\u8ba4\u8ba1\u7b97 ( actor_constellation_data.other_actor=None ) \u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684\u8ba1\u7b97 # Fragment of rss_sensor.py # The function is registered as actor_constellation_callback def _on_actor_constellation_request(self, actor_constellation_data): actor_constellation_result = carla.RssActorConstellationResult() actor_constellation_result.rss_calculation_mode = ad.rss.map.RssMode.NotRelevant actor_constellation_result.restrict_speed_limit_mode = ad.rss.map.RssSceneCreation.RestrictSpeedLimitMode.IncreasedSpeedLimit10 actor_constellation_result.ego_vehicle_dynamics = self.current_vehicle_parameters actor_constellation_result.actor_object_type = ad.rss.world.ObjectType.Invalid actor_constellation_result.actor_dynamics = self.current_vehicle_parameters actor_id = -1 actor_type_id = \"none\" if actor_constellation_data.other_actor != None: # customize actor_constellation_result for specific actor ... else: # default ... return actor_constellation_result","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_29","text":"\u84dd\u56fe\uff1a sensor.lidar.ray_cast_semantic \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.SemanticLidarMeasurement \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u8be5\u4f20\u611f\u5668\u6a21\u62df\u4f7f\u7528\u5c04\u7ebf\u6295\u5c04\u5b9e\u73b0\u7684\u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\uff0c\u516c\u5f00\u6709\u5173\u5c04\u7ebf\u6295\u5c04\u547d\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u3002\u5b83\u7684\u884c\u4e3a\u4e0e \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u4e4b\u95f4\u6709\u4e24\u4e2a\u4e3b\u8981\u533a\u522b\u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u68c0\u7d22\u5230\u7684\u539f\u59cb\u6570\u636e\u6bcf\u4e2a\u70b9\u5305\u542b\u66f4\u591a\u6570\u636e\u3002 \u8be5\u70b9\u7684\u5750\u6807\uff08\u4e0e\u666e\u901a\u6fc0\u5149\u96f7\u8fbe\u4e00\u6837\uff09\u3002 \u5165\u5c04\u89d2\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u4f59\u5f26\u503c\u3002 \u5b9e\u4f8b\u548c\u8bed\u4e49\u57fa\u7840\u4e8b\u5b9e\u3002\u57fa\u672c\u4e0a\u662f CARLA \u5bf9\u8c61\u547d\u4e2d\u7684\u7d22\u5f15\u53ca\u5176\u8bed\u4e49\u6807\u7b7e\u3002 \u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u65e2\u4e0d\u5305\u542b\u5f3a\u5ea6\u3001\u8870\u51cf\u4e5f\u4e0d\u5305\u542b\u566a\u58f0\u6a21\u578b\u5c5e\u6027\u3002 \u8fd9\u4e9b\u70b9\u662f\u901a\u8fc7\u4e3a\u5782\u76f4 FOV \u4e2d\u5206\u5e03\u7684\u6bcf\u4e2a\u901a\u9053\u6dfb\u52a0\u6fc0\u5149\u6765\u8ba1\u7b97\u7684\u3002\u65cb\u8f6c\u662f\u901a\u8fc7\u8ba1\u7b97\u6fc0\u5149\u96f7\u8fbe\u5728\u4e00\u5e27\u4e2d\u65cb\u8f6c\u7684\u6c34\u5e73\u89d2\u5ea6\u6765\u6a21\u62df\u7684\u3002\u70b9\u4e91\u662f\u901a\u8fc7\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5bf9\u6bcf\u4e2a\u6fc0\u5149\u8fdb\u884c\u5149\u7ebf\u6295\u5c04\u6765\u8ba1\u7b97\u7684\u3002 points_per_channel_each_step = points_per_second / (FPS * channels) \u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u5305\u542b\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5728\u67d0\u4e2a\u65f6\u95f4 1/FPS \u95f4\u9694\u5185\u751f\u6210\u7684\u6240\u6709\u70b9\u3002\u5728\u6b64\u95f4\u9694\u671f\u95f4\uff0c\u7269\u7406\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u6d4b\u91cf\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u53cd\u6620\u573a\u666f\u7684\u76f8\u540c\u201c\u9759\u6001\u56fe\u7247\u201d\u3002 \u6b64\u8f93\u51fa\u5305\u542b\u6fc0\u5149\u96f7\u8fbe\u8bed\u4e49\u68c0\u6d4b\u4e91\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u4ee5\u68c0\u7d22\u5176\u5217\u8868 carla.SemanticLidarDetection \uff1a for detection in semantic_lidar_measurement: print(detection) \u53ef\u4ee5\u8c03\u6574\u6fc0\u5149\u96f7\u8fbe\u7684\u65cb\u8f6c\u4ee5\u8986\u76d6\u6bcf\u4e2a\u6a21\u62df\u6b65\u9aa4\u7684\u7279\u5b9a\u89d2\u5ea6\uff08\u4f7f\u7528 \u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f \uff09\u3002\u4f8b\u5982\uff0c\u6bcf\u6b65\u65cb\u8f6c\u4e00\u6b21\uff08\u6574\u5708\u8f93\u51fa\uff0c\u5982\u4e0b\u56fe\uff09\uff0c\u65cb\u8f6c\u9891\u7387\u548c\u6a21\u62df\u7684FPS\u5e94\u8be5\u76f8\u7b49\u3002 1. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u9891\u7387 sensors_bp['lidar'][0].set_attribute('rotation_frequency','10') \u3002 2. \u4f7f\u7528 python3 config.py --fps=10 \u8fd0\u884c\u4eff\u771f\u3002","title":"\u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668"},{"location":"ref_sensors/#_30","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 channels int 32 \u6fc0\u5149\u5668\u6570\u91cf\u3002 range float 10.0 \u6d4b\u91cf/\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff08CARLA 0.9.6 \u6216\u66f4\u4f4e\u7248\u672c\u4e3a\u5398\u7c73\uff09\u3002 points_per_second int 56000 \u6240\u6709\u6fc0\u5149\u5668\u6bcf\u79d2\u751f\u6210\u7684\u70b9\u3002 rotation_frequency float 10.0 \u6fc0\u5149\u96f7\u8fbe\u65cb\u8f6c\u9891\u7387\u3002 upper_fov float 10.0 \u6700\u9ad8\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 lower_fov float -30.0 \u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 horizontal_fov float 360.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\uff0c0 - 360\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u8bed\u4e49\u6fc0\u5149\u96f7\u8fbe\u5c5e\u6027"},{"location":"ref_sensors/#_31","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 horizontal_angle float \u5f53\u524d\u5e27\u4e2d LIDAR \u7684 XY \u5e73\u9762\u4e2d\u7684\u89d2\u5ea6\uff08\u5f27\u5ea6\uff09\u3002 channels int LIDAR \u7684\u901a\u9053\uff08\u6fc0\u5149\u5668\uff09\u6570\u91cf\u3002 get_point_count(channel) int \u5f53\u524d\u5e27\u4e2d\u6355\u83b7\u7684\u6bcf\u4e2a\u901a\u9053\u7684\u70b9\u6570\u3002 raw_data bytes \u5305\u542b\u5177\u6709\u5b9e\u4f8b\u548c\u8bed\u4e49\u4fe1\u606f\u7684\u70b9\u4e91\u7684\u6570\u7ec4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5b58\u50a8\u56db\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u3002 XYZ \u5750\u6807\u3002 \u5165\u5c04\u89d2\u7684\u4f59\u5f26\u3002 Unsigned int \u5305\u542b\u547d\u4e2d\u5bf9\u8c61\u7684\u7d22\u5f15\u3002 Unsigned int \u5305\u542b\u5bf9\u8c61 it \u7684\u8bed\u4e49\u6807\u7b7e\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#_32","text":"\u84dd\u56fe\uff1a sensor.camera.semantic_segmentation \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.Image \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u8be5\u6444\u50cf\u673a\u6839\u636e\u5176\u6807\u7b7e\u4ee5\u4e0d\u540c\u7684\u989c\u8272\u663e\u793a\u5b83\uff0c\u4ece\u800c\u5bf9\u53ef\u89c1\u7684\u6bcf\u4e2a\u7269\u4f53\u8fdb\u884c\u5206\u7c7b\uff08\u4f8b\u5982\uff0c\u884c\u4eba\u4e0e\u8f66\u8f86\u7684\u989c\u8272\u4e0d\u540c\uff09\u3002\u5f53\u6a21\u62df\u5f00\u59cb\u65f6\uff0c\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u4f7f\u7528\u6807\u7b7e\u521b\u5efa\u3002\u6240\u4ee5\u5f53\u6f14\u5458\u4ea7\u751f\u65f6\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5bf9\u8c61\u6309\u5176\u5728\u9879\u76ee\u4e2d\u7684\u76f8\u5bf9\u6587\u4ef6\u8def\u5f84\u8fdb\u884c\u5206\u7c7b\u3002\u4f8b\u5982\uff0c\u5b58\u50a8\u5728\u4e2d\u7684\u7f51\u683c Unreal/CarlaUE4/Content/Static/Pedestrians \u88ab\u6807\u8bb0\u4e3a Pedestrian \u3002 \u670d\u52a1\u5668\u63d0\u4f9b\u7684\u56fe\u50cf\u7684\u6807\u7b7e\u4fe1\u606f \u7f16\u7801\u5728\u7ea2\u8272\u901a\u9053\u4e2d \uff1a \u7ea2\u8272\u503c\u4e3a \u7684\u50cf\u7d20 x \u5c5e\u4e8e\u5e26\u6709\u6807\u7b7e\u7684\u5bf9\u8c61 x \u3002\u8fd9\u4e2a\u539f\u59cb\u7684 carla.Image \u53ef\u4ee5\u5728 carla.ColorConverter \u4e2d\u7684 CityScapesPalette \u7684\u5e2e\u52a9\u4e0b\u5b58\u50a8\u548c\u8f6c\u6362\uff0c\u4ee5\u5e94\u7528\u6807\u7b7e\u4fe1\u606f\u5e76\u901a\u8fc7\u8bed\u4e49\u5206\u5272\u663e\u793a\u56fe\u7247\u3002 ... raw_image.save_to_disk(\"path/to/save/converted/image\",carla.cityScapesPalette) \u76ee\u524d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6807\u7b7e\uff1a \u503c \u6807\u7b7e \u8f6c\u6362\u540e\u7684\u989c\u8272 \u63cf\u8ff0 0 Unlabeled (0, 0, 0) \u8003\u8651\u5c1a\u672a\u5206\u7c7b\u7684\u5143\u7d20 Unlabeled \u3002\u8be5\u7c7b\u522b\u5e94\u8be5\u662f\u7a7a\u7684\u6216\u81f3\u5c11\u5305\u542b\u6ca1\u6709\u51b2\u7a81\u7684\u5143\u7d20\u3002 1 Building (70, 70, 70) \u623f\u5c4b\u3001\u6469\u5929\u5927\u697c\u7b49\u5efa\u7b51\u7269\u4ee5\u53ca\u9644\u7740\u5728\u5176\u4e0a\u7684\u5143\u7d20\u3002 \u4f8b\u5982\u7a7a\u8c03\u3001\u811a\u624b\u67b6\u3001\u906e\u9633\u7bf7\u6216\u68af\u5b50\u7b49\u7b49\u3002 2 Fence (100, 40, 40) \u969c\u788d\u7269\u3001\u680f\u6746\u6216\u5176\u4ed6\u76f4\u7acb\u7ed3\u6784\u3002\u57fa\u672c\u4e0a\u662f\u5305\u56f4\u5730\u9762\u533a\u57df\u7684\u6728\u6750\u6216\u7535\u7ebf\u7ec4\u4ef6\u3002 3 Other (55, 90, 80) \u4e00\u5207\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u7684\u4e1c\u897f\u3002 4 Pedestrian (220, 20, 60) \u6b65\u884c\u6216\u4e58\u5750/\u9a7e\u9a76\u4efb\u4f55\u7c7b\u578b\u7684\u8f66\u8f86\u6216\u79fb\u52a8\u7cfb\u7edf\u7684\u4eba\u3002 \u4f8b\u5982\u81ea\u884c\u8f66\u6216\u8e0f\u677f\u8f66\u3001\u6ed1\u677f\u3001\u9a6c\u3001\u65f1\u51b0\u978b\u3001\u8f6e\u6905\u7b49\u3002 5 Pole (153, 153, 153) \u4e3b\u8981\u4e3a\u5782\u76f4\u65b9\u5411\u7684\u5c0f\u578b\u6746\u3002\u5982\u679c\u6746\u6709\u6c34\u5e73\u90e8\u5206\uff08\u901a\u5e38\u7528\u4e8e\u4ea4\u901a\u706f\u6746\uff09\uff0c\u5219\u4e5f\u88ab\u89c6\u4e3a\u6746\u3002 \u4f8b\u5982\u6807\u5fd7\u6746\u3001\u4ea4\u901a\u706f\u6746\u3002 6 RoadLine (157, 234, 50) \u9053\u8def\u4e0a\u7684\u6807\u8bb0\u3002 7 Road (128, 64, 128) \u6c7d\u8f66\u901a\u5e38\u884c\u9a76\u7684\u90e8\u5206\u5730\u9762\u3002 \u4f8b\u5982\u4efb\u4f55\u65b9\u5411\u7684\u8f66\u9053\u548c\u8857\u9053\u3002 8 SideWalk (244, 35, 232) \u6307\u5b9a\u4f9b\u884c\u4eba\u6216\u9a91\u81ea\u884c\u8f66\u8005\u4f7f\u7528\u7684\u5730\u9762\u7684\u4e00\u90e8\u5206\u3002\u4e0d\u4ec5\u901a\u8fc7\u6807\u8bb0\uff0c\u8fd8\u901a\u8fc7\u4e00\u4e9b\u969c\u788d\u7269\uff08\u4f8b\u5982\u8def\u7f18\u77f3\u6216\u6746\u5b50\uff09\u5c06\u9053\u8def\u4e0e\u9053\u8def\u5206\u9694\u5f00\u3002\u8be5\u6807\u7b7e\u5305\u62ec\u53ef\u80fd\u5212\u5b9a\u7684\u8def\u8fb9\u3001\u4ea4\u901a\u5c9b\uff08\u6b65\u884c\u90e8\u5206\uff09\u548c\u6b65\u884c\u533a\u3002 9 Vegetation (107, 142, 35) \u6811\u6728\u3001\u6811\u7bf1\u3001\u5404\u79cd\u5782\u76f4\u690d\u88ab\u3002\u8003\u8651\u5730\u9762\u690d\u88ab Terrain \u3002 10 Vehicles (0, 0, 142) \u6c7d\u8f66\u3001\u8d27\u8f66\u3001\u5361\u8f66\u3001\u6469\u6258\u8f66\u3001\u81ea\u884c\u8f66\u3001\u516c\u5171\u6c7d\u8f66\u3001\u706b\u8f66\u3002 11 Wall (102, 102, 156) \u72ec\u7acb\u7684\u7acb\u5899\u3002\u4e0d\u662f\u5efa\u7b51\u7269\u7684\u4e00\u90e8\u5206\u3002 12 TrafficSign (220, 220, 0) \u7531\u5dde/\u5e02\u5f53\u5c40\u5b89\u88c5\u7684\u6807\u5fd7\uff0c\u901a\u5e38\u7528\u4e8e\u4ea4\u901a\u7ba1\u5236\u3002\u6b64\u7c7b\u522b\u4e0d\u5305\u62ec\u9644\u6709\u6807\u5fd7\u7684\u6746\u3002 \u4f8b\u5982\u4ea4\u901a\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u3001\u65b9\u5411\u6807\u5fd7... 13 Sky (70, 130, 180) \u5f00\u9614\u7684\u5929\u7a7a\u3002\u5305\u62ec\u4e91\u548c\u592a\u9633\u3002 14 Ground (81, 0, 81) \u4e0e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u4e0d\u5339\u914d\u7684\u4efb\u4f55\u6c34\u5e73\u5730\u9762\u7ed3\u6784\u3002\u4f8b\u5982\uff0c\u8f66\u8f86\u548c\u884c\u4eba\u5171\u4eab\u7684\u533a\u57df\uff0c\u6216\u901a\u8fc7\u8def\u7f18\u4e0e\u9053\u8def\u5206\u9694\u7684\u5e73\u5766\u73af\u5c9b\u3002 15 Bridge (150, 100, 100) \u53ea\u6709\u6865\u7684\u7ed3\u6784\u3002\u6805\u680f\u3001\u4eba\u3001\u8f66\u8f86\u4ee5\u53ca\u5176\u4e0a\u7684\u5176\u4ed6\u5143\u7d20\u90fd\u88ab\u5355\u72ec\u6807\u8bb0\u3002 16 RailTrack (230, 150, 140) \u5404\u79cd\u975e\u6c7d\u8f66\u884c\u9a76\u7684\u94c1\u8f68\u3002 \u4f8b\u5982\u5730\u94c1\u548c\u706b\u8f66\u94c1\u8f68\u3002 17 GuardRail (180, 165, 180) \u6240\u6709\u7c7b\u578b\u7684\u62a4\u680f/\u9632\u649e\u680f\u3002 18 TrafficLight (250, 170, 30) \u6ca1\u6709\u706f\u6746\u7684\u4ea4\u901a\u706f\u7bb1\u3002 19 Static (110, 190, 160) \u573a\u666f\u4e2d\u7684\u5143\u7d20\u548c\u9053\u5177\u662f\u4e0d\u53ef\u79fb\u52a8\u7684\u3002 \u4f8b\u5982\u6d88\u9632\u6813\u3001\u56fa\u5b9a\u957f\u51f3\u3001\u55b7\u6cc9\u3001\u516c\u4ea4\u8f66\u7ad9\u7b49\u3002 20 Dynamic (170, 120, 50) \u4f4d\u7f6e\u5bb9\u6613\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5143\u7d20\u3002 \u4f8b\u5982\u53ef\u79fb\u52a8\u5783\u573e\u6876\u3001\u624b\u63a8\u8f66\u3001\u888b\u5b50\u3001\u8f6e\u6905\u3001\u52a8\u7269\u7b49\u3002 21 Water (45, 60, 150) \u6c34\u5e73\u6c34\u9762\u3002 \u4f8b\u5982\u6e56\u6cca\u3001\u6d77\u6d0b\u3001\u6cb3\u6d41\u3002 22 Terrain (145, 170, 100) \u8349\u3001\u5730\u9762\u690d\u88ab\u3001\u571f\u58e4\u6216\u6c99\u5b50\u3002\u8fd9\u4e9b\u533a\u57df\u4e0d\u9002\u5408\u884c\u9a76\u3002\u8be5\u6807\u7b7e\u5305\u62ec\u53ef\u80fd\u7684\u9650\u5236\u6027\u8def\u7f18\u77f3\u3002 \u7b14\u8bb0 \u9605\u8bfb \u672c \u6559\u7a0b\u4ee5\u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e\u3002","title":"\u8bed\u4e49\u5206\u5272\u76f8\u673a"},{"location":"ref_sensors/#_33","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u58f0\uff09\u3002","title":"\u76f8\u673a\u57fa\u672c\u5c5e\u6027"},{"location":"ref_sensors/#_34","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0]","title":"\u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027"},{"location":"ref_sensors/#_35","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes BGRA 32 \u4f4d\u50cf\u7d20\u9635\u5217\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u6a21\u62df\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"ref_sensors/#dvs","text":"\u84dd\u56fe\uff1a sensor.camera.dvs \u8f93\u51fa\uff1a \u6bcf\u6b65 carla.DVSEventArray \uff08\u9664\u975e sensor_tick \u53e6\u6709\u8bf4\u660e\uff09\u3002 \u52a8\u6001\u89c6\u89c9\u4f20\u611f\u5668\u6216\u4e8b\u4ef6\u76f8\u673a\u662f\u4e00\u79cd\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4f20\u7edf\u76f8\u673a\u5b8c\u5168\u4e0d\u540c\u7684\u4f20\u611f\u5668\u3002\u4e8b\u4ef6\u76f8\u673a\u4e0d\u662f\u4ee5\u56fa\u5b9a\u901f\u7387\u6355\u83b7\u5f3a\u5ea6\u56fe\u50cf\uff0c\u800c\u662f\u4ee5\u4e8b\u4ef6\u6d41\u7684\u5f62\u5f0f\u5f02\u6b65\u6d4b\u91cf\u5f3a\u5ea6\u53d8\u5316\uff0c\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u7684\u4eae\u5ea6\u53d8\u5316\u8fdb\u884c\u7f16\u7801\u3002\u4e0e\u6807\u51c6\u6444\u50cf\u673a\u76f8\u6bd4\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u5177\u6709\u72ec\u7279\u7684\u5c5e\u6027\u3002\u5b83\u4eec\u5177\u6709\u975e\u5e38\u9ad8\u7684\u52a8\u6001\u8303\u56f4\uff08140 dB \u4e0e 60 dB\uff09\u3001\u65e0\u8fd0\u52a8\u6a21\u7cca\u548c\u9ad8\u65f6\u95f4\u5206\u8fa8\u7387\uff08\u5fae\u79d2\u7ea7\uff09\u3002\u56e0\u6b64\uff0c\u4e8b\u4ef6\u76f8\u673a\u662f\u5373\u4f7f\u5728\u5177\u6709\u6311\u6218\u6027\u7684\u9ad8\u901f\u573a\u666f\u548c\u9ad8\u52a8\u6001\u8303\u56f4\u73af\u5883\u4e0b\u4e5f\u80fd\u63d0\u4f9b\u9ad8\u8d28\u91cf\u89c6\u89c9\u4fe1\u606f\u7684\u4f20\u611f\u5668\uff0c\u4e3a\u57fa\u4e8e\u89c6\u89c9\u7684\u7b97\u6cd5\u63d0\u4f9b\u4e86\u65b0\u7684\u5e94\u7528\u9886\u57df\u3002 DVS \u6444\u50cf\u673a\u8f93\u51fa\u4e8b\u4ef6\u6d41\u3002\u5f53\u5bf9\u6570\u5f3a\u5ea6\u7684\u53d8\u5316\u8fbe\u5230\u9884\u5b9a\u4e49\u7684\u6052\u5b9a\u9608\u503c\uff08\u901a\u5e38\u5728 15% \u5230 30% \u4e4b\u95f4\uff09\u65f6\uff0c\u5728\u65f6\u95f4\u6233\u5904\u7684\u50cf\u7d20\u5904 e=(x,y,t,pol) \u89e6\u53d1\u4e8b\u4ef6\u3002 L(x,y,t) - L(x,y,t-\\delta t) = pol C t-\\delta t \u662f\u8be5\u50cf\u7d20\u4e0a\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u88ab\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u5e76\u4e14 pol \u662f\u6839\u636e\u4eae\u5ea6\u53d8\u5316\u7684\u7b26\u53f7\u7684\u4e8b\u4ef6\u7684\u6781\u6027\u3002 +1 \u5f53\u4eae\u5ea6\u589e\u52a0\u65f6\u6781\u6027\u4e3a\u6b63\uff0c -1 \u5f53\u4eae\u5ea6\u51cf\u5c11\u65f6\u6781\u6027\u4e3a\u8d1f\u3002\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\u3002\u6807\u51c6\u76f8\u673a\u4ee5\u56fa\u5b9a\u901f\u7387\u8f93\u51fa\u5e27\uff0c\u4ece\u800c\u5728\u573a\u666f\u4e2d\u4e0d\u5b58\u5728\u8fd0\u52a8\u65f6\u53d1\u9001\u5197\u4f59\u4fe1\u606f\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u662f\u6570\u636e\u9a71\u52a8\u7684\u4f20\u611f\u5668\uff0c\u80fd\u591f\u4ee5\u5fae\u79d2\u5ef6\u8fdf\u54cd\u5e94\u4eae\u5ea6\u53d8\u5316\u3002\u5728\u7ed8\u56fe\u4e2d\uff0c\u53ea\u8981\uff08\u5e26\u7b26\u53f7\u7684\uff09\u4eae\u5ea6\u53d8\u5316\u968f\u65f6\u95f4\u8d85\u8fc7 C \u4e00\u7ef4\u7684\u5bf9\u6bd4\u5ea6\u9608\u503c\uff0c\u5c31\u4f1a\u751f\u6210\u6b63\uff08\u6216\u8d1f\uff09\u4e8b\u4ef6\uff08\u84dd\u70b9\u3001\u7ea2\u70b9\uff09 \u3002\u89c2\u5bdf\u4fe1\u53f7\u5feb\u901f\u53d8\u5316\u65f6\u4e8b\u4ef6\u7387\u5982\u4f55\u589e\u957f\u3002 DVS \u6444\u50cf\u673a\u7684\u5f53\u524d\u5b9e\u73b0\u5728\u4e24\u4e2a\u8fde\u7eed\u540c\u6b65\u5e27\u4e4b\u95f4\u4ee5\u7edf\u4e00\u91c7\u6837\u65b9\u5f0f\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u4e8b\u4ef6\u76f8\u673a\u7684\u9ad8\u65f6\u95f4\u5206\u8fa8\u7387\uff08\u5fae\u79d2\u7ea7\uff09\uff0c\u4f20\u611f\u5668\u9700\u8981\u4ee5\u9ad8\u9891\u7387\u6267\u884c\uff08\u6bd4\u4f20\u7edf\u76f8\u673a\u7684\u9891\u7387\u9ad8\u5f97\u591a\uff09\u3002\u5b9e\u9645\u4e0a\uff0cCARLA \u6c7d\u8f66\u884c\u9a76\u901f\u5ea6\u8d8a\u5feb\uff0c\u4e8b\u4ef6\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\u3002\u56e0\u6b64\uff0c\u4f20\u611f\u5668\u9891\u7387\u5e94\u968f\u7740\u573a\u666f\u7684\u52a8\u6001\u800c\u76f8\u5e94\u589e\u52a0\u3002\u7528\u6237\u5e94\u8be5\u5728\u65f6\u95f4\u7cbe\u5ea6\u548c\u8ba1\u7b97\u6210\u672c\u4e4b\u95f4\u627e\u5230\u5e73\u8861\u3002 \u63d0\u4f9b\u7684\u811a\u672c[ manual_control.py ]\u4f7f\u7528 DVS \u6444\u50cf\u5934\u6765\u5c55\u793a\u5982\u4f55\u914d\u7f6e\u4f20\u611f\u5668\u3001\u5982\u4f55\u83b7\u53d6\u4e8b\u4ef6\u6d41\u4ee5\u53ca\u5982\u4f55\u4ee5\u56fe\u50cf\u683c\u5f0f\uff08\u901a\u5e38\u79f0\u4e3a\u4e8b\u4ef6\u6846\u67b6\uff09\u63cf\u8ff0\u6b64\u7c7b\u4e8b\u4ef6\u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e DVS \u6444\u50cf\u673a\u7684\u91c7\u6837\u65b9\u6cd5\uff0c\u5982\u679c\u4e24\u4e2a\u8fde\u7eed\u540c\u6b65\u5e27\u4e4b\u95f4\u6ca1\u6709\u50cf\u7d20\u5dee\u5f02\uff0c\u6444\u50cf\u673a\u5c06\u4e0d\u4f1a\u8fd4\u56de\u56fe\u50cf\u3002\u8fd9\u603b\u662f\u53d1\u751f\u5728\u7b2c\u4e00\u5e27\u4e2d\uff0c\u56e0\u4e3a\u6ca1\u6709\u524d\u4e00\u5e27\u53ef\u4f9b\u6bd4\u8f83\uff0c\u5e76\u4e14\u5728\u5e27\u4e4b\u95f4\u6ca1\u6709\u79fb\u52a8\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002 DVS \u662f\u4e00\u4e2a\u76f8\u673a\uff0c\u56e0\u6b64\u5177\u6709 RGB \u76f8\u673a\u4e2d\u53ef\u7528\u7684\u6240\u6709\u5c5e\u6027\u3002\u7136\u800c\uff0c\u4e8b\u4ef6\u6444\u50cf\u673a\u7684\u5de5\u4f5c\u539f\u7406\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u72ec\u6709\u7684\u5c5e\u6027\u3002","title":"DVS \u76f8\u673a"},{"location":"ref_sensors/#dvs_1","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 positive_threshold float 0.3 \u4e0e\u4eae\u5ea6\u53d8\u5316\u589e\u91cf\u76f8\u5173\u7684\u6b63\u9608\u503c C (0-1)\u3002 negative_threshold float 0.3 \u4e0e\u4eae\u5ea6\u53d8\u5316\u51cf\u5c11\u76f8\u5173\u7684\u8d1f\u9608\u503c C (0-1)\u3002 sigma_positive_threshold float 0 \u79ef\u6781\u4e8b\u4ef6\u7684\u767d\u566a\u58f0\u6807\u51c6\u5dee (0-1)\u3002 sigma_negative_threshold float 0 \u8d1f\u9762\u4e8b\u4ef6\u7684\u767d\u566a\u58f0\u6807\u51c6\u5dee (0-1)\u3002 refractory_period_ns int 0.0 \u4e0d\u5e94\u671f\uff08\u50cf\u7d20\u5728\u89e6\u53d1\u4e8b\u4ef6\u540e\u65e0\u6cd5\u89e6\u53d1\u4e8b\u4ef6\u7684\u65f6\u95f4\uff09\uff0c\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\u3002\u5b83\u9650\u5236\u4e86\u89e6\u53d1\u4e8b\u4ef6\u7684\u6700\u9ad8\u9891\u7387\u3002 use_log bool true \u662f\u5426\u4ee5\u5bf9\u6570\u5f3a\u5ea6\u6807\u5ea6\u5de5\u4f5c\u3002 log_eps float 0.001 \u7528\u4e8e\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u65e5\u5fd7\u7684 Epsilon \u503c\uff1a L = log(eps + I / 255.0) . \u5176\u4e2d I \u662f RGB \u56fe\u50cf\u7684\u7070\u5ea6\u503c\uff1a I = 0.2989*R + 0.5870*G + 0.1140*B .","title":"DVS \u76f8\u673a\u5c5e\u6027"},{"location":"ref_sensors/#_36","text":"\u5149\u6d41\u76f8\u673a\u6355\u6349\u4ece\u76f8\u673a\u7684\u89d2\u5ea6\u611f\u77e5\u7684\u8fd0\u52a8\u3002\u8be5\u4f20\u611f\u5668\u8bb0\u5f55\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u5bf9\u6295\u5f71\u5230\u56fe\u50cf\u5e73\u9762\u7684\u8be5\u70b9\u7684\u901f\u5ea6\u8fdb\u884c\u7f16\u7801\u3002\u50cf\u7d20\u7684\u901f\u5ea6\u5728 [-2,2] \u8303\u56f4\u5185\u7f16\u7801\u3002\u4e3a\u4e86\u83b7\u5f97\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\u7684\u8fd0\u52a8\uff0c\u53ef\u4ee5\u5c06\u8be5\u4fe1\u606f\u4e0e\u56fe\u50cf\u5927\u5c0f\u4e00\u8d77\u7f29\u653e\u81f3[-2 * image_size, 2 * image_size]\u3002","title":"\u5149\u6d41\u76f8\u673a"},{"location":"ref_sensors/#_37","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 image_size_x int 800 \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 image_size_y int 600 \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float 90.0 \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 sensor_tick float 0.0 \u4f20\u611f\u5668\u6355\u83b7\u4e4b\u95f4\u7684\u4eff\u771f\u79d2\u6570\uff08\u6ef4\u7b54\u4fe1\u53f7\uff09\u3002","title":"\u5149\u6d41\u76f8\u673a\u5c5e\u6027"},{"location":"ref_sensors/#_38","text":"\u84dd\u56fe\u5c5e\u6027 \u7c7b\u578b \u9ed8\u8ba4 \u63cf\u8ff0 lens_circle_falloff float 5.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_circle_multiplier float 0.0 \u8303\u56f4\uff1a [0.0, 10.0] lens_k float -1.0 \u8303\u56f4\uff1a [-inf, inf] lens_kcube float 0.0 \u8303\u56f4\uff1a [-inf, inf] lens_x_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0] lens_y_size float 0.08 \u8303\u56f4\uff1a [0.0, 1.0]","title":"\u5149\u6d41\u76f8\u673a\u955c\u5934\u7578\u53d8\u5c5e\u6027"},{"location":"ref_sensors/#_39","text":"\u4f20\u611f\u5668\u6570\u636e\u5c5e\u6027 \u7c7b\u578b \u63cf\u8ff0 frame int \u8fdb\u884c\u6d4b\u91cf\u65f6\u7684\u5e27\u7f16\u53f7\u3002 timestamp double \u81ea\u56de\u5408\u5f00\u59cb\u4ee5\u6765\u6d4b\u91cf\u7684\u4eff\u771f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 transform carla.Transform \u6d4b\u91cf\u65f6\u4f20\u611f\u5668\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u3002 width int \u56fe\u50cf\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 height int \u56fe\u50cf\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002 fov float \u6c34\u5e73\u89c6\u91ce\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002 raw_data bytes \u5305\u542b\u4e24\u4e2a\u6d6e\u70b9\u503c\u7684 BGRA 64 \u4f4d\u50cf\u7d20\u6570\u7ec4\u3002","title":"\u8f93\u51fa\u5c5e\u6027"},{"location":"release_readme/","text":"CARLA \u4eff\u771f\u5668 \u611f\u8c22\u60a8\u4e0b\u8f7d CARLA\uff01 http://carla.org/ \u5982\u4f55\u8fd0\u884c CARLA \u5728\u6b64\u6587\u4ef6\u5939\u4e2d\u542f\u52a8\u7ec8\u7aef\u5e76\u901a\u8fc7\u8fd0\u884c\u6765\u6267\u884c\u4eff\u771f\u5668 ./CarlaUE4.sh \u8fd9\u5c06\u542f\u52a8\u4e00\u4e2a\u53ef\u4ee5\u770b\u5230\u57ce\u5e02\u666f\u89c2\u7684\u7a97\u53e3\u3002\u8fd9\u662f\u201c\u89c2\u5bdf\u8005\u201d\u89c6\u56fe\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u548c WASD \u952e\u5728\u57ce\u5e02\u4e2d\u98de\u884c\uff0c\u4f46\u65e0\u6cd5\u4e0e\u6b64\u89c6\u56fe\u4e2d\u7684\u4e16\u754c\u8fdb\u884c\u4ea4\u4e92\u3002\u4eff\u771f\u5668\u73b0\u5728\u4f5c\u4e3a\u670d\u52a1\u5668\u8fd0\u884c\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5e76\u4e0e\u4e16\u754c\u4ea4\u4e92\u3002 \u8ba9\u6211\u4eec\u9996\u5148\u5411\u57ce\u5e02\u6dfb\u52a0\u4e00\u4e9b\u5b9e\u65f6\u5185\u5bb9\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u5e76\u6267\u884c ./generate_traffic.py -n 80 \u8fd9\u4f7f\u5f97\u5168\u7403\u589e\u52a0\u4e86 80 \u8f86\u4ee5\u201c\u81ea\u52a8\u9a7e\u9a76\u201d\u6a21\u5f0f\u884c\u9a76\u7684\u8f66\u8f86\u3002\u56de\u5230\u4eff\u771f\u5668\u7a97\u53e3\uff0c\u6211\u4eec\u5e94\u8be5\u770b\u5230\u8fd9\u4e9b\u8f66\u8f86\u5728\u57ce\u5e02\u4e2d\u884c\u9a76\u3002\u4ed6\u4eec\u5c06\u7ee7\u7eed\u968f\u673a\u9a7e\u9a76\uff0c\u76f4\u5230\u6211\u4eec\u505c\u6b62\u811a\u672c\u3002\u6211\u4eec\u6682\u65f6\u628a\u5b83\u4eec\u7559\u5728\u90a3\u91cc\u5427\u3002 \u73b0\u5728\uff0c\u5361\u62c9\u5929\u6c14\u6674\u6717\uff0c\u9633\u5149\u660e\u5a9a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u9a7e\u9a76\u6761\u4ef6\u3002CARLA \u7684\u4e00\u9879\u5f88\u9177\u7684\u529f\u80fd\u662f\u60a8\u53ef\u4ee5\u63a7\u5236\u4e16\u754c\u7684\u5929\u6c14\u548c\u7167\u660e\u6761\u4ef6\u3002\u6211\u4eec\u73b0\u5728\u5c06\u542f\u52a8\u4e00\u4e2a\u52a8\u6001\u63a7\u5236\u4e00\u5929\u4e2d\u7684\u5929\u6c14\u548c\u65f6\u95f4\u7684\u811a\u672c\uff0c\u6253\u5f00\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u5e76\u6267\u884c ./dynamic_weather.py \u8fd9\u5ea7\u57ce\u5e02\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u8ba9\u6211\u4eec\u5f00\u8f66\u4e86\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u8fd0\u884c\u4e86 ./manual_control.py \u8fd9\u5e94\u8be5\u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0\u7a97\u53e3\uff0c\u5176\u4e2d\u5305\u542b\u6c7d\u8f66\u7684\u7b2c\u4e09\u4eba\u79f0\u89c6\u56fe\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 WASD/\u7bad\u5934\u952e\u9a7e\u9a76\u8fd9\u8f86\u8f66\u3002\u6309\u201ch\u201d\u67e5\u770b\u6240\u6709\u53ef\u7528\u9009\u9879\u3002 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u8fd0\u884c\u9009\u9879\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684 \u5728\u7ebf\u6587\u6863 \u3002","title":"CARLA \u4eff\u771f\u5668"},{"location":"release_readme/#carla","text":"\u611f\u8c22\u60a8\u4e0b\u8f7d CARLA\uff01 http://carla.org/","title":"CARLA \u4eff\u771f\u5668"},{"location":"release_readme/#carla_1","text":"\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\u542f\u52a8\u7ec8\u7aef\u5e76\u901a\u8fc7\u8fd0\u884c\u6765\u6267\u884c\u4eff\u771f\u5668 ./CarlaUE4.sh \u8fd9\u5c06\u542f\u52a8\u4e00\u4e2a\u53ef\u4ee5\u770b\u5230\u57ce\u5e02\u666f\u89c2\u7684\u7a97\u53e3\u3002\u8fd9\u662f\u201c\u89c2\u5bdf\u8005\u201d\u89c6\u56fe\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u548c WASD \u952e\u5728\u57ce\u5e02\u4e2d\u98de\u884c\uff0c\u4f46\u65e0\u6cd5\u4e0e\u6b64\u89c6\u56fe\u4e2d\u7684\u4e16\u754c\u8fdb\u884c\u4ea4\u4e92\u3002\u4eff\u771f\u5668\u73b0\u5728\u4f5c\u4e3a\u670d\u52a1\u5668\u8fd0\u884c\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5e76\u4e0e\u4e16\u754c\u4ea4\u4e92\u3002 \u8ba9\u6211\u4eec\u9996\u5148\u5411\u57ce\u5e02\u6dfb\u52a0\u4e00\u4e9b\u5b9e\u65f6\u5185\u5bb9\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u5e76\u6267\u884c ./generate_traffic.py -n 80 \u8fd9\u4f7f\u5f97\u5168\u7403\u589e\u52a0\u4e86 80 \u8f86\u4ee5\u201c\u81ea\u52a8\u9a7e\u9a76\u201d\u6a21\u5f0f\u884c\u9a76\u7684\u8f66\u8f86\u3002\u56de\u5230\u4eff\u771f\u5668\u7a97\u53e3\uff0c\u6211\u4eec\u5e94\u8be5\u770b\u5230\u8fd9\u4e9b\u8f66\u8f86\u5728\u57ce\u5e02\u4e2d\u884c\u9a76\u3002\u4ed6\u4eec\u5c06\u7ee7\u7eed\u968f\u673a\u9a7e\u9a76\uff0c\u76f4\u5230\u6211\u4eec\u505c\u6b62\u811a\u672c\u3002\u6211\u4eec\u6682\u65f6\u628a\u5b83\u4eec\u7559\u5728\u90a3\u91cc\u5427\u3002 \u73b0\u5728\uff0c\u5361\u62c9\u5929\u6c14\u6674\u6717\uff0c\u9633\u5149\u660e\u5a9a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u9a7e\u9a76\u6761\u4ef6\u3002CARLA \u7684\u4e00\u9879\u5f88\u9177\u7684\u529f\u80fd\u662f\u60a8\u53ef\u4ee5\u63a7\u5236\u4e16\u754c\u7684\u5929\u6c14\u548c\u7167\u660e\u6761\u4ef6\u3002\u6211\u4eec\u73b0\u5728\u5c06\u542f\u52a8\u4e00\u4e2a\u52a8\u6001\u63a7\u5236\u4e00\u5929\u4e2d\u7684\u5929\u6c14\u548c\u65f6\u95f4\u7684\u811a\u672c\uff0c\u6253\u5f00\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u5e76\u6267\u884c ./dynamic_weather.py \u8fd9\u5ea7\u57ce\u5e02\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u8ba9\u6211\u4eec\u5f00\u8f66\u4e86\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u8fd0\u884c\u4e86 ./manual_control.py \u8fd9\u5e94\u8be5\u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0\u7a97\u53e3\uff0c\u5176\u4e2d\u5305\u542b\u6c7d\u8f66\u7684\u7b2c\u4e09\u4eba\u79f0\u89c6\u56fe\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 WASD/\u7bad\u5934\u952e\u9a7e\u9a76\u8fd9\u8f86\u8f66\u3002\u6309\u201ch\u201d\u67e5\u770b\u6240\u6709\u53ef\u7528\u9009\u9879\u3002 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u8fd0\u884c\u9009\u9879\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684 \u5728\u7ebf\u6587\u6863 \u3002","title":"\u5982\u4f55\u8fd0\u884c CARLA"},{"location":"ros_documentation/","text":"ROS \u6865 ROS \u6865\u7684\u5b8c\u6574\u6587\u6863\u53ef\u5728 \u6b64\u5904 \u627e\u5230\u3002 ROS \u6865\u53ef\u5b9e\u73b0 ROS \u548c CARLA \u4e4b\u95f4\u7684\u53cc\u5411\u901a\u4fe1\u3002\u6765\u81ea CARLA \u670d\u52a1\u5668\u7684\u4fe1\u606f\u88ab\u8f6c\u6362\u4e3a ROS \u4e3b\u9898\u3002\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\uff0cROS \u4e2d\u7684\u8282\u70b9\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u88ab\u8f6c\u6362\u4e3a\u8981\u5728 CARLA \u4e2d\u5e94\u7528\u7684\u547d\u4ee4\u3002 ROS \u6865\u4e0e ROS 1 \u548c ROS 2 \u517c\u5bb9\u3002 ROS\u6865\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u4e3a LIDAR\u3001\u8bed\u4e49 LIDAR\u3001\u76f8\u673a\uff08\u6df1\u5ea6\u3001\u5206\u6bb5\u3001rgb\u3001dvs\uff09\u3001GNSS\u3001\u96f7\u8fbe\u548c IMU \u63d0\u4f9b\u4f20\u611f\u5668\u6570\u636e\u3002 \u63d0\u4f9b\u5bf9\u8c61\u6570\u636e\uff0c\u4f8b\u5982\u53d8\u6362\u3001\u4ea4\u901a\u706f\u72b6\u6001\u3001\u53ef\u89c6\u5316\u6807\u8bb0\u3001\u78b0\u649e\u548c\u8f66\u9053\u5165\u4fb5\u3002 \u901a\u8fc7\u8f6c\u5411\u3001\u6cb9\u95e8\u548c\u5236\u52a8\u63a7\u5236\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u3002 \u63a7\u5236 CARLA \u4eff\u771f\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4f8b\u5982\u540c\u6b65\u6a21\u5f0f\u3001\u64ad\u653e\u548c\u6682\u505c\u4eff\u771f\u4ee5\u53ca\u8bbe\u7f6e\u4eff\u771f\u53c2\u6570\u3002","title":"ROS \u6865\u6587\u6863"},{"location":"ros_documentation/#ros","text":"ROS \u6865\u7684\u5b8c\u6574\u6587\u6863\u53ef\u5728 \u6b64\u5904 \u627e\u5230\u3002 ROS \u6865\u53ef\u5b9e\u73b0 ROS \u548c CARLA \u4e4b\u95f4\u7684\u53cc\u5411\u901a\u4fe1\u3002\u6765\u81ea CARLA \u670d\u52a1\u5668\u7684\u4fe1\u606f\u88ab\u8f6c\u6362\u4e3a ROS \u4e3b\u9898\u3002\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\uff0cROS \u4e2d\u7684\u8282\u70b9\u4e4b\u95f4\u53d1\u9001\u7684\u6d88\u606f\u88ab\u8f6c\u6362\u4e3a\u8981\u5728 CARLA \u4e2d\u5e94\u7528\u7684\u547d\u4ee4\u3002 ROS \u6865\u4e0e ROS 1 \u548c ROS 2 \u517c\u5bb9\u3002 ROS\u6865\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u4e3a LIDAR\u3001\u8bed\u4e49 LIDAR\u3001\u76f8\u673a\uff08\u6df1\u5ea6\u3001\u5206\u6bb5\u3001rgb\u3001dvs\uff09\u3001GNSS\u3001\u96f7\u8fbe\u548c IMU \u63d0\u4f9b\u4f20\u611f\u5668\u6570\u636e\u3002 \u63d0\u4f9b\u5bf9\u8c61\u6570\u636e\uff0c\u4f8b\u5982\u53d8\u6362\u3001\u4ea4\u901a\u706f\u72b6\u6001\u3001\u53ef\u89c6\u5316\u6807\u8bb0\u3001\u78b0\u649e\u548c\u8f66\u9053\u5165\u4fb5\u3002 \u901a\u8fc7\u8f6c\u5411\u3001\u6cb9\u95e8\u548c\u5236\u52a8\u63a7\u5236\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u3002 \u63a7\u5236 CARLA \u4eff\u771f\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4f8b\u5982\u540c\u6b65\u6a21\u5f0f\u3001\u64ad\u653e\u548c\u6682\u505c\u4eff\u771f\u4ee5\u53ca\u8bbe\u7f6e\u4eff\u771f\u53c2\u6570\u3002","title":"ROS \u6865"},{"location":"start_introduction/","text":"CARLA \u91cd\u8981 \u672c\u6587\u6863\u53c2\u8003\u6700\u65b0\u7248\u672c\u7684 CARLA\u3002\u6709\u5173\u4ee5\u524d\u7248\u672c\u7684\u6587\u6863\uff0c\u8bf7\u5728\u53f3\u4e0b\u89d2\u770b\u5230\u6b64\u6309\u94ae\u7684\u4f4d\u7f6e\u9009\u62e9\u6240\u9700\u7684\u7248\u672c\uff1a CARLA \u662f\u4e00\u6b3e\u5f00\u6e90\u81ea\u52a8\u9a7e\u9a76\u4eff\u771f\u5668\u3002\u5b83\u662f\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u7684\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\u5316\u4e14\u7075\u6d3b\u7684 API\uff0c\u53ef\u4ee5\u89e3\u51b3\u81ea\u52a8\u9a7e\u9a76\u95ee\u9898\u4e2d\u6d89\u53ca\u7684\u4e00\u7cfb\u5217\u4efb\u52a1\u3002CARLA \u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u5e2e\u52a9\u81ea\u52a8\u9a7e\u9a76\u7814\u53d1\u6c11\u4e3b\u5316\uff0c\u6210\u4e3a\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u548c\u5b9a\u5236\u7684\u5de5\u5177\u3002\u4e3a\u6b64\uff0c\u4eff\u771f\u5668\u5fc5\u987b\u6ee1\u8db3\u4e00\u822c\u9a7e\u9a76\u95ee\u9898\u4e2d\u4e0d\u540c\u7528\u4f8b\u7684\u8981\u6c42\uff08\u4f8b\u5982\u5b66\u4e60\u9a7e\u9a76\u7b56\u7565\u3001\u8bad\u7ec3\u611f\u77e5\u7b97\u6cd5\u7b49\uff09\u3002CARLA \u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\u6765\u8fd0\u884c\u4eff\u771f\uff0c\u5e76\u4f7f\u7528 OpenDRIVE \u6807\u51c6\uff08\u76ee\u524d\u4e3a 1.4\uff09\u6765\u5b9a\u4e49\u9053\u8def\u548c\u57ce\u5e02\u8bbe\u7f6e\u3002\u5bf9\u4eff\u771f\u7684\u63a7\u5236\u662f\u901a\u8fc7 Python \u548c C++ \u5904\u7406\u7684 API \u6388\u4e88\u7684\uff0c\u8be5 API \u968f\u7740\u9879\u76ee\u7684\u53d1\u5c55\u800c\u4e0d\u65ad\u589e\u957f\u3002 \u4e3a\u4e86\u987a\u5229\u5f00\u53d1\u3001\u8bad\u7ec3\u548c\u9a8c\u8bc1\u9a7e\u9a76\u7cfb\u7edf\u7684\u8fc7\u7a0b\uff0cCARLA \u53d1\u5c55\u6210\u4e3a\u4e00\u4e2a\u7531\u793e\u533a\u56f4\u7ed5\u4e3b\u5e73\u53f0\u6784\u5efa\u7684\u9879\u76ee\u751f\u6001\u7cfb\u7edf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e86\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u6837\u624d\u80fd\u5145\u5206\u7406\u89e3\u5176\u529f\u80fd\u3002 \u4eff\u771f\u5668 CARLA \u4eff\u771f\u5668\u7531\u53ef\u6269\u5c55\u7684\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u7ec4\u6210\u3002 \u670d\u52a1\u5668\u8d1f\u8d23\u4e0e\u6a21\u62df\u672c\u8eab\u76f8\u5173\u7684\u6240\u6709\u4e8b\u60c5\uff1a\u4f20\u611f\u5668\u6e32\u67d3\u3001\u7269\u7406\u8ba1\u7b97\u3001\u4e16\u754c\u72b6\u6001\u53ca\u5176\u53c2\u4e0e\u8005\u7684\u66f4\u65b0\u7b49\u7b49\u3002\u7531\u4e8e\u5b83\u7684\u76ee\u6807\u662f\u5b9e\u9645\u7ed3\u679c\uff0c\u56e0\u6b64\u6700\u5408\u9002\u7684\u9009\u62e9\u662f\u4f7f\u7528\u4e13\u7528 GPU \u8fd0\u884c\u670d\u52a1\u5668\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u673a\u5668\u5b66\u4e60\u65f6\u3002 \u5ba2\u6237\u7aef\u7531\u4e00\u7ec4\u5ba2\u6237\u7aef\u6a21\u5757\u7ec4\u6210\uff0c\u63a7\u5236\u573a\u666f\u4e2d\u6f14\u5458\u7684\u903b\u8f91\u5e76\u8bbe\u7f6e\u4e16\u754c\u6761\u4ef6\u3002\u8fd9\u662f\u901a\u8fc7\u5229\u7528 CARLA API\uff08Python \u6216 C++ \u8bed\u8a00\uff09\u6765\u5b9e\u73b0\u7684\uff0cCARLA API \u662f\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u4e2d\u4ecb\u5c42\uff0c\u4e0d\u65ad\u53d1\u5c55\u4ee5\u63d0\u4f9b\u65b0\u529f\u80fd\u3002 \u8fd9\u603b\u7ed3\u4e86\u4eff\u771f\u5668\u7684\u57fa\u672c\u7ed3\u6784\u3002\u7136\u800c\uff0c\u4e86\u89e3 CARLA \u7684\u610f\u4e49\u8fdc\u4e0d\u6b62\u4e8e\u6b64\uff0c\u56e0\u4e3a\u5b83\u5171\u5b58\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u529f\u80fd\u548c\u5143\u7d20\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u5176\u4e2d\u4e00\u4e9b\uff0c\u4ee5\u4fbf\u4e86\u89e3 CARLA \u53ef\u4ee5\u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u4e00\u79cd\u5185\u7f6e\u7cfb\u7edf\uff0c\u9664\u4e86\u7528\u4e8e\u5b66\u4e60\u7684\u8f66\u8f86\u5916\uff0c\u8fd8\u53ef\u4ee5\u63a7\u5236\u8f66\u8f86\u3002\u5b83\u5145\u5f53 CARLA \u63d0\u4f9b\u7684\u6307\u6325\uff0c\u4ee5\u73b0\u5b9e\u7684\u884c\u4e3a\u91cd\u5efa\u7c7b\u4f3c\u57ce\u5e02\u7684\u73af\u5883\u3002 \u4f20\u611f\u5668\u3002 \u8f66\u8f86\u4f9d\u9760\u5b83\u4eec\u6765\u5206\u53d1\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002\u5728 CARLA \u4e2d\uff0c\u5b83\u4eec\u662f\u9644\u7740\u5728\u8f66\u8f86\u4e0a\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u53c2\u4e0e\u8005\uff0c\u53ef\u4ee5\u68c0\u7d22\u548c\u5b58\u50a8\u5b83\u4eec\u63a5\u6536\u5230\u7684\u6570\u636e\u4ee5\u7b80\u5316\u6d41\u7a0b\u3002\u76ee\u524d\u8be5\u9879\u76ee\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u7684\u6280\u672f\uff0c\u4ece\u6444\u50cf\u5934\u5230\u96f7\u8fbe\u3001\u6fc0\u5149\u96f7\u8fbe\u7b49\u7b49\u3002 \u8bb0\u5f55\u5668\u3002 \u6b64\u529f\u80fd\u7528\u4e8e\u4e3a\u4e16\u754c\u4e0a\u7684\u6bcf\u4e2a\u53c2\u4e0e\u8005\u9010\u6b65\u91cd\u6f14\u4eff\u771f\u3002\u5b83\u5141\u8bb8\u8bbf\u95ee\u4e16\u754c\u4e0a\u4efb\u4f55\u5730\u65b9\u7684\u65f6\u95f4\u7ebf\u4e2d\u7684\u4efb\u4f55\u65f6\u523b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u8ffd\u8e2a\u5de5\u5177\u3002 ROS \u6865\u548c Autoware \u5b9e\u73b0\u3002 \u4f5c\u4e3a\u666e\u904d\u5316\u7684\u95ee\u9898\uff0cCARLA \u9879\u76ee\u81f4\u529b\u4e8e\u5c06\u4eff\u771f\u5668\u96c6\u6210\u5230\u5176\u4ed6\u5b66\u4e60\u73af\u5883\u4e2d\u3002 \u5f00\u653e\u8d44\u4ea7\u3002 CARLA \u4e3a\u57ce\u5e02\u73af\u5883\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5730\u56fe\uff0c\u53ef\u4ee5\u63a7\u5236\u5929\u6c14\u6761\u4ef6\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u5927\u91cf\u53c2\u4e0e\u8005\u7684\u84dd\u56fe\u5e93\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u4ee5\u5b9a\u5236\uff0c\u5e76\u4e14\u53ef\u4ee5\u6309\u7167\u7b80\u5355\u7684\u6307\u5bfc\u539f\u5219\u751f\u6210\u65b0\u5143\u7d20\u3002 Scenario runner. \u4e3a\u4e86\u7b80\u5316\u8f66\u8f86\u7684\u5b66\u4e60\u8fc7\u7a0b\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u63cf\u8ff0\u4e0d\u540c\u60c5\u51b5\u7684\u8fed\u4ee3\u8def\u7ebf\u3002\u8fd9\u4e9b\u4e5f\u4e3a CARLA \u6311\u6218 \u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u6d4b\u8bd5\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5e76\u8dfb\u8eab\u6392\u884c\u699c\u3002 \u8be5\u9879\u76ee CARLA \u5feb\u901f\u7a33\u5b9a\u5730\u53d1\u5c55\uff0c\u6269\u5927\u4e86\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u8303\u56f4\uff0c\u5e76\u4e3a\u4e0d\u540c\u7684\u81ea\u52a8\u9a7e\u9a76\u65b9\u6cd5\u5f00\u8f9f\u4e86\u9053\u8def\u3002\u5b83\u5728\u8fd9\u6837\u505a\u7684\u540c\u65f6\u6c38\u8fdc\u4e0d\u4f1a\u5fd8\u8bb0\u5176\u5f00\u6e90\u6027\u8d28\u3002\u8be5\u9879\u76ee\u662f\u900f\u660e\u7684\uff0c\u5145\u5f53\u4e00\u4e2a\u767d\u76d2\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5de5\u5177\u548c\u5f00\u53d1\u793e\u533a\u3002CARLA \u6b63\u662f\u5728\u6c11\u4e3b\u5316\u4e2d\u627e\u5230\u4e86\u81ea\u5df1\u7684\u4ef7\u503c\u3002 \u8c08\u8bba CARLA \u5982\u4f55\u6210\u957f\u610f\u5473\u7740\u8c08\u8bba\u4e00\u4e2a\u5171\u540c\u6df1\u5165\u7814\u7a76\u81ea\u52a8\u9a7e\u9a76\u5f7b\u5e95\u95ee\u9898\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\u3002\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u4e0e CARLA \u4e00\u8d77\u63a2\u7d22\uff0c\u627e\u5230\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u4e0e\u793e\u533a\u5176\u4ed6\u6210\u5458\u5206\u4eab\u4ed6\u4eec\u7684\u6210\u5c31\u3002 \u672c\u6587\u6863\u5c06\u6210\u4e3a\u60a8\u4e00\u8def\u4e0a\u7684\u4f34\u4fa3\u3002\u4e0b\u4e00\u9875\u5305\u542b \u5feb\u901f\u5165\u95e8 \u8bf4\u660e\uff0c\u4f9b\u90a3\u4e9b\u6e34\u671b\u5b89\u88c5 CARLA \u7248\u672c\u7684\u4eba\u4f7f\u7528\u3002\u8fd8\u6709\u9002\u7528\u4e8e Linux \u548c Windows \u7684\u6784\u5efa\u6307\u5357\u3002\u8fd9\u5c06\u4f7f CARLA \u4ece\u5b58\u50a8\u5e93\u4e2d\u51fa\u6765\uff0c\u5e76\u5141\u8bb8\u6df1\u5165\u4e86\u89e3\u5176\u529f\u80fd\u3002 \u6b22\u8fce\u6765\u5230 CARLA\u3002 Linux \u6784\u5efa Windows \u6784\u5efa","title":"\u4ecb\u7ecd"},{"location":"start_introduction/#carla","text":"\u91cd\u8981 \u672c\u6587\u6863\u53c2\u8003\u6700\u65b0\u7248\u672c\u7684 CARLA\u3002\u6709\u5173\u4ee5\u524d\u7248\u672c\u7684\u6587\u6863\uff0c\u8bf7\u5728\u53f3\u4e0b\u89d2\u770b\u5230\u6b64\u6309\u94ae\u7684\u4f4d\u7f6e\u9009\u62e9\u6240\u9700\u7684\u7248\u672c\uff1a CARLA \u662f\u4e00\u6b3e\u5f00\u6e90\u81ea\u52a8\u9a7e\u9a76\u4eff\u771f\u5668\u3002\u5b83\u662f\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u7684\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\u5316\u4e14\u7075\u6d3b\u7684 API\uff0c\u53ef\u4ee5\u89e3\u51b3\u81ea\u52a8\u9a7e\u9a76\u95ee\u9898\u4e2d\u6d89\u53ca\u7684\u4e00\u7cfb\u5217\u4efb\u52a1\u3002CARLA \u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u5e2e\u52a9\u81ea\u52a8\u9a7e\u9a76\u7814\u53d1\u6c11\u4e3b\u5316\uff0c\u6210\u4e3a\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u548c\u5b9a\u5236\u7684\u5de5\u5177\u3002\u4e3a\u6b64\uff0c\u4eff\u771f\u5668\u5fc5\u987b\u6ee1\u8db3\u4e00\u822c\u9a7e\u9a76\u95ee\u9898\u4e2d\u4e0d\u540c\u7528\u4f8b\u7684\u8981\u6c42\uff08\u4f8b\u5982\u5b66\u4e60\u9a7e\u9a76\u7b56\u7565\u3001\u8bad\u7ec3\u611f\u77e5\u7b97\u6cd5\u7b49\uff09\u3002CARLA \u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\u6765\u8fd0\u884c\u4eff\u771f\uff0c\u5e76\u4f7f\u7528 OpenDRIVE \u6807\u51c6\uff08\u76ee\u524d\u4e3a 1.4\uff09\u6765\u5b9a\u4e49\u9053\u8def\u548c\u57ce\u5e02\u8bbe\u7f6e\u3002\u5bf9\u4eff\u771f\u7684\u63a7\u5236\u662f\u901a\u8fc7 Python \u548c C++ \u5904\u7406\u7684 API \u6388\u4e88\u7684\uff0c\u8be5 API \u968f\u7740\u9879\u76ee\u7684\u53d1\u5c55\u800c\u4e0d\u65ad\u589e\u957f\u3002 \u4e3a\u4e86\u987a\u5229\u5f00\u53d1\u3001\u8bad\u7ec3\u548c\u9a8c\u8bc1\u9a7e\u9a76\u7cfb\u7edf\u7684\u8fc7\u7a0b\uff0cCARLA \u53d1\u5c55\u6210\u4e3a\u4e00\u4e2a\u7531\u793e\u533a\u56f4\u7ed5\u4e3b\u5e73\u53f0\u6784\u5efa\u7684\u9879\u76ee\u751f\u6001\u7cfb\u7edf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e86\u89e3 CARLA \u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u6837\u624d\u80fd\u5145\u5206\u7406\u89e3\u5176\u529f\u80fd\u3002","title":"CARLA"},{"location":"start_introduction/#_1","text":"CARLA \u4eff\u771f\u5668\u7531\u53ef\u6269\u5c55\u7684\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u7ec4\u6210\u3002 \u670d\u52a1\u5668\u8d1f\u8d23\u4e0e\u6a21\u62df\u672c\u8eab\u76f8\u5173\u7684\u6240\u6709\u4e8b\u60c5\uff1a\u4f20\u611f\u5668\u6e32\u67d3\u3001\u7269\u7406\u8ba1\u7b97\u3001\u4e16\u754c\u72b6\u6001\u53ca\u5176\u53c2\u4e0e\u8005\u7684\u66f4\u65b0\u7b49\u7b49\u3002\u7531\u4e8e\u5b83\u7684\u76ee\u6807\u662f\u5b9e\u9645\u7ed3\u679c\uff0c\u56e0\u6b64\u6700\u5408\u9002\u7684\u9009\u62e9\u662f\u4f7f\u7528\u4e13\u7528 GPU \u8fd0\u884c\u670d\u52a1\u5668\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u673a\u5668\u5b66\u4e60\u65f6\u3002 \u5ba2\u6237\u7aef\u7531\u4e00\u7ec4\u5ba2\u6237\u7aef\u6a21\u5757\u7ec4\u6210\uff0c\u63a7\u5236\u573a\u666f\u4e2d\u6f14\u5458\u7684\u903b\u8f91\u5e76\u8bbe\u7f6e\u4e16\u754c\u6761\u4ef6\u3002\u8fd9\u662f\u901a\u8fc7\u5229\u7528 CARLA API\uff08Python \u6216 C++ \u8bed\u8a00\uff09\u6765\u5b9e\u73b0\u7684\uff0cCARLA API \u662f\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u4e2d\u4ecb\u5c42\uff0c\u4e0d\u65ad\u53d1\u5c55\u4ee5\u63d0\u4f9b\u65b0\u529f\u80fd\u3002 \u8fd9\u603b\u7ed3\u4e86\u4eff\u771f\u5668\u7684\u57fa\u672c\u7ed3\u6784\u3002\u7136\u800c\uff0c\u4e86\u89e3 CARLA \u7684\u610f\u4e49\u8fdc\u4e0d\u6b62\u4e8e\u6b64\uff0c\u56e0\u4e3a\u5b83\u5171\u5b58\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u529f\u80fd\u548c\u5143\u7d20\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u5176\u4e2d\u4e00\u4e9b\uff0c\u4ee5\u4fbf\u4e86\u89e3 CARLA \u53ef\u4ee5\u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u3002 \u4e00\u79cd\u5185\u7f6e\u7cfb\u7edf\uff0c\u9664\u4e86\u7528\u4e8e\u5b66\u4e60\u7684\u8f66\u8f86\u5916\uff0c\u8fd8\u53ef\u4ee5\u63a7\u5236\u8f66\u8f86\u3002\u5b83\u5145\u5f53 CARLA \u63d0\u4f9b\u7684\u6307\u6325\uff0c\u4ee5\u73b0\u5b9e\u7684\u884c\u4e3a\u91cd\u5efa\u7c7b\u4f3c\u57ce\u5e02\u7684\u73af\u5883\u3002 \u4f20\u611f\u5668\u3002 \u8f66\u8f86\u4f9d\u9760\u5b83\u4eec\u6765\u5206\u53d1\u5468\u56f4\u73af\u5883\u7684\u4fe1\u606f\u3002\u5728 CARLA \u4e2d\uff0c\u5b83\u4eec\u662f\u9644\u7740\u5728\u8f66\u8f86\u4e0a\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u53c2\u4e0e\u8005\uff0c\u53ef\u4ee5\u68c0\u7d22\u548c\u5b58\u50a8\u5b83\u4eec\u63a5\u6536\u5230\u7684\u6570\u636e\u4ee5\u7b80\u5316\u6d41\u7a0b\u3002\u76ee\u524d\u8be5\u9879\u76ee\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u7684\u6280\u672f\uff0c\u4ece\u6444\u50cf\u5934\u5230\u96f7\u8fbe\u3001\u6fc0\u5149\u96f7\u8fbe\u7b49\u7b49\u3002 \u8bb0\u5f55\u5668\u3002 \u6b64\u529f\u80fd\u7528\u4e8e\u4e3a\u4e16\u754c\u4e0a\u7684\u6bcf\u4e2a\u53c2\u4e0e\u8005\u9010\u6b65\u91cd\u6f14\u4eff\u771f\u3002\u5b83\u5141\u8bb8\u8bbf\u95ee\u4e16\u754c\u4e0a\u4efb\u4f55\u5730\u65b9\u7684\u65f6\u95f4\u7ebf\u4e2d\u7684\u4efb\u4f55\u65f6\u523b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u8ffd\u8e2a\u5de5\u5177\u3002 ROS \u6865\u548c Autoware \u5b9e\u73b0\u3002 \u4f5c\u4e3a\u666e\u904d\u5316\u7684\u95ee\u9898\uff0cCARLA \u9879\u76ee\u81f4\u529b\u4e8e\u5c06\u4eff\u771f\u5668\u96c6\u6210\u5230\u5176\u4ed6\u5b66\u4e60\u73af\u5883\u4e2d\u3002 \u5f00\u653e\u8d44\u4ea7\u3002 CARLA \u4e3a\u57ce\u5e02\u73af\u5883\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5730\u56fe\uff0c\u53ef\u4ee5\u63a7\u5236\u5929\u6c14\u6761\u4ef6\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u5927\u91cf\u53c2\u4e0e\u8005\u7684\u84dd\u56fe\u5e93\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u4ee5\u5b9a\u5236\uff0c\u5e76\u4e14\u53ef\u4ee5\u6309\u7167\u7b80\u5355\u7684\u6307\u5bfc\u539f\u5219\u751f\u6210\u65b0\u5143\u7d20\u3002 Scenario runner. \u4e3a\u4e86\u7b80\u5316\u8f66\u8f86\u7684\u5b66\u4e60\u8fc7\u7a0b\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u63cf\u8ff0\u4e0d\u540c\u60c5\u51b5\u7684\u8fed\u4ee3\u8def\u7ebf\u3002\u8fd9\u4e9b\u4e5f\u4e3a CARLA \u6311\u6218 \u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u6d4b\u8bd5\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5e76\u8dfb\u8eab\u6392\u884c\u699c\u3002","title":"\u4eff\u771f\u5668"},{"location":"start_introduction/#_2","text":"CARLA \u5feb\u901f\u7a33\u5b9a\u5730\u53d1\u5c55\uff0c\u6269\u5927\u4e86\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u8303\u56f4\uff0c\u5e76\u4e3a\u4e0d\u540c\u7684\u81ea\u52a8\u9a7e\u9a76\u65b9\u6cd5\u5f00\u8f9f\u4e86\u9053\u8def\u3002\u5b83\u5728\u8fd9\u6837\u505a\u7684\u540c\u65f6\u6c38\u8fdc\u4e0d\u4f1a\u5fd8\u8bb0\u5176\u5f00\u6e90\u6027\u8d28\u3002\u8be5\u9879\u76ee\u662f\u900f\u660e\u7684\uff0c\u5145\u5f53\u4e00\u4e2a\u767d\u76d2\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5de5\u5177\u548c\u5f00\u53d1\u793e\u533a\u3002CARLA \u6b63\u662f\u5728\u6c11\u4e3b\u5316\u4e2d\u627e\u5230\u4e86\u81ea\u5df1\u7684\u4ef7\u503c\u3002 \u8c08\u8bba CARLA \u5982\u4f55\u6210\u957f\u610f\u5473\u7740\u8c08\u8bba\u4e00\u4e2a\u5171\u540c\u6df1\u5165\u7814\u7a76\u81ea\u52a8\u9a7e\u9a76\u5f7b\u5e95\u95ee\u9898\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\u3002\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u4e0e CARLA \u4e00\u8d77\u63a2\u7d22\uff0c\u627e\u5230\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u4e0e\u793e\u533a\u5176\u4ed6\u6210\u5458\u5206\u4eab\u4ed6\u4eec\u7684\u6210\u5c31\u3002 \u672c\u6587\u6863\u5c06\u6210\u4e3a\u60a8\u4e00\u8def\u4e0a\u7684\u4f34\u4fa3\u3002\u4e0b\u4e00\u9875\u5305\u542b \u5feb\u901f\u5165\u95e8 \u8bf4\u660e\uff0c\u4f9b\u90a3\u4e9b\u6e34\u671b\u5b89\u88c5 CARLA \u7248\u672c\u7684\u4eba\u4f7f\u7528\u3002\u8fd8\u6709\u9002\u7528\u4e8e Linux \u548c Windows \u7684\u6784\u5efa\u6307\u5357\u3002\u8fd9\u5c06\u4f7f CARLA \u4ece\u5b58\u50a8\u5e93\u4e2d\u51fa\u6765\uff0c\u5e76\u5141\u8bb8\u6df1\u5165\u4e86\u89e3\u5176\u529f\u80fd\u3002 \u6b22\u8fce\u6765\u5230 CARLA\u3002 Linux \u6784\u5efa Windows \u6784\u5efa","title":"\u8be5\u9879\u76ee"},{"location":"start_quickstart/","text":"\u5feb\u901f\u542f\u52a8\u5305\u5b89\u88c5 \u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u4e0b\u8f7d\u548c\u5b89\u88c5 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u8be5\u8f6f\u4ef6\u5305\u5305\u62ec CARLA \u670d\u52a1\u5668\u548c\u4e24\u4e2a\u5ba2\u6237\u7aef\u5e93\u9009\u9879\u3002\u8fd8\u53ef\u4ee5\u4e0b\u8f7d\u5176\u4ed6\u8d44\u6e90\u5e76\u5c06\u5176\u5bfc\u5165\u5230\u5305\u4e2d\u3002\u9700\u8981\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u9ad8\u7ea7\u81ea\u5b9a\u4e49\u548c\u5f00\u53d1\u9009\u9879\u4e0d\u53ef\u7528\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u9002\u7528\u4e8e Windows \u6216 Linux \u7684 CARLA \u6784\u5efa\u7248\u672c\u6765\u8bbf\u95ee\u8fd9\u4e9b\u9009\u9879\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d CARLA \u5b89\u88c5 A. Debian CARLA \u5b89\u88c5 B. \u5305\u5b89\u88c5 \u5bfc\u5165\u989d\u5916\u8d44\u4ea7 \u5b89\u88c5\u5ba2\u6237\u7aef\u5e93 0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c CARLA 0.9.12+ \u8fd0\u884c CARLA \u547d\u4ee4\u884c\u9009\u9879 \u66f4\u65b0 CARLA \u8ddf\u8fdb \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5b89\u88c5 CARLA \u4e4b\u524d\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u7cfb\u7edf\u8981\u6c42\u3002 CARLA \u662f\u4e3a Windows \u548c Linux \u7cfb\u7edf\u6784\u5efa\u7684\u3002 \u8db3\u591f\u7684 GPU\u3002 CARLA \u65e8\u5728\u5b9e\u73b0\u771f\u5b9e\u4eff\u771f\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u81f3\u5c11\u9700\u8981 6 GB GPU\uff0c\u4f46\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 8 GB\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u4e13\u7528 GPU \u8fdb\u884c\u673a\u5668\u5b66\u4e60\u3002 \u78c1\u76d8\u7a7a\u95f4\u3002 CARLA \u5c06\u4f7f\u7528\u5927\u7ea6 20 GB \u7684\u7a7a\u95f4\u3002 Python. Python \u662f CARLA \u4e2d\u7684\u4e3b\u8981\u811a\u672c\u8bed\u8a00\u3002CARLA \u5728 Linux \u4e0a\u652f\u6301 Python 2.7 \u548c Python 3\uff0c\u5728 Windows \u4e0a\u652f\u6301 Python 3\u3002 Pip. CARLA \u5ba2\u6237\u7aef\u5e93\u7684\u67d0\u4e9b\u5b89\u88c5\u65b9\u6cd5\u9700\u8981 pip \u6216 pip3 \uff08\u53d6\u51b3\u4e8e\u60a8\u7684 Python \u7248\u672c\uff09\u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u8981\u68c0\u67e5\u60a8\u7684 pip \u7248\u672c\uff1a # For Python 3 pip3 -V # For Python 2 pip -V \u5982\u679c\u60a8\u9700\u8981\u5347\u7ea7\uff1a # For Python 3 pip3 install --upgrade pip # For Python 2 pip install --upgrade pip \u4e24\u4e2a TCP \u7aef\u53e3\u548c\u826f\u597d\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002 \u9ed8\u8ba4\u4e3a 2000 \u5e74\u548c 2001 \u5e74\u3002\u786e\u4fdd\u8fd9\u4e9b\u7aef\u53e3\u672a\u88ab\u9632\u706b\u5899\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u963b\u6b62\u3002 \u5176\u4ed6\u9700\u6c42\u3002 CARLA \u9700\u8981\u4e00\u4e9b Python \u4f9d\u8d56\u9879\u3002\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u4f9d\u8d56\u9879\uff1a Windows pip3 install --user pygame numpy Linux pip install --user pygame numpy && pip3 install --user pygame numpy CARLA \u5b89\u88c5 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e0b\u8f7d\u5e76\u5b89\u88c5 CARLA \u4f5c\u4e3a\u8f6f\u4ef6\u5305\uff1a A) \u4e0b\u8f7d Debian \u8f6f\u4ef6\u5305\u3002 B) \u4ece GitHub \u4e0b\u8f7d\u8f6f\u4ef6\u5305\u3002 A. Debian CARLA \u5b89\u88c5 Debain \u8f6f\u4ef6\u5305\u9002\u7528\u4e8e Ubuntu 18.04 \u548c Ubuntu 20.04\uff0c\u4f46 \u5b98\u65b9\u652f\u6301\u7684\u5e73\u53f0\u662f Ubuntu 18.04 \u3002 1. \u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6eDebian\u5b58\u50a8\u5e93\uff1a sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1AF1527DE64CB8D9 sudo add-apt-repository \"deb [arch=amd64] http://dist.carla.org/carla $(lsb_release -sc) main\" 2. \u5b89\u88c5 CARLA \u5e76\u68c0\u67e5 /opt/ \u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709\u5b89\u88c5\uff1a sudo apt-get update # Update the Debian package index sudo apt-get install carla-simulator # Install the latest CARLA version, or update the current installation cd /opt/carla-simulator # Open the folder where CARLA is installed \u8be5\u5b58\u50a8\u5e93\u5305\u542b CARLA 0.9.10 \u53ca\u66f4\u9ad8\u7248\u672c\u3002\u8981\u5b89\u88c5\u7279\u5b9a\u7248\u672c\uff0c\u8bf7\u5c06\u7248\u672c\u6807\u7b7e\u6dfb\u52a0\u5230\u5b89\u88c5\u547d\u4ee4\u4e2d\uff1a apt-cache madison carla-simulator # List the available versions of Carla sudo apt-get install carla-simulator=0.9.10-1 # In this case, \"0.9.10\" refers to a CARLA version, and \"1\" to the Debian revision \u91cd\u8981 \u8981\u5b89\u88c5 0.9.10 \u4e4b\u524d\u7684 CARLA \u7248\u672c\uff0c\u8bf7\u4f7f\u7528\u7a97\u53e3\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u4e3a\u6587\u6863\u7684\u65e9\u671f\u7248\u672c\uff0c\u7136\u540e\u6309\u7167\u65e7\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002 B. \u5305\u5b89\u88c5 CARLA \u4ed3\u5e93 \u8be5\u5b58\u50a8\u5e93\u5305\u542b\u4e0d\u540c\u7248\u672c\u7684 CARLA\u3002\u60a8\u5c06\u627e\u5230\u4e0b\u8f7d\u5305\u542b\u6240\u6709\u6700\u65b0\u4fee\u590d\u548c\u529f\u80fd\u7684 \u5f53\u524d\u7248\u672c \u3001\u4ee5\u524d\u7684\u7248\u672c\u4ee5\u53ca\u5305\u542b\u6240\u6709\u5f00\u53d1\u4fee\u590d\u548c\u529f\u80fd\u7684 \u591c\u95f4\u6784\u5efa \uff08\u591c\u95f4\u6784\u5efa\u662f CARLA \u6700\u4e0d\u7a33\u5b9a\u7684\u7248\u672c\uff09\u7684\u9009\u9879\u3002 \u8be5\u5305\u662f\u4e00\u4e2a\u540d\u4e3a CARLA_version.number \u7684\u538b\u7f29\u6587\u4ef6\u3002\u4e0b\u8f7d\u5e76\u89e3\u538b\u53d1\u5e03\u6587\u4ef6\u3002\u5b83\u5305\u542b\u6a21\u62df\u5668\u7684\u9884\u7f16\u8bd1\u7248\u672c\u3001Python API \u6a21\u5757\u548c\u4e00\u4e9b\u7528\u4f5c\u793a\u4f8b\u7684\u811a\u672c\u3002 \u5bfc\u5165\u989d\u5916\u8d44\u4ea7 \u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u5176\u81ea\u5df1\u7684\u9644\u52a0\u8d44\u4ea7\u548c\u5730\u56fe\u5305\u3002\u6b64\u9644\u52a0\u5305\u5305\u62ec\u5730\u56fe Town06 \u3001 Town07 \u548c Town10 \u3002\u5b83\u4eec\u5355\u72ec\u5b58\u50a8\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u53ea\u80fd\u5728\u5b89\u88c5\u4e3b\u5305\u540e\u624d\u80fd\u5bfc\u5165\u5b83\u4eec\u3002 1. \u4e0b\u8f7d \u9002\u5408\u60a8\u6240\u9700\u7248\u672c\u7684 CARLA \u7684\u8f6f\u4ef6\u5305\u3002 2. \u89e3\u538b\u5305\uff1a \u5728 Linux \u4e0a : \u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u4ee5\u63d0\u53d6\u5185\u5bb9\uff1a cd path/to/carla/root ./ImportAssets.sh \u5728 Windows \u4e0a : \u76f4\u63a5\u5c06\u5185\u5bb9\u63d0\u53d6\u5230\u6839\u6587\u4ef6\u5939\u4e2d\u3002 \u5b89\u88c5\u5ba2\u6237\u7aef\u5e93 0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c \u4ee5\u524d\u7248\u672c\u7684 CARLA \u4e0d\u9700\u8981\u5b89\u88c5 Python \u5e93\uff0c\u5b83\u4eec\u9644\u5e26\u4e86\u4e00\u4e2a .egg \u5f00\u7bb1\u5373\u7528\u7684\u6587\u4ef6\u3002 CARLA \u7248\u672c 0.9.12+ \u663e\u7740\u6539\u53d8\u4e86\u8fd9\u79cd\u884c\u4e3a\uff1b\u6709\u591a\u4e2a\u9009\u9879\u53ef\u7528\u4e8e\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93 \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c\uff0c\u8bf7\u5728\u5c4f\u5e55\u53f3\u4e0b\u89d2\u9009\u62e9\u8be5\u7248\u672c\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\u3002\u5426\u5219\uff0c\u8bf7\u9605\u8bfb\u4e0b\u9762\u6709\u5173 CARLA 0.9.12+ \u4e2d\u53ef\u7528\u9009\u9879\u7684\u4fe1\u606f\u3002 CARLA 0.9.12+ \u6709\u591a\u4e2a\u9009\u9879\u53ef\u7528\u4e8e\u5b89\u88c5\u548c\u4f7f\u7528 CARLA \u5ba2\u6237\u7aef\u5e93\uff1a .egg \u6587\u4ef6 .whl \u6587\u4ef6 \u53ef\u4e0b\u8f7d\u7684Python\u5305 \u5728\u51b3\u5b9a\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u4e4b\u524d\uff0c\u8bf7\u9605\u8bfb\u4e0b\u9762\u6709\u5173\u6bcf\u79cd\u65b9\u6cd5\u7684\u8981\u6c42\u548c\u9650\u5236\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u6ce8\u610f\uff0c\u6df7\u5408\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u517c\u5bb9\uff0c\u56e0\u6b64\u8bf7\u5c3d\u53ef\u80fd\u4f7f\u7528\u865a\u62df\u73af\u5883\uff0c\u6216\u8005\u5728\u4f7f\u7528\u65b0\u5e93\u4e4b\u524d \u5378\u8f7d \u4ee5\u524d\u5b89\u88c5\u7684\u5e93\u3002 A. .egg \u6587\u4ef6 CARLA \u63d0\u4f9b\u4e86\u5728 PythonAPI/carla/dist/ \u6587\u4ef6\u5939\u4e0b\u7684\u4e0d\u540c Python \u7248\u672c .egg \u6587\u4ef6\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002 PythonAPI/examples \u4e2d\u7684\u6bcf\u4e2a\u793a\u4f8b\u811a\u672c\u90fd\u5305\u542b\u4e00\u4e2a\u81ea\u52a8\u67e5\u627e\u6b64\u6587\u4ef6\u7684 \u4ee3\u7801\u7247\u6bb5 \u3002\u5728 Linux \u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5c06\u6b64\u6587\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684 PYTHONPATH \u3002.\u5728 \u6b64\u5904 \u9605\u8bfb\u6709\u5173 CARLA \u4e2d .egg \u6587\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5982\u679c\u60a8\u4e4b\u524d\u5df2\u7ecf\u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93 pip \uff0c\u5219\u8be5\u5e93\u5c06\u4f18\u5148\u4e8e\u8be5 .egg \u6587\u4ef6 \u3002\u60a8\u9700\u8981\u5148 \u5378\u8f7d \u4ee5\u524d\u7684\u5e93\u3002 B. .whl \u6587\u4ef6 CARLA \u63d0\u4f9b\u4e86\u4e0d\u540c Python \u7248\u672c\u7684 .whl \u6587\u4ef6\u3002\u60a8\u5c06\u9700\u8981\u5b89\u88c5\u8be5.whl\u6587\u4ef6\u3002\u8be5 .whl \u6587\u4ef6\u4f4d\u4e8e PythonAPI/carla/dist/ \u3002\u6bcf\u4e2a\u53d7\u652f\u6301\u7684 Python \u7248\u672c\u90fd\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u7531\u6587\u4ef6\u540d\u6307\u793a\uff08\u4f8b\u5982\uff0ccarla-0.9.12- cp36 -cp36m-manylinux_2_27_x86_64.whl \u8868\u793a Python 3.6\uff09\u3002 \u5efa\u8bae\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u591a\u4e2a\u7248\u672c\u65f6\u53d1\u751f\u51b2\u7a81\u3002 \u8981\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u9009\u62e9\u9002\u5408\u60a8\u6240\u9700 Python \u7248\u672c\u7684\u6587\u4ef6\u3002\u60a8\u5c06\u9700\u8981 pip/pip3 \u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u6709\u5173\u5982\u4f55\u68c0\u67e5\u7248\u672c\u548c\u5347\u7ea7pip/pip3\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5f00\u59cb\u4e4b\u524d \u90e8\u5206\uff1a # Python 3 pip3 install <wheel-file-name>.whl # Python 2 pip install <wheel-file-name>.whl \u5982\u679c\u60a8\u4e4b\u524d\u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u5148 \u5378\u8f7d \u65e7\u5ba2\u6237\u7aef\u5e93\uff0c\u7136\u540e\u518d\u5b89\u88c5\u65b0\u5ba2\u6237\u7aef\u5e93\u3002 C. \u53ef\u4e0b\u8f7d\u7684 Python \u5305 CARLA \u5ba2\u6237\u7aef\u5e93\u53ef\u4ee5\u4ece PyPi \u4e0b\u8f7d\u3002\u8be5\u5e93\u4e0e Python \u7248\u672c 2.7\u30013.6\u30013.7 \u548c 3.8 \u517c\u5bb9\u3002\u8981\u5b89\u88c5\u5b83\uff0c\u60a8\u9700\u8981 pip/pip3 \u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u6709\u5173\u5982\u4f55\u68c0\u67e5\u7248\u672c\u548c\u5347\u7ea7pip/pip3\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5f00\u59cb\u4e4b\u524d \u90e8\u5206\u3002 \u5efa\u8bae\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u591a\u4e2a\u7248\u672c\u65f6\u53d1\u751f\u51b2\u7a81\u3002 \u8981\u4ece PyPi \u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a # Python 3 pip3 install carla # Python 2 pip install carla PyPi \u4e0b\u8f7d\u4ec5\u9002\u5408\u4e0e CARLA \u5305\u4e00\u8d77\u4f7f\u7528\uff08\u5373\u4e0d\u9002\u7528\u4e8e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7248\u672c\uff09\u3002\u7531\u4e8e PyPi \u4e0b\u8f7d \u4ec5\u5305\u542b\u5ba2\u6237\u7aef\u5e93 \uff0c\u56e0\u6b64\u5728\u60a8\u5c06\u4e0e\u8fdc\u7a0b CARLA \u670d\u52a1\u5668\u901a\u4fe1\u4e14\u4e0d\u9700\u8981\u4e0b\u8f7d\u5b8c\u6574\u7684 CARLA \u5305\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002 \u8fd0\u884c CARLA \u542f\u52a8 CARLA \u670d\u52a1\u5668\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u5b89\u88c5\u65b9\u6cd5\u548c\u64cd\u4f5c\u7cfb\u7edf\uff1a Debian \u5b89\u88c5: cd /opt/carla-simulator/bin/ ./CarlaUE4.sh Linux \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a cd path/to/carla/root ./CarlaUE4.sh Windows \u5305\u5b89\u88c5\uff1a cd path/to/carla/root CarlaUE4.exe \u5c06\u5f39\u51fa\u4e00\u4e2a\u5305\u542b\u57ce\u5e02\u666f\u89c2\u7684\u7a97\u53e3\u3002\u8fd9\u662f \u89c2\u5bdf\u8005 \u7684\u770b\u6cd5\u3002\u8981\u5728\u57ce\u5e02\u4e2d\u98de\u884c\uff0c\u8bf7\u4f7f\u7528\u9f20\u6807\u548cWASD\u6309\u952e\uff0c\u6309\u4f4f\u9f20\u6807\u53f3\u952e\u63a7\u5236\u65b9\u5411\u3002 \u8fd9\u662f\u670d\u52a1\u5668\u4eff\u771f\u5668\uff0c\u5b83\u73b0\u5728\u6b63\u5728\u8fd0\u884c\u5e76\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u5e76\u4e0e\u4e16\u754c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u793a\u4f8b\u811a\u672c\u6765\u5728\u57ce\u5e02\u4e2d\u4ea7\u751f\u751f\u547d\u5e76\u9a7e\u9a76\u6c7d\u8f66\uff1a # \u7ec8\u7aef A cd PythonAPI\\examples python3 -m pip install -r requirements.txt # Support for Python2 is provided in the CARLA release packages python3 generate_traffic.py # Terminal B cd PythonAPI\\examples python3 manual_control.py \u547d\u4ee4\u884c\u9009\u9879 \u542f\u52a8 CARLA \u65f6\u6709\u4e00\u4e9b\u53ef\u7528\u7684\u914d\u7f6e\u9009\u9879\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\uff1a ./CarlaUE4.sh -carla-rpc-port=3000 -carla-rpc-port=N \u4fa6\u542c\u7aef\u53e3 N \u4e0a\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u3002\u6d41\u5a92\u4f53\u7aef\u53e3\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a N+1 \u3002 -carla-streaming-port=N \u6307\u5b9a\u4f20\u611f\u5668\u6570\u636e\u6d41\u7684\u7aef\u53e3\u3002\u4f7f\u7528 0 \u83b7\u53d6\u968f\u673a\u672a\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u7b2c\u4e8c\u4e2a\u7aef\u53e3\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a N+1 \u3002 -quality-level={Low,Epic} \u66f4\u6539\u56fe\u5f62\u8d28\u91cf\u7ea7\u522b\u3002 \u5728 \u6e32\u67d3\u9009\u9879 \u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u865a\u5e7b\u5f15\u64ce 4 \u547d\u4ee4\u884c\u53c2\u6570\u5217\u8868 \u3002 \u3002\u865a\u5e7b\u5f15\u64ce\u63d0\u4f9b\u4e86\u5f88\u591a\u9009\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u8fd9\u4e9b\u9009\u9879\u5728 CARLA \u4e2d\u90fd\u53ef\u7528\u3002 \u8be5\u811a\u672c PythonAPI/util/config.py \u63d0\u4f9b\u4e86\u66f4\u591a\u914d\u7f6e\u9009\u9879\uff0c\u5e94\u5728\u670d\u52a1\u5668\u542f\u52a8\u65f6\u8fd0\u884c\uff1a ./config.py --no-rendering # Disable rendering ./config.py --map Town05 # Change map ./config.py --weather ClearNoon # Change weather ./config.py --help # Check all the available configuration options \u66f4\u65b0 CARLA \u65e0\u6cd5\u66f4\u65b0 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u5f53\u65b0\u7248\u672c\u53d1\u5e03\u65f6\uff0c\u5b58\u50a8\u5e93\u4f1a\u66f4\u65b0\uff0c\u60a8\u9700\u8981\u5220\u9664\u4ee5\u524d\u7684\u7248\u672c\u5e76\u5b89\u88c5\u65b0\u7248\u672c\u3002 \u5982\u679c\u60a8\u4f7f\u7528 pip/pip3 \u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5378\u8f7d\uff1a # Python 3 pip3 uninstall carla # Python 2 pip uninstall carla \u8ddf\u8fdb \u73b0\u5728\u60a8\u5e94\u8be5\u5df2\u7ecf\u542f\u52a8\u5e76\u8fd0\u884c\u4e86 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u5982\u679c\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u968f\u65f6\u5728 CARLA \u8bba\u575b \u6216 Discord \u9891\u9053\u4e2d\u53d1\u5e16\u3002 \u4e0b\u4e00\u6b65\u662f\u8be6\u7ec6\u4e86\u89e3 CARLA \u7684\u6838\u5fc3\u6982\u5ff5\u3002\u9605\u8bfb \u201c\u7b2c\u4e00\u6b65\u201d \u90e8\u5206\u5f00\u59cb\u5b66\u4e60\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728Python API \u53c2\u8003\u4e2d\u627e\u5230\u6709\u5173 Python API \u7c7b\u548c\u65b9\u6cd5\u7684\u6240\u6709\u4fe1\u606f\u3002 \u524d\u5f80\uff1a\u7b2c\u4e00\u6b65","title":"\u5feb\u901f\u542f\u52a8\u5305\u5b89\u88c5"},{"location":"start_quickstart/#_1","text":"\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u4e0b\u8f7d\u548c\u5b89\u88c5 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u8be5\u8f6f\u4ef6\u5305\u5305\u62ec CARLA \u670d\u52a1\u5668\u548c\u4e24\u4e2a\u5ba2\u6237\u7aef\u5e93\u9009\u9879\u3002\u8fd8\u53ef\u4ee5\u4e0b\u8f7d\u5176\u4ed6\u8d44\u6e90\u5e76\u5c06\u5176\u5bfc\u5165\u5230\u5305\u4e2d\u3002\u9700\u8981\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u9ad8\u7ea7\u81ea\u5b9a\u4e49\u548c\u5f00\u53d1\u9009\u9879\u4e0d\u53ef\u7528\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u9002\u7528\u4e8e Windows \u6216 Linux \u7684 CARLA \u6784\u5efa\u7248\u672c\u6765\u8bbf\u95ee\u8fd9\u4e9b\u9009\u9879\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d CARLA \u5b89\u88c5 A. Debian CARLA \u5b89\u88c5 B. \u5305\u5b89\u88c5 \u5bfc\u5165\u989d\u5916\u8d44\u4ea7 \u5b89\u88c5\u5ba2\u6237\u7aef\u5e93 0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c CARLA 0.9.12+ \u8fd0\u884c CARLA \u547d\u4ee4\u884c\u9009\u9879 \u66f4\u65b0 CARLA \u8ddf\u8fdb","title":"\u5feb\u901f\u542f\u52a8\u5305\u5b89\u88c5"},{"location":"start_quickstart/#_2","text":"\u5b89\u88c5 CARLA \u4e4b\u524d\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u7cfb\u7edf\u8981\u6c42\u3002 CARLA \u662f\u4e3a Windows \u548c Linux \u7cfb\u7edf\u6784\u5efa\u7684\u3002 \u8db3\u591f\u7684 GPU\u3002 CARLA \u65e8\u5728\u5b9e\u73b0\u771f\u5b9e\u4eff\u771f\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u81f3\u5c11\u9700\u8981 6 GB GPU\uff0c\u4f46\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 8 GB\u3002\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u4e13\u7528 GPU \u8fdb\u884c\u673a\u5668\u5b66\u4e60\u3002 \u78c1\u76d8\u7a7a\u95f4\u3002 CARLA \u5c06\u4f7f\u7528\u5927\u7ea6 20 GB \u7684\u7a7a\u95f4\u3002 Python. Python \u662f CARLA \u4e2d\u7684\u4e3b\u8981\u811a\u672c\u8bed\u8a00\u3002CARLA \u5728 Linux \u4e0a\u652f\u6301 Python 2.7 \u548c Python 3\uff0c\u5728 Windows \u4e0a\u652f\u6301 Python 3\u3002 Pip. CARLA \u5ba2\u6237\u7aef\u5e93\u7684\u67d0\u4e9b\u5b89\u88c5\u65b9\u6cd5\u9700\u8981 pip \u6216 pip3 \uff08\u53d6\u51b3\u4e8e\u60a8\u7684 Python \u7248\u672c\uff09\u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u8981\u68c0\u67e5\u60a8\u7684 pip \u7248\u672c\uff1a # For Python 3 pip3 -V # For Python 2 pip -V \u5982\u679c\u60a8\u9700\u8981\u5347\u7ea7\uff1a # For Python 3 pip3 install --upgrade pip # For Python 2 pip install --upgrade pip \u4e24\u4e2a TCP \u7aef\u53e3\u548c\u826f\u597d\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002 \u9ed8\u8ba4\u4e3a 2000 \u5e74\u548c 2001 \u5e74\u3002\u786e\u4fdd\u8fd9\u4e9b\u7aef\u53e3\u672a\u88ab\u9632\u706b\u5899\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u963b\u6b62\u3002 \u5176\u4ed6\u9700\u6c42\u3002 CARLA \u9700\u8981\u4e00\u4e9b Python \u4f9d\u8d56\u9879\u3002\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u4f9d\u8d56\u9879\uff1a","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"start_quickstart/#windows","text":"pip3 install --user pygame numpy","title":"Windows"},{"location":"start_quickstart/#linux","text":"pip install --user pygame numpy && pip3 install --user pygame numpy","title":"Linux"},{"location":"start_quickstart/#carla","text":"\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e0b\u8f7d\u5e76\u5b89\u88c5 CARLA \u4f5c\u4e3a\u8f6f\u4ef6\u5305\uff1a A) \u4e0b\u8f7d Debian \u8f6f\u4ef6\u5305\u3002 B) \u4ece GitHub \u4e0b\u8f7d\u8f6f\u4ef6\u5305\u3002","title":"CARLA \u5b89\u88c5"},{"location":"start_quickstart/#a-debian-carla","text":"Debain \u8f6f\u4ef6\u5305\u9002\u7528\u4e8e Ubuntu 18.04 \u548c Ubuntu 20.04\uff0c\u4f46 \u5b98\u65b9\u652f\u6301\u7684\u5e73\u53f0\u662f Ubuntu 18.04 \u3002 1. \u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6eDebian\u5b58\u50a8\u5e93\uff1a sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1AF1527DE64CB8D9 sudo add-apt-repository \"deb [arch=amd64] http://dist.carla.org/carla $(lsb_release -sc) main\" 2. \u5b89\u88c5 CARLA \u5e76\u68c0\u67e5 /opt/ \u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709\u5b89\u88c5\uff1a sudo apt-get update # Update the Debian package index sudo apt-get install carla-simulator # Install the latest CARLA version, or update the current installation cd /opt/carla-simulator # Open the folder where CARLA is installed \u8be5\u5b58\u50a8\u5e93\u5305\u542b CARLA 0.9.10 \u53ca\u66f4\u9ad8\u7248\u672c\u3002\u8981\u5b89\u88c5\u7279\u5b9a\u7248\u672c\uff0c\u8bf7\u5c06\u7248\u672c\u6807\u7b7e\u6dfb\u52a0\u5230\u5b89\u88c5\u547d\u4ee4\u4e2d\uff1a apt-cache madison carla-simulator # List the available versions of Carla sudo apt-get install carla-simulator=0.9.10-1 # In this case, \"0.9.10\" refers to a CARLA version, and \"1\" to the Debian revision \u91cd\u8981 \u8981\u5b89\u88c5 0.9.10 \u4e4b\u524d\u7684 CARLA \u7248\u672c\uff0c\u8bf7\u4f7f\u7528\u7a97\u53e3\u53f3\u4e0b\u89d2\u7684\u9762\u677f\u66f4\u6539\u4e3a\u6587\u6863\u7684\u65e9\u671f\u7248\u672c\uff0c\u7136\u540e\u6309\u7167\u65e7\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002","title":"A. Debian CARLA \u5b89\u88c5"},{"location":"start_quickstart/#b","text":"CARLA \u4ed3\u5e93 \u8be5\u5b58\u50a8\u5e93\u5305\u542b\u4e0d\u540c\u7248\u672c\u7684 CARLA\u3002\u60a8\u5c06\u627e\u5230\u4e0b\u8f7d\u5305\u542b\u6240\u6709\u6700\u65b0\u4fee\u590d\u548c\u529f\u80fd\u7684 \u5f53\u524d\u7248\u672c \u3001\u4ee5\u524d\u7684\u7248\u672c\u4ee5\u53ca\u5305\u542b\u6240\u6709\u5f00\u53d1\u4fee\u590d\u548c\u529f\u80fd\u7684 \u591c\u95f4\u6784\u5efa \uff08\u591c\u95f4\u6784\u5efa\u662f CARLA \u6700\u4e0d\u7a33\u5b9a\u7684\u7248\u672c\uff09\u7684\u9009\u9879\u3002 \u8be5\u5305\u662f\u4e00\u4e2a\u540d\u4e3a CARLA_version.number \u7684\u538b\u7f29\u6587\u4ef6\u3002\u4e0b\u8f7d\u5e76\u89e3\u538b\u53d1\u5e03\u6587\u4ef6\u3002\u5b83\u5305\u542b\u6a21\u62df\u5668\u7684\u9884\u7f16\u8bd1\u7248\u672c\u3001Python API \u6a21\u5757\u548c\u4e00\u4e9b\u7528\u4f5c\u793a\u4f8b\u7684\u811a\u672c\u3002","title":"B. \u5305\u5b89\u88c5"},{"location":"start_quickstart/#_3","text":"\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u5176\u81ea\u5df1\u7684\u9644\u52a0\u8d44\u4ea7\u548c\u5730\u56fe\u5305\u3002\u6b64\u9644\u52a0\u5305\u5305\u62ec\u5730\u56fe Town06 \u3001 Town07 \u548c Town10 \u3002\u5b83\u4eec\u5355\u72ec\u5b58\u50a8\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u53ea\u80fd\u5728\u5b89\u88c5\u4e3b\u5305\u540e\u624d\u80fd\u5bfc\u5165\u5b83\u4eec\u3002 1. \u4e0b\u8f7d \u9002\u5408\u60a8\u6240\u9700\u7248\u672c\u7684 CARLA \u7684\u8f6f\u4ef6\u5305\u3002 2. \u89e3\u538b\u5305\uff1a \u5728 Linux \u4e0a : \u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u4ee5\u63d0\u53d6\u5185\u5bb9\uff1a cd path/to/carla/root ./ImportAssets.sh \u5728 Windows \u4e0a : \u76f4\u63a5\u5c06\u5185\u5bb9\u63d0\u53d6\u5230\u6839\u6587\u4ef6\u5939\u4e2d\u3002","title":"\u5bfc\u5165\u989d\u5916\u8d44\u4ea7"},{"location":"start_quickstart/#_4","text":"","title":"\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93"},{"location":"start_quickstart/#0912-carla","text":"\u4ee5\u524d\u7248\u672c\u7684 CARLA \u4e0d\u9700\u8981\u5b89\u88c5 Python \u5e93\uff0c\u5b83\u4eec\u9644\u5e26\u4e86\u4e00\u4e2a .egg \u5f00\u7bb1\u5373\u7528\u7684\u6587\u4ef6\u3002 CARLA \u7248\u672c 0.9.12+ \u663e\u7740\u6539\u53d8\u4e86\u8fd9\u79cd\u884c\u4e3a\uff1b\u6709\u591a\u4e2a\u9009\u9879\u53ef\u7528\u4e8e\u5b89\u88c5\u5ba2\u6237\u7aef\u5e93 \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f 0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c\uff0c\u8bf7\u5728\u5c4f\u5e55\u53f3\u4e0b\u89d2\u9009\u62e9\u8be5\u7248\u672c\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\u3002\u5426\u5219\uff0c\u8bf7\u9605\u8bfb\u4e0b\u9762\u6709\u5173 CARLA 0.9.12+ \u4e2d\u53ef\u7528\u9009\u9879\u7684\u4fe1\u606f\u3002","title":"0.9.12 \u4e4b\u524d\u7684 CARLA \u7248\u672c"},{"location":"start_quickstart/#carla-0912","text":"\u6709\u591a\u4e2a\u9009\u9879\u53ef\u7528\u4e8e\u5b89\u88c5\u548c\u4f7f\u7528 CARLA \u5ba2\u6237\u7aef\u5e93\uff1a .egg \u6587\u4ef6 .whl \u6587\u4ef6 \u53ef\u4e0b\u8f7d\u7684Python\u5305 \u5728\u51b3\u5b9a\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u4e4b\u524d\uff0c\u8bf7\u9605\u8bfb\u4e0b\u9762\u6709\u5173\u6bcf\u79cd\u65b9\u6cd5\u7684\u8981\u6c42\u548c\u9650\u5236\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u6ce8\u610f\uff0c\u6df7\u5408\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u517c\u5bb9\uff0c\u56e0\u6b64\u8bf7\u5c3d\u53ef\u80fd\u4f7f\u7528\u865a\u62df\u73af\u5883\uff0c\u6216\u8005\u5728\u4f7f\u7528\u65b0\u5e93\u4e4b\u524d \u5378\u8f7d \u4ee5\u524d\u5b89\u88c5\u7684\u5e93\u3002 A. .egg \u6587\u4ef6 CARLA \u63d0\u4f9b\u4e86\u5728 PythonAPI/carla/dist/ \u6587\u4ef6\u5939\u4e0b\u7684\u4e0d\u540c Python \u7248\u672c .egg \u6587\u4ef6\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002 PythonAPI/examples \u4e2d\u7684\u6bcf\u4e2a\u793a\u4f8b\u811a\u672c\u90fd\u5305\u542b\u4e00\u4e2a\u81ea\u52a8\u67e5\u627e\u6b64\u6587\u4ef6\u7684 \u4ee3\u7801\u7247\u6bb5 \u3002\u5728 Linux \u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5c06\u6b64\u6587\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684 PYTHONPATH \u3002.\u5728 \u6b64\u5904 \u9605\u8bfb\u6709\u5173 CARLA \u4e2d .egg \u6587\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u5982\u679c\u60a8\u4e4b\u524d\u5df2\u7ecf\u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93 pip \uff0c\u5219\u8be5\u5e93\u5c06\u4f18\u5148\u4e8e\u8be5 .egg \u6587\u4ef6 \u3002\u60a8\u9700\u8981\u5148 \u5378\u8f7d \u4ee5\u524d\u7684\u5e93\u3002 B. .whl \u6587\u4ef6 CARLA \u63d0\u4f9b\u4e86\u4e0d\u540c Python \u7248\u672c\u7684 .whl \u6587\u4ef6\u3002\u60a8\u5c06\u9700\u8981\u5b89\u88c5\u8be5.whl\u6587\u4ef6\u3002\u8be5 .whl \u6587\u4ef6\u4f4d\u4e8e PythonAPI/carla/dist/ \u3002\u6bcf\u4e2a\u53d7\u652f\u6301\u7684 Python \u7248\u672c\u90fd\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u7531\u6587\u4ef6\u540d\u6307\u793a\uff08\u4f8b\u5982\uff0ccarla-0.9.12- cp36 -cp36m-manylinux_2_27_x86_64.whl \u8868\u793a Python 3.6\uff09\u3002 \u5efa\u8bae\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u591a\u4e2a\u7248\u672c\u65f6\u53d1\u751f\u51b2\u7a81\u3002 \u8981\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u9009\u62e9\u9002\u5408\u60a8\u6240\u9700 Python \u7248\u672c\u7684\u6587\u4ef6\u3002\u60a8\u5c06\u9700\u8981 pip/pip3 \u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u6709\u5173\u5982\u4f55\u68c0\u67e5\u7248\u672c\u548c\u5347\u7ea7pip/pip3\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5f00\u59cb\u4e4b\u524d \u90e8\u5206\uff1a # Python 3 pip3 install <wheel-file-name>.whl # Python 2 pip install <wheel-file-name>.whl \u5982\u679c\u60a8\u4e4b\u524d\u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u5148 \u5378\u8f7d \u65e7\u5ba2\u6237\u7aef\u5e93\uff0c\u7136\u540e\u518d\u5b89\u88c5\u65b0\u5ba2\u6237\u7aef\u5e93\u3002 C. \u53ef\u4e0b\u8f7d\u7684 Python \u5305 CARLA \u5ba2\u6237\u7aef\u5e93\u53ef\u4ee5\u4ece PyPi \u4e0b\u8f7d\u3002\u8be5\u5e93\u4e0e Python \u7248\u672c 2.7\u30013.6\u30013.7 \u548c 3.8 \u517c\u5bb9\u3002\u8981\u5b89\u88c5\u5b83\uff0c\u60a8\u9700\u8981 pip/pip3 \u7248\u672c 20.3 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u6709\u5173\u5982\u4f55\u68c0\u67e5\u7248\u672c\u548c\u5347\u7ea7pip/pip3\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5f00\u59cb\u4e4b\u524d \u90e8\u5206\u3002 \u5efa\u8bae\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5 CARLA \u5ba2\u6237\u7aef\u5e93\uff0c\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u591a\u4e2a\u7248\u672c\u65f6\u53d1\u751f\u51b2\u7a81\u3002 \u8981\u4ece PyPi \u5b89\u88c5\u5ba2\u6237\u7aef\u5e93\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a # Python 3 pip3 install carla # Python 2 pip install carla PyPi \u4e0b\u8f7d\u4ec5\u9002\u5408\u4e0e CARLA \u5305\u4e00\u8d77\u4f7f\u7528\uff08\u5373\u4e0d\u9002\u7528\u4e8e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7248\u672c\uff09\u3002\u7531\u4e8e PyPi \u4e0b\u8f7d \u4ec5\u5305\u542b\u5ba2\u6237\u7aef\u5e93 \uff0c\u56e0\u6b64\u5728\u60a8\u5c06\u4e0e\u8fdc\u7a0b CARLA \u670d\u52a1\u5668\u901a\u4fe1\u4e14\u4e0d\u9700\u8981\u4e0b\u8f7d\u5b8c\u6574\u7684 CARLA \u5305\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002","title":"CARLA 0.9.12+"},{"location":"start_quickstart/#carla_1","text":"\u542f\u52a8 CARLA \u670d\u52a1\u5668\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u5b89\u88c5\u65b9\u6cd5\u548c\u64cd\u4f5c\u7cfb\u7edf\uff1a Debian \u5b89\u88c5: cd /opt/carla-simulator/bin/ ./CarlaUE4.sh Linux \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a cd path/to/carla/root ./CarlaUE4.sh Windows \u5305\u5b89\u88c5\uff1a cd path/to/carla/root CarlaUE4.exe \u5c06\u5f39\u51fa\u4e00\u4e2a\u5305\u542b\u57ce\u5e02\u666f\u89c2\u7684\u7a97\u53e3\u3002\u8fd9\u662f \u89c2\u5bdf\u8005 \u7684\u770b\u6cd5\u3002\u8981\u5728\u57ce\u5e02\u4e2d\u98de\u884c\uff0c\u8bf7\u4f7f\u7528\u9f20\u6807\u548cWASD\u6309\u952e\uff0c\u6309\u4f4f\u9f20\u6807\u53f3\u952e\u63a7\u5236\u65b9\u5411\u3002 \u8fd9\u662f\u670d\u52a1\u5668\u4eff\u771f\u5668\uff0c\u5b83\u73b0\u5728\u6b63\u5728\u8fd0\u884c\u5e76\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u5e76\u4e0e\u4e16\u754c\u4ea4\u4e92\u3002\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u793a\u4f8b\u811a\u672c\u6765\u5728\u57ce\u5e02\u4e2d\u4ea7\u751f\u751f\u547d\u5e76\u9a7e\u9a76\u6c7d\u8f66\uff1a # \u7ec8\u7aef A cd PythonAPI\\examples python3 -m pip install -r requirements.txt # Support for Python2 is provided in the CARLA release packages python3 generate_traffic.py # Terminal B cd PythonAPI\\examples python3 manual_control.py","title":"\u8fd0\u884c CARLA"},{"location":"start_quickstart/#_5","text":"\u542f\u52a8 CARLA \u65f6\u6709\u4e00\u4e9b\u53ef\u7528\u7684\u914d\u7f6e\u9009\u9879\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\uff1a ./CarlaUE4.sh -carla-rpc-port=3000 -carla-rpc-port=N \u4fa6\u542c\u7aef\u53e3 N \u4e0a\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u3002\u6d41\u5a92\u4f53\u7aef\u53e3\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a N+1 \u3002 -carla-streaming-port=N \u6307\u5b9a\u4f20\u611f\u5668\u6570\u636e\u6d41\u7684\u7aef\u53e3\u3002\u4f7f\u7528 0 \u83b7\u53d6\u968f\u673a\u672a\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u7b2c\u4e8c\u4e2a\u7aef\u53e3\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a N+1 \u3002 -quality-level={Low,Epic} \u66f4\u6539\u56fe\u5f62\u8d28\u91cf\u7ea7\u522b\u3002 \u5728 \u6e32\u67d3\u9009\u9879 \u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u865a\u5e7b\u5f15\u64ce 4 \u547d\u4ee4\u884c\u53c2\u6570\u5217\u8868 \u3002 \u3002\u865a\u5e7b\u5f15\u64ce\u63d0\u4f9b\u4e86\u5f88\u591a\u9009\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u8fd9\u4e9b\u9009\u9879\u5728 CARLA \u4e2d\u90fd\u53ef\u7528\u3002 \u8be5\u811a\u672c PythonAPI/util/config.py \u63d0\u4f9b\u4e86\u66f4\u591a\u914d\u7f6e\u9009\u9879\uff0c\u5e94\u5728\u670d\u52a1\u5668\u542f\u52a8\u65f6\u8fd0\u884c\uff1a ./config.py --no-rendering # Disable rendering ./config.py --map Town05 # Change map ./config.py --weather ClearNoon # Change weather ./config.py --help # Check all the available configuration options","title":"\u547d\u4ee4\u884c\u9009\u9879"},{"location":"start_quickstart/#carla_2","text":"\u65e0\u6cd5\u66f4\u65b0 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u5f53\u65b0\u7248\u672c\u53d1\u5e03\u65f6\uff0c\u5b58\u50a8\u5e93\u4f1a\u66f4\u65b0\uff0c\u60a8\u9700\u8981\u5220\u9664\u4ee5\u524d\u7684\u7248\u672c\u5e76\u5b89\u88c5\u65b0\u7248\u672c\u3002 \u5982\u679c\u60a8\u4f7f\u7528 pip/pip3 \u5b89\u88c5\u4e86\u5ba2\u6237\u7aef\u5e93\uff0c\u5219\u5e94\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u5176\u5378\u8f7d\uff1a # Python 3 pip3 uninstall carla # Python 2 pip uninstall carla","title":"\u66f4\u65b0 CARLA"},{"location":"start_quickstart/#_6","text":"\u73b0\u5728\u60a8\u5e94\u8be5\u5df2\u7ecf\u542f\u52a8\u5e76\u8fd0\u884c\u4e86 CARLA \u7684\u6253\u5305\u7248\u672c\u3002\u5982\u679c\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4efb\u4f55\u56f0\u96be\uff0c\u8bf7\u968f\u65f6\u5728 CARLA \u8bba\u575b \u6216 Discord \u9891\u9053\u4e2d\u53d1\u5e16\u3002 \u4e0b\u4e00\u6b65\u662f\u8be6\u7ec6\u4e86\u89e3 CARLA \u7684\u6838\u5fc3\u6982\u5ff5\u3002\u9605\u8bfb \u201c\u7b2c\u4e00\u6b65\u201d \u90e8\u5206\u5f00\u59cb\u5b66\u4e60\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728Python API \u53c2\u8003\u4e2d\u627e\u5230\u6709\u5173 Python API \u7c7b\u548c\u65b9\u6cd5\u7684\u6240\u6709\u4fe1\u606f\u3002 \u524d\u5f80\uff1a\u7b2c\u4e00\u6b65","title":"\u8ddf\u8fdb"},{"location":"ts_traffic_simulation_overview/","text":"CARLA \u4e2d\u7684\u4ea4\u901a\u6a21\u62df \u4ea4\u901a\u6a21\u62df\u662f\u81ea\u52a8\u9a7e\u9a76\u5806\u6808\u51c6\u786e\u9ad8\u6548\u7684\u8bad\u7ec3\u548c\u6d4b\u8bd5\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\u3002CARLA \u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u9009\u9879\u6765\u4eff\u771f\u4ea4\u901a\u548c\u7279\u5b9a\u7684\u4ea4\u901a\u573a\u666f\u3002\u672c\u8282\u6982\u8ff0\u4e86\u53ef\u7528\u9009\u9879\uff0c\u53ef\u5e2e\u52a9\u60a8\u786e\u5b9a\u6700\u9002\u5408\u60a8\u7684\u7528\u4f8b\u7684\u9009\u9879\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 Scenario Runner \u548c OpenScenario Scenic SUMO \u4ea4\u901a\u7ba1\u7406\u5668 \u4ea4\u901a\u7ba1\u7406\u5668\u662f CARLA \u4e2d\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u7528\u4e8e\u4ece\u5ba2\u6237\u7aef\u63a7\u5236\u4eff\u771f\u4e2d\u7684\u67d0\u4e9b\u8f66\u8f86\u3002 carla.Vehicle.set_autopilot \u8f66\u8f86\u901a\u8fc7\u65b9\u6cd5\u6216\u6ce8\u518c\u5230\u6d41\u91cf\u7ba1\u7406\u5668command.SetAutopilot\u3002\u6bcf\u8f86\u8f66\u7684\u63a7\u5236\u662f\u901a\u8fc7 \u4e0d\u540c\u9636\u6bb5 \u7684\u5faa\u73af\u6765\u7ba1\u7406\u7684\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002 \u7528\u4e8e\uff1a \u7528\u771f\u5b9e\u7684\u57ce\u5e02\u4ea4\u901a\u72b6\u51b5\u586b\u5145\u4eff\u771f\u3002 \u81ea\u5b9a\u4e49\u4ea4\u901a\u884c\u4e3a \u4ee5\u8bbe\u7f6e\u7279\u5b9a\u7684\u5b66\u4e60\u73af\u5883\u3002 \u5f00\u53d1\u4e0e\u9636\u6bb5\u76f8\u5173\u7684\u529f\u80fd\u548c\u6570\u636e\u7ed3\u6784\uff0c\u540c\u65f6\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u8f6c\u81f3\u4ea4\u901a\u7ba1\u7406\u5668 Scenario Runner \u548c OpenScenario Scenario Runner \u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684 \u9884\u5b9a\u4e49\u4ea4\u901a\u573a\u666f \uff0c\u8fd8\u5141\u8bb8\u7528\u6237\u4f7f\u7528 Python \u6216 OpenSCENARIO 1.0 \u6807\u51c6 \u5b9a\u4e49\u81ea\u5df1 \u7684\u573a\u666f\u3002 OpenSCENARIO \u7684\u4e3b\u8981\u7528\u9014\u662f\u63cf\u8ff0\u6d89\u53ca\u591a\u8f86\u8f66\u7684\u590d\u6742\u64cd\u4f5c\u3002\u7528\u6237\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b Scenario Runner \u652f\u6301 OpenSCENARIO \u7684\u54ea\u4e9b\u529f\u80fd\u3002\u8fd9\u4e9b\u529f\u80fd\u5305\u62ec\u6f14\u4e60\u3001\u52a8\u4f5c\u3001\u6761\u4ef6\u3001\u6545\u4e8b\u548c\u6545\u4e8b\u677f\u3002 Scenario Runner \u5fc5\u987b\u4e0e\u4e3b CARLA \u5305 \u5206\u5f00 \u5b89\u88c5\u3002 \u7528\u4e8e\uff1a \u521b\u5efa\u590d\u6742\u7684\u4ea4\u901a\u573a\u666f\u548c\u8def\u7ebf\uff0c\u4e3a\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u505a\u597d\u51c6\u5907\uff0c\u4ee5\u4fbf\u5728 CARLA \u6392\u884c\u699c \u4e0a\u8fdb\u884c\u8bc4\u4f30\u3002 \u5b9a\u4e49\u53ef\u9488\u5bf9\u573a\u666f\u4eff\u771f\u7684\u8bb0\u5f55\u8fd0\u884c\u7684\u5b9a\u5236 \u6307\u6807 \uff0c\u4ece\u800c\u65e0\u9700\u91cd\u590d\u8fd0\u884c\u4eff\u771f\u3002 \u8f6c\u5230 Scenario Runner Scenic Scenic \u662f\u4e00\u79cd\u7279\u5b9a\u9886\u57df\u7684\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5bf9\u673a\u5668\u4eba\u548c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7b49\u7f51\u7edc\u7269\u7406\u7cfb\u7edf\u7684\u73af\u5883\u8fdb\u884c\u5efa\u6a21\u3002Scenic \u63d0\u4f9b\u4e86\u4e00\u4e2a \u4e13\u95e8\u9886\u57df \u6765\u4fc3\u8fdb Scenic \u811a\u672c\u5728 \u4eff\u771f\u5668\u4e0a\u7684\u6267\u884c\u3002 Scenic \u573a\u666f\u5b9a\u4e49\u6613\u4e8e\u9605\u8bfb\u548c\u6784\u5efa\u3002 \u6b64\u5904 \u63d0\u4f9b\u4e86\u521b\u5efa\u7b80\u5355\u573a\u666f\u7684\u6559\u7a0b\u3002 \u7528\u4e8e\uff1a \u4f7f\u7528\u5355\u4e2a\u573a\u666f\u5b9a\u4e49\u751f\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u573a\u666f\u3002 \u4e3a\u52a8\u6001\u667a\u80fd\u4f53\u5b9a\u4e49\u6982\u7387\u7b56\u7565\uff0c\u4ee5\u4fbf\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u91c7\u53d6\u884c\u52a8\u4ee5\u54cd\u5e94\u4e16\u754c\u72b6\u51b5\u3002 \u8f6c\u81f3 Scenic \u6559\u7a0b SUMO SUMO \u662f\u4e00\u79cd\u5f00\u6e90\u3001\u5fae\u89c2\u3001\u591a\u6a21\u5f0f\u4ea4\u901a\u4eff\u771f\u3002\u5728 SUMO \u4e2d\uff0c\u6bcf\u8f86\u8f66\u90fd\u7ecf\u8fc7\u660e\u786e\u5efa\u6a21\uff0c\u6709\u81ea\u5df1\u7684\u8def\u7ebf\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u5355\u72ec\u79fb\u52a8\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4eff\u771f\u662f\u786e\u5b9a\u6027\u7684\uff0c\u4f46\u6709\u591a\u79cd\u9009\u9879\u53ef\u4ee5\u5f15\u5165\u968f\u673a\u6027\u3002 CARLA \u63d0\u4f9b\u4e86\u4e0e SUMO \u7684\u8054\u5408\u4eff\u771f\u529f\u80fd\uff0c\u5141\u8bb8\u5728\u4e24\u4e2a\u4eff\u771f\u5668\u4e4b\u95f4\u5206\u914d\u4efb\u52a1\u3002\u8f66\u8f86\u53ef\u4ee5\u901a\u8fc7 SUMO \u5728 CARLA \u4e2d\u4ea7\u751f\uff0c\u5e76\u7531 SUMO \u8fdb\u884c\u7ba1\u7406\uff0c\u5c31\u50cf\u4ea4\u901a\u7ba1\u7406\u5668\u6240\u505a\u7684\u90a3\u6837\u3002 \u7528\u4e8e\uff1a \u5728\u4e00\u4e2a\u8f6f\u4ef6\u5305\u4e2d\u5229\u7528 CARLA \u548c SUMO \u7684\u529f\u80fd\u3002 \u8f6c\u81f3 SUMO \u534f\u540c\u4eff\u771f \u5982\u679c\u60a8\u5bf9 CARLA \u4e2d\u4eff\u771f\u4ea4\u901a\u7684\u4e0d\u540c\u9009\u9879\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u6216 Discord \u4e2d\u53d1\u5e16\u3002 CARLA \u8bba\u575b","title":"\u4ea4\u901a"},{"location":"ts_traffic_simulation_overview/#carla","text":"\u4ea4\u901a\u6a21\u62df\u662f\u81ea\u52a8\u9a7e\u9a76\u5806\u6808\u51c6\u786e\u9ad8\u6548\u7684\u8bad\u7ec3\u548c\u6d4b\u8bd5\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\u3002CARLA \u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u9009\u9879\u6765\u4eff\u771f\u4ea4\u901a\u548c\u7279\u5b9a\u7684\u4ea4\u901a\u573a\u666f\u3002\u672c\u8282\u6982\u8ff0\u4e86\u53ef\u7528\u9009\u9879\uff0c\u53ef\u5e2e\u52a9\u60a8\u786e\u5b9a\u6700\u9002\u5408\u60a8\u7684\u7528\u4f8b\u7684\u9009\u9879\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 Scenario Runner \u548c OpenScenario Scenic SUMO","title":"CARLA \u4e2d\u7684\u4ea4\u901a\u6a21\u62df"},{"location":"ts_traffic_simulation_overview/#_1","text":"\u4ea4\u901a\u7ba1\u7406\u5668\u662f CARLA \u4e2d\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u7528\u4e8e\u4ece\u5ba2\u6237\u7aef\u63a7\u5236\u4eff\u771f\u4e2d\u7684\u67d0\u4e9b\u8f66\u8f86\u3002 carla.Vehicle.set_autopilot \u8f66\u8f86\u901a\u8fc7\u65b9\u6cd5\u6216\u6ce8\u518c\u5230\u6d41\u91cf\u7ba1\u7406\u5668command.SetAutopilot\u3002\u6bcf\u8f86\u8f66\u7684\u63a7\u5236\u662f\u901a\u8fc7 \u4e0d\u540c\u9636\u6bb5 \u7684\u5faa\u73af\u6765\u7ba1\u7406\u7684\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002 \u7528\u4e8e\uff1a \u7528\u771f\u5b9e\u7684\u57ce\u5e02\u4ea4\u901a\u72b6\u51b5\u586b\u5145\u4eff\u771f\u3002 \u81ea\u5b9a\u4e49\u4ea4\u901a\u884c\u4e3a \u4ee5\u8bbe\u7f6e\u7279\u5b9a\u7684\u5b66\u4e60\u73af\u5883\u3002 \u5f00\u53d1\u4e0e\u9636\u6bb5\u76f8\u5173\u7684\u529f\u80fd\u548c\u6570\u636e\u7ed3\u6784\uff0c\u540c\u65f6\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u8f6c\u81f3\u4ea4\u901a\u7ba1\u7406\u5668","title":"\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"ts_traffic_simulation_overview/#scenario-runner-openscenario","text":"Scenario Runner \u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684 \u9884\u5b9a\u4e49\u4ea4\u901a\u573a\u666f \uff0c\u8fd8\u5141\u8bb8\u7528\u6237\u4f7f\u7528 Python \u6216 OpenSCENARIO 1.0 \u6807\u51c6 \u5b9a\u4e49\u81ea\u5df1 \u7684\u573a\u666f\u3002 OpenSCENARIO \u7684\u4e3b\u8981\u7528\u9014\u662f\u63cf\u8ff0\u6d89\u53ca\u591a\u8f86\u8f66\u7684\u590d\u6742\u64cd\u4f5c\u3002\u7528\u6237\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b Scenario Runner \u652f\u6301 OpenSCENARIO \u7684\u54ea\u4e9b\u529f\u80fd\u3002\u8fd9\u4e9b\u529f\u80fd\u5305\u62ec\u6f14\u4e60\u3001\u52a8\u4f5c\u3001\u6761\u4ef6\u3001\u6545\u4e8b\u548c\u6545\u4e8b\u677f\u3002 Scenario Runner \u5fc5\u987b\u4e0e\u4e3b CARLA \u5305 \u5206\u5f00 \u5b89\u88c5\u3002 \u7528\u4e8e\uff1a \u521b\u5efa\u590d\u6742\u7684\u4ea4\u901a\u573a\u666f\u548c\u8def\u7ebf\uff0c\u4e3a\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u505a\u597d\u51c6\u5907\uff0c\u4ee5\u4fbf\u5728 CARLA \u6392\u884c\u699c \u4e0a\u8fdb\u884c\u8bc4\u4f30\u3002 \u5b9a\u4e49\u53ef\u9488\u5bf9\u573a\u666f\u4eff\u771f\u7684\u8bb0\u5f55\u8fd0\u884c\u7684\u5b9a\u5236 \u6307\u6807 \uff0c\u4ece\u800c\u65e0\u9700\u91cd\u590d\u8fd0\u884c\u4eff\u771f\u3002 \u8f6c\u5230 Scenario Runner","title":"Scenario Runner \u548c OpenScenario"},{"location":"ts_traffic_simulation_overview/#scenic","text":"Scenic \u662f\u4e00\u79cd\u7279\u5b9a\u9886\u57df\u7684\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5bf9\u673a\u5668\u4eba\u548c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7b49\u7f51\u7edc\u7269\u7406\u7cfb\u7edf\u7684\u73af\u5883\u8fdb\u884c\u5efa\u6a21\u3002Scenic \u63d0\u4f9b\u4e86\u4e00\u4e2a \u4e13\u95e8\u9886\u57df \u6765\u4fc3\u8fdb Scenic \u811a\u672c\u5728 \u4eff\u771f\u5668\u4e0a\u7684\u6267\u884c\u3002 Scenic \u573a\u666f\u5b9a\u4e49\u6613\u4e8e\u9605\u8bfb\u548c\u6784\u5efa\u3002 \u6b64\u5904 \u63d0\u4f9b\u4e86\u521b\u5efa\u7b80\u5355\u573a\u666f\u7684\u6559\u7a0b\u3002 \u7528\u4e8e\uff1a \u4f7f\u7528\u5355\u4e2a\u573a\u666f\u5b9a\u4e49\u751f\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u573a\u666f\u3002 \u4e3a\u52a8\u6001\u667a\u80fd\u4f53\u5b9a\u4e49\u6982\u7387\u7b56\u7565\uff0c\u4ee5\u4fbf\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u91c7\u53d6\u884c\u52a8\u4ee5\u54cd\u5e94\u4e16\u754c\u72b6\u51b5\u3002 \u8f6c\u81f3 Scenic \u6559\u7a0b","title":"Scenic"},{"location":"ts_traffic_simulation_overview/#sumo","text":"SUMO \u662f\u4e00\u79cd\u5f00\u6e90\u3001\u5fae\u89c2\u3001\u591a\u6a21\u5f0f\u4ea4\u901a\u4eff\u771f\u3002\u5728 SUMO \u4e2d\uff0c\u6bcf\u8f86\u8f66\u90fd\u7ecf\u8fc7\u660e\u786e\u5efa\u6a21\uff0c\u6709\u81ea\u5df1\u7684\u8def\u7ebf\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u5355\u72ec\u79fb\u52a8\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4eff\u771f\u662f\u786e\u5b9a\u6027\u7684\uff0c\u4f46\u6709\u591a\u79cd\u9009\u9879\u53ef\u4ee5\u5f15\u5165\u968f\u673a\u6027\u3002 CARLA \u63d0\u4f9b\u4e86\u4e0e SUMO \u7684\u8054\u5408\u4eff\u771f\u529f\u80fd\uff0c\u5141\u8bb8\u5728\u4e24\u4e2a\u4eff\u771f\u5668\u4e4b\u95f4\u5206\u914d\u4efb\u52a1\u3002\u8f66\u8f86\u53ef\u4ee5\u901a\u8fc7 SUMO \u5728 CARLA \u4e2d\u4ea7\u751f\uff0c\u5e76\u7531 SUMO \u8fdb\u884c\u7ba1\u7406\uff0c\u5c31\u50cf\u4ea4\u901a\u7ba1\u7406\u5668\u6240\u505a\u7684\u90a3\u6837\u3002 \u7528\u4e8e\uff1a \u5728\u4e00\u4e2a\u8f6f\u4ef6\u5305\u4e2d\u5229\u7528 CARLA \u548c SUMO \u7684\u529f\u80fd\u3002 \u8f6c\u81f3 SUMO \u534f\u540c\u4eff\u771f \u5982\u679c\u60a8\u5bf9 CARLA \u4e2d\u4eff\u771f\u4ea4\u901a\u7684\u4e0d\u540c\u9009\u9879\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u6216 Discord \u4e2d\u53d1\u5e16\u3002 CARLA \u8bba\u575b","title":"SUMO"},{"location":"tuto_A_add_props/","text":"\u6dfb\u52a0\u65b0\u9053\u5177 \u9664\u4e86\u5730\u56fe\u548c\u8f66\u8f86\u4e4b\u5916\uff0c\u9053\u5177\u662f\u573a\u666f\u4e2d\u7684\u8d44\u4ea7\u3002\u5176\u4e2d\u5305\u62ec\u8def\u706f\u3001\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\u7b49\u3002\u4eff\u771f\u5668\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u7b80\u5355\u7684\u8fc7\u7a0b\u5bfc\u5165\u65b0\u9053\u5177\u3002\u8fd9\u5bf9\u4e8e\u5728\u5730\u56fe\u4e2d\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\u975e\u5e38\u6709\u7528\u3002 \u51c6\u5907\u5305 \u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u521b\u5efa JSON \u63cf\u8ff0 \u5bfc\u5165\u5230 CARLA \u5305\u4e2d \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165 \u51c6\u5907\u5305 \u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 1. \u5728 carla/Import \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 . \u6587\u4ef6\u5939\u7684\u540d\u79f0\u4e0d\u76f8\u5173\u3002 2. \u521b\u5efa\u5b50\u6587\u4ef6\u5939\u3002 \u5e94\u8be5\u6709\u4e00\u4e2a\u901a\u7528\u5b50\u6587\u4ef6\u5939\u6765\u5b58\u653e\u6240\u6709\u9053\u5177\uff0c\u5e76\u4e14\u5728\u5176\u4e2d\u5305\u542b\u4e0e\u8981\u5bfc\u5165\u7684\u9053\u5177\u4e00\u6837\u591a\u7684\u5b50\u6587\u4ef6\u5939\u3002 3. \u5c06\u5404\u4e2a\u9053\u5177\u7684\u6587\u4ef6\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u9053\u5177\u5b50\u6587\u4ef6\u5939\u5c06\u5305\u542b .fbx \u7f51\u683c\u7269\u4f53\uff0c\u4ee5\u53ca\u5b83\u6240\u9700\u7684\u7eb9\u7406\uff08\u53ef\u9009\uff09\u3002 \u4f8b\u5982\uff0c\u5305\u542b\u4e24\u4e2a\u72ec\u7acb\u5305\u7684 Import \u6587\u4ef6\u5939\u5e94\u5177\u6709\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\u7684\u7ed3\u6784\u3002 Import \u2502 \u251c\u2500\u2500 Package01 \u2502 \u251c\u2500\u2500 Package01.json \u2502 \u2514\u2500\u2500 Props \u2502 \u251c\u2500\u2500 Prop01 \u2502 \u2502 \u251c\u2500\u2500 Prop01_Diff.png \u2502 \u2502 \u251c\u2500\u2500 Prop01_Norm.png \u2502 \u2502 \u251c\u2500\u2500 Prop01_Spec.png \u2502 \u2502 \u2514\u2500\u2500 Prop01.fbx \u2502 \u2514\u2500\u2500 Prop02 \u2502 \u2514\u2500\u2500 Prop02.fbx \u2514\u2500\u2500 Package02 \u251c\u2500\u2500 Packag02.json \u2514\u2500\u2500 Props \u2514\u2500\u2500 Prop03 \u2514\u2500\u2500 Prop03.fbx \u521b\u5efa JSON \u63cf\u8ff0 \u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u3002\u5728\u5305\u4e4b\u540e\u547d\u540d\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u662f\u53d1\u884c\u7248\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u63cf\u8ff0\u5730\u56fe maps \u548c\u9053\u5177 props \u7684 JSON \u6570\u7ec4\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u4e0d\u662f\u672c\u6559\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8be5\u5b9a\u4e49\u5c06\u4e3a\u7a7a\u3002\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u6559\u7a0b\u6765 \u6dfb\u52a0\u65b0\u5730\u56fe \u3002 Props \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\u3002 \u9053\u5177\u7684 name \u3002\u8fd9\u5fc5\u987b\u4e0e .fbx \u76f8\u540c\u3002 .fbx \u7684 source \u8def\u5f84\u3002 \u9053\u5177\u7684 size \u4f30\u8ba1\u3002\u6b64\u5904\u5217\u51fa\u4e86\u53ef\u80fd\u7684\u503c\u3002 tiny small medium big huge \u8bed\u4e49\u5206\u5272\u7684 tag \u3002\u5982\u679c\u6807\u7b7e\u62fc\u5199\u9519\u8bef\uff0c\u5b83\u5c06\u88ab\u8bfb\u53d6\u4e3a Unlabeled . Bridge Building Dynamic Fence Ground GuardRail Other Pedestrian Pole RailTrack Road RoadLine SideWalk Sky Static Terrain TrafficLight TrafficSign Unlabeled Vegetation Vehicles Wall Water \u6700\u540e\uff0c .json \u5e94\u8be5\u4e0e\u4e0b\u9762\u7684\u7c7b\u4f3c\u3002 { \"maps\": [ ], \"props\": [ { \"name\": \"MyProp01\", \"size\": \"medium\", \"source\": \"./Props/Prop01/Prop01.fbx\", \"tag\": \"SemanticSegmentationTag01\" }, { \"name\": \"MyProp02\", \"size\": \"small\", \"source\": \"./Props/Prop02/Prop02.fbx\", \"tag\": \"SemanticSegmentationTag02\" } ] } \u8b66\u544a \u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u5305\u5c06\u4ea7\u751f\u9519\u8bef\u3002 \u5bfc\u5165\u5230 CARLA \u5305\u4e2d \u8fd9\u662f\u7528\u4e8e\u5c06\u9053\u5177\u5bfc\u5165\u5230 CARLA \u5305\uff08\u4f8b\u5982 CARLA 0.9.8\uff09\u4e2d\u7684\u65b9\u6cd5\u3002 \u5c06\u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u3002\u5b83\u5145\u5f53\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u81ea\u52a8\u5c06\u5305\u5bfc\u5165\u5230 CARLA \u955c\u50cf\u4e2d\uff0c\u5e76\u751f\u6210\u5206\u53d1\u5305\u3002Docker \u955c\u50cf\u9700\u8981 4 \u5c0f\u65f6\u548c 400GB \u624d\u80fd\u6784\u5efa\u3002\u7136\u800c\uff0c\u8fd9\u4ec5\u662f\u7b2c\u4e00\u6b21\u9700\u8981\u3002 1. \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u955c\u50cf\u3002 \u8bf7\u6309\u7167 \u4ee5\u4e0b\u8bf4\u660e \u6784\u5efa\u6620\u50cf\u3002 2. \u8fd0\u884c\u811a\u672c\u6765\u70d8\u57f9\u9053\u5177\u3002 ~/carla/Util/Docker \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a\u811a\u672c\uff0c\u5b83\u4e0e\u4e4b\u524d\u521b\u5efa\u7684 Docker \u6620\u50cf\u8fde\u63a5\uff0c\u5e76\u81ea\u52a8\u8fdb\u884c\u5bfc\u5165\u3002\u5b83\u53ea\u9700\u8981\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84\u4ee5\u53ca\u8981\u5bfc\u5165\u7684\u5305\u7684\u540d\u79f0\u3002 python3 docker_tools.py --input ~/path_to_package --output ~/path_for_output_assets --package=Package01 3. \u5b9a\u4f4d\u5305 \u3002 Docker \u5e94\u8be5\u5df2\u7ecf\u5728\u8f93\u51fa\u8def\u5f84\u4e2d\u751f\u6210\u4e86\u5305 Package01.tar.gz \u3002\u8fd9\u662f\u8d44\u4ea7\u7684\u72ec\u7acb\u5305\u3002 4. \u5c06\u5305\u5bfc\u5165 CARLA\u3002 \u5728 Windows \u4e0a\uff0c \u5c06\u5305\u89e3\u538b\u5230 WindowsNoEditor \u6587\u4ef6\u5939\u4e2d\u3002 \u5728 Linux \u4e0a\uff0c \u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\uff0c\u7136\u540e\u8fd0\u884c\u811a\u672c\u5c06\u5176\u5bfc\u5165\u3002 cd Util ./ImportAssets.sh \u7b14\u8bb0 Linux \u4e0a\u6709\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\u3002\u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\uff0c\u5e76\u8fd0\u884c\u811a\u672c Util/ImportAssets.sh \u4ee5\u63d0\u53d6\u5305\u3002 \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165 \u8fd9\u662f\u4ece\u6e90\u4ee3\u7801\u5c06\u9053\u5177\u5bfc\u5165\u5230\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u7684\u65b9\u6cd5\u3002 \u5c06\u8bfb\u53d6 JSON \u6587\u4ef6\u4ee5\u5c06\u9053\u5177\u653e\u5165\u865a\u5e7b\u5f15\u64ce Content \u4e2d\u3002\u6b64\u5916\uff0c\u5b83\u5c06\u5728\u5305\u7684 Config \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a Package1.Package.json \u6587\u4ef6\u3002\u8fd9\u5c06\u7528\u4e8e\u5b9a\u4e49\u84dd\u56fe\u5e93\u4e2d\u7684\u9053\u5177\uff0c\u5e76\u5728 Python API \u4e2d\u516c\u5f00\u5b83\u4eec\u3002\u5982\u679c\u5305\u4f5c\u4e3a \u72ec\u7acb\u5305 \u5bfc\u51fa\uff0c\u4e5f\u5c06\u4f7f\u7528\u5b83\u3002 \u4e00\u5207\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u8fd0\u884c\u547d\u4ee4\u3002 make import \u8b66\u544a \u786e\u4fdd\u8be5\u5305\u4f4d\u4e8eCARLA \u7684 Import \u6587\u4ef6\u5939\u5185\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e\u5c06\u65b0\u9053\u5177\u5bfc\u5165 CARLA \u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u5168\u90e8\u4fe1\u606f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u6dfb\u52a0\u65b0\u9053\u5177"},{"location":"tuto_A_add_props/#_1","text":"\u9664\u4e86\u5730\u56fe\u548c\u8f66\u8f86\u4e4b\u5916\uff0c\u9053\u5177\u662f\u573a\u666f\u4e2d\u7684\u8d44\u4ea7\u3002\u5176\u4e2d\u5305\u62ec\u8def\u706f\u3001\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\u7b49\u3002\u4eff\u771f\u5668\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u7b80\u5355\u7684\u8fc7\u7a0b\u5bfc\u5165\u65b0\u9053\u5177\u3002\u8fd9\u5bf9\u4e8e\u5728\u5730\u56fe\u4e2d\u521b\u5efa\u81ea\u5b9a\u4e49\u73af\u5883\u975e\u5e38\u6709\u7528\u3002 \u51c6\u5907\u5305 \u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u521b\u5efa JSON \u63cf\u8ff0 \u5bfc\u5165\u5230 CARLA \u5305\u4e2d \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165","title":"\u6dfb\u52a0\u65b0\u9053\u5177"},{"location":"tuto_A_add_props/#_2","text":"","title":"\u51c6\u5907\u5305"},{"location":"tuto_A_add_props/#_3","text":"1. \u5728 carla/Import \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 . \u6587\u4ef6\u5939\u7684\u540d\u79f0\u4e0d\u76f8\u5173\u3002 2. \u521b\u5efa\u5b50\u6587\u4ef6\u5939\u3002 \u5e94\u8be5\u6709\u4e00\u4e2a\u901a\u7528\u5b50\u6587\u4ef6\u5939\u6765\u5b58\u653e\u6240\u6709\u9053\u5177\uff0c\u5e76\u4e14\u5728\u5176\u4e2d\u5305\u542b\u4e0e\u8981\u5bfc\u5165\u7684\u9053\u5177\u4e00\u6837\u591a\u7684\u5b50\u6587\u4ef6\u5939\u3002 3. \u5c06\u5404\u4e2a\u9053\u5177\u7684\u6587\u4ef6\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u9053\u5177\u5b50\u6587\u4ef6\u5939\u5c06\u5305\u542b .fbx \u7f51\u683c\u7269\u4f53\uff0c\u4ee5\u53ca\u5b83\u6240\u9700\u7684\u7eb9\u7406\uff08\u53ef\u9009\uff09\u3002 \u4f8b\u5982\uff0c\u5305\u542b\u4e24\u4e2a\u72ec\u7acb\u5305\u7684 Import \u6587\u4ef6\u5939\u5e94\u5177\u6709\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\u7684\u7ed3\u6784\u3002 Import \u2502 \u251c\u2500\u2500 Package01 \u2502 \u251c\u2500\u2500 Package01.json \u2502 \u2514\u2500\u2500 Props \u2502 \u251c\u2500\u2500 Prop01 \u2502 \u2502 \u251c\u2500\u2500 Prop01_Diff.png \u2502 \u2502 \u251c\u2500\u2500 Prop01_Norm.png \u2502 \u2502 \u251c\u2500\u2500 Prop01_Spec.png \u2502 \u2502 \u2514\u2500\u2500 Prop01.fbx \u2502 \u2514\u2500\u2500 Prop02 \u2502 \u2514\u2500\u2500 Prop02.fbx \u2514\u2500\u2500 Package02 \u251c\u2500\u2500 Packag02.json \u2514\u2500\u2500 Props \u2514\u2500\u2500 Prop03 \u2514\u2500\u2500 Prop03.fbx","title":"\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784"},{"location":"tuto_A_add_props/#json","text":"\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u3002\u5728\u5305\u4e4b\u540e\u547d\u540d\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u662f\u53d1\u884c\u7248\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u63cf\u8ff0\u5730\u56fe maps \u548c\u9053\u5177 props \u7684 JSON \u6570\u7ec4\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 Maps \u4e0d\u662f\u672c\u6559\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8be5\u5b9a\u4e49\u5c06\u4e3a\u7a7a\u3002\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u6559\u7a0b\u6765 \u6dfb\u52a0\u65b0\u5730\u56fe \u3002 Props \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\u3002 \u9053\u5177\u7684 name \u3002\u8fd9\u5fc5\u987b\u4e0e .fbx \u76f8\u540c\u3002 .fbx \u7684 source \u8def\u5f84\u3002 \u9053\u5177\u7684 size \u4f30\u8ba1\u3002\u6b64\u5904\u5217\u51fa\u4e86\u53ef\u80fd\u7684\u503c\u3002 tiny small medium big huge \u8bed\u4e49\u5206\u5272\u7684 tag \u3002\u5982\u679c\u6807\u7b7e\u62fc\u5199\u9519\u8bef\uff0c\u5b83\u5c06\u88ab\u8bfb\u53d6\u4e3a Unlabeled . Bridge Building Dynamic Fence Ground GuardRail Other Pedestrian Pole RailTrack Road RoadLine SideWalk Sky Static Terrain TrafficLight TrafficSign Unlabeled Vegetation Vehicles Wall Water \u6700\u540e\uff0c .json \u5e94\u8be5\u4e0e\u4e0b\u9762\u7684\u7c7b\u4f3c\u3002 { \"maps\": [ ], \"props\": [ { \"name\": \"MyProp01\", \"size\": \"medium\", \"source\": \"./Props/Prop01/Prop01.fbx\", \"tag\": \"SemanticSegmentationTag01\" }, { \"name\": \"MyProp02\", \"size\": \"small\", \"source\": \"./Props/Prop02/Prop02.fbx\", \"tag\": \"SemanticSegmentationTag02\" } ] } \u8b66\u544a \u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u5305\u5c06\u4ea7\u751f\u9519\u8bef\u3002","title":"\u521b\u5efa JSON \u63cf\u8ff0"},{"location":"tuto_A_add_props/#carla","text":"\u8fd9\u662f\u7528\u4e8e\u5c06\u9053\u5177\u5bfc\u5165\u5230 CARLA \u5305\uff08\u4f8b\u5982 CARLA 0.9.8\uff09\u4e2d\u7684\u65b9\u6cd5\u3002 \u5c06\u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u3002\u5b83\u5145\u5f53\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u81ea\u52a8\u5c06\u5305\u5bfc\u5165\u5230 CARLA \u955c\u50cf\u4e2d\uff0c\u5e76\u751f\u6210\u5206\u53d1\u5305\u3002Docker \u955c\u50cf\u9700\u8981 4 \u5c0f\u65f6\u548c 400GB \u624d\u80fd\u6784\u5efa\u3002\u7136\u800c\uff0c\u8fd9\u4ec5\u662f\u7b2c\u4e00\u6b21\u9700\u8981\u3002 1. \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u955c\u50cf\u3002 \u8bf7\u6309\u7167 \u4ee5\u4e0b\u8bf4\u660e \u6784\u5efa\u6620\u50cf\u3002 2. \u8fd0\u884c\u811a\u672c\u6765\u70d8\u57f9\u9053\u5177\u3002 ~/carla/Util/Docker \u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a\u811a\u672c\uff0c\u5b83\u4e0e\u4e4b\u524d\u521b\u5efa\u7684 Docker \u6620\u50cf\u8fde\u63a5\uff0c\u5e76\u81ea\u52a8\u8fdb\u884c\u5bfc\u5165\u3002\u5b83\u53ea\u9700\u8981\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84\u4ee5\u53ca\u8981\u5bfc\u5165\u7684\u5305\u7684\u540d\u79f0\u3002 python3 docker_tools.py --input ~/path_to_package --output ~/path_for_output_assets --package=Package01 3. \u5b9a\u4f4d\u5305 \u3002 Docker \u5e94\u8be5\u5df2\u7ecf\u5728\u8f93\u51fa\u8def\u5f84\u4e2d\u751f\u6210\u4e86\u5305 Package01.tar.gz \u3002\u8fd9\u662f\u8d44\u4ea7\u7684\u72ec\u7acb\u5305\u3002 4. \u5c06\u5305\u5bfc\u5165 CARLA\u3002 \u5728 Windows \u4e0a\uff0c \u5c06\u5305\u89e3\u538b\u5230 WindowsNoEditor \u6587\u4ef6\u5939\u4e2d\u3002 \u5728 Linux \u4e0a\uff0c \u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\uff0c\u7136\u540e\u8fd0\u884c\u811a\u672c\u5c06\u5176\u5bfc\u5165\u3002 cd Util ./ImportAssets.sh \u7b14\u8bb0 Linux \u4e0a\u6709\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\u3002\u5c06\u5305\u79fb\u52a8\u5230 Import \u6587\u4ef6\u5939\uff0c\u5e76\u8fd0\u884c\u811a\u672c Util/ImportAssets.sh \u4ee5\u63d0\u53d6\u5305\u3002","title":"\u5bfc\u5165\u5230 CARLA \u5305\u4e2d"},{"location":"tuto_A_add_props/#_4","text":"\u8fd9\u662f\u4ece\u6e90\u4ee3\u7801\u5c06\u9053\u5177\u5bfc\u5165\u5230\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u7684\u65b9\u6cd5\u3002 \u5c06\u8bfb\u53d6 JSON \u6587\u4ef6\u4ee5\u5c06\u9053\u5177\u653e\u5165\u865a\u5e7b\u5f15\u64ce Content \u4e2d\u3002\u6b64\u5916\uff0c\u5b83\u5c06\u5728\u5305\u7684 Config \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a Package1.Package.json \u6587\u4ef6\u3002\u8fd9\u5c06\u7528\u4e8e\u5b9a\u4e49\u84dd\u56fe\u5e93\u4e2d\u7684\u9053\u5177\uff0c\u5e76\u5728 Python API \u4e2d\u516c\u5f00\u5b83\u4eec\u3002\u5982\u679c\u5305\u4f5c\u4e3a \u72ec\u7acb\u5305 \u5bfc\u51fa\uff0c\u4e5f\u5c06\u4f7f\u7528\u5b83\u3002 \u4e00\u5207\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u8fd0\u884c\u547d\u4ee4\u3002 make import \u8b66\u544a \u786e\u4fdd\u8be5\u5305\u4f4d\u4e8eCARLA \u7684 Import \u6587\u4ef6\u5939\u5185\u3002 \u8fd9\u5c31\u662f\u5173\u4e8e\u5c06\u65b0\u9053\u5177\u5bfc\u5165 CARLA \u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u5168\u90e8\u4fe1\u606f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u5728\u6e90\u4ee3\u7801\u6784\u5efa\u4e2d\u5bfc\u5165"},{"location":"tuto_A_add_vehicle/","text":"\u6dfb\u52a0\u65b0\u8f66 \u8fd9\u4e2a\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5411 Carla \u6dfb\u52a0\u65b0\u7684\u8f66\u8f86\u3002\u6559\u7a0b\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u7528\u4e8e\u56db\u8f6e\u8f66\u8f86\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u4e24\u8f6e\u8f66\u8f86\u3002\u6559\u7a0b\u6982\u8ff0\u4e86\u5efa\u6a21\u8f66\u8f86\u65f6\u5fc5\u987b\u6ee1\u8db3\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4ee5\u786e\u4fdd\u8f66\u8f86\u5728 Carla \u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u5e76\u63d0\u4f9b\u4e86\u5728\u5c06\u8f66\u8f86\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\u540e\u6240\u9700\u7684\u914d\u7f6e\u8bf4\u660e\u3002 \u6dfb\u52a0 4 \u8f6e\u8f66\u8f86 \u7ed1\u5b9a\u5e76\u5efa\u6a21\u8f66\u8f86 \u5bfc\u5165\u5e76\u914d\u7f6e\u8f66\u8f86 \u6dfb\u52a0 2 \u8f6e\u8f66\u8f86 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002 \u6dfb\u52a0 4 \u8f6e\u8f66\u8f86 \u6dfb\u52a0\u5230 CARLA \u7684\u8f66\u8f86\u9700\u8981\u4f7f\u7528\u53ef\u5728 \u6b64\u5904 \u627e\u5230\u7684\u901a\u7528\u57fa\u7840\u9aa8\u67b6\u3002\u6b64\u94fe\u63a5\u5c06\u4e0b\u8f7d\u4e00\u4e2a\u540d\u4e3a VehicleSkeleton.rar \u7684\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u79cd\u4e0d\u540c\u683c\u5f0f\u7684\u57fa\u672c\u6846\u67b6\uff0c\u4e00\u79cd\u4e3a ASCII\uff0c\u53e6\u4e00\u79cd\u4e3a\u4e8c\u8fdb\u5236\u3002\u60a8\u4f7f\u7528\u7684\u683c\u5f0f\u53d6\u51b3\u4e8e\u60a8\u7684 3D \u5efa\u6a21\u8f6f\u4ef6\u8981\u6c42\u3002 \u9aa8\u67b6\u9aa8\u9abc\u7684\u4f4d\u7f6e\u53ef\u4ee5\u66f4\u6539\uff0c\u4f46\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff08\u4f8b\u5982\u65cb\u8f6c\u3001\u6dfb\u52a0\u65b0\u9aa8\u9abc\u6216\u66f4\u6539\u5f53\u524d\u5c42\u6b21\u7ed3\u6784\uff09\u90fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 \u7ed1\u5b9a\u5e76\u5efa\u6a21\u8f66\u8f86 \u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8f66\u8f86\u5efa\u6a21\u9636\u6bb5\u7684\u6700\u4f4e\u8981\u6c42\uff0c\u4ee5\u786e\u4fdd\u5176\u53ef\u4ee5\u5728 Carla \u4e2d\u6210\u529f\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u5305\u62ec\u5c06\u9aa8\u67b6\u6b63\u786e\u7ed1\u5b9a\u5230\u8f66\u8f86\u7684\u5e95\u5ea7\u548c\u8f66\u8f6e\u3001\u521b\u5efa\u7269\u7406\u8d44\u6e90\u548c\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\uff0c\u4ee5\u53ca\u5bfc\u51fa\u4e3a\u6b63\u786e\u7684\u683c\u5f0f\u3002 1. \u5bfc\u5165\u57fa\u7840\u9aa8\u67b6\u3002 \u5c06\u57fa\u7840\u9aa8\u67b6\u5bfc\u5165\u60a8\u9996\u9009\u7684\u4e09\u7ef4\u5efa\u6a21\u8f6f\u4ef6\u4e2d\u3002\u5e38\u89c1\u7684\u7f16\u8f91\u5668\u5305\u62ec Maya \u548c Blender\u3002 2. \u7ed1\u5b9a\u9aa8\u9abc\u3002 \u6839\u636e\u4e0b\u9762\u7684\u547d\u540d\u6cd5\u5c06\u9aa8\u9abc\u7ed1\u5b9a\u5230\u8f66\u8f86\u7f51\u683c\u7684\u76f8\u5e94\u90e8\u5206\u3002\u786e\u4fdd\u8f6e\u5b50\u7684\u9aa8\u9abc\u5728\u7f51\u683c\u5185\u5c45\u4e2d\u3002 \u5de6\u524d\u8f6e\uff1a Wheel_Front_Left \u53f3\u524d\u8f6e\uff1a Wheel_Front_Right \u5de6\u540e\u8f6e\uff1a Wheel_Rear_Left \u53f3\u540e\u8f6e\uff1a Wheel_Rear_Right \u7f51\u683c\u7684\u5176\u4f59\u90e8\u5206\uff1a VehicleBase \u8b66\u544a \u4e0d\u8981\u5bf9\u9aa8\u9abc\u540d\u79f0\u6216\u5c42\u6b21\u7ed3\u6784\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\uff0c\u4e5f\u4e0d\u8981\u6dfb\u52a0\u4efb\u4f55\u65b0\u9aa8\u9abc\u3002 3. \u4e3a\u60a8\u7684\u8f66\u8f86\u5efa\u6a21\u3002 \u8f66\u8f86\u5e94\u62e5\u6709\u5927\u7ea6 50,000 - 100,000 \u4e2a tris\u3002\u6211\u4eec\u4f7f\u7528\u5b9e\u9645\u6c7d\u8f66\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\u6765\u5efa\u6a21\u8f66\u8f86\u3002 \u6211\u4eec\u5efa\u8bae\u60a8\u5c06\u8f66\u8f86\u5206\u4e3a\u4ee5\u4e0b\u6750\u8d28\uff1a Bodywork : \u8f66\u8f86\u7684\u91d1\u5c5e\u90e8\u5206\u3002\u8be5\u6750\u8d28\u5df2\u66f4\u6539\u4e3a\u865a\u5e7b\u5f15\u64ce\u6750\u8d28\u3002\u53ef\u4ee5\u6dfb\u52a0\u5fbd\u6807\u548c\u7ec6\u8282\uff0c\u4f46\u4e3a\u4e86\u53ef\u89c1\uff0c\u5fc5\u987b\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684 Alpha \u901a\u9053\u5c06\u5b83\u4eec\u7ed8\u5236\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002 Glass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u53ef\u4ee5\u4ece\u8f66\u8f86\u5916\u90e8\u770b\u5230\u5185\u90e8\u3002 Glass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u8f66\u8f86\u5185\u90e8\u5230\u5916\u90e8\u7684\u53ef\u89c1\u6027\u3002 Lights : \u5934\u706f\u3001\u6307\u793a\u706f\u7b49\u3002 LightGlass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5916\u90e8\u5230\u5185\u90e8\u7684\u706f\u5149\u53ef\u89c1\u6027\u3002 LightGlass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5185\u90e8\u5230\u5916\u90e8\u770b\u5230\u5149\u3002 LicensePlate : 29x12 \u5398\u7c73\u7684\u77e9\u5f62\u5e73\u9762\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Carla \u63d0\u4f9b\u7684 .fbx \u4ee5\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\uff0c\u8bf7\u5728 \u6b64\u5904 \u4e0b\u8f7d\u3002\u7eb9\u7406\u5c06\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u81ea\u52a8\u5206\u914d\u3002 Interior : \u4efb\u4f55\u5176\u4ed6\u4e0d\u9002\u5408\u4e0a\u8ff0\u90e8\u5206\u7684\u7ec6\u8282\u90fd\u53ef\u4ee5\u8fdb\u5165 \u5185\u9970 . \u6750\u6599\uff08Material\uff09\u5e94\u4f7f\u7528\u683c\u5f0f M_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982 M_Bodywork_Mustang \u3002 \u7eb9\u7406\uff08Textures\uff09\u5e94\u4f7f\u7528\u683c\u5f0f T_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982 T_Bodywork_Mustang \u3002\u7eb9\u7406\u7684\u5927\u5c0f\u5e94\u4e3a 2048x2048\u3002 \u865a\u5e7b\u5f15\u64ce\u4f1a\u81ea\u52a8\u521b\u5efa(Level of Details, LOD)\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u5728 3D \u7f16\u8f91\u5668\u4e2d\u624b\u52a8\u521b\u5efa\u5b83\u4eec\u3002Tri \u8ba1\u6570\u5982\u4e0b\uff1a LOD 0 : 100,000 tris LOD 1 : 80,000 tris LOD 2 : 60,000 tris LOD 3 : 30,000 tris 4. \u521b\u5efa\u7269\u7406\u8d44\u6e90\u7f51\u683c\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u662f\u4e00\u4e2a\u9644\u52a0\u7f51\u683c\uff0c\u5141\u8bb8\u865a\u5e7b\u5f15\u64ce\u8ba1\u7b97\u8f66\u8f86\u7684\u7269\u7406\u7279\u6027\u3002\u5b83\u5e94\u8be5\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u51cf\u5c11\u591a\u8fb9\u5f62\u6570\u91cf\uff0c\u5e76\u4e14\u5e94\u8be5\u8986\u76d6\u9664\u8f66\u8f6e\u4e4b\u5916\u7684\u6574\u4e2a\u8f66\u8f86\u3002\u8bf7\u53c2\u9605\u4e0b\u56fe\u7684\u793a\u4f8b\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u5e94\u5bfc\u51fa\u4e3a\u5355\u72ec\u7684 .fbx \u6587\u4ef6\u3002\u6700\u7ec8\u6587\u4ef6\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u6709\u4e00\u4e2a\u57fa\u7840\u7f51\u683c\u3002\u8fd9\u5e94\u8be5\u662f\u7269\u7406\u8d44\u6e90\u7f51\u683c\u7684\u526f\u672c\u3002\u5b83\u5e94\u8be5\u4e0e\u539f\u59cb\u8f66\u8f86\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u4f53\u5fc5\u987b\u4f7f\u7528\u683c\u5f0f UCX_<vehicle_name>_<number_of_mesh> \u547d\u540d\uff0c \u5426\u5219\u865a\u5e7b\u5f15\u64ce\u5c06\u65e0\u6cd5\u8bc6\u522b\u3002 \u7f51\u683c\u4e0d\u5f97\u8d85\u51fa\u539f\u59cb\u6a21\u578b\u7684\u8fb9\u754c\u3002 \u7f51\u683c\u5e94\u4e0e\u539f\u59cb\u6a21\u578b\u5177\u6709\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u5c06\u6700\u7ec8 .fbx \u7f51\u683c\u5bfc\u51fa\u4e3a\u540d\u4e3a SMC_<vehicle_name>.fbx \u7684\u6587\u4ef6\u3002 5. \u4e3a\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u521b\u5efa\u7f51\u683c\u3002 \u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\u8bbe\u7f6e\u5c06\u7531\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\uff08RADAR\u3001LiDAR \u548c Semantic LiDAR\uff09\u68c0\u6d4b\u5230\u7684\u8f66\u8f86\u5f62\u72b6\u3002\u8be5\u7f51\u683c\u5e94\u8be5\u5177\u6709\u6bd4\u7269\u7406\u8d44\u4ea7\u7f51\u683c\u7a0d\u5fae\u66f4\u660e\u786e\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u4ee5\u63d0\u9ad8\u4f20\u611f\u5668\u6a21\u62df\u7684\u771f\u5b9e\u611f\uff0c\u4f46\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u4e0d\u5982\u6c7d\u8f66\u7f51\u683c\u90a3\u4e48\u8be6\u7ec6\u3002 \u521b\u5efa\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\u65f6\u8bf7\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a \u7f51\u683c\u5e94\u8986\u76d6\u8f66\u8f86\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5305\u62ec\u8f66\u8f6e\u3001\u540e\u89c6\u955c\u548c\u683c\u6805\u3002 \u8f6e\u5b50\u5e94\u4e3a\u4e0d\u8d85\u8fc7 16 \u5708\u7684\u5706\u67f1\u4f53\u3002 \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5c06\u5404\u79cd\u7f51\u683c\u8fde\u63a5\u5728\u4e00\u8d77\u3002 \u7f51\u683c\u4e0d\u5f97\u8d85\u51fa\u539f\u59cb\u6a21\u578b\u7684\u8fb9\u754c\u3002 \u7f51\u683c\u5e94\u8be5\u4e0e\u539f\u59cb\u7f51\u683c\u5177\u6709\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u5c06\u6700\u7ec8\u7f51\u683c\u5bfc\u51fa\u540d\u4e3a SM_sc_<vehicle_name>.fbx \u7684 .fbx \u6587\u4ef6\u3002 5. \u5bfc\u51fa\u8f66\u8f86\u7f51\u683c\u3002 \u9009\u62e9\u6240\u6709\u4e3b\u8981\u8f66\u8f86\u7f51\u683c\u548c\u9aa8\u67b6\u5e95\u5ea7\u5e76\u5bfc\u51fa\u4e3a .fbx \u3002 \u5bfc\u5165\u5e76\u914d\u7f6e\u8f66\u8f86 \u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5c06\u8f66\u8f86\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u7684\u8fc7\u7a0b\u3002\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u6267\u884c\u8fd9\u4e9b\u6b65\u9aa4\u3002 1. \u521b\u5efa\u8f66\u8f86\u6587\u4ef6\u5939\u3002 \u5728 Content/Carla/Static/Vehicles/4Wheeled \u91cc\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <vehicle_name> \u7684\u65b0\u6587\u4ef6\u5939\u3002 2. \u5bfc\u5165 .fbx \u3002 Inside the new vehicle folder, import your main vehicle skeleton .fbx by right-clicking in the Content Browser and selecting Import into Game/Carla/Static/Vehicles/4Wheeled/<vehicle_name> . In the dialogue box that pops up: Set Import Content Type to Geometry and Skinning Weights . Set Normal Import Method to Import Normals . Optionally set Material Import Method to Do not create materials . Uncheck Import Textures to avoid Unreal Engine creating default materials. The Skeletal Mesh will appear along with two new files, <vehicle_name>_PhysicsAssets and <vehicle_name>_Skeleton . Import the rest of your .fbx files separately from the main vehicle skeleton .fbx file. 3. Set the physical asset mesh. Open <vehicle_name>_PhysicsAssets from the Content Browser . Right-click on the Vehicle_Base mesh in the Skeleton Tree panel and go to Copy Collision from StaticMesh . Search for and select your SMC_<vehicle_name> file. You should see the outline of the physical asset mesh appear in the viewport. Delete the default capsule shape from the Vehicle_Base . Select all the wheels: Go to the Tools panel and change the Primitive Type to Sphere . Go to the Details panel and change Physics Type to Kinematic . Set Linear Damping to 0 . This will eliminate any extra friction on the wheels. Enable Simulation Generates Hit Event for all meshes. Click Re-generate Bodies . Adjust the wheel sphere to the size of the wheel. Save and close the window. 4. Create the Animation Blueprint. In the Content Browser , right-click inside your vehicle folder and select Animation -> Animation Blueprint . In Parent Class search for and select VehicleAnimInstance . In Target Skeleton search for and select <vehicle_name>_Skeleton . Press OK and rename the blueprint as AnimBP_<vehicle_name> . 5. Configure the Animation Blueprint. To ease the process of configuring the animation blueprint, we will copy an existing one from a native CARLA vehicle: Go to Content/Carla/Static/Vehicle and choose any CARLA vehicle folder. Open its Animation Blueprint. In the My Blueprint panel, double click on AnimGraph . You will see the graph come up in the viewport. Click and drag to select the Mesh Space Ref Pose , Wheel Handler , and Component To Local components. Right-click and select Copy . Go back to your own vehicle Animation Blueprint and paste the copied contents into the graph area. Click and drag from the standing figure in the Component To Local component to the figure in Output Pose to join the components together. Click Compile in the top left corner. You should now see a pulsating line flowing through the entire sequence. Save and close the window. 6. Prepare the vehicle and wheel blueprints. In the Content Browser , go to Content/Carla/Blueprints/Vehicles and create a new folder <vehicle_name> . Inside the folder, right-click and go to Blueprint Class . Open the All Classes section in the pop-up. Search for BaseVehiclePawn and press Select . Rename the file as BP_<vehicle_name> . Go to the folder of any of the native CARLA vehicles in Carla/Blueprints/Vehicles . From the Content Browser , copy the four wheel blueprints into the blueprint folder for your own vehicle. Rename the files to replace the old vehicle name with your own vehicle name. 7. Configure the wheel blueprints. In your vehicle blueprint folder, open all four of the wheel blueprints. In the Class Defaults panel, set Collision Mesh to Wheel_Shape . Omitting this step will cause the vehicle wheels to sink into the ground . Adjust the values for wheel shape radius, width, mass, and damping rate according to your vehicle specifications. Set Tire Config to CommonTireConfig On the front wheels set Steer Angle according to your preferences (default is 70 ). Uncheck Affected by Handbrake . On the rear wheels set Steer Angle to 0 . Check Affected by Handbrake . When setting the suspension values, you can use the values here as a guide. Compile and save. 8. Configure vehicle blueprint. From the Content Browser , open your BP_<vehicle_name> . In the Components panel, select Mesh (VehicleMesh) (Inherited) . In the Details panel, go to Skeletal Mesh and search for and select the base skeleton file of your vehicle (located in the Carla/Static/Vehicles/4Wheeled/<vehicle_name> folder). Go to Anim Class in the Details panel. Search for and select your AnimBP_<vehicle_name> file. In the Components panel, select Custom Collision (Inherited) . Select Static Mesh in the Details panel and search for your SM_sc_<vehicle_name> raycast sensor mesh. In the Components panel, select VehicleMovement (MovementComp) (Inherited) . In the Details panel, search for wheel . You will find settings for each of the wheels. For each one, click on Wheel Class and search for the BP_<vehicle_name>_<wheel_name> file that corresponds to the correct wheel position. If you have any additional meshes for your vehicle (doors, lights, etc.,) separate from the base mesh: Drag them into the Mesh (VehicleMesh) (Inherited) hierarchy in the Components panel. Select the extra meshes in the hierarchy and search for Collision in the Details panel. Set Collision Presets to NoCollision . Select any lights meshes in the hierarchy. Search for Tag in the Details panel and add the tag emissive . Click Save and Compile . 9. Add the vehicle to the Blueprint Library . In Content/Carla/Blueprint/Vehicle , open the VehicleFactory file. In the Generate Definitions tab, double click Vehicles . In the Details panel, expand the Default Value section and add a new element to the vehicles array. Fill in the Make and Model of your vehicle. Fill in the Class value with your BP_<vehicle_name> file. Optionally, provide a set of recommended colors for the vehicle. Compile and save. 10. Test the vehicle . Launch CARLA, open a terminal in PythonAPI/examples and run the following command: python3 manual_control.py --filter <model_name> # The make or model defined in step 9 Note Even if you used upper case characters in your make and model, they need to be converted to lower case when passed to the filter. Add an N wheeled vehicle Adding an N wheeled vehicle follows the same import pipeline as that for 4 wheeled vehicles above with a few steps that are different. 5. Configure the Animation Blueprint for an N wheeled vehicle Search for BaseVehiclePawnNW and press Select . 6. Prepare the vehicle and wheel blueprints Go to the folder of any native CARLA vehicles in Carla/Blueprints/Vehicles. From the Content Browser, copy the four wheel blueprints into the blueprint folder for your own vehicle. Rename the files to replace the old vehicle name with your own vehicle name. Copy the four wheels and copy again for additional wheels. In the case of a 6 wheeled vehicle, you will need 6 different wheels: FLW, FRW, MLW, MRW, RLW, RRW. 7. Configure the wheel blueprints Follow section 7 as above for the 4 wheeled vehicle. The key difference in the case of an N wheeled vehicle is those affected by handbrake and steering parameters. In some vehicles (like for example a long wheelbase truck) the front 2 pairs of wheels will steer, and one set may steer more than others. The rearmost pairs may be affected by handbrake, the specifics will depend upon the vehicle you are modelling. 8. Configure vehicle blueprint In the Details panel, search for wheel . You will find settings for each of the wheels. For each one, click on Wheel Class and search for the BP_ _ file that corresponds to the correct wheel position. This is correct, but just to specify, in the case of N wheeled vehicles, you need to set ALL the wheels. This is an example with a 6 wheeled vehicle: Finally, an additional consideration is setting the differential. In the case of a 4 wheeled vehicle, we have different presets of differentials (Limited Slip, Open 4W etc.) but with N wheeled vehicles, you need to choose on which wheels you want to apply torque. In this case, we have chosen only the middle and rear wheels have torque, while the front wheels don\u2019t, you can specify other configurations. The numbers are going to be the same as the image above this text (e.g. 0 will be the Front Left Wheel, as specified above). All other parameters such as engine, transmission, steering curve, are the same as 4 wheeled vehicles. Add a 2 wheeled vehicle Adding 2 wheeled vehicles is similar to adding a 4 wheeled one but due to the complexity of the animation you'll need to set up aditional bones to guide the driver's animation. Here is the link to the reference skeleton for 2 wheeled vehicles. As with the 4 wheeled vehicles, orient the model towards positive \"x\" and every bone axis towards positive x and with the z axis facing upwards. Bone Setup: - Bike_Rig: # The origin point of the mesh. Place it in the point 0 of the scenecomment - BikeBody: # The model's body centre. - Pedals: # If the vehicle is a bike bind the pedalier to this bone, will rotate with the bike acceleration. - RightPedal: # Sets the driver's feet position and rotates with the pedalier if the vehicle is a bike. - LeftPedal: # ^ - RearWheel: # Rear Wheel of the vehicle - Handler: # Rotates with the frontal wheel of the vehicle bind the vehicle handler to it. - HandlerMidBone: # Positioned over the front wheel bone to orient the handler with the wheel - HandlerRight: # Sets the position of the driver's hand, no need to bind it to anything. - HandlerLeft: # ^ - Frontwheel: # Frontal wheel of the vehicle. - RightHelperRotator: # This four additional bones are here for an obsolete system of making the bike stable by using aditional invisible wheels - RightHelprWheel: # ^ - LeftHelperRotator: # ^ - LeftHelperWheel: # ^ - Seat: # Sets the position of the drivers hip bone. No need to bind it to anything but place it carefully. 1. Import fbx as Skelletal Mesh to its own folder inside Content/Carla/Static/Vehicles/2Wheeled . When importing select \"General2WheeledVehicleSkeleton\" as skelleton A Physics asset should be automatically created and linked. 2. Tune the Physics asset. Delete the automatically created ones and add boxes to the BikeBody bone trying to match the shape as possible, make sure generate hit events is enabled. Add a sphere for each wheel and set their \"Physics Type\" to \"Kinematic\". 3. Create folder Content/Blueprints/Vehicles/<vehicle-model> 4. Inside that folder create two blueprint classes derived from \"VehicleWheel\" class. Call them <vehicle-model>_FrontWheel and <vehicle-model>_RearWheel . Set their \"Shape Radius\" to exactly match the mesh wheel radius (careful, radius not diameter). Set their \"Tire Config\" to \"CommonTireConfig\". On the front wheel uncheck \"Affected by Handbrake\" and on the rear wheel set \"Steer Angle\" to zero. 5. Inside the same folder create a blueprint class derived from Base2WheeledVehicle call it <vehicle-model> . Open it for edit and select component \"Mesh\", setup the \"Skeletal Mesh\" and the \"Anim Class\" to the corresponding ones. Then select the VehicleBounds component and set the size to cover vehicle's area as seen from above. 6. Select component \"VehicleMovement\", under \"Vehicle Setup\" expand \"Wheel Setups\", setup each wheel. 0: Wheel Class= <vehicle-model>_FrontWheel , Bone Name= FrontWheel 1: Wheel Class= <vehicle-model>_FrontWheel , Bone Name= FrontWheel 2: Wheel Class= <vehicle-model>_RearWheel , Bone Name= RearWheel 3: Wheel Class= <vehicle-model>_RearWheel , Bone Name= RearWheel (You'll notice that we are basically placing two wheels in each bone. The vehicle class unreal provides does not support vehicles with wheel numbers different from 4 so we had to make it believe the vehicle has 4 wheels) 7. Select the variable \"is bike\" and tick it if your model is a bike. This will activate the pedalier rotation. Leave unmarked if you are setting up a motorbike. 8. Find the variable back Rotation and set it as it fit better select the component SkeletalMesh (The driver) and move it along x axis until its in the seat position. 9. Test it, go to CarlaGameMode blueprint and change \"Default Pawn Class\" to the newly created bike blueprint.","title":"\u6dfb\u52a0\u65b0\u8f66\u8f86"},{"location":"tuto_A_add_vehicle/#_1","text":"\u8fd9\u4e2a\u6559\u7a0b\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5411 Carla \u6dfb\u52a0\u65b0\u7684\u8f66\u8f86\u3002\u6559\u7a0b\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u7528\u4e8e\u56db\u8f6e\u8f66\u8f86\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u4e24\u8f6e\u8f66\u8f86\u3002\u6559\u7a0b\u6982\u8ff0\u4e86\u5efa\u6a21\u8f66\u8f86\u65f6\u5fc5\u987b\u6ee1\u8db3\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4ee5\u786e\u4fdd\u8f66\u8f86\u5728 Carla \u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u5e76\u63d0\u4f9b\u4e86\u5728\u5c06\u8f66\u8f86\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\u540e\u6240\u9700\u7684\u914d\u7f6e\u8bf4\u660e\u3002 \u6dfb\u52a0 4 \u8f6e\u8f66\u8f86 \u7ed1\u5b9a\u5e76\u5efa\u6a21\u8f66\u8f86 \u5bfc\u5165\u5e76\u914d\u7f6e\u8f66\u8f86 \u6dfb\u52a0 2 \u8f6e\u8f66\u8f86 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002","title":"\u6dfb\u52a0\u65b0\u8f66"},{"location":"tuto_A_add_vehicle/#4","text":"\u6dfb\u52a0\u5230 CARLA \u7684\u8f66\u8f86\u9700\u8981\u4f7f\u7528\u53ef\u5728 \u6b64\u5904 \u627e\u5230\u7684\u901a\u7528\u57fa\u7840\u9aa8\u67b6\u3002\u6b64\u94fe\u63a5\u5c06\u4e0b\u8f7d\u4e00\u4e2a\u540d\u4e3a VehicleSkeleton.rar \u7684\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u79cd\u4e0d\u540c\u683c\u5f0f\u7684\u57fa\u672c\u6846\u67b6\uff0c\u4e00\u79cd\u4e3a ASCII\uff0c\u53e6\u4e00\u79cd\u4e3a\u4e8c\u8fdb\u5236\u3002\u60a8\u4f7f\u7528\u7684\u683c\u5f0f\u53d6\u51b3\u4e8e\u60a8\u7684 3D \u5efa\u6a21\u8f6f\u4ef6\u8981\u6c42\u3002 \u9aa8\u67b6\u9aa8\u9abc\u7684\u4f4d\u7f6e\u53ef\u4ee5\u66f4\u6539\uff0c\u4f46\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff08\u4f8b\u5982\u65cb\u8f6c\u3001\u6dfb\u52a0\u65b0\u9aa8\u9abc\u6216\u66f4\u6539\u5f53\u524d\u5c42\u6b21\u7ed3\u6784\uff09\u90fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002","title":"\u6dfb\u52a0 4 \u8f6e\u8f66\u8f86"},{"location":"tuto_A_add_vehicle/#_2","text":"\u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8f66\u8f86\u5efa\u6a21\u9636\u6bb5\u7684\u6700\u4f4e\u8981\u6c42\uff0c\u4ee5\u786e\u4fdd\u5176\u53ef\u4ee5\u5728 Carla \u4e2d\u6210\u529f\u4f7f\u7528\u3002\u8be5\u8fc7\u7a0b\u5305\u62ec\u5c06\u9aa8\u67b6\u6b63\u786e\u7ed1\u5b9a\u5230\u8f66\u8f86\u7684\u5e95\u5ea7\u548c\u8f66\u8f6e\u3001\u521b\u5efa\u7269\u7406\u8d44\u6e90\u548c\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\uff0c\u4ee5\u53ca\u5bfc\u51fa\u4e3a\u6b63\u786e\u7684\u683c\u5f0f\u3002 1. \u5bfc\u5165\u57fa\u7840\u9aa8\u67b6\u3002 \u5c06\u57fa\u7840\u9aa8\u67b6\u5bfc\u5165\u60a8\u9996\u9009\u7684\u4e09\u7ef4\u5efa\u6a21\u8f6f\u4ef6\u4e2d\u3002\u5e38\u89c1\u7684\u7f16\u8f91\u5668\u5305\u62ec Maya \u548c Blender\u3002 2. \u7ed1\u5b9a\u9aa8\u9abc\u3002 \u6839\u636e\u4e0b\u9762\u7684\u547d\u540d\u6cd5\u5c06\u9aa8\u9abc\u7ed1\u5b9a\u5230\u8f66\u8f86\u7f51\u683c\u7684\u76f8\u5e94\u90e8\u5206\u3002\u786e\u4fdd\u8f6e\u5b50\u7684\u9aa8\u9abc\u5728\u7f51\u683c\u5185\u5c45\u4e2d\u3002 \u5de6\u524d\u8f6e\uff1a Wheel_Front_Left \u53f3\u524d\u8f6e\uff1a Wheel_Front_Right \u5de6\u540e\u8f6e\uff1a Wheel_Rear_Left \u53f3\u540e\u8f6e\uff1a Wheel_Rear_Right \u7f51\u683c\u7684\u5176\u4f59\u90e8\u5206\uff1a VehicleBase \u8b66\u544a \u4e0d\u8981\u5bf9\u9aa8\u9abc\u540d\u79f0\u6216\u5c42\u6b21\u7ed3\u6784\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\uff0c\u4e5f\u4e0d\u8981\u6dfb\u52a0\u4efb\u4f55\u65b0\u9aa8\u9abc\u3002 3. \u4e3a\u60a8\u7684\u8f66\u8f86\u5efa\u6a21\u3002 \u8f66\u8f86\u5e94\u62e5\u6709\u5927\u7ea6 50,000 - 100,000 \u4e2a tris\u3002\u6211\u4eec\u4f7f\u7528\u5b9e\u9645\u6c7d\u8f66\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\u6765\u5efa\u6a21\u8f66\u8f86\u3002 \u6211\u4eec\u5efa\u8bae\u60a8\u5c06\u8f66\u8f86\u5206\u4e3a\u4ee5\u4e0b\u6750\u8d28\uff1a Bodywork : \u8f66\u8f86\u7684\u91d1\u5c5e\u90e8\u5206\u3002\u8be5\u6750\u8d28\u5df2\u66f4\u6539\u4e3a\u865a\u5e7b\u5f15\u64ce\u6750\u8d28\u3002\u53ef\u4ee5\u6dfb\u52a0\u5fbd\u6807\u548c\u7ec6\u8282\uff0c\u4f46\u4e3a\u4e86\u53ef\u89c1\uff0c\u5fc5\u987b\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684 Alpha \u901a\u9053\u5c06\u5b83\u4eec\u7ed8\u5236\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002 Glass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u53ef\u4ee5\u4ece\u8f66\u8f86\u5916\u90e8\u770b\u5230\u5185\u90e8\u3002 Glass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u8f66\u8f86\u5185\u90e8\u5230\u5916\u90e8\u7684\u53ef\u89c1\u6027\u3002 Lights : \u5934\u706f\u3001\u6307\u793a\u706f\u7b49\u3002 LightGlass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5916\u90e8\u5230\u5185\u90e8\u7684\u706f\u5149\u53ef\u89c1\u6027\u3002 LightGlass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5185\u90e8\u5230\u5916\u90e8\u770b\u5230\u5149\u3002 LicensePlate : 29x12 \u5398\u7c73\u7684\u77e9\u5f62\u5e73\u9762\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Carla \u63d0\u4f9b\u7684 .fbx \u4ee5\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\uff0c\u8bf7\u5728 \u6b64\u5904 \u4e0b\u8f7d\u3002\u7eb9\u7406\u5c06\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u81ea\u52a8\u5206\u914d\u3002 Interior : \u4efb\u4f55\u5176\u4ed6\u4e0d\u9002\u5408\u4e0a\u8ff0\u90e8\u5206\u7684\u7ec6\u8282\u90fd\u53ef\u4ee5\u8fdb\u5165 \u5185\u9970 . \u6750\u6599\uff08Material\uff09\u5e94\u4f7f\u7528\u683c\u5f0f M_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982 M_Bodywork_Mustang \u3002 \u7eb9\u7406\uff08Textures\uff09\u5e94\u4f7f\u7528\u683c\u5f0f T_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982 T_Bodywork_Mustang \u3002\u7eb9\u7406\u7684\u5927\u5c0f\u5e94\u4e3a 2048x2048\u3002 \u865a\u5e7b\u5f15\u64ce\u4f1a\u81ea\u52a8\u521b\u5efa(Level of Details, LOD)\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u5728 3D \u7f16\u8f91\u5668\u4e2d\u624b\u52a8\u521b\u5efa\u5b83\u4eec\u3002Tri \u8ba1\u6570\u5982\u4e0b\uff1a LOD 0 : 100,000 tris LOD 1 : 80,000 tris LOD 2 : 60,000 tris LOD 3 : 30,000 tris 4. \u521b\u5efa\u7269\u7406\u8d44\u6e90\u7f51\u683c\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u662f\u4e00\u4e2a\u9644\u52a0\u7f51\u683c\uff0c\u5141\u8bb8\u865a\u5e7b\u5f15\u64ce\u8ba1\u7b97\u8f66\u8f86\u7684\u7269\u7406\u7279\u6027\u3002\u5b83\u5e94\u8be5\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u51cf\u5c11\u591a\u8fb9\u5f62\u6570\u91cf\uff0c\u5e76\u4e14\u5e94\u8be5\u8986\u76d6\u9664\u8f66\u8f6e\u4e4b\u5916\u7684\u6574\u4e2a\u8f66\u8f86\u3002\u8bf7\u53c2\u9605\u4e0b\u56fe\u7684\u793a\u4f8b\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u5e94\u5bfc\u51fa\u4e3a\u5355\u72ec\u7684 .fbx \u6587\u4ef6\u3002\u6700\u7ec8\u6587\u4ef6\u5e94\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u6709\u4e00\u4e2a\u57fa\u7840\u7f51\u683c\u3002\u8fd9\u5e94\u8be5\u662f\u7269\u7406\u8d44\u6e90\u7f51\u683c\u7684\u526f\u672c\u3002\u5b83\u5e94\u8be5\u4e0e\u539f\u59cb\u8f66\u8f86\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002 \u7269\u7406\u8d44\u6e90\u7f51\u683c\u4f53\u5fc5\u987b\u4f7f\u7528\u683c\u5f0f UCX_<vehicle_name>_<number_of_mesh> \u547d\u540d\uff0c \u5426\u5219\u865a\u5e7b\u5f15\u64ce\u5c06\u65e0\u6cd5\u8bc6\u522b\u3002 \u7f51\u683c\u4e0d\u5f97\u8d85\u51fa\u539f\u59cb\u6a21\u578b\u7684\u8fb9\u754c\u3002 \u7f51\u683c\u5e94\u4e0e\u539f\u59cb\u6a21\u578b\u5177\u6709\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u5c06\u6700\u7ec8 .fbx \u7f51\u683c\u5bfc\u51fa\u4e3a\u540d\u4e3a SMC_<vehicle_name>.fbx \u7684\u6587\u4ef6\u3002 5. \u4e3a\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u521b\u5efa\u7f51\u683c\u3002 \u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\u8bbe\u7f6e\u5c06\u7531\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\uff08RADAR\u3001LiDAR \u548c Semantic LiDAR\uff09\u68c0\u6d4b\u5230\u7684\u8f66\u8f86\u5f62\u72b6\u3002\u8be5\u7f51\u683c\u5e94\u8be5\u5177\u6709\u6bd4\u7269\u7406\u8d44\u4ea7\u7f51\u683c\u7a0d\u5fae\u66f4\u660e\u786e\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u4ee5\u63d0\u9ad8\u4f20\u611f\u5668\u6a21\u62df\u7684\u771f\u5b9e\u611f\uff0c\u4f46\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u4e0d\u5982\u6c7d\u8f66\u7f51\u683c\u90a3\u4e48\u8be6\u7ec6\u3002 \u521b\u5efa\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668\u7f51\u683c\u65f6\u8bf7\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\uff1a \u7f51\u683c\u5e94\u8986\u76d6\u8f66\u8f86\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u5305\u62ec\u8f66\u8f6e\u3001\u540e\u89c6\u955c\u548c\u683c\u6805\u3002 \u8f6e\u5b50\u5e94\u4e3a\u4e0d\u8d85\u8fc7 16 \u5708\u7684\u5706\u67f1\u4f53\u3002 \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5c06\u5404\u79cd\u7f51\u683c\u8fde\u63a5\u5728\u4e00\u8d77\u3002 \u7f51\u683c\u4e0d\u5f97\u8d85\u51fa\u539f\u59cb\u6a21\u578b\u7684\u8fb9\u754c\u3002 \u7f51\u683c\u5e94\u8be5\u4e0e\u539f\u59cb\u7f51\u683c\u5177\u6709\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u5c06\u6700\u7ec8\u7f51\u683c\u5bfc\u51fa\u540d\u4e3a SM_sc_<vehicle_name>.fbx \u7684 .fbx \u6587\u4ef6\u3002 5. \u5bfc\u51fa\u8f66\u8f86\u7f51\u683c\u3002 \u9009\u62e9\u6240\u6709\u4e3b\u8981\u8f66\u8f86\u7f51\u683c\u548c\u9aa8\u67b6\u5e95\u5ea7\u5e76\u5bfc\u51fa\u4e3a .fbx \u3002","title":"\u7ed1\u5b9a\u5e76\u5efa\u6a21\u8f66\u8f86"},{"location":"tuto_A_add_vehicle/#_3","text":"\u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5c06\u8f66\u8f86\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u7684\u8fc7\u7a0b\u3002\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u6267\u884c\u8fd9\u4e9b\u6b65\u9aa4\u3002 1. \u521b\u5efa\u8f66\u8f86\u6587\u4ef6\u5939\u3002 \u5728 Content/Carla/Static/Vehicles/4Wheeled \u91cc\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <vehicle_name> \u7684\u65b0\u6587\u4ef6\u5939\u3002 2. \u5bfc\u5165 .fbx \u3002 Inside the new vehicle folder, import your main vehicle skeleton .fbx by right-clicking in the Content Browser and selecting Import into Game/Carla/Static/Vehicles/4Wheeled/<vehicle_name> . In the dialogue box that pops up: Set Import Content Type to Geometry and Skinning Weights . Set Normal Import Method to Import Normals . Optionally set Material Import Method to Do not create materials . Uncheck Import Textures to avoid Unreal Engine creating default materials. The Skeletal Mesh will appear along with two new files, <vehicle_name>_PhysicsAssets and <vehicle_name>_Skeleton . Import the rest of your .fbx files separately from the main vehicle skeleton .fbx file. 3. Set the physical asset mesh. Open <vehicle_name>_PhysicsAssets from the Content Browser . Right-click on the Vehicle_Base mesh in the Skeleton Tree panel and go to Copy Collision from StaticMesh . Search for and select your SMC_<vehicle_name> file. You should see the outline of the physical asset mesh appear in the viewport. Delete the default capsule shape from the Vehicle_Base . Select all the wheels: Go to the Tools panel and change the Primitive Type to Sphere . Go to the Details panel and change Physics Type to Kinematic . Set Linear Damping to 0 . This will eliminate any extra friction on the wheels. Enable Simulation Generates Hit Event for all meshes. Click Re-generate Bodies . Adjust the wheel sphere to the size of the wheel. Save and close the window. 4. Create the Animation Blueprint. In the Content Browser , right-click inside your vehicle folder and select Animation -> Animation Blueprint . In Parent Class search for and select VehicleAnimInstance . In Target Skeleton search for and select <vehicle_name>_Skeleton . Press OK and rename the blueprint as AnimBP_<vehicle_name> . 5. Configure the Animation Blueprint. To ease the process of configuring the animation blueprint, we will copy an existing one from a native CARLA vehicle: Go to Content/Carla/Static/Vehicle and choose any CARLA vehicle folder. Open its Animation Blueprint. In the My Blueprint panel, double click on AnimGraph . You will see the graph come up in the viewport. Click and drag to select the Mesh Space Ref Pose , Wheel Handler , and Component To Local components. Right-click and select Copy . Go back to your own vehicle Animation Blueprint and paste the copied contents into the graph area. Click and drag from the standing figure in the Component To Local component to the figure in Output Pose to join the components together. Click Compile in the top left corner. You should now see a pulsating line flowing through the entire sequence. Save and close the window. 6. Prepare the vehicle and wheel blueprints. In the Content Browser , go to Content/Carla/Blueprints/Vehicles and create a new folder <vehicle_name> . Inside the folder, right-click and go to Blueprint Class . Open the All Classes section in the pop-up. Search for BaseVehiclePawn and press Select . Rename the file as BP_<vehicle_name> . Go to the folder of any of the native CARLA vehicles in Carla/Blueprints/Vehicles . From the Content Browser , copy the four wheel blueprints into the blueprint folder for your own vehicle. Rename the files to replace the old vehicle name with your own vehicle name. 7. Configure the wheel blueprints. In your vehicle blueprint folder, open all four of the wheel blueprints. In the Class Defaults panel, set Collision Mesh to Wheel_Shape . Omitting this step will cause the vehicle wheels to sink into the ground . Adjust the values for wheel shape radius, width, mass, and damping rate according to your vehicle specifications. Set Tire Config to CommonTireConfig On the front wheels set Steer Angle according to your preferences (default is 70 ). Uncheck Affected by Handbrake . On the rear wheels set Steer Angle to 0 . Check Affected by Handbrake . When setting the suspension values, you can use the values here as a guide. Compile and save. 8. Configure vehicle blueprint. From the Content Browser , open your BP_<vehicle_name> . In the Components panel, select Mesh (VehicleMesh) (Inherited) . In the Details panel, go to Skeletal Mesh and search for and select the base skeleton file of your vehicle (located in the Carla/Static/Vehicles/4Wheeled/<vehicle_name> folder). Go to Anim Class in the Details panel. Search for and select your AnimBP_<vehicle_name> file. In the Components panel, select Custom Collision (Inherited) . Select Static Mesh in the Details panel and search for your SM_sc_<vehicle_name> raycast sensor mesh. In the Components panel, select VehicleMovement (MovementComp) (Inherited) . In the Details panel, search for wheel . You will find settings for each of the wheels. For each one, click on Wheel Class and search for the BP_<vehicle_name>_<wheel_name> file that corresponds to the correct wheel position. If you have any additional meshes for your vehicle (doors, lights, etc.,) separate from the base mesh: Drag them into the Mesh (VehicleMesh) (Inherited) hierarchy in the Components panel. Select the extra meshes in the hierarchy and search for Collision in the Details panel. Set Collision Presets to NoCollision . Select any lights meshes in the hierarchy. Search for Tag in the Details panel and add the tag emissive . Click Save and Compile . 9. Add the vehicle to the Blueprint Library . In Content/Carla/Blueprint/Vehicle , open the VehicleFactory file. In the Generate Definitions tab, double click Vehicles . In the Details panel, expand the Default Value section and add a new element to the vehicles array. Fill in the Make and Model of your vehicle. Fill in the Class value with your BP_<vehicle_name> file. Optionally, provide a set of recommended colors for the vehicle. Compile and save. 10. Test the vehicle . Launch CARLA, open a terminal in PythonAPI/examples and run the following command: python3 manual_control.py --filter <model_name> # The make or model defined in step 9 Note Even if you used upper case characters in your make and model, they need to be converted to lower case when passed to the filter.","title":"\u5bfc\u5165\u5e76\u914d\u7f6e\u8f66\u8f86"},{"location":"tuto_A_add_vehicle/#add-an-n-wheeled-vehicle","text":"Adding an N wheeled vehicle follows the same import pipeline as that for 4 wheeled vehicles above with a few steps that are different. 5. Configure the Animation Blueprint for an N wheeled vehicle Search for BaseVehiclePawnNW and press Select . 6. Prepare the vehicle and wheel blueprints Go to the folder of any native CARLA vehicles in Carla/Blueprints/Vehicles. From the Content Browser, copy the four wheel blueprints into the blueprint folder for your own vehicle. Rename the files to replace the old vehicle name with your own vehicle name. Copy the four wheels and copy again for additional wheels. In the case of a 6 wheeled vehicle, you will need 6 different wheels: FLW, FRW, MLW, MRW, RLW, RRW. 7. Configure the wheel blueprints Follow section 7 as above for the 4 wheeled vehicle. The key difference in the case of an N wheeled vehicle is those affected by handbrake and steering parameters. In some vehicles (like for example a long wheelbase truck) the front 2 pairs of wheels will steer, and one set may steer more than others. The rearmost pairs may be affected by handbrake, the specifics will depend upon the vehicle you are modelling. 8. Configure vehicle blueprint In the Details panel, search for wheel . You will find settings for each of the wheels. For each one, click on Wheel Class and search for the BP_ _ file that corresponds to the correct wheel position. This is correct, but just to specify, in the case of N wheeled vehicles, you need to set ALL the wheels. This is an example with a 6 wheeled vehicle: Finally, an additional consideration is setting the differential. In the case of a 4 wheeled vehicle, we have different presets of differentials (Limited Slip, Open 4W etc.) but with N wheeled vehicles, you need to choose on which wheels you want to apply torque. In this case, we have chosen only the middle and rear wheels have torque, while the front wheels don\u2019t, you can specify other configurations. The numbers are going to be the same as the image above this text (e.g. 0 will be the Front Left Wheel, as specified above). All other parameters such as engine, transmission, steering curve, are the same as 4 wheeled vehicles.","title":"Add an N wheeled vehicle"},{"location":"tuto_A_add_vehicle/#add-a-2-wheeled-vehicle","text":"Adding 2 wheeled vehicles is similar to adding a 4 wheeled one but due to the complexity of the animation you'll need to set up aditional bones to guide the driver's animation. Here is the link to the reference skeleton for 2 wheeled vehicles. As with the 4 wheeled vehicles, orient the model towards positive \"x\" and every bone axis towards positive x and with the z axis facing upwards. Bone Setup: - Bike_Rig: # The origin point of the mesh. Place it in the point 0 of the scenecomment - BikeBody: # The model's body centre. - Pedals: # If the vehicle is a bike bind the pedalier to this bone, will rotate with the bike acceleration. - RightPedal: # Sets the driver's feet position and rotates with the pedalier if the vehicle is a bike. - LeftPedal: # ^ - RearWheel: # Rear Wheel of the vehicle - Handler: # Rotates with the frontal wheel of the vehicle bind the vehicle handler to it. - HandlerMidBone: # Positioned over the front wheel bone to orient the handler with the wheel - HandlerRight: # Sets the position of the driver's hand, no need to bind it to anything. - HandlerLeft: # ^ - Frontwheel: # Frontal wheel of the vehicle. - RightHelperRotator: # This four additional bones are here for an obsolete system of making the bike stable by using aditional invisible wheels - RightHelprWheel: # ^ - LeftHelperRotator: # ^ - LeftHelperWheel: # ^ - Seat: # Sets the position of the drivers hip bone. No need to bind it to anything but place it carefully. 1. Import fbx as Skelletal Mesh to its own folder inside Content/Carla/Static/Vehicles/2Wheeled . When importing select \"General2WheeledVehicleSkeleton\" as skelleton A Physics asset should be automatically created and linked. 2. Tune the Physics asset. Delete the automatically created ones and add boxes to the BikeBody bone trying to match the shape as possible, make sure generate hit events is enabled. Add a sphere for each wheel and set their \"Physics Type\" to \"Kinematic\". 3. Create folder Content/Blueprints/Vehicles/<vehicle-model> 4. Inside that folder create two blueprint classes derived from \"VehicleWheel\" class. Call them <vehicle-model>_FrontWheel and <vehicle-model>_RearWheel . Set their \"Shape Radius\" to exactly match the mesh wheel radius (careful, radius not diameter). Set their \"Tire Config\" to \"CommonTireConfig\". On the front wheel uncheck \"Affected by Handbrake\" and on the rear wheel set \"Steer Angle\" to zero. 5. Inside the same folder create a blueprint class derived from Base2WheeledVehicle call it <vehicle-model> . Open it for edit and select component \"Mesh\", setup the \"Skeletal Mesh\" and the \"Anim Class\" to the corresponding ones. Then select the VehicleBounds component and set the size to cover vehicle's area as seen from above. 6. Select component \"VehicleMovement\", under \"Vehicle Setup\" expand \"Wheel Setups\", setup each wheel. 0: Wheel Class= <vehicle-model>_FrontWheel , Bone Name= FrontWheel 1: Wheel Class= <vehicle-model>_FrontWheel , Bone Name= FrontWheel 2: Wheel Class= <vehicle-model>_RearWheel , Bone Name= RearWheel 3: Wheel Class= <vehicle-model>_RearWheel , Bone Name= RearWheel (You'll notice that we are basically placing two wheels in each bone. The vehicle class unreal provides does not support vehicles with wheel numbers different from 4 so we had to make it believe the vehicle has 4 wheels) 7. Select the variable \"is bike\" and tick it if your model is a bike. This will activate the pedalier rotation. Leave unmarked if you are setting up a motorbike. 8. Find the variable back Rotation and set it as it fit better select the component SkeletalMesh (The driver) and move it along x axis until its in the seat position. 9. Test it, go to CarlaGameMode blueprint and change \"Default Pawn Class\" to the newly created bike blueprint.","title":"Add a 2 wheeled vehicle"},{"location":"tuto_A_create_standalone/","text":"\u521b\u5efa\u8d44\u4ea7\u53d1\u884c\u5305 \u4f7f\u7528\u72ec\u7acb\u5305\u7ba1\u7406\u8d44\u4ea7\u662f CARLA \u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8fb9\u53ef\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u53ef\u4ee5\u968f\u65f6\u8f7b\u677e\u5bfc\u5165\u5230 CARLA \u5305\u4e2d\u3002\u5b83\u4eec\u5bf9\u4e8e\u4ee5\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u8f7b\u677e\u5206\u914d\u8d44\u4ea7\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u51fa\u5305 \u4f7f\u7528 Docker \u5bfc\u51fa\u5305 \u5c06\u8d44\u6e90\u5bfc\u5165 CARLA \u5305 \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u51fa\u5305 \u5c06\u8d44\u4ea7\u5bfc\u5165\u865a\u5e7b\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u4e3a\u5176\u751f\u6210 \u72ec\u7acb\u7684\u5305 \u3002\u8fd9\u5c06\u7528\u4e8e\u5c06\u5185\u5bb9\u5206\u53d1\u5230 CARLA \u5305\uff0c\u4f8b\u5982 0.9.8\u3002 \u8981\u5bfc\u51fa\u5305\uff0c\u53ea\u9700\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5373\u53ef\u3002 make package ARGS=\"--packages=Package1,Package2\" \u8fd9\u5c06\u4e3a\u5217\u51fa\u7684\u6bcf\u4e2a\u5305\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002\u5728 Linux \u4e0a\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \uff0c\u5728 Windows \u4e0a\u6587\u4ef6\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u6587\u4ef6\u5939\u4e0b\u3002 \u4f7f\u7528 Docker \u5bfc\u51fa\u5305 \u865a\u5e7b\u5f15\u64ce\u548c CARLA \u53ef\u4ee5\u6784\u5efa\u5728 Docker \u6620\u50cf\u4e2d\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u8be5\u6620\u50cf\u521b\u5efa\u5305\u6216\u5bfc\u51fa\u8d44\u6e90\u4ee5\u5728\u5305\u4e2d\u4f7f\u7528\u3002 \u8981\u521b\u5efa Docker \u6620\u50cf\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6559\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002 \u51c6\u5907\u597d\u955c\u50cf\u540e\uff1a \u5bfc\u822a\u81f3 Util/Docker \u3002 \u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u521b\u5efa CARLA \u5305\u6216\u51c6\u5907\u5728\u5305\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\uff1a # \u521b\u5efa\u72ec\u7acb\u7684\u5305 ./docker_tools.py --output /output/path # \u70d8\u57f9\u5728 Carla \u5305\u4e2d\u4f7f\u7528\u7684\u8d44\u4ea7 ./docker_tools.py --input /assets/to/import/path --output /output/path --packages PkgeName1,PkgeName2 \u5c06\u8d44\u6e90\u5bfc\u5165 CARLA \u5305 \u72ec\u7acb\u5305\u5305\u542b\u5728 .tar.gz \u6587\u4ef6\u4e2d\u3002\u63d0\u53d6\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 \u5728 Windows \u4e0a\uff0c \u5c06\u538b\u7f29\u6587\u4ef6\u89e3\u538b\u5230\u4e3b\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u3002 \u5728 Linux \u4e0a\uff0c \u5c06\u538b\u7f29\u6587\u4ef6\u79fb\u81f3 Import \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u3002 cd Import ./ImportAssets.sh \u7b14\u8bb0 \u72ec\u7acb\u5305\u65e0\u6cd5\u76f4\u63a5\u5bfc\u5165\u5230 CARLA \u6784\u5efa\u4e2d\u3002\u6309\u7167\u6559\u7a0b\u5bfc\u5165 \u9053\u5177 \u3001 \u5730\u56fe \u6216 \u8f66\u8f86 \u3002 \u8fd9\u603b\u7ed3\u4e86\u5982\u4f55\u5728 CARLA \u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u72ec\u7acb\u5305\u3002\u5982\u679c\u6709\u4efb\u4f55\u610f\u5916\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002 CARLA \u8bba\u575b","title":"\u521b\u5efa\u72ec\u7acb\u5305"},{"location":"tuto_A_create_standalone/#_1","text":"\u4f7f\u7528\u72ec\u7acb\u5305\u7ba1\u7406\u8d44\u4ea7\u662f CARLA \u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8fb9\u53ef\u4ee5\u51cf\u5c11\u6784\u5efa\u7684\u5927\u5c0f\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u53ef\u4ee5\u968f\u65f6\u8f7b\u677e\u5bfc\u5165\u5230 CARLA \u5305\u4e2d\u3002\u5b83\u4eec\u5bf9\u4e8e\u4ee5\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u8f7b\u677e\u5206\u914d\u8d44\u4ea7\u4e5f\u975e\u5e38\u6709\u7528\u3002 \u5728\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u51fa\u5305 \u4f7f\u7528 Docker \u5bfc\u51fa\u5305 \u5c06\u8d44\u6e90\u5bfc\u5165 CARLA \u5305","title":"\u521b\u5efa\u8d44\u4ea7\u53d1\u884c\u5305"},{"location":"tuto_A_create_standalone/#carla","text":"\u5c06\u8d44\u4ea7\u5bfc\u5165\u865a\u5e7b\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u4e3a\u5176\u751f\u6210 \u72ec\u7acb\u7684\u5305 \u3002\u8fd9\u5c06\u7528\u4e8e\u5c06\u5185\u5bb9\u5206\u53d1\u5230 CARLA \u5305\uff0c\u4f8b\u5982 0.9.8\u3002 \u8981\u5bfc\u51fa\u5305\uff0c\u53ea\u9700\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5373\u53ef\u3002 make package ARGS=\"--packages=Package1,Package2\" \u8fd9\u5c06\u4e3a\u5217\u51fa\u7684\u6bcf\u4e2a\u5305\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u5728 .tar.gz \u6587\u4ef6\u4e2d\u7684\u72ec\u7acb\u5305\u3002\u5728 Linux \u4e0a\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728 Dist \uff0c\u5728 Windows \u4e0a\u6587\u4ef6\u4fdd\u5b58\u5728 /Build/UE4Carla/ \u6587\u4ef6\u5939\u4e0b\u3002","title":"\u5728\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u51fa\u5305"},{"location":"tuto_A_create_standalone/#docker","text":"\u865a\u5e7b\u5f15\u64ce\u548c CARLA \u53ef\u4ee5\u6784\u5efa\u5728 Docker \u6620\u50cf\u4e2d\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u8be5\u6620\u50cf\u521b\u5efa\u5305\u6216\u5bfc\u51fa\u8d44\u6e90\u4ee5\u5728\u5305\u4e2d\u4f7f\u7528\u3002 \u8981\u521b\u5efa Docker \u6620\u50cf\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6559\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002 \u51c6\u5907\u597d\u955c\u50cf\u540e\uff1a \u5bfc\u822a\u81f3 Util/Docker \u3002 \u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u521b\u5efa CARLA \u5305\u6216\u51c6\u5907\u5728\u5305\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\uff1a # \u521b\u5efa\u72ec\u7acb\u7684\u5305 ./docker_tools.py --output /output/path # \u70d8\u57f9\u5728 Carla \u5305\u4e2d\u4f7f\u7528\u7684\u8d44\u4ea7 ./docker_tools.py --input /assets/to/import/path --output /output/path --packages PkgeName1,PkgeName2","title":"\u4f7f\u7528 Docker \u5bfc\u51fa\u5305"},{"location":"tuto_A_create_standalone/#carla_1","text":"\u72ec\u7acb\u5305\u5305\u542b\u5728 .tar.gz \u6587\u4ef6\u4e2d\u3002\u63d0\u53d6\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 \u5728 Windows \u4e0a\uff0c \u5c06\u538b\u7f29\u6587\u4ef6\u89e3\u538b\u5230\u4e3b\u6839 CARLA \u6587\u4ef6\u5939\u4e2d\u3002 \u5728 Linux \u4e0a\uff0c \u5c06\u538b\u7f29\u6587\u4ef6\u79fb\u81f3 Import \u6587\u4ef6\u5939\u5e76\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u3002 cd Import ./ImportAssets.sh \u7b14\u8bb0 \u72ec\u7acb\u5305\u65e0\u6cd5\u76f4\u63a5\u5bfc\u5165\u5230 CARLA \u6784\u5efa\u4e2d\u3002\u6309\u7167\u6559\u7a0b\u5bfc\u5165 \u9053\u5177 \u3001 \u5730\u56fe \u6216 \u8f66\u8f86 \u3002 \u8fd9\u603b\u7ed3\u4e86\u5982\u4f55\u5728 CARLA \u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u72ec\u7acb\u5305\u3002\u5982\u679c\u6709\u4efb\u4f55\u610f\u5916\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002 CARLA \u8bba\u575b","title":"\u5c06\u8d44\u6e90\u5bfc\u5165 CARLA \u5305"},{"location":"tuto_A_material_customization/","text":"\u6750\u8d28\u5b9a\u5236 CARLA \u56e2\u961f\u51c6\u5907\u6bcf\u4e2a\u8d44\u4ea7\u5728\u67d0\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u6700\u9002\u5408\u4ed6\u4eec\u7684\u9700\u6c42\u3002 \u6c7d\u8f66\u6750\u8d28 \u5b9a\u5236\u6c7d\u8f66\u6750\u8d28 \u5916\u89c2\u7279\u6027 \u5efa\u7b51\u6750\u8d28 \u5b9a\u5236\u5efa\u7b51\u6750\u6599 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002 \u6c7d\u8f66\u6750\u8d28 \u5728 CARLA \u4e2d\uff0c\u6709\u4e00\u7ec4\u4e3b\u6750\u6599\u7528\u4f5c\u8f66\u8f86\u4e0d\u540c\u90e8\u4ef6\u7684\u6a21\u677f\u3002\u4e3a\u6bcf\u4e2a\u8f66\u8f86\u6a21\u578b\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7136\u540e\u66f4\u6539\u4e3a\u6240\u9700\u7684\u7ed3\u679c\u3002\u4e3b\u8981\u6750\u8d28\u53ef\u4ee5\u5728 Content/Carla/Static/GenericMaterials/Vehicles \uff08\u4f4d\u4e8e\u6e90\u4ee3\u7801\u7684 Unreal/CarlaUE4 \u76ee\u5f55\u4e2d\uff09\u4e2d\u627e\u5230\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u9002\u7528\u4e8e\u6c7d\u8f66\u7684\u4e3b\u6750\u6599\u3002 M_CarExterior_Master \u2014 \u5e94\u7528\u4e8e\u8f66\u8eab\u7684\u6750\u8d28\u3002 M_CarInterior_Master \u2014 \u5e94\u7528\u4e8e\u6c7d\u8f66\u5185\u90e8\u7684\u6750\u8d28\u3002 M_CarLightsGlass_Master \u2014 \u5e94\u7528\u4e8e\u8986\u76d6\u8f66\u706f\u7684\u73bb\u7483\u7684\u6750\u8d28\u3002 M_CarWindows_Master \u2014 \u5e94\u7528\u4e8e\u7a97\u6237\u7684\u6750\u8d28\u3002 M_CarLicensePlate_Master \u2014 \u5e94\u7528\u4e8e\u8f66\u724c\u7684\u6750\u8d28\u3002 M_VehicleLights_Master \u2014 \u4f5c\u4e3a\u53d1\u5c04\u7eb9\u7406\u5e94\u7528\u4e8e\u6c7d\u8f66\u706f\u7684\u6750\u8d28\u3002 M_VehicleLights_Sirens_Master \u2014 \u5e94\u7528\u4e8e\u8b66\u62a5\u5668\u7684\u6750\u8d28\uff08\u5982\u679c\u9002\u7528\uff09\u3002 \u5b9a\u5236\u6c7d\u8f66\u6750\u8d28 \u521b\u5efa\u4e3b\u6750\u6599\u7684\u5b9e\u4f8b\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u65b0\u6a21\u578b\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u4e2d\u3002\u4ee5\u4e0b\u662f\u84dd\u56fe\u5e93\u4e2d\u4e3a\u8b66\u8f66\u521b\u5efa\u7684\u5b9e\u4f8b\uff0c vehicle.dodge_charger.police \u3002 \u8b66\u8f66\u84dd\u56fe\u7684\u5b9e\u4f8b\u6750\u6599\u3002 \u6750\u6599\u7684\u901a\u7528\u6587\u6863\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u53ef\u4ee5\u5728 \u865a\u5e7b\u5f15\u64ce\u6587\u6863 \u4e2d\u627e\u5230\u3002\u6240\u6709\u6750\u6599\u90fd\u53ef\u4ee5\u8fdb\u884c\u5f88\u5927\u7a0b\u5ea6\u7684\u4fee\u6539\uff0c\u4f46\u53ea\u6709\u5916\u89c2\u6750\u6599\u7684\u6027\u80fd\u503c\u5f97\u4e00\u63d0\u3002\u5176\u4ed6\u6750\u6599\u5177\u6709\u67d0\u4e9b\u53ef\u4ee5\u66f4\u6539\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u73bb\u7483\u6750\u6599\u7684\u4e0d\u900f\u660e\u5ea6\u548c\u989c\u8272\uff0c\u4f46\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u9664\u975e\u6709\u7279\u5b9a\u7528\u9014\u3002 \u5916\u89c2\u7279\u6027 \u5916\u89c2\u6750\u6599\u5e94\u7528\u4e8e\u8f66\u8eab\uff0c\u662f\u6700\u53ef\u5b9a\u5236\u7684\u4e00\u79cd\uff08\u53cc\u51fb M_CarExterior_Master \uff0c\u8fdb\u5165 \u53c2\u6570\u9ed8\u8ba4\u503c \u9009\u9879\u5361\uff09\u3002 Base color \u2014 \u8f66\u8eab\u7684\u57fa\u8272\u3002 Tint shade \u2014 \u8272\u8c03\u7684\u53ef\u89c1\u5ea6\u6839\u636e\u53ef\u89c6\u89d2\u5ea6\u800c\u53d8\u5316\u3002 \u5e26\u6709\u7c89\u7ea2\u8272\u8c03\u7684\u7ea2\u8272\u6c7d\u8f66\u3002\u5de6\u4fa7\uff0c\u8272\u8c03\u5df2\u7981\u7528\uff0c\u53f3\u4fa7\uff0c\u8272\u8c03\u5df2\u542f\u7528\u3002 Global Dust \u2014 \u6d82\u5728\u6c7d\u8f66\u4e0a\u7684\u6c61\u57a2\u7eb9\u7406\u3002\u7070\u5c18\u4f1a\u5806\u79ef\u5728\u51e0\u4f55\u4f53\u7684\u9876\u90e8\uff0c\u800c\u5728\u5e95\u90e8\u51e0\u4e4e\u4e0d\u4f1a\u88ab\u6ce8\u610f\u5230\u3002\u5982\u679c\u65cb\u8f6c\u51e0\u4f55\u4f53\uff0c\u7070\u5c18\u5c06\u51fa\u73b0\u5728\u8f66\u8f86\u9876\u90e8\u7684\u90e8\u4ef6\u4e0a\u3002 Dust_Amount \u2014 \u7eb9\u7406\u7684\u4e0d\u900f\u660e\u5ea6\u3002 DustColor \u2014 \u7070\u5c18\u7eb9\u7406\u7684\u57fa\u8272\u3002 Tiling \u2014 \u7070\u5c18\u7eb9\u7406\u56fe\u6848\u7684\u5927\u5c0f\u548c\u91cd\u590d\u3002 Thickness \u2014 \u7070\u5c18\u7684\u5bc6\u5ea6\u3002 Roughness \u2014 \u7531\u4e8e\u7070\u5c18\u800c\u51cf\u5c11\u6c7d\u8f66\u7684\u91d1\u5c5e\u53cd\u5c04\u3002 \u6c7d\u8f66\u6750\u6599\u4e2d\u7684\u7070\u5c18\u7279\u6027\u3002 Global Flakes \u2014 \u6c7d\u8f66\u91d1\u5c5e\u6f06\u4e0a\u95ea\u95ea\u53d1\u5149\u7684\u8584\u7247\u3002 Flakes On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Flake Scale \u2014 \u8584\u7247\u7684\u5927\u5c0f\u3002 Flake Brightness \u2014 \u95ea\u5149\u7684\u5f3a\u5ea6\u3002 Flakes Color \u2014 \u7c92\u5b50\u7684\u57fa\u8272\u3002 \u6c7d\u8f66\u6750\u6599\u4e2d\u7684\u8584\u7247\u7279\u6027\u3002 Global Gain \u2014 \u6c7d\u8f66\u5e95\u6f06\u7684\u566a\u97f3\u3002 Gain On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Scale \u2014 \u589e\u76ca\u7684\u5927\u5c0f\u3002 Color \u2014 \u589e\u76ca\u7684\u57fa\u8272\u3002 \u6c7d\u8f66\u6750\u8d28\u4e2d\u7684\u589e\u76ca\u5c5e\u6027\u3002 Global Mud \u2014 \u6d82\u5728\u6c7d\u8f66\u4e0a\u7684\u6ce5\u6d46\u7eb9\u7406\u3002\u6ce5\u6d46\u4ece\u8f66\u7684\u5e95\u90e8\u5230\u9876\u90e8\u51fa\u73b0\u3002 Height \u2014 \u6c7d\u8f66\u51fa\u73b0\u6ce5\u6d46\u7684\u90e8\u5206\u3002 Mud_Color \u2014 \u6ce5\u6d46\u7eb9\u7406\u7684\u5e95\u8272\u3002 Mud_Tiling \u2014 \u6ce5\u6d46\u7eb9\u7406\u56fe\u6848\u7684\u5927\u5c0f\u548c\u91cd\u590d\u3002 Mud_Thickness \u2014 \u6ce5\u6d46\u7684\u5bc6\u5ea6\u3002 \u6c7d\u8f66\u6750\u8d28\u4e2d\u7684\u6ce5\u6d46\u7279\u6027\u3002 Global Noise \u2014 \u5e94\u7528\u4e8e\u6750\u8d28\u6cd5\u7ebf\u7684\u566a\u58f0\u3002\u6253\u9020\u6a59\u76ae\u6548\u679c\u3002 Noise On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Noise Scale \u2014 \u901a\u8fc7\u66f4\u6539\u6cd5\u7ebf\u8d34\u56fe\u521b\u5efa\u7684\u51f9\u51f8\u5927\u5c0f\u3002 \u6c7d\u8f66\u6750\u8d28\u7684\u566a\u58f0\u7279\u6027\u3002 Global Surface \u2014 \u6d82\u5728\u8f66\u8f86\u6cb9\u6f06\u4e0a\u7684\u5149\u6cfd\u548c\u900f\u660e\u6d82\u5c42\u3002\u8fd9\u662f \u6c7d\u8f66\u55b7\u6f06 \u7684\u6700\u540e\u4e00\u6b65\u3002 Clear Coat \u2014 \u6d82\u5c42\u7684\u4e0d\u900f\u660e\u5ea6\u3002 Clear Coat Roughness \u2014 \u6240\u5f97\u6750\u8d28\u7684\u7c97\u7cd9\u5ea6\uff08\u5149\u6cfd\u5ea6\uff09\u3002 Metallic \u2014 \u6240\u5f97\u6750\u8d28\u7684\u53cd\u5c04\u3002 \u5e94\u7528\u4e8e\u6750\u8d28\u8868\u9762\u6d82\u5c42\u7684\u53ef\u89c6\u5316\u3002 \u5efa\u7b51\u6750\u8d28 \u5e94\u7528\u4e8e\u5efa\u7b51\u7269\u7684\u6750\u8d28\u7531\u56db\u79cd\u57fa\u672c\u7eb9\u7406\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7eb9\u7406\u7ec4\u5408\u5728\u4e00\u8d77\u786e\u5b9a\u6750\u8d28\u7684\u57fa\u672c\u5c5e\u6027\uff08\u4f8b\u5982\u6253\u5f00 Content/Carla/Static/Building/SM_Apartment01_1 \uff09\u3002 Diffuse \u2014 \u5305\u542b\u6750\u8d28\u7684\u57fa\u672c\u7ed8\u753b\u3002 RGB \u2014 \u5e26\u6709\u57fa\u8272\u7684\u901a\u9053\u3002 Alpha \u2014 \u6b64\u901a\u9053\u5b9a\u4e49\u4e00\u4e2a\u63a9\u819c\uff0c\u5141\u8bb8\u4fee\u6539\u767d\u8272\u90e8\u5206\u7684\u989c\u8272\u3002\u8fd9\u5bf9\u4e8e\u4ece\u76f8\u540c\u6750\u6599\u521b\u5efa\u4e00\u4e9b\u53d8\u4f53\u975e\u5e38\u6709\u7528\u3002 ORME \u2014 \u4f7f\u7528\u7279\u5b9a\u901a\u9053\u6620\u5c04\u6750\u8d28\u7684\u4e0d\u540c\u5c5e\u6027\u3002 Ambient occlusion \u2014 \u5305\u542b\u5728 R \u901a\u9053\u4e2d\u3002 Roughness \u2014 \u5305\u542b\u5728 G \u901a\u9053\u4e2d\u3002 Metallic map \u2014 \u5305\u542b\u5728 B \u901a\u9053\u4e2d\u3002 Emissive mask \u2014 \u5305\u542b\u5728 Alpha \u901a\u9053\u4e2d\u3002\u8be5\u63a9\u6a21\u5141\u8bb8\u6539\u53d8\u767d\u8272\u90e8\u5206\u7684\u53d1\u5c04\u989c\u8272\u548c\u5f3a\u5ea6\u3002 Normal \u2014 \u5305\u542b\u6750\u8d28\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002 RGB \u2014 \u6cd5\u7ebf\u8d34\u56fe\u4fe1\u606f\u3002 Emissive \u2014 \u5982\u679c\u9002\u7528\uff0c\u6b64\u7eb9\u7406\u7528\u4e8e\u8bbe\u7f6e\u7eb9\u7406\u7684\u81ea\u53d1\u5149\u57fa\u8272\u3002 RGB \u2014 \u7eb9\u7406\u4e2d\u53d1\u5c04\u5143\u7d20\u7684\u989c\u8272\u4fe1\u606f\u3002 \u5b9a\u5236\u5efa\u7b51\u6750\u6599 \u4e0e\u6c7d\u8f66\u6750\u6599\u7c7b\u4f3c\uff0c\u5982\u679c\u9700\u8981\uff0c\u5efa\u7b51\u6750\u6599\u53ef\u4ee5\u8fdb\u884c\u5f88\u5927\u7684\u6539\u53d8\uff0c\u4f46\u4ec5\u5f53\u7528\u6237\u5177\u6709\u865a\u5e7b\u5f15\u64ce\u65b9\u9762\u7684\u4e00\u4e9b\u4e13\u4e1a\u77e5\u8bc6\u65f6\u624d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u4f46\u662f\uff0c\u5efa\u7b51\u7269\u4f7f\u7528\u7684\u4e24\u4e2a\u4e3b\u8981\u7740\u8272\u5668\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\uff08\u4f8b\u5982\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u6253\u5f00 Content/Carla/Static/GenericMaterials/00_MasterOpt/M_GlassMaster \uff09\u3002 \u73bb\u7483\u7740\u8272\u5668 \u2014 M_GlassMaster . Opacity \u2014 \u5728\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u4e0a\u542f\u7528\u989c\u8272\u6539\u53d8\u3002 Color \u2014 \u57fa\u4e8e\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u5e94\u7528\u8272\u8c03\u3002 \u5efa\u7b51\u7740\u8272\u5668 \u2014 M_MaterialMaster Global 2. Color Variation/Change Color \u2014 \u5728\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04( Diffuse ) \u7684 Alpha \u7eb9\u7406\u4e0a\u542f\u7528\u989c\u8272\u6539\u53d8\u3002 Global 2. Color Variation/Color \u2014 \u57fa\u4e8e\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u5e94\u7528\u8272\u8c03\u3002 Global 3. Emissive/Emissive Texture \u2014 \u542f\u7528 \u81ea\u53d1\u5149(Emissive) \u7eb9\u7406\u7684\u4f7f\u7528\u3002 Global 3. Emissive/EmissiveColor \u2014 \u57fa\u4e8e ORME Emissive mask \u7684\u767d\u8272\u533a\u57df\u5e94\u7528\u8272\u8c03\u3002 Global 3. Emissive/Emissive attenuance \u2014 BP_Lights \u4e2d\u9664\u4ee5\u5f3a\u5ea6\u56e0\u5b50\u4ee5\u83b7\u5f97\u9002\u5f53\u7684\u53d1\u5c04\u503c\u3002 Global 4. Corrections/RoughnessCorrection \u2014 \u66f4\u6539\u7c97\u7cd9\u5ea6\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 Global 4. Corrections/MetallicCorrection \u2014 \u66f4\u6539\u91d1\u5c5e\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 NormalFlatness \u2014 \u66f4\u6539\u6cd5\u7ebf\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 \u8fd9\u662f\u7528\u6237\u5b9a\u5236\u8f66\u8f86\u548c\u5efa\u7b51\u7269\u6750\u6599\u7684\u6700\u663e\u7740\u65b9\u5f0f\u7684\u603b\u7ed3\u3002 \u4efb\u4f55\u53ef\u80fd\u51fa\u73b0\u7684\u7591\u95ee\u90fd\u975e\u5e38\u6b22\u8fce\u5728\u8bba\u575b\u4e2d\u63d0\u51fa\u3002 CARLA \u8bba\u575b","title":"\u6750\u8d28\u5b9a\u5236"},{"location":"tuto_A_material_customization/#_1","text":"CARLA \u56e2\u961f\u51c6\u5907\u6bcf\u4e2a\u8d44\u4ea7\u5728\u67d0\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e9b\u5185\u5bb9\u4ee5\u6700\u9002\u5408\u4ed6\u4eec\u7684\u9700\u6c42\u3002 \u6c7d\u8f66\u6750\u8d28 \u5b9a\u5236\u6c7d\u8f66\u6750\u8d28 \u5916\u89c2\u7279\u6027 \u5efa\u7b51\u6750\u8d28 \u5b9a\u5236\u5efa\u7b51\u6750\u6599 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002","title":"\u6750\u8d28\u5b9a\u5236"},{"location":"tuto_A_material_customization/#_2","text":"\u5728 CARLA \u4e2d\uff0c\u6709\u4e00\u7ec4\u4e3b\u6750\u6599\u7528\u4f5c\u8f66\u8f86\u4e0d\u540c\u90e8\u4ef6\u7684\u6a21\u677f\u3002\u4e3a\u6bcf\u4e2a\u8f66\u8f86\u6a21\u578b\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7136\u540e\u66f4\u6539\u4e3a\u6240\u9700\u7684\u7ed3\u679c\u3002\u4e3b\u8981\u6750\u8d28\u53ef\u4ee5\u5728 Content/Carla/Static/GenericMaterials/Vehicles \uff08\u4f4d\u4e8e\u6e90\u4ee3\u7801\u7684 Unreal/CarlaUE4 \u76ee\u5f55\u4e2d\uff09\u4e2d\u627e\u5230\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u9002\u7528\u4e8e\u6c7d\u8f66\u7684\u4e3b\u6750\u6599\u3002 M_CarExterior_Master \u2014 \u5e94\u7528\u4e8e\u8f66\u8eab\u7684\u6750\u8d28\u3002 M_CarInterior_Master \u2014 \u5e94\u7528\u4e8e\u6c7d\u8f66\u5185\u90e8\u7684\u6750\u8d28\u3002 M_CarLightsGlass_Master \u2014 \u5e94\u7528\u4e8e\u8986\u76d6\u8f66\u706f\u7684\u73bb\u7483\u7684\u6750\u8d28\u3002 M_CarWindows_Master \u2014 \u5e94\u7528\u4e8e\u7a97\u6237\u7684\u6750\u8d28\u3002 M_CarLicensePlate_Master \u2014 \u5e94\u7528\u4e8e\u8f66\u724c\u7684\u6750\u8d28\u3002 M_VehicleLights_Master \u2014 \u4f5c\u4e3a\u53d1\u5c04\u7eb9\u7406\u5e94\u7528\u4e8e\u6c7d\u8f66\u706f\u7684\u6750\u8d28\u3002 M_VehicleLights_Sirens_Master \u2014 \u5e94\u7528\u4e8e\u8b66\u62a5\u5668\u7684\u6750\u8d28\uff08\u5982\u679c\u9002\u7528\uff09\u3002","title":"\u6c7d\u8f66\u6750\u8d28"},{"location":"tuto_A_material_customization/#_3","text":"\u521b\u5efa\u4e3b\u6750\u6599\u7684\u5b9e\u4f8b\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u65b0\u6a21\u578b\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u4e2d\u3002\u4ee5\u4e0b\u662f\u84dd\u56fe\u5e93\u4e2d\u4e3a\u8b66\u8f66\u521b\u5efa\u7684\u5b9e\u4f8b\uff0c vehicle.dodge_charger.police \u3002 \u8b66\u8f66\u84dd\u56fe\u7684\u5b9e\u4f8b\u6750\u6599\u3002 \u6750\u6599\u7684\u901a\u7528\u6587\u6863\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u53ef\u4ee5\u5728 \u865a\u5e7b\u5f15\u64ce\u6587\u6863 \u4e2d\u627e\u5230\u3002\u6240\u6709\u6750\u6599\u90fd\u53ef\u4ee5\u8fdb\u884c\u5f88\u5927\u7a0b\u5ea6\u7684\u4fee\u6539\uff0c\u4f46\u53ea\u6709\u5916\u89c2\u6750\u6599\u7684\u6027\u80fd\u503c\u5f97\u4e00\u63d0\u3002\u5176\u4ed6\u6750\u6599\u5177\u6709\u67d0\u4e9b\u53ef\u4ee5\u66f4\u6539\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u73bb\u7483\u6750\u6599\u7684\u4e0d\u900f\u660e\u5ea6\u548c\u989c\u8272\uff0c\u4f46\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u9664\u975e\u6709\u7279\u5b9a\u7528\u9014\u3002","title":"\u5b9a\u5236\u6c7d\u8f66\u6750\u8d28"},{"location":"tuto_A_material_customization/#_4","text":"\u5916\u89c2\u6750\u6599\u5e94\u7528\u4e8e\u8f66\u8eab\uff0c\u662f\u6700\u53ef\u5b9a\u5236\u7684\u4e00\u79cd\uff08\u53cc\u51fb M_CarExterior_Master \uff0c\u8fdb\u5165 \u53c2\u6570\u9ed8\u8ba4\u503c \u9009\u9879\u5361\uff09\u3002 Base color \u2014 \u8f66\u8eab\u7684\u57fa\u8272\u3002 Tint shade \u2014 \u8272\u8c03\u7684\u53ef\u89c1\u5ea6\u6839\u636e\u53ef\u89c6\u89d2\u5ea6\u800c\u53d8\u5316\u3002 \u5e26\u6709\u7c89\u7ea2\u8272\u8c03\u7684\u7ea2\u8272\u6c7d\u8f66\u3002\u5de6\u4fa7\uff0c\u8272\u8c03\u5df2\u7981\u7528\uff0c\u53f3\u4fa7\uff0c\u8272\u8c03\u5df2\u542f\u7528\u3002 Global Dust \u2014 \u6d82\u5728\u6c7d\u8f66\u4e0a\u7684\u6c61\u57a2\u7eb9\u7406\u3002\u7070\u5c18\u4f1a\u5806\u79ef\u5728\u51e0\u4f55\u4f53\u7684\u9876\u90e8\uff0c\u800c\u5728\u5e95\u90e8\u51e0\u4e4e\u4e0d\u4f1a\u88ab\u6ce8\u610f\u5230\u3002\u5982\u679c\u65cb\u8f6c\u51e0\u4f55\u4f53\uff0c\u7070\u5c18\u5c06\u51fa\u73b0\u5728\u8f66\u8f86\u9876\u90e8\u7684\u90e8\u4ef6\u4e0a\u3002 Dust_Amount \u2014 \u7eb9\u7406\u7684\u4e0d\u900f\u660e\u5ea6\u3002 DustColor \u2014 \u7070\u5c18\u7eb9\u7406\u7684\u57fa\u8272\u3002 Tiling \u2014 \u7070\u5c18\u7eb9\u7406\u56fe\u6848\u7684\u5927\u5c0f\u548c\u91cd\u590d\u3002 Thickness \u2014 \u7070\u5c18\u7684\u5bc6\u5ea6\u3002 Roughness \u2014 \u7531\u4e8e\u7070\u5c18\u800c\u51cf\u5c11\u6c7d\u8f66\u7684\u91d1\u5c5e\u53cd\u5c04\u3002 \u6c7d\u8f66\u6750\u6599\u4e2d\u7684\u7070\u5c18\u7279\u6027\u3002 Global Flakes \u2014 \u6c7d\u8f66\u91d1\u5c5e\u6f06\u4e0a\u95ea\u95ea\u53d1\u5149\u7684\u8584\u7247\u3002 Flakes On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Flake Scale \u2014 \u8584\u7247\u7684\u5927\u5c0f\u3002 Flake Brightness \u2014 \u95ea\u5149\u7684\u5f3a\u5ea6\u3002 Flakes Color \u2014 \u7c92\u5b50\u7684\u57fa\u8272\u3002 \u6c7d\u8f66\u6750\u6599\u4e2d\u7684\u8584\u7247\u7279\u6027\u3002 Global Gain \u2014 \u6c7d\u8f66\u5e95\u6f06\u7684\u566a\u97f3\u3002 Gain On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Scale \u2014 \u589e\u76ca\u7684\u5927\u5c0f\u3002 Color \u2014 \u589e\u76ca\u7684\u57fa\u8272\u3002 \u6c7d\u8f66\u6750\u8d28\u4e2d\u7684\u589e\u76ca\u5c5e\u6027\u3002 Global Mud \u2014 \u6d82\u5728\u6c7d\u8f66\u4e0a\u7684\u6ce5\u6d46\u7eb9\u7406\u3002\u6ce5\u6d46\u4ece\u8f66\u7684\u5e95\u90e8\u5230\u9876\u90e8\u51fa\u73b0\u3002 Height \u2014 \u6c7d\u8f66\u51fa\u73b0\u6ce5\u6d46\u7684\u90e8\u5206\u3002 Mud_Color \u2014 \u6ce5\u6d46\u7eb9\u7406\u7684\u5e95\u8272\u3002 Mud_Tiling \u2014 \u6ce5\u6d46\u7eb9\u7406\u56fe\u6848\u7684\u5927\u5c0f\u548c\u91cd\u590d\u3002 Mud_Thickness \u2014 \u6ce5\u6d46\u7684\u5bc6\u5ea6\u3002 \u6c7d\u8f66\u6750\u8d28\u4e2d\u7684\u6ce5\u6d46\u7279\u6027\u3002 Global Noise \u2014 \u5e94\u7528\u4e8e\u6750\u8d28\u6cd5\u7ebf\u7684\u566a\u58f0\u3002\u6253\u9020\u6a59\u76ae\u6548\u679c\u3002 Noise On/Off \u2014 \u542f\u7528\u6216\u7981\u7528\u8be5\u529f\u80fd\u3002 Noise Scale \u2014 \u901a\u8fc7\u66f4\u6539\u6cd5\u7ebf\u8d34\u56fe\u521b\u5efa\u7684\u51f9\u51f8\u5927\u5c0f\u3002 \u6c7d\u8f66\u6750\u8d28\u7684\u566a\u58f0\u7279\u6027\u3002 Global Surface \u2014 \u6d82\u5728\u8f66\u8f86\u6cb9\u6f06\u4e0a\u7684\u5149\u6cfd\u548c\u900f\u660e\u6d82\u5c42\u3002\u8fd9\u662f \u6c7d\u8f66\u55b7\u6f06 \u7684\u6700\u540e\u4e00\u6b65\u3002 Clear Coat \u2014 \u6d82\u5c42\u7684\u4e0d\u900f\u660e\u5ea6\u3002 Clear Coat Roughness \u2014 \u6240\u5f97\u6750\u8d28\u7684\u7c97\u7cd9\u5ea6\uff08\u5149\u6cfd\u5ea6\uff09\u3002 Metallic \u2014 \u6240\u5f97\u6750\u8d28\u7684\u53cd\u5c04\u3002 \u5e94\u7528\u4e8e\u6750\u8d28\u8868\u9762\u6d82\u5c42\u7684\u53ef\u89c6\u5316\u3002","title":"\u5916\u89c2\u7279\u6027"},{"location":"tuto_A_material_customization/#_5","text":"\u5e94\u7528\u4e8e\u5efa\u7b51\u7269\u7684\u6750\u8d28\u7531\u56db\u79cd\u57fa\u672c\u7eb9\u7406\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7eb9\u7406\u7ec4\u5408\u5728\u4e00\u8d77\u786e\u5b9a\u6750\u8d28\u7684\u57fa\u672c\u5c5e\u6027\uff08\u4f8b\u5982\u6253\u5f00 Content/Carla/Static/Building/SM_Apartment01_1 \uff09\u3002 Diffuse \u2014 \u5305\u542b\u6750\u8d28\u7684\u57fa\u672c\u7ed8\u753b\u3002 RGB \u2014 \u5e26\u6709\u57fa\u8272\u7684\u901a\u9053\u3002 Alpha \u2014 \u6b64\u901a\u9053\u5b9a\u4e49\u4e00\u4e2a\u63a9\u819c\uff0c\u5141\u8bb8\u4fee\u6539\u767d\u8272\u90e8\u5206\u7684\u989c\u8272\u3002\u8fd9\u5bf9\u4e8e\u4ece\u76f8\u540c\u6750\u6599\u521b\u5efa\u4e00\u4e9b\u53d8\u4f53\u975e\u5e38\u6709\u7528\u3002 ORME \u2014 \u4f7f\u7528\u7279\u5b9a\u901a\u9053\u6620\u5c04\u6750\u8d28\u7684\u4e0d\u540c\u5c5e\u6027\u3002 Ambient occlusion \u2014 \u5305\u542b\u5728 R \u901a\u9053\u4e2d\u3002 Roughness \u2014 \u5305\u542b\u5728 G \u901a\u9053\u4e2d\u3002 Metallic map \u2014 \u5305\u542b\u5728 B \u901a\u9053\u4e2d\u3002 Emissive mask \u2014 \u5305\u542b\u5728 Alpha \u901a\u9053\u4e2d\u3002\u8be5\u63a9\u6a21\u5141\u8bb8\u6539\u53d8\u767d\u8272\u90e8\u5206\u7684\u53d1\u5c04\u989c\u8272\u548c\u5f3a\u5ea6\u3002 Normal \u2014 \u5305\u542b\u6750\u8d28\u7684\u6cd5\u7ebf\u8d34\u56fe\u3002 RGB \u2014 \u6cd5\u7ebf\u8d34\u56fe\u4fe1\u606f\u3002 Emissive \u2014 \u5982\u679c\u9002\u7528\uff0c\u6b64\u7eb9\u7406\u7528\u4e8e\u8bbe\u7f6e\u7eb9\u7406\u7684\u81ea\u53d1\u5149\u57fa\u8272\u3002 RGB \u2014 \u7eb9\u7406\u4e2d\u53d1\u5c04\u5143\u7d20\u7684\u989c\u8272\u4fe1\u606f\u3002","title":"\u5efa\u7b51\u6750\u8d28"},{"location":"tuto_A_material_customization/#_6","text":"\u4e0e\u6c7d\u8f66\u6750\u6599\u7c7b\u4f3c\uff0c\u5982\u679c\u9700\u8981\uff0c\u5efa\u7b51\u6750\u6599\u53ef\u4ee5\u8fdb\u884c\u5f88\u5927\u7684\u6539\u53d8\uff0c\u4f46\u4ec5\u5f53\u7528\u6237\u5177\u6709\u865a\u5e7b\u5f15\u64ce\u65b9\u9762\u7684\u4e00\u4e9b\u4e13\u4e1a\u77e5\u8bc6\u65f6\u624d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u4f46\u662f\uff0c\u5efa\u7b51\u7269\u4f7f\u7528\u7684\u4e24\u4e2a\u4e3b\u8981\u7740\u8272\u5668\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\uff08\u4f8b\u5982\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u6253\u5f00 Content/Carla/Static/GenericMaterials/00_MasterOpt/M_GlassMaster \uff09\u3002 \u73bb\u7483\u7740\u8272\u5668 \u2014 M_GlassMaster . Opacity \u2014 \u5728\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u4e0a\u542f\u7528\u989c\u8272\u6539\u53d8\u3002 Color \u2014 \u57fa\u4e8e\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u5e94\u7528\u8272\u8c03\u3002 \u5efa\u7b51\u7740\u8272\u5668 \u2014 M_MaterialMaster Global 2. Color Variation/Change Color \u2014 \u5728\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04( Diffuse ) \u7684 Alpha \u7eb9\u7406\u4e0a\u542f\u7528\u989c\u8272\u6539\u53d8\u3002 Global 2. Color Variation/Color \u2014 \u57fa\u4e8e\u767d\u8272\u533a\u57df\u6f2b\u53cd\u5c04 Diffuse Alpha \u7eb9\u7406\u5e94\u7528\u8272\u8c03\u3002 Global 3. Emissive/Emissive Texture \u2014 \u542f\u7528 \u81ea\u53d1\u5149(Emissive) \u7eb9\u7406\u7684\u4f7f\u7528\u3002 Global 3. Emissive/EmissiveColor \u2014 \u57fa\u4e8e ORME Emissive mask \u7684\u767d\u8272\u533a\u57df\u5e94\u7528\u8272\u8c03\u3002 Global 3. Emissive/Emissive attenuance \u2014 BP_Lights \u4e2d\u9664\u4ee5\u5f3a\u5ea6\u56e0\u5b50\u4ee5\u83b7\u5f97\u9002\u5f53\u7684\u53d1\u5c04\u503c\u3002 Global 4. Corrections/RoughnessCorrection \u2014 \u66f4\u6539\u7c97\u7cd9\u5ea6\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 Global 4. Corrections/MetallicCorrection \u2014 \u66f4\u6539\u91d1\u5c5e\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 NormalFlatness \u2014 \u66f4\u6539\u6cd5\u7ebf\u8d34\u56fe\u7684\u5f3a\u5ea6\u3002 \u8fd9\u662f\u7528\u6237\u5b9a\u5236\u8f66\u8f86\u548c\u5efa\u7b51\u7269\u6750\u6599\u7684\u6700\u663e\u7740\u65b9\u5f0f\u7684\u603b\u7ed3\u3002 \u4efb\u4f55\u53ef\u80fd\u51fa\u73b0\u7684\u7591\u95ee\u90fd\u975e\u5e38\u6b22\u8fce\u5728\u8bba\u575b\u4e2d\u63d0\u51fa\u3002 CARLA \u8bba\u575b","title":"\u5b9a\u5236\u5efa\u7b51\u6750\u6599"},{"location":"tuto_D_contribute_assets/","text":"\u5982\u4f55\u5347\u7ea7\u5185\u5bb9 \u6211\u4eec\u7684\u5185\u5bb9\u9a7b\u7559\u5728\u5355\u72ec\u7684 Git LFS \u4ed3\u5e93 \u4e2d\u3002\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u751f\u6210\u5e76\u4e0a\u4f20\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5e26\u6709\u5f53\u524d\u65e5\u671f\u548c\u63d0\u4ea4\u6807\u8bb0\u7684\u8be5\u5185\u5bb9\u7684\u6700\u65b0\u7248\u672c\u3002\u6211\u4eec\u5b9a\u671f\u5347\u7ea7 CARLA \u4ed3\u5e93 \uff0c\u5e76\u63d0\u4f9b\u6700\u65b0\u7248\u672c\u5185\u5bb9\u5305\u7684\u94fe\u63a5\u3002\u672c\u6587\u6863\u5305\u542b\u5c06\u6b64\u94fe\u63a5\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u6240\u9700\u7684\u624b\u52a8\u6b65\u9aa4\u3002 \u590d\u5236\u60a8\u8981\u94fe\u63a5\u7684\u5185\u5bb9\u5305\u7684\u6807\u7b7e\u3002 T\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u6700\u65b0 Jenkins \u6784\u5efa \u7684 \u5de5\u4ef6\u90e8\u5206\u4e2d\u751f\u6210\u7684\u5305\u540d\u79f0\u6765\u627e\u5230\u6b64\u6807\u7b7e\uff0c\u4f8b\u5982 20190617_086f97f.tar.gz \u3002 \u5c06\u6807\u8bb0\u7c98\u8d34\u5230 ContentVersions.txt \u4e2d\u3002 \u901a\u8fc7\u5c06\u6807\u8bb0\u7c98\u8d34\u5230\u6587\u4ef6\u672b\u5c3e\u6765 \u7f16\u8f91 Edit ContentVersions.txt \uff0c \u4f8b\u5982 Latest: 20190617_086f97f (\u4e0d\u5305\u62ec .tar.gz \u90e8\u5206\uff09\u3002 \u6253\u5f00\u62c9\u53d6\u8bf7\u6c42\u3002 \u63d0\u4ea4\u66f4\u6539\u5e76\u6253\u5f00\u65b0\u7684\u62c9\u53d6\u8bf7\u6c42\u3002","title":"\u5982\u4f55\u5347\u7ea7\u5185\u5bb9"},{"location":"tuto_D_contribute_assets/#_1","text":"\u6211\u4eec\u7684\u5185\u5bb9\u9a7b\u7559\u5728\u5355\u72ec\u7684 Git LFS \u4ed3\u5e93 \u4e2d\u3002\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u751f\u6210\u5e76\u4e0a\u4f20\u4e00\u4e2a\u5305\uff0c\u5176\u4e2d\u5305\u542b\u5e26\u6709\u5f53\u524d\u65e5\u671f\u548c\u63d0\u4ea4\u6807\u8bb0\u7684\u8be5\u5185\u5bb9\u7684\u6700\u65b0\u7248\u672c\u3002\u6211\u4eec\u5b9a\u671f\u5347\u7ea7 CARLA \u4ed3\u5e93 \uff0c\u5e76\u63d0\u4f9b\u6700\u65b0\u7248\u672c\u5185\u5bb9\u5305\u7684\u94fe\u63a5\u3002\u672c\u6587\u6863\u5305\u542b\u5c06\u6b64\u94fe\u63a5\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u6240\u9700\u7684\u624b\u52a8\u6b65\u9aa4\u3002 \u590d\u5236\u60a8\u8981\u94fe\u63a5\u7684\u5185\u5bb9\u5305\u7684\u6807\u7b7e\u3002 T\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u6700\u65b0 Jenkins \u6784\u5efa \u7684 \u5de5\u4ef6\u90e8\u5206\u4e2d\u751f\u6210\u7684\u5305\u540d\u79f0\u6765\u627e\u5230\u6b64\u6807\u7b7e\uff0c\u4f8b\u5982 20190617_086f97f.tar.gz \u3002 \u5c06\u6807\u8bb0\u7c98\u8d34\u5230 ContentVersions.txt \u4e2d\u3002 \u901a\u8fc7\u5c06\u6807\u8bb0\u7c98\u8d34\u5230\u6587\u4ef6\u672b\u5c3e\u6765 \u7f16\u8f91 Edit ContentVersions.txt \uff0c \u4f8b\u5982 Latest: 20190617_086f97f (\u4e0d\u5305\u62ec .tar.gz \u90e8\u5206\uff09\u3002 \u6253\u5f00\u62c9\u53d6\u8bf7\u6c42\u3002 \u63d0\u4ea4\u66f4\u6539\u5e76\u6253\u5f00\u65b0\u7684\u62c9\u53d6\u8bf7\u6c42\u3002","title":"\u5982\u4f55\u5347\u7ea7\u5185\u5bb9"},{"location":"tuto_D_create_semantic_tags/","text":"\u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u4e86\u89e3\u5982\u4f55\u5b9a\u4e49\u8bed\u4e49\u5206\u5272\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002\u8fd9\u4e9b\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u5230 carla.CityObjectLabel \u4ee5\u8fc7\u6ee4 carla.World \u68c0\u7d22\u7684\u8fb9\u754c\u6846\u3002 \u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e 1. \u521b\u5efa\u6807\u7b7e ID 2. \u521b\u5efa\u8d44\u4ea7\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939 3. \u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u4e0e\u4ee3\u7801\u6807\u7b7e\u7684\u53cc\u5411\u5bf9\u5e94\u5173\u7cfb 4. \u5b9a\u4e49\u989c\u8272\u4ee3\u7801 5. \u6dfb\u52a0\u6807\u8bb0\u5143\u7d20 \u5c06\u6807\u7b7e\u6dfb\u52a0\u5230 carla.CityObjectLabel \u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e 1. \u521b\u5efa\u6807\u7b7e ID \u6253\u5f00 LibCarla/source/carla/rpc \u4e2d\u7684 ObjectLabel.h \u3002\u4f7f\u7528\u4e0e\u5176\u4f59\u6807\u7b7e\u76f8\u540c\u7684\u683c\u5f0f\u5728\u679a\u4e3e\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u7b14\u8bb0 \u6807\u7b7e\u4e0d\u5fc5\u6309\u987a\u5e8f\u51fa\u73b0\u3002\u4f46\u662f\uff0c\u6309\u987a\u5e8f\u5217\u51fa\u5b83\u4eec\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\u3002 2. \u521b\u5efa\u8d44\u4ea7\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939 \u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668 \u5e76\u8f6c\u5230 Carla/Static \u3002\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u60a8\u7684\u6807\u7b7e\u7684\u65b0\u6587\u4ef6\u5939\u3002 \u7b14\u8bb0 \u865a\u5e7b\u7f16\u8f91\u5668\u6587\u4ef6\u5939\u548c\u6807\u7b7e\u4e0d\u5fc5\u547d\u540d\u76f8\u540c\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\u3002 3. \u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u4e0e\u4ee3\u7801\u6807\u7b7e\u7684\u53cc\u5411\u5bf9\u5e94\u5173\u7cfb 3.1. \u6253\u5f00 Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game \u4e2d\u7684 Tagger.cpp \u3002\u8f6c\u5230 GetLabelByFolderName \u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u60a8\u7684\u6807\u7b7e\u3002\u88ab\u6bd4\u8f83\u7684\u5b57\u7b26\u4e32\u662f 2. \u4e2d\u4f7f\u7528\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u540d\u79f0\u3002 3.2. \u5728\u76f8\u540c\u7684 Tagger.cpp \u8f6c\u5230 GetTagAsString \u3002 \u5728\u5f00\u5173\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 4. \u5b9a\u4e49\u989c\u8272\u4ee3\u7801 \u5728 LibCarla/source/carla/image \u4e2d\u6253\u5f00 CityScapesPalette.h \u3002\u5728\u6570\u7ec4\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u7684\u989c\u8272\u4ee3\u7801\u3002 \u8b66\u544a \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u5fc5\u987b\u4e0e\u6807\u7b7e ID \u76f8\u5bf9\u5e94\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a 23u . 5. \u6dfb\u52a0\u6807\u8bb0\u7f51\u683c \u65b0\u7684\u8bed\u4e49\u6807\u7b7e\u5df2\u53ef\u4f9b\u4f7f\u7528\u3002\u53ea\u6709\u5b58\u50a8\u5728\u6807\u7b7e\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u5185\u7684\u7f51\u683c\u624d\u4f1a\u88ab\u6807\u8bb0\u4e3a\u6b64\u7c7b\u3002\u5c06\u76f8\u5e94\u7684\u7f51\u683c\u79fb\u52a8\u6216\u5bfc\u5165\u5230\u65b0\u6587\u4ef6\u5939\u4e2d\uff0c\u4ee5\u4fbf\u6b63\u786e\u6807\u8bb0\u3002 \u5c06\u6807\u7b7e\u6dfb\u52a0\u5230 carla.CityObjectLabel \u8fd9\u4e00\u6b65\u4e0e\u8bed\u4e49\u5206\u5272\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u6807\u7b7e\u53ef\u7528\u4e8e\u8fc7\u6ee4 carla.World \u4e2d\u7684\u8fb9\u754c\u6846\u67e5\u8be2\u3002\u4e3a\u6b64\uff0c\u5fc5\u987b\u5c06\u6807\u7b7e\u6dfb\u52a0\u5230PythonAPI \u4e2d\u7684 carla.CityObjectLabel \u679a\u4e3e\u4e2d\u3002 \u5728 carla/PythonAPI/carla/source/libcarla \u4e2d\u6253\u5f00 World.cpp \u5e76\u5728\u679a\u4e3e\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\u3001\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u8bf7\u9605\u8bfb \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\u6216\u5728 CARLA \u8bba\u575b \u4e2d\u53d1\u5e16\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u6dfb\u52a0\u65b0\u9053\u5177","title":"\u521b\u5efa\u8bed\u4e49\u6807\u7b7e"},{"location":"tuto_D_create_semantic_tags/#_1","text":"\u4e86\u89e3\u5982\u4f55\u5b9a\u4e49\u8bed\u4e49\u5206\u5272\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002\u8fd9\u4e9b\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u5230 carla.CityObjectLabel \u4ee5\u8fc7\u6ee4 carla.World \u68c0\u7d22\u7684\u8fb9\u754c\u6846\u3002 \u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e 1. \u521b\u5efa\u6807\u7b7e ID 2. \u521b\u5efa\u8d44\u4ea7\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939 3. \u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u4e0e\u4ee3\u7801\u6807\u7b7e\u7684\u53cc\u5411\u5bf9\u5e94\u5173\u7cfb 4. \u5b9a\u4e49\u989c\u8272\u4ee3\u7801 5. \u6dfb\u52a0\u6807\u8bb0\u5143\u7d20 \u5c06\u6807\u7b7e\u6dfb\u52a0\u5230 carla.CityObjectLabel","title":"\u521b\u5efa\u8bed\u4e49\u6807\u7b7e"},{"location":"tuto_D_create_semantic_tags/#_2","text":"","title":"\u521b\u5efa\u65b0\u7684\u8bed\u4e49\u6807\u7b7e"},{"location":"tuto_D_create_semantic_tags/#1-id","text":"\u6253\u5f00 LibCarla/source/carla/rpc \u4e2d\u7684 ObjectLabel.h \u3002\u4f7f\u7528\u4e0e\u5176\u4f59\u6807\u7b7e\u76f8\u540c\u7684\u683c\u5f0f\u5728\u679a\u4e3e\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u7b14\u8bb0 \u6807\u7b7e\u4e0d\u5fc5\u6309\u987a\u5e8f\u51fa\u73b0\u3002\u4f46\u662f\uff0c\u6309\u987a\u5e8f\u5217\u51fa\u5b83\u4eec\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\u3002","title":"1. \u521b\u5efa\u6807\u7b7e ID"},{"location":"tuto_D_create_semantic_tags/#2","text":"\u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668 \u5e76\u8f6c\u5230 Carla/Static \u3002\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u60a8\u7684\u6807\u7b7e\u7684\u65b0\u6587\u4ef6\u5939\u3002 \u7b14\u8bb0 \u865a\u5e7b\u7f16\u8f91\u5668\u6587\u4ef6\u5939\u548c\u6807\u7b7e\u4e0d\u5fc5\u547d\u540d\u76f8\u540c\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\u3002","title":"2. \u521b\u5efa\u8d44\u4ea7\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939"},{"location":"tuto_D_create_semantic_tags/#3","text":"3.1. \u6253\u5f00 Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game \u4e2d\u7684 Tagger.cpp \u3002\u8f6c\u5230 GetLabelByFolderName \u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u60a8\u7684\u6807\u7b7e\u3002\u88ab\u6bd4\u8f83\u7684\u5b57\u7b26\u4e32\u662f 2. \u4e2d\u4f7f\u7528\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u540d\u79f0\u3002 3.2. \u5728\u76f8\u540c\u7684 Tagger.cpp \u8f6c\u5230 GetTagAsString \u3002 \u5728\u5f00\u5173\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002","title":"3. \u521b\u5efa\u865a\u5e7b\u5f15\u64ce\u4e0e\u4ee3\u7801\u6807\u7b7e\u7684\u53cc\u5411\u5bf9\u5e94\u5173\u7cfb"},{"location":"tuto_D_create_semantic_tags/#4","text":"\u5728 LibCarla/source/carla/image \u4e2d\u6253\u5f00 CityScapesPalette.h \u3002\u5728\u6570\u7ec4\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u7684\u989c\u8272\u4ee3\u7801\u3002 \u8b66\u544a \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u5fc5\u987b\u4e0e\u6807\u7b7e ID \u76f8\u5bf9\u5e94\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a 23u .","title":"4. \u5b9a\u4e49\u989c\u8272\u4ee3\u7801"},{"location":"tuto_D_create_semantic_tags/#5","text":"\u65b0\u7684\u8bed\u4e49\u6807\u7b7e\u5df2\u53ef\u4f9b\u4f7f\u7528\u3002\u53ea\u6709\u5b58\u50a8\u5728\u6807\u7b7e\u7684\u865a\u5e7b\u5f15\u64ce\u6587\u4ef6\u5939\u5185\u7684\u7f51\u683c\u624d\u4f1a\u88ab\u6807\u8bb0\u4e3a\u6b64\u7c7b\u3002\u5c06\u76f8\u5e94\u7684\u7f51\u683c\u79fb\u52a8\u6216\u5bfc\u5165\u5230\u65b0\u6587\u4ef6\u5939\u4e2d\uff0c\u4ee5\u4fbf\u6b63\u786e\u6807\u8bb0\u3002","title":"5. \u6dfb\u52a0\u6807\u8bb0\u7f51\u683c"},{"location":"tuto_D_create_semantic_tags/#carlacityobjectlabel","text":"\u8fd9\u4e00\u6b65\u4e0e\u8bed\u4e49\u5206\u5272\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u6807\u7b7e\u53ef\u7528\u4e8e\u8fc7\u6ee4 carla.World \u4e2d\u7684\u8fb9\u754c\u6846\u67e5\u8be2\u3002\u4e3a\u6b64\uff0c\u5fc5\u987b\u5c06\u6807\u7b7e\u6dfb\u52a0\u5230PythonAPI \u4e2d\u7684 carla.CityObjectLabel \u679a\u4e3e\u4e2d\u3002 \u5728 carla/PythonAPI/carla/source/libcarla \u4e2d\u6253\u5f00 World.cpp \u5e76\u5728\u679a\u4e3e\u672b\u5c3e\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\u3001\u7591\u95ee\u6216\u5efa\u8bae\uff0c\u8bf7\u9605\u8bfb \u5e38\u89c1\u95ee\u9898\u89e3\u7b54 \u9875\u9762\u6216\u5728 CARLA \u8bba\u575b \u4e2d\u53d1\u5e16\u3002 \u4f20\u611f\u5668\u53c2\u8003 \u6dfb\u52a0\u65b0\u9053\u5177","title":"\u5c06\u6807\u7b7e\u6dfb\u52a0\u5230 carla.CityObjectLabel"},{"location":"tuto_D_create_sensor/","text":"How to add a new sensor This tutorial explains the basics for adding a new sensor to CARLA. It provides the necessary steps to implement a sensor in Unreal Engine 4 (UE4) and expose its data via CARLA's Python API. We'll follow all the steps by creating a new sensor as an example. Prerequisites Introduction Creating a new sensor 1- Sensor actor 2- Sensor data serializer 3- Sensor data object 4- Register your sensor 5- Usage example Appendix Reusing buffers Sending data asynchronously Client-side sensors Prerequisites In order to implement a new sensor, you'll need to compile CARLA source code, for detailed instructions on how to achieve this see Building from source . This tutorial also assumes the reader is fluent in C++ programming. Introduction Sensors in CARLA are a special type of actor that produce a stream of data. Some sensors produce data continuously, every time the sensor is updated, other produce data only after certain events. For instance, a camera produces an image on every update, but a collision sensor is only triggered in the event of a collision. Although most sensors compute their measurements in the server side (UE4), it's worth noticing that some sensors run in the client-side only. An example of such sensor is the LaneInvasion, it notifies every time a lane mark has been crossed. For further details see Appendix: Client-side sensors . In this tutorial, we'll be focusing on server-side sensors. In order to have a sensor running inside UE4 sending data all the way to a Python client, we need to cover the whole communication pipeline. Thus we'll need the following classes covering the different steps of the pipeline Sensor actor Actor in charge of measuring and/or simulating data. Running in Carla plugin using UE4 framework. Accessible by the user as Sensor actor. Serializer Object containing methods for serializing and deserializing the data generated by the sensor. Running in LibCarla, both server and client. Sensor data Object representing the data generated by the sensor. This is the object that will be passed to the final user, both in C++ and Python APIs. Note To ensure best performance, sensors are registered and dispatched using a sort of \"compile-time plugin system\" based on template meta-programming. Most likely, the code won't compile until all the pieces are present. Creating a new sensor Full source code here. We're going to create a sensor that detects other actors around our vehicle. For that we'll create a trigger box that detects objects within, and we'll be reporting status to the client every time a vehicle is inside our trigger box. Let's call it Safe Distance Sensor . For the sake of simplicity we're not going to take into account all the edge cases, nor it will be implemented in the most efficient way. This is just an illustrative example. 1- Sensor actor This is the most complicated class we're going to create. Here we're running inside Unreal Engine framework, knowledge of UE4 API will be very helpful but not indispensable, we'll assume the reader has never worked with UE4 before. Inside UE4, we have a similar hierarchy as we have in the client-side, ASensor derives from AActor , and an actor is roughly any object that can be dropped into the world. AActor has a virtual function called Tick that we can use to update our sensor on every simulator update. Higher in the hierarchy we have UObject , base class for most of UE4 classes. It is important to know that objects deriving from UObject are handle via pointers and are garbage collected when they're no longer referenced. Class members pointing to UObject s need to be marked with UPROPERTY macros or they'll be garbage collected. Let's start. This class has to be located inside Carla plugin, we'll create two files for our new C++ class Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SafeDistanceSensor.h Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SafeDistanceSensor.cpp At the very minimum, the sensor is required to inherit ASensor , and provide a static method GetSensorDefinition ; but we'll be overriding also the Set , SetOwner , and Tick methods. This sensor also needs a trigger box that will be detecting other actors around us. With this and some required boiler-plate UE4 code, the header file looks like #pragma once #include \"Carla/Sensor/Sensor.h\" #include \"Carla/Actor/ActorDefinition.h\" #include \"Carla/Actor/ActorDescription.h\" #include \"Components/BoxComponent.h\" #include \"SafeDistanceSensor.generated.h\" UCLASS() class CARLA_API ASafeDistanceSensor : public ASensor { GENERATED_BODY() public: ASafeDistanceSensor(const FObjectInitializer &ObjectInitializer); static FActorDefinition GetSensorDefinition(); void Set(const FActorDescription &ActorDescription) override; void SetOwner(AActor *Owner) override; void Tick(float DeltaSeconds) override; private: UPROPERTY() UBoxComponent *Box = nullptr; }; In the cpp file, first we'll need some includes #include \"Carla.h\" #include \"Carla/Sensor/SafeDistanceSensor.h\" #include \"Carla/Actor/ActorBlueprintFunctionLibrary.h\" #include \"Carla/Game/CarlaEpisode.h\" #include \"Carla/Util/BoundingBoxCalculator.h\" #include \"Carla/Vehicle/CarlaWheeledVehicle.h\" Then we can proceed to implement the functionality. The constructor will create the trigger box, and tell UE4 that we want our tick function to be called. If our sensor were not using the tick function, we can disable it here to avoid unnecessary ticks ASafeDistanceSensor::ASafeDistanceSensor(const FObjectInitializer &ObjectInitializer) : Super(ObjectInitializer) { Box = CreateDefaultSubobject<UBoxComponent>(TEXT(\"BoxOverlap\")); Box->SetupAttachment(RootComponent); Box->SetHiddenInGame(true); // Disable for debugging. Box->SetCollisionProfileName(FName(\"OverlapAll\")); PrimaryActorTick.bCanEverTick = true; } Now we need to tell Carla what attributes this sensor has, this is going to be used to create a new blueprint in our blueprint library, users can use this blueprint to configure and spawn this sensor. We're going to define here the attributes of our trigger box, in this example we'll expose only X and Y safe distances FActorDefinition ASafeDistanceSensor::GetSensorDefinition() { auto Definition = UActorBlueprintFunctionLibrary::MakeGenericSensorDefinition( TEXT(\"other\"), TEXT(\"safe_distance\")); FActorVariation Front; Front.Id = TEXT(\"safe_distance_front\"); Front.Type = EActorAttributeType::Float; Front.RecommendedValues = { TEXT(\"1.0\") }; Front.bRestrictToRecommended = false; FActorVariation Back; Back.Id = TEXT(\"safe_distance_back\"); Back.Type = EActorAttributeType::Float; Back.RecommendedValues = { TEXT(\"0.5\") }; Back.bRestrictToRecommended = false; FActorVariation Lateral; Lateral.Id = TEXT(\"safe_distance_lateral\"); Lateral.Type = EActorAttributeType::Float; Lateral.RecommendedValues = { TEXT(\"0.5\") }; Lateral.bRestrictToRecommended = false; Definition.Variations.Append({ Front, Back, Lateral }); return Definition; } With this, the sensor factory is able to create a Safe Distance Sensor on user demand. Immediately after the sensor is created, the Set function is called with the parameters that the user requested void ASafeDistanceSensor::Set(const FActorDescription &Description) { Super::Set(Description); float Front = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_front\", Description.Variations, 1.0f); float Back = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_back\", Description.Variations, 0.5f); float Lateral = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_lateral\", Description.Variations, 0.5f); constexpr float M_TO_CM = 100.0f; // Unit conversion. float LocationX = M_TO_CM * (Front - Back) / 2.0f; float ExtentX = M_TO_CM * (Front + Back) / 2.0f; float ExtentY = M_TO_CM * Lateral; Box->SetRelativeLocation(FVector{LocationX, 0.0f, 0.0f}); Box->SetBoxExtent(FVector{ExtentX, ExtentY, 0.0f}); } Note that the set function is called before UE4's BeginPlay , we won't use this virtual function here, but it's important for other sensors. Now we're going to extend the box volume based on the bounding box of the actor that we're attached to. For that, the most convenient method is to use the SetOwner virtual function. This function is called when our sensor is attached to another actor. void ASafeDistanceSensor::SetOwner(AActor *Owner) { Super::SetOwner(Owner); auto BoundingBox = UBoundingBoxCalculator::GetActorBoundingBox(Owner); Box->SetBoxExtent(BoundingBox.Extent + Box->GetUnscaledBoxExtent()); } The only thing left to do is the actual measurement, for that we'll use the Tick function. We're going to look for all the vehicles currently overlapping our box, and we'll send this list to client void ASafeDistanceSensor::Tick(float DeltaSeconds) { Super::Tick(DeltaSeconds); TSet<AActor *> DetectedActors; Box->GetOverlappingActors(DetectedActors, ACarlaWheeledVehicle::StaticClass()); DetectedActors.Remove(GetOwner()); if (DetectedActors.Num() > 0) { auto Stream = GetDataStream(*this); Stream.Send(*this, GetEpisode(), DetectedActors); } } Note In production-ready sensors, the Tick function should be very optimized, specially if the sensor sends big chunks of data. This function is called every update in the game thread thus significantly affects the performance of the simulator. Ok, a couple of things going on here that we haven't mentioned yet, what's this stream? Every sensor has a data stream associated. This stream is used to send data down to the client, and this is the stream you subscribe to when you use the sensor.listen(callback) method in the Python API. Every time you send here some data, the callback on the client-side is going to be triggered. But before that, the data is going to travel through several layers. First of them will be the serializer that we have to create next. We'll fully understand this part once we have completed the Serialize function in the next section. 2- Sensor data serializer This class is actually rather simple, it's only required to have two static methods, Serialize and Deserialize . We'll add two files for it, this time to LibCarla LibCarla/source/carla/sensor/s11n/SafeDistanceSerializer.h LibCarla/source/carla/sensor/s11n/SafeDistanceSerializer.cpp Let's start with the Serialize function. This function is going to receive as arguments whatever we pass to the Stream.Send(...) function, with the only condition that the first argument has to be a sensor and it has to return a buffer. static Buffer Serialize(const Sensor &, ...); A carla::Buffer is just a dynamically allocated piece of raw memory with some convenient functionality, we're going to use it to send raw data to the client. In this example, we need to write the list of detected actors to a buffer in a way that it can be meaningful in the client-side. That's why we passed the episode object to this function. The UCarlaEpisode class represent the current episode running in the simulator, i.e. the state of the simulation since last time we loaded a map. It contains all the relevant information to Carla, and among other things, it allows searching for actor IDs. We can send these IDs to the client and the client will be able to recognise these as actors template <typename SensorT, typename EpisodeT, typename ActorListT> static Buffer Serialize( const SensorT &, const EpisodeT &episode, const ActorListT &detected_actors) { const uint32_t size_in_bytes = sizeof(ActorId) * detected_actors.Num(); Buffer buffer{size_in_bytes}; unsigned char *it = buffer.data(); for (auto *actor : detected_actors) { ActorId id = episode.FindActor(actor).GetActorId(); std::memcpy(it, &id, sizeof(ActorId)); it += sizeof(ActorId); } return buffer; } Note that we templatize the UE4 classes to avoid including these files within LibCarla. This buffer we're returning is going to come back to us, except that this time in the client-side, in the Deserialize function packed in a RawData object static SharedPtr<SensorData> Deserialize(RawData &&data); We'll implement this method in the cpp file, and it's rather simple SharedPtr<SensorData> SafeDistanceSerializer::Deserialize(RawData &&data) { return SharedPtr<SensorData>(new data::SafeDistanceEvent(std::move(data))); } except for the fact that we haven't defined yet what's a SafeDistanceEvent . 3- Sensor data object We need to create a data object for the users of this sensor, representing the data of a safe distance event . We'll add this file to LibCarla/source/carla/sensor/data/SafeDistanceEvent.h This object is going to be equivalent to a list of actor IDs. For that, we'll derive from the Array template #pragma once #include \"carla/rpc/ActorId.h\" #include \"carla/sensor/data/Array.h\" namespace carla { namespace sensor { namespace data { class SafeDistanceEvent : public Array<rpc::ActorId> { public: explicit SafeDistanceEvent(RawData &&data) : Array<rpc::ActorId>(std::move(data)) {} }; } // namespace data } // namespace sensor } // namespace carla The Array template is going to reinterpret the buffer we created in the Serialize method as an array of actor IDs, and it's able to do so directly from the buffer we received, without allocating any new memory. Although for this small example may seem a bit overkill, this mechanism is also used for big chunks of data; imagine we're sending HD images, we save a lot by reusing the raw memory. Now we need to expose this class to Python. In our example, we haven't add any extra methods, so we'll just expose the methods related to Array. We do so by using Boost.Python bindings, add the following to PythonAPI/carla/source/libcarla/SensorData.cpp . class_< csd::SafeDistanceEvent, // actual type. bases<cs::SensorData>, // parent type. boost::noncopyable, // disable copy. boost::shared_ptr<csd::SafeDistanceEvent> // use as shared_ptr. >(\"SafeDistanceEvent\", no_init) // name, and disable construction. .def(\"__len__\", &csd::SafeDistanceEvent::size) .def(\"__iter__\", iterator<csd::SafeDistanceEvent>()) .def(\"__getitem__\", +[](const csd::SafeDistanceEvent &self, size_t pos) -> cr::ActorId { return self.at(pos); }) ; Note that csd is an alias for the namespace carla::sensor::data . What we're doing here is exposing some C++ methods in Python. Just with this, the Python API will be able to recognise our new event and it'll behave similar to an array in Python, except that cannot be modified. 4- Register your sensor Now that the pipeline is complete, we're ready to register our new sensor. We do so in LibCarla/source/carla/sensor/SensorRegistry.h . Follow the instruction in this header file to add the different includes and forward declarations, and add the following pair to the registry std::pair<ASafeDistanceSensor *, s11n::SafeDistanceSerializer> With this, the sensor registry now can do its magic to dispatch the right data to the right serializer. Now recompile CARLA, hopefully everything goes ok and no errors. Unfortunately, most of the errors here will be related to templates and the error messages can be a bit cryptic. make rebuild 5- Usage example Finally, we have the sensor included and we have finished recompiling, our sensor by now should be available in Python. To spawn this sensor, we simply need to find it in the blueprint library, if everything went right, the sensor factory should have added our sensor to the library blueprint = blueprint_library.find('sensor.other.safe_distance') sensor = world.spawn_actor(blueprint, carla.Transform(), attach_to=vehicle) and now we can start listening for events by registering a callback function world_ref = weakref.ref(world) def callback(event): for actor_id in event: vehicle = world_ref().get_actor(actor_id) print('Vehicle too close: %s' % vehicle.type_id) sensor.listen(callback) This callback is going to execute every update that another vehicle is inside our safety distance box, e.g. Vehicle too close: vehicle.audi.a2 Vehicle too close: vehicle.mercedes-benz.coupe That's it, we have a new sensor working! Appendix Reusing buffers In order to optimize memory usage, we can use the fact that each sensor sends buffers of similar size; in particularly, in the case of cameras, the size of the image is constant during execution. In those cases, we can save a lot by reusing the allocated memory between frames. Each stream contains a buffer pool that can be used to avoid unnecessary memory allocations. Remember that each sensor has a stream associated thus each sensor has its own buffer pool. Use the following to retrieve a buffer from the pool auto Buffer = Stream.PopBufferFromPool(); If the pool is empty, it returns an empty buffer, i.e. a buffer with no memory allocated. In that case, when you resize the buffer new memory will be allocated. This will happen a few times during the first frames. However, if a buffer was retrieved from the pool, its memory will go back to the pool once the buffer goes out of the scope. Next time you get another buffer from the pool, it'll contain the allocated piece of memory from the previous buffer. As you can see, a buffer object acts actually as an smart pointer to a contiguous piece of raw memory. As long as you don't request more memory than the currently allocated, the buffer reuses the memory. If you request more, then it'll have to delete the current memory and allocate a bigger chunk. The following snippet illustrates how buffers work Buffer buffer; buffer.reset(1024u); // (size 1024 bytes, capacity 1024 bytes) -> allocates buffer.reset(512u); // (size 512 bytes, capacity 1024 bytes) buffer.reset(2048u); // (size 2048 bytes, capacity 2048 bytes) -> allocates Sending data asynchronously Some sensors may require to send data asynchronously, either for performance or because the data is generated in a different thread, for instance, camera sensors send the images from the render thread. Using the data stream asynchronously is perfectly fine, as long as the stream itself is created in the game thread. For instance void MySensor::Tick(float DeltaSeconds) { Super::Tick(DeltaSeconds); auto Stream = GetDataStream(*this); std::async(std::launch::async, [Stream=std::move(Stream)]() { auto Data = ComputeData(); Stream.Send(*this, Data); }); } Client-side sensors Some sensors do not require the simulator to do their measurements, those sensors may run completely in the client-side freeing the simulator from extra computations. Examples of such sensors is the LaneInvasion sensors. The usual approach is to create a \"dummy\" sensor in the server-side, just so the simulator is aware that such actor exists. However, this dummy sensor doesn't tick nor sends any sort of data. Its counterpart on the client-side however, registers a \"on tick\" callback to execute some code on every new update. For instance, the LaneInvasion sensor registers a callback that notifies every time a lane mark has been crossed. It is very important to take into account that the \"on tick\" callback in the client-side is executed concurrently, i.e., the same method may be executed simultaneously by different threads. Any data accessed must be properly synchronized, either with a mutex, using atomics, or even better making sure all the members accessed remain constant.","title":"\u521b\u5efa\u4e00\u4e2a\u4f20\u611f\u5668"},{"location":"tuto_D_create_sensor/#how-to-add-a-new-sensor","text":"This tutorial explains the basics for adding a new sensor to CARLA. It provides the necessary steps to implement a sensor in Unreal Engine 4 (UE4) and expose its data via CARLA's Python API. We'll follow all the steps by creating a new sensor as an example. Prerequisites Introduction Creating a new sensor 1- Sensor actor 2- Sensor data serializer 3- Sensor data object 4- Register your sensor 5- Usage example Appendix Reusing buffers Sending data asynchronously Client-side sensors","title":"How to add a new sensor"},{"location":"tuto_D_create_sensor/#prerequisites","text":"In order to implement a new sensor, you'll need to compile CARLA source code, for detailed instructions on how to achieve this see Building from source . This tutorial also assumes the reader is fluent in C++ programming.","title":"Prerequisites"},{"location":"tuto_D_create_sensor/#introduction","text":"Sensors in CARLA are a special type of actor that produce a stream of data. Some sensors produce data continuously, every time the sensor is updated, other produce data only after certain events. For instance, a camera produces an image on every update, but a collision sensor is only triggered in the event of a collision. Although most sensors compute their measurements in the server side (UE4), it's worth noticing that some sensors run in the client-side only. An example of such sensor is the LaneInvasion, it notifies every time a lane mark has been crossed. For further details see Appendix: Client-side sensors . In this tutorial, we'll be focusing on server-side sensors. In order to have a sensor running inside UE4 sending data all the way to a Python client, we need to cover the whole communication pipeline. Thus we'll need the following classes covering the different steps of the pipeline Sensor actor Actor in charge of measuring and/or simulating data. Running in Carla plugin using UE4 framework. Accessible by the user as Sensor actor. Serializer Object containing methods for serializing and deserializing the data generated by the sensor. Running in LibCarla, both server and client. Sensor data Object representing the data generated by the sensor. This is the object that will be passed to the final user, both in C++ and Python APIs. Note To ensure best performance, sensors are registered and dispatched using a sort of \"compile-time plugin system\" based on template meta-programming. Most likely, the code won't compile until all the pieces are present.","title":"Introduction"},{"location":"tuto_D_create_sensor/#creating-a-new-sensor","text":"Full source code here. We're going to create a sensor that detects other actors around our vehicle. For that we'll create a trigger box that detects objects within, and we'll be reporting status to the client every time a vehicle is inside our trigger box. Let's call it Safe Distance Sensor . For the sake of simplicity we're not going to take into account all the edge cases, nor it will be implemented in the most efficient way. This is just an illustrative example.","title":"Creating a new sensor"},{"location":"tuto_D_create_sensor/#1-sensor-actor","text":"This is the most complicated class we're going to create. Here we're running inside Unreal Engine framework, knowledge of UE4 API will be very helpful but not indispensable, we'll assume the reader has never worked with UE4 before. Inside UE4, we have a similar hierarchy as we have in the client-side, ASensor derives from AActor , and an actor is roughly any object that can be dropped into the world. AActor has a virtual function called Tick that we can use to update our sensor on every simulator update. Higher in the hierarchy we have UObject , base class for most of UE4 classes. It is important to know that objects deriving from UObject are handle via pointers and are garbage collected when they're no longer referenced. Class members pointing to UObject s need to be marked with UPROPERTY macros or they'll be garbage collected. Let's start. This class has to be located inside Carla plugin, we'll create two files for our new C++ class Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SafeDistanceSensor.h Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Sensor/SafeDistanceSensor.cpp At the very minimum, the sensor is required to inherit ASensor , and provide a static method GetSensorDefinition ; but we'll be overriding also the Set , SetOwner , and Tick methods. This sensor also needs a trigger box that will be detecting other actors around us. With this and some required boiler-plate UE4 code, the header file looks like #pragma once #include \"Carla/Sensor/Sensor.h\" #include \"Carla/Actor/ActorDefinition.h\" #include \"Carla/Actor/ActorDescription.h\" #include \"Components/BoxComponent.h\" #include \"SafeDistanceSensor.generated.h\" UCLASS() class CARLA_API ASafeDistanceSensor : public ASensor { GENERATED_BODY() public: ASafeDistanceSensor(const FObjectInitializer &ObjectInitializer); static FActorDefinition GetSensorDefinition(); void Set(const FActorDescription &ActorDescription) override; void SetOwner(AActor *Owner) override; void Tick(float DeltaSeconds) override; private: UPROPERTY() UBoxComponent *Box = nullptr; }; In the cpp file, first we'll need some includes #include \"Carla.h\" #include \"Carla/Sensor/SafeDistanceSensor.h\" #include \"Carla/Actor/ActorBlueprintFunctionLibrary.h\" #include \"Carla/Game/CarlaEpisode.h\" #include \"Carla/Util/BoundingBoxCalculator.h\" #include \"Carla/Vehicle/CarlaWheeledVehicle.h\" Then we can proceed to implement the functionality. The constructor will create the trigger box, and tell UE4 that we want our tick function to be called. If our sensor were not using the tick function, we can disable it here to avoid unnecessary ticks ASafeDistanceSensor::ASafeDistanceSensor(const FObjectInitializer &ObjectInitializer) : Super(ObjectInitializer) { Box = CreateDefaultSubobject<UBoxComponent>(TEXT(\"BoxOverlap\")); Box->SetupAttachment(RootComponent); Box->SetHiddenInGame(true); // Disable for debugging. Box->SetCollisionProfileName(FName(\"OverlapAll\")); PrimaryActorTick.bCanEverTick = true; } Now we need to tell Carla what attributes this sensor has, this is going to be used to create a new blueprint in our blueprint library, users can use this blueprint to configure and spawn this sensor. We're going to define here the attributes of our trigger box, in this example we'll expose only X and Y safe distances FActorDefinition ASafeDistanceSensor::GetSensorDefinition() { auto Definition = UActorBlueprintFunctionLibrary::MakeGenericSensorDefinition( TEXT(\"other\"), TEXT(\"safe_distance\")); FActorVariation Front; Front.Id = TEXT(\"safe_distance_front\"); Front.Type = EActorAttributeType::Float; Front.RecommendedValues = { TEXT(\"1.0\") }; Front.bRestrictToRecommended = false; FActorVariation Back; Back.Id = TEXT(\"safe_distance_back\"); Back.Type = EActorAttributeType::Float; Back.RecommendedValues = { TEXT(\"0.5\") }; Back.bRestrictToRecommended = false; FActorVariation Lateral; Lateral.Id = TEXT(\"safe_distance_lateral\"); Lateral.Type = EActorAttributeType::Float; Lateral.RecommendedValues = { TEXT(\"0.5\") }; Lateral.bRestrictToRecommended = false; Definition.Variations.Append({ Front, Back, Lateral }); return Definition; } With this, the sensor factory is able to create a Safe Distance Sensor on user demand. Immediately after the sensor is created, the Set function is called with the parameters that the user requested void ASafeDistanceSensor::Set(const FActorDescription &Description) { Super::Set(Description); float Front = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_front\", Description.Variations, 1.0f); float Back = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_back\", Description.Variations, 0.5f); float Lateral = UActorBlueprintFunctionLibrary::RetrieveActorAttributeToFloat( \"safe_distance_lateral\", Description.Variations, 0.5f); constexpr float M_TO_CM = 100.0f; // Unit conversion. float LocationX = M_TO_CM * (Front - Back) / 2.0f; float ExtentX = M_TO_CM * (Front + Back) / 2.0f; float ExtentY = M_TO_CM * Lateral; Box->SetRelativeLocation(FVector{LocationX, 0.0f, 0.0f}); Box->SetBoxExtent(FVector{ExtentX, ExtentY, 0.0f}); } Note that the set function is called before UE4's BeginPlay , we won't use this virtual function here, but it's important for other sensors. Now we're going to extend the box volume based on the bounding box of the actor that we're attached to. For that, the most convenient method is to use the SetOwner virtual function. This function is called when our sensor is attached to another actor. void ASafeDistanceSensor::SetOwner(AActor *Owner) { Super::SetOwner(Owner); auto BoundingBox = UBoundingBoxCalculator::GetActorBoundingBox(Owner); Box->SetBoxExtent(BoundingBox.Extent + Box->GetUnscaledBoxExtent()); } The only thing left to do is the actual measurement, for that we'll use the Tick function. We're going to look for all the vehicles currently overlapping our box, and we'll send this list to client void ASafeDistanceSensor::Tick(float DeltaSeconds) { Super::Tick(DeltaSeconds); TSet<AActor *> DetectedActors; Box->GetOverlappingActors(DetectedActors, ACarlaWheeledVehicle::StaticClass()); DetectedActors.Remove(GetOwner()); if (DetectedActors.Num() > 0) { auto Stream = GetDataStream(*this); Stream.Send(*this, GetEpisode(), DetectedActors); } } Note In production-ready sensors, the Tick function should be very optimized, specially if the sensor sends big chunks of data. This function is called every update in the game thread thus significantly affects the performance of the simulator. Ok, a couple of things going on here that we haven't mentioned yet, what's this stream? Every sensor has a data stream associated. This stream is used to send data down to the client, and this is the stream you subscribe to when you use the sensor.listen(callback) method in the Python API. Every time you send here some data, the callback on the client-side is going to be triggered. But before that, the data is going to travel through several layers. First of them will be the serializer that we have to create next. We'll fully understand this part once we have completed the Serialize function in the next section.","title":"1- Sensor actor"},{"location":"tuto_D_create_sensor/#2-sensor-data-serializer","text":"This class is actually rather simple, it's only required to have two static methods, Serialize and Deserialize . We'll add two files for it, this time to LibCarla LibCarla/source/carla/sensor/s11n/SafeDistanceSerializer.h LibCarla/source/carla/sensor/s11n/SafeDistanceSerializer.cpp Let's start with the Serialize function. This function is going to receive as arguments whatever we pass to the Stream.Send(...) function, with the only condition that the first argument has to be a sensor and it has to return a buffer. static Buffer Serialize(const Sensor &, ...); A carla::Buffer is just a dynamically allocated piece of raw memory with some convenient functionality, we're going to use it to send raw data to the client. In this example, we need to write the list of detected actors to a buffer in a way that it can be meaningful in the client-side. That's why we passed the episode object to this function. The UCarlaEpisode class represent the current episode running in the simulator, i.e. the state of the simulation since last time we loaded a map. It contains all the relevant information to Carla, and among other things, it allows searching for actor IDs. We can send these IDs to the client and the client will be able to recognise these as actors template <typename SensorT, typename EpisodeT, typename ActorListT> static Buffer Serialize( const SensorT &, const EpisodeT &episode, const ActorListT &detected_actors) { const uint32_t size_in_bytes = sizeof(ActorId) * detected_actors.Num(); Buffer buffer{size_in_bytes}; unsigned char *it = buffer.data(); for (auto *actor : detected_actors) { ActorId id = episode.FindActor(actor).GetActorId(); std::memcpy(it, &id, sizeof(ActorId)); it += sizeof(ActorId); } return buffer; } Note that we templatize the UE4 classes to avoid including these files within LibCarla. This buffer we're returning is going to come back to us, except that this time in the client-side, in the Deserialize function packed in a RawData object static SharedPtr<SensorData> Deserialize(RawData &&data); We'll implement this method in the cpp file, and it's rather simple SharedPtr<SensorData> SafeDistanceSerializer::Deserialize(RawData &&data) { return SharedPtr<SensorData>(new data::SafeDistanceEvent(std::move(data))); } except for the fact that we haven't defined yet what's a SafeDistanceEvent .","title":"2- Sensor data serializer"},{"location":"tuto_D_create_sensor/#3-sensor-data-object","text":"We need to create a data object for the users of this sensor, representing the data of a safe distance event . We'll add this file to LibCarla/source/carla/sensor/data/SafeDistanceEvent.h This object is going to be equivalent to a list of actor IDs. For that, we'll derive from the Array template #pragma once #include \"carla/rpc/ActorId.h\" #include \"carla/sensor/data/Array.h\" namespace carla { namespace sensor { namespace data { class SafeDistanceEvent : public Array<rpc::ActorId> { public: explicit SafeDistanceEvent(RawData &&data) : Array<rpc::ActorId>(std::move(data)) {} }; } // namespace data } // namespace sensor } // namespace carla The Array template is going to reinterpret the buffer we created in the Serialize method as an array of actor IDs, and it's able to do so directly from the buffer we received, without allocating any new memory. Although for this small example may seem a bit overkill, this mechanism is also used for big chunks of data; imagine we're sending HD images, we save a lot by reusing the raw memory. Now we need to expose this class to Python. In our example, we haven't add any extra methods, so we'll just expose the methods related to Array. We do so by using Boost.Python bindings, add the following to PythonAPI/carla/source/libcarla/SensorData.cpp . class_< csd::SafeDistanceEvent, // actual type. bases<cs::SensorData>, // parent type. boost::noncopyable, // disable copy. boost::shared_ptr<csd::SafeDistanceEvent> // use as shared_ptr. >(\"SafeDistanceEvent\", no_init) // name, and disable construction. .def(\"__len__\", &csd::SafeDistanceEvent::size) .def(\"__iter__\", iterator<csd::SafeDistanceEvent>()) .def(\"__getitem__\", +[](const csd::SafeDistanceEvent &self, size_t pos) -> cr::ActorId { return self.at(pos); }) ; Note that csd is an alias for the namespace carla::sensor::data . What we're doing here is exposing some C++ methods in Python. Just with this, the Python API will be able to recognise our new event and it'll behave similar to an array in Python, except that cannot be modified.","title":"3- Sensor data object"},{"location":"tuto_D_create_sensor/#4-register-your-sensor","text":"Now that the pipeline is complete, we're ready to register our new sensor. We do so in LibCarla/source/carla/sensor/SensorRegistry.h . Follow the instruction in this header file to add the different includes and forward declarations, and add the following pair to the registry std::pair<ASafeDistanceSensor *, s11n::SafeDistanceSerializer> With this, the sensor registry now can do its magic to dispatch the right data to the right serializer. Now recompile CARLA, hopefully everything goes ok and no errors. Unfortunately, most of the errors here will be related to templates and the error messages can be a bit cryptic. make rebuild","title":"4- Register your sensor"},{"location":"tuto_D_create_sensor/#5-usage-example","text":"Finally, we have the sensor included and we have finished recompiling, our sensor by now should be available in Python. To spawn this sensor, we simply need to find it in the blueprint library, if everything went right, the sensor factory should have added our sensor to the library blueprint = blueprint_library.find('sensor.other.safe_distance') sensor = world.spawn_actor(blueprint, carla.Transform(), attach_to=vehicle) and now we can start listening for events by registering a callback function world_ref = weakref.ref(world) def callback(event): for actor_id in event: vehicle = world_ref().get_actor(actor_id) print('Vehicle too close: %s' % vehicle.type_id) sensor.listen(callback) This callback is going to execute every update that another vehicle is inside our safety distance box, e.g. Vehicle too close: vehicle.audi.a2 Vehicle too close: vehicle.mercedes-benz.coupe That's it, we have a new sensor working!","title":"5- Usage example"},{"location":"tuto_D_create_sensor/#appendix","text":"","title":"Appendix"},{"location":"tuto_D_create_sensor/#reusing-buffers","text":"In order to optimize memory usage, we can use the fact that each sensor sends buffers of similar size; in particularly, in the case of cameras, the size of the image is constant during execution. In those cases, we can save a lot by reusing the allocated memory between frames. Each stream contains a buffer pool that can be used to avoid unnecessary memory allocations. Remember that each sensor has a stream associated thus each sensor has its own buffer pool. Use the following to retrieve a buffer from the pool auto Buffer = Stream.PopBufferFromPool(); If the pool is empty, it returns an empty buffer, i.e. a buffer with no memory allocated. In that case, when you resize the buffer new memory will be allocated. This will happen a few times during the first frames. However, if a buffer was retrieved from the pool, its memory will go back to the pool once the buffer goes out of the scope. Next time you get another buffer from the pool, it'll contain the allocated piece of memory from the previous buffer. As you can see, a buffer object acts actually as an smart pointer to a contiguous piece of raw memory. As long as you don't request more memory than the currently allocated, the buffer reuses the memory. If you request more, then it'll have to delete the current memory and allocate a bigger chunk. The following snippet illustrates how buffers work Buffer buffer; buffer.reset(1024u); // (size 1024 bytes, capacity 1024 bytes) -> allocates buffer.reset(512u); // (size 512 bytes, capacity 1024 bytes) buffer.reset(2048u); // (size 2048 bytes, capacity 2048 bytes) -> allocates","title":"Reusing buffers"},{"location":"tuto_D_create_sensor/#sending-data-asynchronously","text":"Some sensors may require to send data asynchronously, either for performance or because the data is generated in a different thread, for instance, camera sensors send the images from the render thread. Using the data stream asynchronously is perfectly fine, as long as the stream itself is created in the game thread. For instance void MySensor::Tick(float DeltaSeconds) { Super::Tick(DeltaSeconds); auto Stream = GetDataStream(*this); std::async(std::launch::async, [Stream=std::move(Stream)]() { auto Data = ComputeData(); Stream.Send(*this, Data); }); }","title":"Sending data asynchronously"},{"location":"tuto_D_create_sensor/#client-side-sensors","text":"Some sensors do not require the simulator to do their measurements, those sensors may run completely in the client-side freeing the simulator from extra computations. Examples of such sensors is the LaneInvasion sensors. The usual approach is to create a \"dummy\" sensor in the server-side, just so the simulator is aware that such actor exists. However, this dummy sensor doesn't tick nor sends any sort of data. Its counterpart on the client-side however, registers a \"on tick\" callback to execute some code on every new update. For instance, the LaneInvasion sensor registers a callback that notifies every time a lane mark has been crossed. It is very important to take into account that the \"on tick\" callback in the client-side is executed concurrently, i.e., the same method may be executed simultaneously by different threads. Any data accessed must be properly synchronized, either with a mutex, using atomics, or even better making sure all the members accessed remain constant.","title":"Client-side sensors"},{"location":"tuto_D_customize_vehicle_suspension/","text":"\u5b9a\u5236\u8f66\u8f86\u60ac\u67b6 \u672c\u6559\u7a0b\u4ecb\u7ecd\u4e86 CARLA \u8f66\u8f86\u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4ee5\u53ca\u5982\u4f55\u9488\u5bf9\u4e0d\u540c\u7684\u53ef\u7528\u8f66\u8f86\u5b9e\u65bd\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u3002\u4f7f\u7528\u6b64\u4fe1\u606f\u53ef\u4ee5\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u4e2d\u8f66\u8f86\u7684\u60ac\u67b6\u53c2\u6570\uff0c\u5e76\u968f\u610f\u5bf9\u5176\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002 \u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6 \u60ac\u67b6\u7ec4 \u8f7f\u8dd1\u8f66 \u8d8a\u91ce \u5361\u8f66 \u57ce\u5e02\u8f66 \u8d27\u8f66 \u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6 \u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf\u7531\u6240\u8ff0\u8f66\u8f86\u7684\u8f66\u8f6e\u9650\u5b9a\u3002\u6bcf\u4e2a\u8f66\u8f6e\u90fd\u6709\u4e00\u4e2a\u5e26\u6709\u4e00\u4e9b\u53c2\u6570\u5316\u7684\u72ec\u7acb\u84dd\u56fe\uff0c\u5176\u4e2d\u5305\u62ec\u60ac\u67b6\u7cfb\u7edf\u3002 \u8fd9\u4e9b\u84dd\u56fe\u53ef\u4ee5\u5728 Content/Carla/Blueprints/Vehicles/<vehicle_name> \u4e2d\u627e\u5230\u3002\u5b83\u4eec\u7684\u540d\u79f0\u5982\u4e0b\uff1a BP_<vehicle_name>_<F/R><R/L>W \u3002 F \u6216 R \u76f8\u5e94\u5730\u7528\u4e8e\u524d\u8f6e\u6216\u540e\u8f6e\u3002 R \u6216 L \u5e94\u5730\u7528\u4e8e\u53f3\u8f6e\u6216\u5de6\u8f6e\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u5965\u8feaA2\u5de6\u524d\u8f6e\u7684\u84dd\u56fe\u547d\u540d\u4e3a BP_AudiA2_FLW . shape_radius \u8ba9\u8f66\u8f6e\u505c\u5728\u8def\u9762\u4e0a\uff0c\u65e2\u4e0d\u60ac\u505c\u4e5f\u4e0d\u5728\u8def\u9762\u5185\u90e8\u3002 \u5728\u84dd\u56fe\u4e2d\uff0c\u6709\u4e00\u4e2a\u90e8\u5206\u5305\u542b\u6709\u5173\u8f66\u8f6e\u60ac\u67b6\u7684\u4e00\u4e9b\u53c2\u6570\u5316\u3002\u4ee5\u4e0b\u662f\u865a\u5e7b\u5f15\u64ce\u4e2d\u63cf\u8ff0\u7684\u5b83\u4eec\u7684\u5b9a\u4e49\u3002 Suspension Force Offset \u2014 \u8ddd\u65bd\u52a0\u60ac\u6302\u529b\u7684\u4f4d\u7f6e\u7684\u5782\u76f4\u504f\u79fb\uff08\u6cbf Z \u8f74\uff09\u3002 Suspension Max Raise \u2014 \u8f66\u8f6e\u53ef\u4ee5\u8d85\u51fa\u9759\u6b62\u4f4d\u7f6e\u591a\u8fdc\u3002 Suspension Max Drop \u2014 \u8f66\u8f6e\u53ef\u4ee5\u4e0b\u964d\u5230\u9759\u6b62\u4f4d\u7f6e\u4ee5\u4e0b\u591a\u8fdc\u3002 Suspension Natural Frequency \u2014 \u60ac\u67b6\u7684\u632f\u8361\u9891\u7387\u3002\u6807\u51c6\u6c7d\u8f66\u7684\u503c\u4ecb\u4e8e 5 \u548c\u4e4b\u95f4 10 \u3002 Suspension Damping Ratio \u2014 \u80fd\u91cf\u4ece\u5f39\u7c27\u8017\u6563\u7684\u901f\u7387\u3002\u6807\u51c6\u6c7d\u8f66\u7684\u503c\u4ecb\u4e8e 0.8 \u548c 1.2 \u4e4b\u95f4\u3002\u503c <1 \u66f4\u52a0\u8fdf\u7f13\uff0c\u503c >1 \u66f4\u52a0\u52a8\u8361\u3002 Sweep Type \u2014 \u8f66\u8f6e\u60ac\u67b6\u662f\u5426\u8003\u8651\u7b80\u5355\u3001\u590d\u6742\u6216\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002 \u8f66\u8f6e\u84dd\u56fe\u4e2d\u7684\u60ac\u67b6\u9762\u677f\u3002 \u7b14\u8bb0 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8f66\u8f86\u7684\u6240\u6709\u8f66\u8f6e\u5728 CARLA \u4e2d\u5177\u6709\u76f8\u540c\u7684\u53c2\u6570\u5316\u3002\u4ee5\u4e0b\u89e3\u91ca\u5c06\u6309\u8f66\u8f86\u800c\u4e0d\u662f\u6309\u8f66\u8f6e\u8fdb\u884c\u4ecb\u7ecd\u3002 \u60ac\u67b6\u7ec4 \u6839\u636e\u5176\u7cfb\u7edf\u60ac\u67b6\uff0cCARLA \u4e2d\u7684\u8f66\u8f86\u53ef\u5206\u4e3a\u4e94\u7ec4\u3002\u7ec4\u4e2d\u7684\u6240\u6709\u8f66\u8f86\u90fd\u5177\u6709\u76f8\u540c\u7684\u53c2\u6570\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u9884\u8ba1\u5728\u9053\u8def\u4e0a\u5177\u6709\u76f8\u4f3c\u7684\u884c\u4e3a\u3002\u8f66\u8f86\u7684\u60ac\u67b6\u53ef\u4ee5\u968f\u610f\u4fee\u6539\uff0c\u4e0d\u53d7\u8fd9\u4e94\u7ec4\u7684\u9650\u5236\u3002\u7136\u800c\uff0c\u4e86\u89e3\u8fd9\u4e9b\u5e76\u89c2\u5bdf\u5b83\u4eec\u5728\u4eff\u771f\u4e2d\u7684\u884c\u4e3a\u5bf9\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u60ac\u67b6\u975e\u5e38\u6709\u7528\u3002 \u8fd9\u4e94\u4e2a\u7ec4\u662f\uff1a \u8f7f\u8dd1\u8f66 \u3001 \u8d8a\u91ce\u8f66 \u3001 \u5361\u8f66 \u3001 \u57ce\u5e02\u8f66 \u548c \u8d27\u8f66 \u3002\u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u8fd9\u4e9b\u7ec4\u7684\u53c2\u6570\u5316\u9075\u5faa\u7279\u5b9a\u7684\u6a21\u5f0f\u3002 \u521a\u6027\u60ac\u67b6 \u8f7f\u8dd1\u8f66 \u57ce\u5e02\u8f66 \u8d27\u8f66 \u8d8a\u91ce \u5361\u8f66 \u8f6f\u60ac\u67b6 \u5f53\u4ece\u8f6f\u60ac\u67b6\u8f6c\u5411\u786c\u60ac\u67b6\u65f6\uff0c\u53c2\u6570\u5316\u6709\u4e00\u4e9b\u660e\u663e\u7684\u8d8b\u52bf\u3002 Suspension Max Raise \u548c Suspension Max Drop \u7684 __\u51cf\u5c11 \u2014 \u521a\u6027\u8f66\u8f86\u5e94\u5728\u5e73\u5766\u7684\u9053\u8def\u4e0a\u884c\u9a76\u4e14\u6ca1\u6709\u98a0\u7c38\u3002\u51fa\u4e8e\u7a7a\u6c14\u52a8\u529b\u5b66\u7684\u8003\u8651\uff0c\u5e95\u76d8\u4e0d\u5e94\u5927\u5e45\u79fb\u52a8\uff0c\u800c\u5e94\u59cb\u7ec8\u4fdd\u6301\u9760\u8fd1\u5730\u9762\u3002 Suspension Damping Ratio \u7684 \u589e\u52a0 \u2014 \u5bf9\u4e8e\u521a\u6027\u8f66\u8f86\u6765\u8bf4\uff0c\u51cf\u9707\u5668\u5438\u6536\u7684\u5f39\u8df3\u66f4\u5927\u3002 \u8f7f\u8dd1\u8f66 \u5177\u6709\u6700\u786c\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 7.5 Suspension Max Drop \u2014 7.5 Suspension Natural Frequency \u2014 9.5 Suspension Damping Ratio \u2014 1.0 Sweep Type \u2014 SimpleAndComplex vehicle.audi.tt vehicle.lincoln.mkz2017 vehicle.mercedes-benz.coupe vehicle.seat.leon vehicle.tesla.model3 \u8d8a\u91ce \u914d\u5907\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 15.0 Suspension Max Drop \u2014 15.0 Suspension Natural Frequency \u2014 7.0 Suspension Damping Ratio \u2014 0.5 Sweep Type \u2014 SimpleAndComplex vehicle.audi.etron vehicle.jeep.wrangler_rubicon vehicle.nissan.patrol vehicle.tesla.cybertruck \u5361\u8f66 \u5177\u6709\u6700\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 17.0 Suspension Max Drop \u2014 17.0 Suspension Natural Frequency \u2014 6.0 Suspension Damping Ratio \u2014 0.4 Sweep Type \u2014 SimpleAndComplex vehicle.carlamotors.carlacola \u57ce\u5e02\u8f66 \u914d\u5907\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 8.0 Suspension Max Drop \u2014 8.0 Suspension Natural Frequency \u2014 9.0 Suspension Damping Ratio \u2014 0.8 Sweep Type \u2014 SimpleAndComplex vehicle.audi.a2 vehicle.bmw.grandtourer vehicle.chevrolet.impala vehicle.citroen.c3 vehicle.dodge_charger.police vehicle.mini.cooperst vehicle.mustang.mustang vehicle.nissan.micra vehicle.toyota.prius \u8d27\u8f66 \u5177\u6709\u4e2d\u5730\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 9.0 Suspension Max Drop \u2014 9.0 Suspension Natural Frequency \u2014 8.0 Suspension Damping Ratio \u2014 0.8 Sweep Type \u2014 SimpleAndComplex vehicle.volkswagen.t2 \u4f7f\u7528\u8bba\u575b\u53d1\u5e03\u6709\u5173\u6b64\u4e3b\u9898\u7684\u4efb\u4f55\u7591\u95ee\u3001\u95ee\u9898\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b \u4ee5\u4e0b\u662f\u672c\u6587\u4e4b\u540e\u7684\u4e00\u4e9b\u5efa\u8bae\u8bfb\u7269\u3002 \u63a7\u5236\u8f66\u8f86\u7269\u7406 \u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668 \u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e","title":"\u81ea\u5b9a\u4e49\u8f66\u8f86\u60ac\u67b6"},{"location":"tuto_D_customize_vehicle_suspension/#_1","text":"\u672c\u6559\u7a0b\u4ecb\u7ecd\u4e86 CARLA \u8f66\u8f86\u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4ee5\u53ca\u5982\u4f55\u9488\u5bf9\u4e0d\u540c\u7684\u53ef\u7528\u8f66\u8f86\u5b9e\u65bd\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u3002\u4f7f\u7528\u6b64\u4fe1\u606f\u53ef\u4ee5\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u4e2d\u8f66\u8f86\u7684\u60ac\u67b6\u53c2\u6570\uff0c\u5e76\u968f\u610f\u5bf9\u5176\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002 \u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6 \u60ac\u67b6\u7ec4 \u8f7f\u8dd1\u8f66 \u8d8a\u91ce \u5361\u8f66 \u57ce\u5e02\u8f66 \u8d27\u8f66","title":"\u5b9a\u5236\u8f66\u8f86\u60ac\u67b6"},{"location":"tuto_D_customize_vehicle_suspension/#_2","text":"\u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf\u7531\u6240\u8ff0\u8f66\u8f86\u7684\u8f66\u8f6e\u9650\u5b9a\u3002\u6bcf\u4e2a\u8f66\u8f6e\u90fd\u6709\u4e00\u4e2a\u5e26\u6709\u4e00\u4e9b\u53c2\u6570\u5316\u7684\u72ec\u7acb\u84dd\u56fe\uff0c\u5176\u4e2d\u5305\u62ec\u60ac\u67b6\u7cfb\u7edf\u3002 \u8fd9\u4e9b\u84dd\u56fe\u53ef\u4ee5\u5728 Content/Carla/Blueprints/Vehicles/<vehicle_name> \u4e2d\u627e\u5230\u3002\u5b83\u4eec\u7684\u540d\u79f0\u5982\u4e0b\uff1a BP_<vehicle_name>_<F/R><R/L>W \u3002 F \u6216 R \u76f8\u5e94\u5730\u7528\u4e8e\u524d\u8f6e\u6216\u540e\u8f6e\u3002 R \u6216 L \u5e94\u5730\u7528\u4e8e\u53f3\u8f6e\u6216\u5de6\u8f6e\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u5965\u8feaA2\u5de6\u524d\u8f6e\u7684\u84dd\u56fe\u547d\u540d\u4e3a BP_AudiA2_FLW . shape_radius \u8ba9\u8f66\u8f6e\u505c\u5728\u8def\u9762\u4e0a\uff0c\u65e2\u4e0d\u60ac\u505c\u4e5f\u4e0d\u5728\u8def\u9762\u5185\u90e8\u3002 \u5728\u84dd\u56fe\u4e2d\uff0c\u6709\u4e00\u4e2a\u90e8\u5206\u5305\u542b\u6709\u5173\u8f66\u8f6e\u60ac\u67b6\u7684\u4e00\u4e9b\u53c2\u6570\u5316\u3002\u4ee5\u4e0b\u662f\u865a\u5e7b\u5f15\u64ce\u4e2d\u63cf\u8ff0\u7684\u5b83\u4eec\u7684\u5b9a\u4e49\u3002 Suspension Force Offset \u2014 \u8ddd\u65bd\u52a0\u60ac\u6302\u529b\u7684\u4f4d\u7f6e\u7684\u5782\u76f4\u504f\u79fb\uff08\u6cbf Z \u8f74\uff09\u3002 Suspension Max Raise \u2014 \u8f66\u8f6e\u53ef\u4ee5\u8d85\u51fa\u9759\u6b62\u4f4d\u7f6e\u591a\u8fdc\u3002 Suspension Max Drop \u2014 \u8f66\u8f6e\u53ef\u4ee5\u4e0b\u964d\u5230\u9759\u6b62\u4f4d\u7f6e\u4ee5\u4e0b\u591a\u8fdc\u3002 Suspension Natural Frequency \u2014 \u60ac\u67b6\u7684\u632f\u8361\u9891\u7387\u3002\u6807\u51c6\u6c7d\u8f66\u7684\u503c\u4ecb\u4e8e 5 \u548c\u4e4b\u95f4 10 \u3002 Suspension Damping Ratio \u2014 \u80fd\u91cf\u4ece\u5f39\u7c27\u8017\u6563\u7684\u901f\u7387\u3002\u6807\u51c6\u6c7d\u8f66\u7684\u503c\u4ecb\u4e8e 0.8 \u548c 1.2 \u4e4b\u95f4\u3002\u503c <1 \u66f4\u52a0\u8fdf\u7f13\uff0c\u503c >1 \u66f4\u52a0\u52a8\u8361\u3002 Sweep Type \u2014 \u8f66\u8f6e\u60ac\u67b6\u662f\u5426\u8003\u8651\u7b80\u5355\u3001\u590d\u6742\u6216\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002 \u8f66\u8f6e\u84dd\u56fe\u4e2d\u7684\u60ac\u67b6\u9762\u677f\u3002 \u7b14\u8bb0 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8f66\u8f86\u7684\u6240\u6709\u8f66\u8f6e\u5728 CARLA \u4e2d\u5177\u6709\u76f8\u540c\u7684\u53c2\u6570\u5316\u3002\u4ee5\u4e0b\u89e3\u91ca\u5c06\u6309\u8f66\u8f86\u800c\u4e0d\u662f\u6309\u8f66\u8f6e\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"\u60ac\u67b6\u7cfb\u7edf\u7684\u57fa\u7840\u77e5\u8bc6"},{"location":"tuto_D_customize_vehicle_suspension/#_3","text":"\u6839\u636e\u5176\u7cfb\u7edf\u60ac\u67b6\uff0cCARLA \u4e2d\u7684\u8f66\u8f86\u53ef\u5206\u4e3a\u4e94\u7ec4\u3002\u7ec4\u4e2d\u7684\u6240\u6709\u8f66\u8f86\u90fd\u5177\u6709\u76f8\u540c\u7684\u53c2\u6570\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u9884\u8ba1\u5728\u9053\u8def\u4e0a\u5177\u6709\u76f8\u4f3c\u7684\u884c\u4e3a\u3002\u8f66\u8f86\u7684\u60ac\u67b6\u53ef\u4ee5\u968f\u610f\u4fee\u6539\uff0c\u4e0d\u53d7\u8fd9\u4e94\u7ec4\u7684\u9650\u5236\u3002\u7136\u800c\uff0c\u4e86\u89e3\u8fd9\u4e9b\u5e76\u89c2\u5bdf\u5b83\u4eec\u5728\u4eff\u771f\u4e2d\u7684\u884c\u4e3a\u5bf9\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u60ac\u67b6\u975e\u5e38\u6709\u7528\u3002 \u8fd9\u4e94\u4e2a\u7ec4\u662f\uff1a \u8f7f\u8dd1\u8f66 \u3001 \u8d8a\u91ce\u8f66 \u3001 \u5361\u8f66 \u3001 \u57ce\u5e02\u8f66 \u548c \u8d27\u8f66 \u3002\u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u8fd9\u4e9b\u7ec4\u7684\u53c2\u6570\u5316\u9075\u5faa\u7279\u5b9a\u7684\u6a21\u5f0f\u3002 \u521a\u6027\u60ac\u67b6 \u8f7f\u8dd1\u8f66 \u57ce\u5e02\u8f66 \u8d27\u8f66 \u8d8a\u91ce \u5361\u8f66 \u8f6f\u60ac\u67b6 \u5f53\u4ece\u8f6f\u60ac\u67b6\u8f6c\u5411\u786c\u60ac\u67b6\u65f6\uff0c\u53c2\u6570\u5316\u6709\u4e00\u4e9b\u660e\u663e\u7684\u8d8b\u52bf\u3002 Suspension Max Raise \u548c Suspension Max Drop \u7684 __\u51cf\u5c11 \u2014 \u521a\u6027\u8f66\u8f86\u5e94\u5728\u5e73\u5766\u7684\u9053\u8def\u4e0a\u884c\u9a76\u4e14\u6ca1\u6709\u98a0\u7c38\u3002\u51fa\u4e8e\u7a7a\u6c14\u52a8\u529b\u5b66\u7684\u8003\u8651\uff0c\u5e95\u76d8\u4e0d\u5e94\u5927\u5e45\u79fb\u52a8\uff0c\u800c\u5e94\u59cb\u7ec8\u4fdd\u6301\u9760\u8fd1\u5730\u9762\u3002 Suspension Damping Ratio \u7684 \u589e\u52a0 \u2014 \u5bf9\u4e8e\u521a\u6027\u8f66\u8f86\u6765\u8bf4\uff0c\u51cf\u9707\u5668\u5438\u6536\u7684\u5f39\u8df3\u66f4\u5927\u3002","title":"\u60ac\u67b6\u7ec4"},{"location":"tuto_D_customize_vehicle_suspension/#_4","text":"\u5177\u6709\u6700\u786c\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 7.5 Suspension Max Drop \u2014 7.5 Suspension Natural Frequency \u2014 9.5 Suspension Damping Ratio \u2014 1.0 Sweep Type \u2014 SimpleAndComplex vehicle.audi.tt vehicle.lincoln.mkz2017 vehicle.mercedes-benz.coupe vehicle.seat.leon vehicle.tesla.model3","title":"\u8f7f\u8dd1\u8f66"},{"location":"tuto_D_customize_vehicle_suspension/#_5","text":"\u914d\u5907\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 15.0 Suspension Max Drop \u2014 15.0 Suspension Natural Frequency \u2014 7.0 Suspension Damping Ratio \u2014 0.5 Sweep Type \u2014 SimpleAndComplex vehicle.audi.etron vehicle.jeep.wrangler_rubicon vehicle.nissan.patrol vehicle.tesla.cybertruck","title":"\u8d8a\u91ce"},{"location":"tuto_D_customize_vehicle_suspension/#_6","text":"\u5177\u6709\u6700\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 17.0 Suspension Max Drop \u2014 17.0 Suspension Natural Frequency \u2014 6.0 Suspension Damping Ratio \u2014 0.4 Sweep Type \u2014 SimpleAndComplex vehicle.carlamotors.carlacola","title":"\u5361\u8f66"},{"location":"tuto_D_customize_vehicle_suspension/#_7","text":"\u914d\u5907\u8f6f\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 8.0 Suspension Max Drop \u2014 8.0 Suspension Natural Frequency \u2014 9.0 Suspension Damping Ratio \u2014 0.8 Sweep Type \u2014 SimpleAndComplex vehicle.audi.a2 vehicle.bmw.grandtourer vehicle.chevrolet.impala vehicle.citroen.c3 vehicle.dodge_charger.police vehicle.mini.cooperst vehicle.mustang.mustang vehicle.nissan.micra vehicle.toyota.prius","title":"\u57ce\u5e02\u8f66"},{"location":"tuto_D_customize_vehicle_suspension/#_8","text":"\u5177\u6709\u4e2d\u5730\u60ac\u67b6\u7684\u8f66\u8f86\u3002 \u53c2\u6570\u5316 \u6c7d\u8f66 Suspension Force Offset \u2014 0.0 Suspension Max Raise \u2014 9.0 Suspension Max Drop \u2014 9.0 Suspension Natural Frequency \u2014 8.0 Suspension Damping Ratio \u2014 0.8 Sweep Type \u2014 SimpleAndComplex vehicle.volkswagen.t2 \u4f7f\u7528\u8bba\u575b\u53d1\u5e03\u6709\u5173\u6b64\u4e3b\u9898\u7684\u4efb\u4f55\u7591\u95ee\u3001\u95ee\u9898\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b \u4ee5\u4e0b\u662f\u672c\u6587\u4e4b\u540e\u7684\u4e00\u4e9b\u5efa\u8bae\u8bfb\u7269\u3002 \u63a7\u5236\u8f66\u8f86\u7269\u7406 \u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668 \u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e","title":"\u8d27\u8f66"},{"location":"tuto_D_generate_colliders/","text":"\u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e\u4f53 \u672c\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4e3a\u8f66\u8f86\u521b\u5efa\u66f4\u51c6\u786e\u7684\u78b0\u649e\u8fb9\u754c\uff08\u76f8\u5bf9\u4e8e\u5bf9\u8c61\u7684\u539f\u59cb\u5f62\u72b6\uff09\u3002\u5b83\u4eec\u53ef\u4ee5\u7528\u4f5c\u7269\u7406\u78b0\u649e\u5668\uff0c\u4e0e\u78b0\u649e\u68c0\u6d4b\u517c\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u57fa\u4e8e\u5149\u7ebf\u6295\u5c04\u7684\u4f20\u611f\u5668\uff08\u4f8b\u5982\u6fc0\u5149\u96f7\u8fbe\uff09\u7684\u8f85\u52a9\u78b0\u649e\u5668\uff0c\u4ee5\u68c0\u7d22\u66f4\u51c6\u786e\u7684\u6570\u636e\u3002\u65b0\u7684\u78b0\u649e\u673a\u53ef\u4ee5\u96c6\u6210\u5230 CARLA \u4e2d\uff0c\u4ee5\u4fbf\u6240\u6709\u793e\u533a\u90fd\u80fd\u4ece\u4e2d\u53d7\u76ca\u3002\u5728 \u6b64\u5904 \u4e86\u89e3\u6709\u5173\u5982\u4f55\u4e3a\u5185\u5bb9\u5b58\u50a8\u5e93\u505a\u51fa\u8d21\u732e\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u78b0\u649e\u5668\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u5b8c\u5168\u7b49\u6548\u3002 \u5149\u7ebf\u6295\u5c04\u78b0\u649e\u5668 \u2014 \u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u4e00\u4e9b\u57fa\u672c\u7684\u4e09\u7ef4\u5efa\u6a21\u6280\u80fd\u3002\u8f66\u8f86\u4e2d\u6dfb\u52a0\u4e86\u8f85\u52a9\u78b0\u649e\u5668\uff0c\u4ee5\u4fbf\u57fa\u4e8e\u5149\u7ebf\u6295\u5c04\u7684\u4f20\u611f\u5668\uff08\u4f8b\u5982\u6fc0\u5149\u96f7\u8fbe\uff09\u68c0\u7d22\u66f4\u7cbe\u786e\u7684\u6570\u636e\u3002 \u7269\u7406\u78b0\u649e\u5668 \u2014 \u8fd9\u79cd\u65b9\u6cd5\u9075\u5faa\u8d21\u732e\u8005 Yan Kaganovsky / yankagan \u521b\u5efa\u7684 \u6559\u7a0b \uff0c\u65e0\u9700\u624b\u52a8\u5efa\u6a21\u5373\u53ef\u521b\u5efa\u7f51\u683c\u3002\u7136\u540e\uff0c\u8be5\u7f51\u683c\u7528\u4f5c\u8f66\u8f86\u7684\u4e3b\u78b0\u649e\u5668\uff0c\u7528\u4e8e\u7269\u7406\u548c\u4f20\u611f\u5668\u68c0\u6d4b\uff08\u9664\u975e\u6dfb\u52a0\u8f85\u52a9\u78b0\u649e\u5668\uff09\u3002 \u5149\u7ebf\u6295\u5c04\u78b0\u649e\u5668 1-\u5bfc\u51fa\u8f66\u8f86 FBX 2-\u751f\u6210\u4f4e\u5bc6\u5ea6\u7f51\u683c 3-\u5c06\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce 4-\u6dfb\u52a0\u7f51\u683c\u4f5c\u4e3a\u78b0\u649e\u4f53 \u7269\u7406\u78b0\u649e\u4f53 0-\u5148\u51b3\u6761\u4ef6 1-\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b9a\u4e49\u8f6e\u5b50\u7684\u81ea\u5b9a\u4e49\u78b0\u649e 2-\u5c06\u8f66\u8f86\u5bfc\u51fa\u4e3a FBX 3 \u5230 4-\u5bfc\u5165\u5230 Blender \u5e76\u521b\u5efa\u81ea\u5b9a\u4e49\u8fb9\u754c 5-\u4ece Blender \u5bfc\u51fa\u5230 FBX 6 \u5230 8-\u5bfc\u5165\u78b0\u649e\u4f53\u5e76\u5b9a\u4e49\u7269\u7406 \u5149\u7ebf\u6295\u5c04\u78b0\u649e\u4f53 1-\u5bfc\u51fa\u8f66\u8f86 FBX \u9996\u5148\u9700\u8981\u4ee5\u8f66\u8f86\u7684\u539f\u59cb\u7f51\u683c\u4f5c\u4e3a\u53c2\u8003\u3002\u51fa\u4e8e\u5b66\u4e60\u76ee\u7684\uff0c\u672c\u6559\u7a0b\u5bfc\u51fa CARLA \u8f66\u8f86\u7684\u7f51\u683c\u3002 1.1 \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6253\u5f00 CARLA \u5e76\u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> \u3002 1.2 \u5728 SM_<model_of_vehicle> \u70b9\u51fb right-click \u5c06\u8f66\u8f86\u7f51\u683c\u5bfc\u51fa\u4e3a FBX\u3002 2-\u751f\u6210\u4f4e\u5bc6\u5ea6\u7f51\u683c 2.1 \u6253\u5f00\u4e09\u7ef4\u5efa\u6a21\u8f6f\u4ef6\uff0c\u5e76\u4f7f\u7528\u539f\u59cb\u7f51\u683c\u4f5c\u4e3a\u53c2\u8003\uff0c\u5efa\u6a21\u4e00\u4e2a\u4e0e\u539f\u59cb\u7f51\u683c\u4fdd\u6301\u53ef\u9760\u7684\u4f4e\u5bc6\u5ea6\u7f51\u683c\u3002 2.2 \u5c06\u65b0\u7f51\u683c\u4fdd\u5b58\u4e3aFBX\u3002\u5c06\u7f51\u683c\u547d\u540d\u4e3a sm_sc_<model_of_vehicle>.fbx \u3002\u4f8b\u5982 sm_sc_audiTT.fbx . \u7b14\u8bb0 \u81f3\u4e8e\u8f66\u8f6e\u548c\u9644\u52a0\u5143\u4ef6\uff08\u4f8b\u5982\u8f66\u9876\u3001\u6321\u6ce5\u677f\u7b49\uff09\uff0c\u65b0\u7f51\u683c\u5e94\u8be5\u975e\u5e38\u51c6\u786e\u5730\u9075\u5faa\u51e0\u4f55\u5f62\u72b6\u3002\u653e\u7f6e\u7b80\u5355\u7684\u7acb\u65b9\u4f53\u662f\u4e0d\u884c\u7684\u3002 3-\u5c06\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce 3.1 \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6253\u5f00 CARLA \u5e76\u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> . 3.2 \u70b9\u51fb right-click \u5bfc\u5165\u65b0\u7f51\u683c SM_sc_<model_of_vehicle>.fbx \u3002 4-\u6dfb\u52a0\u7f51\u683c\u4f5c\u4e3a\u78b0\u649e\u4f53 4.1 \u8fdb\u5165 Content/Carla/Blueprints/Vehicles/<model_of_vehicle> \u5e76\u6253\u5f00\u540d\u4e3a BP_<model_of_vehicle> \u7684\u8f66\u8f86\u7684\u84dd\u56fe\u3002 4.2 \u9009\u62e9 CustomCollision \u5143\u7d20\u5e76\u5728 Static mesh \u5c5e\u6027\u4e2d\u6dfb\u52a0 SM_sc_<model_of_vehicle>.fbx \u3002 4.3 \u70b9\u51fb\u4e0a\u65b9\u5de5\u5177\u680f\u4e2d\u7684 Compile \u5e76\u4fdd\u5b58\u66f4\u6539\u3002 \u7b14\u8bb0 \u5bf9\u4e8e\u6469\u6258\u8f66\u548c\u81ea\u884c\u8f66\u7b49\u8f66\u8f86\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u7ec4\u4ef6 CustomCollision \u66f4\u6539\u8f66\u8f86\u672c\u8eab\u7684\u78b0\u649e\u5668\u7f51\u683c\u3002 \u7269\u7406\u78b0\u649e\u4f53 \u91cd\u8981 \u672c\u6559\u7a0b\u57fa\u4e8e yankagan \u7684 \u8d21\u732e \uff01\u8d21\u732e\u8005\u8fd8\u5e0c\u671b\u611f\u8c22 Francisco E \u5173\u4e8e \u5982\u4f55\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u78b0\u649e \u7684\u6559\u7a0b\u3002 \u8be5\u89c6\u9891 \u5c55\u793a\u4e86\u9075\u5faa\u672c\u6559\u7a0b\u540e\u6240\u53d6\u5f97\u7684\u7ed3\u679c\u3002 0-\u5148\u51b3\u6761\u4ef6 \u5728 Linux \u6216 Windows \u4e0a \u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u3002 \u53ef\u4ece \u5b98\u65b9\u7f51\u7ad9 \u514d\u8d39\u83b7\u53d6 Blender 2.80 \u6216\u66f4\u65b0\u7248\u672c \uff08\u5f00\u6e90 3D \u5efa\u6a21\u8f6f\u4ef6\uff09\u3002 \u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u4f7f\u7528 Blender \u7684 VHACD \u63d2\u4ef6 \u3002\u8be5\u63d2\u4ef6\u4f7f\u7528\u51f8\u5305\u96c6\u5408\u81ea\u52a8\u521b\u5efa\u9009\u5b9a\u5bf9\u8c61\u7684\u8fd1\u4f3c\u503c\u3002 \u9605\u8bfb\u66f4\u591a \u3002 \u7b14\u8bb0 \u8fd9\u4e2a \u7cfb\u5217 \u548c Udemy \u8bfe\u7a0b \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684 Blender \u5165\u95e8\u6559\u7a0b\u3002 1-\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b9a\u4e49\u8f6e\u5b50\u7684\u81ea\u5b9a\u4e49\u78b0\u649e \u7b2c 1 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u6dfb\u52a0\u8f66\u8f6e\u7684\u78b0\u649e\u8fb9\u754c\u3002\u4ee5\u4e0b\u89c6\u9891\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd9\u4e9b\u6b65\u9aa4\u3002 2-\u5c06\u8f66\u8f86\u5bfc\u51fa\u4e3a FBX \u7b2c 2 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u5bfc\u51fa\u5230 FBX \u6587\u4ef6\u3002 2.1 \u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> \u3002 2.2 \u5728 SM_<model_of_vehicle> \u70b9\u51fb right-click \uff0c\u5c06\u8f66\u8f86\u7f51\u683c\u5bfc\u51fa\u4e3a FBX\u3002 3 \u5230 4-\u5bfc\u5165\u5230 Blender \u5e76\u521b\u5efa\u81ea\u5b9a\u4e49\u8fb9\u754c \u7b2c 3 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u5c06 FBX \u6587\u4ef6\u5bfc\u5165 Blender\u3002 \u7b2c 4 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u6dfb\u52a0\u51f8\u5305\u7f51\u683c\u4ee5\u5f62\u6210\u65b0\u7684\u78b0\u649e\u8fb9\u754c\uff08\u865a\u5e7b\u5f15\u64ce\u5bf9\u8ba1\u7b97\u6548\u7387\u7684\u8981\u6c42\uff09\u3002\u8fd9\u662f\u6700\u96be\u7684\u4e00\u6b65\u3002\u5982\u679c\u9009\u62e9\u6574\u8f86\u8f66\uff0cVHACD \u521b\u5efa\u7684\u78b0\u649e\u8fb9\u754c\u5c06\u4e0d\u7cbe\u786e\u4e14\u6df7\u4e71\u3002\u5b83\u5c06\u5305\u542b\u950b\u5229\u7684\u8fb9\u7f18\uff0c\u8fd9\u4f1a\u6270\u4e71\u9053\u8def\u4e0a\u7684\u884c\u9a76\u3002\u8f6e\u5b50\u5468\u56f4\u8981\u6709\u5149\u6ed1\u7684\u8fb9\u754c\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u5728\u8f66\u8eab\u4e0a\u4f7f\u7528\u51f8\u5206\u89e3\uff0c\u540e\u89c6\u955c\u770b\u8d77\u6765\u4ecd\u7136\u4e0d\u6b63\u786e\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u6765\u8bf4\uff0c\u8f66\u8f86\u7684\u7ec6\u8282\u975e\u5e38\u91cd\u8981\u3002\u7531\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u88ab\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002 4.1 \u4f7f\u7528 VHACD \u5de5\u5177\u5207\u51fa\u8f66\u8f6e\u7684\u5e95\u90e8\u3001\u4fa7\u89c6\u955c\u548c\u8f66\u8eab\u7684\u9876\u90e8\uff0c\u4ee5\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fb9\u754c\u3002\u4f7f\u7528 VHACD \u5de5\u5177\u526a\u6389\u6c7d\u8f66\u7684\u4e0b\u534a\u90e8\u5206\u4ee5\u521b\u5efa\u7b2c\u4e8c\u4e2a\u8fb9\u754c\uff08\u6c7d\u8f66\u7684\u9876\u90e8\uff09\u3002 4.2 \u4f7f\u7528 VHACD \u5de5\u5177\u4e3a\u540e\u89c6\u955c\u521b\u5efa\u5355\u72ec\u7684\u8fb9\u754c\u3002 \u8b66\u544a \u547d\u540d\u5bf9\u8c61\u65f6\u8981\u975e\u5e38\u5c0f\u5fc3\u3002\u6bcf\u4e2a\u8fb9\u754c\u5e94\u4ee5 UCX_ \u5f00\u5934\uff0c\u5176\u4f59\u540d\u79f0\u5fc5\u987b\u4e0e\u539f\u59cb\u7f51\u683c \u5b8c\u5168 \u76f8\u540c \u3002 5-\u4ece Blender \u5bfc\u51fa\u5230 FBX \u7b2c 5 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u5c06\u81ea\u5b9a\u4e49\u78b0\u649e\u8fb9\u754c\u5bfc\u51fa\u5230 FBX \u6587\u4ef6\u4e2d\u3002 5.1 \u4ec5\u9009\u62e9\u539f\u59cb\u8f66\u8f86\u548c\u6240\u6709\u65b0\u6dfb\u52a0\u7684\u7269\u4f53\u8fdb\u884c\u78b0\u649e\u3002 5.2 \u5728\u5bfc\u51fa\u83dc\u5355\u4e2d\uff0c\u9009\u4e2d selected objects \u5e76\u4ec5\u9009\u62e9\u201cMesh\u201d\u3002 6 \u5230 8-\u5bfc\u5165\u78b0\u649e\u4f53\u5e76\u5b9a\u4e49\u7269\u7406 \u7b2c 6 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u65b0 FBX \u4f5c\u4e3a\u865a\u5e7b\u8d44\u6e90\u6587\u4ef6\uff08\u9759\u6001\u7f51\u683c\u7269\u4f53\uff09\u5bfc\u5165 CARLA\u3002 \u7b2c 7 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u81ea\u5b9a\u4e49\u78b0\u649e\u5668\u5bfc\u5165\u5230\u7279\u5b9a\u8f66\u8f86\u7684\u7269\u7406\u8d44\u6e90\u4e2d\uff0c\u4ee5\u4fbf\u5c06\u5176\u7528\u4e8e\u8ba1\u7b97\u3002 \u7b2c 8 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u521b\u5efa\u8fde\u63a5\u4e0d\u540c\u5173\u8282\u7684\u7ea6\u675f\u5e76\u5b9a\u4e49\u6240\u6709\u90e8\u4ef6\u7684\u7269\u7406\u7279\u6027\u3002 \u8fd9\u662f\u5173\u4e8e\u5982\u4f55\u66f4\u6539 CARLA \u4e2d\u8f66\u8f86\u7684\u9ed8\u8ba4\u78b0\u649e\u5668\u7684\u603b\u7ed3\u3002 \u6253\u5f00 CARLA \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u751f\u6210\u8be6\u7ec6\u78b0\u649e"},{"location":"tuto_D_generate_colliders/#_1","text":"\u672c\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4e3a\u8f66\u8f86\u521b\u5efa\u66f4\u51c6\u786e\u7684\u78b0\u649e\u8fb9\u754c\uff08\u76f8\u5bf9\u4e8e\u5bf9\u8c61\u7684\u539f\u59cb\u5f62\u72b6\uff09\u3002\u5b83\u4eec\u53ef\u4ee5\u7528\u4f5c\u7269\u7406\u78b0\u649e\u5668\uff0c\u4e0e\u78b0\u649e\u68c0\u6d4b\u517c\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u57fa\u4e8e\u5149\u7ebf\u6295\u5c04\u7684\u4f20\u611f\u5668\uff08\u4f8b\u5982\u6fc0\u5149\u96f7\u8fbe\uff09\u7684\u8f85\u52a9\u78b0\u649e\u5668\uff0c\u4ee5\u68c0\u7d22\u66f4\u51c6\u786e\u7684\u6570\u636e\u3002\u65b0\u7684\u78b0\u649e\u673a\u53ef\u4ee5\u96c6\u6210\u5230 CARLA \u4e2d\uff0c\u4ee5\u4fbf\u6240\u6709\u793e\u533a\u90fd\u80fd\u4ece\u4e2d\u53d7\u76ca\u3002\u5728 \u6b64\u5904 \u4e86\u89e3\u6709\u5173\u5982\u4f55\u4e3a\u5185\u5bb9\u5b58\u50a8\u5e93\u505a\u51fa\u8d21\u732e\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u78b0\u649e\u5668\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u5b8c\u5168\u7b49\u6548\u3002 \u5149\u7ebf\u6295\u5c04\u78b0\u649e\u5668 \u2014 \u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u4e00\u4e9b\u57fa\u672c\u7684\u4e09\u7ef4\u5efa\u6a21\u6280\u80fd\u3002\u8f66\u8f86\u4e2d\u6dfb\u52a0\u4e86\u8f85\u52a9\u78b0\u649e\u5668\uff0c\u4ee5\u4fbf\u57fa\u4e8e\u5149\u7ebf\u6295\u5c04\u7684\u4f20\u611f\u5668\uff08\u4f8b\u5982\u6fc0\u5149\u96f7\u8fbe\uff09\u68c0\u7d22\u66f4\u7cbe\u786e\u7684\u6570\u636e\u3002 \u7269\u7406\u78b0\u649e\u5668 \u2014 \u8fd9\u79cd\u65b9\u6cd5\u9075\u5faa\u8d21\u732e\u8005 Yan Kaganovsky / yankagan \u521b\u5efa\u7684 \u6559\u7a0b \uff0c\u65e0\u9700\u624b\u52a8\u5efa\u6a21\u5373\u53ef\u521b\u5efa\u7f51\u683c\u3002\u7136\u540e\uff0c\u8be5\u7f51\u683c\u7528\u4f5c\u8f66\u8f86\u7684\u4e3b\u78b0\u649e\u5668\uff0c\u7528\u4e8e\u7269\u7406\u548c\u4f20\u611f\u5668\u68c0\u6d4b\uff08\u9664\u975e\u6dfb\u52a0\u8f85\u52a9\u78b0\u649e\u5668\uff09\u3002 \u5149\u7ebf\u6295\u5c04\u78b0\u649e\u5668 1-\u5bfc\u51fa\u8f66\u8f86 FBX 2-\u751f\u6210\u4f4e\u5bc6\u5ea6\u7f51\u683c 3-\u5c06\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce 4-\u6dfb\u52a0\u7f51\u683c\u4f5c\u4e3a\u78b0\u649e\u4f53 \u7269\u7406\u78b0\u649e\u4f53 0-\u5148\u51b3\u6761\u4ef6 1-\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b9a\u4e49\u8f6e\u5b50\u7684\u81ea\u5b9a\u4e49\u78b0\u649e 2-\u5c06\u8f66\u8f86\u5bfc\u51fa\u4e3a FBX 3 \u5230 4-\u5bfc\u5165\u5230 Blender \u5e76\u521b\u5efa\u81ea\u5b9a\u4e49\u8fb9\u754c 5-\u4ece Blender \u5bfc\u51fa\u5230 FBX 6 \u5230 8-\u5bfc\u5165\u78b0\u649e\u4f53\u5e76\u5b9a\u4e49\u7269\u7406","title":"\u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e\u4f53"},{"location":"tuto_D_generate_colliders/#_2","text":"","title":"\u5149\u7ebf\u6295\u5c04\u78b0\u649e\u4f53"},{"location":"tuto_D_generate_colliders/#1-fbx","text":"\u9996\u5148\u9700\u8981\u4ee5\u8f66\u8f86\u7684\u539f\u59cb\u7f51\u683c\u4f5c\u4e3a\u53c2\u8003\u3002\u51fa\u4e8e\u5b66\u4e60\u76ee\u7684\uff0c\u672c\u6559\u7a0b\u5bfc\u51fa CARLA \u8f66\u8f86\u7684\u7f51\u683c\u3002 1.1 \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6253\u5f00 CARLA \u5e76\u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> \u3002 1.2 \u5728 SM_<model_of_vehicle> \u70b9\u51fb right-click \u5c06\u8f66\u8f86\u7f51\u683c\u5bfc\u51fa\u4e3a FBX\u3002","title":"1-\u5bfc\u51fa\u8f66\u8f86 FBX"},{"location":"tuto_D_generate_colliders/#2-","text":"2.1 \u6253\u5f00\u4e09\u7ef4\u5efa\u6a21\u8f6f\u4ef6\uff0c\u5e76\u4f7f\u7528\u539f\u59cb\u7f51\u683c\u4f5c\u4e3a\u53c2\u8003\uff0c\u5efa\u6a21\u4e00\u4e2a\u4e0e\u539f\u59cb\u7f51\u683c\u4fdd\u6301\u53ef\u9760\u7684\u4f4e\u5bc6\u5ea6\u7f51\u683c\u3002 2.2 \u5c06\u65b0\u7f51\u683c\u4fdd\u5b58\u4e3aFBX\u3002\u5c06\u7f51\u683c\u547d\u540d\u4e3a sm_sc_<model_of_vehicle>.fbx \u3002\u4f8b\u5982 sm_sc_audiTT.fbx . \u7b14\u8bb0 \u81f3\u4e8e\u8f66\u8f6e\u548c\u9644\u52a0\u5143\u4ef6\uff08\u4f8b\u5982\u8f66\u9876\u3001\u6321\u6ce5\u677f\u7b49\uff09\uff0c\u65b0\u7f51\u683c\u5e94\u8be5\u975e\u5e38\u51c6\u786e\u5730\u9075\u5faa\u51e0\u4f55\u5f62\u72b6\u3002\u653e\u7f6e\u7b80\u5355\u7684\u7acb\u65b9\u4f53\u662f\u4e0d\u884c\u7684\u3002","title":"2-\u751f\u6210\u4f4e\u5bc6\u5ea6\u7f51\u683c"},{"location":"tuto_D_generate_colliders/#3-","text":"3.1 \u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6253\u5f00 CARLA \u5e76\u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> . 3.2 \u70b9\u51fb right-click \u5bfc\u5165\u65b0\u7f51\u683c SM_sc_<model_of_vehicle>.fbx \u3002","title":"3-\u5c06\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce"},{"location":"tuto_D_generate_colliders/#4-","text":"4.1 \u8fdb\u5165 Content/Carla/Blueprints/Vehicles/<model_of_vehicle> \u5e76\u6253\u5f00\u540d\u4e3a BP_<model_of_vehicle> \u7684\u8f66\u8f86\u7684\u84dd\u56fe\u3002 4.2 \u9009\u62e9 CustomCollision \u5143\u7d20\u5e76\u5728 Static mesh \u5c5e\u6027\u4e2d\u6dfb\u52a0 SM_sc_<model_of_vehicle>.fbx \u3002 4.3 \u70b9\u51fb\u4e0a\u65b9\u5de5\u5177\u680f\u4e2d\u7684 Compile \u5e76\u4fdd\u5b58\u66f4\u6539\u3002 \u7b14\u8bb0 \u5bf9\u4e8e\u6469\u6258\u8f66\u548c\u81ea\u884c\u8f66\u7b49\u8f66\u8f86\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u7ec4\u4ef6 CustomCollision \u66f4\u6539\u8f66\u8f86\u672c\u8eab\u7684\u78b0\u649e\u5668\u7f51\u683c\u3002","title":"4-\u6dfb\u52a0\u7f51\u683c\u4f5c\u4e3a\u78b0\u649e\u4f53"},{"location":"tuto_D_generate_colliders/#_3","text":"\u91cd\u8981 \u672c\u6559\u7a0b\u57fa\u4e8e yankagan \u7684 \u8d21\u732e \uff01\u8d21\u732e\u8005\u8fd8\u5e0c\u671b\u611f\u8c22 Francisco E \u5173\u4e8e \u5982\u4f55\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u78b0\u649e \u7684\u6559\u7a0b\u3002 \u8be5\u89c6\u9891 \u5c55\u793a\u4e86\u9075\u5faa\u672c\u6559\u7a0b\u540e\u6240\u53d6\u5f97\u7684\u7ed3\u679c\u3002","title":"\u7269\u7406\u78b0\u649e\u4f53"},{"location":"tuto_D_generate_colliders/#0-","text":"\u5728 Linux \u6216 Windows \u4e0a \u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u3002 \u53ef\u4ece \u5b98\u65b9\u7f51\u7ad9 \u514d\u8d39\u83b7\u53d6 Blender 2.80 \u6216\u66f4\u65b0\u7248\u672c \uff08\u5f00\u6e90 3D \u5efa\u6a21\u8f6f\u4ef6\uff09\u3002 \u6309\u7167 \u6b64\u5904 \u7684\u8bf4\u660e\u4f7f\u7528 Blender \u7684 VHACD \u63d2\u4ef6 \u3002\u8be5\u63d2\u4ef6\u4f7f\u7528\u51f8\u5305\u96c6\u5408\u81ea\u52a8\u521b\u5efa\u9009\u5b9a\u5bf9\u8c61\u7684\u8fd1\u4f3c\u503c\u3002 \u9605\u8bfb\u66f4\u591a \u3002 \u7b14\u8bb0 \u8fd9\u4e2a \u7cfb\u5217 \u548c Udemy \u8bfe\u7a0b \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684 Blender \u5165\u95e8\u6559\u7a0b\u3002","title":"0-\u5148\u51b3\u6761\u4ef6"},{"location":"tuto_D_generate_colliders/#1-","text":"\u7b2c 1 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u6dfb\u52a0\u8f66\u8f6e\u7684\u78b0\u649e\u8fb9\u754c\u3002\u4ee5\u4e0b\u89c6\u9891\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd9\u4e9b\u6b65\u9aa4\u3002","title":"1-\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b9a\u4e49\u8f6e\u5b50\u7684\u81ea\u5b9a\u4e49\u78b0\u649e"},{"location":"tuto_D_generate_colliders/#2-fbx","text":"\u7b2c 2 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u5bfc\u51fa\u5230 FBX \u6587\u4ef6\u3002 2.1 \u8f6c\u5230 Content/Carla/Static/Vehicles/4Wheeled/<model_of_vehicle> \u3002 2.2 \u5728 SM_<model_of_vehicle> \u70b9\u51fb right-click \uff0c\u5c06\u8f66\u8f86\u7f51\u683c\u5bfc\u51fa\u4e3a FBX\u3002","title":"2-\u5c06\u8f66\u8f86\u5bfc\u51fa\u4e3a FBX"},{"location":"tuto_D_generate_colliders/#3-4-blender","text":"\u7b2c 3 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u5c06 FBX \u6587\u4ef6\u5bfc\u5165 Blender\u3002 \u7b2c 4 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u6dfb\u52a0\u51f8\u5305\u7f51\u683c\u4ee5\u5f62\u6210\u65b0\u7684\u78b0\u649e\u8fb9\u754c\uff08\u865a\u5e7b\u5f15\u64ce\u5bf9\u8ba1\u7b97\u6548\u7387\u7684\u8981\u6c42\uff09\u3002\u8fd9\u662f\u6700\u96be\u7684\u4e00\u6b65\u3002\u5982\u679c\u9009\u62e9\u6574\u8f86\u8f66\uff0cVHACD \u521b\u5efa\u7684\u78b0\u649e\u8fb9\u754c\u5c06\u4e0d\u7cbe\u786e\u4e14\u6df7\u4e71\u3002\u5b83\u5c06\u5305\u542b\u950b\u5229\u7684\u8fb9\u7f18\uff0c\u8fd9\u4f1a\u6270\u4e71\u9053\u8def\u4e0a\u7684\u884c\u9a76\u3002\u8f6e\u5b50\u5468\u56f4\u8981\u6709\u5149\u6ed1\u7684\u8fb9\u754c\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u5728\u8f66\u8eab\u4e0a\u4f7f\u7528\u51f8\u5206\u89e3\uff0c\u540e\u89c6\u955c\u770b\u8d77\u6765\u4ecd\u7136\u4e0d\u6b63\u786e\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u6765\u8bf4\uff0c\u8f66\u8f86\u7684\u7ec6\u8282\u975e\u5e38\u91cd\u8981\u3002\u7531\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u8fd9\u4e9b\u6b65\u9aa4\u88ab\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002 4.1 \u4f7f\u7528 VHACD \u5de5\u5177\u5207\u51fa\u8f66\u8f6e\u7684\u5e95\u90e8\u3001\u4fa7\u89c6\u955c\u548c\u8f66\u8eab\u7684\u9876\u90e8\uff0c\u4ee5\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fb9\u754c\u3002\u4f7f\u7528 VHACD \u5de5\u5177\u526a\u6389\u6c7d\u8f66\u7684\u4e0b\u534a\u90e8\u5206\u4ee5\u521b\u5efa\u7b2c\u4e8c\u4e2a\u8fb9\u754c\uff08\u6c7d\u8f66\u7684\u9876\u90e8\uff09\u3002 4.2 \u4f7f\u7528 VHACD \u5de5\u5177\u4e3a\u540e\u89c6\u955c\u521b\u5efa\u5355\u72ec\u7684\u8fb9\u754c\u3002 \u8b66\u544a \u547d\u540d\u5bf9\u8c61\u65f6\u8981\u975e\u5e38\u5c0f\u5fc3\u3002\u6bcf\u4e2a\u8fb9\u754c\u5e94\u4ee5 UCX_ \u5f00\u5934\uff0c\u5176\u4f59\u540d\u79f0\u5fc5\u987b\u4e0e\u539f\u59cb\u7f51\u683c \u5b8c\u5168 \u76f8\u540c \u3002","title":"3 \u5230 4-\u5bfc\u5165\u5230 Blender \u5e76\u521b\u5efa\u81ea\u5b9a\u4e49\u8fb9\u754c"},{"location":"tuto_D_generate_colliders/#5-blender-fbx","text":"\u7b2c 5 \u6b65. (\u5728 Blender \u4e2d) \u2014 \u5c06\u81ea\u5b9a\u4e49\u78b0\u649e\u8fb9\u754c\u5bfc\u51fa\u5230 FBX \u6587\u4ef6\u4e2d\u3002 5.1 \u4ec5\u9009\u62e9\u539f\u59cb\u8f66\u8f86\u548c\u6240\u6709\u65b0\u6dfb\u52a0\u7684\u7269\u4f53\u8fdb\u884c\u78b0\u649e\u3002 5.2 \u5728\u5bfc\u51fa\u83dc\u5355\u4e2d\uff0c\u9009\u4e2d selected objects \u5e76\u4ec5\u9009\u62e9\u201cMesh\u201d\u3002","title":"5-\u4ece Blender \u5bfc\u51fa\u5230 FBX"},{"location":"tuto_D_generate_colliders/#6-8-","text":"\u7b2c 6 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u65b0 FBX \u4f5c\u4e3a\u865a\u5e7b\u8d44\u6e90\u6587\u4ef6\uff08\u9759\u6001\u7f51\u683c\u7269\u4f53\uff09\u5bfc\u5165 CARLA\u3002 \u7b2c 7 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u5c06\u81ea\u5b9a\u4e49\u78b0\u649e\u5668\u5bfc\u5165\u5230\u7279\u5b9a\u8f66\u8f86\u7684\u7269\u7406\u8d44\u6e90\u4e2d\uff0c\u4ee5\u4fbf\u5c06\u5176\u7528\u4e8e\u8ba1\u7b97\u3002 \u7b2c 8 \u6b65. (\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d) \u2014 \u521b\u5efa\u8fde\u63a5\u4e0d\u540c\u5173\u8282\u7684\u7ea6\u675f\u5e76\u5b9a\u4e49\u6240\u6709\u90e8\u4ef6\u7684\u7269\u7406\u7279\u6027\u3002 \u8fd9\u662f\u5173\u4e8e\u5982\u4f55\u66f4\u6539 CARLA \u4e2d\u8f66\u8f86\u7684\u9ed8\u8ba4\u78b0\u649e\u5668\u7684\u603b\u7ed3\u3002 \u6253\u5f00 CARLA \u5e76\u95f2\u901b\u4e00\u4f1a\u513f\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"6 \u5230 8-\u5bfc\u5165\u78b0\u649e\u4f53\u5e76\u5b9a\u4e49\u7269\u7406"},{"location":"tuto_D_make_release/","text":"\u5982\u4f55\u53d1\u5e03 \u672c\u6587\u6863\u9002\u7528\u4e8e\u60f3\u8981\u53d1\u5e03\u65b0\u7248\u672c\u7684\u5f00\u53d1\u4eba\u5458\u3002 \u786e\u4fdd\u5185\u5bb9\u662f\u6700\u65b0\u7684\u3002 \u8bf7\u53c2\u9605 \u5347\u7ea7\u5185\u5bb9 \u3002 \u5fc5\u8981\u65f6\u589e\u52a0 CARLA \u7248\u672c\u3002 \u589e\u52a0\u4ee5\u4e0b\u6587\u4ef6\u4e2d\u7684\u7248\u672c\uff1a DefaultGame.ini , Carla.uplugin , setup.py , ContentVersions.txt \u3002Grep \u67e5\u770b\u5f53\u524d\u7248\u672c\uff0c\u4ee5\u786e\u4fdd\u60a8\u4e0d\u4f1a\u9519\u8fc7\u4efb\u4f55\u53c2\u8003\u3002 \u6e05\u9664 CHANGELOG.md\u3002 \u786e\u4fdd\u53d8\u66f4\u65e5\u5fd7\u662f\u6700\u65b0\u7684\uff0c\u5fc5\u8981\u65f6\u91cd\u5199\u5e76\u91cd\u65b0\u7ec4\u7ec7\uff1b\u8003\u8651\u54ea\u4e9b\u9879\u76ee\u5bf9\u7528\u6237\u6765\u8bf4\u66f4\u91cd\u8981\u3002 \u63d0\u4ea4\u66f4\u6539\u5e76\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u63d0\u4ea4\u6240\u6709\u66f4\u6539\u540e\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u6807\u7b7e git tag -a X.X.X \uff08\u7528\u6700\u65b0\u7248\u672c\u66ff\u6362 X.X.X \uff09\u3002 \u6dfb\u52a0\u6b64\u7248\u672c\u7684\u53d8\u66f4\u65e5\u5fd7\u4f5c\u4e3a\u6807\u7b7e\u6d88\u606f\u3002 \u6807\u7b7e\u5185\u5bb9\u4ed3\u5e93\u3002 \u5728\u786e\u5207\u7684\u63d0\u4ea4\u5904\u5c06\u7c7b\u4f3c\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u5185\u5bb9\u5b58\u50a8\u5e93\uff0c\u5982 ContentVersions.txt \u4e2d\u3002 \u63a8\u9001\u66f4\u6539\u3002 \u5c06\u6240\u6709\u66f4\u6539\u63a8\u9001\u5230\u4e24\u4e2a\u5b58\u50a8\u5e93\uff0c\u4ee5\u63a8\u9001\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528 git push --tags \u7684\u6807\u7b7e\u3002\u5982\u6709\u5fc5\u8981\uff0c\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002 \u7f16\u8f91 GitHub \u7248\u672c\u3002 \u8f6c\u5230 GitHub \u53d1\u5e03 \u5e76\u5728\u65b0\u521b\u5efa\u7684\u6807\u7b7e\u4e4b\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\u3002\u7b49\u5230 Jenkins \u5b8c\u6210\u53d1\u5e03\u6700\u65b0\u7248\u672c\u7684\u6784\u5efa\uff0c\u5e76\u5c06\u4e0b\u8f7d\u94fe\u63a5\u6dfb\u52a0\u5230\u65b0\u521b\u5efa\u7684\u7248\u672c\u3002","title":"\u53d1\u5e03\u7248\u672c"},{"location":"tuto_D_make_release/#_1","text":"\u672c\u6587\u6863\u9002\u7528\u4e8e\u60f3\u8981\u53d1\u5e03\u65b0\u7248\u672c\u7684\u5f00\u53d1\u4eba\u5458\u3002 \u786e\u4fdd\u5185\u5bb9\u662f\u6700\u65b0\u7684\u3002 \u8bf7\u53c2\u9605 \u5347\u7ea7\u5185\u5bb9 \u3002 \u5fc5\u8981\u65f6\u589e\u52a0 CARLA \u7248\u672c\u3002 \u589e\u52a0\u4ee5\u4e0b\u6587\u4ef6\u4e2d\u7684\u7248\u672c\uff1a DefaultGame.ini , Carla.uplugin , setup.py , ContentVersions.txt \u3002Grep \u67e5\u770b\u5f53\u524d\u7248\u672c\uff0c\u4ee5\u786e\u4fdd\u60a8\u4e0d\u4f1a\u9519\u8fc7\u4efb\u4f55\u53c2\u8003\u3002 \u6e05\u9664 CHANGELOG.md\u3002 \u786e\u4fdd\u53d8\u66f4\u65e5\u5fd7\u662f\u6700\u65b0\u7684\uff0c\u5fc5\u8981\u65f6\u91cd\u5199\u5e76\u91cd\u65b0\u7ec4\u7ec7\uff1b\u8003\u8651\u54ea\u4e9b\u9879\u76ee\u5bf9\u7528\u6237\u6765\u8bf4\u66f4\u91cd\u8981\u3002 \u63d0\u4ea4\u66f4\u6539\u5e76\u6dfb\u52a0\u65b0\u6807\u7b7e\u3002 \u63d0\u4ea4\u6240\u6709\u66f4\u6539\u540e\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u6807\u7b7e git tag -a X.X.X \uff08\u7528\u6700\u65b0\u7248\u672c\u66ff\u6362 X.X.X \uff09\u3002 \u6dfb\u52a0\u6b64\u7248\u672c\u7684\u53d8\u66f4\u65e5\u5fd7\u4f5c\u4e3a\u6807\u7b7e\u6d88\u606f\u3002 \u6807\u7b7e\u5185\u5bb9\u4ed3\u5e93\u3002 \u5728\u786e\u5207\u7684\u63d0\u4ea4\u5904\u5c06\u7c7b\u4f3c\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u5185\u5bb9\u5b58\u50a8\u5e93\uff0c\u5982 ContentVersions.txt \u4e2d\u3002 \u63a8\u9001\u66f4\u6539\u3002 \u5c06\u6240\u6709\u66f4\u6539\u63a8\u9001\u5230\u4e24\u4e2a\u5b58\u50a8\u5e93\uff0c\u4ee5\u63a8\u9001\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528 git push --tags \u7684\u6807\u7b7e\u3002\u5982\u6709\u5fc5\u8981\uff0c\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002 \u7f16\u8f91 GitHub \u7248\u672c\u3002 \u8f6c\u5230 GitHub \u53d1\u5e03 \u5e76\u5728\u65b0\u521b\u5efa\u7684\u6807\u7b7e\u4e4b\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\u3002\u7b49\u5230 Jenkins \u5b8c\u6210\u53d1\u5e03\u6700\u65b0\u7248\u672c\u7684\u6784\u5efa\uff0c\u5e76\u5c06\u4e0b\u8f7d\u94fe\u63a5\u6dfb\u52a0\u5230\u65b0\u521b\u5efa\u7684\u7248\u672c\u3002","title":"\u5982\u4f55\u53d1\u5e03"},{"location":"tuto_G_add_friction_triggers/","text":"\u5982\u4f55\u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668 \u6469\u64e6\u89e6\u53d1\u5668( Friction Triggers ) \u662f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6dfb\u52a0\u7684\u6846\u89e6\u53d1\u5668\uff0c\u8ba9\u7528\u6237\u5728\u5904\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u89e6\u53d1\u5668\u5185\u65f6\u5b9a\u4e49\u8f66\u8f86\u8f66\u8f6e\u7684\u4e0d\u540c\u6469\u64e6\u529b\u3002\u4f8b\u5982\uff0c\u8fd9\u5bf9\u4e8e\u52a8\u6001\u5730\u5728\u5730\u56fe\u7684\u67d0\u4e9b\u533a\u57df\u4e2d\u5236\u4f5c\u5149\u6ed1\u7684\u8868\u9762\u53ef\u80fd\u5f88\u6709\u7528\u3002 \u4e3a\u4e86\u4f7f\u7528 PythonAPI \u751f\u6210\u6469\u64e6\u89e6\u53d1\u5668\uff0c\u7528\u6237\u5fc5\u987b\u9996\u5148\u83b7\u53d6 static.trigger.friction \u84dd\u56fe\u5b9a\u4e49\uff0c\u7136\u540e\u4e3a\u8be5\u84dd\u56fe\u5b9a\u4e49\u8bbe\u7f6e\u4ee5\u4e0b\u5fc5\u8981\u5c5e\u6027\uff1a friction : \u5f53\u8f66\u8f86\u4f4d\u4e8e\u89e6\u53d1\u76d2\u5185\u65f6\uff0c\u89e6\u53d1\u76d2\u7684\u6469\u64e6\u529b\u3002 extent_x : X \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 extent_y : Y \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 extent_z : Z \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 \u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u5b9a\u4e49\u4e00\u4e2a\u53d8\u6362\u6765\u6307\u5b9a\u6469\u64e6\u89e6\u53d1\u5668\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u5e76\u751f\u6210\u5b83\u3002 \u4f8b\u5b50 import carla def main(): # Connect to client client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) # Get World and Actors world = client.get_world() actors = world.get_actors() # Find Trigger Friction Blueprint friction_bp = world.get_blueprint_library().find('static.trigger.friction') extent = carla.Location(700.0, 700.0, 700.0) friction_bp.set_attribute('friction', str(0.0)) friction_bp.set_attribute('extent_x', str(extent.x)) friction_bp.set_attribute('extent_y', str(extent.y)) friction_bp.set_attribute('extent_z', str(extent.z)) # Spawn Trigger Friction transform = carla.Transform() transform.location = carla.Location(100.0, 0.0, 0.0) world.spawn_actor(friction_bp, transform) # Optional for visualizing trigger world.debug.draw_box(box=carla.BoundingBox(transform.location, extent * 1e-2), rotation=transform.rotation, life_time=100, thickness=0.5, color=carla.Color(r=255,g=0,b=0)) if __name__ == '__main__': main()","title":"\u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668"},{"location":"tuto_G_add_friction_triggers/#_1","text":"\u6469\u64e6\u89e6\u53d1\u5668( Friction Triggers ) \u662f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6dfb\u52a0\u7684\u6846\u89e6\u53d1\u5668\uff0c\u8ba9\u7528\u6237\u5728\u5904\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u89e6\u53d1\u5668\u5185\u65f6\u5b9a\u4e49\u8f66\u8f86\u8f66\u8f6e\u7684\u4e0d\u540c\u6469\u64e6\u529b\u3002\u4f8b\u5982\uff0c\u8fd9\u5bf9\u4e8e\u52a8\u6001\u5730\u5728\u5730\u56fe\u7684\u67d0\u4e9b\u533a\u57df\u4e2d\u5236\u4f5c\u5149\u6ed1\u7684\u8868\u9762\u53ef\u80fd\u5f88\u6709\u7528\u3002 \u4e3a\u4e86\u4f7f\u7528 PythonAPI \u751f\u6210\u6469\u64e6\u89e6\u53d1\u5668\uff0c\u7528\u6237\u5fc5\u987b\u9996\u5148\u83b7\u53d6 static.trigger.friction \u84dd\u56fe\u5b9a\u4e49\uff0c\u7136\u540e\u4e3a\u8be5\u84dd\u56fe\u5b9a\u4e49\u8bbe\u7f6e\u4ee5\u4e0b\u5fc5\u8981\u5c5e\u6027\uff1a friction : \u5f53\u8f66\u8f86\u4f4d\u4e8e\u89e6\u53d1\u76d2\u5185\u65f6\uff0c\u89e6\u53d1\u76d2\u7684\u6469\u64e6\u529b\u3002 extent_x : X \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 extent_y : Y \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 extent_z : Z \u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u8303\u56f4\uff08\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff09\u3002 \u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u5b9a\u4e49\u4e00\u4e2a\u53d8\u6362\u6765\u6307\u5b9a\u6469\u64e6\u89e6\u53d1\u5668\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u5e76\u751f\u6210\u5b83\u3002","title":"\u5982\u4f55\u6dfb\u52a0\u6469\u64e6\u89e6\u53d1\u5668"},{"location":"tuto_G_add_friction_triggers/#_2","text":"import carla def main(): # Connect to client client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) # Get World and Actors world = client.get_world() actors = world.get_actors() # Find Trigger Friction Blueprint friction_bp = world.get_blueprint_library().find('static.trigger.friction') extent = carla.Location(700.0, 700.0, 700.0) friction_bp.set_attribute('friction', str(0.0)) friction_bp.set_attribute('extent_x', str(extent.x)) friction_bp.set_attribute('extent_y', str(extent.y)) friction_bp.set_attribute('extent_z', str(extent.z)) # Spawn Trigger Friction transform = carla.Transform() transform.location = carla.Location(100.0, 0.0, 0.0) world.spawn_actor(friction_bp, transform) # Optional for visualizing trigger world.debug.draw_box(box=carla.BoundingBox(transform.location, extent * 1e-2), rotation=transform.rotation, life_time=100, thickness=0.5, color=carla.Color(r=255,g=0,b=0)) if __name__ == '__main__': main()","title":"\u4f8b\u5b50"},{"location":"tuto_G_bounding_boxes/","text":"\u8fb9\u754c\u6846 \u4f7f\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u4e86\u89e3\u5176\u73af\u5883\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u5728\u4e8e\u4f30\u8ba1\u8f66\u8f86\u5468\u56f4\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4e3a\u6b64\uff0c\u6709\u5fc5\u8981\u63a8\u65ad\u5bf9\u8c61\u8fb9\u754c\u6846\u7684\u4f4d\u7f6e\u3002 CARLA \u4eff\u771f\u4e2d\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5e76\u4e14 CARLA Python API \u63d0\u4f9b\u4e86\u8bbf\u95ee\u6bcf\u4e2a\u5bf9\u8c61\u7684\u8fb9\u754c\u6846\u7684\u51fd\u6570\u3002\u672c\u6559\u7a0b\u5c55\u793a\u5982\u4f55\u8bbf\u95ee\u8fb9\u754c\u6846\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6295\u5f71\u5230\u76f8\u673a\u5e73\u9762\u4e2d\u3002 \u8bbe\u7f6e\u4eff\u771f\u5668 \u8ba9\u6211\u4eec\u7f16\u5199\u6807\u51c6 CARLA \u6837\u677f\u4ee3\u7801\uff0c\u8bbe\u7f6e\u5ba2\u6237\u7aef\u548c\u4e16\u754c\u5bf9\u8c61\uff0c\u751f\u6210\u8f66\u8f86\u5e76\u4e3a\u5176\u9644\u52a0\u76f8\u673a\uff1a import carla import math import random import time import queue import numpy as np import cv2 client = carla.Client('localhost', 2000) world = client.get_world() bp_lib = world.get_blueprint_library() # spawn vehicle vehicle_bp =bp_lib.find('vehicle.lincoln.mkz_2020') vehicle = world.try_spawn_actor(vehicle_bp, random.choice(spawn_points)) # spawn camera camera_bp = bp_lib.find('sensor.camera.rgb') camera_init_trans = carla.Transform(carla.Location(z=2)) camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=vehicle) vehicle.set_autopilot(True) # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Get the map spawn points spawn_points = world.get_map().get_spawn_points() # Create a queue to store and retrieve the sensor data image_queue = queue.Queue() camera.listen(image_queue.put) \u51e0\u4f55\u53d8\u6362 \u6211\u4eec\u60f3\u8981\u4ece\u4eff\u771f\u4e2d\u83b7\u53d6\u4e09\u7ef4\u70b9\u5e76\u5c06\u5b83\u4eec\u6295\u5f71\u5230\u76f8\u673a\u7684\u4e8c\u7ef4\u5e73\u9762\u4e2d\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u76f8\u673a\u6295\u5f71\u77e9\u9635\uff1a def build_projection_matrix(w, h, fov): focal = w / (2.0 * np.tan(fov * np.pi / 360.0)) K = np.identity(3) K[0, 0] = K[1, 1] = focal K[0, 2] = w / 2.0 K[1, 2] = h / 2.0 return K \u6211\u4eec\u60f3\u8981\u4f7f\u7528\u76f8\u673a\u6295\u5f71\u77e9\u9635\u5c06\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u4e8c\u7ef4\u70b9\u3002\u7b2c\u4e00\u6b65\u662f\u4f7f\u7528\u53ef\u901a\u8fc7 camera.get_transform().get_inverse_matrix() \u68c0\u7d22\u7684\u9006\u76f8\u673a\u53d8\u6362\uff0c\u5c06\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4e09\u7ef4\u5750\u6807\u53d8\u6362\u4e3a\u76f8\u673a\u5750\u6807\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u76f8\u673a\u6295\u5f71\u77e9\u9635\u5c06\u76f8\u673a\u5750\u6807\u4e2d\u7684\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u4e8c\u7ef4\u76f8\u673a\u5e73\u9762\u4e2d\uff1a def get_image_point(loc, K, w2c): # Calculate 2D projection of 3D coordinate # Format the input coordinate (loc is a carla.Position object) point = np.array([loc.x, loc.y, loc.z, 1]) # transform to camera coordinates point_camera = np.dot(w2c, point) # New we must change from UE4's coordinate system to an \"standard\" # (x, y ,z) -> (y, -z, x) # and we remove the fourth componebonent also point_camera = [point_camera[1], -point_camera[2], point_camera[0]] # now project 3D->2D using the camera matrix point_img = np.dot(K, point_camera) # normalize point_img[0] /= point_img[2] point_img[1] /= point_img[2] return point_img[0:2] \u73b0\u5728\u6211\u4eec\u6709\u4e86\u6295\u5f71 3D -> 2D \u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u7d22\u76f8\u673a\u89c4\u683c\uff1a # Get the world to camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) # Get the attributes from the camera image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() fov = camera_bp.get_attribute(\"fov\").as_float() # Calculate the camera projection matrix to project from 3D -> 2D K = build_projection_matrix(image_w, image_h, fov) \u8fb9\u754c\u6846 CARLA \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8fb9\u754c\u6846\u3002CARLA \u53c2\u4e0e\u8005 \u6709\u4e00\u4e2a bounding_box \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u5177\u6709 carla.BoundingBox \u5bf9\u8c61\u7c7b\u578b\u3002\u8fb9\u754c\u6846\u7684\u9876\u70b9\u53ef\u4ee5\u901a\u8fc7 getter \u51fd\u6570 .get_world_vertices() \u6216 get_local_vertices() \u4e4b\u4e00\u68c0\u7d22\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8981\u83b7\u53d6\u4e16\u754c\u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u4e09\u7ef4\u5750\u6807\uff0c\u60a8\u9700\u8981\u5c06\u53c2\u4e0e\u8005\u7684\u53d8\u6362\u4f5c\u4e3a\u8be5 get_world_vertices() \u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a actor.get_world_vertices(actor.get_transform()) \u5bf9\u4e8e\u5730\u56fe\u4e2d\u7684\u7269\u4f53\uff0c\u5982\u5efa\u7b51\u7269\u3001\u4ea4\u901a\u706f\u548c\u8def\u6807\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.World \u65b9\u6cd5 get_level_bbs() \u68c0\u7d22\u8fb9\u754c\u6846get_level_bbs()\u3002 carla.CityObjectLabel \u53ef\u4ee5\u7528\u4f5c\u53c2\u6570\u6765\u5c06\u8fb9\u754c\u6846\u5217\u8868\u8fc7\u6ee4\u5230\u76f8\u5173\u5bf9\u8c61\uff1a # Retrieve all bounding boxes for traffic lights within the level bounding_box_set = world.get_level_bbs(carla.CityObjectLabel.TrafficLight) # Filter the list to extract bounding boxes within a 50m radius nearby_bboxes = [] for bbox in bounding_box_set: if bbox.location.distance(actor.get_transform().location) < 50: nearby_bboxes \u53ef\u4ee5\u4f7f\u7528\u53c2\u4e0e\u8005\u4f4d\u7f6e\u6765\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u8be5\u5217\u8868\uff0c\u4ee5\u8bc6\u522b\u9644\u8fd1\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u80fd\u4f4d\u4e8e\u8fde\u63a5\u5230\u53c2\u4e0e\u8005\u7684\u76f8\u673a\u7684\u89c6\u91ce\u5185\u3002 \u4e3a\u4e86\u5728\u76f8\u673a\u56fe\u50cf\u4e0a\u7ed8\u5236\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u9002\u5f53\u7684\u987a\u5e8f\u8fde\u63a5\u9876\u70b9\u4ee5\u521b\u5efa\u8fb9\u7f18\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u8fb9\u5bf9\u5217\u8868\uff1a edges = [[0,1], [1,3], [3,2], [2,0], [0,4], [4,5], [5,1], [5,7], [7,6], [6,4], [6,2], [7,3]] \u6e32\u67d3\u8fb9\u754c\u6846 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u51e0\u4f55\u6295\u5f71\u548c\u4eff\u771f\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u521b\u5efa\u6e38\u620f\u5faa\u73af\u5e76\u5c06\u8fb9\u754c\u6846\u6e32\u67d3\u5230\u573a\u666f\u4e2d\u3002 # Set up the set of bounding boxes from the level # We filter for traffic lights and traffic signs bounding_box_set = world.get_level_bbs(carla.CityObjectLabel.TrafficLight) bounding_box_set.extend(world.get_level_bbs(carla.CityObjectLabel.TrafficSigns)) # Remember the edge pairs edges = [[0,1], [1,3], [3,2], [2,0], [0,4], [4,5], [5,1], [5,7], [7,6], [6,4], [6,2], [7,3]] \u4e3a\u4e86\u67e5\u770b\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 OpenCV \u7a97\u53e3\u6765\u663e\u793a\u76f8\u673a\u8f93\u51fa\u3002 # Retrieve the first image world.tick() image = image_queue.get() # Reshape the raw data into an RGB array img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Display the image in an OpenCV display window cv2.namedWindow('ImageWindowName', cv2.WINDOW_AUTOSIZE) cv2.imshow('ImageWindowName',img) cv2.waitKey(1) \u73b0\u5728\u6211\u4eec\u5c06\u5f00\u59cb\u6e38\u620f\u5faa\u73af\uff1a while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for bb in bounding_box_set: # Filter for distance from ego vehicle if bb.location.distance(vehicle.get_transform().location) < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the bounding box. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = bb.location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: # Cycle through the vertices verts = [v for v in bb.get_world_vertices(carla.Transform())] for edge in edges: # Join the vertices into edges p1 = get_image_point(verts[edge[0]], K, world_2_camera) p2 = get_image_point(verts[edge[1]], K, world_2_camera) # Draw the edges into the camera output cv2.line(img, (int(p1[0]),int(p1[1])), (int(p2[0]),int(p2[1])), (0,0,255, 255), 1) # Now draw the image into the OpenCV display window cv2.imshow('ImageWindowName',img) # Break the loop if the user presses the Q key if cv2.waitKey(1) == ord('q'): break # Close the OpenCV display window when the game loop stops cv2.destroyAllWindows() \u73b0\u5728\u6211\u4eec\u5c06\u4e09\u7ef4\u8fb9\u754c\u6846\u6e32\u67d3\u5230\u56fe\u50cf\u4e2d\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5728\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e2d\u89c2\u5bdf\u5b83\u4eec\u3002 \u8f66\u8f86\u8fb9\u754c\u6846 \u6211\u4eec\u53ef\u80fd\u8fd8\u60f3\u6e32\u67d3\u53c2\u4e0e\u8005\u7684\u8fb9\u754c\u6846\uff0c\u7279\u522b\u662f\u8f66\u8f86\u7684\u8fb9\u754c\u6846\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u4eff\u771f\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5176\u4ed6\u8f66\u8f86\uff1a for i in range(50): vehicle_bp = random.choice(bp_lib.filter('vehicle')) npc = world.try_spawn_actor(vehicle_bp, random.choice(spawn_points)) if npc: npc.set_autopilot(True) \u68c0\u7d22\u7b2c\u4e00\u5f20\u56fe\u50cf\u5e76\u50cf\u4ee5\u524d\u4e00\u6837\u8bbe\u7f6e OpenCV \u663e\u793a\u7a97\u53e3\uff1a # Retrieve the first image world.tick() image = image_queue.get() # Reshape the raw data into an RGB array img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Display the image in an OpenCV display window cv2.namedWindow('ImageWindowName', cv2.WINDOW_AUTOSIZE) cv2.imshow('ImageWindowName',img) cv2.waitKey(1) \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6e38\u620f\u5faa\u73af\u6765\u7ed8\u5236\u8f66\u8f86\u8fb9\u754c\u6846\uff1a while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for npc in world.get_actors().filter('*vehicle*'): # Filter out the ego vehicle if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) # Filter for the vehicles within 50m if dist < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the other vehicle. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera) verts = [v for v in bb.get_world_vertices(npc.get_transform())] for edge in edges: p1 = get_image_point(verts[edge[0]], K, world_2_camera) p2 = get_image_point(verts[edge[1]], K, world_2_camera) cv2.line(img, (int(p1[0]),int(p1[1])), (int(p2[0]),int(p2[1])), (255,0,0, 255), 1) cv2.imshow('ImageWindowName',img) if cv2.waitKey(1) == ord('q'): break cv2.destroyAllWindows() \u4e8c\u7ef4\u8fb9\u754c\u6846 \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6765\u68c0\u6d4b\u4e8c\u7ef4\u8fb9\u754c\u6846\u800c\u4e0d\u662f\u4e0a\u9762\u6f14\u793a\u7684\u4e09\u7ef4\u8fb9\u754c\u6846\u662f\u5f88\u5e38\u89c1\u7684\u3002\u524d\u9762\u7684\u811a\u672c\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\u4ee5\u751f\u6210\u4e8c\u7ef4\u8fb9\u754c\u6846\u3002\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u4e09\u7ef4\u8fb9\u754c\u6846\u7684\u672b\u7aef\u5373\u53ef\u3002\u5bf9\u4e8e\u6e32\u67d3\u7684\u6bcf\u4e2a\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u627e\u5230\u56fe\u50cf\u5750\u6807\u4e2d\u6700\u5de6\u8fb9\u3001\u6700\u53f3\u8fb9\u3001\u6700\u9ad8\u548c\u6700\u4f4e\u7684\u6295\u5f71\u9876\u70b9\u3002 while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for npc in world.get_actors().filter('*vehicle*'): # Filter out the ego vehicle if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) # Filter for the vehicles within 50m if dist < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the other vehicle. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera)http://host.robots.ox.ac.uk/pascal/VOC/ verts = [v for v in bb.get_world_vertices(npc.get_transform())] x_max = -10000 x_min = 10000 y_max = -10000 y_min = 10000 for vert in verts: p = get_image_point(vert, K, world_2_camera) # Find the rightmost vertex if p[0] > x_max: x_max = p[0] # Find the leftmost vertex if p[0] < x_min: x_min = p[0] # Find the highest vertex if p[1] > y_max: y_max = p[1] # Find the lowest vertex if p[1] < y_min: y_min = p[1] cv2.line(img, (int(x_min),int(y_min)), (int(x_max),int(y_min)), (0,0,255, 255), 1) cv2.line(img, (int(x_min),int(y_max)), (int(x_max),int(y_max)), (0,0,255, 255), 1) cv2.line(img, (int(x_min),int(y_min)), (int(x_min),int(y_max)), (0,0,255, 255), 1) cv2.line(img, (int(x_max),int(y_min)), (int(x_max),int(y_max)), (0,0,255, 255), 1) cv2.imshow('ImageWindowName',img) if cv2.waitKey(1) == ord('q'): break cv2.destroyAllWindows() \u5bfc\u51fa\u8fb9\u754c\u6846 \u6e32\u67d3\u8fb9\u754c\u6846\u5bf9\u4e8e\u6211\u4eec\u786e\u4fdd\u8fb9\u754c\u6846\u5bf9\u4e8e\u8c03\u8bd5\u76ee\u7684\u662f\u6b63\u786e\u7684\u5f88\u6709\u7528\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\u5b9e\u9645\u4f7f\u7528\u5b83\u4eec\uff0c\u6211\u4eec\u5c06\u9700\u8981\u5bfc\u51fa\u5b83\u4eec\u3002\u7528\u4e8e\u81ea\u52a8\u9a7e\u9a76\u548c\u7269\u4f53\u68c0\u6d4b\u7684\u5e38\u89c1\u6570\u636e\u5b58\u50a8\u5e93\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\uff0c\u4f8b\u5982 KITTI \u6216 PASCAL VOC \u6216 MicroSoft COCO \u3002 Pascal VOC \u683c\u5f0f \u8fd9\u4e9b\u6570\u636e\u96c6\u901a\u5e38\u4f7f\u7528 JSON \u6216 XML \u683c\u5f0f\u6765\u5b58\u50a8\u6ce8\u91ca\u3002PASCAL VOC \u683c\u5f0f\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684 Python \u5e93\u3002 from pascal_voc_writer import Writer ... ... ... while True: # Retrieve the image world.tick() image = image_queue.get() # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) frame_path = 'output/%06d' % image.frame # Save the image image.save_to_disk(frame_path + '.png') # Initialize the exporter writer = Writer(frame_path + '.png', image_w, image_h) for npc in world.get_actors().filter('*vehicle*'): if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) if dist < 50: forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera) verts = [v for v in bb.get_world_vertices(npc.get_transform())] x_max = -10000 x_min = 10000 y_max = -10000 y_min = 10000 for vert in verts: p = get_image_point(vert, K, world_2_camera) if p[0] > x_max: x_max = p[0] if p[0] < x_min: x_min = p[0] if p[1] > y_max: y_max = p[1] if p[1] < y_min: y_min = p[1] # Add the object to the frame (ensure it is inside the image) if x_min > 0 and x_max < image_w and y_min > 0 and y_max < image_h: writer.addObject('vehicle', x_min, y_min, x_max, y_max) # Save the bounding boxes in the scene writer.save(frame_path + '.xml') \u5bf9\u4e8e\u4eff\u771f\u7684\u6bcf\u4e2a\u6e32\u67d3\u5e27\uff0c\u60a8\u73b0\u5728\u5c06\u5bfc\u51fa\u4e00\u4e2a\u968f\u9644\u7684 XML \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u5e27\u4e2d\u8fb9\u754c\u6846\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u5728 PASCAL VOC \u683c\u5f0f\u4e2d\uff0cXML \u6587\u4ef6\u5305\u542b\u6d89\u53ca\u968f\u9644\u56fe\u50cf\u6587\u4ef6\u3001\u56fe\u50cf\u5c3a\u5bf8\u7684\u4fe1\u606f\uff0c\u5982\u679c\u9700\u8981\uff0c\u8fd8\u53ef\u4ee5\u5305\u62ec\u8f66\u8f86\u7c7b\u578b\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002 <!-- Example PASCAL VOC format file--> <annotation> <folder>output</folder> <filename>023235.png</filename> <path>/home/matt/Documents/temp/output/023235.png</path> <source> <database>Unknown</database> </source> <size> <width>800</width> <height>600</height> <depth>3</depth> </size> <segmented>0</segmented> <object> <name>vehicle</name> <pose>Unspecified</pose> <truncated>0</truncated> <difficult>0</difficult> <bndbox> <xmin>503</xmin> <ymin>310</ymin> <xmax>511</xmax> <ymax>321</ymax> </bndbox> </object> <object> <name>vehicle</name> <pose>Unspecified</pose> <truncated>0</truncated> <difficult>0</difficult> <bndbox> <xmin>490</xmin> <ymin>310</ymin> <xmax>498</xmax> <ymax>321</ymax> </bndbox> </object> </annotation> \u5fae\u8f6f COCO \u683c\u5f0f \u53e6\u4e00\u79cd\u6d41\u884c\u7684\u5bfc\u51fa\u683c\u5f0f\u662f MicroSoft COCO \u3002COCO \u683c\u5f0f\u4f7f\u7528 JSON \u6587\u4ef6\u6765\u4fdd\u5b58\u5bf9\u56fe\u50cf\u548c\u6ce8\u91ca\u7684\u5f15\u7528\u3002\u8be5\u683c\u5f0f\u5305\u62ec\u5355\u4e2a JSON \u6587\u4ef6\u5b57\u6bb5\u4e2d\u7684\u56fe\u50cf\u548c\u6ce8\u91ca\uff0c\u4ee5\u53ca\u6709\u5173\u6570\u636e\u96c6\u548c\u8bb8\u53ef\u8bc1\u7684\u4fe1\u606f\u3002\u4e0e\u67d0\u4e9b\u5176\u4ed6\u683c\u5f0f\u76f8\u6bd4\uff0c\u5bf9\u6240\u6709\u6536\u96c6\u7684\u56fe\u50cf\u548c\u6240\u6709\u76f8\u5173\u6ce8\u91ca\u7684\u5f15\u7528\u90fd\u4f4d\u4e8e\u540c\u4e00\u6587\u4ef6\u4e2d\u3002 \u60a8\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u793a\u4f8b\u7684 JSON \u5b57\u5178\uff1a simulation_dataset = { \"info\": {}, \"licenses\": [ { \"url\": \"http://creativecommons.org/licenses/by-nc-sa/2.0/\", \"id\": 1, \"name\": \"Attribution-NonCommercial-ShareAlike License\" }], \"images\": [..., { \"license\": 1, \"file_name\": \"023235.png\", \"height\": 600, \"width\": 800, \"date_captured\": \"2022-04-14 17:02:52\", \"id\": 23235 }, ... ], \"categories\": [... {\"supercategory\": \"vehicle\", \"id\": 10, \"name\": \"vehicle\" }, ...], \"annotations\": [ ..., { \"segmentation\": [], \"area\": 9262.89, \"iscrowd\": 0, \"image_id\": 23235, \"bbox\": [503.3, 310.4, 118.3, 78.3] }, ... ] } \u4fe1\u606f\u548c\u8bb8\u53ef\u8bc1\u90e8\u5206\u5e94\u76f8\u5e94\u586b\u5199\u6216\u7559\u7a7a\u3002\u4eff\u771f\u4e2d\u7684\u56fe\u50cf\u5e94\u5b58\u50a8\u5728 images \u5b57\u5178\u5b57\u6bb5\u4e2d\u7684\u6570\u7ec4\u4e2d\u3002\u8fb9\u754c\u6846\u5e94\u5b58\u50a8\u5728\u5177\u6709\u5339\u914d image_id \u7684 annotations \u5b57\u5178\u5b57\u6bb5\u4e2d\u3002\u8fb9\u754c\u6846\u5b58\u50a8\u4e3a [x_min, y_min, width, height] \u3002 \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 Python JSON \u5e93\u5c06\u5b57\u5178\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\uff1a import json with open('simulation_data.json', 'w') as json_file: json.dump(simulation_dataset, json_file) \u6709\u5173 COCO \u6570\u636e\u683c\u5f0f\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002 \u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u5728\u672c\u6559\u7a0b\u4e2d\u6211\u4eec\u6ca1\u6709\u8003\u8651\u91cd\u53e0\u7684\u8fb9\u754c\u6846\u3002\u4e3a\u4e86\u5728\u91cd\u53e0\u7684\u60c5\u51b5\u4e0b\u8bc6\u522b\u524d\u666f\u8fb9\u754c\u6846\uff0c\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002","title":"\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_1","text":"\u4f7f\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u4e86\u89e3\u5176\u73af\u5883\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u5728\u4e8e\u4f30\u8ba1\u8f66\u8f86\u5468\u56f4\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u4e3a\u6b64\uff0c\u6709\u5fc5\u8981\u63a8\u65ad\u5bf9\u8c61\u8fb9\u754c\u6846\u7684\u4f4d\u7f6e\u3002 CARLA \u4eff\u771f\u4e2d\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u5e76\u4e14 CARLA Python API \u63d0\u4f9b\u4e86\u8bbf\u95ee\u6bcf\u4e2a\u5bf9\u8c61\u7684\u8fb9\u754c\u6846\u7684\u51fd\u6570\u3002\u672c\u6559\u7a0b\u5c55\u793a\u5982\u4f55\u8bbf\u95ee\u8fb9\u754c\u6846\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6295\u5f71\u5230\u76f8\u673a\u5e73\u9762\u4e2d\u3002","title":"\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_2","text":"\u8ba9\u6211\u4eec\u7f16\u5199\u6807\u51c6 CARLA \u6837\u677f\u4ee3\u7801\uff0c\u8bbe\u7f6e\u5ba2\u6237\u7aef\u548c\u4e16\u754c\u5bf9\u8c61\uff0c\u751f\u6210\u8f66\u8f86\u5e76\u4e3a\u5176\u9644\u52a0\u76f8\u673a\uff1a import carla import math import random import time import queue import numpy as np import cv2 client = carla.Client('localhost', 2000) world = client.get_world() bp_lib = world.get_blueprint_library() # spawn vehicle vehicle_bp =bp_lib.find('vehicle.lincoln.mkz_2020') vehicle = world.try_spawn_actor(vehicle_bp, random.choice(spawn_points)) # spawn camera camera_bp = bp_lib.find('sensor.camera.rgb') camera_init_trans = carla.Transform(carla.Location(z=2)) camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=vehicle) vehicle.set_autopilot(True) # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Get the map spawn points spawn_points = world.get_map().get_spawn_points() # Create a queue to store and retrieve the sensor data image_queue = queue.Queue() camera.listen(image_queue.put)","title":"\u8bbe\u7f6e\u4eff\u771f\u5668"},{"location":"tuto_G_bounding_boxes/#_3","text":"\u6211\u4eec\u60f3\u8981\u4ece\u4eff\u771f\u4e2d\u83b7\u53d6\u4e09\u7ef4\u70b9\u5e76\u5c06\u5b83\u4eec\u6295\u5f71\u5230\u76f8\u673a\u7684\u4e8c\u7ef4\u5e73\u9762\u4e2d\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u76f8\u673a\u6295\u5f71\u77e9\u9635\uff1a def build_projection_matrix(w, h, fov): focal = w / (2.0 * np.tan(fov * np.pi / 360.0)) K = np.identity(3) K[0, 0] = K[1, 1] = focal K[0, 2] = w / 2.0 K[1, 2] = h / 2.0 return K \u6211\u4eec\u60f3\u8981\u4f7f\u7528\u76f8\u673a\u6295\u5f71\u77e9\u9635\u5c06\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u4e8c\u7ef4\u70b9\u3002\u7b2c\u4e00\u6b65\u662f\u4f7f\u7528\u53ef\u901a\u8fc7 camera.get_transform().get_inverse_matrix() \u68c0\u7d22\u7684\u9006\u76f8\u673a\u53d8\u6362\uff0c\u5c06\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4e09\u7ef4\u5750\u6807\u53d8\u6362\u4e3a\u76f8\u673a\u5750\u6807\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u76f8\u673a\u6295\u5f71\u77e9\u9635\u5c06\u76f8\u673a\u5750\u6807\u4e2d\u7684\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u4e8c\u7ef4\u76f8\u673a\u5e73\u9762\u4e2d\uff1a def get_image_point(loc, K, w2c): # Calculate 2D projection of 3D coordinate # Format the input coordinate (loc is a carla.Position object) point = np.array([loc.x, loc.y, loc.z, 1]) # transform to camera coordinates point_camera = np.dot(w2c, point) # New we must change from UE4's coordinate system to an \"standard\" # (x, y ,z) -> (y, -z, x) # and we remove the fourth componebonent also point_camera = [point_camera[1], -point_camera[2], point_camera[0]] # now project 3D->2D using the camera matrix point_img = np.dot(K, point_camera) # normalize point_img[0] /= point_img[2] point_img[1] /= point_img[2] return point_img[0:2] \u73b0\u5728\u6211\u4eec\u6709\u4e86\u6295\u5f71 3D -> 2D \u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u7d22\u76f8\u673a\u89c4\u683c\uff1a # Get the world to camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) # Get the attributes from the camera image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() fov = camera_bp.get_attribute(\"fov\").as_float() # Calculate the camera projection matrix to project from 3D -> 2D K = build_projection_matrix(image_w, image_h, fov)","title":"\u51e0\u4f55\u53d8\u6362"},{"location":"tuto_G_bounding_boxes/#_4","text":"CARLA \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8fb9\u754c\u6846\u3002CARLA \u53c2\u4e0e\u8005 \u6709\u4e00\u4e2a bounding_box \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u5177\u6709 carla.BoundingBox \u5bf9\u8c61\u7c7b\u578b\u3002\u8fb9\u754c\u6846\u7684\u9876\u70b9\u53ef\u4ee5\u901a\u8fc7 getter \u51fd\u6570 .get_world_vertices() \u6216 get_local_vertices() \u4e4b\u4e00\u68c0\u7d22\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8981\u83b7\u53d6\u4e16\u754c\u5750\u6807\u4e2d\u8fb9\u754c\u6846\u7684\u4e09\u7ef4\u5750\u6807\uff0c\u60a8\u9700\u8981\u5c06\u53c2\u4e0e\u8005\u7684\u53d8\u6362\u4f5c\u4e3a\u8be5 get_world_vertices() \u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a actor.get_world_vertices(actor.get_transform()) \u5bf9\u4e8e\u5730\u56fe\u4e2d\u7684\u7269\u4f53\uff0c\u5982\u5efa\u7b51\u7269\u3001\u4ea4\u901a\u706f\u548c\u8def\u6807\uff0c\u53ef\u4ee5\u901a\u8fc7 carla.World \u65b9\u6cd5 get_level_bbs() \u68c0\u7d22\u8fb9\u754c\u6846get_level_bbs()\u3002 carla.CityObjectLabel \u53ef\u4ee5\u7528\u4f5c\u53c2\u6570\u6765\u5c06\u8fb9\u754c\u6846\u5217\u8868\u8fc7\u6ee4\u5230\u76f8\u5173\u5bf9\u8c61\uff1a # Retrieve all bounding boxes for traffic lights within the level bounding_box_set = world.get_level_bbs(carla.CityObjectLabel.TrafficLight) # Filter the list to extract bounding boxes within a 50m radius nearby_bboxes = [] for bbox in bounding_box_set: if bbox.location.distance(actor.get_transform().location) < 50: nearby_bboxes \u53ef\u4ee5\u4f7f\u7528\u53c2\u4e0e\u8005\u4f4d\u7f6e\u6765\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u8be5\u5217\u8868\uff0c\u4ee5\u8bc6\u522b\u9644\u8fd1\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u80fd\u4f4d\u4e8e\u8fde\u63a5\u5230\u53c2\u4e0e\u8005\u7684\u76f8\u673a\u7684\u89c6\u91ce\u5185\u3002 \u4e3a\u4e86\u5728\u76f8\u673a\u56fe\u50cf\u4e0a\u7ed8\u5236\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u9002\u5f53\u7684\u987a\u5e8f\u8fde\u63a5\u9876\u70b9\u4ee5\u521b\u5efa\u8fb9\u7f18\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u8fb9\u5bf9\u5217\u8868\uff1a edges = [[0,1], [1,3], [3,2], [2,0], [0,4], [4,5], [5,1], [5,7], [7,6], [6,4], [6,2], [7,3]]","title":"\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_5","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u51e0\u4f55\u6295\u5f71\u548c\u4eff\u771f\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u521b\u5efa\u6e38\u620f\u5faa\u73af\u5e76\u5c06\u8fb9\u754c\u6846\u6e32\u67d3\u5230\u573a\u666f\u4e2d\u3002 # Set up the set of bounding boxes from the level # We filter for traffic lights and traffic signs bounding_box_set = world.get_level_bbs(carla.CityObjectLabel.TrafficLight) bounding_box_set.extend(world.get_level_bbs(carla.CityObjectLabel.TrafficSigns)) # Remember the edge pairs edges = [[0,1], [1,3], [3,2], [2,0], [0,4], [4,5], [5,1], [5,7], [7,6], [6,4], [6,2], [7,3]] \u4e3a\u4e86\u67e5\u770b\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 OpenCV \u7a97\u53e3\u6765\u663e\u793a\u76f8\u673a\u8f93\u51fa\u3002 # Retrieve the first image world.tick() image = image_queue.get() # Reshape the raw data into an RGB array img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Display the image in an OpenCV display window cv2.namedWindow('ImageWindowName', cv2.WINDOW_AUTOSIZE) cv2.imshow('ImageWindowName',img) cv2.waitKey(1) \u73b0\u5728\u6211\u4eec\u5c06\u5f00\u59cb\u6e38\u620f\u5faa\u73af\uff1a while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for bb in bounding_box_set: # Filter for distance from ego vehicle if bb.location.distance(vehicle.get_transform().location) < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the bounding box. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = bb.location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: # Cycle through the vertices verts = [v for v in bb.get_world_vertices(carla.Transform())] for edge in edges: # Join the vertices into edges p1 = get_image_point(verts[edge[0]], K, world_2_camera) p2 = get_image_point(verts[edge[1]], K, world_2_camera) # Draw the edges into the camera output cv2.line(img, (int(p1[0]),int(p1[1])), (int(p2[0]),int(p2[1])), (0,0,255, 255), 1) # Now draw the image into the OpenCV display window cv2.imshow('ImageWindowName',img) # Break the loop if the user presses the Q key if cv2.waitKey(1) == ord('q'): break # Close the OpenCV display window when the game loop stops cv2.destroyAllWindows() \u73b0\u5728\u6211\u4eec\u5c06\u4e09\u7ef4\u8fb9\u754c\u6846\u6e32\u67d3\u5230\u56fe\u50cf\u4e2d\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5728\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e2d\u89c2\u5bdf\u5b83\u4eec\u3002","title":"\u6e32\u67d3\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_6","text":"\u6211\u4eec\u53ef\u80fd\u8fd8\u60f3\u6e32\u67d3\u53c2\u4e0e\u8005\u7684\u8fb9\u754c\u6846\uff0c\u7279\u522b\u662f\u8f66\u8f86\u7684\u8fb9\u754c\u6846\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5728\u4eff\u771f\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5176\u4ed6\u8f66\u8f86\uff1a for i in range(50): vehicle_bp = random.choice(bp_lib.filter('vehicle')) npc = world.try_spawn_actor(vehicle_bp, random.choice(spawn_points)) if npc: npc.set_autopilot(True) \u68c0\u7d22\u7b2c\u4e00\u5f20\u56fe\u50cf\u5e76\u50cf\u4ee5\u524d\u4e00\u6837\u8bbe\u7f6e OpenCV \u663e\u793a\u7a97\u53e3\uff1a # Retrieve the first image world.tick() image = image_queue.get() # Reshape the raw data into an RGB array img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Display the image in an OpenCV display window cv2.namedWindow('ImageWindowName', cv2.WINDOW_AUTOSIZE) cv2.imshow('ImageWindowName',img) cv2.waitKey(1) \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6e38\u620f\u5faa\u73af\u6765\u7ed8\u5236\u8f66\u8f86\u8fb9\u754c\u6846\uff1a while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for npc in world.get_actors().filter('*vehicle*'): # Filter out the ego vehicle if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) # Filter for the vehicles within 50m if dist < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the other vehicle. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera) verts = [v for v in bb.get_world_vertices(npc.get_transform())] for edge in edges: p1 = get_image_point(verts[edge[0]], K, world_2_camera) p2 = get_image_point(verts[edge[1]], K, world_2_camera) cv2.line(img, (int(p1[0]),int(p1[1])), (int(p2[0]),int(p2[1])), (255,0,0, 255), 1) cv2.imshow('ImageWindowName',img) if cv2.waitKey(1) == ord('q'): break cv2.destroyAllWindows()","title":"\u8f66\u8f86\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_7","text":"\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6765\u68c0\u6d4b\u4e8c\u7ef4\u8fb9\u754c\u6846\u800c\u4e0d\u662f\u4e0a\u9762\u6f14\u793a\u7684\u4e09\u7ef4\u8fb9\u754c\u6846\u662f\u5f88\u5e38\u89c1\u7684\u3002\u524d\u9762\u7684\u811a\u672c\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\u4ee5\u751f\u6210\u4e8c\u7ef4\u8fb9\u754c\u6846\u3002\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u4e09\u7ef4\u8fb9\u754c\u6846\u7684\u672b\u7aef\u5373\u53ef\u3002\u5bf9\u4e8e\u6e32\u67d3\u7684\u6bcf\u4e2a\u8fb9\u754c\u6846\uff0c\u6211\u4eec\u627e\u5230\u56fe\u50cf\u5750\u6807\u4e2d\u6700\u5de6\u8fb9\u3001\u6700\u53f3\u8fb9\u3001\u6700\u9ad8\u548c\u6700\u4f4e\u7684\u6295\u5f71\u9876\u70b9\u3002 while True: # Retrieve and reshape the image world.tick() image = image_queue.get() img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) for npc in world.get_actors().filter('*vehicle*'): # Filter out the ego vehicle if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) # Filter for the vehicles within 50m if dist < 50: # Calculate the dot product between the forward vector # of the vehicle and the vector between the vehicle # and the other vehicle. We threshold this dot product # to limit to drawing bounding boxes IN FRONT OF THE CAMERA forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera)http://host.robots.ox.ac.uk/pascal/VOC/ verts = [v for v in bb.get_world_vertices(npc.get_transform())] x_max = -10000 x_min = 10000 y_max = -10000 y_min = 10000 for vert in verts: p = get_image_point(vert, K, world_2_camera) # Find the rightmost vertex if p[0] > x_max: x_max = p[0] # Find the leftmost vertex if p[0] < x_min: x_min = p[0] # Find the highest vertex if p[1] > y_max: y_max = p[1] # Find the lowest vertex if p[1] < y_min: y_min = p[1] cv2.line(img, (int(x_min),int(y_min)), (int(x_max),int(y_min)), (0,0,255, 255), 1) cv2.line(img, (int(x_min),int(y_max)), (int(x_max),int(y_max)), (0,0,255, 255), 1) cv2.line(img, (int(x_min),int(y_min)), (int(x_min),int(y_max)), (0,0,255, 255), 1) cv2.line(img, (int(x_max),int(y_min)), (int(x_max),int(y_max)), (0,0,255, 255), 1) cv2.imshow('ImageWindowName',img) if cv2.waitKey(1) == ord('q'): break cv2.destroyAllWindows()","title":"\u4e8c\u7ef4\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#_8","text":"\u6e32\u67d3\u8fb9\u754c\u6846\u5bf9\u4e8e\u6211\u4eec\u786e\u4fdd\u8fb9\u754c\u6846\u5bf9\u4e8e\u8c03\u8bd5\u76ee\u7684\u662f\u6b63\u786e\u7684\u5f88\u6709\u7528\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\u5b9e\u9645\u4f7f\u7528\u5b83\u4eec\uff0c\u6211\u4eec\u5c06\u9700\u8981\u5bfc\u51fa\u5b83\u4eec\u3002\u7528\u4e8e\u81ea\u52a8\u9a7e\u9a76\u548c\u7269\u4f53\u68c0\u6d4b\u7684\u5e38\u89c1\u6570\u636e\u5b58\u50a8\u5e93\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\uff0c\u4f8b\u5982 KITTI \u6216 PASCAL VOC \u6216 MicroSoft COCO \u3002","title":"\u5bfc\u51fa\u8fb9\u754c\u6846"},{"location":"tuto_G_bounding_boxes/#pascal-voc","text":"\u8fd9\u4e9b\u6570\u636e\u96c6\u901a\u5e38\u4f7f\u7528 JSON \u6216 XML \u683c\u5f0f\u6765\u5b58\u50a8\u6ce8\u91ca\u3002PASCAL VOC \u683c\u5f0f\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684 Python \u5e93\u3002 from pascal_voc_writer import Writer ... ... ... while True: # Retrieve the image world.tick() image = image_queue.get() # Get the camera matrix world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) frame_path = 'output/%06d' % image.frame # Save the image image.save_to_disk(frame_path + '.png') # Initialize the exporter writer = Writer(frame_path + '.png', image_w, image_h) for npc in world.get_actors().filter('*vehicle*'): if npc.id != vehicle.id: bb = npc.bounding_box dist = npc.get_transform().location.distance(vehicle.get_transform().location) if dist < 50: forward_vec = vehicle.get_transform().get_forward_vector() ray = npc.get_transform().location - vehicle.get_transform().location if forward_vec.dot(ray) > 1: p1 = get_image_point(bb.location, K, world_2_camera) verts = [v for v in bb.get_world_vertices(npc.get_transform())] x_max = -10000 x_min = 10000 y_max = -10000 y_min = 10000 for vert in verts: p = get_image_point(vert, K, world_2_camera) if p[0] > x_max: x_max = p[0] if p[0] < x_min: x_min = p[0] if p[1] > y_max: y_max = p[1] if p[1] < y_min: y_min = p[1] # Add the object to the frame (ensure it is inside the image) if x_min > 0 and x_max < image_w and y_min > 0 and y_max < image_h: writer.addObject('vehicle', x_min, y_min, x_max, y_max) # Save the bounding boxes in the scene writer.save(frame_path + '.xml') \u5bf9\u4e8e\u4eff\u771f\u7684\u6bcf\u4e2a\u6e32\u67d3\u5e27\uff0c\u60a8\u73b0\u5728\u5c06\u5bfc\u51fa\u4e00\u4e2a\u968f\u9644\u7684 XML \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u5e27\u4e2d\u8fb9\u754c\u6846\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u5728 PASCAL VOC \u683c\u5f0f\u4e2d\uff0cXML \u6587\u4ef6\u5305\u542b\u6d89\u53ca\u968f\u9644\u56fe\u50cf\u6587\u4ef6\u3001\u56fe\u50cf\u5c3a\u5bf8\u7684\u4fe1\u606f\uff0c\u5982\u679c\u9700\u8981\uff0c\u8fd8\u53ef\u4ee5\u5305\u62ec\u8f66\u8f86\u7c7b\u578b\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002 <!-- Example PASCAL VOC format file--> <annotation> <folder>output</folder> <filename>023235.png</filename> <path>/home/matt/Documents/temp/output/023235.png</path> <source> <database>Unknown</database> </source> <size> <width>800</width> <height>600</height> <depth>3</depth> </size> <segmented>0</segmented> <object> <name>vehicle</name> <pose>Unspecified</pose> <truncated>0</truncated> <difficult>0</difficult> <bndbox> <xmin>503</xmin> <ymin>310</ymin> <xmax>511</xmax> <ymax>321</ymax> </bndbox> </object> <object> <name>vehicle</name> <pose>Unspecified</pose> <truncated>0</truncated> <difficult>0</difficult> <bndbox> <xmin>490</xmin> <ymin>310</ymin> <xmax>498</xmax> <ymax>321</ymax> </bndbox> </object> </annotation>","title":"Pascal VOC \u683c\u5f0f"},{"location":"tuto_G_bounding_boxes/#coco","text":"\u53e6\u4e00\u79cd\u6d41\u884c\u7684\u5bfc\u51fa\u683c\u5f0f\u662f MicroSoft COCO \u3002COCO \u683c\u5f0f\u4f7f\u7528 JSON \u6587\u4ef6\u6765\u4fdd\u5b58\u5bf9\u56fe\u50cf\u548c\u6ce8\u91ca\u7684\u5f15\u7528\u3002\u8be5\u683c\u5f0f\u5305\u62ec\u5355\u4e2a JSON \u6587\u4ef6\u5b57\u6bb5\u4e2d\u7684\u56fe\u50cf\u548c\u6ce8\u91ca\uff0c\u4ee5\u53ca\u6709\u5173\u6570\u636e\u96c6\u548c\u8bb8\u53ef\u8bc1\u7684\u4fe1\u606f\u3002\u4e0e\u67d0\u4e9b\u5176\u4ed6\u683c\u5f0f\u76f8\u6bd4\uff0c\u5bf9\u6240\u6709\u6536\u96c6\u7684\u56fe\u50cf\u548c\u6240\u6709\u76f8\u5173\u6ce8\u91ca\u7684\u5f15\u7528\u90fd\u4f4d\u4e8e\u540c\u4e00\u6587\u4ef6\u4e2d\u3002 \u60a8\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u793a\u4f8b\u7684 JSON \u5b57\u5178\uff1a simulation_dataset = { \"info\": {}, \"licenses\": [ { \"url\": \"http://creativecommons.org/licenses/by-nc-sa/2.0/\", \"id\": 1, \"name\": \"Attribution-NonCommercial-ShareAlike License\" }], \"images\": [..., { \"license\": 1, \"file_name\": \"023235.png\", \"height\": 600, \"width\": 800, \"date_captured\": \"2022-04-14 17:02:52\", \"id\": 23235 }, ... ], \"categories\": [... {\"supercategory\": \"vehicle\", \"id\": 10, \"name\": \"vehicle\" }, ...], \"annotations\": [ ..., { \"segmentation\": [], \"area\": 9262.89, \"iscrowd\": 0, \"image_id\": 23235, \"bbox\": [503.3, 310.4, 118.3, 78.3] }, ... ] } \u4fe1\u606f\u548c\u8bb8\u53ef\u8bc1\u90e8\u5206\u5e94\u76f8\u5e94\u586b\u5199\u6216\u7559\u7a7a\u3002\u4eff\u771f\u4e2d\u7684\u56fe\u50cf\u5e94\u5b58\u50a8\u5728 images \u5b57\u5178\u5b57\u6bb5\u4e2d\u7684\u6570\u7ec4\u4e2d\u3002\u8fb9\u754c\u6846\u5e94\u5b58\u50a8\u5728\u5177\u6709\u5339\u914d image_id \u7684 annotations \u5b57\u5178\u5b57\u6bb5\u4e2d\u3002\u8fb9\u754c\u6846\u5b58\u50a8\u4e3a [x_min, y_min, width, height] \u3002 \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 Python JSON \u5e93\u5c06\u5b57\u5178\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\uff1a import json with open('simulation_data.json', 'w') as json_file: json.dump(simulation_dataset, json_file) \u6709\u5173 COCO \u6570\u636e\u683c\u5f0f\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002 \u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u5728\u672c\u6559\u7a0b\u4e2d\u6211\u4eec\u6ca1\u6709\u8003\u8651\u91cd\u53e0\u7684\u8fb9\u754c\u6846\u3002\u4e3a\u4e86\u5728\u91cd\u53e0\u7684\u60c5\u51b5\u4e0b\u8bc6\u522b\u524d\u666f\u8fb9\u754c\u6846\uff0c\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002","title":"\u5fae\u8f6f COCO \u683c\u5f0f"},{"location":"tuto_G_carsim_integration/","text":"CarSim \u96c6\u6210 CARLA \u4e0e CarSim \u7684\u96c6\u6210\u5141\u8bb8\u5c06 CARLA \u4e2d\u7684\u8f66\u8f86\u63a7\u5236\u8f6c\u53d1\u5230 CarSim\u3002CarSim \u5c06\u5bf9\u8f66\u8f86\u8fdb\u884c\u6240\u6709\u5fc5\u9700\u7684\u7269\u7406\u8ba1\u7b97\uff0c\u5e76\u5c06\u65b0\u72b6\u6001\u8fd4\u56de\u7ed9 CARLA\u3002 \u672c\u9875\u5411\u60a8\u5c55\u793a\u5982\u4f55\u751f\u6210 .sim \u6587\u4ef6\uff0c\u89e3\u91ca CARLA \u548c CarSim \u4e4b\u95f4\u7684\u8f66\u8f86\u5c3a\u5bf8\u5982\u4f55\u5173\u8054\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 CarSim \u96c6\u6210\u5728 CARLA \u4e0a\u8fd0\u884c\u4eff\u771f\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u8bbe\u7f6e CarSim \u751f\u6210 .sim \u6587\u4ef6 \u5728 Windows \u4e0a \u5728 Ubuntu \u4e0a Vehicle sizes Run the simulation \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u60a8\u9700\u8981 CarSim \u8bb8\u53ef\u8bc1\u624d\u80fd\u542f\u52a8\u5e76\u8fd0\u884c\u8be5\u8f6f\u4ef6\u3002\u5982\u679c\u60a8\u76ee\u524d\u6ca1\u6709 CarSim \u8bb8\u53ef\u8bc1\uff0c\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u8054\u7cfb\u56e2\u961f\u4ee5\u83b7\u53d6\u4fe1\u606f\u3002 \u8981\u5141\u8bb8\u4e0e\u865a\u5e7b\u5f15\u64ce\u901a\u4fe1\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u9002\u7528\u4e8e\u865a\u5e7b\u5f15\u64ce 4.24 \u7684 VehicleSim Dynamics \u63d2\u4ef6\uff08\u7248\u672c 2020.0\uff09\u3002\u6709\u5173\u67e5\u627e\u63d2\u4ef6\u7279\u5b9a\u7248\u672c\u7684\u4fe1\u606f\uff0c\u8bf7\u68c0\u67e5\u6b64 \u94fe\u63a5 \u3002\u63d2\u4ef6\u7684\u5b89\u88c5\u53d6\u51b3\u4e8e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\uff1a \u5bf9\u4e8e Windows : Get the plugin here . \u5bf9\u4e8e Ubuntu : \u5728 \u8fd9\u91cc \u4e0b\u8f7d\u63d2\u4ef6\u3002 \u5c06\u6587\u4ef6 CarSim.Build.cs \u66ff\u6362\u4e3a \u6b64\u5904 \u627e\u5230\u7684\u6587\u4ef6\uff0c\u4ee5\u4fbf\u4e3a Ubuntu \u4f7f\u7528\u6b63\u786e\u7684\u6c42\u89e3\u5668\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f CARLA \u7684\u6253\u5305\u7248\u672c\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002\u6253\u5305\u7248\u672c\u5df2\u4f7f\u7528\u6b64\u6807\u5fd7\u7f16\u8bd1\uff0c\u4f46\u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u5219\u9700\u8981\u4f7f\u7528 --carsim \u6807\u5fd7\u7f16\u8bd1\u670d\u52a1\u5668\u3002 \u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u8bf7\u5728\u6839\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 --carsim \u6807\u5fd7\u7f16\u8bd1\u670d\u52a1\u5668\uff1a make launch ARGS=\"--carsim\" \u8bbe\u7f6e CarSim \u4ee5\u4e0b\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u751f\u6210\u8fd0\u884c\u4eff\u771f\u6240\u9700\u7684 .sim \u6587\u4ef6\u3002\u8fd8\u6709\u5173\u4e8e CARLA \u548c CarSim \u4e4b\u95f4\u8f66\u8f86\u5c3a\u5bf8\u5173\u7cfb\u7684\u8be6\u7ec6\u91cd\u8981\u4fe1\u606f\u3002 \u751f\u6210.sim \u6587\u4ef6 \u8be5 .sim \u6587\u4ef6\u63cf\u8ff0\u4e86\u8981\u5728 CARLA \u548c CarSim \u4e2d\u8fd0\u884c\u7684\u4eff\u771f\u3002\u63d2\u4ef6\u9700\u8981\u6b64\u6587\u4ef6\u624d\u80fd\u8fd0\u884c\u4eff\u771f\u3002\u76ee\u524d\u65e0\u6cd5\u5728 Ubuntu \u4e0a\u751f\u6210\u6b64\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u4e4b\u524d\u751f\u6210\u7684\u6587\u4ef6\u5728 Ubuntu \u4e0a\u8fd0\u884c\u4eff\u771f\u3002 \u5728 Windows \u4e0a \u5728 CarSim \u4e0a\u914d\u7f6e\u5b8c\u6240\u6709\u53c2\u6570\u540e\uff0c\u4f7f\u7528 GUI \u751f\u6210 .sim \u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u751f\u6210\u7684 .sim \u6587\u4ef6\u5e94\u5982\u4e0b\u6240\u793a\uff1a SIMFILE SET_MACRO $(ROOT_FILE_NAME)$ Run_dd7a828d-4b14-4c77-9d09-1974401d6b25 SET_MACRO $(OUTPUT_PATH)$ D:\\carsim\\Data\\Results SET_MACRO $(WORK_DIR)$ D:\\carsim\\Data\\ SET_MACRO $(OUTPUT_FILE_PREFIX)$ $(WORK_DIR)$Results\\Run_dd7a828d-4b14-4c77-9d09-1974401d6b25\\LastRun FILEBASE $(OUTPUT_FILE_PREFIX)$ INPUT $(WORK_DIR)$Results\\$(ROOT_FILE_NAME)$\\Run_all.par INPUTARCHIVE $(OUTPUT_FILE_PREFIX)$_all.par ECHO $(OUTPUT_FILE_PREFIX)$_echo.par FINAL $(OUTPUT_FILE_PREFIX)$_end.par LOGFILE $(OUTPUT_FILE_PREFIX)$_log.txt ERDFILE $(OUTPUT_FILE_PREFIX)$.vs PROGDIR D:\\carsim\\ DATADIR D:\\carsim\\Data\\ GUI_REFRESH_V CarSim_RefreshEvent_7760 RESOURCEDIR D:\\carsim\\\\Resources\\ PRODUCT_ID CarSim PRODUCT_VER 2020.0 ANIFILE D:\\carsim\\Data\\runs\\animator.par VEHICLE_CODE i_i EXT_MODEL_STEP 0.00050000 PORTS_IMP 0 PORTS_EXP 0 DLLFILE D:\\carsim\\Programs\\solvers\\carsim_64.dll END \u5728Ubuntu\u4e0a \u65e0\u6cd5\u5728 Ubuntu \u4e0a\u901a\u8fc7 GUI \u521b\u5efa .sim \u6587\u4ef6\u3002\u4e3a\u4e86\u7ee7\u7eed\uff0c\u60a8\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u5728 Windows \u4e2d\u751f\u6210 .sim \u6587\u4ef6\u6216\u4f7f\u7528\u4e0b\u9762\u7684\u6587\u4ef6\u6a21\u677f\u3002 \u4fee\u6539\u8be5 .sim \u6587\u4ef6\uff0c\u4f7f\u53d8\u91cf INPUT , INPUTARCHIVE , LOGFILE \u7b49\u6307\u5411 Ubuntu \u7cfb\u7edf\u4e2d\u7684\u76f8\u5e94\u6587\u4ef6\u3002 \u66ff\u6362 DLLFILE \u884c\u4ee5\u6307\u5411 CarSim \u89e3\u7b97\u5668\uff0c\u5728\u9ed8\u8ba4\u5b89\u88c5\u4e2d\uff0c\u8be5\u89e3\u7b97\u5668\u5c06\u4e3a SOFILE /opt/carsim_2020.0/lib64/libcarsim.so.2020.0 . \u751f\u6210\u7684\u6587\u4ef6\u5e94\u4e0e\u6b64\u7c7b\u4f3c\uff1a SIMFILE FILEBASE /path/to/LastRun INPUT /path/to/Run_all.par INPUTARCHIVE /path/to/LastRun_all.par ECHO /path/to/LastRun_echo.par FINAL /path/to/LastRun_end.par LOGFILE /path/to/LastRun_log.txt ERDFILE /path/to/LastRun.vs PROGDIR /opt/carsim_2020.0/lib64/ DATADIR . PRODUCT_ID CarSim PRODUCT_VER 2020.0 VEHICLE_CODE i_i SOFILE /opt/carsim_2020.0/lib64/libcarsim.so.2020.0 END \u8f66\u8f86\u5c3a\u5bf8 \u5c3d\u7ba1 CarSim \u5141\u8bb8\u60a8\u6307\u5b9a\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u7684\u8f66\u8f86\u5c3a\u5bf8\uff0c\u4f46\u76ee\u524d CarSim \u8f66\u8f86\u548c CARLA \u8f66\u8f86\u4e4b\u95f4\u6ca1\u6709\u5173\u8054\u3002\u8fd9\u610f\u5473\u7740\u4e24\u4e2a\u9879\u76ee\u4e2d\u7684\u8f66\u8f86\u5c06\u5177\u6709\u4e0d\u540c\u7684\u5c3a\u5bf8\u3002CARLA \u8f66\u8f86\u7684\u4f5c\u7528\u53ea\u662f\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u5145\u5f53\u5360\u4f4d\u7b26\u3002 \u7b14\u8bb0 CARLA \u548c CarSim \u4e2d\u7684\u8f66\u8f86\u5c3a\u5bf8\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002CARLA \u8f66\u8f86\u53ea\u662f\u4e00\u4e2a\u6a21\u62df\u5360\u4f4d\u7b26\u3002 \u8fd0\u884c\u4eff\u771f \u8fd0\u884c\u4eff\u771f\u65f6\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u5728\u751f\u6210\u8f66\u8f86\u65f6\u542f\u7528 CarSim\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06 .sim \u6587\u4ef6\u8def\u5f84\u4f20\u9012\u7ed9Python API \u7684 \u65b9\u6cd5 \u6765\u5b8c\u6210\uff1a vehicle.enable_carsim(<path_to_ue4simfile.sim>) \u53d1\u9001\u5230\u8f66\u8f86\u7684\u6240\u6709\u8f93\u5165\u63a7\u4ef6\u90fd\u5c06\u8f6c\u53d1\u5230 CarSim\u3002CarSim \u5c06\u66f4\u65b0\u7269\u7406\u5e76\u5c06\u8f66\u8f86\u72b6\u6001\uff08\u53d8\u6362\uff09\u53d1\u9001\u56de CARLA \u8f66\u8f86\u3002 \u4eff\u771f\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u5206\u6790 CarSim \u4e2d\u7684\u6240\u6709\u6570\u636e\u3002","title":"CarSim \u96c6\u6210"},{"location":"tuto_G_carsim_integration/#carsim","text":"CARLA \u4e0e CarSim \u7684\u96c6\u6210\u5141\u8bb8\u5c06 CARLA \u4e2d\u7684\u8f66\u8f86\u63a7\u5236\u8f6c\u53d1\u5230 CarSim\u3002CarSim \u5c06\u5bf9\u8f66\u8f86\u8fdb\u884c\u6240\u6709\u5fc5\u9700\u7684\u7269\u7406\u8ba1\u7b97\uff0c\u5e76\u5c06\u65b0\u72b6\u6001\u8fd4\u56de\u7ed9 CARLA\u3002 \u672c\u9875\u5411\u60a8\u5c55\u793a\u5982\u4f55\u751f\u6210 .sim \u6587\u4ef6\uff0c\u89e3\u91ca CARLA \u548c CarSim \u4e4b\u95f4\u7684\u8f66\u8f86\u5c3a\u5bf8\u5982\u4f55\u5173\u8054\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 CarSim \u96c6\u6210\u5728 CARLA \u4e0a\u8fd0\u884c\u4eff\u771f\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u8bbe\u7f6e CarSim \u751f\u6210 .sim \u6587\u4ef6 \u5728 Windows \u4e0a \u5728 Ubuntu \u4e0a Vehicle sizes Run the simulation","title":"CarSim \u96c6\u6210"},{"location":"tuto_G_carsim_integration/#_1","text":"\u60a8\u9700\u8981 CarSim \u8bb8\u53ef\u8bc1\u624d\u80fd\u542f\u52a8\u5e76\u8fd0\u884c\u8be5\u8f6f\u4ef6\u3002\u5982\u679c\u60a8\u76ee\u524d\u6ca1\u6709 CarSim \u8bb8\u53ef\u8bc1\uff0c\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u8054\u7cfb\u56e2\u961f\u4ee5\u83b7\u53d6\u4fe1\u606f\u3002 \u8981\u5141\u8bb8\u4e0e\u865a\u5e7b\u5f15\u64ce\u901a\u4fe1\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u9002\u7528\u4e8e\u865a\u5e7b\u5f15\u64ce 4.24 \u7684 VehicleSim Dynamics \u63d2\u4ef6\uff08\u7248\u672c 2020.0\uff09\u3002\u6709\u5173\u67e5\u627e\u63d2\u4ef6\u7279\u5b9a\u7248\u672c\u7684\u4fe1\u606f\uff0c\u8bf7\u68c0\u67e5\u6b64 \u94fe\u63a5 \u3002\u63d2\u4ef6\u7684\u5b89\u88c5\u53d6\u51b3\u4e8e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\uff1a \u5bf9\u4e8e Windows : Get the plugin here . \u5bf9\u4e8e Ubuntu : \u5728 \u8fd9\u91cc \u4e0b\u8f7d\u63d2\u4ef6\u3002 \u5c06\u6587\u4ef6 CarSim.Build.cs \u66ff\u6362\u4e3a \u6b64\u5904 \u627e\u5230\u7684\u6587\u4ef6\uff0c\u4ee5\u4fbf\u4e3a Ubuntu \u4f7f\u7528\u6b63\u786e\u7684\u6c42\u89e3\u5668\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f CARLA \u7684\u6253\u5305\u7248\u672c\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002\u6253\u5305\u7248\u672c\u5df2\u4f7f\u7528\u6b64\u6807\u5fd7\u7f16\u8bd1\uff0c\u4f46\u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u5219\u9700\u8981\u4f7f\u7528 --carsim \u6807\u5fd7\u7f16\u8bd1\u670d\u52a1\u5668\u3002 \u5982\u679c\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u8bf7\u5728\u6839\u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u7528 --carsim \u6807\u5fd7\u7f16\u8bd1\u670d\u52a1\u5668\uff1a make launch ARGS=\"--carsim\"","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_G_carsim_integration/#carsim_1","text":"\u4ee5\u4e0b\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u751f\u6210\u8fd0\u884c\u4eff\u771f\u6240\u9700\u7684 .sim \u6587\u4ef6\u3002\u8fd8\u6709\u5173\u4e8e CARLA \u548c CarSim \u4e4b\u95f4\u8f66\u8f86\u5c3a\u5bf8\u5173\u7cfb\u7684\u8be6\u7ec6\u91cd\u8981\u4fe1\u606f\u3002","title":"\u8bbe\u7f6e CarSim"},{"location":"tuto_G_carsim_integration/#sim","text":"\u8be5 .sim \u6587\u4ef6\u63cf\u8ff0\u4e86\u8981\u5728 CARLA \u548c CarSim \u4e2d\u8fd0\u884c\u7684\u4eff\u771f\u3002\u63d2\u4ef6\u9700\u8981\u6b64\u6587\u4ef6\u624d\u80fd\u8fd0\u884c\u4eff\u771f\u3002\u76ee\u524d\u65e0\u6cd5\u5728 Ubuntu \u4e0a\u751f\u6210\u6b64\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u4e4b\u524d\u751f\u6210\u7684\u6587\u4ef6\u5728 Ubuntu \u4e0a\u8fd0\u884c\u4eff\u771f\u3002","title":"\u751f\u6210.sim \u6587\u4ef6"},{"location":"tuto_G_carsim_integration/#windows","text":"\u5728 CarSim \u4e0a\u914d\u7f6e\u5b8c\u6240\u6709\u53c2\u6570\u540e\uff0c\u4f7f\u7528 GUI \u751f\u6210 .sim \u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u751f\u6210\u7684 .sim \u6587\u4ef6\u5e94\u5982\u4e0b\u6240\u793a\uff1a SIMFILE SET_MACRO $(ROOT_FILE_NAME)$ Run_dd7a828d-4b14-4c77-9d09-1974401d6b25 SET_MACRO $(OUTPUT_PATH)$ D:\\carsim\\Data\\Results SET_MACRO $(WORK_DIR)$ D:\\carsim\\Data\\ SET_MACRO $(OUTPUT_FILE_PREFIX)$ $(WORK_DIR)$Results\\Run_dd7a828d-4b14-4c77-9d09-1974401d6b25\\LastRun FILEBASE $(OUTPUT_FILE_PREFIX)$ INPUT $(WORK_DIR)$Results\\$(ROOT_FILE_NAME)$\\Run_all.par INPUTARCHIVE $(OUTPUT_FILE_PREFIX)$_all.par ECHO $(OUTPUT_FILE_PREFIX)$_echo.par FINAL $(OUTPUT_FILE_PREFIX)$_end.par LOGFILE $(OUTPUT_FILE_PREFIX)$_log.txt ERDFILE $(OUTPUT_FILE_PREFIX)$.vs PROGDIR D:\\carsim\\ DATADIR D:\\carsim\\Data\\ GUI_REFRESH_V CarSim_RefreshEvent_7760 RESOURCEDIR D:\\carsim\\\\Resources\\ PRODUCT_ID CarSim PRODUCT_VER 2020.0 ANIFILE D:\\carsim\\Data\\runs\\animator.par VEHICLE_CODE i_i EXT_MODEL_STEP 0.00050000 PORTS_IMP 0 PORTS_EXP 0 DLLFILE D:\\carsim\\Programs\\solvers\\carsim_64.dll END","title":"\u5728 Windows \u4e0a"},{"location":"tuto_G_carsim_integration/#ubuntu","text":"\u65e0\u6cd5\u5728 Ubuntu \u4e0a\u901a\u8fc7 GUI \u521b\u5efa .sim \u6587\u4ef6\u3002\u4e3a\u4e86\u7ee7\u7eed\uff0c\u60a8\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u5728 Windows \u4e2d\u751f\u6210 .sim \u6587\u4ef6\u6216\u4f7f\u7528\u4e0b\u9762\u7684\u6587\u4ef6\u6a21\u677f\u3002 \u4fee\u6539\u8be5 .sim \u6587\u4ef6\uff0c\u4f7f\u53d8\u91cf INPUT , INPUTARCHIVE , LOGFILE \u7b49\u6307\u5411 Ubuntu \u7cfb\u7edf\u4e2d\u7684\u76f8\u5e94\u6587\u4ef6\u3002 \u66ff\u6362 DLLFILE \u884c\u4ee5\u6307\u5411 CarSim \u89e3\u7b97\u5668\uff0c\u5728\u9ed8\u8ba4\u5b89\u88c5\u4e2d\uff0c\u8be5\u89e3\u7b97\u5668\u5c06\u4e3a SOFILE /opt/carsim_2020.0/lib64/libcarsim.so.2020.0 . \u751f\u6210\u7684\u6587\u4ef6\u5e94\u4e0e\u6b64\u7c7b\u4f3c\uff1a SIMFILE FILEBASE /path/to/LastRun INPUT /path/to/Run_all.par INPUTARCHIVE /path/to/LastRun_all.par ECHO /path/to/LastRun_echo.par FINAL /path/to/LastRun_end.par LOGFILE /path/to/LastRun_log.txt ERDFILE /path/to/LastRun.vs PROGDIR /opt/carsim_2020.0/lib64/ DATADIR . PRODUCT_ID CarSim PRODUCT_VER 2020.0 VEHICLE_CODE i_i SOFILE /opt/carsim_2020.0/lib64/libcarsim.so.2020.0 END","title":"\u5728Ubuntu\u4e0a"},{"location":"tuto_G_carsim_integration/#_2","text":"\u5c3d\u7ba1 CarSim \u5141\u8bb8\u60a8\u6307\u5b9a\u5728\u6a21\u62df\u4e2d\u4f7f\u7528\u7684\u8f66\u8f86\u5c3a\u5bf8\uff0c\u4f46\u76ee\u524d CarSim \u8f66\u8f86\u548c CARLA \u8f66\u8f86\u4e4b\u95f4\u6ca1\u6709\u5173\u8054\u3002\u8fd9\u610f\u5473\u7740\u4e24\u4e2a\u9879\u76ee\u4e2d\u7684\u8f66\u8f86\u5c06\u5177\u6709\u4e0d\u540c\u7684\u5c3a\u5bf8\u3002CARLA \u8f66\u8f86\u7684\u4f5c\u7528\u53ea\u662f\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u5145\u5f53\u5360\u4f4d\u7b26\u3002 \u7b14\u8bb0 CARLA \u548c CarSim \u4e2d\u7684\u8f66\u8f86\u5c3a\u5bf8\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002CARLA \u8f66\u8f86\u53ea\u662f\u4e00\u4e2a\u6a21\u62df\u5360\u4f4d\u7b26\u3002","title":"\u8f66\u8f86\u5c3a\u5bf8"},{"location":"tuto_G_carsim_integration/#_3","text":"\u8fd0\u884c\u4eff\u771f\u65f6\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u5728\u751f\u6210\u8f66\u8f86\u65f6\u542f\u7528 CarSim\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06 .sim \u6587\u4ef6\u8def\u5f84\u4f20\u9012\u7ed9Python API \u7684 \u65b9\u6cd5 \u6765\u5b8c\u6210\uff1a vehicle.enable_carsim(<path_to_ue4simfile.sim>) \u53d1\u9001\u5230\u8f66\u8f86\u7684\u6240\u6709\u8f93\u5165\u63a7\u4ef6\u90fd\u5c06\u8f6c\u53d1\u5230 CarSim\u3002CarSim \u5c06\u66f4\u65b0\u7269\u7406\u5e76\u5c06\u8f66\u8f86\u72b6\u6001\uff08\u53d8\u6362\uff09\u53d1\u9001\u56de CARLA \u8f66\u8f86\u3002 \u4eff\u771f\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u5206\u6790 CarSim \u4e2d\u7684\u6240\u6709\u6570\u636e\u3002","title":"\u8fd0\u884c\u4eff\u771f"},{"location":"tuto_G_chrono/","text":"Chrono \u96c6\u6210 \u672c\u6307\u5357\u6982\u8ff0\u4e86 Chrono \u662f\u4ec0\u4e48\u3001\u5982\u4f55\u5728 CARLA \u4e2d\u4f7f\u7528\u5b83\u4ee5\u53ca\u96c6\u6210\u4e2d\u6d89\u53ca\u7684\u9650\u5236\u3002 Chrono \u9879\u76ee \u5728 CARLA \u4e0a\u4f7f\u7528 Chrono \u914d\u7f6e\u670d\u52a1\u5668 \u542f\u7528 Chrono \u7269\u7406 \u5c40\u9650\u6027 Chrono \u9879\u76ee Project Chrono \u662f\u4e00\u6b3e\u5f00\u6e90\u591a\u7269\u7406\u573a\u4eff\u771f\u5f15\u64ce\uff0c\u5b83\u4f7f\u7528\u57fa\u4e8e\u6a21\u677f\u7684\u65b9\u6cd5\u63d0\u4f9b\u9ad8\u5ea6\u771f\u5b9e\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u3002CARLA \u4e2d\u7684\u96c6\u6210\u5141\u8bb8\u7528\u6237\u5728\u5bfc\u822a\u5730\u56fe\u65f6\u5229\u7528 Chrono \u6a21\u677f\u6765\u6a21\u62df\u8f66\u8f86\u52a8\u529b\u5b66\u3002 \u5728 CARLA \u4e0a\u4f7f\u7528 Chrono \u8981\u4f7f\u7528 Chrono \u96c6\u6210\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u5728\u542f\u52a8\u65f6\u4f7f\u7528\u6807\u7b7e\u914d\u7f6e\u670d\u52a1\u5668\uff0c\u7136\u540e\u4f7f\u7528 PythonAPI \u5728\u751f\u6210\u7684\u8f66\u8f86\u4e0a\u542f\u7528\u5b83\u3002\u8bf7\u9605\u8bfb\u4ee5\u83b7\u5f97\u66f4\u591a\u8be6\u60c5\u3002 \u914d\u7f6e\u670d\u52a1\u5668 \u4ec5\u5f53 CARLA \u670d\u52a1\u5668\u4f7f\u7528 Chrono \u6807\u7b7e\u7f16\u8bd1\u65f6\uff0cChrono \u624d\u4f1a\u5de5\u4f5c\u3002 \u5728\u4ece CARLA \u7684\u6e90\u4ee3\u7801\u6784\u5efa\u7248\u672c\u4e2d \uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u542f\u52a8\u670d\u52a1\u5668\uff1a make launch ARGS=\"--chrono\" \u542f\u7528 Chrono \u7269\u7406 Chrono \u7269\u7406\u662f\u901a\u8fc7 Actor \u7c7b\u63d0\u4f9b\u7684 enable_chrono_physics \u65b9\u6cd5\u542f\u7528\u7684\u3002\u9664\u4e86\u5b50\u6b65\u9aa4\u548c\u5b50\u6b65\u9aa4\u589e\u91cf\u65f6\u95f4\u7684\u503c\u4e4b\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u4e09\u4e2a\u6a21\u677f\u6587\u4ef6\u548c\u4e00\u4e2a\u57fa\u672c\u8def\u5f84\u6765\u5b9a\u4f4d\u8fd9\u4e9b\u6587\u4ef6\uff1a base_path : \u5305\u542b\u6a21\u677f\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\u3002\u8fd9\u5bf9\u4e8e\u786e\u4fdd\u4ece\u6a21\u677f\u6587\u4ef6\u5f15\u7528\u7684\u8f85\u52a9\u6587\u4ef6\u5177\u6709\u7528\u4e8e\u641c\u7d22\u7684\u516c\u5171\u57fa\u672c\u8def\u5f84\u662f\u5fc5\u8981\u7684\u3002 vehicle_json : \u76f8\u5bf9\u4e8e base_path \u7684\u8f66\u8f86\u6a21\u677f\u6587\u4ef6 . tire_json : \u76f8\u5bf9\u4e8e base_path \u7684\u8f6e\u80ce\u6a21\u677f\u6587\u4ef6\u3002 powertrain_json : \u76f8\u5bf9\u4e8e base_path \u52a8\u529b\u603b\u6210\u6a21\u677f\u6587\u4ef6\u3002 \u91cd\u8981 \u4ed4\u7ec6\u68c0\u67e5\u60a8\u7684\u8def\u5f84\u3002\u4e0d\u6b63\u786e\u6216\u7f3a\u5931\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u5bfc\u81f4\u865a\u5e7b\u5f15\u64ce\u5d29\u6e83\u3002 Build/chrono-install/share/chrono/data/vehicle \u4e2d\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u4e0d\u540c\u8f66\u8f86\u7684\u5404\u79cd\u793a\u4f8b\u6a21\u677f\u6587\u4ef6\u3002\u9605\u8bfb Project Chrono \u6587\u6863 \uff0c\u4e86\u89e3\u6709\u5173\u5176\u8f66\u8f86\u793a\u4f8b\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u6a21\u677f\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u542f\u7528 Chrono \u7269\u7406\uff1a # Spawn your vehicle vehicle = world.spawn_actor(bp, spawn_point) # Set the base path base_path = \"/path/to/carla/Build/chrono-install/share/chrono/data/vehicle/\" # Set the template files vehicle_json = \"sedan/vehicle/Sedan_Vehicle.json\" powertrain_json = \"sedan/powertrain/Sedan_SimpleMapPowertrain.json\" tire_json = \"sedan/tire/Sedan_TMeasyTire.json\" # Enable Chrono physics vehicle.enable_chrono_physics(5000, 0.002, vehicle_json, powertrain_json, tire_json, base_path) \u60a8\u53ef\u4ee5\u4f7f\u7528 PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c manual_control_chrono.py \u5c1d\u8bd5 Chrono \u7269\u7406\u96c6\u6210\u3002\u8fd0\u884c\u811a\u672c\u540e\uff0c\u6309 Ctrl + o \u542f\u7528 Chrono\u3002 \u5c40\u9650\u6027 \u6b64\u96c6\u6210\u4e0d\u652f\u6301\u78b0\u649e\u3002 \u5f53\u53d1\u751f\u78b0\u649e\u65f6\uff0c\u8f66\u8f86\u5c06\u6062\u590d\u4e3a CARLA \u9ed8\u8ba4\u7269\u7406\u72b6\u6001\u3002","title":"Chrono \u96c6\u6210"},{"location":"tuto_G_chrono/#chrono","text":"\u672c\u6307\u5357\u6982\u8ff0\u4e86 Chrono \u662f\u4ec0\u4e48\u3001\u5982\u4f55\u5728 CARLA \u4e2d\u4f7f\u7528\u5b83\u4ee5\u53ca\u96c6\u6210\u4e2d\u6d89\u53ca\u7684\u9650\u5236\u3002 Chrono \u9879\u76ee \u5728 CARLA \u4e0a\u4f7f\u7528 Chrono \u914d\u7f6e\u670d\u52a1\u5668 \u542f\u7528 Chrono \u7269\u7406 \u5c40\u9650\u6027","title":"Chrono \u96c6\u6210"},{"location":"tuto_G_chrono/#chrono_1","text":"Project Chrono \u662f\u4e00\u6b3e\u5f00\u6e90\u591a\u7269\u7406\u573a\u4eff\u771f\u5f15\u64ce\uff0c\u5b83\u4f7f\u7528\u57fa\u4e8e\u6a21\u677f\u7684\u65b9\u6cd5\u63d0\u4f9b\u9ad8\u5ea6\u771f\u5b9e\u7684\u8f66\u8f86\u52a8\u529b\u5b66\u3002CARLA \u4e2d\u7684\u96c6\u6210\u5141\u8bb8\u7528\u6237\u5728\u5bfc\u822a\u5730\u56fe\u65f6\u5229\u7528 Chrono \u6a21\u677f\u6765\u6a21\u62df\u8f66\u8f86\u52a8\u529b\u5b66\u3002","title":"Chrono \u9879\u76ee"},{"location":"tuto_G_chrono/#carla-chrono","text":"\u8981\u4f7f\u7528 Chrono \u96c6\u6210\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u5728\u542f\u52a8\u65f6\u4f7f\u7528\u6807\u7b7e\u914d\u7f6e\u670d\u52a1\u5668\uff0c\u7136\u540e\u4f7f\u7528 PythonAPI \u5728\u751f\u6210\u7684\u8f66\u8f86\u4e0a\u542f\u7528\u5b83\u3002\u8bf7\u9605\u8bfb\u4ee5\u83b7\u5f97\u66f4\u591a\u8be6\u60c5\u3002","title":"\u5728 CARLA \u4e0a\u4f7f\u7528 Chrono"},{"location":"tuto_G_chrono/#_1","text":"\u4ec5\u5f53 CARLA \u670d\u52a1\u5668\u4f7f\u7528 Chrono \u6807\u7b7e\u7f16\u8bd1\u65f6\uff0cChrono \u624d\u4f1a\u5de5\u4f5c\u3002 \u5728\u4ece CARLA \u7684\u6e90\u4ee3\u7801\u6784\u5efa\u7248\u672c\u4e2d \uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u542f\u52a8\u670d\u52a1\u5668\uff1a make launch ARGS=\"--chrono\"","title":"\u914d\u7f6e\u670d\u52a1\u5668"},{"location":"tuto_G_chrono/#chrono_2","text":"Chrono \u7269\u7406\u662f\u901a\u8fc7 Actor \u7c7b\u63d0\u4f9b\u7684 enable_chrono_physics \u65b9\u6cd5\u542f\u7528\u7684\u3002\u9664\u4e86\u5b50\u6b65\u9aa4\u548c\u5b50\u6b65\u9aa4\u589e\u91cf\u65f6\u95f4\u7684\u503c\u4e4b\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u4e09\u4e2a\u6a21\u677f\u6587\u4ef6\u548c\u4e00\u4e2a\u57fa\u672c\u8def\u5f84\u6765\u5b9a\u4f4d\u8fd9\u4e9b\u6587\u4ef6\uff1a base_path : \u5305\u542b\u6a21\u677f\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\u3002\u8fd9\u5bf9\u4e8e\u786e\u4fdd\u4ece\u6a21\u677f\u6587\u4ef6\u5f15\u7528\u7684\u8f85\u52a9\u6587\u4ef6\u5177\u6709\u7528\u4e8e\u641c\u7d22\u7684\u516c\u5171\u57fa\u672c\u8def\u5f84\u662f\u5fc5\u8981\u7684\u3002 vehicle_json : \u76f8\u5bf9\u4e8e base_path \u7684\u8f66\u8f86\u6a21\u677f\u6587\u4ef6 . tire_json : \u76f8\u5bf9\u4e8e base_path \u7684\u8f6e\u80ce\u6a21\u677f\u6587\u4ef6\u3002 powertrain_json : \u76f8\u5bf9\u4e8e base_path \u52a8\u529b\u603b\u6210\u6a21\u677f\u6587\u4ef6\u3002 \u91cd\u8981 \u4ed4\u7ec6\u68c0\u67e5\u60a8\u7684\u8def\u5f84\u3002\u4e0d\u6b63\u786e\u6216\u7f3a\u5931\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u5bfc\u81f4\u865a\u5e7b\u5f15\u64ce\u5d29\u6e83\u3002 Build/chrono-install/share/chrono/data/vehicle \u4e2d\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u4e0d\u540c\u8f66\u8f86\u7684\u5404\u79cd\u793a\u4f8b\u6a21\u677f\u6587\u4ef6\u3002\u9605\u8bfb Project Chrono \u6587\u6863 \uff0c\u4e86\u89e3\u6709\u5173\u5176\u8f66\u8f86\u793a\u4f8b\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u6a21\u677f\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff0c\u4e86\u89e3\u5982\u4f55\u542f\u7528 Chrono \u7269\u7406\uff1a # Spawn your vehicle vehicle = world.spawn_actor(bp, spawn_point) # Set the base path base_path = \"/path/to/carla/Build/chrono-install/share/chrono/data/vehicle/\" # Set the template files vehicle_json = \"sedan/vehicle/Sedan_Vehicle.json\" powertrain_json = \"sedan/powertrain/Sedan_SimpleMapPowertrain.json\" tire_json = \"sedan/tire/Sedan_TMeasyTire.json\" # Enable Chrono physics vehicle.enable_chrono_physics(5000, 0.002, vehicle_json, powertrain_json, tire_json, base_path) \u60a8\u53ef\u4ee5\u4f7f\u7528 PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c manual_control_chrono.py \u5c1d\u8bd5 Chrono \u7269\u7406\u96c6\u6210\u3002\u8fd0\u884c\u811a\u672c\u540e\uff0c\u6309 Ctrl + o \u542f\u7528 Chrono\u3002","title":"\u542f\u7528 Chrono \u7269\u7406"},{"location":"tuto_G_chrono/#_2","text":"\u6b64\u96c6\u6210\u4e0d\u652f\u6301\u78b0\u649e\u3002 \u5f53\u53d1\u751f\u78b0\u649e\u65f6\uff0c\u8f66\u8f86\u5c06\u6062\u590d\u4e3a CARLA \u9ed8\u8ba4\u7269\u7406\u72b6\u6001\u3002","title":"\u5c40\u9650\u6027"},{"location":"tuto_G_control_vehicle_physics/","text":"\u63a7\u5236\u548c\u76d1\u63a7\u8f66\u8f86\u7269\u7406\u7279\u6027 \u53ef\u4ee5\u8c03\u6574\u8f66\u8f86\u53ca\u5176\u8f66\u8f6e\u7684\u7269\u7406\u5c5e\u6027\u3002\u8fd9\u4e9b\u66f4\u6539 \u4ec5 \u5e94\u7528\u4e8e\u8fd0\u884c\u65f6\uff0c\u5e76\u4e14\u5728\u6267\u884c\u7ed3\u675f\u65f6\u5c06\u503c\u8bbe\u7f6e\u56de\u9ed8\u8ba4\u503c\u3002 \u8fd9\u4e9b\u5c5e\u6027\u901a\u8fc7 carla.VehiclePhysicsControl \u5bf9\u8c61\u8fdb\u884c\u63a7\u5236 \uff0c\u8be5\u5bf9\u8c61\u8fd8\u901a\u8fc7 carla.WheelPhysicsControl \u5bf9\u8c61\u63d0\u4f9b\u5bf9\u6bcf\u4e2a\u8f66\u8f6e\u7269\u7406\u7279\u6027\u7684\u63a7\u5236 \u3002 \u8f66\u8f86\u63a7\u5236\u4ee3\u7801\u793a\u4f8b \u67e5\u770b\u8f66\u8f86\u9065\u6d4b\u6570\u636e \u8f66\u8f86\u63a7\u5236\u4ee3\u7801\u793a\u4f8b import carla import random def main(): # \u8fde\u63a5\u5230\u5ba2\u6237\u7aef client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) # \u83b7\u5f97 World and Actors world = client.get_world() actors = world.get_actors() # \u4ece\u4e16\u754c\u83b7\u5f97\u4e00\u8f86\u968f\u673a\u8f66\u8f86\uff08\u5e94\u8be5\u81f3\u5c11\u6709\u4e00\u8f86\uff09 vehicle = random.choice([actor for actor in actors if 'vehicle' in actor.type_id]) # \u521b\u5efa\u8f66\u8f6e\u7269\u7406\u63a7\u5236 front_left_wheel = carla.WheelPhysicsControl(tire_friction=2.0, damping_rate=1.5, max_steer_angle=70.0, long_stiff_value=1000) front_right_wheel = carla.WheelPhysicsControl(tire_friction=2.0, damping_rate=1.5, max_steer_angle=70.0, long_stiff_value=1000) rear_left_wheel = carla.WheelPhysicsControl(tire_friction=3.0, damping_rate=1.5, max_steer_angle=0.0, long_stiff_value=1000) rear_right_wheel = carla.WheelPhysicsControl(tire_friction=3.0, damping_rate=1.5, max_steer_angle=0.0, long_stiff_value=1000) wheels = [front_left_wheel, front_right_wheel, rear_left_wheel, rear_right_wheel] # \u6539\u53d8\u8f66\u8f86\u7684\u8f66\u8f86\u7269\u7406\u63a7\u5236\u53c2\u6570 physics_control = vehicle.get_physics_control() physics_control.torque_curve = [carla.Vector2D(x=0, y=400), carla.Vector2D(x=1300, y=600)] physics_control.max_rpm = 10000 physics_control.moi = 1.0 physics_control.damping_rate_full_throttle = 0.0 physics_control.use_gear_autobox = True physics_control.gear_switch_time = 0.5 physics_control.clutch_strength = 10 physics_control.mass = 10000 physics_control.drag_coefficient = 0.25 physics_control.steering_curve = [carla.Vector2D(x=0, y=1), carla.Vector2D(x=100, y=1), carla.Vector2D(x=300, y=1)] physics_control.use_sweep_wheel_collision = True physics_control.wheels = wheels # \u5bf9\u8f66\u8f86\u5e94\u7528\u8f66\u8f86\u7269\u7406\u63a7\u5236 vehicle.apply_physics_control(physics_control) print(physics_control) if __name__ == '__main__': main() \u67e5\u770b\u8f66\u8f86\u9065\u6d4b\u6570\u636e \u901a\u8fc7\u8c03\u7528 Actor.enable_debug_telemetry \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8f66\u8f86\u9065\u6d4b\u7684\u53ef\u89c6\u5316\u3002\u8fd9\u5c06\u5728\u670d\u52a1\u5668\u7a97\u53e3\u4e0a\u63d0\u4f9b\u591a\u4e2a\u6307\u6807\u7684\u56fe\u5f62\u89c6\u56fe\u4ee5\u53ca\u4eff\u771f\u7a97\u53e3\u4e0a\u7684\u8f66\u8f86\u53c2\u8003\u70b9\u3002 \u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f4d\u4e8e PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c\u4e2d\u7684\u9065\u6d4b\u53ef\u89c6\u5316\u5de5\u5177 manual_control.py \u3002\u6309 T \u6fc0\u6d3b\u9065\u6d4b\u89c6\u56fe\u3002","title":"\u63a7\u5236\u8f66\u8f86\u7269\u7406\u6a21\u578b"},{"location":"tuto_G_control_vehicle_physics/#_1","text":"\u53ef\u4ee5\u8c03\u6574\u8f66\u8f86\u53ca\u5176\u8f66\u8f6e\u7684\u7269\u7406\u5c5e\u6027\u3002\u8fd9\u4e9b\u66f4\u6539 \u4ec5 \u5e94\u7528\u4e8e\u8fd0\u884c\u65f6\uff0c\u5e76\u4e14\u5728\u6267\u884c\u7ed3\u675f\u65f6\u5c06\u503c\u8bbe\u7f6e\u56de\u9ed8\u8ba4\u503c\u3002 \u8fd9\u4e9b\u5c5e\u6027\u901a\u8fc7 carla.VehiclePhysicsControl \u5bf9\u8c61\u8fdb\u884c\u63a7\u5236 \uff0c\u8be5\u5bf9\u8c61\u8fd8\u901a\u8fc7 carla.WheelPhysicsControl \u5bf9\u8c61\u63d0\u4f9b\u5bf9\u6bcf\u4e2a\u8f66\u8f6e\u7269\u7406\u7279\u6027\u7684\u63a7\u5236 \u3002 \u8f66\u8f86\u63a7\u5236\u4ee3\u7801\u793a\u4f8b \u67e5\u770b\u8f66\u8f86\u9065\u6d4b\u6570\u636e","title":"\u63a7\u5236\u548c\u76d1\u63a7\u8f66\u8f86\u7269\u7406\u7279\u6027"},{"location":"tuto_G_control_vehicle_physics/#_2","text":"import carla import random def main(): # \u8fde\u63a5\u5230\u5ba2\u6237\u7aef client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) # \u83b7\u5f97 World and Actors world = client.get_world() actors = world.get_actors() # \u4ece\u4e16\u754c\u83b7\u5f97\u4e00\u8f86\u968f\u673a\u8f66\u8f86\uff08\u5e94\u8be5\u81f3\u5c11\u6709\u4e00\u8f86\uff09 vehicle = random.choice([actor for actor in actors if 'vehicle' in actor.type_id]) # \u521b\u5efa\u8f66\u8f6e\u7269\u7406\u63a7\u5236 front_left_wheel = carla.WheelPhysicsControl(tire_friction=2.0, damping_rate=1.5, max_steer_angle=70.0, long_stiff_value=1000) front_right_wheel = carla.WheelPhysicsControl(tire_friction=2.0, damping_rate=1.5, max_steer_angle=70.0, long_stiff_value=1000) rear_left_wheel = carla.WheelPhysicsControl(tire_friction=3.0, damping_rate=1.5, max_steer_angle=0.0, long_stiff_value=1000) rear_right_wheel = carla.WheelPhysicsControl(tire_friction=3.0, damping_rate=1.5, max_steer_angle=0.0, long_stiff_value=1000) wheels = [front_left_wheel, front_right_wheel, rear_left_wheel, rear_right_wheel] # \u6539\u53d8\u8f66\u8f86\u7684\u8f66\u8f86\u7269\u7406\u63a7\u5236\u53c2\u6570 physics_control = vehicle.get_physics_control() physics_control.torque_curve = [carla.Vector2D(x=0, y=400), carla.Vector2D(x=1300, y=600)] physics_control.max_rpm = 10000 physics_control.moi = 1.0 physics_control.damping_rate_full_throttle = 0.0 physics_control.use_gear_autobox = True physics_control.gear_switch_time = 0.5 physics_control.clutch_strength = 10 physics_control.mass = 10000 physics_control.drag_coefficient = 0.25 physics_control.steering_curve = [carla.Vector2D(x=0, y=1), carla.Vector2D(x=100, y=1), carla.Vector2D(x=300, y=1)] physics_control.use_sweep_wheel_collision = True physics_control.wheels = wheels # \u5bf9\u8f66\u8f86\u5e94\u7528\u8f66\u8f86\u7269\u7406\u63a7\u5236 vehicle.apply_physics_control(physics_control) print(physics_control) if __name__ == '__main__': main()","title":"\u8f66\u8f86\u63a7\u5236\u4ee3\u7801\u793a\u4f8b"},{"location":"tuto_G_control_vehicle_physics/#_3","text":"\u901a\u8fc7\u8c03\u7528 Actor.enable_debug_telemetry \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8f66\u8f86\u9065\u6d4b\u7684\u53ef\u89c6\u5316\u3002\u8fd9\u5c06\u5728\u670d\u52a1\u5668\u7a97\u53e3\u4e0a\u63d0\u4f9b\u591a\u4e2a\u6307\u6807\u7684\u56fe\u5f62\u89c6\u56fe\u4ee5\u53ca\u4eff\u771f\u7a97\u53e3\u4e0a\u7684\u8f66\u8f86\u53c2\u8003\u70b9\u3002 \u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f4d\u4e8e PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c\u4e2d\u7684\u9065\u6d4b\u53ef\u89c6\u5316\u5de5\u5177 manual_control.py \u3002\u6309 T \u6fc0\u6d3b\u9065\u6d4b\u89c6\u56fe\u3002","title":"\u67e5\u770b\u8f66\u8f86\u9065\u6d4b\u6570\u636e"},{"location":"tuto_G_control_walker_skeletons/","text":"\u884c\u4eba\u9aa8\u9abc\u63a7\u5236 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7 Carla Python API \u624b\u52a8\u63a7\u5236\u884c\u4eba\u7684\u9aa8\u9abc\u5e76\u4e3a\u5176\u8bbe\u7f6e\u52a8\u753b\u3002\u6240\u6709\u53ef\u7528\u7c7b\u548c\u65b9\u6cd5\u7684\u53c2\u8003\u53ef\u4ee5\u5728 Python API \u53c2\u8003 \u4e2d\u627e\u5230 \u3002 \u884c\u4eba\u9aa8\u9abc\u7ed3\u6784 \u624b\u52a8\u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u8fde\u63a5\u5230\u6a21\u62df\u5668 \u751f\u6210\u884c\u4eba \u63a7\u5236\u884c\u4eba\u9aa8\u9abc Note \u672c\u6587\u6863\u5047\u8bbe\u7528\u6237\u719f\u6089 Python API\u3002 \u3002 \u7528\u6237\u5728\u9605\u8bfb\u672c\u6587\u6863\u4e4b\u524d\u5e94\u9605\u8bfb\u7b2c\u4e00\u6b65\u6559\u7a0b\u3002 \u6838\u5fc3\u6982\u5ff5 \u3002 \u884c\u4eba\u9aa8\u9abc\u7ed3\u6784 \u6240\u6709\u884c\u4eba\u90fd\u5177\u6709\u76f8\u540c\u7684\u9aa8\u9abc\u5c42\u6b21\u7ed3\u6784\u548c\u9aa8\u9abc\u540d\u79f0\u3002\u4e0b\u9762\u662f\u9aa8\u67b6\u5c42\u6b21\u7ed3\u6784\u7684\u56fe\u50cf\u3002 crl_root \u2514\u2500\u2500 crl_hips__C \u251c\u2500\u2500 crl_spine__C \u2502 \u2514\u2500\u2500 crl_spine01__C \u2502 \u251c\u2500\u2500 ctrl_shoulder__L \u2502 \u2502 \u2514\u2500\u2500 crl_arm__L \u2502 \u2502 \u2514\u2500\u2500 crl_foreArm__L \u2502 \u2502 \u2514\u2500\u2500 crl_hand__L \u2502 \u2502 \u251c\u2500\u2500 crl_handThumb__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumbEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handIndex__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndexEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handMiddle_L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddleEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handRing_L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRing01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRing02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRingEnd__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky_L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky01__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky02__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinkyEnd__L \u2502 \u251c\u2500\u2500 crl_neck__C \u2502 \u2502 \u2514\u2500\u2500 crl_Head__C \u2502 \u2502 \u251c\u2500\u2500 crl_eye__L \u2502 \u2502 \u2514\u2500\u2500 crl_eye__R \u2502 \u2514\u2500\u2500 crl_shoulder__R \u2502 \u2514\u2500\u2500 crl_arm__R \u2502 \u2514\u2500\u2500 crl_foreArm__R \u2502 \u2514\u2500\u2500 crl_hand__R \u2502 \u251c\u2500\u2500 crl_handThumb__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumbEnd__R \u2502 \u251c\u2500\u2500 crl_handIndex__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndexEnd__R \u2502 \u251c\u2500\u2500 crl_handMiddle_R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddleEnd__R \u2502 \u251c\u2500\u2500 crl_handRing_R \u2502 \u2502 \u2514\u2500\u2500 crl_handRing01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handRing02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handRingEnd__R \u2502 \u2514\u2500\u2500 crl_handPinky_R \u2502 \u2514\u2500\u2500 crl_handPinky01__R \u2502 \u2514\u2500\u2500 crl_handPinky02__R \u2502 \u2514\u2500\u2500 crl_handPinkyEnd__R \u251c\u2500\u2500 crl_thigh__L \u2502 \u2514\u2500\u2500 crl_leg__L \u2502 \u2514\u2500\u2500 crl_foot__L \u2502 \u2514\u2500\u2500 crl_toe__L \u2502 \u2514\u2500\u2500 crl_toeEnd__L \u2514\u2500\u2500 crl_thigh__R \u2514\u2500\u2500 crl_leg__R \u2514\u2500\u2500 crl_foot__R \u2514\u2500\u2500 crl_toe__R \u2514\u2500\u2500 crl_toeEnd__R \u624b\u52a8\u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u4ee5\u4e0b\u662f\u5982\u4f55\u901a\u8fc7 CARLA Python API \u66f4\u6539\u6b65\u884c\u8005\u9aa8\u9abc\u53d8\u6362\u7684\u8be6\u7ec6\u5206\u6b65\u793a\u4f8b \u8fde\u63a5\u5230\u6a21\u62df\u5668 \u5bfc\u5165\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\u5fc5\u8981\u5e93 import carla import random \u521d\u59cb\u5316 Carla \u5ba2\u6237\u7aef client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) \u751f\u6210\u884c\u4eba \u5728\u5730\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u70b9\u751f\u6210\u4e00\u4e2a\u968f\u673a\u884c\u4eba\u3002 world = client.get_world() blueprint = random.choice(self.world.get_blueprint_library().filter('walker.*')) spawn_points = world.get_map().get_spawn_points() spawn_point = random.choice(spawn_points) if spawn_points else carla.Transform() world.try_spawn_actor(blueprint, spawn_point) \u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u53ef\u4ee5\u901a\u8fc7\u5c06 WalkerBoneControl \u7c7b\u7684\u5b9e\u4f8b\u4f20\u9012\u7ed9\u884c\u4eba\u7684 apply_control \u51fd\u6570\u6765\u4fee\u6539\u884c\u4eba\u7684\u9aa8\u67b6\u3002WalkerBoneControl \u7c7b\u5305\u542b\u8981\u4fee\u6539\u7684\u9aa8\u9abc\u7684\u53d8\u6362\u3002\u5b83\u7684 bone_transforms \u6210\u5458\u662f\u6210\u5bf9\u503c\u5143\u7ec4\u7684\u5217\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u503c\u662f\u9aa8\u9abc\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u503c\u662f\u9aa8\u9abc\u53d8\u6362\u3002\u53ef\u4ee5\u5728\u6bcf\u4e2a\u523b\u5ea6\u4e0a\u8c03\u7528 apply_control \u51fd\u6570\u6765\u4e3a\u884c\u4eba\u7684\u9aa8\u9abc\u8bbe\u7f6e\u52a8\u753b\u3002\u6bcf\u4e2a\u53d8\u6362\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u90fd\u662f\u76f8\u5bf9\u4e8e\u5176\u7236\u53d8\u6362\u7684\u3002\u56e0\u6b64\uff0c\u5f53\u4fee\u6539\u7236\u9aa8\u9abc\u7684\u53d8\u6362\u65f6\uff0c\u5b50\u9aa8\u9abc\u5728\u6a21\u578b\u7a7a\u95f4\u4e2d\u7684\u53d8\u6362\u4e5f\u4f1a\u76f8\u5bf9\u6539\u53d8\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6b65\u884c\u8005\u7684\u624b\u8bbe\u7f6e\u4e3a\u56f4\u7ed5\u524d\u8f74\u65cb\u8f6c 90 \u5ea6\uff0c\u5e76\u4e14\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u539f\u70b9\u3002 control = carla.WalkerBoneControl() first_tuple = ('crl_hand__R', carla.Transform(rotation=carla.Rotation(roll=90))) second_tuple = ('crl_hand__L', carla.Transform(rotation=carla.Rotation(roll=90))) control.bone_transforms = [first_tuple, second_tuple] world.player.apply_control(control)","title":"\u63a7\u5236\u884c\u4eba\u9aa8\u9abc"},{"location":"tuto_G_control_walker_skeletons/#_1","text":"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7 Carla Python API \u624b\u52a8\u63a7\u5236\u884c\u4eba\u7684\u9aa8\u9abc\u5e76\u4e3a\u5176\u8bbe\u7f6e\u52a8\u753b\u3002\u6240\u6709\u53ef\u7528\u7c7b\u548c\u65b9\u6cd5\u7684\u53c2\u8003\u53ef\u4ee5\u5728 Python API \u53c2\u8003 \u4e2d\u627e\u5230 \u3002 \u884c\u4eba\u9aa8\u9abc\u7ed3\u6784 \u624b\u52a8\u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u8fde\u63a5\u5230\u6a21\u62df\u5668 \u751f\u6210\u884c\u4eba \u63a7\u5236\u884c\u4eba\u9aa8\u9abc Note \u672c\u6587\u6863\u5047\u8bbe\u7528\u6237\u719f\u6089 Python API\u3002 \u3002 \u7528\u6237\u5728\u9605\u8bfb\u672c\u6587\u6863\u4e4b\u524d\u5e94\u9605\u8bfb\u7b2c\u4e00\u6b65\u6559\u7a0b\u3002 \u6838\u5fc3\u6982\u5ff5 \u3002","title":"\u884c\u4eba\u9aa8\u9abc\u63a7\u5236"},{"location":"tuto_G_control_walker_skeletons/#_2","text":"\u6240\u6709\u884c\u4eba\u90fd\u5177\u6709\u76f8\u540c\u7684\u9aa8\u9abc\u5c42\u6b21\u7ed3\u6784\u548c\u9aa8\u9abc\u540d\u79f0\u3002\u4e0b\u9762\u662f\u9aa8\u67b6\u5c42\u6b21\u7ed3\u6784\u7684\u56fe\u50cf\u3002 crl_root \u2514\u2500\u2500 crl_hips__C \u251c\u2500\u2500 crl_spine__C \u2502 \u2514\u2500\u2500 crl_spine01__C \u2502 \u251c\u2500\u2500 ctrl_shoulder__L \u2502 \u2502 \u2514\u2500\u2500 crl_arm__L \u2502 \u2502 \u2514\u2500\u2500 crl_foreArm__L \u2502 \u2502 \u2514\u2500\u2500 crl_hand__L \u2502 \u2502 \u251c\u2500\u2500 crl_handThumb__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handThumbEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handIndex__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handIndexEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handMiddle_L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddleEnd__L \u2502 \u2502 \u251c\u2500\u2500 crl_handRing_L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRing01__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRing02__L \u2502 \u2502 \u2502 \u2514\u2500\u2500 crl_handRingEnd__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky_L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky01__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinky02__L \u2502 \u2502 \u2514\u2500\u2500 crl_handPinkyEnd__L \u2502 \u251c\u2500\u2500 crl_neck__C \u2502 \u2502 \u2514\u2500\u2500 crl_Head__C \u2502 \u2502 \u251c\u2500\u2500 crl_eye__L \u2502 \u2502 \u2514\u2500\u2500 crl_eye__R \u2502 \u2514\u2500\u2500 crl_shoulder__R \u2502 \u2514\u2500\u2500 crl_arm__R \u2502 \u2514\u2500\u2500 crl_foreArm__R \u2502 \u2514\u2500\u2500 crl_hand__R \u2502 \u251c\u2500\u2500 crl_handThumb__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumb02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handThumbEnd__R \u2502 \u251c\u2500\u2500 crl_handIndex__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndex02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handIndexEnd__R \u2502 \u251c\u2500\u2500 crl_handMiddle_R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddle02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handMiddleEnd__R \u2502 \u251c\u2500\u2500 crl_handRing_R \u2502 \u2502 \u2514\u2500\u2500 crl_handRing01__R \u2502 \u2502 \u2514\u2500\u2500 crl_handRing02__R \u2502 \u2502 \u2514\u2500\u2500 crl_handRingEnd__R \u2502 \u2514\u2500\u2500 crl_handPinky_R \u2502 \u2514\u2500\u2500 crl_handPinky01__R \u2502 \u2514\u2500\u2500 crl_handPinky02__R \u2502 \u2514\u2500\u2500 crl_handPinkyEnd__R \u251c\u2500\u2500 crl_thigh__L \u2502 \u2514\u2500\u2500 crl_leg__L \u2502 \u2514\u2500\u2500 crl_foot__L \u2502 \u2514\u2500\u2500 crl_toe__L \u2502 \u2514\u2500\u2500 crl_toeEnd__L \u2514\u2500\u2500 crl_thigh__R \u2514\u2500\u2500 crl_leg__R \u2514\u2500\u2500 crl_foot__R \u2514\u2500\u2500 crl_toe__R \u2514\u2500\u2500 crl_toeEnd__R","title":"\u884c\u4eba\u9aa8\u9abc\u7ed3\u6784"},{"location":"tuto_G_control_walker_skeletons/#_3","text":"\u4ee5\u4e0b\u662f\u5982\u4f55\u901a\u8fc7 CARLA Python API \u66f4\u6539\u6b65\u884c\u8005\u9aa8\u9abc\u53d8\u6362\u7684\u8be6\u7ec6\u5206\u6b65\u793a\u4f8b","title":"\u624b\u52a8\u63a7\u5236\u884c\u4eba\u9aa8\u9abc"},{"location":"tuto_G_control_walker_skeletons/#_4","text":"\u5bfc\u5165\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\u5fc5\u8981\u5e93 import carla import random \u521d\u59cb\u5316 Carla \u5ba2\u6237\u7aef client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0)","title":"\u8fde\u63a5\u5230\u6a21\u62df\u5668"},{"location":"tuto_G_control_walker_skeletons/#_5","text":"\u5728\u5730\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u70b9\u751f\u6210\u4e00\u4e2a\u968f\u673a\u884c\u4eba\u3002 world = client.get_world() blueprint = random.choice(self.world.get_blueprint_library().filter('walker.*')) spawn_points = world.get_map().get_spawn_points() spawn_point = random.choice(spawn_points) if spawn_points else carla.Transform() world.try_spawn_actor(blueprint, spawn_point)","title":"\u751f\u6210\u884c\u4eba"},{"location":"tuto_G_control_walker_skeletons/#_6","text":"\u53ef\u4ee5\u901a\u8fc7\u5c06 WalkerBoneControl \u7c7b\u7684\u5b9e\u4f8b\u4f20\u9012\u7ed9\u884c\u4eba\u7684 apply_control \u51fd\u6570\u6765\u4fee\u6539\u884c\u4eba\u7684\u9aa8\u67b6\u3002WalkerBoneControl \u7c7b\u5305\u542b\u8981\u4fee\u6539\u7684\u9aa8\u9abc\u7684\u53d8\u6362\u3002\u5b83\u7684 bone_transforms \u6210\u5458\u662f\u6210\u5bf9\u503c\u5143\u7ec4\u7684\u5217\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u503c\u662f\u9aa8\u9abc\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u503c\u662f\u9aa8\u9abc\u53d8\u6362\u3002\u53ef\u4ee5\u5728\u6bcf\u4e2a\u523b\u5ea6\u4e0a\u8c03\u7528 apply_control \u51fd\u6570\u6765\u4e3a\u884c\u4eba\u7684\u9aa8\u9abc\u8bbe\u7f6e\u52a8\u753b\u3002\u6bcf\u4e2a\u53d8\u6362\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u90fd\u662f\u76f8\u5bf9\u4e8e\u5176\u7236\u53d8\u6362\u7684\u3002\u56e0\u6b64\uff0c\u5f53\u4fee\u6539\u7236\u9aa8\u9abc\u7684\u53d8\u6362\u65f6\uff0c\u5b50\u9aa8\u9abc\u5728\u6a21\u578b\u7a7a\u95f4\u4e2d\u7684\u53d8\u6362\u4e5f\u4f1a\u76f8\u5bf9\u6539\u53d8\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6b65\u884c\u8005\u7684\u624b\u8bbe\u7f6e\u4e3a\u56f4\u7ed5\u524d\u8f74\u65cb\u8f6c 90 \u5ea6\uff0c\u5e76\u4e14\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u539f\u70b9\u3002 control = carla.WalkerBoneControl() first_tuple = ('crl_hand__R', carla.Transform(rotation=carla.Rotation(roll=90))) second_tuple = ('crl_hand__L', carla.Transform(rotation=carla.Rotation(roll=90))) control.bone_transforms = [first_tuple, second_tuple] world.player.apply_control(control)","title":"\u63a7\u5236\u884c\u4eba\u9aa8\u9abc"},{"location":"tuto_G_instance_segmentation_sensor/","text":"\u5b9e\u4f8b\u5206\u5272\u4f20\u611f\u5668 \u5b9e\u4f8b\u5206\u5272(Instance segmentation) \u662f\u4e00\u79cd\u65b0\u578b\u76f8\u673a\u4f20\u611f\u5668\uff0c\u53ef\u4e3a\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u552f\u4e00\u7684\u50cf\u7d20\u503c\u3002\u8fd9\u4e0e\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u5f62\u6210\u5bf9\u6bd4\uff0c\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u5bf9\u4e8e\u76f8\u540c\u5bf9\u8c61\u7c7b\u7684\u5b9e\u4f8b\uff08\u4f8b\u5982\u8f66\u8f86\uff09\u5177\u6709\u76f8\u540c\u7684 ID\u3002 \u8981\u751f\u6210\u8bed\u4e49\u5206\u5272\u76f8\u673a\uff0c\u6211\u4eec\u9700\u8981 sensor.camera.instance_segmentation \u84dd\u56fe\uff1a instance_camera_bp = world.get_blueprint_library().find('sensor.camera.instance_segmentation') \u793a\u4f8b \u6211\u4eec\u5c06\u9996\u5148\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5b9e\u4f8b\u5206\u5272\u76f8\u673a\u7684\u4e16\u754c\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u751f\u6210\u5927\u91cf\u8f66\u8f86\u3002 \u8fde\u63a5\u5230\u670d\u52a1\u5668\u5e76\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 import carla import random import time import queue # Connect to client and set Carla server to synchronous mode client = carla.Client('localhost', 2000) world = client.get_world() settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) \u8bbe\u7f6e\u5b9e\u4f8b\u5206\u5272\u4f20\u611f\u5668\u5e76\u5c06\u5176\u751f\u6210\u5728\u6240\u9700\u7684\u5730\u56fe\u4f4d\u7f6e\u3002 # Get the map spawn points and the spectator spawn_points = world.get_map().get_spawn_points() spectator = world.get_spectator() # Set the camera to some location in the map cam_location = carla.Location(x=-46., y=152, z=18) cam_rotation = carla.Rotation(pitch=-21, yaw=-93.4, roll=0) camera_transform = carla.Transform(location=cam_location, rotation=cam_rotation) spectator.set_transform(camera_transform) # Retrieve the semantic camera blueprint and spawn the camera instance_camera_bp = world.get_blueprint_library().find('sensor.camera.instance_segmentation') instance_camera = world.try_spawn_actor(instance_camera_bp, camera_transform) \u5728\u6444\u50cf\u673a\u5468\u56f4\u751f\u6210\u8f66\u8f86\uff0c\u7528\u5927\u91cf\u5bf9\u8c61\u5b9e\u4f8b\u586b\u5145\u573a\u666f\u3002 # Spawn vehicles in an 80m vicinity of the camera vehicle_bp_library = world.get_blueprint_library().filter('*vehicle*') radius = 80 for spawn_point in spawn_points: vec = [spawn_point.location.x - cam_location.x, spawn_point.location.y - cam_location.y] if vec[0]*vec[0] + vec[1]*vec[1] < radius*radius: world.try_spawn_actor(random.choice(vehicle_bp_library), spawn_point) world.tick() \u73b0\u5728\u751f\u6210\u56fe\u50cf\u3002 # Save the image to disk instance_image_queue = queue.Queue() instance_camera.listen(instance_image_queue.put) world.tick() instance_image=instance_image_queue.get() instance_image.save_to_disk('instance_segmentation.png') \u56fe\u50cf\u8f93\u51fa \u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u5b9e\u4f8b\u5206\u5272\u56fe\u50cf\u7684\u5b9e\u4f8b ID \u7f16\u7801\u5728 RGB \u56fe\u50cf\u6587\u4ef6\u7684 G \u548c B \u901a\u9053\u4e2d\u3002R\u901a\u9053\u5305\u542b\u6807\u51c6\u8bed\u4e49ID\u3002","title":"\u5b9e\u4f8b\u5206\u5272\u4f20\u611f\u5668"},{"location":"tuto_G_instance_segmentation_sensor/#_1","text":"\u5b9e\u4f8b\u5206\u5272(Instance segmentation) \u662f\u4e00\u79cd\u65b0\u578b\u76f8\u673a\u4f20\u611f\u5668\uff0c\u53ef\u4e3a\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u552f\u4e00\u7684\u50cf\u7d20\u503c\u3002\u8fd9\u4e0e\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u5f62\u6210\u5bf9\u6bd4\uff0c\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u5bf9\u4e8e\u76f8\u540c\u5bf9\u8c61\u7c7b\u7684\u5b9e\u4f8b\uff08\u4f8b\u5982\u8f66\u8f86\uff09\u5177\u6709\u76f8\u540c\u7684 ID\u3002 \u8981\u751f\u6210\u8bed\u4e49\u5206\u5272\u76f8\u673a\uff0c\u6211\u4eec\u9700\u8981 sensor.camera.instance_segmentation \u84dd\u56fe\uff1a instance_camera_bp = world.get_blueprint_library().find('sensor.camera.instance_segmentation')","title":"\u5b9e\u4f8b\u5206\u5272\u4f20\u611f\u5668"},{"location":"tuto_G_instance_segmentation_sensor/#_2","text":"\u6211\u4eec\u5c06\u9996\u5148\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u5b9e\u4f8b\u5206\u5272\u76f8\u673a\u7684\u4e16\u754c\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u751f\u6210\u5927\u91cf\u8f66\u8f86\u3002 \u8fde\u63a5\u5230\u670d\u52a1\u5668\u5e76\u8bbe\u7f6e\u4e3a\u540c\u6b65\u6a21\u5f0f\u3002 import carla import random import time import queue # Connect to client and set Carla server to synchronous mode client = carla.Client('localhost', 2000) world = client.get_world() settings = world.get_settings() settings.synchronous_mode = True world.apply_settings(settings) \u8bbe\u7f6e\u5b9e\u4f8b\u5206\u5272\u4f20\u611f\u5668\u5e76\u5c06\u5176\u751f\u6210\u5728\u6240\u9700\u7684\u5730\u56fe\u4f4d\u7f6e\u3002 # Get the map spawn points and the spectator spawn_points = world.get_map().get_spawn_points() spectator = world.get_spectator() # Set the camera to some location in the map cam_location = carla.Location(x=-46., y=152, z=18) cam_rotation = carla.Rotation(pitch=-21, yaw=-93.4, roll=0) camera_transform = carla.Transform(location=cam_location, rotation=cam_rotation) spectator.set_transform(camera_transform) # Retrieve the semantic camera blueprint and spawn the camera instance_camera_bp = world.get_blueprint_library().find('sensor.camera.instance_segmentation') instance_camera = world.try_spawn_actor(instance_camera_bp, camera_transform) \u5728\u6444\u50cf\u673a\u5468\u56f4\u751f\u6210\u8f66\u8f86\uff0c\u7528\u5927\u91cf\u5bf9\u8c61\u5b9e\u4f8b\u586b\u5145\u573a\u666f\u3002 # Spawn vehicles in an 80m vicinity of the camera vehicle_bp_library = world.get_blueprint_library().filter('*vehicle*') radius = 80 for spawn_point in spawn_points: vec = [spawn_point.location.x - cam_location.x, spawn_point.location.y - cam_location.y] if vec[0]*vec[0] + vec[1]*vec[1] < radius*radius: world.try_spawn_actor(random.choice(vehicle_bp_library), spawn_point) world.tick() \u73b0\u5728\u751f\u6210\u56fe\u50cf\u3002 # Save the image to disk instance_image_queue = queue.Queue() instance_camera.listen(instance_image_queue.put) world.tick() instance_image=instance_image_queue.get() instance_image.save_to_disk('instance_segmentation.png')","title":"\u793a\u4f8b"},{"location":"tuto_G_instance_segmentation_sensor/#_3","text":"\u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u5b9e\u4f8b\u5206\u5272\u56fe\u50cf\u7684\u5b9e\u4f8b ID \u7f16\u7801\u5728 RGB \u56fe\u50cf\u6587\u4ef6\u7684 G \u548c B \u901a\u9053\u4e2d\u3002R\u901a\u9053\u5305\u542b\u6807\u51c6\u8bed\u4e49ID\u3002","title":"\u56fe\u50cf\u8f93\u51fa"},{"location":"tuto_G_openstreetmap/","text":"\u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe \u5728\u672c\u6307\u5357\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\uff1a \u5982\u4f55\u4ece OpenStreetMaps \u5bfc\u51fa\u5730\u56fe\u3002 CARLA \u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u4e0d\u540c\u683c\u5f0f\u7684\u5730\u56fe\u4ee5\u53ca\u6bcf\u79cd\u683c\u5f0f\u7684\u9650\u5236\u3002 \u5982\u4f55\u5c06\u672c\u673a .osm \u683c\u5f0f\u8f6c\u6362\u4e3a .xodr \u3002 \u5982\u4f55\u5728 .xodr \u6587\u4ef6\u4e2d\u5305\u542b\u4ea4\u901a\u706f\u4fe1\u606f\u3002 \u5982\u4f55\u5728 CARLA \u4eff\u771f\u4e2d\u8fd0\u884c\u6700\u7ec8\u5730\u56fe\u3002 OpenStreetMap \u662f\u7531\u6570\u5343\u540d\u8d21\u732e\u8005\u5f00\u53d1\u7684\u5f00\u653e\u6570\u636e\u4e16\u754c\u5730\u56fe\uff0c\u5e76\u6839\u636e Open Data Commons Open Database License \u83b7\u5f97\u8bb8\u53ef\u3002\u5730\u56fe\u7684\u5404\u4e2a\u90e8\u5206\u53ef\u4ee5\u5bfc\u51fa\u4e3a XML \u683c\u5f0f\u7684 .osm \u6587\u4ef6\u3002CARLA \u53ef\u4ee5\u5c06\u6b64\u6587\u4ef6\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f\u5e76\u4f7f\u7528 OpenDRIVE Standalone Mode \u5bfc\u5165\u5b83\u3002 \u4f7f\u7528 OpenStreetMap \u5bfc\u51fa\u5730\u56fe \u5728 CARLA \u4e2d\u4f7f\u7528 OpenStreetMaps \u5c06 OpenStreetMap \u683c\u5f0f\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f Linux Windows \u751f\u6210\u4ea4\u901a\u706f \u5bfc\u5165 CARLA \u4f7f\u7528 OpenStreetMap \u5bfc\u51fa\u5730\u56fe \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4ece Open Street Map \u5bfc\u51fa\u6240\u9700\u7684\u5730\u56fe\u4fe1\u606f\uff1a 1. \u5bfc\u822a\u81f3 Open Street Map \u7f51\u7ad9 \u3002\u60a8\u5c06\u5728\u7a97\u53e3\u53f3\u4fa7\u770b\u5230\u5730\u56fe\u89c6\u56fe\u548c\u4e00\u4e2a\u9762\u677f\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u914d\u7f6e\u4e0d\u540c\u7684\u5730\u56fe\u56fe\u5c42\u3001\u67e5\u8be2\u4e0d\u540c\u7684\u8981\u7d20\u3001\u5207\u6362\u56fe\u4f8b\u7b49\u3002 2. \u641c\u7d22\u60a8\u60f3\u8981\u7684\u4f4d\u7f6e\u5e76\u653e\u5927\u5230\u7279\u5b9a\u533a\u57df\u3002 \u7b14\u8bb0 \u5982\u679c\u60a8\u60f3\u4f7f\u7528\u5927\u8303\u56f4\u7684\u5730\u56fe\uff0c\u4f8b\u5982\u5df4\u9ece\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528CARLA\u7684 __\u5927\u5730\u56fe\u529f\u80fd \u3002 3. \u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u89d2\u7684\u201c\u5bfc\u51fa( Export )\u201d\u4ee5\u6253\u5f00\u201c\u5bfc\u51fa( Export )\u201d\u9762\u677f\u3002 4. \u5355\u51fb\u201c \u5bfc\u51fa \u201d\u9762\u677f\u4e2d\u7684\u201c_\u624b\u52a8_\u9009\u62e9\u4e0d\u540c\u533a\u57df\u201d\u3002 5. \u901a\u8fc7\u62d6\u52a8\u89c6\u53e3\u4e2d\u65b9\u5f62\u533a\u57df\u7684\u89d2\u6765\u9009\u62e9\u81ea\u5b9a\u4e49\u533a\u57df\u3002 6. \u5355\u51fb\u5bfc\u51fa\u9762\u677f\u4e2d\u7684 \u5bfc\u51fa \u6309\u94ae\uff0c\u5c06\u6240\u9009\u533a\u57df\u7684\u5730\u56fe\u4fe1\u606f\u4fdd\u5b58\u4e3a .osm \u6587\u4ef6\u3002 \u5728 CARLA \u4e2d\u4f7f\u7528 OpenStreetMaps \u5f00\u653e\u8857\u9053\u5730\u56fe\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u60a8\u4f7f\u7528\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u6570\u636e\u662f\u5426\u4e3a\u539f\u59cb\u683c\u5f0f\uff0c\u6216\u8005\u60a8\u662f\u5426\u4f7f\u7528\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bf4\u660e\u7684\u8f6c\u6362\u65b9\u6cd5\u6765\u8f6c\u6362 .osm \u6587\u4ef6\u3002 .osm \u4fdd\u7559\u6587\u4ef6\u662f\u6700\u53d7\u9650\u5236\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5141\u8bb8\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u3002 \u53ef\u7528 .xodr \u683c\u5f0f\u9009\u9879\uff1a \u5728\u60a8\u81ea\u5df1\u7684\u811a\u672c\u4e2d\u751f\u6210\u5730\u56fe\u3002 \u8be5\u65b9\u6cd5\u5141\u8bb8\u53c2\u6570\u5316\u3002 \u5c06\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA \u7684 config.py \u3002 __ \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002__ \u53ef\u7528 .osm \u683c\u5f0f\u9009\u9879\uff1a \u5c06\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA \u7684 config.py \u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u63d0\u4f9b\u6709\u5173\u4e0a\u9762\u5217\u51fa\u7684\u9009\u9879\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u5c06 OpenStreetMap \u683c\u5f0f\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f \u672c\u8282\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Python API \u5c06\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u4e2d\u5bfc\u51fa\u7684 .osm \u6587\u4ef6\u8f6c\u6362\u4e3a .xodr \u683c\u5f0f\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002 carla.Osm2OdrSettings \u7c7b\u7528\u4e8e\u914d\u7f6e\u8f6c\u6362\u8bbe\u7f6e\uff0c\u4f8b\u5982\u504f\u79fb\u503c\u3001\u4ea4\u901a\u706f\u751f\u6210\u3001\u539f\u70b9\u5750\u6807\u7b49\u3002\u53ef\u914d\u7f6e\u53c2\u6570\u7684\u5b8c\u6574\u5217\u8868\u53ef\u4ee5\u5728 Python API \u6587\u6863 \u4e2d\u627e\u5230\u3002 carla.Osm2Odr \u7c7b\u4f7f\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u6765\u89e3\u6790 .osm \u6570\u636e\u5e76\u4ee5 .xodr \u683c\u5f0f\u8f93\u51fa\u3002 \u5728 Windows \u4e2d\uff0c .osm \u6587\u4ef6\u5fc5\u987b\u7f16\u7801\u4e3a UTF-8 . \u8fd9\u5728 Linux \u4e2d\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u4ee5\u4e0b\u662f\u793a\u4f8b\u4ee3\u7801\u7247\u6bb5\uff0c\u663e\u793a\u5982\u4f55\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u6587\u4ef6\u8f6c\u6362\uff1a Linux # \u8bfb\u53d6 .osm \u6570\u636e f = open(\"path/to/osm/file\", 'r') osm_data = f.read() f.close() # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002values. settings = carla.Osm2OdrSettings() # \u8bbe\u7f6e\u5bfc\u51fa\u5230 OpenDRIVE \u7684 OSM \u9053\u8def\u7c7b\u578b\u3002 settings.set_osm_way_types([\"motorway\", \"motorway_link\", \"trunk\", \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\", \"tertiary_link\", \"unclassified\", \"residential\"]) # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) # \u4fdd\u5b58\u4e3a opendrive \u6587\u4ef6 f = open(\"path/to/output/file\", 'w') f.write(xodr_data) f.close() Windows import io # \u8bfb\u53d6 .osm \u6570\u636e f = io.open(\"test\", mode=\"r\", encoding=\"utf-8\") osm_data = f.read() f.close() # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002 settings = carla.Osm2OdrSettings() # \u8bbe\u7f6e\u5bfc\u51fa\u6210 OpenDRIVE \u7684 OSM \u9053\u8def\u7c7b\u578b settings.set_osm_way_types([\"motorway\", \"motorway_link\", \"trunk\", \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\", \"tertiary_link\", \"unclassified\", \"residential\"]) # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) # \u4fdd\u5b58\u6210 opendrive \u6587\u4ef6 f = open(\"path/to/output/file\", 'w') f.write(xodr_data) f.close() \u751f\u6210\u4ea4\u901a\u706f Open Street Map \u6570\u636e\u53ef\u4ee5\u5b9a\u4e49\u54ea\u4e9b\u8def\u53e3\u53d7\u4ea4\u901a\u706f\u63a7\u5236\u3002\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u6b64\u4ea4\u901a\u706f\u6570\u636e\uff0c\u60a8\u9700\u8981\u5728\u5c06 .osm \u6587\u4ef6\u8f6c\u6362\u4e3a .xodr \u683c\u5f0f\u4e4b\u524d\u901a\u8fc7 Python API \u5728 OSM \u5730\u56fe\u8bbe\u7f6e\u4e2d\u542f\u7528\u5b83\uff1a # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002 settings = carla.Osm2OdrSettings() # \u542f\u7528\u4ece OSM \u6570\u636e\u4e2d\u751f\u6210\u4ea4\u901a\u706f settings.generate_traffic_lights = True # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) \u4ea4\u901a\u706f\u6570\u636e\u8d28\u91cf\u53ef\u80fd\u56e0\u63d0\u53d6\u6570\u636e\u7684\u533a\u57df\u800c\u5f02\u3002\u4e00\u4e9b\u4ea4\u901a\u706f\u4fe1\u606f\u53ef\u80fd\u5b8c\u5168\u4e22\u5931\u3002\u8981\u514b\u670d\u8fd9\u4e9b\u9650\u5236\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API \u5c06\u6240\u6709\u8def\u53e3\u914d\u7f6e\u4e3a\u7531\u4ea4\u901a\u706f\u63a7\u5236\uff1a settings.all_junctions_with_traffic_lights = True \u60a8\u8fd8\u53ef\u4ee5\u6392\u9664\u67d0\u4e9b\u9053\u8def\uff08\u4f8b\u5982\u9ad8\u901f\u516c\u8def\u94fe\u63a5\uff09\u751f\u6210\u4ea4\u901a\u4fe1\u53f7\u706f\uff1a settings.set_traffic_light_excluded_way_types([\"motorway_link\"]) \u5bfc\u5165 CARLA \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u53ef\u7528\u7684\u4e0d\u540c\u9009\u9879\uff0c\u901a\u8fc7 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u5c06 Open Street Map \u4fe1\u606f\u63d0\u53d6\u5230 CARLA \u4e2d\u3002 \u6709\u4ee5\u4e0b\u4e09\u4e2a\u9009\u9879\u53ef\u4f9b\u9009\u62e9\uff1a A) \u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49 Python \u811a\u672c\u4e2d\u7684\u8f6c\u6362 .xodr \u6587\u4ef6 \u751f\u6210\u5730\u56fe\u8be5\u65b9\u6cd5\u5141\u8bb8\u53c2\u6570\u5316 \u3002 B) \u5c06\u8f6c\u6362\u540e\u7684 .xodr \u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA config.py \u811a\u672c\u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002 C) \u5c06\u539f\u59cb .osm \u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA config.py \u811a\u672c\u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002 A) \u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u811a\u672c \u751f\u6210\u65b0\u5730\u56fe\u5e76\u963b\u6b62\u6a21\u62df\uff0c\u76f4\u5230\u901a\u8fc7\u8c03\u7528 client.generate_opendrive_world() \u51c6\u5907\u5c31\u7eea\u3002\u4f7f\u7528 carla.OpendriveGenerationParameters \u7c7b\u914d\u7f6e\u7f51\u683c\u751f\u6210\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff1a vertex_distance = 2.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d max_road_length = 500.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d wall_height = 0.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d extra_width = 0.6 # \u4ee5\u7c73\u4e3a\u5355\u4f4d world = client.generate_opendrive_world( xodr_xml, carla.OpendriveGenerationParameters( vertex_distance=vertex_distance, max_road_length=max_road_length, wall_height=wall_height, additional_width=extra_width, smooth_junctions=True, enable_mesh_visibility=True)) \u7b14\u8bb0 \u5f3a\u70c8\u63a8\u8350 wall_height = 0.0 \u3002OpenStreetMap \u5c06\u76f8\u53cd\u65b9\u5411\u7684\u8f66\u9053\u5b9a\u4e49\u4e3a\u4e0d\u540c\u7684\u9053\u8def\u3002\u5982\u679c\u751f\u6210\u5899\u58c1\uff0c\u8fd9\u5c06\u5bfc\u81f4\u5899\u58c1\u91cd\u53e0\u548c\u610f\u5916\u7684\u78b0\u649e\u3002 B) \u5c06 .xodr \u4f20\u9012\u7ed9 config.py \u542f\u52a8 CARLA \u670d\u52a1\u5668\u540e\uff0c\u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u52a0\u8f7d Open Street Map\uff1a cd PythonAPI/util python3 config.py -x=/path/to/xodr/file Default parameters will be used. C) \u5c06 .osm \u4f20\u9012\u7ed9 config.py \u542f\u52a8 CARLA \u670d\u52a1\u5668\u540e\uff0c\u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u52a0\u8f7d Open Street Map\uff1a cd PythonAPI/util python3 config.py --osm-path=/path/to/OSM/file \u5c06\u4f7f\u7528 \u9ed8\u8ba4\u53c2\u6570 \u3002 \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u5730\u56fe\u90fd\u5c06\u88ab\u5bfc\u5165\u5230 CARLA \u4e2d\uff0c\u7ed3\u679c\u5e94\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\uff1a \u4f7f\u7528 OpenStreetMap \u751f\u6210 CARLA \u5730\u56fe\u7684\u7ed3\u679c\u3002 \u8b66\u544a \u751f\u6210\u7684\u9053\u8def\u5728\u5730\u56fe\u7684\u8fb9\u754c\u5904\u7a81\u7136\u7ed3\u675f\u3002\u5f53\u8f66\u8f86\u65e0\u6cd5\u627e\u5230\u4e0b\u4e00\u4e2a\u8def\u5f84\u70b9\u65f6\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4ea4\u901a\u7ba1\u7406\u5668\u5d29\u6e83\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6d41\u91cf\u7ba1\u7406\u5668\u4e2d\u7684 OSM \u6a21\u5f0f\u9ed8\u8ba4\u8bbe\u7f6e\u4e3aTrue ( set_osm_mode() )\u3002\u8fd9\u5c06\u5728\u5fc5\u8981\u65f6\u663e\u793a\u8b66\u544a\u5e76\u6467\u6bc1\u8f66\u8f86\u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u548c\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 CARLA \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"\u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe"},{"location":"tuto_G_openstreetmap/#openstreetmap","text":"\u5728\u672c\u6307\u5357\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\uff1a \u5982\u4f55\u4ece OpenStreetMaps \u5bfc\u51fa\u5730\u56fe\u3002 CARLA \u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u4e0d\u540c\u683c\u5f0f\u7684\u5730\u56fe\u4ee5\u53ca\u6bcf\u79cd\u683c\u5f0f\u7684\u9650\u5236\u3002 \u5982\u4f55\u5c06\u672c\u673a .osm \u683c\u5f0f\u8f6c\u6362\u4e3a .xodr \u3002 \u5982\u4f55\u5728 .xodr \u6587\u4ef6\u4e2d\u5305\u542b\u4ea4\u901a\u706f\u4fe1\u606f\u3002 \u5982\u4f55\u5728 CARLA \u4eff\u771f\u4e2d\u8fd0\u884c\u6700\u7ec8\u5730\u56fe\u3002 OpenStreetMap \u662f\u7531\u6570\u5343\u540d\u8d21\u732e\u8005\u5f00\u53d1\u7684\u5f00\u653e\u6570\u636e\u4e16\u754c\u5730\u56fe\uff0c\u5e76\u6839\u636e Open Data Commons Open Database License \u83b7\u5f97\u8bb8\u53ef\u3002\u5730\u56fe\u7684\u5404\u4e2a\u90e8\u5206\u53ef\u4ee5\u5bfc\u51fa\u4e3a XML \u683c\u5f0f\u7684 .osm \u6587\u4ef6\u3002CARLA \u53ef\u4ee5\u5c06\u6b64\u6587\u4ef6\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f\u5e76\u4f7f\u7528 OpenDRIVE Standalone Mode \u5bfc\u5165\u5b83\u3002 \u4f7f\u7528 OpenStreetMap \u5bfc\u51fa\u5730\u56fe \u5728 CARLA \u4e2d\u4f7f\u7528 OpenStreetMaps \u5c06 OpenStreetMap \u683c\u5f0f\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f Linux Windows \u751f\u6210\u4ea4\u901a\u706f \u5bfc\u5165 CARLA","title":"\u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe"},{"location":"tuto_G_openstreetmap/#openstreetmap_1","text":"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4ece Open Street Map \u5bfc\u51fa\u6240\u9700\u7684\u5730\u56fe\u4fe1\u606f\uff1a 1. \u5bfc\u822a\u81f3 Open Street Map \u7f51\u7ad9 \u3002\u60a8\u5c06\u5728\u7a97\u53e3\u53f3\u4fa7\u770b\u5230\u5730\u56fe\u89c6\u56fe\u548c\u4e00\u4e2a\u9762\u677f\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u914d\u7f6e\u4e0d\u540c\u7684\u5730\u56fe\u56fe\u5c42\u3001\u67e5\u8be2\u4e0d\u540c\u7684\u8981\u7d20\u3001\u5207\u6362\u56fe\u4f8b\u7b49\u3002 2. \u641c\u7d22\u60a8\u60f3\u8981\u7684\u4f4d\u7f6e\u5e76\u653e\u5927\u5230\u7279\u5b9a\u533a\u57df\u3002 \u7b14\u8bb0 \u5982\u679c\u60a8\u60f3\u4f7f\u7528\u5927\u8303\u56f4\u7684\u5730\u56fe\uff0c\u4f8b\u5982\u5df4\u9ece\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528CARLA\u7684 __\u5927\u5730\u56fe\u529f\u80fd \u3002 3. \u5355\u51fb\u7a97\u53e3\u5de6\u4e0a\u89d2\u7684\u201c\u5bfc\u51fa( Export )\u201d\u4ee5\u6253\u5f00\u201c\u5bfc\u51fa( Export )\u201d\u9762\u677f\u3002 4. \u5355\u51fb\u201c \u5bfc\u51fa \u201d\u9762\u677f\u4e2d\u7684\u201c_\u624b\u52a8_\u9009\u62e9\u4e0d\u540c\u533a\u57df\u201d\u3002 5. \u901a\u8fc7\u62d6\u52a8\u89c6\u53e3\u4e2d\u65b9\u5f62\u533a\u57df\u7684\u89d2\u6765\u9009\u62e9\u81ea\u5b9a\u4e49\u533a\u57df\u3002 6. \u5355\u51fb\u5bfc\u51fa\u9762\u677f\u4e2d\u7684 \u5bfc\u51fa \u6309\u94ae\uff0c\u5c06\u6240\u9009\u533a\u57df\u7684\u5730\u56fe\u4fe1\u606f\u4fdd\u5b58\u4e3a .osm \u6587\u4ef6\u3002","title":"\u4f7f\u7528 OpenStreetMap \u5bfc\u51fa\u5730\u56fe"},{"location":"tuto_G_openstreetmap/#carla-openstreetmaps","text":"\u5f00\u653e\u8857\u9053\u5730\u56fe\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u60a8\u4f7f\u7528\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u6570\u636e\u662f\u5426\u4e3a\u539f\u59cb\u683c\u5f0f\uff0c\u6216\u8005\u60a8\u662f\u5426\u4f7f\u7528\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bf4\u660e\u7684\u8f6c\u6362\u65b9\u6cd5\u6765\u8f6c\u6362 .osm \u6587\u4ef6\u3002 .osm \u4fdd\u7559\u6587\u4ef6\u662f\u6700\u53d7\u9650\u5236\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5141\u8bb8\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u3002 \u53ef\u7528 .xodr \u683c\u5f0f\u9009\u9879\uff1a \u5728\u60a8\u81ea\u5df1\u7684\u811a\u672c\u4e2d\u751f\u6210\u5730\u56fe\u3002 \u8be5\u65b9\u6cd5\u5141\u8bb8\u53c2\u6570\u5316\u3002 \u5c06\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA \u7684 config.py \u3002 __ \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002__ \u53ef\u7528 .osm \u683c\u5f0f\u9009\u9879\uff1a \u5c06\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA \u7684 config.py \u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u63d0\u4f9b\u6709\u5173\u4e0a\u9762\u5217\u51fa\u7684\u9009\u9879\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u5728 CARLA \u4e2d\u4f7f\u7528 OpenStreetMaps"},{"location":"tuto_G_openstreetmap/#openstreetmap-opendrive","text":"\u672c\u8282\u6f14\u793a\u5982\u4f55\u4f7f\u7528 Python API \u5c06\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u4e2d\u5bfc\u51fa\u7684 .osm \u6587\u4ef6\u8f6c\u6362\u4e3a .xodr \u683c\u5f0f\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002 carla.Osm2OdrSettings \u7c7b\u7528\u4e8e\u914d\u7f6e\u8f6c\u6362\u8bbe\u7f6e\uff0c\u4f8b\u5982\u504f\u79fb\u503c\u3001\u4ea4\u901a\u706f\u751f\u6210\u3001\u539f\u70b9\u5750\u6807\u7b49\u3002\u53ef\u914d\u7f6e\u53c2\u6570\u7684\u5b8c\u6574\u5217\u8868\u53ef\u4ee5\u5728 Python API \u6587\u6863 \u4e2d\u627e\u5230\u3002 carla.Osm2Odr \u7c7b\u4f7f\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u6765\u89e3\u6790 .osm \u6570\u636e\u5e76\u4ee5 .xodr \u683c\u5f0f\u8f93\u51fa\u3002 \u5728 Windows \u4e2d\uff0c .osm \u6587\u4ef6\u5fc5\u987b\u7f16\u7801\u4e3a UTF-8 . \u8fd9\u5728 Linux \u4e2d\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u4ee5\u4e0b\u662f\u793a\u4f8b\u4ee3\u7801\u7247\u6bb5\uff0c\u663e\u793a\u5982\u4f55\u6839\u636e\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u6587\u4ef6\u8f6c\u6362\uff1a","title":"\u5c06 OpenStreetMap \u683c\u5f0f\u8f6c\u6362\u4e3a OpenDRIVE \u683c\u5f0f"},{"location":"tuto_G_openstreetmap/#linux","text":"# \u8bfb\u53d6 .osm \u6570\u636e f = open(\"path/to/osm/file\", 'r') osm_data = f.read() f.close() # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002values. settings = carla.Osm2OdrSettings() # \u8bbe\u7f6e\u5bfc\u51fa\u5230 OpenDRIVE \u7684 OSM \u9053\u8def\u7c7b\u578b\u3002 settings.set_osm_way_types([\"motorway\", \"motorway_link\", \"trunk\", \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\", \"tertiary_link\", \"unclassified\", \"residential\"]) # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) # \u4fdd\u5b58\u4e3a opendrive \u6587\u4ef6 f = open(\"path/to/output/file\", 'w') f.write(xodr_data) f.close()","title":"Linux"},{"location":"tuto_G_openstreetmap/#windows","text":"import io # \u8bfb\u53d6 .osm \u6570\u636e f = io.open(\"test\", mode=\"r\", encoding=\"utf-8\") osm_data = f.read() f.close() # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002 settings = carla.Osm2OdrSettings() # \u8bbe\u7f6e\u5bfc\u51fa\u6210 OpenDRIVE \u7684 OSM \u9053\u8def\u7c7b\u578b settings.set_osm_way_types([\"motorway\", \"motorway_link\", \"trunk\", \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\", \"tertiary_link\", \"unclassified\", \"residential\"]) # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) # \u4fdd\u5b58\u6210 opendrive \u6587\u4ef6 f = open(\"path/to/output/file\", 'w') f.write(xodr_data) f.close()","title":"Windows"},{"location":"tuto_G_openstreetmap/#_1","text":"Open Street Map \u6570\u636e\u53ef\u4ee5\u5b9a\u4e49\u54ea\u4e9b\u8def\u53e3\u53d7\u4ea4\u901a\u706f\u63a7\u5236\u3002\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u6b64\u4ea4\u901a\u706f\u6570\u636e\uff0c\u60a8\u9700\u8981\u5728\u5c06 .osm \u6587\u4ef6\u8f6c\u6362\u4e3a .xodr \u683c\u5f0f\u4e4b\u524d\u901a\u8fc7 Python API \u5728 OSM \u5730\u56fe\u8bbe\u7f6e\u4e2d\u542f\u7528\u5b83\uff1a # \u5b9a\u4e49\u60f3\u8981\u7684\u8bbe\u7f6e\u3002\u5728\u8be5\u6848\u4f8b\u4e2d\u4e3a\u9ed8\u8ba4\u503c\u3002 settings = carla.Osm2OdrSettings() # \u542f\u7528\u4ece OSM \u6570\u636e\u4e2d\u751f\u6210\u4ea4\u901a\u706f settings.generate_traffic_lights = True # \u8f6c\u4e3a .xodr xodr_data = carla.Osm2Odr.convert(osm_data, settings) \u4ea4\u901a\u706f\u6570\u636e\u8d28\u91cf\u53ef\u80fd\u56e0\u63d0\u53d6\u6570\u636e\u7684\u533a\u57df\u800c\u5f02\u3002\u4e00\u4e9b\u4ea4\u901a\u706f\u4fe1\u606f\u53ef\u80fd\u5b8c\u5168\u4e22\u5931\u3002\u8981\u514b\u670d\u8fd9\u4e9b\u9650\u5236\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Python API \u5c06\u6240\u6709\u8def\u53e3\u914d\u7f6e\u4e3a\u7531\u4ea4\u901a\u706f\u63a7\u5236\uff1a settings.all_junctions_with_traffic_lights = True \u60a8\u8fd8\u53ef\u4ee5\u6392\u9664\u67d0\u4e9b\u9053\u8def\uff08\u4f8b\u5982\u9ad8\u901f\u516c\u8def\u94fe\u63a5\uff09\u751f\u6210\u4ea4\u901a\u4fe1\u53f7\u706f\uff1a settings.set_traffic_light_excluded_way_types([\"motorway_link\"])","title":"\u751f\u6210\u4ea4\u901a\u706f"},{"location":"tuto_G_openstreetmap/#carla","text":"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u53ef\u7528\u7684\u4e0d\u540c\u9009\u9879\uff0c\u901a\u8fc7 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u5c06 Open Street Map \u4fe1\u606f\u63d0\u53d6\u5230 CARLA \u4e2d\u3002 \u6709\u4ee5\u4e0b\u4e09\u4e2a\u9009\u9879\u53ef\u4f9b\u9009\u62e9\uff1a A) \u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49 Python \u811a\u672c\u4e2d\u7684\u8f6c\u6362 .xodr \u6587\u4ef6 \u751f\u6210\u5730\u56fe\u8be5\u65b9\u6cd5\u5141\u8bb8\u53c2\u6570\u5316 \u3002 B) \u5c06\u8f6c\u6362\u540e\u7684 .xodr \u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA config.py \u811a\u672c\u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002 C) \u5c06\u539f\u59cb .osm \u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 CARLA config.py \u811a\u672c\u3002 \u6b64\u65b9\u6cd5\u4e0d\u5141\u8bb8\u53c2\u6570\u5316\u3002","title":"\u5bfc\u5165 CARLA"},{"location":"tuto_G_openstreetmap/#a","text":"\u751f\u6210\u65b0\u5730\u56fe\u5e76\u963b\u6b62\u6a21\u62df\uff0c\u76f4\u5230\u901a\u8fc7\u8c03\u7528 client.generate_opendrive_world() \u51c6\u5907\u5c31\u7eea\u3002\u4f7f\u7528 carla.OpendriveGenerationParameters \u7c7b\u914d\u7f6e\u7f51\u683c\u751f\u6210\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff1a vertex_distance = 2.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d max_road_length = 500.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d wall_height = 0.0 # \u4ee5\u7c73\u4e3a\u5355\u4f4d extra_width = 0.6 # \u4ee5\u7c73\u4e3a\u5355\u4f4d world = client.generate_opendrive_world( xodr_xml, carla.OpendriveGenerationParameters( vertex_distance=vertex_distance, max_road_length=max_road_length, wall_height=wall_height, additional_width=extra_width, smooth_junctions=True, enable_mesh_visibility=True)) \u7b14\u8bb0 \u5f3a\u70c8\u63a8\u8350 wall_height = 0.0 \u3002OpenStreetMap \u5c06\u76f8\u53cd\u65b9\u5411\u7684\u8f66\u9053\u5b9a\u4e49\u4e3a\u4e0d\u540c\u7684\u9053\u8def\u3002\u5982\u679c\u751f\u6210\u5899\u58c1\uff0c\u8fd9\u5c06\u5bfc\u81f4\u5899\u58c1\u91cd\u53e0\u548c\u610f\u5916\u7684\u78b0\u649e\u3002","title":"A) \u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u811a\u672c"},{"location":"tuto_G_openstreetmap/#b-xodr-configpy","text":"\u542f\u52a8 CARLA \u670d\u52a1\u5668\u540e\uff0c\u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u52a0\u8f7d Open Street Map\uff1a cd PythonAPI/util python3 config.py -x=/path/to/xodr/file Default parameters will be used.","title":"B) \u5c06 .xodr \u4f20\u9012\u7ed9 config.py"},{"location":"tuto_G_openstreetmap/#c-osm-configpy","text":"\u542f\u52a8 CARLA \u670d\u52a1\u5668\u540e\uff0c\u5728\u5355\u72ec\u7684\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u52a0\u8f7d Open Street Map\uff1a cd PythonAPI/util python3 config.py --osm-path=/path/to/OSM/file \u5c06\u4f7f\u7528 \u9ed8\u8ba4\u53c2\u6570 \u3002 \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u5730\u56fe\u90fd\u5c06\u88ab\u5bfc\u5165\u5230 CARLA \u4e2d\uff0c\u7ed3\u679c\u5e94\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\uff1a \u4f7f\u7528 OpenStreetMap \u751f\u6210 CARLA \u5730\u56fe\u7684\u7ed3\u679c\u3002 \u8b66\u544a \u751f\u6210\u7684\u9053\u8def\u5728\u5730\u56fe\u7684\u8fb9\u754c\u5904\u7a81\u7136\u7ed3\u675f\u3002\u5f53\u8f66\u8f86\u65e0\u6cd5\u627e\u5230\u4e0b\u4e00\u4e2a\u8def\u5f84\u70b9\u65f6\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4ea4\u901a\u7ba1\u7406\u5668\u5d29\u6e83\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6d41\u91cf\u7ba1\u7406\u5668\u4e2d\u7684 OSM \u6a21\u5f0f\u9ed8\u8ba4\u8bbe\u7f6e\u4e3aTrue ( set_osm_mode() )\u3002\u8fd9\u5c06\u5728\u5fc5\u8981\u65f6\u663e\u793a\u8b66\u544a\u5e76\u6467\u6bc1\u8f66\u8f86\u3002 \u4e0e\u6b64\u4e3b\u9898\u76f8\u5173\u7684\u4efb\u4f55\u95ee\u9898\u548c\u7591\u95ee\u90fd\u53ef\u4ee5\u5728 CARLA \u8bba\u575b\u4e2d\u53d1\u5e03\u3002 CARLA \u8bba\u575b","title":"C) \u5c06 .osm \u4f20\u9012\u7ed9 config.py"},{"location":"tuto_G_pedestrian_bones/","text":"\u901a\u8fc7 API \u83b7\u53d6\u884c\u4eba\u771f\u5b9e\u9aa8\u9abc \u4e3a\u4e86\u8bad\u7ec3\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\uff0c\u5fc5\u987b\u786e\u4fdd\u5b83\u4eec\u4e0d\u4ec5\u80fd\u591f\u8bc6\u522b\u5efa\u7b51\u7269\u3001\u9053\u8def\u548c\u6c7d\u8f66\uff0c\u8fd8\u80fd\u591f\u8bc6\u522b\u4eba\u884c\u9053\u548c\u8fc7\u9a6c\u8def\u7684\u884c\u4eba\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u9053\u8def\u4f7f\u7528\u8005\u7684\u5b89\u5168\u3002Carla \u6a21\u62df\u5668\u63d0\u4f9b\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u884c\u4eba\uff0c\u4ee5\u4eba\u4f53\u5f62\u6001\u586b\u5145\u60a8\u7684\u6a21\u62df\u548c\u8bad\u7ec3\u6570\u636e\u3002\u5728\u8bb8\u591a\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528\u4e2d\uff0c\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1\u662f\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff0c\u5305\u62ec\u81ea\u52a8\u9a7e\u9a76\u3001\u5b89\u5168\u3001\u4eba\u7fa4\u63a7\u5236\u548c\u591a\u4e2a\u673a\u5668\u4eba\u5e94\u7528\u3002 Carla \u7684 API \u63d0\u4f9b\u4e86\u4ece\u6a21\u62df\u4e2d\u7684\u884c\u4eba\u83b7\u53d6\u771f\u5b9e\u9aa8\u67b6\u7684\u529f\u80fd\u3002\u9aa8\u67b6\u7531\u4e00\u7ec4\u9aa8\u9abc\u7ec4\u6210\uff0c\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u6216\u9876\u70b9\u4ee5\u53ca\u4e00\u4e2a\u5b9a\u4e49\u9aa8\u9abc\u59ff\u52bf\uff08\u6216\u65b9\u5411\uff09\u7684\u5411\u91cf\u3002\u8fd9\u4e9b\u9aa8\u9abc\u63a7\u5236\u6a21\u62df\u884c\u4eba\u7684\u56db\u80a2\u548c\u8eab\u4f53\u7684\u8fd0\u52a8\u3002\u901a\u8fc7\u5c06\u5404\u4e2a\u9aa8\u9abc\u7684\u96c6\u5408\u6536\u96c6\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u6784\u5efa\u865a\u62df\u4eba\u59ff\u52bf\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u53ef\u7528\u4e8e\u4e0e\u795e\u7ecf\u7f51\u7edc\u4f30\u8ba1\u7684\u59ff\u52bf\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u751a\u81f3\u7528\u4e8e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u59ff\u52bf\u4f30\u8ba1\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b8c\u6210\u5728\u5730\u56fe\u4e2d\u751f\u6210\u884c\u4eba\u3001\u8bbe\u7f6e AI \u63a7\u5236\u5668\u6765\u79fb\u52a8\u884c\u4eba\u3001\u7136\u540e\u83b7\u53d6\u771f\u5b9e\u9aa8\u67b6\u5e76\u5c06\u9aa8\u9abc\u6295\u5f71\u5230 2D \u76f8\u673a\u6355\u83b7\u4e0a\u7684\u6b65\u9aa4\u3002 \u8bbe\u7f6e\u6a21\u62df\u5668 \u9996\u5148\uff0c\u6309\u7167\u60a8\u7684\u6807\u51c6\u5de5\u4f5c\u6d41\u7a0b\u542f\u52a8 Carla \u6a21\u62df\u5668\uff0c\u65e0\u8bba\u662f\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd8\u662f\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u3002\u6211\u4eec\u5c06\u5bfc\u5165\u51e0\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u5e93\u4ee5\u7528\u4e8e\u6570\u5b66\u548c\u7ed8\u56fe\u3002\u4e3a\u4e86\u8ba9\u6211\u4eec\u66f4\u597d\u5730\u63a7\u5236\u6a21\u62df\uff0c\u6211\u4eec\u5c06\u5728\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528 \u540c\u6b65\u6a21\u5f0f \u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684 Python \u5ba2\u6237\u7aef\u63a7\u5236\u6a21\u62df\u5668\u7684\u65f6\u95f4\u8fdb\u7a0b\u3002 import carla import random import numpy as np import math import queue import cv2 #OpenCV to manipulate and save the images # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator() \u5728 CARLA \u6a21\u62df\u5668\u4e2d\u751f\u6210\u884c\u4eba \u9996\u5148\uff0c\u6211\u4eec\u60f3\u5728\u6a21\u62df\u4e2d\u751f\u6210\u4e00\u4e2a\u884c\u4eba\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 world.get_random_location_from_navigation() \u5728\u968f\u673a\u4f4d\u7f6e\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ece\u865a\u5e7b\u7f16\u8f91\u5668\u6536\u96c6\u7684\u5750\u6807\u6765\u9009\u62e9\u3002\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u4e00\u4e2a\u7a7a\u53c2\u4e0e\u8005\u6dfb\u52a0\u5230\u8981\u751f\u6210\u884c\u4eba\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u53f3\u4fa7\u7684\u68c0\u67e5\u5668\u67e5\u8be2\u5750\u6807\u3002 \u7b14\u8bb0 \u865a\u5e7b\u7f16\u8f91\u5668\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff0c\u800c Carla \u4ee5\u7c73\u4e3a\u5355\u4f4d\uff0c\u56e0\u6b64\u5fc5\u987b\u8f6c\u6362\u5355\u4f4d\u3002\u5728 Carla \u6a21\u62df\u5668\u4e2d\u4f7f\u7528\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5c06\u865a\u5e7b\u7f16\u8f91\u5668\u5750\u6807\u9664\u4ee5 100\u3002 \u4e00\u65e6\u4f60\u9009\u62e9\u4e86\u5750\u6807\uff0c\u4f60\u5c31\u53ef\u4ee5\u751f\u6210\u884c\u4eba\u3002\u6211\u4eec\u8fd8\u5c06\u751f\u6210\u4e00\u4e2a\u76f8\u673a\u6765\u6536\u96c6\u56fe\u50cf\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u961f\u5217 Queue \u5bf9\u8c61\u6765\u5141\u8bb8\u6211\u4eec\u8f7b\u677e\u8bbf\u95ee\u6765\u81ea\u76f8\u673a\u7684\u6570\u636e\uff08\u56e0\u4e3a\u76f8\u673a\u4f20\u611f\u5668\u5728\u5176\u81ea\u5df1\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u4e0e\u8fd0\u884c\u811a\u672c\u7684\u4e3b Python \u7ebf\u7a0b\u5206\u5f00\uff09\u3002 \u4e3a\u4e86\u770b\u5230\u6211\u4eec\u7684\u884c\u4eba\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u76f8\u673a\uff0c\u4f7f\u5176\u6307\u5411\u6211\u4eec\u751f\u6210\u7684\u884c\u4eba\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u4f7f\u76f8\u673a\u5c45\u4e2d\u6240\u9700\u7684\u5e73\u79fb\u548c\u65cb\u8f6c\uff1a def center_camera(ped, rot_offset=0): # \u65cb\u8f6c\u76f8\u673a\u4ee5\u9762\u5411\u884c\u4eba\u5e76\u5e94\u7528\u504f\u79fb trans = ped.get_transform() offset_radians = 2 * math.pi * rot_offset/360 x = math.cos(offset_radians) * -2 y = math.sin(offset_radians) * 2 trans.location.x += x trans.location.y += y trans.location.z = 2 trans.rotation.pitch = -16 trans.rotation.roll = 0 trans.rotation.yaw = -rot_offset spectator.set_transform(trans) return trans \u73b0\u5728\u6211\u4eec\u5c06\u751f\u6210\u884c\u4eba\u3001\u6444\u50cf\u673a\u3001\u63a7\u5236\u5668\u5e76\u79fb\u52a8\u89c2\u5bdf\u8005\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6240\u505a\u7684\u4e8b\u60c5\uff1a # \u83b7\u53d6\u884c\u4eba\u84dd\u56fe\u5e76\u751f\u6210\u5b83 pedestrian_bp = random.choice(world.get_blueprint_library().filter('*walker.pedestrian*')) transform = carla.Transform(carla.Location(x=-134,y=78.1,z=1.18)) pedestrian = world.try_spawn_actor(pedestrian_bp, transform) # \u751f\u6210\u4e00\u4e2a RGB \u76f8\u673a camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, transform) # \u521b\u5efa\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u50a8\u5e76\u83b7\u53d6\u4f20\u611f\u5668\u6570\u636e image_queue = queue.Queue() camera.listen(image_queue.put) world.tick() image_queue.get() # \u6bcf\u6b21\u8c03\u7528 world.tick() \u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8c03\u7528 image_queue.get() \u4ee5\u786e\u4fdd\u65f6\u95f4\u6b65\u957f\u548c\u4f20\u611f\u5668\u6570\u636e\u4fdd\u6301\u540c\u6b65 # \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u65cb\u8f6c\u76f8\u673a\u4ee5\u9762\u5411\u884c\u4eba camera.set_transform(center_camera(pedestrian)) # \u79fb\u52a8\u89c2\u5bdf\u8005\u4ee5\u67e5\u770b\u7ed3\u679c spectator.set_transform(camera.get_transform()) # \u4e3a\u884c\u4eba\u8bbe\u7f6eAI\u63a7\u5236\u5668 controller_bp = world.get_blueprint_library().find('controller.ai.walker') controller = world.spawn_actor(controller_bp, pedestrian.get_transform(), pedestrian) # \u542f\u52a8\u63a7\u5236\u5668\u5e76\u7ed9\u5b83\u4e00\u4e2a\u968f\u673a\u4f4d\u7f6e controller.start() controller.go_to_location(world.get_random_location_from_navigation()) # \u5c06\u4e16\u754c\u79fb\u52a8\u51e0\u5e27\uff0c\u8ba9\u884c\u4eba\u751f\u6210 for frame in range(0,5): world.tick() trash = image_queue.get() AI \u63a7\u5236\u5668\u5f15\u5bfc\u884c\u4eba\u5728\u5730\u56fe\u4e0a\u884c\u8d70 \u4e0a\u4e00\u6b65\u6211\u4eec\u8fd8\u521d\u59cb\u5316\u4e86\u4e00\u4e2a AI \u63a7\u5236\u5668\u6765\u5e2e\u52a9\u884c\u4eba\u5728\u5730\u56fe\u4e0a\u667a\u80fd\u79fb\u52a8\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u65e0\u9700\u91cd\u590d\uff09\uff1a controller_bp = world.get_blueprint_library().find('controller.ai.walker') controller = world.spawn_actor(controller_bp, pedestrian.get_transform(), pedestrian) controller.start() controller.go_to_location(world.get_random_location_from_navigation()) \u73b0\u5728\uff0c\u884c\u4eba\u5c06\u968f\u7740\u6a21\u62df\u7684\u6bcf\u6b21\u589e\u91cf ( world.tick() ) \u81ea\u4e3b\u79fb\u52a8\u3002 \u76f8\u673a\u51e0\u4f55 \u73b0\u5728\u6211\u4eec\u9700\u8981\u6267\u884c\u4e00\u4e9b\u51e0\u4f55\u8ba1\u7b97\u3002\u9996\u5148\uff0c\u6211\u4eec\u60f3\u8981\u5c06\u9aa8\u9abc\u7684\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807\uff0c\u6211\u4eec\u4f7f\u7528\u76f8\u673a\u53d8\u6362\u7684\u9006\u53d8\u6362\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5750\u6807\u5c06\u8f6c\u6362\u4e3a\u76f8\u5bf9\u4e8e\u4f4d\u4e8e\u539f\u70b9\u3001\u9762\u5411 x \u6b63\u65b9\u5411\u7684\u76f8\u673a\u3002 # \u83b7\u53d64x4\u77e9\u9635\u4ee5\u5c06\u70b9\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f8\u673a\u77e9\u9635\u6216\u6295\u5f71\u77e9\u9635\u5c06\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u76f8\u673a\u7684\u4e8c\u7ef4\u89c6\u573a (FOV, field of view) \u4e0a\uff0c\u5c06\u5b83\u4eec\u53e0\u52a0\u5728\u8f93\u51fa\u56fe\u50cf\u4e0a\u3002\u4ee5\u4e0b\u51fd\u6570\u751f\u6210\u6b64\u4e09\u7ef4\u5230\u4e8c\u7ef4\u8f6c\u6362\u6240\u9700\u7684 \u76f8\u673a\u77e9\u9635 \u3002 def build_projection_matrix(w, h, fov): focal = w / (2.0 * np.tan(fov * np.pi / 360.0)) K = np.identity(3) K[0, 0] = K[1, 1] = focal K[0, 2] = w / 2.0 K[1, 2] = h / 2.0 return K \u6784\u5efa\u9aa8\u67b6 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u6d3b\u52a8\u90e8\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\u3002\u9996\u5148\uff0c\u4f7f\u7528 pedestrian.get_bones() \u4ece\u6a21\u62df\u4e2d\u6536\u96c6\u9aa8\u9abc\u5750\u6807\uff0c\u7136\u540e\u5c06\u9aa8\u9abc\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u5c06\u5176\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u7684\u4e8c\u7ef4\u6210\u50cf\u5e73\u9762\u4e0a\u3002\u4f7f\u7528skeletal.txt\u4e2d\u5b9a\u4e49\u7684\u5bf9\u5c06\u9aa8\u9abc\u8fde\u63a5\u6210\u5b8c\u6574\u7684\u9aa8\u67b6\uff0c\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u4e0b\u8f7d\u8be5\u6587\u4ef6\u3002 \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765\u8fed\u4ee3 sculpture.txt \u4e2d\u5b9a\u4e49\u7684\u9aa8\u9abc\u5bf9\uff0c\u5e76\u5c06\u9aa8\u9abc\u5750\u6807\u8fde\u63a5\u5230\u53ef\u4ee5\u8986\u76d6\u5230\u76f8\u673a\u4f20\u611f\u5668\u56fe\u50cf\u4e0a\u7684\u7ebf\u4e2d\u3002 def get_image_point(bone_trans): # \u8ba1\u7b97\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 # \u83b7\u53d6\u9aa8\u6839\u7684\u4e16\u754c\u4f4d\u7f6e loc = bone_trans.world.location bone = np.array([loc.x, loc.y, loc.z, 1]) # \u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 point_camera = np.dot(world_2_camera, bone) # \u6211\u4eec\u5fc5\u987b\u4eceUE4\u7684\u5750\u6807\u7cfb\u66f4\u6539\u4e3a\u201c\u6807\u51c6\u201d\u5750\u6807\u7cfb # (x, y ,z) -> (y, -z, x) # \u6211\u4eec\u8fd8\u5220\u9664\u4e86\u7b2c\u56db\u4e2a\u7ec4\u4ef6 point_camera = [point_camera[1], -point_camera[2], point_camera[0]] # \u73b0\u5728\u4f7f\u7528\u6444\u5f71\u673a\u77e9\u9635\u6295\u5f713D->2D point_img = np.dot(K, point_camera) # \u6b63\u5219\u5316 point_img[0] /= point_img[2] point_img[1] /= point_img[2] return point_img[0:2] def build_skeleton(ped, sk_links, K): ######## \u83b7\u53d6\u884c\u4eba\u9aa8\u67b6 ######### bones = ped.get_bones() # \u5217\u51fa\u5c06\u6295\u5f71\u5230\u76f8\u673a\u8f93\u51fa\u4e0a\u884c\u7684\u5b58\u50a8\u4f4d\u7f6e lines = [] # \u5728 skeleton.txt \u4e2d\u904d\u5386\u9aa8\u9abc\u5bf9\u5e76\u83b7\u53d6\u5173\u8282\u4f4d\u7f6e for link in sk_links[1:]: # \u5c06\u4e24\u5757\u9aa8\u5934\u7684\u6839\u90e8\u8fde\u63a5\u8d77\u6765 bone_transform_1 = next(filter(lambda b: b.name == link[0], bones.bone_transforms), None) bone_transform_2 = next(filter(lambda b: b.name == link[1], bones.bone_transforms), None) # \u67d0\u4e9b\u9aa8\u9abc\u540d\u79f0\u4e0d\u5339\u914d if bone_transform_1 is not None and bone_transform_2 is not None: # \u8ba1\u7b97\u4e09\u7ef4\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 point_image = get_image_point(bone_transform_1) # \u5c06\u884c\u5f00\u59cb\u9644\u52a0\u5230\u884c\u5217\u8868 lines.append([point_image[0], point_image[1], 0, 0]) # \u8ba1\u7b97\u4e09\u7ef4\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 point_image = get_image_point(bone_transform_2) # \u5c06\u884c\u5c3e\u9644\u52a0\u5230\u884c\u5217\u8868 lines[-1][2] = point_image[0] lines[-1][3] = point_image[1] return lines \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u4ece sculpture.txt \u4e2d\u8bfb\u53d6\u9aa8\u9abc\u5bf9\uff1a skeleton_links = [] with open('skeleton.txt') as f: while True: line = f.readline() if not line: break stripped = list(map(str.strip, line.strip().split(','))) skeleton_links.append(stripped) world.tick() trash = image_queue.get() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8fed\u4ee3\u51e0\u5e27\uff0c\u5728\u6bcf\u5e27\u4e2d\u6784\u5efa\u9aa8\u67b6\uff0c\u5e76\u5c06\u9aa8\u67b6\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u3002\u6211\u4eec\u4f7f\u7528 OpenCV \u5c06\u9aa8\u67b6\u7ed8\u5236\u5230\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u5e76\u4fdd\u5b58\u56fe\u50cf\uff1a \u7b14\u8bb0 \u786e\u4fdd\u5df2\u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u521b\u5efa\u540d\u4e3a out/ \u7684\u6587\u4ef6\u5939\u6765\u5b58\u50a8\u56fe\u50cf for frame in range(0,360): # \u5728\u884c\u4eba\u5468\u56f4\u79fb\u52a8\u6444\u50cf\u5934 camera.set_transform(center_camera(pedestrian, frame + 200)) # \u63a8\u8fdb\u5e27\u5e76\u83b7\u53d6\u56fe\u50cf world.tick() # \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u5e27 image = image_queue.get() # \u83b7\u53d64x4\u77e9\u9635\u4ee5\u5c06\u70b9\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) # \u4ece\u76f8\u673a\u83b7\u53d6\u4e00\u4e9b\u5c5e\u6027 image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() fov = camera_bp.get_attribute(\"fov\").as_float() # \u8ba1\u7b97\u8981\u4ece3D->2D\u6295\u5f71\u7684\u76f8\u673a\u77e9\u9635 K = build_projection_matrix(image_w, image_h, fov) # \u6784\u5efa\u5c06\u663e\u793a\u9aa8\u67b6\u7684\u7ebf\u5217\u8868 lines = build_skeleton(pedestrian, skeleton_links, K) # \u5c06\u6570\u636e\u91cd\u5851\u4e3a2D RBGA \u77e9\u9635 img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # \u4f7f\u7528 OpenCV \u5c06\u7ebf\u6761\u7ed8\u5236\u5230\u56fe\u50cf\u4e2d for line in lines: l = [int(x) for x in line] cv2.line(img, (l[0],l[1]), (l[2],l[3]), (255,0,0, 255), 2) # \u4fdd\u5b58\u56fe\u50cf cv2.imwrite('out/skeleton%04d.png' % frame, img) \u5728 out/ \u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u6709\u4e00\u7cfb\u5217\u5e27\uff0c\u5176\u4e2d\u9aa8\u67b6\u8986\u76d6\u5728\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u3002\u53ef\u4ee5\u901a\u8fc7\u5c06\u5e27\u52a0\u5165\u89c6\u9891\u6765\u91cd\u5efa\u4ee5\u4e0b\u52a8\u753b\uff1a \u603b\u7ed3 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5b66\u4e60\u4e86\u5982\u4f55\u4f7f\u7528 AI \u63a7\u5236\u5668\u751f\u6210\u884c\u4eba\uff0c\u6062\u590d\u884c\u4eba\u9aa8\u9abc\u7684\u771f\u5b9e\u4e09\u7ef4\u5750\u6807\uff0c\u5e76\u5c06\u8fd9\u4e9b\u9aa8\u9abc\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u6355\u83b7\u7684\u4e8c\u7ef4\u56fe\u50cf\u4e0a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u672c\u6559\u7a0b\u4e2d\u5b66\u5230\u7684\u6280\u672f\uff0c\u4f7f\u7528 Carla \u6a21\u62df\u5668\u4e3a\u4eba\u4f53\u59ff\u52bf\u4f30\u8ba1\u6846\u67b6\u8bbe\u7f6e\u8bad\u7ec3\u548c\u9a8c\u8bc1\u3002","title":"\u901a\u8fc7 API \u83b7\u53d6\u884c\u4eba\u771f\u5b9e\u9aa8\u9abc"},{"location":"tuto_G_pedestrian_bones/#api","text":"\u4e3a\u4e86\u8bad\u7ec3\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\uff0c\u5fc5\u987b\u786e\u4fdd\u5b83\u4eec\u4e0d\u4ec5\u80fd\u591f\u8bc6\u522b\u5efa\u7b51\u7269\u3001\u9053\u8def\u548c\u6c7d\u8f66\uff0c\u8fd8\u80fd\u591f\u8bc6\u522b\u4eba\u884c\u9053\u548c\u8fc7\u9a6c\u8def\u7684\u884c\u4eba\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u9053\u8def\u4f7f\u7528\u8005\u7684\u5b89\u5168\u3002Carla \u6a21\u62df\u5668\u63d0\u4f9b\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u884c\u4eba\uff0c\u4ee5\u4eba\u4f53\u5f62\u6001\u586b\u5145\u60a8\u7684\u6a21\u62df\u548c\u8bad\u7ec3\u6570\u636e\u3002\u5728\u8bb8\u591a\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528\u4e2d\uff0c\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1\u662f\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff0c\u5305\u62ec\u81ea\u52a8\u9a7e\u9a76\u3001\u5b89\u5168\u3001\u4eba\u7fa4\u63a7\u5236\u548c\u591a\u4e2a\u673a\u5668\u4eba\u5e94\u7528\u3002 Carla \u7684 API \u63d0\u4f9b\u4e86\u4ece\u6a21\u62df\u4e2d\u7684\u884c\u4eba\u83b7\u53d6\u771f\u5b9e\u9aa8\u67b6\u7684\u529f\u80fd\u3002\u9aa8\u67b6\u7531\u4e00\u7ec4\u9aa8\u9abc\u7ec4\u6210\uff0c\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u6216\u9876\u70b9\u4ee5\u53ca\u4e00\u4e2a\u5b9a\u4e49\u9aa8\u9abc\u59ff\u52bf\uff08\u6216\u65b9\u5411\uff09\u7684\u5411\u91cf\u3002\u8fd9\u4e9b\u9aa8\u9abc\u63a7\u5236\u6a21\u62df\u884c\u4eba\u7684\u56db\u80a2\u548c\u8eab\u4f53\u7684\u8fd0\u52a8\u3002\u901a\u8fc7\u5c06\u5404\u4e2a\u9aa8\u9abc\u7684\u96c6\u5408\u6536\u96c6\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u6784\u5efa\u865a\u62df\u4eba\u59ff\u52bf\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u53ef\u7528\u4e8e\u4e0e\u795e\u7ecf\u7f51\u7edc\u4f30\u8ba1\u7684\u59ff\u52bf\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u751a\u81f3\u7528\u4e8e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u59ff\u52bf\u4f30\u8ba1\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b8c\u6210\u5728\u5730\u56fe\u4e2d\u751f\u6210\u884c\u4eba\u3001\u8bbe\u7f6e AI \u63a7\u5236\u5668\u6765\u79fb\u52a8\u884c\u4eba\u3001\u7136\u540e\u83b7\u53d6\u771f\u5b9e\u9aa8\u67b6\u5e76\u5c06\u9aa8\u9abc\u6295\u5f71\u5230 2D \u76f8\u673a\u6355\u83b7\u4e0a\u7684\u6b65\u9aa4\u3002","title":"\u901a\u8fc7 API \u83b7\u53d6\u884c\u4eba\u771f\u5b9e\u9aa8\u9abc"},{"location":"tuto_G_pedestrian_bones/#_1","text":"\u9996\u5148\uff0c\u6309\u7167\u60a8\u7684\u6807\u51c6\u5de5\u4f5c\u6d41\u7a0b\u542f\u52a8 Carla \u6a21\u62df\u5668\uff0c\u65e0\u8bba\u662f\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd8\u662f\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u3002\u6211\u4eec\u5c06\u5bfc\u5165\u51e0\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u5e93\u4ee5\u7528\u4e8e\u6570\u5b66\u548c\u7ed8\u56fe\u3002\u4e3a\u4e86\u8ba9\u6211\u4eec\u66f4\u597d\u5730\u63a7\u5236\u6a21\u62df\uff0c\u6211\u4eec\u5c06\u5728\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528 \u540c\u6b65\u6a21\u5f0f \u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684 Python \u5ba2\u6237\u7aef\u63a7\u5236\u6a21\u62df\u5668\u7684\u65f6\u95f4\u8fdb\u7a0b\u3002 import carla import random import numpy as np import math import queue import cv2 #OpenCV to manipulate and save the images # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator()","title":"\u8bbe\u7f6e\u6a21\u62df\u5668"},{"location":"tuto_G_pedestrian_bones/#carla","text":"\u9996\u5148\uff0c\u6211\u4eec\u60f3\u5728\u6a21\u62df\u4e2d\u751f\u6210\u4e00\u4e2a\u884c\u4eba\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 world.get_random_location_from_navigation() \u5728\u968f\u673a\u4f4d\u7f6e\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ece\u865a\u5e7b\u7f16\u8f91\u5668\u6536\u96c6\u7684\u5750\u6807\u6765\u9009\u62e9\u3002\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u4e00\u4e2a\u7a7a\u53c2\u4e0e\u8005\u6dfb\u52a0\u5230\u8981\u751f\u6210\u884c\u4eba\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u53f3\u4fa7\u7684\u68c0\u67e5\u5668\u67e5\u8be2\u5750\u6807\u3002 \u7b14\u8bb0 \u865a\u5e7b\u7f16\u8f91\u5668\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff0c\u800c Carla \u4ee5\u7c73\u4e3a\u5355\u4f4d\uff0c\u56e0\u6b64\u5fc5\u987b\u8f6c\u6362\u5355\u4f4d\u3002\u5728 Carla \u6a21\u62df\u5668\u4e2d\u4f7f\u7528\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5c06\u865a\u5e7b\u7f16\u8f91\u5668\u5750\u6807\u9664\u4ee5 100\u3002 \u4e00\u65e6\u4f60\u9009\u62e9\u4e86\u5750\u6807\uff0c\u4f60\u5c31\u53ef\u4ee5\u751f\u6210\u884c\u4eba\u3002\u6211\u4eec\u8fd8\u5c06\u751f\u6210\u4e00\u4e2a\u76f8\u673a\u6765\u6536\u96c6\u56fe\u50cf\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u961f\u5217 Queue \u5bf9\u8c61\u6765\u5141\u8bb8\u6211\u4eec\u8f7b\u677e\u8bbf\u95ee\u6765\u81ea\u76f8\u673a\u7684\u6570\u636e\uff08\u56e0\u4e3a\u76f8\u673a\u4f20\u611f\u5668\u5728\u5176\u81ea\u5df1\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u4e0e\u8fd0\u884c\u811a\u672c\u7684\u4e3b Python \u7ebf\u7a0b\u5206\u5f00\uff09\u3002 \u4e3a\u4e86\u770b\u5230\u6211\u4eec\u7684\u884c\u4eba\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u76f8\u673a\uff0c\u4f7f\u5176\u6307\u5411\u6211\u4eec\u751f\u6210\u7684\u884c\u4eba\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u4f7f\u76f8\u673a\u5c45\u4e2d\u6240\u9700\u7684\u5e73\u79fb\u548c\u65cb\u8f6c\uff1a def center_camera(ped, rot_offset=0): # \u65cb\u8f6c\u76f8\u673a\u4ee5\u9762\u5411\u884c\u4eba\u5e76\u5e94\u7528\u504f\u79fb trans = ped.get_transform() offset_radians = 2 * math.pi * rot_offset/360 x = math.cos(offset_radians) * -2 y = math.sin(offset_radians) * 2 trans.location.x += x trans.location.y += y trans.location.z = 2 trans.rotation.pitch = -16 trans.rotation.roll = 0 trans.rotation.yaw = -rot_offset spectator.set_transform(trans) return trans \u73b0\u5728\u6211\u4eec\u5c06\u751f\u6210\u884c\u4eba\u3001\u6444\u50cf\u673a\u3001\u63a7\u5236\u5668\u5e76\u79fb\u52a8\u89c2\u5bdf\u8005\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6240\u505a\u7684\u4e8b\u60c5\uff1a # \u83b7\u53d6\u884c\u4eba\u84dd\u56fe\u5e76\u751f\u6210\u5b83 pedestrian_bp = random.choice(world.get_blueprint_library().filter('*walker.pedestrian*')) transform = carla.Transform(carla.Location(x=-134,y=78.1,z=1.18)) pedestrian = world.try_spawn_actor(pedestrian_bp, transform) # \u751f\u6210\u4e00\u4e2a RGB \u76f8\u673a camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, transform) # \u521b\u5efa\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u50a8\u5e76\u83b7\u53d6\u4f20\u611f\u5668\u6570\u636e image_queue = queue.Queue() camera.listen(image_queue.put) world.tick() image_queue.get() # \u6bcf\u6b21\u8c03\u7528 world.tick() \u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8c03\u7528 image_queue.get() \u4ee5\u786e\u4fdd\u65f6\u95f4\u6b65\u957f\u548c\u4f20\u611f\u5668\u6570\u636e\u4fdd\u6301\u540c\u6b65 # \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u65cb\u8f6c\u76f8\u673a\u4ee5\u9762\u5411\u884c\u4eba camera.set_transform(center_camera(pedestrian)) # \u79fb\u52a8\u89c2\u5bdf\u8005\u4ee5\u67e5\u770b\u7ed3\u679c spectator.set_transform(camera.get_transform()) # \u4e3a\u884c\u4eba\u8bbe\u7f6eAI\u63a7\u5236\u5668 controller_bp = world.get_blueprint_library().find('controller.ai.walker') controller = world.spawn_actor(controller_bp, pedestrian.get_transform(), pedestrian) # \u542f\u52a8\u63a7\u5236\u5668\u5e76\u7ed9\u5b83\u4e00\u4e2a\u968f\u673a\u4f4d\u7f6e controller.start() controller.go_to_location(world.get_random_location_from_navigation()) # \u5c06\u4e16\u754c\u79fb\u52a8\u51e0\u5e27\uff0c\u8ba9\u884c\u4eba\u751f\u6210 for frame in range(0,5): world.tick() trash = image_queue.get()","title":"\u5728 CARLA \u6a21\u62df\u5668\u4e2d\u751f\u6210\u884c\u4eba"},{"location":"tuto_G_pedestrian_bones/#ai","text":"\u4e0a\u4e00\u6b65\u6211\u4eec\u8fd8\u521d\u59cb\u5316\u4e86\u4e00\u4e2a AI \u63a7\u5236\u5668\u6765\u5e2e\u52a9\u884c\u4eba\u5728\u5730\u56fe\u4e0a\u667a\u80fd\u79fb\u52a8\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u65e0\u9700\u91cd\u590d\uff09\uff1a controller_bp = world.get_blueprint_library().find('controller.ai.walker') controller = world.spawn_actor(controller_bp, pedestrian.get_transform(), pedestrian) controller.start() controller.go_to_location(world.get_random_location_from_navigation()) \u73b0\u5728\uff0c\u884c\u4eba\u5c06\u968f\u7740\u6a21\u62df\u7684\u6bcf\u6b21\u589e\u91cf ( world.tick() ) \u81ea\u4e3b\u79fb\u52a8\u3002","title":"AI \u63a7\u5236\u5668\u5f15\u5bfc\u884c\u4eba\u5728\u5730\u56fe\u4e0a\u884c\u8d70"},{"location":"tuto_G_pedestrian_bones/#_2","text":"\u73b0\u5728\u6211\u4eec\u9700\u8981\u6267\u884c\u4e00\u4e9b\u51e0\u4f55\u8ba1\u7b97\u3002\u9996\u5148\uff0c\u6211\u4eec\u60f3\u8981\u5c06\u9aa8\u9abc\u7684\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807\uff0c\u6211\u4eec\u4f7f\u7528\u76f8\u673a\u53d8\u6362\u7684\u9006\u53d8\u6362\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u8fd9\u610f\u5473\u7740\u5750\u6807\u5c06\u8f6c\u6362\u4e3a\u76f8\u5bf9\u4e8e\u4f4d\u4e8e\u539f\u70b9\u3001\u9762\u5411 x \u6b63\u65b9\u5411\u7684\u76f8\u673a\u3002 # \u83b7\u53d64x4\u77e9\u9635\u4ee5\u5c06\u70b9\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f8\u673a\u77e9\u9635\u6216\u6295\u5f71\u77e9\u9635\u5c06\u4e09\u7ef4\u70b9\u6295\u5f71\u5230\u76f8\u673a\u7684\u4e8c\u7ef4\u89c6\u573a (FOV, field of view) \u4e0a\uff0c\u5c06\u5b83\u4eec\u53e0\u52a0\u5728\u8f93\u51fa\u56fe\u50cf\u4e0a\u3002\u4ee5\u4e0b\u51fd\u6570\u751f\u6210\u6b64\u4e09\u7ef4\u5230\u4e8c\u7ef4\u8f6c\u6362\u6240\u9700\u7684 \u76f8\u673a\u77e9\u9635 \u3002 def build_projection_matrix(w, h, fov): focal = w / (2.0 * np.tan(fov * np.pi / 360.0)) K = np.identity(3) K[0, 0] = K[1, 1] = focal K[0, 2] = w / 2.0 K[1, 2] = h / 2.0 return K","title":"\u76f8\u673a\u51e0\u4f55"},{"location":"tuto_G_pedestrian_bones/#_3","text":"\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u6d3b\u52a8\u90e8\u4ef6\u7ec4\u88c5\u5728\u4e00\u8d77\u3002\u9996\u5148\uff0c\u4f7f\u7528 pedestrian.get_bones() \u4ece\u6a21\u62df\u4e2d\u6536\u96c6\u9aa8\u9abc\u5750\u6807\uff0c\u7136\u540e\u5c06\u9aa8\u9abc\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u5c06\u5176\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u7684\u4e8c\u7ef4\u6210\u50cf\u5e73\u9762\u4e0a\u3002\u4f7f\u7528skeletal.txt\u4e2d\u5b9a\u4e49\u7684\u5bf9\u5c06\u9aa8\u9abc\u8fde\u63a5\u6210\u5b8c\u6574\u7684\u9aa8\u67b6\uff0c\u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u4e0b\u8f7d\u8be5\u6587\u4ef6\u3002 \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765\u8fed\u4ee3 sculpture.txt \u4e2d\u5b9a\u4e49\u7684\u9aa8\u9abc\u5bf9\uff0c\u5e76\u5c06\u9aa8\u9abc\u5750\u6807\u8fde\u63a5\u5230\u53ef\u4ee5\u8986\u76d6\u5230\u76f8\u673a\u4f20\u611f\u5668\u56fe\u50cf\u4e0a\u7684\u7ebf\u4e2d\u3002 def get_image_point(bone_trans): # \u8ba1\u7b97\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 # \u83b7\u53d6\u9aa8\u6839\u7684\u4e16\u754c\u4f4d\u7f6e loc = bone_trans.world.location bone = np.array([loc.x, loc.y, loc.z, 1]) # \u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 point_camera = np.dot(world_2_camera, bone) # \u6211\u4eec\u5fc5\u987b\u4eceUE4\u7684\u5750\u6807\u7cfb\u66f4\u6539\u4e3a\u201c\u6807\u51c6\u201d\u5750\u6807\u7cfb # (x, y ,z) -> (y, -z, x) # \u6211\u4eec\u8fd8\u5220\u9664\u4e86\u7b2c\u56db\u4e2a\u7ec4\u4ef6 point_camera = [point_camera[1], -point_camera[2], point_camera[0]] # \u73b0\u5728\u4f7f\u7528\u6444\u5f71\u673a\u77e9\u9635\u6295\u5f713D->2D point_img = np.dot(K, point_camera) # \u6b63\u5219\u5316 point_img[0] /= point_img[2] point_img[1] /= point_img[2] return point_img[0:2] def build_skeleton(ped, sk_links, K): ######## \u83b7\u53d6\u884c\u4eba\u9aa8\u67b6 ######### bones = ped.get_bones() # \u5217\u51fa\u5c06\u6295\u5f71\u5230\u76f8\u673a\u8f93\u51fa\u4e0a\u884c\u7684\u5b58\u50a8\u4f4d\u7f6e lines = [] # \u5728 skeleton.txt \u4e2d\u904d\u5386\u9aa8\u9abc\u5bf9\u5e76\u83b7\u53d6\u5173\u8282\u4f4d\u7f6e for link in sk_links[1:]: # \u5c06\u4e24\u5757\u9aa8\u5934\u7684\u6839\u90e8\u8fde\u63a5\u8d77\u6765 bone_transform_1 = next(filter(lambda b: b.name == link[0], bones.bone_transforms), None) bone_transform_2 = next(filter(lambda b: b.name == link[1], bones.bone_transforms), None) # \u67d0\u4e9b\u9aa8\u9abc\u540d\u79f0\u4e0d\u5339\u914d if bone_transform_1 is not None and bone_transform_2 is not None: # \u8ba1\u7b97\u4e09\u7ef4\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 point_image = get_image_point(bone_transform_1) # \u5c06\u884c\u5f00\u59cb\u9644\u52a0\u5230\u884c\u5217\u8868 lines.append([point_image[0], point_image[1], 0, 0]) # \u8ba1\u7b97\u4e09\u7ef4\u9aa8\u9abc\u5750\u6807\u7684\u4e8c\u7ef4\u6295\u5f71 point_image = get_image_point(bone_transform_2) # \u5c06\u884c\u5c3e\u9644\u52a0\u5230\u884c\u5217\u8868 lines[-1][2] = point_image[0] lines[-1][3] = point_image[1] return lines \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u4ece sculpture.txt \u4e2d\u8bfb\u53d6\u9aa8\u9abc\u5bf9\uff1a skeleton_links = [] with open('skeleton.txt') as f: while True: line = f.readline() if not line: break stripped = list(map(str.strip, line.strip().split(','))) skeleton_links.append(stripped) world.tick() trash = image_queue.get() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8fed\u4ee3\u51e0\u5e27\uff0c\u5728\u6bcf\u5e27\u4e2d\u6784\u5efa\u9aa8\u67b6\uff0c\u5e76\u5c06\u9aa8\u67b6\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u3002\u6211\u4eec\u4f7f\u7528 OpenCV \u5c06\u9aa8\u67b6\u7ed8\u5236\u5230\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u5e76\u4fdd\u5b58\u56fe\u50cf\uff1a \u7b14\u8bb0 \u786e\u4fdd\u5df2\u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u521b\u5efa\u540d\u4e3a out/ \u7684\u6587\u4ef6\u5939\u6765\u5b58\u50a8\u56fe\u50cf for frame in range(0,360): # \u5728\u884c\u4eba\u5468\u56f4\u79fb\u52a8\u6444\u50cf\u5934 camera.set_transform(center_camera(pedestrian, frame + 200)) # \u63a8\u8fdb\u5e27\u5e76\u83b7\u53d6\u56fe\u50cf world.tick() # \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u5e27 image = image_queue.get() # \u83b7\u53d64x4\u77e9\u9635\u4ee5\u5c06\u70b9\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u76f8\u673a\u5750\u6807 world_2_camera = np.array(camera.get_transform().get_inverse_matrix()) # \u4ece\u76f8\u673a\u83b7\u53d6\u4e00\u4e9b\u5c5e\u6027 image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() fov = camera_bp.get_attribute(\"fov\").as_float() # \u8ba1\u7b97\u8981\u4ece3D->2D\u6295\u5f71\u7684\u76f8\u673a\u77e9\u9635 K = build_projection_matrix(image_w, image_h, fov) # \u6784\u5efa\u5c06\u663e\u793a\u9aa8\u67b6\u7684\u7ebf\u5217\u8868 lines = build_skeleton(pedestrian, skeleton_links, K) # \u5c06\u6570\u636e\u91cd\u5851\u4e3a2D RBGA \u77e9\u9635 img = np.reshape(np.copy(image.raw_data), (image.height, image.width, 4)) # \u4f7f\u7528 OpenCV \u5c06\u7ebf\u6761\u7ed8\u5236\u5230\u56fe\u50cf\u4e2d for line in lines: l = [int(x) for x in line] cv2.line(img, (l[0],l[1]), (l[2],l[3]), (255,0,0, 255), 2) # \u4fdd\u5b58\u56fe\u50cf cv2.imwrite('out/skeleton%04d.png' % frame, img) \u5728 out/ \u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u6709\u4e00\u7cfb\u5217\u5e27\uff0c\u5176\u4e2d\u9aa8\u67b6\u8986\u76d6\u5728\u76f8\u673a\u4f20\u611f\u5668\u8f93\u51fa\u4e0a\u3002\u53ef\u4ee5\u901a\u8fc7\u5c06\u5e27\u52a0\u5165\u89c6\u9891\u6765\u91cd\u5efa\u4ee5\u4e0b\u52a8\u753b\uff1a","title":"\u6784\u5efa\u9aa8\u67b6"},{"location":"tuto_G_pedestrian_bones/#_4","text":"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5b66\u4e60\u4e86\u5982\u4f55\u4f7f\u7528 AI \u63a7\u5236\u5668\u751f\u6210\u884c\u4eba\uff0c\u6062\u590d\u884c\u4eba\u9aa8\u9abc\u7684\u771f\u5b9e\u4e09\u7ef4\u5750\u6807\uff0c\u5e76\u5c06\u8fd9\u4e9b\u9aa8\u9abc\u6295\u5f71\u5230\u76f8\u673a\u4f20\u611f\u5668\u6355\u83b7\u7684\u4e8c\u7ef4\u56fe\u50cf\u4e0a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u672c\u6559\u7a0b\u4e2d\u5b66\u5230\u7684\u6280\u672f\uff0c\u4f7f\u7528 Carla \u6a21\u62df\u5668\u4e3a\u4eba\u4f53\u59ff\u52bf\u4f30\u8ba1\u6846\u67b6\u8bbe\u7f6e\u8bad\u7ec3\u548c\u9a8c\u8bc1\u3002","title":"\u603b\u7ed3"},{"location":"tuto_G_pygame/","text":"Pygame \u7528\u4e8e\u8f66\u8f86\u63a7\u5236 PyGame \u662f\u4e00\u7ec4\u8de8\u5e73\u53f0\u7684 Python \u6a21\u5757\uff0c\u53ef\u7528\u4e8e\u7f16\u5199\u89c6\u9891\u6e38\u620f\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u6e32\u67d3 CARLA \u5b9e\u65f6\u89c6\u89c9\u8f93\u51fa\u7684\u6709\u7528\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u76d1\u89c6\u4f20\u611f\u5668\u8f93\u51fa\uff0c\u4f8b\u5982\u6444\u50cf\u673a\u3002PyGame \u8fd8\u53ef\u4ee5\u6355\u83b7\u952e\u76d8\u4e8b\u4ef6\uff0c\u56e0\u6b64\u5b83\u662f\u63a7\u5236\u8f66\u8f86\u7b49\u53c2\u4e0e\u8005\u7684\u597d\u65b9\u6cd5\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u8bbe\u7f6e\u4e00\u4e2a\u7b80\u5355\u7684 PyGame \u754c\u9762\uff0c\u8be5\u754c\u9762\u4f7f\u6211\u4eec\u80fd\u591f\u76d1\u63a7\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u5730\u56fe\u5468\u56f4\u7684\u81ea\u52a8\u9a7e\u9a76\u4ea4\u901a\uff0c\u7136\u540e\u4f7f\u7528\u952e\u76d8\u624b\u52a8\u63a7\u5236\u4efb\u4f55\u8f66\u8f86\u3002 \u8bbe\u7f6e\u6a21\u62df\u5668\u5e76\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u521b\u5efa\u4e00\u4e9b\u968f\u673a\u5206\u5e03\u5728\u57ce\u5e02\u5468\u56f4\u7684\u6d41\u91cf\u3002 import carla import random import pygame import numpy as np # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Set up the TM in synchronous mode traffic_manager = client.get_trafficmanager() traffic_manager.set_synchronous_mode(True) # Set a seed so behaviour can be repeated if necessary traffic_manager.set_random_device_seed(0) random.seed(0) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator() \u751f\u6210\u8f66\u8f86 \u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u5728\u6574\u4e2a\u57ce\u5e02\u4e2d\u4ea7\u751f\u7684\u8f66\u8f86\u96c6\u5408\uff0c\u5e76\u8ba9\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u5b83\u4eec\u3002 # Retrieve the map's spawn points spawn_points = world.get_map().get_spawn_points() # Select some models from the blueprint library models = ['dodge', 'audi', 'model3', 'mini', 'mustang', 'lincoln', 'prius', 'nissan', 'crown', 'impala'] blueprints = [] for vehicle in world.get_blueprint_library().filter('*vehicle*'): if any(model in vehicle.id for model in models): blueprints.append(vehicle) # Set a max number of vehicles and prepare a list for those we spawn max_vehicles = 50 max_vehicles = min([max_vehicles, len(spawn_points)]) vehicles = [] # Take a random sample of the spawn points and spawn some vehicles for i, spawn_point in enumerate(random.sample(spawn_points, max_vehicles)): temp = world.try_spawn_actor(random.choice(blueprints), spawn_point) if temp is not None: vehicles.append(temp) # Parse the list of spawned vehicles and give control to the TM through set_autopilot() for vehicle in vehicles: vehicle.set_autopilot(True) # Randomly set the probability that a vehicle will ignore traffic lights traffic_manager.ignore_lights_percentage(vehicle, random.randint(0,50)) \u4f7f\u7528 PyGame \u6e32\u67d3\u76f8\u673a\u8f93\u51fa\u5e76\u63a7\u5236\u8f66\u8f86 \u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u4ea4\u901a\u62e5\u6324\u7684\u57ce\u5e02\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u5934\u6765\u8ddf\u8e2a\u5176\u4e2d\u4e00\u8f86\u8f66\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u63a7\u5236\u754c\u9762\u6765\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u63a5\u7ba1\u5b83\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e3a camera.listen(...) \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u50cf\u7d20\u6570\u636e\u6e32\u67d3\u5230 PyGame \u63a5\u53e3\u3002PyGame \u5c06\u6570\u636e\u6e32\u67d3\u5230\u8868\u9762\uff0c\u7136\u540e\u6e32\u67d3\u5230\u5c4f\u5e55\uff0c\u56e0\u6b64\u5728\u56de\u8c03\u4e2d\uff0c\u6211\u4eec\u586b\u5145\u5b58\u50a8\u5728\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u5bf9\u8c61\u4e2d\u7684\u8868\u9762\u3002 # \u6e32\u67d3\u5bf9\u8c61\u4ee5\u4fdd\u6301\u5e76\u4f20\u9012 PyGame \u8868\u9762 class RenderObject(object): def __init__(self, width, height): init_image = np.random.randint(0,255,(height,width,3),dtype='uint8') # \u521b\u5efa\u4e0e\u9635\u5217\u4e0a\u7684\u6570\u636e\u548c\u683c\u5f0f\u6700\u76f8\u4f3c\u7684\u65b0\u66f2\u9762 self.surface = pygame.surfarray.make_surface(init_image.swapaxes(0,1)) # \u6444\u50cf\u5934\u4f20\u611f\u5668\u56de\u8c03\uff0c\u5c06\u6444\u50cf\u5934\u7684\u539f\u59cb\u6570\u636e\u91cd\u5851\u4e3a\u4e8c\u7ef4 RGB\uff0c\u5e76\u5e94\u7528\u4e8e PyGame\u66f2\u9762 def pygame_callback(data, obj): img = np.reshape(np.copy(data.raw_data), (data.height, data.width, 4)) img = img[:,:,:3] img = img[:, :, ::-1] obj.surface = pygame.surfarray.make_surface(img.swapaxes(0,1)) \u73b0\u5728\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u6765\u5904\u7406\u63a7\u5236\u903b\u8f91\u3002\u8fd9\u901a\u5e38\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u624d\u80fd\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\uff0c\u4f46\u8fd9\u6982\u8ff0\u4e86\u4e00\u4e2a\u57fa\u672c\u754c\u9762\u3002\u5f53\u63a7\u5236\u8f66\u8f86\u65f6\uff0c\u8be5\u63a7\u5236\u754c\u9762\u5141\u8bb8\u901a\u8fc7\u4efb\u4f55\u6807\u51c6\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u8fdb\u884c\u63a7\u5236\u3002\u5411\u524d\u7bad\u5934\u52a0\u901f\uff0c\u5411\u540e\u7bad\u5934\u5236\u52a8\uff0c\u5de6\u53f3\u7bad\u5934\u8f6c\u52a8\u8f66\u8f86\u3002\u5982\u679c\u5728\u8f66\u8f86\u9759\u6b62\u6216\u505c\u6b62\u65f6\u6309\u4f4f\u5411\u4e0b\u7bad\u5934\uff0c\u5b83\u5c06\u63a5\u5408\u5012\u6863\u5e76\u5f00\u59cb\u5411\u540e\u79fb\u52a8\u3002 # Control object to manage vehicle controls class ControlObject(object): def __init__(self, veh): # Conrol parameters to store the control state self._vehicle = veh self._steer = 0 self._throttle = False self._brake = False self._steer = None self._steer_cache = 0 # A carla.VehicleControl object is needed to alter the # vehicle's control state self._control = carla.VehicleControl() # Check for key press events in the PyGame window # and define the control state def parse_control(self, event): if event.type == pygame.KEYDOWN: if event.key == pygame.K_RETURN: self._vehicle.set_autopilot(False) if event.key == pygame.K_UP: self._throttle = True if event.key == pygame.K_DOWN: self._brake = True if event.key == pygame.K_RIGHT: self._steer = 1 if event.key == pygame.K_LEFT: self._steer = -1 if event.type == pygame.KEYUP: if event.key == pygame.K_UP: self._throttle = False if event.key == pygame.K_DOWN: self._brake = False self._control.reverse = False if event.key == pygame.K_RIGHT: self._steer = None if event.key == pygame.K_LEFT: self._steer = None # \u5904\u7406\u5f53\u524d\u63a7\u5236\u72b6\u6001\uff0c\u66f4\u6539\u63a7\u5236\u53c2\u6570 # if the key remains pressed def process_control(self): if self._throttle: self._control.throttle = min(self._control.throttle + 0.01, 1) self._control.gear = 1 self._control.brake = False elif not self._brake: self._control.throttle = 0.0 if self._brake: # If the down arrow is held down when the car is stationary, switch to reverse if self._vehicle.get_velocity().length() < 0.01 and not self._control.reverse: self._control.brake = 0.0 self._control.gear = 1 self._control.reverse = True self._control.throttle = min(self._control.throttle + 0.1, 1) elif self._control.reverse: self._control.throttle = min(self._control.throttle + 0.1, 1) else: self._control.throttle = 0.0 self._control.brake = min(self._control.brake + 0.3, 1) else: self._control.brake = 0.0 if self._steer is not None: if self._steer == 1: self._steer_cache += 0.03 if self._steer == -1: self._steer_cache -= 0.03 min(0.7, max(-0.7, self._steer_cache)) self._control.steer = round(self._steer_cache,1) else: if self._steer_cache > 0.0: self._steer_cache *= 0.2 if self._steer_cache < 0.0: self._steer_cache *= 0.2 if 0.01 > self._steer_cache > -0.01: self._steer_cache = 0.0 self._control.steer = round(self._steer_cache,1) # \u00c1pply the control parameters to the ego vehicle self._vehicle.apply_control(self._control) \u73b0\u5728\u6211\u4eec\u5c06\u521d\u59cb\u5316\u8f66\u8f86\u548c\u76f8\u673a\u3002 # Randomly select a vehicle to follow with the camera ego_vehicle = random.choice(vehicles) # Initialise the camera floating behind the vehicle camera_init_trans = carla.Transform(carla.Location(x=-5, z=3), carla.Rotation(pitch=-20)) camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) # Start camera with PyGame callback camera.listen(lambda image: pygame_callback(image, renderObject)) # Get camera dimensions image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() # Instantiate objects for rendering and vehicle control renderObject = RenderObject(image_w, image_h) controlObject = ControlObject(ego_vehicle) \u521d\u59cb\u5316 PyGame \u63a5\u53e3\u3002\u8fd9\u5c06\u8c03\u7528 PyGame \u7684\u65b0\u7a97\u53e3\u3002 # Initialise the display pygame.init() gameDisplay = pygame.display.set_mode((image_w,image_h), pygame.HWSURFACE | pygame.DOUBLEBUF) # Draw black to the display gameDisplay.fill((0,0,0)) gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u4e86\u3002\u8be5\u89c6\u56fe\u53ef\u4ee5\u5728\u5730\u56fe\u4e2d\u7684\u4e0d\u540c\u8f66\u8f86\u4e4b\u95f4\u968f\u673a\u5faa\u73af\uff0c\u5e76\u5728\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u4e0b\u53ef\u89c6\u5316\u5b83\u4eec\u5728\u4ea4\u901a\u4e2d\u7684\u65c5\u7a0b\u3002\u6309 TAB \u952e\u5207\u6362\u5230\u968f\u673a\u9009\u62e9\u7684\u65b0\u8f66\u8f86\uff0c\u6309\u56de\u8f66\u952e\u53ef\u4ee5\u901a\u8fc7\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9700\u8981\u6311\u6218\u9a7e\u9a76\u884c\u4e3a\u4e0d\u7a33\u5b9a\u7684\u4ee3\u7406\uff0c\u8fd9\u79cd\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\u53ef\u4ee5\u8c03\u6574\u9009\u62e9\u903b\u8f91\u4ee5\u9009\u62e9\u4e0e\u4ee3\u7406\u9a7e\u9a76\u7684\u8f66\u8f86\u63a5\u8fd1\u7684\u8f66\u8f86\u3002 # Game loop crashed = False while not crashed: # Advance the simulation time world.tick() # Update the display gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() # Process the current control state controlObject.process_control() # Collect key press events for event in pygame.event.get(): # If the window is closed, break the while loop if event.type == pygame.QUIT: crashed = True # Parse effect of key press event on control state controlObject.parse_control(event) if event.type == pygame.KEYUP: # TAB key switches vehicle if event.key == pygame.K_TAB: ego_vehicle.set_autopilot(True) ego_vehicle = random.choice(vehicles) # Ensure vehicle is still alive (might have been destroyed) if ego_vehicle.is_alive: # Stop and remove the camera camera.stop() camera.destroy() # Spawn new camera and attach to new vehicle controlObject = ControlObject(ego_vehicle) camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) camera.listen(lambda image: pygame_callback(image, renderObject)) # Update PyGame window gameDisplay.fill((0,0,0)) gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() # Stop camera and quit PyGame after exiting game loop camera.stop() pygame.quit()","title":"Pygame \u7528\u4e8e\u8f66\u8f86\u63a7\u5236"},{"location":"tuto_G_pygame/#pygame","text":"PyGame \u662f\u4e00\u7ec4\u8de8\u5e73\u53f0\u7684 Python \u6a21\u5757\uff0c\u53ef\u7528\u4e8e\u7f16\u5199\u89c6\u9891\u6e38\u620f\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u6e32\u67d3 CARLA \u5b9e\u65f6\u89c6\u89c9\u8f93\u51fa\u7684\u6709\u7528\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u76d1\u89c6\u4f20\u611f\u5668\u8f93\u51fa\uff0c\u4f8b\u5982\u6444\u50cf\u673a\u3002PyGame \u8fd8\u53ef\u4ee5\u6355\u83b7\u952e\u76d8\u4e8b\u4ef6\uff0c\u56e0\u6b64\u5b83\u662f\u63a7\u5236\u8f66\u8f86\u7b49\u53c2\u4e0e\u8005\u7684\u597d\u65b9\u6cd5\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u8bbe\u7f6e\u4e00\u4e2a\u7b80\u5355\u7684 PyGame \u754c\u9762\uff0c\u8be5\u754c\u9762\u4f7f\u6211\u4eec\u80fd\u591f\u76d1\u63a7\u7531\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u7684\u5730\u56fe\u5468\u56f4\u7684\u81ea\u52a8\u9a7e\u9a76\u4ea4\u901a\uff0c\u7136\u540e\u4f7f\u7528\u952e\u76d8\u624b\u52a8\u63a7\u5236\u4efb\u4f55\u8f66\u8f86\u3002","title":"Pygame \u7528\u4e8e\u8f66\u8f86\u63a7\u5236"},{"location":"tuto_G_pygame/#_1","text":"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u521b\u5efa\u4e00\u4e9b\u968f\u673a\u5206\u5e03\u5728\u57ce\u5e02\u5468\u56f4\u7684\u6d41\u91cf\u3002 import carla import random import pygame import numpy as np # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Set up the TM in synchronous mode traffic_manager = client.get_trafficmanager() traffic_manager.set_synchronous_mode(True) # Set a seed so behaviour can be repeated if necessary traffic_manager.set_random_device_seed(0) random.seed(0) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator()","title":"\u8bbe\u7f6e\u6a21\u62df\u5668\u5e76\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"tuto_G_pygame/#_2","text":"\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u5728\u6574\u4e2a\u57ce\u5e02\u4e2d\u4ea7\u751f\u7684\u8f66\u8f86\u96c6\u5408\uff0c\u5e76\u8ba9\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u5b83\u4eec\u3002 # Retrieve the map's spawn points spawn_points = world.get_map().get_spawn_points() # Select some models from the blueprint library models = ['dodge', 'audi', 'model3', 'mini', 'mustang', 'lincoln', 'prius', 'nissan', 'crown', 'impala'] blueprints = [] for vehicle in world.get_blueprint_library().filter('*vehicle*'): if any(model in vehicle.id for model in models): blueprints.append(vehicle) # Set a max number of vehicles and prepare a list for those we spawn max_vehicles = 50 max_vehicles = min([max_vehicles, len(spawn_points)]) vehicles = [] # Take a random sample of the spawn points and spawn some vehicles for i, spawn_point in enumerate(random.sample(spawn_points, max_vehicles)): temp = world.try_spawn_actor(random.choice(blueprints), spawn_point) if temp is not None: vehicles.append(temp) # Parse the list of spawned vehicles and give control to the TM through set_autopilot() for vehicle in vehicles: vehicle.set_autopilot(True) # Randomly set the probability that a vehicle will ignore traffic lights traffic_manager.ignore_lights_percentage(vehicle, random.randint(0,50))","title":"\u751f\u6210\u8f66\u8f86"},{"location":"tuto_G_pygame/#pygame_1","text":"\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u4ea4\u901a\u62e5\u6324\u7684\u57ce\u5e02\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6444\u50cf\u5934\u6765\u8ddf\u8e2a\u5176\u4e2d\u4e00\u8f86\u8f66\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u63a7\u5236\u754c\u9762\u6765\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u63a5\u7ba1\u5b83\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e3a camera.listen(...) \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u50cf\u7d20\u6570\u636e\u6e32\u67d3\u5230 PyGame \u63a5\u53e3\u3002PyGame \u5c06\u6570\u636e\u6e32\u67d3\u5230\u8868\u9762\uff0c\u7136\u540e\u6e32\u67d3\u5230\u5c4f\u5e55\uff0c\u56e0\u6b64\u5728\u56de\u8c03\u4e2d\uff0c\u6211\u4eec\u586b\u5145\u5b58\u50a8\u5728\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u5bf9\u8c61\u4e2d\u7684\u8868\u9762\u3002 # \u6e32\u67d3\u5bf9\u8c61\u4ee5\u4fdd\u6301\u5e76\u4f20\u9012 PyGame \u8868\u9762 class RenderObject(object): def __init__(self, width, height): init_image = np.random.randint(0,255,(height,width,3),dtype='uint8') # \u521b\u5efa\u4e0e\u9635\u5217\u4e0a\u7684\u6570\u636e\u548c\u683c\u5f0f\u6700\u76f8\u4f3c\u7684\u65b0\u66f2\u9762 self.surface = pygame.surfarray.make_surface(init_image.swapaxes(0,1)) # \u6444\u50cf\u5934\u4f20\u611f\u5668\u56de\u8c03\uff0c\u5c06\u6444\u50cf\u5934\u7684\u539f\u59cb\u6570\u636e\u91cd\u5851\u4e3a\u4e8c\u7ef4 RGB\uff0c\u5e76\u5e94\u7528\u4e8e PyGame\u66f2\u9762 def pygame_callback(data, obj): img = np.reshape(np.copy(data.raw_data), (data.height, data.width, 4)) img = img[:,:,:3] img = img[:, :, ::-1] obj.surface = pygame.surfarray.make_surface(img.swapaxes(0,1)) \u73b0\u5728\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u6765\u5904\u7406\u63a7\u5236\u903b\u8f91\u3002\u8fd9\u901a\u5e38\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u624d\u80fd\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\uff0c\u4f46\u8fd9\u6982\u8ff0\u4e86\u4e00\u4e2a\u57fa\u672c\u754c\u9762\u3002\u5f53\u63a7\u5236\u8f66\u8f86\u65f6\uff0c\u8be5\u63a7\u5236\u754c\u9762\u5141\u8bb8\u901a\u8fc7\u4efb\u4f55\u6807\u51c6\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u8fdb\u884c\u63a7\u5236\u3002\u5411\u524d\u7bad\u5934\u52a0\u901f\uff0c\u5411\u540e\u7bad\u5934\u5236\u52a8\uff0c\u5de6\u53f3\u7bad\u5934\u8f6c\u52a8\u8f66\u8f86\u3002\u5982\u679c\u5728\u8f66\u8f86\u9759\u6b62\u6216\u505c\u6b62\u65f6\u6309\u4f4f\u5411\u4e0b\u7bad\u5934\uff0c\u5b83\u5c06\u63a5\u5408\u5012\u6863\u5e76\u5f00\u59cb\u5411\u540e\u79fb\u52a8\u3002 # Control object to manage vehicle controls class ControlObject(object): def __init__(self, veh): # Conrol parameters to store the control state self._vehicle = veh self._steer = 0 self._throttle = False self._brake = False self._steer = None self._steer_cache = 0 # A carla.VehicleControl object is needed to alter the # vehicle's control state self._control = carla.VehicleControl() # Check for key press events in the PyGame window # and define the control state def parse_control(self, event): if event.type == pygame.KEYDOWN: if event.key == pygame.K_RETURN: self._vehicle.set_autopilot(False) if event.key == pygame.K_UP: self._throttle = True if event.key == pygame.K_DOWN: self._brake = True if event.key == pygame.K_RIGHT: self._steer = 1 if event.key == pygame.K_LEFT: self._steer = -1 if event.type == pygame.KEYUP: if event.key == pygame.K_UP: self._throttle = False if event.key == pygame.K_DOWN: self._brake = False self._control.reverse = False if event.key == pygame.K_RIGHT: self._steer = None if event.key == pygame.K_LEFT: self._steer = None # \u5904\u7406\u5f53\u524d\u63a7\u5236\u72b6\u6001\uff0c\u66f4\u6539\u63a7\u5236\u53c2\u6570 # if the key remains pressed def process_control(self): if self._throttle: self._control.throttle = min(self._control.throttle + 0.01, 1) self._control.gear = 1 self._control.brake = False elif not self._brake: self._control.throttle = 0.0 if self._brake: # If the down arrow is held down when the car is stationary, switch to reverse if self._vehicle.get_velocity().length() < 0.01 and not self._control.reverse: self._control.brake = 0.0 self._control.gear = 1 self._control.reverse = True self._control.throttle = min(self._control.throttle + 0.1, 1) elif self._control.reverse: self._control.throttle = min(self._control.throttle + 0.1, 1) else: self._control.throttle = 0.0 self._control.brake = min(self._control.brake + 0.3, 1) else: self._control.brake = 0.0 if self._steer is not None: if self._steer == 1: self._steer_cache += 0.03 if self._steer == -1: self._steer_cache -= 0.03 min(0.7, max(-0.7, self._steer_cache)) self._control.steer = round(self._steer_cache,1) else: if self._steer_cache > 0.0: self._steer_cache *= 0.2 if self._steer_cache < 0.0: self._steer_cache *= 0.2 if 0.01 > self._steer_cache > -0.01: self._steer_cache = 0.0 self._control.steer = round(self._steer_cache,1) # \u00c1pply the control parameters to the ego vehicle self._vehicle.apply_control(self._control) \u73b0\u5728\u6211\u4eec\u5c06\u521d\u59cb\u5316\u8f66\u8f86\u548c\u76f8\u673a\u3002 # Randomly select a vehicle to follow with the camera ego_vehicle = random.choice(vehicles) # Initialise the camera floating behind the vehicle camera_init_trans = carla.Transform(carla.Location(x=-5, z=3), carla.Rotation(pitch=-20)) camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) # Start camera with PyGame callback camera.listen(lambda image: pygame_callback(image, renderObject)) # Get camera dimensions image_w = camera_bp.get_attribute(\"image_size_x\").as_int() image_h = camera_bp.get_attribute(\"image_size_y\").as_int() # Instantiate objects for rendering and vehicle control renderObject = RenderObject(image_w, image_h) controlObject = ControlObject(ego_vehicle) \u521d\u59cb\u5316 PyGame \u63a5\u53e3\u3002\u8fd9\u5c06\u8c03\u7528 PyGame \u7684\u65b0\u7a97\u53e3\u3002 # Initialise the display pygame.init() gameDisplay = pygame.display.set_mode((image_w,image_h), pygame.HWSURFACE | pygame.DOUBLEBUF) # Draw black to the display gameDisplay.fill((0,0,0)) gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6e38\u620f\u5faa\u73af\u4e86\u3002\u8be5\u89c6\u56fe\u53ef\u4ee5\u5728\u5730\u56fe\u4e2d\u7684\u4e0d\u540c\u8f66\u8f86\u4e4b\u95f4\u968f\u673a\u5faa\u73af\uff0c\u5e76\u5728\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u4e0b\u53ef\u89c6\u5316\u5b83\u4eec\u5728\u4ea4\u901a\u4e2d\u7684\u65c5\u7a0b\u3002\u6309 TAB \u952e\u5207\u6362\u5230\u968f\u673a\u9009\u62e9\u7684\u65b0\u8f66\u8f86\uff0c\u6309\u56de\u8f66\u952e\u53ef\u4ee5\u901a\u8fc7\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u624b\u52a8\u63a7\u5236\u8f66\u8f86\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9700\u8981\u6311\u6218\u9a7e\u9a76\u884c\u4e3a\u4e0d\u7a33\u5b9a\u7684\u4ee3\u7406\uff0c\u8fd9\u79cd\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\u53ef\u4ee5\u8c03\u6574\u9009\u62e9\u903b\u8f91\u4ee5\u9009\u62e9\u4e0e\u4ee3\u7406\u9a7e\u9a76\u7684\u8f66\u8f86\u63a5\u8fd1\u7684\u8f66\u8f86\u3002 # Game loop crashed = False while not crashed: # Advance the simulation time world.tick() # Update the display gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() # Process the current control state controlObject.process_control() # Collect key press events for event in pygame.event.get(): # If the window is closed, break the while loop if event.type == pygame.QUIT: crashed = True # Parse effect of key press event on control state controlObject.parse_control(event) if event.type == pygame.KEYUP: # TAB key switches vehicle if event.key == pygame.K_TAB: ego_vehicle.set_autopilot(True) ego_vehicle = random.choice(vehicles) # Ensure vehicle is still alive (might have been destroyed) if ego_vehicle.is_alive: # Stop and remove the camera camera.stop() camera.destroy() # Spawn new camera and attach to new vehicle controlObject = ControlObject(ego_vehicle) camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) camera.listen(lambda image: pygame_callback(image, renderObject)) # Update PyGame window gameDisplay.fill((0,0,0)) gameDisplay.blit(renderObject.surface, (0,0)) pygame.display.flip() # Stop camera and quit PyGame after exiting game loop camera.stop() pygame.quit()","title":"\u4f7f\u7528 PyGame \u6e32\u67d3\u76f8\u673a\u8f93\u51fa\u5e76\u63a7\u5236\u8f66\u8f86"},{"location":"tuto_G_retrieve_data/","text":"\u68c0\u7d22\u4eff\u771f\u6570\u636e \u5728 CARLA \u4e2d\uff0c\u5b66\u4e60\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u6765\u68c0\u7d22\u4eff\u771f\u6570\u636e\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u4e2a\u6574\u4f53\u6559\u7a0b\u9002\u5408\u65b0\u624b\u548c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7528\u6237\u3002\u5b83\u4ece\u5934\u5f00\u59cb\uff0c\u9010\u6e10\u6df1\u5165\u63a2\u8ba8 Carla \u4e2d\u53ef\u7528\u7684\u8bb8\u591a\u9009\u9879\u3002 \u9996\u5148\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u548c\u6d41\u91cf\u521d\u59cb\u5316\u4eff\u771f\u3002\u4e00\u8f86\u81ea\u6211\u8f66\u8f86\u5c06\u5728\u57ce\u5e02\u4e2d\u6f2b\u6e38\uff0c\u53ef\u9009\u5730\u914d\u5907\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u3002\u8bb0\u5f55\u4eff\u771f\uff0c\u4ee5\u4fbf\u4ee5\u540e\u67e5\u8be2\u4ee5\u627e\u5230\u4eae\u70b9\u3002\u4e4b\u540e\uff0c\u539f\u59cb\u4eff\u771f\u88ab\u56de\u653e\uff0c\u5e76\u88ab\u5229\u7528\u5230\u6781\u9650\u3002\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u4f20\u611f\u5668\u6765\u68c0\u7d22\u4e00\u81f4\u7684\u6570\u636e\u3002\u5929\u6c14\u6761\u4ef6\u662f\u53ef\u4ee5\u6539\u53d8\u7684\u3002\u8bb0\u5f55\u5668\u751a\u81f3\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\u5177\u6709\u4e0d\u540c\u8f93\u51fa\u7684\u7279\u5b9a\u573a\u666f\u3002 \u6982\u8ff0 \u8bbe\u7f6e\u4eff\u771f \u5730\u56fe\u8bbe\u7f6e \u5929\u6c14\u8bbe\u7f6e \u8bbe\u7f6e\u4ea4\u901a\u6d41\u91cf CARLA \u4ea4\u901a\u548c\u884c\u4eba SUMO \u534f\u540c\u4eff\u771f\u4ea4\u901a \u8bbe\u7f6e\u81ea\u6211\u8f66\u8f86 \u751f\u6210\u81ea\u6211\u8f66\u8f86 \u653e\u7f6e\u89c2\u5bdf\u8005 \u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668 RGB \u76f8\u673a \u68c0\u6d4b\u5668 \u5176\u4ed6\u4f20\u611f\u5668 \u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668 \u6df1\u5ea6\u76f8\u673a \u8bed\u4e49\u5206\u5272\u76f8\u673a \u6fc0\u5149\u96f7\u8fbe\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668 \u96f7\u8fbe\u4f20\u611f\u5668 \u975e\u6e32\u67d3\u6a21\u5f0f \u5feb\u901f\u4eff\u771f \u65e0\u9700\u6e32\u67d3\u7684\u624b\u52a8\u63a7\u5236 \u8bb0\u5f55\u548c\u68c0\u7d22\u6570\u636e \u5f00\u59cb\u8bb0\u5f55 \u6355\u83b7\u5e76\u8bb0\u5f55 \u505c\u6b62\u8bb0\u5f55 \u5229\u7528\u8bb0\u5f55 \u67e5\u8be2\u4e8b\u4ef6 \u9009\u62e9\u4e00\u4e2a\u7247\u6bb5 \u68c0\u7d22\u66f4\u591a\u6570\u636e \u6539\u53d8\u5929\u6c14 \u5c1d\u8bd5\u65b0\u7684\u7ed3\u679c \u6559\u7a0b\u811a\u672c \u6982\u8ff0 \u5728\u68c0\u7d22\u4eff\u771f\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u5b58\u5728\u4e00\u4e9b\u5e38\u89c1\u9519\u8bef\u3002\u4eff\u771f\u5668\u4e2d\u5145\u65a5\u7740\u4f20\u611f\u5668\u3001\u5b58\u50a8\u65e0\u7528\u7684\u6570\u636e\u6216\u52aa\u529b\u5bfb\u627e\u7279\u5b9a\u4e8b\u4ef6\u90fd\u662f\u4e00\u4e9b\u4f8b\u5b50\u3002\u7136\u800c\uff0c\u53ef\u4ee5\u63d0\u4f9b\u8be5\u8fc7\u7a0b\u7684\u4e00\u4e9b\u6982\u8981\u3002\u76ee\u6807\u662f\u786e\u4fdd\u6570\u636e\u53ef\u4ee5\u68c0\u7d22\u548c\u590d\u5236\uff0c\u5e76\u4e14\u53ef\u4ee5\u968f\u610f\u68c0\u67e5\u548c\u66f4\u6539\u4eff\u771f\u3002 \u7b14\u8bb0 \u672c\u6559\u7a0b\u4f7f\u7528 CARLA 0.9.8 deb \u5305 \u3002\u6839\u636e\u60a8\u7684 CARLA \u7248\u672c\u548c\u5b89\u88c5\uff0c\u53ef\u80fd\u4f1a\u6709\u7ec6\u5fae\u7684\u53d8\u5316\uff0c\u7279\u522b\u662f\u5728\u8def\u5f84\u65b9\u9762\u3002 \u672c\u6559\u7a0b\u4e3a\u4e0d\u540c\u6b65\u9aa4\u63d0\u4f9b\u4e86\u591a\u79cd\u9009\u9879\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u90fd\u4f1a\u63d0\u5230\u4e0d\u540c\u7684\u811a\u672c\u3002\u5e76\u4e0d\u662f\u6240\u6709\u7684\u90fd\u4f1a\u88ab\u4f7f\u7528\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u7528\u4f8b\u3002\u5176\u4e2d\u5927\u591a\u6570\u5df2\u5728 CARLA \u4e2d\u63d0\u4f9b\u7528\u4e8e\u901a\u7528\u76ee\u7684\u3002 config.py \u66f4\u6539\u4eff\u771f\u8bbe\u7f6e\u3002\u5730\u56fe\u3001\u6e32\u67d3\u9009\u9879\u3001\u8bbe\u7f6e\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f... carla/PythonAPI/util/config.py dynamic_weather.py \u521b\u5efa\u6709\u8da3\u7684\u5929\u6c14\u6761\u4ef6\u3002 carla/PythonAPI/examples/dynamic_weather.py spawn_npc.py spawn_npc.py\u751f\u6210\u4e00\u4e9b\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u8f66\u8f86\u548c\u884c\u4eba\u3002 carla/PythonAPI/examples/spawn_npc.py manual_control.py \u751f\u6210\u4e00\u4e2a\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u63d0\u4f9b\u5bf9\u5176\u7684\u63a7\u5236\u3002 carla/PythonAPI/examples/manual_control.py \u4f46\u662f\uff0c\u6559\u7a0b\u4e2d\u63d0\u5230\u7684\u4e24\u4e2a\u811a\u672c\u5728 CARLA \u4e2d\u627e\u4e0d\u5230\u3002\u5b83\u4eec\u5305\u542b\u5f15\u7528\u7684\u4ee3\u7801\u7247\u6bb5\u3002\u8fd9\u6709\u53cc\u91cd\u76ee\u7684\u3002\u9996\u5148\uff0c\u9f13\u52b1\u7528\u6237\u6784\u5efa\u81ea\u5df1\u7684\u811a\u672c\u3002\u5145\u5206\u7406\u89e3\u4ee3\u7801\u7684\u4f5c\u7528\u975e\u5e38\u91cd\u8981\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u672c\u6559\u7a0b\u53ea\u662f\u4e00\u4e2a\u5927\u7eb2\uff0c\u53ef\u80fd\u800c\u4e14\u5e94\u8be5\u6839\u636e\u7528\u6237\u7684\u559c\u597d\u800c\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u8fd9\u4e24\u4e2a\u811a\u672c\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\u3002 tutorial_ego.py \u751f\u6210\u5e26\u6709\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u7684\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u542f\u7528\u81ea\u52a8\u9a7e\u9a76\u4eea\u3002\u89c2\u5bdf\u8005\u88ab\u653e\u7f6e\u5728\u751f\u6210\u4f4d\u7f6e\u3002\u8bb0\u5f55\u5668\u4ece\u4e00\u5f00\u59cb\u5c31\u542f\u52a8\uff0c\u5e76\u5728\u811a\u672c\u5b8c\u6210\u65f6\u505c\u6b62\u3002 tutorial_replay.py \u91cd\u65b0\u6267\u884c tutorial_ego.py \u8bb0\u5f55\u7684\u4eff\u771f\u3002\u6709\u4e0d\u540c\u7684\u4ee3\u7801\u7247\u6bb5\u53ef\u4ee5\u67e5\u8be2\u8bb0\u5f55\u3001\u751f\u6210\u4e00\u4e9b\u9ad8\u7ea7\u4f20\u611f\u5668\u3001\u6539\u53d8\u5929\u6c14\u6761\u4ef6\u4ee5\u53ca\u91cd\u65b0\u6267\u884c\u8bb0\u5f55\u7247\u6bb5\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u6559\u7a0b\u7684\u6700\u540e\u90e8\u5206\u627e\u5230\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u4e25\u683c\uff0c\u800c\u662f\u53ef\u4ee5\u5b9a\u5236\u7684\u3002\u5728 CARLA \u4e2d\u68c0\u7d22\u6570\u636e\u7684\u529f\u80fd\u6b63\u5982\u7528\u6237\u6240\u5e0c\u671b\u7684\u90a3\u6837\u5f3a\u5927\u3002 \u91cd\u8981 \u672c\u6559\u7a0b\u9700\u8981\u4e00\u4e9b Python \u77e5\u8bc6\u3002 \u8bbe\u7f6e\u4eff\u771f \u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u5c06\u4eff\u771f\u8bbe\u7f6e\u4e3a\u6240\u9700\u7684\u73af\u5883\u3002 \u8fd0\u884c CARLA\u3002 cd /opt/carla/bin ./CarlaUE.sh \u5730\u56fe\u8bbe\u7f6e \u9009\u62e9\u8981\u8fd0\u884c\u4eff\u771f\u7684\u5730\u56fe\u3002\u67e5\u770b \u5730\u56fe\u6587\u6863 \u4ee5\u4e86\u89e3\u6709\u5173\u5176\u7279\u5b9a\u5c5e\u6027\u7684\u66f4\u591a\u4fe1\u606f\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u9009\u62e9 Town07 \u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\u3002\u4f7f\u7528 config.py \u811a\u672c\u66f4\u6539\u5730\u56fe\u3002 cd /opt/carla/PythonAPI/utils python3 config.py --map Town01 \u8be5\u811a\u672c\u53ef\u4ee5\u542f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u5176\u4e2d\u4e00\u4e9b\u5c06\u5728\u6559\u7a0b\u4e2d\u63d0\u53ca\uff0c\u53e6\u4e00\u4e9b\u5219\u4e0d\u4f1a\u3002\u4e0b\u9762\u6709\u4e00\u4e2a\u7b80\u77ed\u7684\u603b\u7ed3\u3002 config.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host CARLA Simulator (default: localhost) -p P, --port P TCP port of CARLA Simulator (default: 2000) -d, --default set default settings -m MAP, --map MAP load a new map, use --list to see available maps -r, --reload-map reload current map --delta-seconds S set fixed delta seconds, zero for variable frame rate --fps N set fixed FPS, zero for variable FPS (similar to --delta-seconds) --rendering enable rendering --no-rendering disable rendering --no-sync disable synchronous mode --weather WEATHER set weather preset, use --list to see available presets -i, --inspect inspect simulation -l, --list list available options -b FILTER, --list-blueprints FILTER list available blueprints matching FILTER (use '*' to list them all) -x XODR_FILE_PATH, --xodr-path XODR_FILE_PATH load a new map with a minimum physical road representation of the provided OpenDRIVE Aerial view of Town07 \u5929\u6c14\u8bbe\u7f6e \u6bcf\u4e2a\u57ce\u9547\u90fd\u6709\u9002\u5408\u5b83\u7684\u7279\u5b9a\u5929\u6c14\uff0c\u4f46\u662f\u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e\u3002\u6709\u4e24\u4e2a\u811a\u672c\u63d0\u4f9b\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u3002\u7b2c\u4e00\u4e2a\u8bbe\u7f6e\u4e86\u52a8\u6001\u5929\u6c14\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u60c5\u51b5\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u53e6\u4e00\u4e2a\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u5929\u6c14\u6761\u4ef6\u3002\u8fd8\u53ef\u4ee5\u5bf9\u5929\u6c14\u6761\u4ef6\u8fdb\u884c\u7f16\u7801\u3002\u7a0d\u540e \u5929\u6c14\u6761\u4ef6\u53d1\u751f\u53d8\u5316 \u65f6\u5c06\u5bf9\u6b64\u8fdb\u884c\u4ecb\u7ecd\u3002 \u8bbe\u7f6e\u52a8\u6001\u5929\u6c14 \u3002\u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\u5e76\u8fd0\u884c dynamic_weather.py \u3002\u8be5\u811a\u672c\u5141\u8bb8\u8bbe\u7f6e\u5929\u6c14\u53d8\u5316\u7684\u6bd4\u7387\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u662f 1.0 \u3002 cd /opt/carla/PythonAPI/examples python3 dynamic_weather.py --speed 1.0 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6761\u4ef6 \u4f7f\u7528\u811a\u672c environment.py \u3002\u6709\u5f88\u591a\u53ef\u80fd\u7684\u8bbe\u7f6e\u3002\u67e5\u770b\u53ef\u9009\u53c2\u6570\u4ee5\u53ca carla.WeatherParameters \u7684\u6587\u6863\u3002 cd /opt/carla/PythonAPI/util python3 environment.py --clouds 100 --rain 80 --wetness 100 --puddles 60 --wind 80 --fog 50 environment.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --sun SUN Sun position presets [sunset | day | night] --weather WEATHER Weather condition presets [clear | overcast | rain] --altitude A, -alt A Sun altitude [-90.0, 90.0] --azimuth A, -azm A Sun azimuth [0.0, 360.0] --clouds C, -c C Clouds amount [0.0, 100.0] --rain R, -r R Rain amount [0.0, 100.0] --puddles Pd, -pd Pd Puddles amount [0.0, 100.0] --wind W, -w W Wind intensity [0.0, 100.0] --fog F, -f F Fog intensity [0.0, 100.0] --fogdist Fd, -fd Fd Fog Distance [0.0, inf) --wetness Wet, -wet Wet Wetness intensity [0.0, 100.0] Weather changes applied \u8bbe\u7f6e\u4ea4\u901a\u6d41\u91cf \u4eff\u771f\u4ea4\u901a\u662f\u8ba9\u5730\u56fe\u6829\u6829\u5982\u751f\u7684\u6700\u4f73\u65b9\u6cd5\u4e4b\u4e00\u3002\u8fd8\u9700\u8981\u68c0\u7d22\u57ce\u5e02\u73af\u5883\u7684\u6570\u636e\u3002\u5728 CARLA \u4e2d\u6709\u4e0d\u540c\u7684\u9009\u62e9\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002 CARLA \u4ea4\u901a\u548c\u884c\u4eba CARLA \u4ea4\u901a\u6d41\u91cf\u7531 \u4ea4\u901a\u7ba1\u7406\u5668 \u6a21\u5757\u7ba1\u7406\u3002\u81f3\u4e8e\u884c\u4eba\uff0c\u4ed6\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684 carla.WalkerAIController \u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u7136\u540e\u8fd0\u884c spawn_npc.py \u6765\u751f\u6210\u8f66\u8f86\u548c\u6b65\u884c\u8005\u3002\u8ba9\u6211\u4eec\u751f\u6210 50 \u8f86\u8f66\u548c\u76f8\u540c\u6570\u91cf\u7684\u6b65\u884c\u8005\u3002 cd /opt/carla/PythonAPI/examples python3 spawn_npc.py -n 50 -w 50 --safe spawn_npc.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) -n N, --number-of-vehicles N number of vehicles (default: 10) -w W, --number-of-walkers W number of walkers (default: 50) --safe avoid spawning vehicles prone to accidents --filterv PATTERN vehicles filter (default: \"vehicle.*\") --filterw PATTERN pedestrians filter (default: \"walker.pedestrian.*\") -tm_p P, --tm-port P port to communicate with TM (default: 8000) --async Asynchronous mode execution Vehicles spawned to simulate traffic. SUMO \u534f\u540c\u4eff\u771f\u4ea4\u901a CARLA \u53ef\u4ee5\u4e0e SUMO \u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002\u8fd9\u5141\u8bb8\u5728 SUMO \u4e2d\u521b\u5efa\u5c06\u4f20\u64ad\u5230 CARLA \u7684\u4ea4\u901a\u6d41\u91cf\u3002\u8fd9\u79cd\u8054\u5408\u4eff\u771f\u662f\u53cc\u5411\u7684\u3002\u5728 CARLA \u4e2d\u751f\u6210\u7684\u8f66\u8f86\u5c06\u5728 SUMO \u4e2d\u751f\u6210\u3002\u6709\u5173\u6b64\u529f\u80fd\u7684\u5177\u4f53\u6587\u6863\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u3002 \u6b64\u529f\u80fd\u9002\u7528\u4e8e CARLA 0.9.8 \u53ca\u66f4\u9ad8\u7248\u672c\u7684 Town01 \u3001 Town04 \u548c Town05 \u3002\u7b2c\u4e00\u4e2a\u662f\u6700\u7a33\u5b9a\u7684\u3002 \u7b14\u8bb0 \u8054\u5408\u4eff\u771f\u5c06\u5728 CARLA \u4e2d\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb \u6587\u6863 \u4ee5\u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u3002 \u9996\u5148\uff0c\u5b89\u88c5SUMO\u3002 sudo add-apt-repository ppa:sumo/stable sudo apt-get update sudo apt-get install sumo sumo-tools sumo-doc \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf SUMO_HOME\u3002 echo \"export SUMO_HOME=/usr/share/sumo\" >> ~/.bashrc && source ~/.bashrc \u5728 CARLA \u670d\u52a1\u5668\u6253\u5f00\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c SUMO-CARLA \u540c\u6b65\u811a\u672c \u3002 cd ~/carla/Co-Simulation/Sumo python3 run_synchronization.py examples/Town01.sumocfg --sumo-gui SUMO \u7a97\u53e3\u5e94\u8be5\u5df2\u6253\u5f00\u3002 \u6309\u201c\u8fd0\u884c\u201d \u4ee5\u5728\u4e24\u4e2a\u4eff\u771f\u4e2d\u542f\u52a8\u4ea4\u901a\u6d41\u91cf\u3002 > \"Play\" on SUMO window. \u8be5\u811a\u672c\u751f\u6210\u7684\u6d41\u91cf\u662f CARLA \u56e2\u961f\u521b\u5efa\u7684\u793a\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u6cbf\u7740\u76f8\u540c\u7684\u8def\u7ebf\u751f\u6210\u76f8\u540c\u7684\u8f66\u8f86\u3002\u7528\u6237\u53ef\u4ee5\u5728 SUMO \u4e2d\u66f4\u6539\u8fd9\u4e9b\u5185\u5bb9\u3002 SUMO and CARLA co-simulating traffic. \u8b66\u544a \u76ee\u524d\uff0cSUMO \u8054\u5408\u4eff\u771f\u8fd8\u662f\u6d4b\u8bd5\u7248\u529f\u80fd\u3002\u8f66\u8f86\u6ca1\u6709\u7269\u7406\u7279\u6027\uff0c\u4e5f\u4e0d\u8003\u8651 CARLA \u4ea4\u901a\u706f\u3002 \u8bbe\u7f6e\u81ea\u6211\u8f66\u8f86 \u4ece\u73b0\u5728\u5230\u8bb0\u5f55\u5668\u505c\u6b62\u7684\u90a3\u4e00\u523b\uff0c\u5c06\u4f1a\u6709\u4e00\u4e9b\u5c5e\u4e8e tutorial_ego.py \u7684\u4ee3\u7801\u7247\u6bb5\u3002\u8be5\u811a\u672c\u751f\u6210\u81ea\u6211\u8f66\u8f86\uff0c\u53ef\u9009\u4e00\u4e9b\u4f20\u611f\u5668\uff0c\u5e76\u8bb0\u5f55\u4eff\u771f\uff0c\u76f4\u5230\u7528\u6237\u5b8c\u6210\u811a\u672c\u3002 \u751f\u6210\u81ea\u6211\u8f66\u8f86 \u7528\u6237\u63a7\u5236\u7684\u8f66\u8f86\u5728 CARLA \u4e2d\u901a\u5e38\u901a\u8fc7\u5c06\u5c5e\u6027 role_name \u8bbe\u7f6e\u4e3a ego \u6765\u533a\u5206\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5176\u4ed6\u5c5e\u6027\uff0c\u5176\u4e2d\u4e00\u4e9b\u5177\u6709\u63a8\u8350\u503c\u3002 \u4e0b\u9762\uff0c\u4ece \u84dd\u56fe\u5e93 \u4e2d\u68c0\u7d22\u7279\u65af\u62c9\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u968f\u673a\u63a8\u8350\u7684\u989c\u8272\u751f\u6210\u3002\u9009\u62e9\u5730\u56fe\u63a8\u8350\u7684\u751f\u6210\u70b9\u4e4b\u4e00\u6765\u653e\u7f6e\u81ea\u6211\u8f66\u8f86\u3002 # -------------- # Spawn ego vehicle # -------------- ego_bp = world.get_blueprint_library().find('vehicle.tesla.model3') ego_bp.set_attribute('role_name','ego') print('\\nEgo role_name is set') ego_color = random.choice(ego_bp.get_attribute('color').recommended_values) ego_bp.set_attribute('color',ego_color) print('\\nEgo color is set') spawn_points = world.get_map().get_spawn_points() number_of_spawn_points = len(spawn_points) if 0 < number_of_spawn_points: random.shuffle(spawn_points) ego_transform = spawn_points[0] ego_vehicle = world.spawn_actor(ego_bp,ego_transform) print('\\nEgo is spawned') else: logging.warning('Could not found any spawn points') \u653e\u7f6e\u89c2\u5bdf\u8005 \u89c2\u5bdf\u8005\u53c2\u4e0e\u8005\u63a7\u5236\u4eff\u771f\u89c6\u56fe\u3002\u901a\u8fc7\u811a\u672c\u79fb\u52a8\u5b83\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5b83\u53ef\u80fd\u6709\u52a9\u4e8e\u627e\u5230\u81ea\u6211\u8f66\u8f86\u3002 # -------------- # Spectator on ego position # -------------- spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform()) \u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668 \u751f\u6210\u4efb\u4f55\u4f20\u611f\u5668\u7684\u8fc7\u7a0b\u90fd\u975e\u5e38\u76f8\u4f3c\u3002 1. \u4f7f\u7528\u5e93\u67e5\u627e\u4f20\u611f\u5668\u84dd\u56fe\u3002 2. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u7279\u5b9a\u5c5e\u6027\u3002\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\u3002\u5c5e\u6027\u5c06\u5851\u9020\u68c0\u7d22\u5230\u7684\u6570\u636e\u3002 3. \u5c06\u4f20\u611f\u5668\u8fde\u63a5\u81f3\u81ea\u6211\u8f66\u8f86\u3002\u8be5\u53d8\u6362\u662f\u76f8\u5bf9\u4e8e\u5176\u7236\u7ea7\u7684\u3002 carla.AttachmentType \u5c06\u786e\u5b9a\u4f20\u611f\u5668\u4f4d\u7f6e\u7684\u66f4\u65b0\u65b9\u5f0f\u3002 4. \u6dfb\u52a0 listen() \u65b9\u6cd5\u3002\u8fd9\u662f\u5173\u952e\u8981\u7d20\u3002\u6bcf\u6b21\u4f20\u611f\u5668\u4fa6\u542c\u6570\u636e\u65f6\u90fd\u4f1a\u8c03\u7528\u7684 lambda \u65b9\u6cd5\u3002\u53c2\u6570\u662f\u68c0\u7d22\u5230\u7684\u4f20\u611f\u5668\u6570\u636e\u3002 \u7262\u8bb0\u8fd9\u4e00\u57fa\u672c\u51c6\u5219\uff0c\u8ba9\u6211\u4eec\u4e3a\u81ea\u6211\u8f66\u8f86\u8bbe\u7f6e\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u3002 RGB \u76f8\u673a RGB \u76f8\u673a \u751f\u6210\u903c\u771f\u7684\u573a\u666f\u56fe\u7247\u3002\u5b83\u662f\u6240\u6709\u4f20\u611f\u5668\u4e2d\u53ef\u8bbe\u7f6e\u5c5e\u6027\u8f83\u591a\u7684\u4f20\u611f\u5668\uff0c\u4f46\u5b83\u4e5f\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4f20\u611f\u5668\u3002\u5b83\u5e94\u8be5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u76f8\u673a\uff0c\u5177\u6709\u8bf8\u5982 focal_distance \u3001 shutter_speed \u6216 gamma \u786e\u5b9a\u5176\u5185\u90e8\u5982\u4f55\u5de5\u4f5c\u7684\u5c5e\u6027\u3002\u8fd8\u6709\u4e00\u7ec4\u7279\u5b9a\u7684\u5c5e\u6027\u6765\u5b9a\u4e49\u955c\u5934\u7578\u53d8\uff0c\u4ee5\u53ca\u8bb8\u591a\u9ad8\u7ea7\u5c5e\u6027\u3002\u4f8b\u5982\uff0c lens_circle_multiplier \u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u773c\u775b\u9c7c\u955c\u5934\u7684\u6548\u679c\u3002\u5728\u6587\u6863\u4e2d\u4e86\u89e3\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u811a\u672c\u4ec5\u8bbe\u7f6e\u8be5\u4f20\u611f\u5668\u6700\u5e38\u7528\u7684\u5c5e\u6027\u3002 image_size_x \u548c image_size_y \u5c06\u6539\u53d8\u8f93\u51fa\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u3002 fov \u662f\u76f8\u673a\u7684\u6c34\u5e73\u89c6\u91ce\u3002 \u8bbe\u7f6e\u5c5e\u6027\u540e\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u4f20\u611f\u5668\u4e86\u3002\u811a\u672c\u5c06\u6444\u50cf\u673a\u653e\u7f6e\u5728\u6c7d\u8f66\u5f15\u64ce\u76d6\u4e2d\uff0c\u5e76\u6307\u5411\u524d\u65b9\u3002\u5b83\u5c06\u6355\u6349\u6c7d\u8f66\u7684\u524d\u89c6\u56fe\u3002 \u6bcf\u4e00\u6b65\u90fd\u4f1a\u4ee5 carla.Image \u7684\u5f62\u5f0f\u68c0\u7d22\u6570\u636e\u3002Listen \u65b9\u6cd5\u5c06\u5b83\u4eec\u4fdd\u5b58\u5230\u78c1\u76d8\u3002\u8def\u5f84\u53ef\u4ee5\u968f\u610f\u6539\u53d8\u3002\u6bcf\u5f20\u56fe\u50cf\u7684\u540d\u79f0\u5747\u6839\u636e\u62cd\u6444\u955c\u5934\u7684\u6a21\u62df\u5e27\u8fdb\u884c\u7f16\u7801\u3002 # -------------- # Spawn attached RGB camera # -------------- cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('tutorial/output/%.6d.jpg' % image.frame)) RGB camera output \u68c0\u6d4b\u5668 \u5f53\u5b83\u4eec\u6240\u9644\u52a0\u7684\u5bf9\u8c61\u6ce8\u518c\u7279\u5b9a\u4e8b\u4ef6\u65f6\uff0c\u8fd9\u4e9b\u4f20\u611f\u5668\u4f1a\u68c0\u7d22\u6570\u636e\u3002\u68c0\u6d4b\u5668\u4f20\u611f\u5668\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u6bcf\u79cd\u90fd\u63cf\u8ff0\u4e00\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002 \u78b0\u649e\u68c0\u6d4b\u5668\u3002 \u68c0\u7d22\u5176\u7236\u7ea7\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 \u8f66\u9053\u5165\u4fb5\u68c0\u6d4b\u5668\u3002 \u5f53\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u8fdb\u884c\u6ce8\u518c\u3002 \u969c\u788d\u7269\u68c0\u6d4b\u5668\u3002 \u68c0\u6d4b\u5176\u7236\u7ea7\u524d\u65b9\u53ef\u80fd\u5b58\u5728\u7684\u969c\u788d\u7269\u3002 \u4ed6\u4eec\u68c0\u7d22\u5230\u7684\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u7a0d\u540e\u51b3\u5b9a\u8981\u91cd\u65b0\u6267\u884c\u4eff\u771f\u7684\u54ea\u4e00\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5f55\u5668\u663e\u5f0f\u67e5\u8be2\u51b2\u7a81\u3002\u8fd9\u662f\u51c6\u5907\u6253\u5370\u7684\u3002 \u53ea\u6709\u969c\u788d\u7269\u68c0\u6d4b\u5668\u84dd\u56fe\u6709\u9700\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u91cd\u8981\u7684\u5185\u5bb9\u3002 sensor_tick \u8bbe\u7f6e\u4f20\u611f\u5668\u4ec5\u5728 x \u79d2\u949f\u540e\u68c0\u7d22\u6570\u636e\u3002\u8fd9\u662f\u68c0\u7d22\u6bcf\u4e00\u6b65\u6570\u636e\u7684\u4f20\u611f\u5668\u7684\u5e38\u89c1\u5c5e\u6027\u3002 distance \u548c hit-radius \u5851\u9020\u7528\u4e8e\u68c0\u6d4b\u524d\u65b9\u969c\u788d\u7269\u7684\u8c03\u8bd5\u7ebf\u3002 only_dynamics \u786e\u5b9a\u662f\u5426\u5e94\u8003\u8651\u9759\u6001\u5bf9\u8c61\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u5bf9\u8c61\u90fd\u4f1a\u88ab\u8003\u8651\u3002 \u8be5\u811a\u672c\u5c06\u969c\u788d\u7269\u68c0\u6d4b\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u8003\u8651\u52a8\u6001\u5bf9\u8c61\u3002\u5982\u679c\u8f66\u8f86\u4e0e\u4efb\u4f55\u9759\u6001\u7269\u4f53\u53d1\u751f\u78b0\u649e\uff0c\u78b0\u649e\u4f20\u611f\u5668\u90fd\u4f1a\u68c0\u6d4b\u5230\u3002 # -------------- # Add collision sensor to ego vehicle. # -------------- col_bp = world.get_blueprint_library().find('sensor.other.collision') col_location = carla.Location(0,0,0) col_rotation = carla.Rotation(0,0,0) col_transform = carla.Transform(col_location,col_rotation) ego_col = world.spawn_actor(col_bp,col_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def col_callback(colli): print(\"Collision detected:\\n\"+str(colli)+'\\n') ego_col.listen(lambda colli: col_callback(colli)) # -------------- # Add Lane invasion sensor to ego vehicle. # -------------- lane_bp = world.get_blueprint_library().find('sensor.other.lane_invasion') lane_location = carla.Location(0,0,0) lane_rotation = carla.Rotation(0,0,0) lane_transform = carla.Transform(lane_location,lane_rotation) ego_lane = world.spawn_actor(lane_bp,lane_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def lane_callback(lane): print(\"Lane invasion detected:\\n\"+str(lane)+'\\n') ego_lane.listen(lambda lane: lane_callback(lane)) # -------------- # Add Obstacle sensor to ego vehicle. # -------------- obs_bp = world.get_blueprint_library().find('sensor.other.obstacle') obs_bp.set_attribute(\"only_dynamics\",str(True)) obs_location = carla.Location(0,0,0) obs_rotation = carla.Rotation(0,0,0) obs_transform = carla.Transform(obs_location,obs_rotation) ego_obs = world.spawn_actor(obs_bp,obs_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def obs_callback(obs): print(\"Obstacle detected:\\n\"+str(obs)+'\\n') ego_obs.listen(lambda obs: obs_callback(obs)) Output for detector sensors \u5176\u4ed6\u4f20\u611f\u5668 \u6682\u65f6\u53ea\u8003\u8651\u8be5\u7c7b\u522b\u7684\u4e24\u4e2a\u4f20\u611f\u5668\u3002 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668\u3002 \u68c0\u7d22\u4f20\u611f\u5668\u7684\u5730\u7406\u4f4d\u7f6e\u3002 IMU \u4f20\u611f\u5668\u3002 \u5305\u62ec\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u3002 \u4e3a\u4e86\u83b7\u5f97\u8f66\u8f86\u5bf9\u8c61\u7684\u4e00\u822c\u6d4b\u91cf\u503c\uff0c\u8fd9\u4e24\u4e2a\u4f20\u611f\u5668\u4ee5\u8f66\u8f86\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u751f\u6210\u3002 \u8fd9\u4e9b\u4f20\u611f\u5668\u53ef\u7528\u7684\u5c5e\u6027\u4e3b\u8981\u8bbe\u7f6e\u6d4b\u91cf\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u503c\u6216\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002\u8fd9\u5bf9\u4e8e\u83b7\u5f97\u66f4\u73b0\u5b9e\u7684\u63aa\u65bd\u5f88\u6709\u7528\u3002\u7136\u800c\uff0c\u5728 tutorial_ego.py \u4e2d\u53ea\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5c5e\u6027\u3002 sensor_tick . \u7531\u4e8e\u6b64\u6d4b\u91cf\u503c\u5728\u6b65\u9aa4\u4e4b\u95f4\u4e0d\u5e94\u6709\u663e\u7740\u53d8\u5316\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ecf\u5e38\u68c0\u7d22\u6570\u636e\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u8bbe\u7f6e\u4e3a\u6bcf\u4e09\u79d2\u6253\u5370\u4e00\u6b21\u3002 # -------------- # Add GNSS sensor to ego vehicle. # -------------- gnss_bp = world.get_blueprint_library().find('sensor.other.gnss') gnss_location = carla.Location(0,0,0) gnss_rotation = carla.Rotation(0,0,0) gnss_transform = carla.Transform(gnss_location,gnss_rotation) gnss_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_gnss = world.spawn_actor(gnss_bp,gnss_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def gnss_callback(gnss): print(\"GNSS measure:\\n\"+str(gnss)+'\\n') ego_gnss.listen(lambda gnss: gnss_callback(gnss)) # -------------- # Add IMU sensor to ego vehicle. # -------------- imu_bp = world.get_blueprint_library().find('sensor.other.imu') imu_location = carla.Location(0,0,0) imu_rotation = carla.Rotation(0,0,0) imu_transform = carla.Transform(imu_location,imu_rotation) imu_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_imu = world.spawn_actor(imu_bp,imu_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def imu_callback(imu): print(\"IMU measure:\\n\"+str(imu)+'\\n') ego_imu.listen(lambda imu: imu_callback(imu)) GNSS and IMU sensors output \u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668 \u811a\u672c tutorial_replay.py \u9664\u5176\u4ed6\u5916\u8fd8\u5305\u542b\u66f4\u591a\u4f20\u611f\u5668\u7684\u5b9a\u4e49\u3002\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u57fa\u672c\u7684\u76f8\u540c\uff0c\u4f46\u7406\u89e3\u53ef\u80fd\u6709\u70b9\u56f0\u96be\u3002 \u6df1\u5ea6\u76f8\u673a \u6df1\u5ea6\u76f8\u673a \u751f\u6210\u573a\u666f\u7684\u56fe\u7247\uff0c\u5c06\u6bcf\u4e2a\u50cf\u7d20\u6620\u5c04\u5230\u7070\u5ea6\u6df1\u5ea6\u56fe\u4e2d\u3002\u7136\u800c\uff0c\u8f93\u51fa\u5e76\u4e0d\u7b80\u5355\u3002\u76f8\u673a\u7684\u6df1\u5ea6\u7f13\u51b2\u533a\u4f7f\u7528 RGB \u989c\u8272\u7a7a\u95f4\u8fdb\u884c\u6620\u5c04\u3002\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u624d\u80fd\u7406\u89e3\u3002 \u4e3a\u6b64\uff0c\u53ea\u9700\u5c06\u56fe\u50cf\u4fdd\u5b58\u4e3a RGB \u76f8\u673a\u7684\u56fe\u50cf\uff0c\u4f46\u5bf9\u5176\u5e94\u7528 carla.ColorConverter \u5373\u53ef\u3002\u6df1\u5ea6\u76f8\u673a\u6709\u4e24\u79cd\u53ef\u7528\u7684\u8f6c\u6362\u3002 carla.ColorConverter.Depth \u4ee5\u6beb\u7c73\u7ea7\u7cbe\u5ea6\u8f6c\u6362\u539f\u59cb\u6df1\u5ea6\u3002 carla.ColorConverter.LogarithmicDepth \u4e5f\u5177\u6709\u6beb\u7c73\u7ea7\u7c92\u5ea6\uff0c\u4f46\u5728\u8fd1\u8ddd\u79bb\u5185\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u800c\u5bf9\u4e8e\u8f83\u8fdc\u7684\u5143\u7d20\u5219\u7a0d\u5dee\u4e00\u4e9b\u3002 \u6df1\u5ea6\u76f8\u673a\u7684\u5c5e\u6027\u4ec5\u8bbe\u7f6e\u4e4b\u524d\u5728 RGB \u76f8\u673a\u4e2d\u6240\u8ff0\u7684\u5143\u7d20\uff1a fov \u3001 image_size_x \u3001 image_size_y \u548c sensor_tick \u3002\u8be5\u811a\u672c\u5c06\u6b64\u4f20\u611f\u5668\u8bbe\u7f6e\u4e3a\u4e0e\u4e4b\u524d\u4f7f\u7528\u7684 RGB \u76f8\u673a\u76f8\u5339\u914d\u3002 # -------------- # Add a Depth camera to ego vehicle. # -------------- depth_cam = None depth_bp = world.get_blueprint_library().find('sensor.camera.depth') depth_location = carla.Location(2,0,1) depth_rotation = carla.Rotation(0,180,0) depth_transform = carla.Transform(depth_location,depth_rotation) depth_cam = world.spawn_actor(depth_bp,depth_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam.listen(lambda image: image.save_to_disk('tutorial/new_depth_output/%.6d.jpg' % image.frame,carla.ColorConverter.LogarithmicDepth)) Depth camera output. Simple conversion on the left, logarithmic on the right. \u8bed\u4e49\u5206\u5272\u76f8\u673a \u8bed\u4e49\u5206\u5272\u76f8\u673a \u6839\u636e\u5143\u7d20\u7684\u6807\u8bb0\u65b9\u5f0f\u5c06\u573a\u666f\u4e2d\u7684\u5143\u7d20\u6e32\u67d3\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002\u6807\u7b7e\u7531\u4eff\u771f\u5668\u6839\u636e\u7528\u4e8e\u751f\u6210\u7684\u8d44\u6e90\u7684\u8def\u5f84\u521b\u5efa\u3002\u4f8b\u5982\uff0c\u6807\u8bb0\u4e3a Pedestrians \u7684\u7f51\u683c\u4f53\u662f\u4f7f\u7528\u5b58\u50a8\u5728 Unreal/CarlaUE4/Content/Static/Pedestrians \u4e2d\u7684\u5185\u5bb9\u751f\u6210\u7684\u3002 \u4e0e\u4efb\u4f55\u76f8\u673a\u4e00\u6837\uff0c\u8f93\u51fa\u662f\u56fe\u50cf\uff0c\u4f46\u6bcf\u4e2a\u50cf\u7d20\u90fd\u5305\u542b\u5728\u7ea2\u8272\u901a\u9053\u4e2d\u7f16\u7801\u7684\u6807\u7b7e\u3002\u5fc5\u987b\u4f7f\u7528 ColorConverter.CityScapesPalette \u8f6c\u6362\u6b64\u539f\u59cb\u56fe\u50cf\u3002\u53ef\u4ee5\u521b\u5efa\u65b0\u6807\u7b7e\uff0c\u8bf7\u9605\u8bfb \u6587\u6863 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u8be5\u76f8\u673a\u53ef\u7528\u7684\u5c5e\u6027\u4e0e\u6df1\u5ea6\u76f8\u673a\u5b8c\u5168\u76f8\u540c\u3002\u8be5\u811a\u672c\u8fd8\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e0e\u539f\u59cb RGB \u76f8\u673a\u76f8\u5339\u914d\u3002 # -------------- # Add a new semantic segmentation camera to my ego # -------------- sem_cam = None sem_bp = world.get_blueprint_library().find('sensor.camera.semantic_segmentation') sem_bp.set_attribute(\"image_size_x\",str(1920)) sem_bp.set_attribute(\"image_size_y\",str(1080)) sem_bp.set_attribute(\"fov\",str(105)) sem_location = carla.Location(2,0,1) sem_rotation = carla.Rotation(0,180,0) sem_transform = carla.Transform(sem_location,sem_rotation) sem_cam = world.spawn_actor(sem_bp,sem_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view sem_cam.listen(lambda image: image.save_to_disk('tutorial/new_sem_output/%.6d.jpg' % image.frame,carla.ColorConverter.CityScapesPalette)) Semantic segmentation camera output \u6fc0\u5149\u96f7\u8fbe\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668 \u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u4eff\u771f\u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u4ee5\u4e09\u7ef4\u5f62\u5f0f\u6620\u5c04\u573a\u666f\u7684\u70b9\u4e91\u3002\u6fc0\u5149\u96f7\u8fbe\u5305\u542b\u4e00\u7ec4\u4ee5\u7279\u5b9a\u9891\u7387\u65cb\u8f6c\u7684\u6fc0\u5149\u5668\u3002\u6fc0\u5149\u6295\u5c04\u649e\u51fb\u8ddd\u79bb\uff0c\u5e76\u5c06\u6bcf\u6b21\u5c04\u51fb\u5b58\u50a8\u4e3a\u4e00\u4e2a\u70b9\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u4f20\u611f\u5668\u5c5e\u6027\u6765\u8bbe\u7f6e\u6fc0\u5149\u5668\u9635\u5217\u7684\u5e03\u7f6e\u65b9\u5f0f\u3002 upper_fov \u548c lower_fov \u5206\u522b\u662f\u6700\u9ad8\u548c\u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\u3002 channels \u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u6fc0\u5149\u6570\u91cf\u3002\u8fd9\u4e9b\u6cbf\u7740\u6240\u9700\u7684 fov \u5206\u5e03\u3002 \u5176\u4ed6\u5c5e\u6027\u8bbe\u7f6e\u8be5\u70b9\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002\u5b83\u4eec\u786e\u5b9a\u6bcf\u4e2a\u6fc0\u5149\u5668\u6bcf\u4e00\u6b65\u8ba1\u7b97\u7684\u70b9\u6570\uff1a points_per_second / (FPS * channels) . range \u662f\u6355\u83b7\u7684\u6700\u5927\u8ddd\u79bb\u3002 points_per_second \u662f\u6bcf\u79d2\u83b7\u5f97\u7684\u70b9\u6570\u3002\u8be5\u6570\u91cf\u9664\u4ee5 channels \u7684\u6570\u91cf\u3002 rotation_frequency \u662f\u6fc0\u5149\u96f7\u8fbe\u6bcf\u79d2\u65cb\u8f6c\u7684\u6b21\u6570\u3002 \u70b9\u4e91\u8f93\u51fa\u88ab\u63cf\u8ff0\u4e3a [carla.LidarMeasurement]\u3002\u5b83\u53ef\u4ee5\u4f5c\u4e3a [carla.Location] \u5217\u8868\u8fdb\u884c\u8fed\u4ee3\u6216\u4fdd\u5b58\u4e3a .ply \u6807\u51c6\u6587\u4ef6\u683c\u5f0f\u3002 # -------------- # Add a new LIDAR sensor to my ego # -------------- lidar_cam = None lidar_bp = world.get_blueprint_library().find('sensor.lidar.ray_cast') lidar_bp.set_attribute('channels',str(32)) lidar_bp.set_attribute('points_per_second',str(90000)) lidar_bp.set_attribute('rotation_frequency',str(40)) lidar_bp.set_attribute('range',str(20)) lidar_location = carla.Location(0,0,2) lidar_rotation = carla.Rotation(0,0,0) lidar_transform = carla.Transform(lidar_location,lidar_rotation) lidar_sen = world.spawn_actor(lidar_bp,lidar_transform,attach_to=ego_vehicle) lidar_sen.listen(lambda point_cloud: point_cloud.save_to_disk('tutorial/new_lidar_output/%.6d.ply' % point_cloud.frame)) .ply \u8f93\u51fa\u53ef\u4ee5\u4f7f\u7528 Meshlab \u8fdb\u884c\u53ef\u89c6\u5316\u3002 1. \u5b89\u88c5 Meshlab \u3002 sudo apt-get update -y sudo apt-get install -y meshlab 2. \u6253\u5f00 Meshlab \u3002 meshlab 3. \u6253\u5f00\u5176\u4e2d\u4e00\u4e2a .ply \u6587\u4ef6\u3002 File > Import mesh... \u7ecf\u8fc7Meshlab\u5904\u7406\u540e\u7684\u6fc0\u5149\u96f7\u8fbe\u8f93\u51fa\u3002 \u96f7\u8fbe\u4f20\u611f\u5668 \u96f7\u8fbe\u4f20\u611f\u5668 \u4e0e \u6fc0\u5149\u96f7\u8fbe\u7c7b\u4f3c\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u5706\u9525\u89c6\u56fe\uff0c\u5e76\u5411\u5185\u90e8\u53d1\u5c04\u6fc0\u5149\u4ee5\u5c04\u7ebf\u6295\u5c04\u5176\u5f71\u54cd\u3002\u8f93\u51fa\u662f carla.RadarMeasurement \u3002\u5b83\u5305\u542b\u7531\u6fc0\u5149\u5668\u68c0\u7d22\u5230\u7684 carla.RadarDetection \u7684\u5217\u8868\u3002\u8fd9\u4e9b\u4e0d\u662f\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u800c\u662f\u4f7f\u7528\u6709\u5173\u4f20\u611f\u5668\u7684\u6570\u636e\u8fdb\u884c\u7684\u68c0\u6d4b\uff1a \u8be5\u4f20\u611f\u5668\u7684\u5c5e\u6027\u4e3b\u8981\u51b3\u5b9a\u4e86\u6fc0\u5149\u5668\u7684\u5b9a\u4f4d\u65b9\u5f0f\u3002 horizontal_fov \u548c vertical_fov \u786e\u5b9a\u5706\u9525\u89c6\u56fe\u7684\u632f\u5e45\u3002 channels \u7f6e\u8981\u4f7f\u7528\u7684\u6fc0\u5149\u6570\u91cf\u3002\u8fd9\u4e9b\u6cbf\u7740\u6240\u9700 fov \u7684\u5206\u5e03\u3002 range \u662f\u6fc0\u5149\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u3002 points_per_second \u8bbe\u7f6e\u8981\u6355\u83b7\u7684\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u4e9b\u70b9\u5c06\u5728\u6307\u5b9a\u7684\u901a\u9053\u4e4b\u95f4\u5206\u914d\u3002 \u8be5\u811a\u672c\u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u6c7d\u8f66\u5f15\u64ce\u76d6\u4e0a\uff0c\u5e76\u5411\u4e0a\u65cb\u8f6c\u4e00\u70b9\u3002\u8fd9\u6837\uff0c\u8f93\u51fa\u5c06\u6620\u5c04\u6c7d\u8f66\u7684\u524d\u89c6\u56fe\u3002 horizontal_fov \u662f\u589e\u52a0\u7684\uff0c vertical_fov \u662f\u51cf\u5c11\u7684\u3002\u611f\u5174\u8da3\u7684\u533a\u57df\u7279\u522b\u662f\u8f66\u8f86\u548c\u6b65\u884c\u8005\u901a\u5e38\u79fb\u52a8\u7684\u9ad8\u5ea6\u3002\u8ddd\u79bb range \u4e5f\u4ece 100m \u66f4\u6539\u4e3a 10m\uff0c\u4ee5\u4fbf\u4ec5\u68c0\u7d22\u8f66\u8f86\u6b63\u524d\u65b9\u7684\u6570\u636e\u3002 \u8fd9\u6b21\u7684\u56de\u8c03\u6709\u70b9\u590d\u6742\uff0c\u663e\u793a\u4e86\u5b83\u7684\u66f4\u591a\u529f\u80fd\u3002\u5b83\u5c06\u5b9e\u65f6\u7ed8\u5236\u96f7\u8fbe\u6355\u83b7\u7684\u70b9\u3002\u8fd9\u4e9b\u70b9\u5c06\u6839\u636e\u5b83\u4eec\u76f8\u5bf9\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u800c\u7740\u8272\u3002 Blue \u8868\u793a\u63a5\u8fd1\u8f66\u8f86\u7684\u70b9\u3002 Red \u8868\u793a\u8fdc\u79bb\u63a5\u8fd1\u8f66\u8f86\u7684\u70b9\u3002 White \u4ee3\u8868\u5173\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u9759\u6001\u70b9\u3002 # -------------- # Add a new radar sensor to my ego # -------------- rad_cam = None rad_bp = world.get_blueprint_library().find('sensor.other.radar') rad_bp.set_attribute('horizontal_fov', str(35)) rad_bp.set_attribute('vertical_fov', str(20)) rad_bp.set_attribute('range', str(20)) rad_location = carla.Location(x=2.0, z=1.0) rad_rotation = carla.Rotation(pitch=5) rad_transform = carla.Transform(rad_location,rad_rotation) rad_ego = world.spawn_actor(rad_bp,rad_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def rad_callback(radar_data): velocity_range = 7.5 # m/s current_rot = radar_data.transform.rotation for detect in radar_data: azi = math.degrees(detect.azimuth) alt = math.degrees(detect.altitude) # The 0.25 adjusts a bit the distance so the dots can # be properly seen fw_vec = carla.Vector3D(x=detect.depth - 0.25) carla.Transform( carla.Location(), carla.Rotation( pitch=current_rot.pitch + alt, yaw=current_rot.yaw + azi, roll=current_rot.roll)).transform(fw_vec) def clamp(min_v, max_v, value): return max(min_v, min(value, max_v)) norm_velocity = detect.velocity / velocity_range # range [-1, 1] r = int(clamp(0.0, 1.0, 1.0 - norm_velocity) * 255.0) g = int(clamp(0.0, 1.0, 1.0 - abs(norm_velocity)) * 255.0) b = int(abs(clamp(- 1.0, 0.0, - 1.0 - norm_velocity)) * 255.0) world.debug.draw_point( radar_data.transform.location + fw_vec, size=0.075, life_time=0.06, persistent_lines=False, color=carla.Color(r, g, b)) rad_ego.listen(lambda radar_data: rad_callback(radar_data)) \u96f7\u8fbe\u8f93\u51fa\u3002\u8f66\u8f86\u505c\u5728\u7ea2\u7eff\u706f\u5904\uff0c\u56e0\u6b64\u5176\u524d\u9762\u7684\u9759\u6001\u5143\u7d20\u663e\u793a\u4e3a\u767d\u8272\u3002 \u975e\u6e32\u67d3\u6a21\u5f0f \u65e0\u6e32\u67d3\u6a21\u5f0f \u5bf9\u4e8e\u8fd0\u884c\u521d\u59cb\u4eff\u771f\u975e\u5e38\u6709\u7528\uff0c\u7a0d\u540e\u5c06\u518d\u6b21\u64ad\u653e\u8be5\u4eff\u771f\u4ee5\u68c0\u7d22\u6570\u636e\u3002\u7279\u522b\u662f\u5982\u679c\u8be5\u4eff\u771f\u5b58\u5728\u4e00\u4e9b\u6781\u7aef\u6761\u4ef6\uff0c\u4f8b\u5982\u4ea4\u901a\u5bc6\u96c6\u3002 \u5feb\u901f\u4eff\u771f \u7981\u7528\u6e32\u67d3\u5c06\u4e3a\u4eff\u771f\u8282\u7701\u5927\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u4e0d\u4f7f\u7528 GPU\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5168\u901f\u5de5\u4f5c\u3002\u8fd9\u5bf9\u4e8e\u5feb\u901f\u4eff\u771f\u590d\u6742\u7684\u6761\u4ef6\u5f88\u6709\u7528\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u4ee5\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u8fd0\u884c\u5f02\u6b65\u670d\u52a1\u5668\u5e76\u4e14\u4e0d\u8fdb\u884c\u6e32\u67d3\uff0c\u4eff\u771f\u7684\u552f\u4e00\u9650\u5236\u662f\u670d\u52a1\u5668\u7684\u5185\u90e8\u903b\u8f91\u3002 \u76f8\u540c\u7684 config.py \u7528\u4e8e \u8bbe\u7f6e\u5730\u56fe \u53ef\u4ee5\u7981\u7528\u6e32\u67d3\uff0c\u5e76\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002 cd /opt/carla/PythonAPI/utils python3 config.py --no-rendering --delta-seconds 0.05 # Never greater than 0.1s \u8b66\u544a \u5728\u4f7f\u7528\u540c\u6b65\u548c\u65f6\u95f4\u6b65\u4e4b\u524d\uff0c\u8bf7\u5148\u9605\u8bfb \u6587\u6863 \u3002 \u65e0\u9700\u6e32\u67d3\u7684\u624b\u52a8\u63a7\u5236 \u811a\u672c PythonAPI/examples/no_rendering_mode.py \u63d0\u4f9b\u4e86\u6a21\u62df\u7684\u6982\u8ff0\u3002\u5b83\u4f7f\u7528 Pygame \u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u7ea6\u7684\u9e1f\u77b0\u56fe\uff0c\u5b83\u5c06\u8ddf\u968f\u81ea\u6211\u8f66\u8f86\u3002\u8fd9\u53ef\u4ee5\u4e0e manual_control.py \u4e00\u8d77\u4f7f\u7528\u6765\u751f\u6210\u4e00\u6761\u51e0\u4e4e\u6ca1\u6709\u6210\u672c\u7684\u8def\u7ebf\uff0c\u8bb0\u5f55\u5b83\uff0c\u7136\u540e\u56de\u653e\u5e76\u5229\u7528\u5b83\u6765\u6536\u96c6\u6570\u636e\u3002 cd /opt/carla/PythonAPI/examples python3 manual_control.py cd /opt/carla/PythonAPI/examples python3 no_rendering_mode.py --no-rendering no_rendering_mode.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit -v, --verbose print debug information --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --res WIDTHxHEIGHT window resolution (default: 1280x720) --filter PATTERN actor filter (default: \"vehicle.*\") --map TOWN start a new episode at the given TOWN --no-rendering switch off server rendering --show-triggers show trigger boxes of traffic signs --show-connections show waypoint connections --show-spawn-points show recommended spawn points no_rendering_mode.py working in Town07 \u7b14\u8bb0 \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u5c06\u68c0\u7d22\u7a7a\u6570\u636e\u3002\u6444\u50cf\u5934\u6ca1\u7528\uff0c\u4f46\u63a2\u6d4b\u5668\u7b49\u5176\u4ed6\u4f20\u611f\u5668\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u8bb0\u5f55\u548c\u68c0\u7d22\u6570\u636e \u5f00\u59cb\u8bb0\u5f55 \u8bb0\u5f55\u5668 \u53ef\u4ee5\u968f\u65f6\u542f\u52a8\u3002\u811a\u672c\u4ece\u4e00\u5f00\u59cb\u5c31\u8fd9\u6837\u505a\uff0c\u4ee5\u4fbf\u6355\u6349\u4e00\u5207\uff0c\u5305\u62ec\u7b2c\u4e00\u6279\u53c2\u4e0e\u8005\u7684\u4ea7\u751f\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u8def\u5f84\uff0c\u65e5\u5fd7\u5c06\u4fdd\u5b58\u5230 CarlaUE4/Saved \u3002 # -------------- # \u5f00\u59cb\u8bb0\u5f55 # -------------- client.start_recorder('~/tutorial/recorder/recording01.log') \u6355\u83b7\u5e76\u8bb0\u5f55 \u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u56e0\u4e3a\u8ba9\u5b83\u56db\u5904\u6f2b\u6e38\u6216\u624b\u52a8\u63a7\u5236\u800c\u51fa\u73b0\u6545\u969c\u3002\u4ea7\u751f\u7684\u4f20\u611f\u5668\u7684\u6570\u636e\u5c06\u88ab\u5373\u65f6\u68c0\u7d22\u3002\u8bf7\u52a1\u5fc5\u5728\u8bb0\u5f55\u65f6\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u4e00\u5207\u8bbe\u7f6e\u6b63\u786e\u3002 \u542f\u7528\u81ea\u52a8\u9a7e\u9a76\u3002 \u8fd9\u4f1a\u5c06\u8f66\u8f86\u6ce8\u518c\u5230 \u4ea4\u901a\u7ba1\u7406\u5668 \u3002\u5b83\u5c06\u65e0\u4f11\u6b62\u5730\u5728\u57ce\u5e02\u4e2d\u6f2b\u6e38\u3002\u8be5\u811a\u672c\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\u4ee5\u963b\u6b62\u811a\u672c\u5b8c\u6210\u3002\u5f55\u5236\u5c06\u7ee7\u7eed\u8fdb\u884c\uff0c\u76f4\u5230\u7528\u6237\u5b8c\u6210\u811a\u672c\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8ba1\u65f6\u5668\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u540e\u5b8c\u6210\u811a\u672c\u3002 # -------------- # \u6355\u83b7\u6570\u636e # -------------- ego_vehicle.set_autopilot(True) print('\\nEgo autopilot enabled') while True: world_snapshot = world.wait_for_tick() \u624b\u52a8\u63a7\u5236\u3002 \u5728\u5ba2\u6237\u7aef\u4e2d\u8fd0\u884c\u811a\u672c PythonAPI/examples/manual_control.py \uff0c\u5728\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\u4e2d\u8fd0\u884c\u8bb0\u5f55\u5668\u3002\u9a7e\u9a76\u81ea\u6211\u8f66\u8f86\u6765\u521b\u5efa\u6240\u9700\u7684\u8def\u7ebf\uff0c\u5e76\u5728\u5b8c\u6210\u540e\u505c\u6b62\u8bb0\u5f55\u4eea\u3002 tutorial_ego.py \u811a\u672c\u53ef\u7528\u4e8e\u7ba1\u7406\u8bb0\u5f55\u5668\uff0c\u4f46\u8bf7\u786e\u4fdd\u6ce8\u91ca\u5176\u4ed6\u4ee3\u7801\u7247\u6bb5\u3002 cd /opt/carla/PythonAPI/examples python3 manual_control.py \u7b14\u8bb0 \u4e3a\u4e86\u907f\u514d\u6e32\u67d3\u5e76\u8282\u7701\u8ba1\u7b97\u6210\u672c\uff0c\u8bf7\u542f\u7528 [ \u65e0\u6e32\u67d3\u6a21\u5f0f ] \u3002\u8be5\u811a\u672c /PythonAPI/examples/no_rendering_mode.py \u5728\u521b\u5efa\u7b80\u5355\u7684\u9e1f\u77b0\u56fe\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\u3002 \u505c\u6b62\u8bb0\u5f55 \u505c\u6b62\u8c03\u7528\u751a\u81f3\u6bd4\u5f00\u59cb\u8c03\u7528\u66f4\u7b80\u5355\u3002\u5f55\u97f3\u5b8c\u6210\u540e\uff0c\u5f55\u97f3\u5c06\u4fdd\u5b58\u5728\u524d\u9762\u6307\u5b9a\u7684\u8def\u5f84\u4e2d\u3002 # -------------- # \u505c\u6b62\u8bb0\u5f55 # -------------- client.stop_recorder() \u5229\u7528\u8bb0\u5f55 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eff\u771f\u5df2\u7ecf\u88ab\u8bb0\u5f55\u4e0b\u6765\u3002\u73b0\u5728\uff0c\u662f\u65f6\u5019\u68c0\u67e5\u8bb0\u5f55\uff0c\u627e\u5230\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u65f6\u523b\uff0c\u5e76\u5229\u7528\u5b83\u4eec\u3002\u8fd9\u4e9b\u6b65\u9aa4\u96c6\u4e2d\u5728\u811a\u672c tutorial_replay.py \u4e2d\u3002\u8be5\u5927\u7eb2\u7531\u6ce8\u91ca\u7684\u4e0d\u540c\u4ee3\u7801\u6bb5\u6784\u6210\u3002 \u73b0\u5728\u662f\u8fd0\u884c\u65b0\u4eff\u771f\u7684\u65f6\u5019\u4e86\u3002 ./CarlaUE4.sh \u8981\u91cd\u65b0\u8fdb\u884c\u4eff\u771f\uff0c\u8bf7 \u9009\u62e9\u4e00\u4e2a\u7247\u6bb5 \u5e76\u8fd0\u884c\u5305\u542b\u64ad\u653e\u4ee3\u7801\u7684\u811a\u672c\u3002 python3 tuto_replay.py \u67e5\u8be2\u4e8b\u4ef6 \u8bb0\u5f55\u5668\u6587\u6863 \u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e0d\u540c\u7684\u67e5\u8be2\u3002\u603b\u4e4b\uff0c\u5b83\u4eec\u68c0\u7d22\u7279\u5b9a\u4e8b\u4ef6\u6216\u5e27\u7684\u6570\u636e\u3002\u4f7f\u7528\u67e5\u8be2\u6765\u7814\u7a76\u8bb0\u5f55\u3002\u627e\u5230\u805a\u5149\u706f\u65f6\u523b\uff0c\u8ffd\u8e2a\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002 # -------------- # Query the recording # -------------- # Show only the most important events in the recording. print(client.show_recorder_file_info(\"~/tutorial/recorder/recording01.log\",False)) # Show actors not moving 1 meter in 10 seconds. print(client.show_recorder_actors_blocked(\"~/tutorial/recorder/recording01.log\",10,1)) # Filter collisions between vehicles 'v' and 'a' any other type of actor. print(client.show_recorder_collisions(\"~/tutorial/recorder/recording01.log\",'v','a')) \u7b14\u8bb0 \u8bb0\u5f55\u5668\u4e0d\u9700\u8981\u6253\u5f00\u5373\u53ef\u8fdb\u884c\u67e5\u8be2\u3002 \u663e\u793a\u91cd\u8981\u4e8b\u4ef6\u7684\u67e5\u8be2\u3002\u8fd9\u662f\u81ea\u6211\u8f66\u8f86\u4ea7\u751f\u7684\u6846\u67b6\u3002 \u67e5\u8be2\u663e\u793a\u53c2\u4e0e\u8005\u88ab\u963b\u6b62\u3002\u5728\u6b64\u4eff\u771f\u4e2d\uff0c\u81ea\u6211\u8f66\u8f86\u4fdd\u6301\u963b\u585e\u72b6\u6001 100 \u79d2\u3002 \u663e\u793a\u81ea\u6211\u8f66\u8f86\u4e0e\u201c\u5176\u4ed6\u201d\u7c7b\u578b\u7684\u5bf9\u8c61\u4e4b\u95f4\u7684\u78b0\u649e\u7684\u67e5\u8be2\u3002 \u7b14\u8bb0 \u83b7\u53d6\u6bcf\u4e00\u5e27\u7684\u8be6\u7ec6\u6587\u4ef6\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u4eba\u4e0d\u77e5\u6240\u63aa\u3002\u5728\u5176\u4ed6\u67e5\u8be2\u4e4b\u540e\u4f7f\u7528\u5b83\u6765\u4e86\u89e3\u8981\u67e5\u770b\u7684\u4f4d\u7f6e\u3002 \u9009\u62e9\u4e00\u4e2a\u7247\u6bb5 \u67e5\u8be2\u4e4b\u540e\uff0c\u5728\u4e71\u641e\u4e4b\u524d\u56de\u653e\u4e00\u4e9b\u4eff\u771f\u7247\u6bb5\u53ef\u80fd\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u8fd9\u6837\u505a\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u4e86\u89e3\u6709\u5173\u4eff\u771f\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8fd9\u662f\u4ee5\u540e\u8282\u7701\u65f6\u95f4\u7684\u6700\u4f73\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u5141\u8bb8\u9009\u62e9\u64ad\u653e\u7684\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u4ee5\u53ca\u8981\u8ddf\u968f\u7684\u53c2\u4e0e\u8005\u3002 # -------------- # Reenact a fragment of the recording # -------------- client.replay_file(\"~/tutorial/recorder/recording01.log\",45,10,0) \u4ee5\u4e0b\u662f\u73b0\u5728\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u7684\u5217\u8868\u3002 \u4f7f\u7528\u67e5\u8be2\u4e2d\u7684\u4fe1\u606f\u3002 \u627e\u51fa\u4e8b\u4ef6\u4e2d\u6d89\u53ca\u7684\u65f6\u523b\u548c\u53c2\u4e0e\u8005\uff0c\u7136\u540e\u518d\u6b21\u64ad\u653e\u3002\u5728\u4e8b\u4ef6\u53d1\u751f\u524d\u51e0\u79d2\u949f\u542f\u52a8\u8bb0\u5f55\u5668\u3002 \u8ddf\u968f\u4e0d\u540c\u7684\u53c2\u4e0e\u8005\u3002 \u4e0d\u540c\u7684\u89c6\u89d2\u5c06\u663e\u793a\u67e5\u8be2\u4e2d\u672a\u5305\u542b\u7684\u65b0\u4e8b\u4ef6\u3002 \u81ea\u7531\u5730\u89c2\u5bdf\u5468\u56f4\u7684\u60c5\u51b5\u3002 \u5c06 actor_id \u8bbe\u4e3a 0 \uff0c\u5e76\u83b7\u5f97\u4eff\u771f\u7684\u603b\u4f53\u89c6\u56fe\u3002\u501f\u52a9\u8bb0\u5f55\u5f55\u97f3\uff0c\u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u3002 \u7b14\u8bb0 \u5f53\u8bb0\u5f55\u505c\u6b62\u65f6\uff0c\u4eff\u771f\u4e0d\u4f1a\u505c\u6b62\u3002\u884c\u4eba\u5c06\u9759\u6b62\u4e0d\u52a8\uff0c\u8f66\u8f86\u5c06\u7ee7\u7eed\u884c\u9a76\u3002\u5982\u679c\u65e5\u5fd7\u7ed3\u675f\u6216\u64ad\u653e\u5230\u8fbe\u6307\u5b9a\u7684\u7ed3\u675f\u70b9\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002 \u68c0\u7d22\u66f4\u591a\u6570\u636e \u8bb0\u5f55\u5668\u5c06\u5728\u6b64\u4eff\u771f\u4e2d\u91cd\u65b0\u521b\u5efa\u4e0e\u539f\u59cb\u6761\u4ef6\u5b8c\u5168\u76f8\u540c\u7684\u6761\u4ef6\u3002\u8fd9\u786e\u4fdd\u4e86\u4e0d\u540c\u64ad\u653e\u4e2d\u7684\u6570\u636e\u4e00\u81f4\u3002 \u6536\u96c6\u91cd\u8981\u65f6\u523b\u3001\u53c2\u4e0e\u8005\u548c\u4e8b\u4ef6\u7684\u5217\u8868\u3002\u9700\u8981\u65f6\u6dfb\u52a0\u4f20\u611f\u5668\u5e76\u56de\u653e\u4eff\u771f\u3002\u8be5\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u5b8c\u5168\u76f8\u540c\u3002\u811a\u672c tutorial_replay.py \u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u793a\u4f8b\uff0c\u8fd9\u4e9b\u793a\u4f8b\u5df2\u5728 \u201c\u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668\u201d \u90e8\u5206\u4e2d\u8fdb\u884c\u4e86\u5f7b\u5e95\u89e3\u91ca\u3002\u5176\u4ed6\u5df2\u5728 \u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668 \u90e8\u5206\u4e2d\u8fdb\u884c\u4e86\u89e3\u91ca\u3002 \u6839\u636e\u9700\u8981\u6dfb\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u4f20\u611f\u5668\u3002\u6839\u636e\u9700\u8981\u591a\u6b21\u56de\u653e\u4eff\u771f\u5e76\u68c0\u7d22\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u3002 \u6539\u53d8\u5929\u6c14 \u8bb0\u5f55\u5c06\u91cd\u73b0\u539f\u59cb\u7684\u5929\u6c14\u72b6\u51b5\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u968f\u610f\u6539\u53d8\u3002\u5728\u4fdd\u6301\u5176\u4f59\u4e8b\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u5b83\u5982\u4f55\u5f71\u54cd\u4f20\u611f\u5668\u53ef\u80fd\u4f1a\u5f88\u6709\u8da3\u3002 \u83b7\u53d6\u5f53\u524d\u5929\u6c14\u5e76\u81ea\u7531\u4fee\u6539\u3002\u8bf7\u8bb0\u4f4f\uff0c carla.WeatherParameters \u6709\u4e00\u4e9b\u53ef\u7528\u7684\u9884\u8bbe\u3002\u8be5\u811a\u672c\u4f1a\u5c06\u73af\u5883\u66f4\u6539\u4e3a\u6709\u96fe\u7684\u65e5\u843d\u3002 # -------------- # \u4e3a\u56de\u653e\u6539\u53d8\u5929\u6c14 # -------------- weather = world.get_weather() weather.sun_altitude_angle = -30 weather.fog_density = 65 weather.fog_distance = 10 world.set_weather(weather) \u5c1d\u8bd5\u65b0\u7684\u7ed3\u679c \u65b0\u7684\u4eff\u771f\u4e0e\u8bb0\u5f55\u6ca1\u6709\u4e25\u683c\u7684\u8054\u7cfb\u3002\u5b83\u53ef\u4ee5\u968f\u65f6\u4fee\u6539\uff0c\u5373\u4f7f\u8bb0\u5f55\u5668\u505c\u6b62\uff0c\u4eff\u771f\u4e5f\u4f1a\u7ee7\u7eed\u3002 \u8fd9\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u662f\u6709\u5229\u53ef\u56fe\u7684\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u56de\u653e\u51e0\u79d2\u949f\u524d\u7684\u4eff\u771f\u5e76\u751f\u6210\u6216\u6467\u6bc1\u53c2\u4e0e\u8005\u6765\u5f3a\u5236\u6216\u907f\u514d\u78b0\u649e\u3002\u5728\u7279\u5b9a\u65f6\u523b\u7ed3\u675f\u8bb0\u5f55\u4e5f\u5f88\u6709\u7528\u3002\u8fd9\u6837\u505a\uff0c\u8f66\u8f86\u53ef\u80fd\u4f1a\u91c7\u53d6\u4e0d\u540c\u7684\u8def\u5f84\u3002 \u6539\u53d8\u6761\u4ef6\u5e76\u6270\u4e71\u4eff\u771f\u3002\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\uff0c\u56e0\u4e3a\u8bb0\u5f55\u5668\u5141\u8bb8\u521d\u59cb\u4eff\u771f\u59cb\u7ec8\u53ef\u4ee5\u91cd\u65b0\u8fdb\u884c\u3002\u8fd9\u662f\u5145\u5206\u53d1\u6325 CARLA \u6f5c\u529b\u7684\u5173\u952e\u3002 \u6559\u7a0b\u811a\u672c \u4e0b\u9762\u662f\u6536\u96c6\u672c\u6559\u7a0b\u4ee3\u7801\u7247\u6bb5\u7684\u4e24\u4e2a\u811a\u672c\u3002\u5927\u591a\u6570\u4ee3\u7801\u90fd\u5e26\u6709\u6ce8\u91ca\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u5b9a\u76ee\u7684\u3002 tutorial_ego.py import glob import os import sys import time try: sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % ( sys.version_info.major, sys.version_info.minor, 'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0]) except IndexError: pass import carla import argparse import logging import random def main(): argparser = argparse.ArgumentParser( description=__doc__) argparser.add_argument( '--host', metavar='H', default='127.0.0.1', help='IP of the host server (default: 127.0.0.1)') argparser.add_argument( '-p', '--port', metavar='P', default=2000, type=int, help='TCP port to listen to (default: 2000)') args = argparser.parse_args() logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO) client = carla.Client(args.host, args.port) client.set_timeout(10.0) try: world = client.get_world() ego_vehicle = None ego_cam = None ego_col = None ego_lane = None ego_obs = None ego_gnss = None ego_imu = None # -------------- # Start recording # -------------- \"\"\" client.start_recorder('~/tutorial/recorder/recording01.log') \"\"\" # -------------- # Spawn ego vehicle # -------------- \"\"\" ego_bp = world.get_blueprint_library().find('vehicle.tesla.model3') ego_bp.set_attribute('role_name','ego') print('\\nEgo role_name is set') ego_color = random.choice(ego_bp.get_attribute('color').recommended_values) ego_bp.set_attribute('color',ego_color) print('\\nEgo color is set') spawn_points = world.get_map().get_spawn_points() number_of_spawn_points = len(spawn_points) if 0 < number_of_spawn_points: random.shuffle(spawn_points) ego_transform = spawn_points[0] ego_vehicle = world.spawn_actor(ego_bp,ego_transform) print('\\nEgo is spawned') else: logging.warning('Could not found any spawn points') \"\"\" # -------------- # Add a RGB camera sensor to ego vehicle. # -------------- \"\"\" cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('~/tutorial/output/%.6d.jpg' % image.frame)) \"\"\" # -------------- # Add collision sensor to ego vehicle. # -------------- \"\"\" col_bp = world.get_blueprint_library().find('sensor.other.collision') col_location = carla.Location(0,0,0) col_rotation = carla.Rotation(0,0,0) col_transform = carla.Transform(col_location,col_rotation) ego_col = world.spawn_actor(col_bp,col_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def col_callback(colli): print(\"Collision detected:\\n\"+str(colli)+'\\n') ego_col.listen(lambda colli: col_callback(colli)) \"\"\" # -------------- # Add Lane invasion sensor to ego vehicle. # -------------- \"\"\" lane_bp = world.get_blueprint_library().find('sensor.other.lane_invasion') lane_location = carla.Location(0,0,0) lane_rotation = carla.Rotation(0,0,0) lane_transform = carla.Transform(lane_location,lane_rotation) ego_lane = world.spawn_actor(lane_bp,lane_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def lane_callback(lane): print(\"Lane invasion detected:\\n\"+str(lane)+'\\n') ego_lane.listen(lambda lane: lane_callback(lane)) \"\"\" # -------------- # Add Obstacle sensor to ego vehicle. # -------------- \"\"\" obs_bp = world.get_blueprint_library().find('sensor.other.obstacle') obs_bp.set_attribute(\"only_dynamics\",str(True)) obs_location = carla.Location(0,0,0) obs_rotation = carla.Rotation(0,0,0) obs_transform = carla.Transform(obs_location,obs_rotation) ego_obs = world.spawn_actor(obs_bp,obs_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def obs_callback(obs): print(\"Obstacle detected:\\n\"+str(obs)+'\\n') ego_obs.listen(lambda obs: obs_callback(obs)) \"\"\" # -------------- # Add GNSS sensor to ego vehicle. # -------------- \"\"\" gnss_bp = world.get_blueprint_library().find('sensor.other.gnss') gnss_location = carla.Location(0,0,0) gnss_rotation = carla.Rotation(0,0,0) gnss_transform = carla.Transform(gnss_location,gnss_rotation) gnss_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_gnss = world.spawn_actor(gnss_bp,gnss_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def gnss_callback(gnss): print(\"GNSS measure:\\n\"+str(gnss)+'\\n') ego_gnss.listen(lambda gnss: gnss_callback(gnss)) \"\"\" # -------------- # Add IMU sensor to ego vehicle. # -------------- \"\"\" imu_bp = world.get_blueprint_library().find('sensor.other.imu') imu_location = carla.Location(0,0,0) imu_rotation = carla.Rotation(0,0,0) imu_transform = carla.Transform(imu_location,imu_rotation) imu_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_imu = world.spawn_actor(imu_bp,imu_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def imu_callback(imu): print(\"IMU measure:\\n\"+str(imu)+'\\n') ego_imu.listen(lambda imu: imu_callback(imu)) \"\"\" # -------------- # Place spectator on ego spawning # -------------- \"\"\" spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform()) \"\"\" # -------------- # Enable autopilot for ego vehicle # -------------- \"\"\" ego_vehicle.set_autopilot(True) \"\"\" # -------------- # Game loop. Prevents the script from finishing. # -------------- while True: world_snapshot = world.wait_for_tick() finally: # -------------- # Stop recording and destroy actors # -------------- client.stop_recorder() if ego_vehicle is not None: if ego_cam is not None: ego_cam.stop() ego_cam.destroy() if ego_col is not None: ego_col.stop() ego_col.destroy() if ego_lane is not None: ego_lane.stop() ego_lane.destroy() if ego_obs is not None: ego_obs.stop() ego_obs.destroy() if ego_gnss is not None: ego_gnss.stop() ego_gnss.destroy() if ego_imu is not None: ego_imu.stop() ego_imu.destroy() ego_vehicle.destroy() if __name__ == '__main__': try: main() except KeyboardInterrupt: pass finally: print('\\nDone with tutorial_ego.') tutorial_replay.py import glob import os import sys import time import math import weakref try: sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % ( sys.version_info.major, sys.version_info.minor, 'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0]) except IndexError: pass import carla import argparse import logging import random def main(): client = carla.Client('127.0.0.1', 2000) client.set_timeout(10.0) try: world = client.get_world() ego_vehicle = None ego_cam = None depth_cam = None depth_cam02 = None sem_cam = None rad_ego = None lidar_sen = None # -------------- # Query the recording # -------------- \"\"\" # Show the most important events in the recording. print(client.show_recorder_file_info(\"~/tutorial/recorder/recording05.log\",False)) # Show actors not moving 1 meter in 10 seconds. #print(client.show_recorder_actors_blocked(\"~/tutorial/recorder/recording04.log\",10,1)) # Show collisions between any type of actor. #print(client.show_recorder_collisions(\"~/tutorial/recorder/recording04.log\",'v','a')) \"\"\" # -------------- # Reenact a fragment of the recording # -------------- \"\"\" client.replay_file(\"~/tutorial/recorder/recording03.log\",0,30,0) \"\"\" # -------------- # Set playback simulation conditions # -------------- \"\"\" ego_vehicle = world.get_actor(322) #Store the ID from the simulation or query the recording to find out \"\"\" # -------------- # Place spectator on ego spawning # -------------- \"\"\" spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform()) \"\"\" # -------------- # Change weather conditions # -------------- \"\"\" weather = world.get_weather() weather.sun_altitude_angle = -30 weather.fog_density = 65 weather.fog_distance = 10 world.set_weather(weather) \"\"\" # -------------- # Add a RGB camera to ego vehicle. # -------------- \"\"\" cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('~/tutorial/new_rgb_output/%.6d.jpg' % image.frame)) \"\"\" # -------------- # Add a Logarithmic Depth camera to ego vehicle. # -------------- \"\"\" depth_cam = None depth_bp = world.get_blueprint_library().find('sensor.camera.depth') depth_bp.set_attribute(\"image_size_x\",str(1920)) depth_bp.set_attribute(\"image_size_y\",str(1080)) depth_bp.set_attribute(\"fov\",str(105)) depth_location = carla.Location(2,0,1) depth_rotation = carla.Rotation(0,180,0) depth_transform = carla.Transform(depth_location,depth_rotation) depth_cam = world.spawn_actor(depth_bp,depth_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam.listen(lambda image: image.save_to_disk('~/tutorial/de_log/%.6d.jpg' % image.frame,carla.ColorConverter.LogarithmicDepth)) \"\"\" # -------------- # Add a Depth camera to ego vehicle. # -------------- \"\"\" depth_cam02 = None depth_bp02 = world.get_blueprint_library().find('sensor.camera.depth') depth_bp02.set_attribute(\"image_size_x\",str(1920)) depth_bp02.set_attribute(\"image_size_y\",str(1080)) depth_bp02.set_attribute(\"fov\",str(105)) depth_location02 = carla.Location(2,0,1) depth_rotation02 = carla.Rotation(0,180,0) depth_transform02 = carla.Transform(depth_location02,depth_rotation02) depth_cam02 = world.spawn_actor(depth_bp02,depth_transform02,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam02.listen(lambda image: image.save_to_disk('~/tutorial/de/%.6d.jpg' % image.frame,carla.ColorConverter.Depth)) \"\"\" # -------------- # Add a new semantic segmentation camera to ego vehicle # -------------- \"\"\" sem_cam = None sem_bp = world.get_blueprint_library().find('sensor.camera.semantic_segmentation') sem_bp.set_attribute(\"image_size_x\",str(1920)) sem_bp.set_attribute(\"image_size_y\",str(1080)) sem_bp.set_attribute(\"fov\",str(105)) sem_location = carla.Location(2,0,1) sem_rotation = carla.Rotation(0,180,0) sem_transform = carla.Transform(sem_location,sem_rotation) sem_cam = world.spawn_actor(sem_bp,sem_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view sem_cam.listen(lambda image: image.save_to_disk('~/tutorial/new_sem_output/%.6d.jpg' % image.frame,carla.ColorConverter.CityScapesPalette)) \"\"\" # -------------- # Add a new radar sensor to ego vehicle # -------------- \"\"\" rad_cam = None rad_bp = world.get_blueprint_library().find('sensor.other.radar') rad_bp.set_attribute('horizontal_fov', str(35)) rad_bp.set_attribute('vertical_fov', str(20)) rad_bp.set_attribute('range', str(20)) rad_location = carla.Location(x=2.8, z=1.0) rad_rotation = carla.Rotation(pitch=5) rad_transform = carla.Transform(rad_location,rad_rotation) rad_ego = world.spawn_actor(rad_bp,rad_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def rad_callback(radar_data): velocity_range = 7.5 # m/s current_rot = radar_data.transform.rotation for detect in radar_data: azi = math.degrees(detect.azimuth) alt = math.degrees(detect.altitude) # The 0.25 adjusts a bit the distance so the dots can # be properly seen fw_vec = carla.Vector3D(x=detect.depth - 0.25) carla.Transform( carla.Location(), carla.Rotation( pitch=current_rot.pitch + alt, yaw=current_rot.yaw + azi, roll=current_rot.roll)).transform(fw_vec) def clamp(min_v, max_v, value): return max(min_v, min(value, max_v)) norm_velocity = detect.velocity / velocity_range # range [-1, 1] r = int(clamp(0.0, 1.0, 1.0 - norm_velocity) * 255.0) g = int(clamp(0.0, 1.0, 1.0 - abs(norm_velocity)) * 255.0) b = int(abs(clamp(- 1.0, 0.0, - 1.0 - norm_velocity)) * 255.0) world.debug.draw_point( radar_data.transform.location + fw_vec, size=0.075, life_time=0.06, persistent_lines=False, color=carla.Color(r, g, b)) rad_ego.listen(lambda radar_data: rad_callback(radar_data)) \"\"\" # -------------- # Add a new LIDAR sensor to ego vehicle # -------------- \"\"\" lidar_cam = None lidar_bp = world.get_blueprint_library().find('sensor.lidar.ray_cast') lidar_bp.set_attribute('channels',str(32)) lidar_bp.set_attribute('points_per_second',str(90000)) lidar_bp.set_attribute('rotation_frequency',str(40)) lidar_bp.set_attribute('range',str(20)) lidar_location = carla.Location(0,0,2) lidar_rotation = carla.Rotation(0,0,0) lidar_transform = carla.Transform(lidar_location,lidar_rotation) lidar_sen = world.spawn_actor(lidar_bp,lidar_transform,attach_to=ego_vehicle,attachment_type=carla.AttachmentType.Rigid) lidar_sen.listen(lambda point_cloud: point_cloud.save_to_disk('/home/adas/Desktop/tutorial/new_lidar_output/%.6d.ply' % point_cloud.frame)) \"\"\" # -------------- # Game loop. Prevents the script from finishing. # -------------- while True: world_snapshot = world.wait_for_tick() finally: # -------------- # Destroy actors # -------------- if ego_vehicle is not None: if ego_cam is not None: ego_cam.stop() ego_cam.destroy() if depth_cam is not None: depth_cam.stop() depth_cam.destroy() if sem_cam is not None: sem_cam.stop() sem_cam.destroy() if rad_ego is not None: rad_ego.stop() rad_ego.destroy() if lidar_sen is not None: lidar_sen.stop() lidar_sen.destroy() ego_vehicle.destroy() print('\\nNothing to be done.') if __name__ == '__main__': try: main() except KeyboardInterrupt: pass finally: print('\\nDone with tutorial_replay.') \u8fd9\u662f\u5173\u4e8e\u5982\u4f55\u4ece\u4eff\u771f\u4e2d\u6b63\u786e\u68c0\u7d22\u6570\u636e\u7684\u603b\u7ed3\u3002\u786e\u4fdd\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6539\u53d8\u4eff\u771f\u5668\u7684\u6761\u4ef6\uff0c\u5c1d\u8bd5\u4f20\u611f\u5668\u8bbe\u7f6e\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\u3002 \u8bf7\u8bbf\u95ee\u8bba\u575b\uff0c\u53d1\u8868\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b","title":"\u68c0\u7d22\u6a21\u62df\u6570\u636e"},{"location":"tuto_G_retrieve_data/#_1","text":"\u5728 CARLA \u4e2d\uff0c\u5b66\u4e60\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u6765\u68c0\u7d22\u4eff\u771f\u6570\u636e\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u4e2a\u6574\u4f53\u6559\u7a0b\u9002\u5408\u65b0\u624b\u548c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7528\u6237\u3002\u5b83\u4ece\u5934\u5f00\u59cb\uff0c\u9010\u6e10\u6df1\u5165\u63a2\u8ba8 Carla \u4e2d\u53ef\u7528\u7684\u8bb8\u591a\u9009\u9879\u3002 \u9996\u5148\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u548c\u6d41\u91cf\u521d\u59cb\u5316\u4eff\u771f\u3002\u4e00\u8f86\u81ea\u6211\u8f66\u8f86\u5c06\u5728\u57ce\u5e02\u4e2d\u6f2b\u6e38\uff0c\u53ef\u9009\u5730\u914d\u5907\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u3002\u8bb0\u5f55\u4eff\u771f\uff0c\u4ee5\u4fbf\u4ee5\u540e\u67e5\u8be2\u4ee5\u627e\u5230\u4eae\u70b9\u3002\u4e4b\u540e\uff0c\u539f\u59cb\u4eff\u771f\u88ab\u56de\u653e\uff0c\u5e76\u88ab\u5229\u7528\u5230\u6781\u9650\u3002\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u4f20\u611f\u5668\u6765\u68c0\u7d22\u4e00\u81f4\u7684\u6570\u636e\u3002\u5929\u6c14\u6761\u4ef6\u662f\u53ef\u4ee5\u6539\u53d8\u7684\u3002\u8bb0\u5f55\u5668\u751a\u81f3\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\u5177\u6709\u4e0d\u540c\u8f93\u51fa\u7684\u7279\u5b9a\u573a\u666f\u3002 \u6982\u8ff0 \u8bbe\u7f6e\u4eff\u771f \u5730\u56fe\u8bbe\u7f6e \u5929\u6c14\u8bbe\u7f6e \u8bbe\u7f6e\u4ea4\u901a\u6d41\u91cf CARLA \u4ea4\u901a\u548c\u884c\u4eba SUMO \u534f\u540c\u4eff\u771f\u4ea4\u901a \u8bbe\u7f6e\u81ea\u6211\u8f66\u8f86 \u751f\u6210\u81ea\u6211\u8f66\u8f86 \u653e\u7f6e\u89c2\u5bdf\u8005 \u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668 RGB \u76f8\u673a \u68c0\u6d4b\u5668 \u5176\u4ed6\u4f20\u611f\u5668 \u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668 \u6df1\u5ea6\u76f8\u673a \u8bed\u4e49\u5206\u5272\u76f8\u673a \u6fc0\u5149\u96f7\u8fbe\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668 \u96f7\u8fbe\u4f20\u611f\u5668 \u975e\u6e32\u67d3\u6a21\u5f0f \u5feb\u901f\u4eff\u771f \u65e0\u9700\u6e32\u67d3\u7684\u624b\u52a8\u63a7\u5236 \u8bb0\u5f55\u548c\u68c0\u7d22\u6570\u636e \u5f00\u59cb\u8bb0\u5f55 \u6355\u83b7\u5e76\u8bb0\u5f55 \u505c\u6b62\u8bb0\u5f55 \u5229\u7528\u8bb0\u5f55 \u67e5\u8be2\u4e8b\u4ef6 \u9009\u62e9\u4e00\u4e2a\u7247\u6bb5 \u68c0\u7d22\u66f4\u591a\u6570\u636e \u6539\u53d8\u5929\u6c14 \u5c1d\u8bd5\u65b0\u7684\u7ed3\u679c \u6559\u7a0b\u811a\u672c","title":"\u68c0\u7d22\u4eff\u771f\u6570\u636e"},{"location":"tuto_G_retrieve_data/#_2","text":"\u5728\u68c0\u7d22\u4eff\u771f\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u5b58\u5728\u4e00\u4e9b\u5e38\u89c1\u9519\u8bef\u3002\u4eff\u771f\u5668\u4e2d\u5145\u65a5\u7740\u4f20\u611f\u5668\u3001\u5b58\u50a8\u65e0\u7528\u7684\u6570\u636e\u6216\u52aa\u529b\u5bfb\u627e\u7279\u5b9a\u4e8b\u4ef6\u90fd\u662f\u4e00\u4e9b\u4f8b\u5b50\u3002\u7136\u800c\uff0c\u53ef\u4ee5\u63d0\u4f9b\u8be5\u8fc7\u7a0b\u7684\u4e00\u4e9b\u6982\u8981\u3002\u76ee\u6807\u662f\u786e\u4fdd\u6570\u636e\u53ef\u4ee5\u68c0\u7d22\u548c\u590d\u5236\uff0c\u5e76\u4e14\u53ef\u4ee5\u968f\u610f\u68c0\u67e5\u548c\u66f4\u6539\u4eff\u771f\u3002 \u7b14\u8bb0 \u672c\u6559\u7a0b\u4f7f\u7528 CARLA 0.9.8 deb \u5305 \u3002\u6839\u636e\u60a8\u7684 CARLA \u7248\u672c\u548c\u5b89\u88c5\uff0c\u53ef\u80fd\u4f1a\u6709\u7ec6\u5fae\u7684\u53d8\u5316\uff0c\u7279\u522b\u662f\u5728\u8def\u5f84\u65b9\u9762\u3002 \u672c\u6559\u7a0b\u4e3a\u4e0d\u540c\u6b65\u9aa4\u63d0\u4f9b\u4e86\u591a\u79cd\u9009\u9879\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u90fd\u4f1a\u63d0\u5230\u4e0d\u540c\u7684\u811a\u672c\u3002\u5e76\u4e0d\u662f\u6240\u6709\u7684\u90fd\u4f1a\u88ab\u4f7f\u7528\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u7528\u4f8b\u3002\u5176\u4e2d\u5927\u591a\u6570\u5df2\u5728 CARLA \u4e2d\u63d0\u4f9b\u7528\u4e8e\u901a\u7528\u76ee\u7684\u3002 config.py \u66f4\u6539\u4eff\u771f\u8bbe\u7f6e\u3002\u5730\u56fe\u3001\u6e32\u67d3\u9009\u9879\u3001\u8bbe\u7f6e\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f... carla/PythonAPI/util/config.py dynamic_weather.py \u521b\u5efa\u6709\u8da3\u7684\u5929\u6c14\u6761\u4ef6\u3002 carla/PythonAPI/examples/dynamic_weather.py spawn_npc.py spawn_npc.py\u751f\u6210\u4e00\u4e9b\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u8f66\u8f86\u548c\u884c\u4eba\u3002 carla/PythonAPI/examples/spawn_npc.py manual_control.py \u751f\u6210\u4e00\u4e2a\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u63d0\u4f9b\u5bf9\u5176\u7684\u63a7\u5236\u3002 carla/PythonAPI/examples/manual_control.py \u4f46\u662f\uff0c\u6559\u7a0b\u4e2d\u63d0\u5230\u7684\u4e24\u4e2a\u811a\u672c\u5728 CARLA \u4e2d\u627e\u4e0d\u5230\u3002\u5b83\u4eec\u5305\u542b\u5f15\u7528\u7684\u4ee3\u7801\u7247\u6bb5\u3002\u8fd9\u6709\u53cc\u91cd\u76ee\u7684\u3002\u9996\u5148\uff0c\u9f13\u52b1\u7528\u6237\u6784\u5efa\u81ea\u5df1\u7684\u811a\u672c\u3002\u5145\u5206\u7406\u89e3\u4ee3\u7801\u7684\u4f5c\u7528\u975e\u5e38\u91cd\u8981\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u672c\u6559\u7a0b\u53ea\u662f\u4e00\u4e2a\u5927\u7eb2\uff0c\u53ef\u80fd\u800c\u4e14\u5e94\u8be5\u6839\u636e\u7528\u6237\u7684\u559c\u597d\u800c\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u8fd9\u4e24\u4e2a\u811a\u672c\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\u3002 tutorial_ego.py \u751f\u6210\u5e26\u6709\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u7684\u81ea\u6211\u8f66\u8f86\uff0c\u5e76\u542f\u7528\u81ea\u52a8\u9a7e\u9a76\u4eea\u3002\u89c2\u5bdf\u8005\u88ab\u653e\u7f6e\u5728\u751f\u6210\u4f4d\u7f6e\u3002\u8bb0\u5f55\u5668\u4ece\u4e00\u5f00\u59cb\u5c31\u542f\u52a8\uff0c\u5e76\u5728\u811a\u672c\u5b8c\u6210\u65f6\u505c\u6b62\u3002 tutorial_replay.py \u91cd\u65b0\u6267\u884c tutorial_ego.py \u8bb0\u5f55\u7684\u4eff\u771f\u3002\u6709\u4e0d\u540c\u7684\u4ee3\u7801\u7247\u6bb5\u53ef\u4ee5\u67e5\u8be2\u8bb0\u5f55\u3001\u751f\u6210\u4e00\u4e9b\u9ad8\u7ea7\u4f20\u611f\u5668\u3001\u6539\u53d8\u5929\u6c14\u6761\u4ef6\u4ee5\u53ca\u91cd\u65b0\u6267\u884c\u8bb0\u5f55\u7247\u6bb5\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u6559\u7a0b\u7684\u6700\u540e\u90e8\u5206\u627e\u5230\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u4e25\u683c\uff0c\u800c\u662f\u53ef\u4ee5\u5b9a\u5236\u7684\u3002\u5728 CARLA \u4e2d\u68c0\u7d22\u6570\u636e\u7684\u529f\u80fd\u6b63\u5982\u7528\u6237\u6240\u5e0c\u671b\u7684\u90a3\u6837\u5f3a\u5927\u3002 \u91cd\u8981 \u672c\u6559\u7a0b\u9700\u8981\u4e00\u4e9b Python \u77e5\u8bc6\u3002","title":"\u6982\u8ff0"},{"location":"tuto_G_retrieve_data/#_3","text":"\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u5c06\u4eff\u771f\u8bbe\u7f6e\u4e3a\u6240\u9700\u7684\u73af\u5883\u3002 \u8fd0\u884c CARLA\u3002 cd /opt/carla/bin ./CarlaUE.sh","title":"\u8bbe\u7f6e\u4eff\u771f"},{"location":"tuto_G_retrieve_data/#_4","text":"\u9009\u62e9\u8981\u8fd0\u884c\u4eff\u771f\u7684\u5730\u56fe\u3002\u67e5\u770b \u5730\u56fe\u6587\u6863 \u4ee5\u4e86\u89e3\u6709\u5173\u5176\u7279\u5b9a\u5c5e\u6027\u7684\u66f4\u591a\u4fe1\u606f\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u9009\u62e9 Town07 \u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\u3002\u4f7f\u7528 config.py \u811a\u672c\u66f4\u6539\u5730\u56fe\u3002 cd /opt/carla/PythonAPI/utils python3 config.py --map Town01 \u8be5\u811a\u672c\u53ef\u4ee5\u542f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u3002\u5176\u4e2d\u4e00\u4e9b\u5c06\u5728\u6559\u7a0b\u4e2d\u63d0\u53ca\uff0c\u53e6\u4e00\u4e9b\u5219\u4e0d\u4f1a\u3002\u4e0b\u9762\u6709\u4e00\u4e2a\u7b80\u77ed\u7684\u603b\u7ed3\u3002 config.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host CARLA Simulator (default: localhost) -p P, --port P TCP port of CARLA Simulator (default: 2000) -d, --default set default settings -m MAP, --map MAP load a new map, use --list to see available maps -r, --reload-map reload current map --delta-seconds S set fixed delta seconds, zero for variable frame rate --fps N set fixed FPS, zero for variable FPS (similar to --delta-seconds) --rendering enable rendering --no-rendering disable rendering --no-sync disable synchronous mode --weather WEATHER set weather preset, use --list to see available presets -i, --inspect inspect simulation -l, --list list available options -b FILTER, --list-blueprints FILTER list available blueprints matching FILTER (use '*' to list them all) -x XODR_FILE_PATH, --xodr-path XODR_FILE_PATH load a new map with a minimum physical road representation of the provided OpenDRIVE Aerial view of Town07","title":"\u5730\u56fe\u8bbe\u7f6e"},{"location":"tuto_G_retrieve_data/#_5","text":"\u6bcf\u4e2a\u57ce\u9547\u90fd\u6709\u9002\u5408\u5b83\u7684\u7279\u5b9a\u5929\u6c14\uff0c\u4f46\u662f\u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e\u3002\u6709\u4e24\u4e2a\u811a\u672c\u63d0\u4f9b\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u3002\u7b2c\u4e00\u4e2a\u8bbe\u7f6e\u4e86\u52a8\u6001\u5929\u6c14\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u60c5\u51b5\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u53e6\u4e00\u4e2a\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u5929\u6c14\u6761\u4ef6\u3002\u8fd8\u53ef\u4ee5\u5bf9\u5929\u6c14\u6761\u4ef6\u8fdb\u884c\u7f16\u7801\u3002\u7a0d\u540e \u5929\u6c14\u6761\u4ef6\u53d1\u751f\u53d8\u5316 \u65f6\u5c06\u5bf9\u6b64\u8fdb\u884c\u4ecb\u7ecd\u3002 \u8bbe\u7f6e\u52a8\u6001\u5929\u6c14 \u3002\u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\u5e76\u8fd0\u884c dynamic_weather.py \u3002\u8be5\u811a\u672c\u5141\u8bb8\u8bbe\u7f6e\u5929\u6c14\u53d8\u5316\u7684\u6bd4\u7387\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u662f 1.0 \u3002 cd /opt/carla/PythonAPI/examples python3 dynamic_weather.py --speed 1.0 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u6761\u4ef6 \u4f7f\u7528\u811a\u672c environment.py \u3002\u6709\u5f88\u591a\u53ef\u80fd\u7684\u8bbe\u7f6e\u3002\u67e5\u770b\u53ef\u9009\u53c2\u6570\u4ee5\u53ca carla.WeatherParameters \u7684\u6587\u6863\u3002 cd /opt/carla/PythonAPI/util python3 environment.py --clouds 100 --rain 80 --wetness 100 --puddles 60 --wind 80 --fog 50 environment.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --sun SUN Sun position presets [sunset | day | night] --weather WEATHER Weather condition presets [clear | overcast | rain] --altitude A, -alt A Sun altitude [-90.0, 90.0] --azimuth A, -azm A Sun azimuth [0.0, 360.0] --clouds C, -c C Clouds amount [0.0, 100.0] --rain R, -r R Rain amount [0.0, 100.0] --puddles Pd, -pd Pd Puddles amount [0.0, 100.0] --wind W, -w W Wind intensity [0.0, 100.0] --fog F, -f F Fog intensity [0.0, 100.0] --fogdist Fd, -fd Fd Fog Distance [0.0, inf) --wetness Wet, -wet Wet Wetness intensity [0.0, 100.0] Weather changes applied","title":"\u5929\u6c14\u8bbe\u7f6e"},{"location":"tuto_G_retrieve_data/#_6","text":"\u4eff\u771f\u4ea4\u901a\u662f\u8ba9\u5730\u56fe\u6829\u6829\u5982\u751f\u7684\u6700\u4f73\u65b9\u6cd5\u4e4b\u4e00\u3002\u8fd8\u9700\u8981\u68c0\u7d22\u57ce\u5e02\u73af\u5883\u7684\u6570\u636e\u3002\u5728 CARLA \u4e2d\u6709\u4e0d\u540c\u7684\u9009\u62e9\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002","title":"\u8bbe\u7f6e\u4ea4\u901a\u6d41\u91cf"},{"location":"tuto_G_retrieve_data/#carla","text":"CARLA \u4ea4\u901a\u6d41\u91cf\u7531 \u4ea4\u901a\u7ba1\u7406\u5668 \u6a21\u5757\u7ba1\u7406\u3002\u81f3\u4e8e\u884c\u4eba\uff0c\u4ed6\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684 carla.WalkerAIController \u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u7136\u540e\u8fd0\u884c spawn_npc.py \u6765\u751f\u6210\u8f66\u8f86\u548c\u6b65\u884c\u8005\u3002\u8ba9\u6211\u4eec\u751f\u6210 50 \u8f86\u8f66\u548c\u76f8\u540c\u6570\u91cf\u7684\u6b65\u884c\u8005\u3002 cd /opt/carla/PythonAPI/examples python3 spawn_npc.py -n 50 -w 50 --safe spawn_npc.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) -n N, --number-of-vehicles N number of vehicles (default: 10) -w W, --number-of-walkers W number of walkers (default: 50) --safe avoid spawning vehicles prone to accidents --filterv PATTERN vehicles filter (default: \"vehicle.*\") --filterw PATTERN pedestrians filter (default: \"walker.pedestrian.*\") -tm_p P, --tm-port P port to communicate with TM (default: 8000) --async Asynchronous mode execution Vehicles spawned to simulate traffic.","title":"CARLA \u4ea4\u901a\u548c\u884c\u4eba"},{"location":"tuto_G_retrieve_data/#sumo","text":"CARLA \u53ef\u4ee5\u4e0e SUMO \u8fd0\u884c\u8054\u5408\u4eff\u771f\u3002\u8fd9\u5141\u8bb8\u5728 SUMO \u4e2d\u521b\u5efa\u5c06\u4f20\u64ad\u5230 CARLA \u7684\u4ea4\u901a\u6d41\u91cf\u3002\u8fd9\u79cd\u8054\u5408\u4eff\u771f\u662f\u53cc\u5411\u7684\u3002\u5728 CARLA \u4e2d\u751f\u6210\u7684\u8f66\u8f86\u5c06\u5728 SUMO \u4e2d\u751f\u6210\u3002\u6709\u5173\u6b64\u529f\u80fd\u7684\u5177\u4f53\u6587\u6863\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u3002 \u6b64\u529f\u80fd\u9002\u7528\u4e8e CARLA 0.9.8 \u53ca\u66f4\u9ad8\u7248\u672c\u7684 Town01 \u3001 Town04 \u548c Town05 \u3002\u7b2c\u4e00\u4e2a\u662f\u6700\u7a33\u5b9a\u7684\u3002 \u7b14\u8bb0 \u8054\u5408\u4eff\u771f\u5c06\u5728 CARLA \u4e2d\u542f\u7528\u540c\u6b65\u6a21\u5f0f\u3002\u9605\u8bfb \u6587\u6863 \u4ee5\u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u3002 \u9996\u5148\uff0c\u5b89\u88c5SUMO\u3002 sudo add-apt-repository ppa:sumo/stable sudo apt-get update sudo apt-get install sumo sumo-tools sumo-doc \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf SUMO_HOME\u3002 echo \"export SUMO_HOME=/usr/share/sumo\" >> ~/.bashrc && source ~/.bashrc \u5728 CARLA \u670d\u52a1\u5668\u6253\u5f00\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c SUMO-CARLA \u540c\u6b65\u811a\u672c \u3002 cd ~/carla/Co-Simulation/Sumo python3 run_synchronization.py examples/Town01.sumocfg --sumo-gui SUMO \u7a97\u53e3\u5e94\u8be5\u5df2\u6253\u5f00\u3002 \u6309\u201c\u8fd0\u884c\u201d \u4ee5\u5728\u4e24\u4e2a\u4eff\u771f\u4e2d\u542f\u52a8\u4ea4\u901a\u6d41\u91cf\u3002 > \"Play\" on SUMO window. \u8be5\u811a\u672c\u751f\u6210\u7684\u6d41\u91cf\u662f CARLA \u56e2\u961f\u521b\u5efa\u7684\u793a\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u6cbf\u7740\u76f8\u540c\u7684\u8def\u7ebf\u751f\u6210\u76f8\u540c\u7684\u8f66\u8f86\u3002\u7528\u6237\u53ef\u4ee5\u5728 SUMO \u4e2d\u66f4\u6539\u8fd9\u4e9b\u5185\u5bb9\u3002 SUMO and CARLA co-simulating traffic. \u8b66\u544a \u76ee\u524d\uff0cSUMO \u8054\u5408\u4eff\u771f\u8fd8\u662f\u6d4b\u8bd5\u7248\u529f\u80fd\u3002\u8f66\u8f86\u6ca1\u6709\u7269\u7406\u7279\u6027\uff0c\u4e5f\u4e0d\u8003\u8651 CARLA \u4ea4\u901a\u706f\u3002","title":"SUMO \u534f\u540c\u4eff\u771f\u4ea4\u901a"},{"location":"tuto_G_retrieve_data/#_7","text":"\u4ece\u73b0\u5728\u5230\u8bb0\u5f55\u5668\u505c\u6b62\u7684\u90a3\u4e00\u523b\uff0c\u5c06\u4f1a\u6709\u4e00\u4e9b\u5c5e\u4e8e tutorial_ego.py \u7684\u4ee3\u7801\u7247\u6bb5\u3002\u8be5\u811a\u672c\u751f\u6210\u81ea\u6211\u8f66\u8f86\uff0c\u53ef\u9009\u4e00\u4e9b\u4f20\u611f\u5668\uff0c\u5e76\u8bb0\u5f55\u4eff\u771f\uff0c\u76f4\u5230\u7528\u6237\u5b8c\u6210\u811a\u672c\u3002","title":"\u8bbe\u7f6e\u81ea\u6211\u8f66\u8f86"},{"location":"tuto_G_retrieve_data/#_8","text":"\u7528\u6237\u63a7\u5236\u7684\u8f66\u8f86\u5728 CARLA \u4e2d\u901a\u5e38\u901a\u8fc7\u5c06\u5c5e\u6027 role_name \u8bbe\u7f6e\u4e3a ego \u6765\u533a\u5206\u3002\u53ef\u4ee5\u8bbe\u7f6e\u5176\u4ed6\u5c5e\u6027\uff0c\u5176\u4e2d\u4e00\u4e9b\u5177\u6709\u63a8\u8350\u503c\u3002 \u4e0b\u9762\uff0c\u4ece \u84dd\u56fe\u5e93 \u4e2d\u68c0\u7d22\u7279\u65af\u62c9\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u968f\u673a\u63a8\u8350\u7684\u989c\u8272\u751f\u6210\u3002\u9009\u62e9\u5730\u56fe\u63a8\u8350\u7684\u751f\u6210\u70b9\u4e4b\u4e00\u6765\u653e\u7f6e\u81ea\u6211\u8f66\u8f86\u3002 # -------------- # Spawn ego vehicle # -------------- ego_bp = world.get_blueprint_library().find('vehicle.tesla.model3') ego_bp.set_attribute('role_name','ego') print('\\nEgo role_name is set') ego_color = random.choice(ego_bp.get_attribute('color').recommended_values) ego_bp.set_attribute('color',ego_color) print('\\nEgo color is set') spawn_points = world.get_map().get_spawn_points() number_of_spawn_points = len(spawn_points) if 0 < number_of_spawn_points: random.shuffle(spawn_points) ego_transform = spawn_points[0] ego_vehicle = world.spawn_actor(ego_bp,ego_transform) print('\\nEgo is spawned') else: logging.warning('Could not found any spawn points')","title":"\u751f\u6210\u81ea\u6211\u8f66\u8f86"},{"location":"tuto_G_retrieve_data/#_9","text":"\u89c2\u5bdf\u8005\u53c2\u4e0e\u8005\u63a7\u5236\u4eff\u771f\u89c6\u56fe\u3002\u901a\u8fc7\u811a\u672c\u79fb\u52a8\u5b83\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5b83\u53ef\u80fd\u6709\u52a9\u4e8e\u627e\u5230\u81ea\u6211\u8f66\u8f86\u3002 # -------------- # Spectator on ego position # -------------- spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform())","title":"\u653e\u7f6e\u89c2\u5bdf\u8005"},{"location":"tuto_G_retrieve_data/#_10","text":"\u751f\u6210\u4efb\u4f55\u4f20\u611f\u5668\u7684\u8fc7\u7a0b\u90fd\u975e\u5e38\u76f8\u4f3c\u3002 1. \u4f7f\u7528\u5e93\u67e5\u627e\u4f20\u611f\u5668\u84dd\u56fe\u3002 2. \u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u7279\u5b9a\u5c5e\u6027\u3002\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\u3002\u5c5e\u6027\u5c06\u5851\u9020\u68c0\u7d22\u5230\u7684\u6570\u636e\u3002 3. \u5c06\u4f20\u611f\u5668\u8fde\u63a5\u81f3\u81ea\u6211\u8f66\u8f86\u3002\u8be5\u53d8\u6362\u662f\u76f8\u5bf9\u4e8e\u5176\u7236\u7ea7\u7684\u3002 carla.AttachmentType \u5c06\u786e\u5b9a\u4f20\u611f\u5668\u4f4d\u7f6e\u7684\u66f4\u65b0\u65b9\u5f0f\u3002 4. \u6dfb\u52a0 listen() \u65b9\u6cd5\u3002\u8fd9\u662f\u5173\u952e\u8981\u7d20\u3002\u6bcf\u6b21\u4f20\u611f\u5668\u4fa6\u542c\u6570\u636e\u65f6\u90fd\u4f1a\u8c03\u7528\u7684 lambda \u65b9\u6cd5\u3002\u53c2\u6570\u662f\u68c0\u7d22\u5230\u7684\u4f20\u611f\u5668\u6570\u636e\u3002 \u7262\u8bb0\u8fd9\u4e00\u57fa\u672c\u51c6\u5219\uff0c\u8ba9\u6211\u4eec\u4e3a\u81ea\u6211\u8f66\u8f86\u8bbe\u7f6e\u4e00\u4e9b\u57fa\u672c\u4f20\u611f\u5668\u3002","title":"\u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668"},{"location":"tuto_G_retrieve_data/#rgb","text":"RGB \u76f8\u673a \u751f\u6210\u903c\u771f\u7684\u573a\u666f\u56fe\u7247\u3002\u5b83\u662f\u6240\u6709\u4f20\u611f\u5668\u4e2d\u53ef\u8bbe\u7f6e\u5c5e\u6027\u8f83\u591a\u7684\u4f20\u611f\u5668\uff0c\u4f46\u5b83\u4e5f\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4f20\u611f\u5668\u3002\u5b83\u5e94\u8be5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u76f8\u673a\uff0c\u5177\u6709\u8bf8\u5982 focal_distance \u3001 shutter_speed \u6216 gamma \u786e\u5b9a\u5176\u5185\u90e8\u5982\u4f55\u5de5\u4f5c\u7684\u5c5e\u6027\u3002\u8fd8\u6709\u4e00\u7ec4\u7279\u5b9a\u7684\u5c5e\u6027\u6765\u5b9a\u4e49\u955c\u5934\u7578\u53d8\uff0c\u4ee5\u53ca\u8bb8\u591a\u9ad8\u7ea7\u5c5e\u6027\u3002\u4f8b\u5982\uff0c lens_circle_multiplier \u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u773c\u775b\u9c7c\u955c\u5934\u7684\u6548\u679c\u3002\u5728\u6587\u6863\u4e2d\u4e86\u89e3\u6709\u5173\u5b83\u4eec\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u811a\u672c\u4ec5\u8bbe\u7f6e\u8be5\u4f20\u611f\u5668\u6700\u5e38\u7528\u7684\u5c5e\u6027\u3002 image_size_x \u548c image_size_y \u5c06\u6539\u53d8\u8f93\u51fa\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u3002 fov \u662f\u76f8\u673a\u7684\u6c34\u5e73\u89c6\u91ce\u3002 \u8bbe\u7f6e\u5c5e\u6027\u540e\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u4f20\u611f\u5668\u4e86\u3002\u811a\u672c\u5c06\u6444\u50cf\u673a\u653e\u7f6e\u5728\u6c7d\u8f66\u5f15\u64ce\u76d6\u4e2d\uff0c\u5e76\u6307\u5411\u524d\u65b9\u3002\u5b83\u5c06\u6355\u6349\u6c7d\u8f66\u7684\u524d\u89c6\u56fe\u3002 \u6bcf\u4e00\u6b65\u90fd\u4f1a\u4ee5 carla.Image \u7684\u5f62\u5f0f\u68c0\u7d22\u6570\u636e\u3002Listen \u65b9\u6cd5\u5c06\u5b83\u4eec\u4fdd\u5b58\u5230\u78c1\u76d8\u3002\u8def\u5f84\u53ef\u4ee5\u968f\u610f\u6539\u53d8\u3002\u6bcf\u5f20\u56fe\u50cf\u7684\u540d\u79f0\u5747\u6839\u636e\u62cd\u6444\u955c\u5934\u7684\u6a21\u62df\u5e27\u8fdb\u884c\u7f16\u7801\u3002 # -------------- # Spawn attached RGB camera # -------------- cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('tutorial/output/%.6d.jpg' % image.frame)) RGB camera output","title":"RGB \u76f8\u673a"},{"location":"tuto_G_retrieve_data/#_11","text":"\u5f53\u5b83\u4eec\u6240\u9644\u52a0\u7684\u5bf9\u8c61\u6ce8\u518c\u7279\u5b9a\u4e8b\u4ef6\u65f6\uff0c\u8fd9\u4e9b\u4f20\u611f\u5668\u4f1a\u68c0\u7d22\u6570\u636e\u3002\u68c0\u6d4b\u5668\u4f20\u611f\u5668\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u6bcf\u79cd\u90fd\u63cf\u8ff0\u4e00\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002 \u78b0\u649e\u68c0\u6d4b\u5668\u3002 \u68c0\u7d22\u5176\u7236\u7ea7\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u78b0\u649e\u3002 \u8f66\u9053\u5165\u4fb5\u68c0\u6d4b\u5668\u3002 \u5f53\u5176\u7236\u7ea7\u7a7f\u8fc7\u8f66\u9053\u6807\u8bb0\u65f6\u8fdb\u884c\u6ce8\u518c\u3002 \u969c\u788d\u7269\u68c0\u6d4b\u5668\u3002 \u68c0\u6d4b\u5176\u7236\u7ea7\u524d\u65b9\u53ef\u80fd\u5b58\u5728\u7684\u969c\u788d\u7269\u3002 \u4ed6\u4eec\u68c0\u7d22\u5230\u7684\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u7a0d\u540e\u51b3\u5b9a\u8981\u91cd\u65b0\u6267\u884c\u4eff\u771f\u7684\u54ea\u4e00\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5f55\u5668\u663e\u5f0f\u67e5\u8be2\u51b2\u7a81\u3002\u8fd9\u662f\u51c6\u5907\u6253\u5370\u7684\u3002 \u53ea\u6709\u969c\u788d\u7269\u68c0\u6d4b\u5668\u84dd\u56fe\u6709\u9700\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u91cd\u8981\u7684\u5185\u5bb9\u3002 sensor_tick \u8bbe\u7f6e\u4f20\u611f\u5668\u4ec5\u5728 x \u79d2\u949f\u540e\u68c0\u7d22\u6570\u636e\u3002\u8fd9\u662f\u68c0\u7d22\u6bcf\u4e00\u6b65\u6570\u636e\u7684\u4f20\u611f\u5668\u7684\u5e38\u89c1\u5c5e\u6027\u3002 distance \u548c hit-radius \u5851\u9020\u7528\u4e8e\u68c0\u6d4b\u524d\u65b9\u969c\u788d\u7269\u7684\u8c03\u8bd5\u7ebf\u3002 only_dynamics \u786e\u5b9a\u662f\u5426\u5e94\u8003\u8651\u9759\u6001\u5bf9\u8c61\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u5bf9\u8c61\u90fd\u4f1a\u88ab\u8003\u8651\u3002 \u8be5\u811a\u672c\u5c06\u969c\u788d\u7269\u68c0\u6d4b\u5668\u8bbe\u7f6e\u4e3a\u4ec5\u8003\u8651\u52a8\u6001\u5bf9\u8c61\u3002\u5982\u679c\u8f66\u8f86\u4e0e\u4efb\u4f55\u9759\u6001\u7269\u4f53\u53d1\u751f\u78b0\u649e\uff0c\u78b0\u649e\u4f20\u611f\u5668\u90fd\u4f1a\u68c0\u6d4b\u5230\u3002 # -------------- # Add collision sensor to ego vehicle. # -------------- col_bp = world.get_blueprint_library().find('sensor.other.collision') col_location = carla.Location(0,0,0) col_rotation = carla.Rotation(0,0,0) col_transform = carla.Transform(col_location,col_rotation) ego_col = world.spawn_actor(col_bp,col_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def col_callback(colli): print(\"Collision detected:\\n\"+str(colli)+'\\n') ego_col.listen(lambda colli: col_callback(colli)) # -------------- # Add Lane invasion sensor to ego vehicle. # -------------- lane_bp = world.get_blueprint_library().find('sensor.other.lane_invasion') lane_location = carla.Location(0,0,0) lane_rotation = carla.Rotation(0,0,0) lane_transform = carla.Transform(lane_location,lane_rotation) ego_lane = world.spawn_actor(lane_bp,lane_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def lane_callback(lane): print(\"Lane invasion detected:\\n\"+str(lane)+'\\n') ego_lane.listen(lambda lane: lane_callback(lane)) # -------------- # Add Obstacle sensor to ego vehicle. # -------------- obs_bp = world.get_blueprint_library().find('sensor.other.obstacle') obs_bp.set_attribute(\"only_dynamics\",str(True)) obs_location = carla.Location(0,0,0) obs_rotation = carla.Rotation(0,0,0) obs_transform = carla.Transform(obs_location,obs_rotation) ego_obs = world.spawn_actor(obs_bp,obs_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def obs_callback(obs): print(\"Obstacle detected:\\n\"+str(obs)+'\\n') ego_obs.listen(lambda obs: obs_callback(obs)) Output for detector sensors","title":"\u68c0\u6d4b\u5668"},{"location":"tuto_G_retrieve_data/#_12","text":"\u6682\u65f6\u53ea\u8003\u8651\u8be5\u7c7b\u522b\u7684\u4e24\u4e2a\u4f20\u611f\u5668\u3002 \u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u4f20\u611f\u5668\u3002 \u68c0\u7d22\u4f20\u611f\u5668\u7684\u5730\u7406\u4f4d\u7f6e\u3002 IMU \u4f20\u611f\u5668\u3002 \u5305\u62ec\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u548c\u6307\u5357\u9488\u3002 \u4e3a\u4e86\u83b7\u5f97\u8f66\u8f86\u5bf9\u8c61\u7684\u4e00\u822c\u6d4b\u91cf\u503c\uff0c\u8fd9\u4e24\u4e2a\u4f20\u611f\u5668\u4ee5\u8f66\u8f86\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u751f\u6210\u3002 \u8fd9\u4e9b\u4f20\u611f\u5668\u53ef\u7528\u7684\u5c5e\u6027\u4e3b\u8981\u8bbe\u7f6e\u6d4b\u91cf\u566a\u58f0\u6a21\u578b\u4e2d\u7684\u5e73\u5747\u503c\u6216\u6807\u51c6\u504f\u5dee\u53c2\u6570\u3002\u8fd9\u5bf9\u4e8e\u83b7\u5f97\u66f4\u73b0\u5b9e\u7684\u63aa\u65bd\u5f88\u6709\u7528\u3002\u7136\u800c\uff0c\u5728 tutorial_ego.py \u4e2d\u53ea\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5c5e\u6027\u3002 sensor_tick . \u7531\u4e8e\u6b64\u6d4b\u91cf\u503c\u5728\u6b65\u9aa4\u4e4b\u95f4\u4e0d\u5e94\u6709\u663e\u7740\u53d8\u5316\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ecf\u5e38\u68c0\u7d22\u6570\u636e\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u8bbe\u7f6e\u4e3a\u6bcf\u4e09\u79d2\u6253\u5370\u4e00\u6b21\u3002 # -------------- # Add GNSS sensor to ego vehicle. # -------------- gnss_bp = world.get_blueprint_library().find('sensor.other.gnss') gnss_location = carla.Location(0,0,0) gnss_rotation = carla.Rotation(0,0,0) gnss_transform = carla.Transform(gnss_location,gnss_rotation) gnss_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_gnss = world.spawn_actor(gnss_bp,gnss_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def gnss_callback(gnss): print(\"GNSS measure:\\n\"+str(gnss)+'\\n') ego_gnss.listen(lambda gnss: gnss_callback(gnss)) # -------------- # Add IMU sensor to ego vehicle. # -------------- imu_bp = world.get_blueprint_library().find('sensor.other.imu') imu_location = carla.Location(0,0,0) imu_rotation = carla.Rotation(0,0,0) imu_transform = carla.Transform(imu_location,imu_rotation) imu_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_imu = world.spawn_actor(imu_bp,imu_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def imu_callback(imu): print(\"IMU measure:\\n\"+str(imu)+'\\n') ego_imu.listen(lambda imu: imu_callback(imu)) GNSS and IMU sensors output","title":"\u5176\u4ed6\u4f20\u611f\u5668"},{"location":"tuto_G_retrieve_data/#_13","text":"\u811a\u672c tutorial_replay.py \u9664\u5176\u4ed6\u5916\u8fd8\u5305\u542b\u66f4\u591a\u4f20\u611f\u5668\u7684\u5b9a\u4e49\u3002\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u57fa\u672c\u7684\u76f8\u540c\uff0c\u4f46\u7406\u89e3\u53ef\u80fd\u6709\u70b9\u56f0\u96be\u3002","title":"\u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668"},{"location":"tuto_G_retrieve_data/#_14","text":"\u6df1\u5ea6\u76f8\u673a \u751f\u6210\u573a\u666f\u7684\u56fe\u7247\uff0c\u5c06\u6bcf\u4e2a\u50cf\u7d20\u6620\u5c04\u5230\u7070\u5ea6\u6df1\u5ea6\u56fe\u4e2d\u3002\u7136\u800c\uff0c\u8f93\u51fa\u5e76\u4e0d\u7b80\u5355\u3002\u76f8\u673a\u7684\u6df1\u5ea6\u7f13\u51b2\u533a\u4f7f\u7528 RGB \u989c\u8272\u7a7a\u95f4\u8fdb\u884c\u6620\u5c04\u3002\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u4e3a\u7070\u5ea6\u624d\u80fd\u7406\u89e3\u3002 \u4e3a\u6b64\uff0c\u53ea\u9700\u5c06\u56fe\u50cf\u4fdd\u5b58\u4e3a RGB \u76f8\u673a\u7684\u56fe\u50cf\uff0c\u4f46\u5bf9\u5176\u5e94\u7528 carla.ColorConverter \u5373\u53ef\u3002\u6df1\u5ea6\u76f8\u673a\u6709\u4e24\u79cd\u53ef\u7528\u7684\u8f6c\u6362\u3002 carla.ColorConverter.Depth \u4ee5\u6beb\u7c73\u7ea7\u7cbe\u5ea6\u8f6c\u6362\u539f\u59cb\u6df1\u5ea6\u3002 carla.ColorConverter.LogarithmicDepth \u4e5f\u5177\u6709\u6beb\u7c73\u7ea7\u7c92\u5ea6\uff0c\u4f46\u5728\u8fd1\u8ddd\u79bb\u5185\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u800c\u5bf9\u4e8e\u8f83\u8fdc\u7684\u5143\u7d20\u5219\u7a0d\u5dee\u4e00\u4e9b\u3002 \u6df1\u5ea6\u76f8\u673a\u7684\u5c5e\u6027\u4ec5\u8bbe\u7f6e\u4e4b\u524d\u5728 RGB \u76f8\u673a\u4e2d\u6240\u8ff0\u7684\u5143\u7d20\uff1a fov \u3001 image_size_x \u3001 image_size_y \u548c sensor_tick \u3002\u8be5\u811a\u672c\u5c06\u6b64\u4f20\u611f\u5668\u8bbe\u7f6e\u4e3a\u4e0e\u4e4b\u524d\u4f7f\u7528\u7684 RGB \u76f8\u673a\u76f8\u5339\u914d\u3002 # -------------- # Add a Depth camera to ego vehicle. # -------------- depth_cam = None depth_bp = world.get_blueprint_library().find('sensor.camera.depth') depth_location = carla.Location(2,0,1) depth_rotation = carla.Rotation(0,180,0) depth_transform = carla.Transform(depth_location,depth_rotation) depth_cam = world.spawn_actor(depth_bp,depth_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam.listen(lambda image: image.save_to_disk('tutorial/new_depth_output/%.6d.jpg' % image.frame,carla.ColorConverter.LogarithmicDepth)) Depth camera output. Simple conversion on the left, logarithmic on the right.","title":"\u6df1\u5ea6\u76f8\u673a"},{"location":"tuto_G_retrieve_data/#_15","text":"\u8bed\u4e49\u5206\u5272\u76f8\u673a \u6839\u636e\u5143\u7d20\u7684\u6807\u8bb0\u65b9\u5f0f\u5c06\u573a\u666f\u4e2d\u7684\u5143\u7d20\u6e32\u67d3\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002\u6807\u7b7e\u7531\u4eff\u771f\u5668\u6839\u636e\u7528\u4e8e\u751f\u6210\u7684\u8d44\u6e90\u7684\u8def\u5f84\u521b\u5efa\u3002\u4f8b\u5982\uff0c\u6807\u8bb0\u4e3a Pedestrians \u7684\u7f51\u683c\u4f53\u662f\u4f7f\u7528\u5b58\u50a8\u5728 Unreal/CarlaUE4/Content/Static/Pedestrians \u4e2d\u7684\u5185\u5bb9\u751f\u6210\u7684\u3002 \u4e0e\u4efb\u4f55\u76f8\u673a\u4e00\u6837\uff0c\u8f93\u51fa\u662f\u56fe\u50cf\uff0c\u4f46\u6bcf\u4e2a\u50cf\u7d20\u90fd\u5305\u542b\u5728\u7ea2\u8272\u901a\u9053\u4e2d\u7f16\u7801\u7684\u6807\u7b7e\u3002\u5fc5\u987b\u4f7f\u7528 ColorConverter.CityScapesPalette \u8f6c\u6362\u6b64\u539f\u59cb\u56fe\u50cf\u3002\u53ef\u4ee5\u521b\u5efa\u65b0\u6807\u7b7e\uff0c\u8bf7\u9605\u8bfb \u6587\u6863 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u8be5\u76f8\u673a\u53ef\u7528\u7684\u5c5e\u6027\u4e0e\u6df1\u5ea6\u76f8\u673a\u5b8c\u5168\u76f8\u540c\u3002\u8be5\u811a\u672c\u8fd8\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e0e\u539f\u59cb RGB \u76f8\u673a\u76f8\u5339\u914d\u3002 # -------------- # Add a new semantic segmentation camera to my ego # -------------- sem_cam = None sem_bp = world.get_blueprint_library().find('sensor.camera.semantic_segmentation') sem_bp.set_attribute(\"image_size_x\",str(1920)) sem_bp.set_attribute(\"image_size_y\",str(1080)) sem_bp.set_attribute(\"fov\",str(105)) sem_location = carla.Location(2,0,1) sem_rotation = carla.Rotation(0,180,0) sem_transform = carla.Transform(sem_location,sem_rotation) sem_cam = world.spawn_actor(sem_bp,sem_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view sem_cam.listen(lambda image: image.save_to_disk('tutorial/new_sem_output/%.6d.jpg' % image.frame,carla.ColorConverter.CityScapesPalette)) Semantic segmentation camera output","title":"\u8bed\u4e49\u5206\u5272\u76f8\u673a"},{"location":"tuto_G_retrieve_data/#_16","text":"\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668 \u4eff\u771f\u65cb\u8f6c\u6fc0\u5149\u96f7\u8fbe\u3002\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u4ee5\u4e09\u7ef4\u5f62\u5f0f\u6620\u5c04\u573a\u666f\u7684\u70b9\u4e91\u3002\u6fc0\u5149\u96f7\u8fbe\u5305\u542b\u4e00\u7ec4\u4ee5\u7279\u5b9a\u9891\u7387\u65cb\u8f6c\u7684\u6fc0\u5149\u5668\u3002\u6fc0\u5149\u6295\u5c04\u649e\u51fb\u8ddd\u79bb\uff0c\u5e76\u5c06\u6bcf\u6b21\u5c04\u51fb\u5b58\u50a8\u4e3a\u4e00\u4e2a\u70b9\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u4f20\u611f\u5668\u5c5e\u6027\u6765\u8bbe\u7f6e\u6fc0\u5149\u5668\u9635\u5217\u7684\u5e03\u7f6e\u65b9\u5f0f\u3002 upper_fov \u548c lower_fov \u5206\u522b\u662f\u6700\u9ad8\u548c\u6700\u4f4e\u6fc0\u5149\u7684\u89d2\u5ea6\u3002 channels \u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u6fc0\u5149\u6570\u91cf\u3002\u8fd9\u4e9b\u6cbf\u7740\u6240\u9700\u7684 fov \u5206\u5e03\u3002 \u5176\u4ed6\u5c5e\u6027\u8bbe\u7f6e\u8be5\u70b9\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002\u5b83\u4eec\u786e\u5b9a\u6bcf\u4e2a\u6fc0\u5149\u5668\u6bcf\u4e00\u6b65\u8ba1\u7b97\u7684\u70b9\u6570\uff1a points_per_second / (FPS * channels) . range \u662f\u6355\u83b7\u7684\u6700\u5927\u8ddd\u79bb\u3002 points_per_second \u662f\u6bcf\u79d2\u83b7\u5f97\u7684\u70b9\u6570\u3002\u8be5\u6570\u91cf\u9664\u4ee5 channels \u7684\u6570\u91cf\u3002 rotation_frequency \u662f\u6fc0\u5149\u96f7\u8fbe\u6bcf\u79d2\u65cb\u8f6c\u7684\u6b21\u6570\u3002 \u70b9\u4e91\u8f93\u51fa\u88ab\u63cf\u8ff0\u4e3a [carla.LidarMeasurement]\u3002\u5b83\u53ef\u4ee5\u4f5c\u4e3a [carla.Location] \u5217\u8868\u8fdb\u884c\u8fed\u4ee3\u6216\u4fdd\u5b58\u4e3a .ply \u6807\u51c6\u6587\u4ef6\u683c\u5f0f\u3002 # -------------- # Add a new LIDAR sensor to my ego # -------------- lidar_cam = None lidar_bp = world.get_blueprint_library().find('sensor.lidar.ray_cast') lidar_bp.set_attribute('channels',str(32)) lidar_bp.set_attribute('points_per_second',str(90000)) lidar_bp.set_attribute('rotation_frequency',str(40)) lidar_bp.set_attribute('range',str(20)) lidar_location = carla.Location(0,0,2) lidar_rotation = carla.Rotation(0,0,0) lidar_transform = carla.Transform(lidar_location,lidar_rotation) lidar_sen = world.spawn_actor(lidar_bp,lidar_transform,attach_to=ego_vehicle) lidar_sen.listen(lambda point_cloud: point_cloud.save_to_disk('tutorial/new_lidar_output/%.6d.ply' % point_cloud.frame)) .ply \u8f93\u51fa\u53ef\u4ee5\u4f7f\u7528 Meshlab \u8fdb\u884c\u53ef\u89c6\u5316\u3002 1. \u5b89\u88c5 Meshlab \u3002 sudo apt-get update -y sudo apt-get install -y meshlab 2. \u6253\u5f00 Meshlab \u3002 meshlab 3. \u6253\u5f00\u5176\u4e2d\u4e00\u4e2a .ply \u6587\u4ef6\u3002 File > Import mesh... \u7ecf\u8fc7Meshlab\u5904\u7406\u540e\u7684\u6fc0\u5149\u96f7\u8fbe\u8f93\u51fa\u3002","title":"\u6fc0\u5149\u96f7\u8fbe\u5149\u7ebf\u6295\u5c04\u4f20\u611f\u5668"},{"location":"tuto_G_retrieve_data/#_17","text":"\u96f7\u8fbe\u4f20\u611f\u5668 \u4e0e \u6fc0\u5149\u96f7\u8fbe\u7c7b\u4f3c\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u5706\u9525\u89c6\u56fe\uff0c\u5e76\u5411\u5185\u90e8\u53d1\u5c04\u6fc0\u5149\u4ee5\u5c04\u7ebf\u6295\u5c04\u5176\u5f71\u54cd\u3002\u8f93\u51fa\u662f carla.RadarMeasurement \u3002\u5b83\u5305\u542b\u7531\u6fc0\u5149\u5668\u68c0\u7d22\u5230\u7684 carla.RadarDetection \u7684\u5217\u8868\u3002\u8fd9\u4e9b\u4e0d\u662f\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u800c\u662f\u4f7f\u7528\u6709\u5173\u4f20\u611f\u5668\u7684\u6570\u636e\u8fdb\u884c\u7684\u68c0\u6d4b\uff1a \u8be5\u4f20\u611f\u5668\u7684\u5c5e\u6027\u4e3b\u8981\u51b3\u5b9a\u4e86\u6fc0\u5149\u5668\u7684\u5b9a\u4f4d\u65b9\u5f0f\u3002 horizontal_fov \u548c vertical_fov \u786e\u5b9a\u5706\u9525\u89c6\u56fe\u7684\u632f\u5e45\u3002 channels \u7f6e\u8981\u4f7f\u7528\u7684\u6fc0\u5149\u6570\u91cf\u3002\u8fd9\u4e9b\u6cbf\u7740\u6240\u9700 fov \u7684\u5206\u5e03\u3002 range \u662f\u6fc0\u5149\u5149\u7ebf\u6295\u5c04\u7684\u6700\u5927\u8ddd\u79bb\u3002 points_per_second \u8bbe\u7f6e\u8981\u6355\u83b7\u7684\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u4e9b\u70b9\u5c06\u5728\u6307\u5b9a\u7684\u901a\u9053\u4e4b\u95f4\u5206\u914d\u3002 \u8be5\u811a\u672c\u5c06\u4f20\u611f\u5668\u653e\u7f6e\u5728\u6c7d\u8f66\u5f15\u64ce\u76d6\u4e0a\uff0c\u5e76\u5411\u4e0a\u65cb\u8f6c\u4e00\u70b9\u3002\u8fd9\u6837\uff0c\u8f93\u51fa\u5c06\u6620\u5c04\u6c7d\u8f66\u7684\u524d\u89c6\u56fe\u3002 horizontal_fov \u662f\u589e\u52a0\u7684\uff0c vertical_fov \u662f\u51cf\u5c11\u7684\u3002\u611f\u5174\u8da3\u7684\u533a\u57df\u7279\u522b\u662f\u8f66\u8f86\u548c\u6b65\u884c\u8005\u901a\u5e38\u79fb\u52a8\u7684\u9ad8\u5ea6\u3002\u8ddd\u79bb range \u4e5f\u4ece 100m \u66f4\u6539\u4e3a 10m\uff0c\u4ee5\u4fbf\u4ec5\u68c0\u7d22\u8f66\u8f86\u6b63\u524d\u65b9\u7684\u6570\u636e\u3002 \u8fd9\u6b21\u7684\u56de\u8c03\u6709\u70b9\u590d\u6742\uff0c\u663e\u793a\u4e86\u5b83\u7684\u66f4\u591a\u529f\u80fd\u3002\u5b83\u5c06\u5b9e\u65f6\u7ed8\u5236\u96f7\u8fbe\u6355\u83b7\u7684\u70b9\u3002\u8fd9\u4e9b\u70b9\u5c06\u6839\u636e\u5b83\u4eec\u76f8\u5bf9\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u800c\u7740\u8272\u3002 Blue \u8868\u793a\u63a5\u8fd1\u8f66\u8f86\u7684\u70b9\u3002 Red \u8868\u793a\u8fdc\u79bb\u63a5\u8fd1\u8f66\u8f86\u7684\u70b9\u3002 White \u4ee3\u8868\u5173\u4e8e\u81ea\u6211\u8f66\u8f86\u7684\u9759\u6001\u70b9\u3002 # -------------- # Add a new radar sensor to my ego # -------------- rad_cam = None rad_bp = world.get_blueprint_library().find('sensor.other.radar') rad_bp.set_attribute('horizontal_fov', str(35)) rad_bp.set_attribute('vertical_fov', str(20)) rad_bp.set_attribute('range', str(20)) rad_location = carla.Location(x=2.0, z=1.0) rad_rotation = carla.Rotation(pitch=5) rad_transform = carla.Transform(rad_location,rad_rotation) rad_ego = world.spawn_actor(rad_bp,rad_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def rad_callback(radar_data): velocity_range = 7.5 # m/s current_rot = radar_data.transform.rotation for detect in radar_data: azi = math.degrees(detect.azimuth) alt = math.degrees(detect.altitude) # The 0.25 adjusts a bit the distance so the dots can # be properly seen fw_vec = carla.Vector3D(x=detect.depth - 0.25) carla.Transform( carla.Location(), carla.Rotation( pitch=current_rot.pitch + alt, yaw=current_rot.yaw + azi, roll=current_rot.roll)).transform(fw_vec) def clamp(min_v, max_v, value): return max(min_v, min(value, max_v)) norm_velocity = detect.velocity / velocity_range # range [-1, 1] r = int(clamp(0.0, 1.0, 1.0 - norm_velocity) * 255.0) g = int(clamp(0.0, 1.0, 1.0 - abs(norm_velocity)) * 255.0) b = int(abs(clamp(- 1.0, 0.0, - 1.0 - norm_velocity)) * 255.0) world.debug.draw_point( radar_data.transform.location + fw_vec, size=0.075, life_time=0.06, persistent_lines=False, color=carla.Color(r, g, b)) rad_ego.listen(lambda radar_data: rad_callback(radar_data)) \u96f7\u8fbe\u8f93\u51fa\u3002\u8f66\u8f86\u505c\u5728\u7ea2\u7eff\u706f\u5904\uff0c\u56e0\u6b64\u5176\u524d\u9762\u7684\u9759\u6001\u5143\u7d20\u663e\u793a\u4e3a\u767d\u8272\u3002","title":"\u96f7\u8fbe\u4f20\u611f\u5668"},{"location":"tuto_G_retrieve_data/#_18","text":"\u65e0\u6e32\u67d3\u6a21\u5f0f \u5bf9\u4e8e\u8fd0\u884c\u521d\u59cb\u4eff\u771f\u975e\u5e38\u6709\u7528\uff0c\u7a0d\u540e\u5c06\u518d\u6b21\u64ad\u653e\u8be5\u4eff\u771f\u4ee5\u68c0\u7d22\u6570\u636e\u3002\u7279\u522b\u662f\u5982\u679c\u8be5\u4eff\u771f\u5b58\u5728\u4e00\u4e9b\u6781\u7aef\u6761\u4ef6\uff0c\u4f8b\u5982\u4ea4\u901a\u5bc6\u96c6\u3002","title":"\u975e\u6e32\u67d3\u6a21\u5f0f"},{"location":"tuto_G_retrieve_data/#_19","text":"\u7981\u7528\u6e32\u67d3\u5c06\u4e3a\u4eff\u771f\u8282\u7701\u5927\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u4e0d\u4f7f\u7528 GPU\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5168\u901f\u5de5\u4f5c\u3002\u8fd9\u5bf9\u4e8e\u5feb\u901f\u4eff\u771f\u590d\u6742\u7684\u6761\u4ef6\u5f88\u6709\u7528\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002\u4ee5\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u8fd0\u884c\u5f02\u6b65\u670d\u52a1\u5668\u5e76\u4e14\u4e0d\u8fdb\u884c\u6e32\u67d3\uff0c\u4eff\u771f\u7684\u552f\u4e00\u9650\u5236\u662f\u670d\u52a1\u5668\u7684\u5185\u90e8\u903b\u8f91\u3002 \u76f8\u540c\u7684 config.py \u7528\u4e8e \u8bbe\u7f6e\u5730\u56fe \u53ef\u4ee5\u7981\u7528\u6e32\u67d3\uff0c\u5e76\u8bbe\u7f6e\u56fa\u5b9a\u7684\u65f6\u95f4\u6b65\u957f\u3002 cd /opt/carla/PythonAPI/utils python3 config.py --no-rendering --delta-seconds 0.05 # Never greater than 0.1s \u8b66\u544a \u5728\u4f7f\u7528\u540c\u6b65\u548c\u65f6\u95f4\u6b65\u4e4b\u524d\uff0c\u8bf7\u5148\u9605\u8bfb \u6587\u6863 \u3002","title":"\u5feb\u901f\u4eff\u771f"},{"location":"tuto_G_retrieve_data/#_20","text":"\u811a\u672c PythonAPI/examples/no_rendering_mode.py \u63d0\u4f9b\u4e86\u6a21\u62df\u7684\u6982\u8ff0\u3002\u5b83\u4f7f\u7528 Pygame \u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u7ea6\u7684\u9e1f\u77b0\u56fe\uff0c\u5b83\u5c06\u8ddf\u968f\u81ea\u6211\u8f66\u8f86\u3002\u8fd9\u53ef\u4ee5\u4e0e manual_control.py \u4e00\u8d77\u4f7f\u7528\u6765\u751f\u6210\u4e00\u6761\u51e0\u4e4e\u6ca1\u6709\u6210\u672c\u7684\u8def\u7ebf\uff0c\u8bb0\u5f55\u5b83\uff0c\u7136\u540e\u56de\u653e\u5e76\u5229\u7528\u5b83\u6765\u6536\u96c6\u6570\u636e\u3002 cd /opt/carla/PythonAPI/examples python3 manual_control.py cd /opt/carla/PythonAPI/examples python3 no_rendering_mode.py --no-rendering no_rendering_mode.py \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -h, --help show this help message and exit -v, --verbose print debug information --host H IP of the host server (default: 127.0.0.1) -p P, --port P TCP port to listen to (default: 2000) --res WIDTHxHEIGHT window resolution (default: 1280x720) --filter PATTERN actor filter (default: \"vehicle.*\") --map TOWN start a new episode at the given TOWN --no-rendering switch off server rendering --show-triggers show trigger boxes of traffic signs --show-connections show waypoint connections --show-spawn-points show recommended spawn points no_rendering_mode.py working in Town07 \u7b14\u8bb0 \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u57fa\u4e8e GPU \u7684\u4f20\u611f\u5668\u5c06\u68c0\u7d22\u7a7a\u6570\u636e\u3002\u6444\u50cf\u5934\u6ca1\u7528\uff0c\u4f46\u63a2\u6d4b\u5668\u7b49\u5176\u4ed6\u4f20\u611f\u5668\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002","title":"\u65e0\u9700\u6e32\u67d3\u7684\u624b\u52a8\u63a7\u5236"},{"location":"tuto_G_retrieve_data/#_21","text":"","title":"\u8bb0\u5f55\u548c\u68c0\u7d22\u6570\u636e"},{"location":"tuto_G_retrieve_data/#_22","text":"\u8bb0\u5f55\u5668 \u53ef\u4ee5\u968f\u65f6\u542f\u52a8\u3002\u811a\u672c\u4ece\u4e00\u5f00\u59cb\u5c31\u8fd9\u6837\u505a\uff0c\u4ee5\u4fbf\u6355\u6349\u4e00\u5207\uff0c\u5305\u62ec\u7b2c\u4e00\u6279\u53c2\u4e0e\u8005\u7684\u4ea7\u751f\u3002\u5982\u679c\u6ca1\u6709\u8be6\u7ec6\u8def\u5f84\uff0c\u65e5\u5fd7\u5c06\u4fdd\u5b58\u5230 CarlaUE4/Saved \u3002 # -------------- # \u5f00\u59cb\u8bb0\u5f55 # -------------- client.start_recorder('~/tutorial/recorder/recording01.log')","title":"\u5f00\u59cb\u8bb0\u5f55"},{"location":"tuto_G_retrieve_data/#_23","text":"\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u56e0\u4e3a\u8ba9\u5b83\u56db\u5904\u6f2b\u6e38\u6216\u624b\u52a8\u63a7\u5236\u800c\u51fa\u73b0\u6545\u969c\u3002\u4ea7\u751f\u7684\u4f20\u611f\u5668\u7684\u6570\u636e\u5c06\u88ab\u5373\u65f6\u68c0\u7d22\u3002\u8bf7\u52a1\u5fc5\u5728\u8bb0\u5f55\u65f6\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u4e00\u5207\u8bbe\u7f6e\u6b63\u786e\u3002 \u542f\u7528\u81ea\u52a8\u9a7e\u9a76\u3002 \u8fd9\u4f1a\u5c06\u8f66\u8f86\u6ce8\u518c\u5230 \u4ea4\u901a\u7ba1\u7406\u5668 \u3002\u5b83\u5c06\u65e0\u4f11\u6b62\u5730\u5728\u57ce\u5e02\u4e2d\u6f2b\u6e38\u3002\u8be5\u811a\u672c\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\u4ee5\u963b\u6b62\u811a\u672c\u5b8c\u6210\u3002\u5f55\u5236\u5c06\u7ee7\u7eed\u8fdb\u884c\uff0c\u76f4\u5230\u7528\u6237\u5b8c\u6210\u811a\u672c\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8ba1\u65f6\u5668\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u540e\u5b8c\u6210\u811a\u672c\u3002 # -------------- # \u6355\u83b7\u6570\u636e # -------------- ego_vehicle.set_autopilot(True) print('\\nEgo autopilot enabled') while True: world_snapshot = world.wait_for_tick() \u624b\u52a8\u63a7\u5236\u3002 \u5728\u5ba2\u6237\u7aef\u4e2d\u8fd0\u884c\u811a\u672c PythonAPI/examples/manual_control.py \uff0c\u5728\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\u4e2d\u8fd0\u884c\u8bb0\u5f55\u5668\u3002\u9a7e\u9a76\u81ea\u6211\u8f66\u8f86\u6765\u521b\u5efa\u6240\u9700\u7684\u8def\u7ebf\uff0c\u5e76\u5728\u5b8c\u6210\u540e\u505c\u6b62\u8bb0\u5f55\u4eea\u3002 tutorial_ego.py \u811a\u672c\u53ef\u7528\u4e8e\u7ba1\u7406\u8bb0\u5f55\u5668\uff0c\u4f46\u8bf7\u786e\u4fdd\u6ce8\u91ca\u5176\u4ed6\u4ee3\u7801\u7247\u6bb5\u3002 cd /opt/carla/PythonAPI/examples python3 manual_control.py \u7b14\u8bb0 \u4e3a\u4e86\u907f\u514d\u6e32\u67d3\u5e76\u8282\u7701\u8ba1\u7b97\u6210\u672c\uff0c\u8bf7\u542f\u7528 [ \u65e0\u6e32\u67d3\u6a21\u5f0f ] \u3002\u8be5\u811a\u672c /PythonAPI/examples/no_rendering_mode.py \u5728\u521b\u5efa\u7b80\u5355\u7684\u9e1f\u77b0\u56fe\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\u3002","title":"\u6355\u83b7\u5e76\u8bb0\u5f55"},{"location":"tuto_G_retrieve_data/#_24","text":"\u505c\u6b62\u8c03\u7528\u751a\u81f3\u6bd4\u5f00\u59cb\u8c03\u7528\u66f4\u7b80\u5355\u3002\u5f55\u97f3\u5b8c\u6210\u540e\uff0c\u5f55\u97f3\u5c06\u4fdd\u5b58\u5728\u524d\u9762\u6307\u5b9a\u7684\u8def\u5f84\u4e2d\u3002 # -------------- # \u505c\u6b62\u8bb0\u5f55 # -------------- client.stop_recorder()","title":"\u505c\u6b62\u8bb0\u5f55"},{"location":"tuto_G_retrieve_data/#_25","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eff\u771f\u5df2\u7ecf\u88ab\u8bb0\u5f55\u4e0b\u6765\u3002\u73b0\u5728\uff0c\u662f\u65f6\u5019\u68c0\u67e5\u8bb0\u5f55\uff0c\u627e\u5230\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u65f6\u523b\uff0c\u5e76\u5229\u7528\u5b83\u4eec\u3002\u8fd9\u4e9b\u6b65\u9aa4\u96c6\u4e2d\u5728\u811a\u672c tutorial_replay.py \u4e2d\u3002\u8be5\u5927\u7eb2\u7531\u6ce8\u91ca\u7684\u4e0d\u540c\u4ee3\u7801\u6bb5\u6784\u6210\u3002 \u73b0\u5728\u662f\u8fd0\u884c\u65b0\u4eff\u771f\u7684\u65f6\u5019\u4e86\u3002 ./CarlaUE4.sh \u8981\u91cd\u65b0\u8fdb\u884c\u4eff\u771f\uff0c\u8bf7 \u9009\u62e9\u4e00\u4e2a\u7247\u6bb5 \u5e76\u8fd0\u884c\u5305\u542b\u64ad\u653e\u4ee3\u7801\u7684\u811a\u672c\u3002 python3 tuto_replay.py","title":"\u5229\u7528\u8bb0\u5f55"},{"location":"tuto_G_retrieve_data/#_26","text":"\u8bb0\u5f55\u5668\u6587\u6863 \u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e0d\u540c\u7684\u67e5\u8be2\u3002\u603b\u4e4b\uff0c\u5b83\u4eec\u68c0\u7d22\u7279\u5b9a\u4e8b\u4ef6\u6216\u5e27\u7684\u6570\u636e\u3002\u4f7f\u7528\u67e5\u8be2\u6765\u7814\u7a76\u8bb0\u5f55\u3002\u627e\u5230\u805a\u5149\u706f\u65f6\u523b\uff0c\u8ffd\u8e2a\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002 # -------------- # Query the recording # -------------- # Show only the most important events in the recording. print(client.show_recorder_file_info(\"~/tutorial/recorder/recording01.log\",False)) # Show actors not moving 1 meter in 10 seconds. print(client.show_recorder_actors_blocked(\"~/tutorial/recorder/recording01.log\",10,1)) # Filter collisions between vehicles 'v' and 'a' any other type of actor. print(client.show_recorder_collisions(\"~/tutorial/recorder/recording01.log\",'v','a')) \u7b14\u8bb0 \u8bb0\u5f55\u5668\u4e0d\u9700\u8981\u6253\u5f00\u5373\u53ef\u8fdb\u884c\u67e5\u8be2\u3002 \u663e\u793a\u91cd\u8981\u4e8b\u4ef6\u7684\u67e5\u8be2\u3002\u8fd9\u662f\u81ea\u6211\u8f66\u8f86\u4ea7\u751f\u7684\u6846\u67b6\u3002 \u67e5\u8be2\u663e\u793a\u53c2\u4e0e\u8005\u88ab\u963b\u6b62\u3002\u5728\u6b64\u4eff\u771f\u4e2d\uff0c\u81ea\u6211\u8f66\u8f86\u4fdd\u6301\u963b\u585e\u72b6\u6001 100 \u79d2\u3002 \u663e\u793a\u81ea\u6211\u8f66\u8f86\u4e0e\u201c\u5176\u4ed6\u201d\u7c7b\u578b\u7684\u5bf9\u8c61\u4e4b\u95f4\u7684\u78b0\u649e\u7684\u67e5\u8be2\u3002 \u7b14\u8bb0 \u83b7\u53d6\u6bcf\u4e00\u5e27\u7684\u8be6\u7ec6\u6587\u4ef6\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u4eba\u4e0d\u77e5\u6240\u63aa\u3002\u5728\u5176\u4ed6\u67e5\u8be2\u4e4b\u540e\u4f7f\u7528\u5b83\u6765\u4e86\u89e3\u8981\u67e5\u770b\u7684\u4f4d\u7f6e\u3002","title":"\u67e5\u8be2\u4e8b\u4ef6"},{"location":"tuto_G_retrieve_data/#_27","text":"\u67e5\u8be2\u4e4b\u540e\uff0c\u5728\u4e71\u641e\u4e4b\u524d\u56de\u653e\u4e00\u4e9b\u4eff\u771f\u7247\u6bb5\u53ef\u80fd\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u8fd9\u6837\u505a\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u4e86\u89e3\u6709\u5173\u4eff\u771f\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8fd9\u662f\u4ee5\u540e\u8282\u7701\u65f6\u95f4\u7684\u6700\u4f73\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u5141\u8bb8\u9009\u62e9\u64ad\u653e\u7684\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u4ee5\u53ca\u8981\u8ddf\u968f\u7684\u53c2\u4e0e\u8005\u3002 # -------------- # Reenact a fragment of the recording # -------------- client.replay_file(\"~/tutorial/recorder/recording01.log\",45,10,0) \u4ee5\u4e0b\u662f\u73b0\u5728\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u7684\u5217\u8868\u3002 \u4f7f\u7528\u67e5\u8be2\u4e2d\u7684\u4fe1\u606f\u3002 \u627e\u51fa\u4e8b\u4ef6\u4e2d\u6d89\u53ca\u7684\u65f6\u523b\u548c\u53c2\u4e0e\u8005\uff0c\u7136\u540e\u518d\u6b21\u64ad\u653e\u3002\u5728\u4e8b\u4ef6\u53d1\u751f\u524d\u51e0\u79d2\u949f\u542f\u52a8\u8bb0\u5f55\u5668\u3002 \u8ddf\u968f\u4e0d\u540c\u7684\u53c2\u4e0e\u8005\u3002 \u4e0d\u540c\u7684\u89c6\u89d2\u5c06\u663e\u793a\u67e5\u8be2\u4e2d\u672a\u5305\u542b\u7684\u65b0\u4e8b\u4ef6\u3002 \u81ea\u7531\u5730\u89c2\u5bdf\u5468\u56f4\u7684\u60c5\u51b5\u3002 \u5c06 actor_id \u8bbe\u4e3a 0 \uff0c\u5e76\u83b7\u5f97\u4eff\u771f\u7684\u603b\u4f53\u89c6\u56fe\u3002\u501f\u52a9\u8bb0\u5f55\u5f55\u97f3\uff0c\u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u3002 \u7b14\u8bb0 \u5f53\u8bb0\u5f55\u505c\u6b62\u65f6\uff0c\u4eff\u771f\u4e0d\u4f1a\u505c\u6b62\u3002\u884c\u4eba\u5c06\u9759\u6b62\u4e0d\u52a8\uff0c\u8f66\u8f86\u5c06\u7ee7\u7eed\u884c\u9a76\u3002\u5982\u679c\u65e5\u5fd7\u7ed3\u675f\u6216\u64ad\u653e\u5230\u8fbe\u6307\u5b9a\u7684\u7ed3\u675f\u70b9\uff0c\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002","title":"\u9009\u62e9\u4e00\u4e2a\u7247\u6bb5"},{"location":"tuto_G_retrieve_data/#_28","text":"\u8bb0\u5f55\u5668\u5c06\u5728\u6b64\u4eff\u771f\u4e2d\u91cd\u65b0\u521b\u5efa\u4e0e\u539f\u59cb\u6761\u4ef6\u5b8c\u5168\u76f8\u540c\u7684\u6761\u4ef6\u3002\u8fd9\u786e\u4fdd\u4e86\u4e0d\u540c\u64ad\u653e\u4e2d\u7684\u6570\u636e\u4e00\u81f4\u3002 \u6536\u96c6\u91cd\u8981\u65f6\u523b\u3001\u53c2\u4e0e\u8005\u548c\u4e8b\u4ef6\u7684\u5217\u8868\u3002\u9700\u8981\u65f6\u6dfb\u52a0\u4f20\u611f\u5668\u5e76\u56de\u653e\u4eff\u771f\u3002\u8be5\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u5b8c\u5168\u76f8\u540c\u3002\u811a\u672c tutorial_replay.py \u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u793a\u4f8b\uff0c\u8fd9\u4e9b\u793a\u4f8b\u5df2\u5728 \u201c\u8bbe\u7f6e\u9ad8\u7ea7\u4f20\u611f\u5668\u201d \u90e8\u5206\u4e2d\u8fdb\u884c\u4e86\u5f7b\u5e95\u89e3\u91ca\u3002\u5176\u4ed6\u5df2\u5728 \u8bbe\u7f6e\u57fa\u672c\u4f20\u611f\u5668 \u90e8\u5206\u4e2d\u8fdb\u884c\u4e86\u89e3\u91ca\u3002 \u6839\u636e\u9700\u8981\u6dfb\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u4f20\u611f\u5668\u3002\u6839\u636e\u9700\u8981\u591a\u6b21\u56de\u653e\u4eff\u771f\u5e76\u68c0\u7d22\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u3002","title":"\u68c0\u7d22\u66f4\u591a\u6570\u636e"},{"location":"tuto_G_retrieve_data/#_29","text":"\u8bb0\u5f55\u5c06\u91cd\u73b0\u539f\u59cb\u7684\u5929\u6c14\u72b6\u51b5\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u968f\u610f\u6539\u53d8\u3002\u5728\u4fdd\u6301\u5176\u4f59\u4e8b\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u5b83\u5982\u4f55\u5f71\u54cd\u4f20\u611f\u5668\u53ef\u80fd\u4f1a\u5f88\u6709\u8da3\u3002 \u83b7\u53d6\u5f53\u524d\u5929\u6c14\u5e76\u81ea\u7531\u4fee\u6539\u3002\u8bf7\u8bb0\u4f4f\uff0c carla.WeatherParameters \u6709\u4e00\u4e9b\u53ef\u7528\u7684\u9884\u8bbe\u3002\u8be5\u811a\u672c\u4f1a\u5c06\u73af\u5883\u66f4\u6539\u4e3a\u6709\u96fe\u7684\u65e5\u843d\u3002 # -------------- # \u4e3a\u56de\u653e\u6539\u53d8\u5929\u6c14 # -------------- weather = world.get_weather() weather.sun_altitude_angle = -30 weather.fog_density = 65 weather.fog_distance = 10 world.set_weather(weather)","title":"\u6539\u53d8\u5929\u6c14"},{"location":"tuto_G_retrieve_data/#_30","text":"\u65b0\u7684\u4eff\u771f\u4e0e\u8bb0\u5f55\u6ca1\u6709\u4e25\u683c\u7684\u8054\u7cfb\u3002\u5b83\u53ef\u4ee5\u968f\u65f6\u4fee\u6539\uff0c\u5373\u4f7f\u8bb0\u5f55\u5668\u505c\u6b62\uff0c\u4eff\u771f\u4e5f\u4f1a\u7ee7\u7eed\u3002 \u8fd9\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u662f\u6709\u5229\u53ef\u56fe\u7684\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u56de\u653e\u51e0\u79d2\u949f\u524d\u7684\u4eff\u771f\u5e76\u751f\u6210\u6216\u6467\u6bc1\u53c2\u4e0e\u8005\u6765\u5f3a\u5236\u6216\u907f\u514d\u78b0\u649e\u3002\u5728\u7279\u5b9a\u65f6\u523b\u7ed3\u675f\u8bb0\u5f55\u4e5f\u5f88\u6709\u7528\u3002\u8fd9\u6837\u505a\uff0c\u8f66\u8f86\u53ef\u80fd\u4f1a\u91c7\u53d6\u4e0d\u540c\u7684\u8def\u5f84\u3002 \u6539\u53d8\u6761\u4ef6\u5e76\u6270\u4e71\u4eff\u771f\u3002\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\uff0c\u56e0\u4e3a\u8bb0\u5f55\u5668\u5141\u8bb8\u521d\u59cb\u4eff\u771f\u59cb\u7ec8\u53ef\u4ee5\u91cd\u65b0\u8fdb\u884c\u3002\u8fd9\u662f\u5145\u5206\u53d1\u6325 CARLA \u6f5c\u529b\u7684\u5173\u952e\u3002","title":"\u5c1d\u8bd5\u65b0\u7684\u7ed3\u679c"},{"location":"tuto_G_retrieve_data/#_31","text":"\u4e0b\u9762\u662f\u6536\u96c6\u672c\u6559\u7a0b\u4ee3\u7801\u7247\u6bb5\u7684\u4e24\u4e2a\u811a\u672c\u3002\u5927\u591a\u6570\u4ee3\u7801\u90fd\u5e26\u6709\u6ce8\u91ca\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u5b9a\u76ee\u7684\u3002 tutorial_ego.py import glob import os import sys import time try: sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % ( sys.version_info.major, sys.version_info.minor, 'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0]) except IndexError: pass import carla import argparse import logging import random def main(): argparser = argparse.ArgumentParser( description=__doc__) argparser.add_argument( '--host', metavar='H', default='127.0.0.1', help='IP of the host server (default: 127.0.0.1)') argparser.add_argument( '-p', '--port', metavar='P', default=2000, type=int, help='TCP port to listen to (default: 2000)') args = argparser.parse_args() logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO) client = carla.Client(args.host, args.port) client.set_timeout(10.0) try: world = client.get_world() ego_vehicle = None ego_cam = None ego_col = None ego_lane = None ego_obs = None ego_gnss = None ego_imu = None # -------------- # Start recording # -------------- \"\"\" client.start_recorder('~/tutorial/recorder/recording01.log') \"\"\" # -------------- # Spawn ego vehicle # -------------- \"\"\" ego_bp = world.get_blueprint_library().find('vehicle.tesla.model3') ego_bp.set_attribute('role_name','ego') print('\\nEgo role_name is set') ego_color = random.choice(ego_bp.get_attribute('color').recommended_values) ego_bp.set_attribute('color',ego_color) print('\\nEgo color is set') spawn_points = world.get_map().get_spawn_points() number_of_spawn_points = len(spawn_points) if 0 < number_of_spawn_points: random.shuffle(spawn_points) ego_transform = spawn_points[0] ego_vehicle = world.spawn_actor(ego_bp,ego_transform) print('\\nEgo is spawned') else: logging.warning('Could not found any spawn points') \"\"\" # -------------- # Add a RGB camera sensor to ego vehicle. # -------------- \"\"\" cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('~/tutorial/output/%.6d.jpg' % image.frame)) \"\"\" # -------------- # Add collision sensor to ego vehicle. # -------------- \"\"\" col_bp = world.get_blueprint_library().find('sensor.other.collision') col_location = carla.Location(0,0,0) col_rotation = carla.Rotation(0,0,0) col_transform = carla.Transform(col_location,col_rotation) ego_col = world.spawn_actor(col_bp,col_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def col_callback(colli): print(\"Collision detected:\\n\"+str(colli)+'\\n') ego_col.listen(lambda colli: col_callback(colli)) \"\"\" # -------------- # Add Lane invasion sensor to ego vehicle. # -------------- \"\"\" lane_bp = world.get_blueprint_library().find('sensor.other.lane_invasion') lane_location = carla.Location(0,0,0) lane_rotation = carla.Rotation(0,0,0) lane_transform = carla.Transform(lane_location,lane_rotation) ego_lane = world.spawn_actor(lane_bp,lane_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def lane_callback(lane): print(\"Lane invasion detected:\\n\"+str(lane)+'\\n') ego_lane.listen(lambda lane: lane_callback(lane)) \"\"\" # -------------- # Add Obstacle sensor to ego vehicle. # -------------- \"\"\" obs_bp = world.get_blueprint_library().find('sensor.other.obstacle') obs_bp.set_attribute(\"only_dynamics\",str(True)) obs_location = carla.Location(0,0,0) obs_rotation = carla.Rotation(0,0,0) obs_transform = carla.Transform(obs_location,obs_rotation) ego_obs = world.spawn_actor(obs_bp,obs_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def obs_callback(obs): print(\"Obstacle detected:\\n\"+str(obs)+'\\n') ego_obs.listen(lambda obs: obs_callback(obs)) \"\"\" # -------------- # Add GNSS sensor to ego vehicle. # -------------- \"\"\" gnss_bp = world.get_blueprint_library().find('sensor.other.gnss') gnss_location = carla.Location(0,0,0) gnss_rotation = carla.Rotation(0,0,0) gnss_transform = carla.Transform(gnss_location,gnss_rotation) gnss_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_gnss = world.spawn_actor(gnss_bp,gnss_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def gnss_callback(gnss): print(\"GNSS measure:\\n\"+str(gnss)+'\\n') ego_gnss.listen(lambda gnss: gnss_callback(gnss)) \"\"\" # -------------- # Add IMU sensor to ego vehicle. # -------------- \"\"\" imu_bp = world.get_blueprint_library().find('sensor.other.imu') imu_location = carla.Location(0,0,0) imu_rotation = carla.Rotation(0,0,0) imu_transform = carla.Transform(imu_location,imu_rotation) imu_bp.set_attribute(\"sensor_tick\",str(3.0)) ego_imu = world.spawn_actor(imu_bp,imu_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def imu_callback(imu): print(\"IMU measure:\\n\"+str(imu)+'\\n') ego_imu.listen(lambda imu: imu_callback(imu)) \"\"\" # -------------- # Place spectator on ego spawning # -------------- \"\"\" spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform()) \"\"\" # -------------- # Enable autopilot for ego vehicle # -------------- \"\"\" ego_vehicle.set_autopilot(True) \"\"\" # -------------- # Game loop. Prevents the script from finishing. # -------------- while True: world_snapshot = world.wait_for_tick() finally: # -------------- # Stop recording and destroy actors # -------------- client.stop_recorder() if ego_vehicle is not None: if ego_cam is not None: ego_cam.stop() ego_cam.destroy() if ego_col is not None: ego_col.stop() ego_col.destroy() if ego_lane is not None: ego_lane.stop() ego_lane.destroy() if ego_obs is not None: ego_obs.stop() ego_obs.destroy() if ego_gnss is not None: ego_gnss.stop() ego_gnss.destroy() if ego_imu is not None: ego_imu.stop() ego_imu.destroy() ego_vehicle.destroy() if __name__ == '__main__': try: main() except KeyboardInterrupt: pass finally: print('\\nDone with tutorial_ego.') tutorial_replay.py import glob import os import sys import time import math import weakref try: sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % ( sys.version_info.major, sys.version_info.minor, 'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0]) except IndexError: pass import carla import argparse import logging import random def main(): client = carla.Client('127.0.0.1', 2000) client.set_timeout(10.0) try: world = client.get_world() ego_vehicle = None ego_cam = None depth_cam = None depth_cam02 = None sem_cam = None rad_ego = None lidar_sen = None # -------------- # Query the recording # -------------- \"\"\" # Show the most important events in the recording. print(client.show_recorder_file_info(\"~/tutorial/recorder/recording05.log\",False)) # Show actors not moving 1 meter in 10 seconds. #print(client.show_recorder_actors_blocked(\"~/tutorial/recorder/recording04.log\",10,1)) # Show collisions between any type of actor. #print(client.show_recorder_collisions(\"~/tutorial/recorder/recording04.log\",'v','a')) \"\"\" # -------------- # Reenact a fragment of the recording # -------------- \"\"\" client.replay_file(\"~/tutorial/recorder/recording03.log\",0,30,0) \"\"\" # -------------- # Set playback simulation conditions # -------------- \"\"\" ego_vehicle = world.get_actor(322) #Store the ID from the simulation or query the recording to find out \"\"\" # -------------- # Place spectator on ego spawning # -------------- \"\"\" spectator = world.get_spectator() world_snapshot = world.wait_for_tick() spectator.set_transform(ego_vehicle.get_transform()) \"\"\" # -------------- # Change weather conditions # -------------- \"\"\" weather = world.get_weather() weather.sun_altitude_angle = -30 weather.fog_density = 65 weather.fog_distance = 10 world.set_weather(weather) \"\"\" # -------------- # Add a RGB camera to ego vehicle. # -------------- \"\"\" cam_bp = None cam_bp = world.get_blueprint_library().find('sensor.camera.rgb') cam_location = carla.Location(2,0,1) cam_rotation = carla.Rotation(0,180,0) cam_transform = carla.Transform(cam_location,cam_rotation) cam_bp.set_attribute(\"image_size_x\",str(1920)) cam_bp.set_attribute(\"image_size_y\",str(1080)) cam_bp.set_attribute(\"fov\",str(105)) ego_cam = world.spawn_actor(cam_bp,cam_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) ego_cam.listen(lambda image: image.save_to_disk('~/tutorial/new_rgb_output/%.6d.jpg' % image.frame)) \"\"\" # -------------- # Add a Logarithmic Depth camera to ego vehicle. # -------------- \"\"\" depth_cam = None depth_bp = world.get_blueprint_library().find('sensor.camera.depth') depth_bp.set_attribute(\"image_size_x\",str(1920)) depth_bp.set_attribute(\"image_size_y\",str(1080)) depth_bp.set_attribute(\"fov\",str(105)) depth_location = carla.Location(2,0,1) depth_rotation = carla.Rotation(0,180,0) depth_transform = carla.Transform(depth_location,depth_rotation) depth_cam = world.spawn_actor(depth_bp,depth_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam.listen(lambda image: image.save_to_disk('~/tutorial/de_log/%.6d.jpg' % image.frame,carla.ColorConverter.LogarithmicDepth)) \"\"\" # -------------- # Add a Depth camera to ego vehicle. # -------------- \"\"\" depth_cam02 = None depth_bp02 = world.get_blueprint_library().find('sensor.camera.depth') depth_bp02.set_attribute(\"image_size_x\",str(1920)) depth_bp02.set_attribute(\"image_size_y\",str(1080)) depth_bp02.set_attribute(\"fov\",str(105)) depth_location02 = carla.Location(2,0,1) depth_rotation02 = carla.Rotation(0,180,0) depth_transform02 = carla.Transform(depth_location02,depth_rotation02) depth_cam02 = world.spawn_actor(depth_bp02,depth_transform02,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view depth_cam02.listen(lambda image: image.save_to_disk('~/tutorial/de/%.6d.jpg' % image.frame,carla.ColorConverter.Depth)) \"\"\" # -------------- # Add a new semantic segmentation camera to ego vehicle # -------------- \"\"\" sem_cam = None sem_bp = world.get_blueprint_library().find('sensor.camera.semantic_segmentation') sem_bp.set_attribute(\"image_size_x\",str(1920)) sem_bp.set_attribute(\"image_size_y\",str(1080)) sem_bp.set_attribute(\"fov\",str(105)) sem_location = carla.Location(2,0,1) sem_rotation = carla.Rotation(0,180,0) sem_transform = carla.Transform(sem_location,sem_rotation) sem_cam = world.spawn_actor(sem_bp,sem_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) # This time, a color converter is applied to the image, to get the semantic segmentation view sem_cam.listen(lambda image: image.save_to_disk('~/tutorial/new_sem_output/%.6d.jpg' % image.frame,carla.ColorConverter.CityScapesPalette)) \"\"\" # -------------- # Add a new radar sensor to ego vehicle # -------------- \"\"\" rad_cam = None rad_bp = world.get_blueprint_library().find('sensor.other.radar') rad_bp.set_attribute('horizontal_fov', str(35)) rad_bp.set_attribute('vertical_fov', str(20)) rad_bp.set_attribute('range', str(20)) rad_location = carla.Location(x=2.8, z=1.0) rad_rotation = carla.Rotation(pitch=5) rad_transform = carla.Transform(rad_location,rad_rotation) rad_ego = world.spawn_actor(rad_bp,rad_transform,attach_to=ego_vehicle, attachment_type=carla.AttachmentType.Rigid) def rad_callback(radar_data): velocity_range = 7.5 # m/s current_rot = radar_data.transform.rotation for detect in radar_data: azi = math.degrees(detect.azimuth) alt = math.degrees(detect.altitude) # The 0.25 adjusts a bit the distance so the dots can # be properly seen fw_vec = carla.Vector3D(x=detect.depth - 0.25) carla.Transform( carla.Location(), carla.Rotation( pitch=current_rot.pitch + alt, yaw=current_rot.yaw + azi, roll=current_rot.roll)).transform(fw_vec) def clamp(min_v, max_v, value): return max(min_v, min(value, max_v)) norm_velocity = detect.velocity / velocity_range # range [-1, 1] r = int(clamp(0.0, 1.0, 1.0 - norm_velocity) * 255.0) g = int(clamp(0.0, 1.0, 1.0 - abs(norm_velocity)) * 255.0) b = int(abs(clamp(- 1.0, 0.0, - 1.0 - norm_velocity)) * 255.0) world.debug.draw_point( radar_data.transform.location + fw_vec, size=0.075, life_time=0.06, persistent_lines=False, color=carla.Color(r, g, b)) rad_ego.listen(lambda radar_data: rad_callback(radar_data)) \"\"\" # -------------- # Add a new LIDAR sensor to ego vehicle # -------------- \"\"\" lidar_cam = None lidar_bp = world.get_blueprint_library().find('sensor.lidar.ray_cast') lidar_bp.set_attribute('channels',str(32)) lidar_bp.set_attribute('points_per_second',str(90000)) lidar_bp.set_attribute('rotation_frequency',str(40)) lidar_bp.set_attribute('range',str(20)) lidar_location = carla.Location(0,0,2) lidar_rotation = carla.Rotation(0,0,0) lidar_transform = carla.Transform(lidar_location,lidar_rotation) lidar_sen = world.spawn_actor(lidar_bp,lidar_transform,attach_to=ego_vehicle,attachment_type=carla.AttachmentType.Rigid) lidar_sen.listen(lambda point_cloud: point_cloud.save_to_disk('/home/adas/Desktop/tutorial/new_lidar_output/%.6d.ply' % point_cloud.frame)) \"\"\" # -------------- # Game loop. Prevents the script from finishing. # -------------- while True: world_snapshot = world.wait_for_tick() finally: # -------------- # Destroy actors # -------------- if ego_vehicle is not None: if ego_cam is not None: ego_cam.stop() ego_cam.destroy() if depth_cam is not None: depth_cam.stop() depth_cam.destroy() if sem_cam is not None: sem_cam.stop() sem_cam.destroy() if rad_ego is not None: rad_ego.stop() rad_ego.destroy() if lidar_sen is not None: lidar_sen.stop() lidar_sen.destroy() ego_vehicle.destroy() print('\\nNothing to be done.') if __name__ == '__main__': try: main() except KeyboardInterrupt: pass finally: print('\\nDone with tutorial_replay.') \u8fd9\u662f\u5173\u4e8e\u5982\u4f55\u4ece\u4eff\u771f\u4e2d\u6b63\u786e\u68c0\u7d22\u6570\u636e\u7684\u603b\u7ed3\u3002\u786e\u4fdd\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6539\u53d8\u4eff\u771f\u5668\u7684\u6761\u4ef6\uff0c\u5c1d\u8bd5\u4f20\u611f\u5668\u8bbe\u7f6e\u3002\u53ef\u80fd\u6027\u662f\u65e0\u6b62\u5883\u3002 \u8bf7\u8bbf\u95ee\u8bba\u575b\uff0c\u53d1\u8868\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u60f3\u5230\u7684\u4efb\u4f55\u7591\u95ee\u6216\u5efa\u8bae\u3002 CARLA \u8bba\u575b","title":"\u6559\u7a0b\u811a\u672c"},{"location":"tuto_G_rllib_integration/","text":"RLlib \u96c6\u6210 RLlib \u96c6\u6210\u5e26\u6765\u4e86 Ray/RLlib \u5e93\u548c CARLA \u4e4b\u95f4\u7684\u652f\u6301\uff0c\u5141\u8bb8\u8f7b\u677e\u4f7f\u7528 CARLA \u73af\u5883\u8fdb\u884c\u8bad\u7ec3\u548c\u63a8\u7406\u3002Ray \u662f\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\uff0c\u4e3a\u6784\u5efa\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u7b80\u5355\u3001\u901a\u7528\u7684 API\u3002Ray \u4e0e RLlib\uff08\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u5f3a\u5316\u5b66\u4e60\u5e93\uff09\u548c Tune\uff08\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u8d85\u53c2\u6570\u8c03\u6574\u5e93\uff09\u6253\u5305\u5728\u4e00\u8d77\u3002 RLlib \u96c6\u6210\u5141\u8bb8\u7528\u6237\u521b\u5efa\u548c\u4f7f\u7528 CARLA \u4f5c\u4e3a Ray \u7684\u73af\u5883\uff0c\u5e76\u5c06\u8be5\u73af\u5883\u7528\u4e8e\u8bad\u7ec3\u548c\u63a8\u7406\u76ee\u7684\u3002\u8be5\u96c6\u6210\u53ef\u4ee5\u5728\u672c\u5730\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 AWS \u5728\u4e91\u4e2d\u4f7f\u7528\u3002 \u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u5c06\u6982\u8ff0\u5728\u672c\u5730\u548c AWS \u4e0a\u8fd0\u884c RLlib \u96c6\u6210\u6240\u9700\u7684\u8981\u6c42\u3001\u96c6\u6210\u5b58\u50a8\u5e93\u7684\u7ed3\u6784\u3001\u5982\u4f55\u4f7f\u7528\u8be5\u5e93\u7684\u6982\u8ff0\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 CARLA \u8bbe\u7f6e Ray \u5b9e\u9a8c\u7684\u793a\u4f8b\u4e00\u4e2a\u73af\u5883\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u672c\u5730\u8fd0\u884c\u7684\u8981\u6c42 \u5728 AWS \u4e91\u4e0a\u8fd0\u884c\u7684\u8981\u6c42 RLlib \u4ed3\u5e93\u7ed3\u6784 \u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c \u5b9e\u9a8c\u7c7b \u73af\u5883\u914d\u7f6e \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c DQN \u793a\u4f8b \u5728 AWS \u4e0a\u8fd0\u884c \u914d\u7f6e AWS \u521b\u5efa\u8bad\u7ec3 AMI \u914d\u7f6e\u96c6\u7fa4 \u8fd0\u884c\u8bad\u7ec3 \u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u4ece GitHub \u4e0b\u8f7d RLlib \u96c6\u6210\u6216\u76f4\u63a5\u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/carla-simulator/rllib-integration.git \u8981\u6c42\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u662f\u5728\u672c\u5730\u8fd0\u884c\u8fd8\u662f\u5728 AWS \u4e0a\u8fd0\u884c\uff1a \u672c\u5730\u8fd0\u884c\u7684\u8981\u6c42 \u5b89\u88c5 CARLA \u7684\u8f6f\u4ef6\u5305\u7248\u672c \u5e76\u5bfc\u5165 \u9644\u52a0\u8d44\u6e90 \u3002 \u63a8\u8350\u7684\u7248\u672c\u662f CARLA 0.9.11 \uff0c\u56e0\u4e3a\u96c6\u6210\u662f\u4f7f\u7528\u6b64\u7248\u672c\u8bbe\u8ba1\u548c\u6d4b\u8bd5\u7684\u3002\u5176\u4ed6\u7248\u672c\u53ef\u80fd\u517c\u5bb9\uff0c\u4f46\u5c1a\u672a\u7ecf\u8fc7\u5145\u5206\u6d4b\u8bd5\uff0c\u56e0\u6b64\u8bf7\u81ea\u884c\u51b3\u5b9a\u4f7f\u7528\u8fd9\u4e9b\u7248\u672c\u3002 \u5bfc\u822a\u5230 RLlib \u96c6\u6210\u5b58\u50a8\u5e93\u7684\u6839\u6587\u4ef6\u5939\u5e76\u5b89\u88c5 Python \u8981\u6c42\uff1a pip3 install -r requirements.txt \u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u67e5\u627e CARLA \u5305\u6216\u6dfb\u52a0 CARLA_ROOT=path/to/carla \u5230\u60a8\u7684 .bashrc \u6587\u4ef6\u4e2d\uff1a export CARLA_ROOT=path/to/carla \u5728 AWS \u4e91\u4e0a\u8fd0\u884c\u7684\u8981\u6c42 \u5728 RLlib \u96c6\u6210\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u7684\u5b89\u88c5\u811a\u672c\u4e2d\u4f1a\u81ea\u52a8\u6ee1\u8db3\u5728 AWS \u4e0a\u8fd0\u884c\u7684\u8981\u6c42\u3002 \u5728\u201c\u5728 AWS \u4e0a\u8fd0\u884c\u201d \u90e8\u5206\u4e2d\u67e5\u627e\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 RLlib \u5b58\u50a8\u5e93\u7ed3\u6784 \u5b58\u50a8\u5e93\u5206\u4e3a\u4e09\u4e2a\u76ee\u5f55\uff1a rllib_integration \u5305\u542b\u4e0e CARLA \u76f8\u5173\u7684\u6240\u6709\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e CARLA \u670d\u52a1\u5668\u3001\u5ba2\u6237\u7aef\u548c\u53c2\u4e0e\u8005\u3002\u8fd9\u63d0\u4f9b\u4e86\u6240\u6709\u8bad\u7ec3\u548c\u6d4b\u8bd5\u5b9e\u9a8c\u5fc5\u987b\u9075\u5faa\u7684\u57fa\u672c\u7ed3\u6784\u3002 aws \u5177\u6709\u5728 AWS \u5b9e\u4f8b\u4e2d\u8fd0\u884c\u6240\u9700\u7684\u6587\u4ef6\u3002 aws_helper.py \u63d0\u4f9b\u4e86\u591a\u79cd\u53ef\u7b80\u5316 EC2 \u5b9e\u4f8b\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u5305\u62ec\u5b9e\u4f8b\u521b\u5efa\u4ee5\u53ca\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002 \u6839\u76ee\u5f55\u4e2d\u7684 dqn_example \u548c dqn_* \u6587\u4ef6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 CARLA \u4f5c\u4e3a\u73af\u5883\u6765\u8bbe\u7f6e Ray \u5b9e\u9a8c\u3002 \u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c \u672c\u8282\u6982\u8ff0\u4e86\u5982\u4f55\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u3002\u66f4\u5177\u4f53\u7684\u793a\u4f8b\u8bf7\u53c2\u89c1\u4e0b\u4e00\u8282 \u201cDQN \u793a\u4f8b\u201d \u3002 \u60a8\u5c06\u9700\u8981\u521b\u5efa\u81f3\u5c11\u56db\u4e2a\u6587\u4ef6\uff1a \u5b9e\u9a8c\u7c7b \u73af\u5883\u914d\u7f6e \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c 1. \u5b9e\u9a8c\u7c7b \u8981\u4f7f\u7528 CARLA \u73af\u5883\uff0c\u60a8\u9700\u8981\u5b9a\u4e49\u8bad\u7ec3\u5b9e\u9a8c\u3002Ray \u8981\u6c42\u73af\u5883\u8fd4\u56de\u4e00\u7cfb\u5217\u7279\u5b9a\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728 rllib-integration/rllib_integration/carla_env.py \u4e2d\u67e5\u770b\u6709\u5173 CARLA \u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 Ray \u6240\u9700\u7684\u4fe1\u606f\u53d6\u51b3\u4e8e\u60a8\u7684\u5177\u4f53\u5b9e\u9a8c\uff0c\u56e0\u6b64\u6240\u6709\u5b9e\u9a8c\u90fd\u5e94\u7ee7\u627f\u81ea BaseExperiment \u3002\u6b64\u7c7b\u5305\u542b\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u9700\u8981\u8986\u76d6\u7684\u6240\u6709\u51fd\u6570\u3002\u8fd9\u4e9b\u90fd\u662f\u4e0e\u8bad\u7ec3\u7684\u884c\u52a8\u3001\u89c2\u5bdf\u548c\u5956\u52b1\u76f8\u5173\u7684\u529f\u80fd\u3002 2. \u73af\u5883\u914d\u7f6e \u5b9e\u9a8c\u5e94\u8be5\u901a\u8fc7 .yaml \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u4f20\u9012\u7684\u4efb\u4f55\u8bbe\u7f6e\u90fd\u5c06\u8986\u76d6\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4e0b\u9762\u89e3\u91ca\u4e86\u4e0d\u540c\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u4f4d\u7f6e\u3002 \u914d\u7f6e\u6587\u4ef6\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \u8bbe\u7f6e\u5927\u90e8\u5206 CARLA \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u8bbe\u7f6e\uff0c\u4f8b\u5982\u8d85\u65f6\u6216\u5730\u56fe\u8d28\u91cf\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u9ed8\u8ba4\u503c\u3002 \u8bbe\u7f6e\u7279\u5b9a\u4e8e\u60a8\u7684\u5b9e\u9a8c\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u6307\u5b9a\u57ce\u9547\u6761\u4ef6\u4ee5\u53ca\u81ea\u6211\u8f66\u8f86\u53ca\u5176\u4f20\u611f\u5668\u7684\u751f\u6210\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u53ef\u5728 \u6b64\u5904 \u627e\u5230\uff0c\u5e76\u63d0\u4f9b\u5982\u4f55\u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u793a\u4f8b\u3002 \u914d\u7f6e\u7279\u5b9a\u4e8e Ray \u7684\u8bad\u7ec3 \u8bbe\u7f6e\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u4e0e\u6240\u4f7f\u7528\u7684\u7279\u5b9a\u8bad\u7ec3\u5668\u76f8\u5173\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5185\u7f6e\u6a21\u578b\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u5904\u5e94\u7528\u5176\u8bbe\u7f6e\u3002 3. \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c \u6700\u540e\u4e00\u6b65\u662f\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c\u3002\u8fd9\u90e8\u5206\u5b8c\u5168\u7531\u60a8\u51b3\u5b9a\uff0c\u5e76\u4e14\u4f9d\u8d56\u4e8e Ray API\u3002\u5982\u679c\u60a8\u60f3\u521b\u5efa\u81ea\u5df1\u7684\u7279\u5b9a\u6a21\u578b\uff0c\u8bf7\u67e5\u770b Ray \u7684\u81ea\u5b9a\u4e49\u6a21\u578b\u6587\u6863 \u3002 DQN \u793a\u4f8b \u672c\u8282\u4ee5\u4e0a\u4e00\u8282\u4e3a\u57fa\u7840\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 BirdView pseudosensor \u4f2a\u4f20\u611f\u5668\u548c Ray \u7684 DQNTrainer \u8fdb\u884c RLlib \u96c6\u6210\u7684\u5177\u4f53\u793a\u4f8b\u3002 DQN\u793a\u4f8b\u7684\u7ed3\u6784\u5982\u4e0b\uff1a \u5b9e\u9a8c\u7c7b : DQNExperiment \uff0c\u8986\u76d6 BaseExperiment \u7c7b\u7684\u65b9\u6cd5\u3002 \u914d\u7f6e\u6587\u4ef6 : dqn_example/dqn_config.yaml \u8bad\u7ec3\u6587\u4ef6 : dqn_train.py \u63a8\u7406\u6587\u4ef6 : \u6709 Ray : dqn_inference_ray.py \u6ca1\u6709 Ray : dqn_inference.py \u8981\u5728\u672c\u5730\u8fd0\u884c\u8be5\u793a\u4f8b\uff1a \u5b89\u88c5 pytorch: pip3 install -r dqn_example/dqn_requirements.txt \u8fd0\u884c\u8bad\u7ec3\u6587\u4ef6\uff1a python3 dqn_train.py dqn_example/dqn_config.yaml --name dqn \u7b14\u8bb0 \u9ed8\u8ba4\u914d\u7f6e\u4f7f\u7528 1 \u4e2a GPU \u548c 12 \u4e2a CPU\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u7684\u672c\u5730\u8ba1\u7b97\u673a\u6ca1\u6709\u8be5\u5bb9\u91cf\uff0c\u8bf7\u51cf\u5c0f \u914d\u7f6e\u6587\u4ef6 \u4e2d\u7684\u6570\u5b57\u3002 \u5982\u679c\u9047\u5230\u5185\u5b58\u4e0d\u8db3\u95ee\u9898\uff0c\u8bf7\u8003\u8651\u51cf\u5c11\u8be5 buffer_size \u53c2\u6570\u3002 \u5728 AWS \u4e0a\u8fd0\u884c \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 RLlib \u96c6\u6210\u5728 AWS EC2 \u5b9e\u4f8b\u4e0a\u81ea\u52a8\u8fd0\u884c\u8bad\u7ec3\u548c\u63a8\u7406\u3002\u4e3a\u4e86\u5904\u7406\u5b9e\u4f8b\u7684\u7f29\u653e\uff0c\u6211\u4eec\u4f7f\u7528 Ray autoscaler API \u3002 \u914d\u7f6e AWS \u60a8\u9700\u8981\u6b63\u786e\u914d\u7f6e boto3 \u73af\u5883\u3002\u8bf7\u70b9\u51fb \u6b64\u5904 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u521b\u5efa\u8bad\u7ec3 AMI \u4f7f\u7528\u63d0\u4f9b\u7684 aws_helper.py \u811a\u672c\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u81ea\u52a8\u521b\u5efa\u8bad\u7ec3\u6240\u9700\u7684\u6620\u50cf\uff0c\u5e76\u4f20\u5165\u57fa\u7840\u6620\u50cf\u7684\u540d\u79f0\u548c install.sh \u5728\u4ee5\u4e0b\u4f4d\u7f6e rllib-integration/aws/install \u627e\u5230\u7684\u5b89\u88c5\u811a\u672c\uff1a python3 aws_helper.py create-image --name <AMI-name> --installation-scripts <installation-scripts> --instance-type <instance-type> --volume-size <volume-size> \u914d\u7f6e\u96c6\u7fa4 \u521b\u5efa\u56fe\u50cf\u540e\uff0c\u5c06\u4f1a\u8f93\u51fa\u5e26\u6709\u56fe\u50cf\u4fe1\u606f\u7684\u8f93\u51fa\u3002\u8981\u4f7f\u7528 Ray \u81ea\u52a8\u7f29\u653e\u5668\uff0c\u8bf7\u4f7f\u7528\u8f93\u51fa\u4e2d\u7684\u4fe1\u606f\u66f4\u65b0 autoscaler configuration file \u4e2d\u7684 <ImageId> \u548c <SecurityGroupIds> \u8bbe\u7f6e\u3002 \u8fd0\u884c\u8bad\u7ec3 \u521b\u5efa\u955c\u50cf\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Ray \u7684 API \u5728\u96c6\u7fa4\u4e0a\u8fd0\u884c\u8bad\u7ec3\uff1a \u521d\u59cb\u5316\u96c6\u7fa4\uff1a ray up <autoscaler_configuration_file> \uff08\u53ef\u9009\uff09\u5982\u679c\u96c6\u7fa4\u521d\u59cb\u5316\u540e\u672c\u5730\u4ee3\u7801\u88ab\u4fee\u6539\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\uff1a ray rsync-up <autoscaler_configuration_file> <path_to_local_folder> <path_to_remote_folder> \u8fd0\u884c\u8bad\u7ec3\uff1a ray submit <autoscaler_configuration_file> <training_file> \uff08\u53ef\u9009\uff09\u76d1\u63a7\u96c6\u7fa4\u72b6\u6001\uff1a ray attach <autoscaler_configuration_file> watch -n 1 ray status \u5173\u95ed\u96c6\u7fa4\uff1a ray down <autoscaler_configuration_file> \u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b \u8981\u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b\uff1a \u901a\u8fc7\u5c06 dqn_example/dqn_autoscaler.yaml \u914d\u7f6e\u4f20\u9012\u7ed9\u4ee5\u4e0b\u547d\u4ee4\u6765\u521b\u5efa\u6620\u50cf\uff1a python3 aws_helper.py create-image --name <AMI-name> --installation-scripts install/install.sh --instance-type <instance-type> --volume-size <volume-size> \u4f7f\u7528\u4e0a\u4e00\u4e2a\u547d\u4ee4 dqn_autoscaler.yaml \u63d0\u4f9b\u7684\u4fe1\u606f\u66f4\u65b0 <ImageId> \u548c <SecurityGroupIds> \u8bbe\u7f6e\u3002 \u521d\u59cb\u5316\u96c6\u7fa4\uff1a ray up dqn_example/dqn_autoscaler.yaml \uff08\u53ef\u9009\uff09\u4f7f\u7528\u672c\u5730\u66f4\u6539\u66f4\u65b0\u8fdc\u7a0b\u6587\u4ef6\uff1a ray rsync-up dqn_example/dqn_autoscaler.yaml dqn_example . ray rsync-up dqn_example/dqn_autoscaler.yaml rllib_integration . \u8fd0\u884c\u8bad\u7ec3\uff1a ray submit dqn_example/dqn_autoscaler.yaml dqn_train.py -- dqn_example/dqn_config.yaml --auto 6.\uff08\u53ef\u9009\uff09\u76d1\u63a7\u96c6\u7fa4\u72b6\u6001\uff1a ray attach dqn_example/dqn_autoscaler.yaml watch -n 1 ray status \u5173\u95ed\u96c6\u7fa4\uff1a ray down dqn_example/dqn_autoscaler.yaml \u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u5728 AWS \u548c\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u548c\u8fd0\u884c RLlib \u96c6\u6210\u3002\u5982\u679c\u60a8\u5bf9\u672c\u6307\u5357\u6709\u4efb\u4f55\u7591\u95ee\u6216\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u4e2d\u53d1\u5e16\u6216\u5728 GitHub \u4e0a\u63d0\u51fa\u95ee\u9898\u3002","title":"RLlib \u96c6\u6210"},{"location":"tuto_G_rllib_integration/#rllib","text":"RLlib \u96c6\u6210\u5e26\u6765\u4e86 Ray/RLlib \u5e93\u548c CARLA \u4e4b\u95f4\u7684\u652f\u6301\uff0c\u5141\u8bb8\u8f7b\u677e\u4f7f\u7528 CARLA \u73af\u5883\u8fdb\u884c\u8bad\u7ec3\u548c\u63a8\u7406\u3002Ray \u662f\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\uff0c\u4e3a\u6784\u5efa\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u7b80\u5355\u3001\u901a\u7528\u7684 API\u3002Ray \u4e0e RLlib\uff08\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u5f3a\u5316\u5b66\u4e60\u5e93\uff09\u548c Tune\uff08\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u8d85\u53c2\u6570\u8c03\u6574\u5e93\uff09\u6253\u5305\u5728\u4e00\u8d77\u3002 RLlib \u96c6\u6210\u5141\u8bb8\u7528\u6237\u521b\u5efa\u548c\u4f7f\u7528 CARLA \u4f5c\u4e3a Ray \u7684\u73af\u5883\uff0c\u5e76\u5c06\u8be5\u73af\u5883\u7528\u4e8e\u8bad\u7ec3\u548c\u63a8\u7406\u76ee\u7684\u3002\u8be5\u96c6\u6210\u53ef\u4ee5\u5728\u672c\u5730\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 AWS \u5728\u4e91\u4e2d\u4f7f\u7528\u3002 \u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u5c06\u6982\u8ff0\u5728\u672c\u5730\u548c AWS \u4e0a\u8fd0\u884c RLlib \u96c6\u6210\u6240\u9700\u7684\u8981\u6c42\u3001\u96c6\u6210\u5b58\u50a8\u5e93\u7684\u7ed3\u6784\u3001\u5982\u4f55\u4f7f\u7528\u8be5\u5e93\u7684\u6982\u8ff0\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 CARLA \u8bbe\u7f6e Ray \u5b9e\u9a8c\u7684\u793a\u4f8b\u4e00\u4e2a\u73af\u5883\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u672c\u5730\u8fd0\u884c\u7684\u8981\u6c42 \u5728 AWS \u4e91\u4e0a\u8fd0\u884c\u7684\u8981\u6c42 RLlib \u4ed3\u5e93\u7ed3\u6784 \u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c \u5b9e\u9a8c\u7c7b \u73af\u5883\u914d\u7f6e \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c DQN \u793a\u4f8b \u5728 AWS \u4e0a\u8fd0\u884c \u914d\u7f6e AWS \u521b\u5efa\u8bad\u7ec3 AMI \u914d\u7f6e\u96c6\u7fa4 \u8fd0\u884c\u8bad\u7ec3 \u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b","title":"RLlib \u96c6\u6210"},{"location":"tuto_G_rllib_integration/#_1","text":"\u4ece GitHub \u4e0b\u8f7d RLlib \u96c6\u6210\u6216\u76f4\u63a5\u514b\u9686\u4ed3\u5e93\uff1a git clone https://github.com/carla-simulator/rllib-integration.git \u8981\u6c42\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u662f\u5728\u672c\u5730\u8fd0\u884c\u8fd8\u662f\u5728 AWS \u4e0a\u8fd0\u884c\uff1a","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_G_rllib_integration/#_2","text":"\u5b89\u88c5 CARLA \u7684\u8f6f\u4ef6\u5305\u7248\u672c \u5e76\u5bfc\u5165 \u9644\u52a0\u8d44\u6e90 \u3002 \u63a8\u8350\u7684\u7248\u672c\u662f CARLA 0.9.11 \uff0c\u56e0\u4e3a\u96c6\u6210\u662f\u4f7f\u7528\u6b64\u7248\u672c\u8bbe\u8ba1\u548c\u6d4b\u8bd5\u7684\u3002\u5176\u4ed6\u7248\u672c\u53ef\u80fd\u517c\u5bb9\uff0c\u4f46\u5c1a\u672a\u7ecf\u8fc7\u5145\u5206\u6d4b\u8bd5\uff0c\u56e0\u6b64\u8bf7\u81ea\u884c\u51b3\u5b9a\u4f7f\u7528\u8fd9\u4e9b\u7248\u672c\u3002 \u5bfc\u822a\u5230 RLlib \u96c6\u6210\u5b58\u50a8\u5e93\u7684\u6839\u6587\u4ef6\u5939\u5e76\u5b89\u88c5 Python \u8981\u6c42\uff1a pip3 install -r requirements.txt \u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u67e5\u627e CARLA \u5305\u6216\u6dfb\u52a0 CARLA_ROOT=path/to/carla \u5230\u60a8\u7684 .bashrc \u6587\u4ef6\u4e2d\uff1a export CARLA_ROOT=path/to/carla","title":"\u672c\u5730\u8fd0\u884c\u7684\u8981\u6c42"},{"location":"tuto_G_rllib_integration/#aws","text":"\u5728 RLlib \u96c6\u6210\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u7684\u5b89\u88c5\u811a\u672c\u4e2d\u4f1a\u81ea\u52a8\u6ee1\u8db3\u5728 AWS \u4e0a\u8fd0\u884c\u7684\u8981\u6c42\u3002 \u5728\u201c\u5728 AWS \u4e0a\u8fd0\u884c\u201d \u90e8\u5206\u4e2d\u67e5\u627e\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u5728 AWS \u4e91\u4e0a\u8fd0\u884c\u7684\u8981\u6c42"},{"location":"tuto_G_rllib_integration/#rllib_1","text":"\u5b58\u50a8\u5e93\u5206\u4e3a\u4e09\u4e2a\u76ee\u5f55\uff1a rllib_integration \u5305\u542b\u4e0e CARLA \u76f8\u5173\u7684\u6240\u6709\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e CARLA \u670d\u52a1\u5668\u3001\u5ba2\u6237\u7aef\u548c\u53c2\u4e0e\u8005\u3002\u8fd9\u63d0\u4f9b\u4e86\u6240\u6709\u8bad\u7ec3\u548c\u6d4b\u8bd5\u5b9e\u9a8c\u5fc5\u987b\u9075\u5faa\u7684\u57fa\u672c\u7ed3\u6784\u3002 aws \u5177\u6709\u5728 AWS \u5b9e\u4f8b\u4e2d\u8fd0\u884c\u6240\u9700\u7684\u6587\u4ef6\u3002 aws_helper.py \u63d0\u4f9b\u4e86\u591a\u79cd\u53ef\u7b80\u5316 EC2 \u5b9e\u4f8b\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u5305\u62ec\u5b9e\u4f8b\u521b\u5efa\u4ee5\u53ca\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002 \u6839\u76ee\u5f55\u4e2d\u7684 dqn_example \u548c dqn_* \u6587\u4ef6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 CARLA \u4f5c\u4e3a\u73af\u5883\u6765\u8bbe\u7f6e Ray \u5b9e\u9a8c\u3002","title":"RLlib \u5b58\u50a8\u5e93\u7ed3\u6784"},{"location":"tuto_G_rllib_integration/#_3","text":"\u672c\u8282\u6982\u8ff0\u4e86\u5982\u4f55\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u3002\u66f4\u5177\u4f53\u7684\u793a\u4f8b\u8bf7\u53c2\u89c1\u4e0b\u4e00\u8282 \u201cDQN \u793a\u4f8b\u201d \u3002 \u60a8\u5c06\u9700\u8981\u521b\u5efa\u81f3\u5c11\u56db\u4e2a\u6587\u4ef6\uff1a \u5b9e\u9a8c\u7c7b \u73af\u5883\u914d\u7f6e \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c","title":"\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c"},{"location":"tuto_G_rllib_integration/#1","text":"\u8981\u4f7f\u7528 CARLA \u73af\u5883\uff0c\u60a8\u9700\u8981\u5b9a\u4e49\u8bad\u7ec3\u5b9e\u9a8c\u3002Ray \u8981\u6c42\u73af\u5883\u8fd4\u56de\u4e00\u7cfb\u5217\u7279\u5b9a\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728 rllib-integration/rllib_integration/carla_env.py \u4e2d\u67e5\u770b\u6709\u5173 CARLA \u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 Ray \u6240\u9700\u7684\u4fe1\u606f\u53d6\u51b3\u4e8e\u60a8\u7684\u5177\u4f53\u5b9e\u9a8c\uff0c\u56e0\u6b64\u6240\u6709\u5b9e\u9a8c\u90fd\u5e94\u7ee7\u627f\u81ea BaseExperiment \u3002\u6b64\u7c7b\u5305\u542b\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u9700\u8981\u8986\u76d6\u7684\u6240\u6709\u51fd\u6570\u3002\u8fd9\u4e9b\u90fd\u662f\u4e0e\u8bad\u7ec3\u7684\u884c\u52a8\u3001\u89c2\u5bdf\u548c\u5956\u52b1\u76f8\u5173\u7684\u529f\u80fd\u3002","title":"1. \u5b9e\u9a8c\u7c7b"},{"location":"tuto_G_rllib_integration/#2","text":"\u5b9e\u9a8c\u5e94\u8be5\u901a\u8fc7 .yaml \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u4f20\u9012\u7684\u4efb\u4f55\u8bbe\u7f6e\u90fd\u5c06\u8986\u76d6\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4e0b\u9762\u89e3\u91ca\u4e86\u4e0d\u540c\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u4f4d\u7f6e\u3002 \u914d\u7f6e\u6587\u4ef6\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \u8bbe\u7f6e\u5927\u90e8\u5206 CARLA \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u8bbe\u7f6e\uff0c\u4f8b\u5982\u8d85\u65f6\u6216\u5730\u56fe\u8d28\u91cf\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u9ed8\u8ba4\u503c\u3002 \u8bbe\u7f6e\u7279\u5b9a\u4e8e\u60a8\u7684\u5b9e\u9a8c\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u6307\u5b9a\u57ce\u9547\u6761\u4ef6\u4ee5\u53ca\u81ea\u6211\u8f66\u8f86\u53ca\u5176\u4f20\u611f\u5668\u7684\u751f\u6210\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u53ef\u5728 \u6b64\u5904 \u627e\u5230\uff0c\u5e76\u63d0\u4f9b\u5982\u4f55\u8bbe\u7f6e\u4f20\u611f\u5668\u7684\u793a\u4f8b\u3002 \u914d\u7f6e\u7279\u5b9a\u4e8e Ray \u7684\u8bad\u7ec3 \u8bbe\u7f6e\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u4e0e\u6240\u4f7f\u7528\u7684\u7279\u5b9a\u8bad\u7ec3\u5668\u76f8\u5173\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5185\u7f6e\u6a21\u578b\uff0c\u5219\u53ef\u4ee5\u5728\u6b64\u5904\u5e94\u7528\u5176\u8bbe\u7f6e\u3002","title":"2. \u73af\u5883\u914d\u7f6e"},{"location":"tuto_G_rllib_integration/#3","text":"\u6700\u540e\u4e00\u6b65\u662f\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c\u3002\u8fd9\u90e8\u5206\u5b8c\u5168\u7531\u60a8\u51b3\u5b9a\uff0c\u5e76\u4e14\u4f9d\u8d56\u4e8e Ray API\u3002\u5982\u679c\u60a8\u60f3\u521b\u5efa\u81ea\u5df1\u7684\u7279\u5b9a\u6a21\u578b\uff0c\u8bf7\u67e5\u770b Ray \u7684\u81ea\u5b9a\u4e49\u6a21\u578b\u6587\u6863 \u3002","title":"3. \u8bad\u7ec3\u548c\u63a8\u7406\u811a\u672c"},{"location":"tuto_G_rllib_integration/#dqn","text":"\u672c\u8282\u4ee5\u4e0a\u4e00\u8282\u4e3a\u57fa\u7840\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 BirdView pseudosensor \u4f2a\u4f20\u611f\u5668\u548c Ray \u7684 DQNTrainer \u8fdb\u884c RLlib \u96c6\u6210\u7684\u5177\u4f53\u793a\u4f8b\u3002 DQN\u793a\u4f8b\u7684\u7ed3\u6784\u5982\u4e0b\uff1a \u5b9e\u9a8c\u7c7b : DQNExperiment \uff0c\u8986\u76d6 BaseExperiment \u7c7b\u7684\u65b9\u6cd5\u3002 \u914d\u7f6e\u6587\u4ef6 : dqn_example/dqn_config.yaml \u8bad\u7ec3\u6587\u4ef6 : dqn_train.py \u63a8\u7406\u6587\u4ef6 : \u6709 Ray : dqn_inference_ray.py \u6ca1\u6709 Ray : dqn_inference.py \u8981\u5728\u672c\u5730\u8fd0\u884c\u8be5\u793a\u4f8b\uff1a \u5b89\u88c5 pytorch: pip3 install -r dqn_example/dqn_requirements.txt \u8fd0\u884c\u8bad\u7ec3\u6587\u4ef6\uff1a python3 dqn_train.py dqn_example/dqn_config.yaml --name dqn \u7b14\u8bb0 \u9ed8\u8ba4\u914d\u7f6e\u4f7f\u7528 1 \u4e2a GPU \u548c 12 \u4e2a CPU\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u7684\u672c\u5730\u8ba1\u7b97\u673a\u6ca1\u6709\u8be5\u5bb9\u91cf\uff0c\u8bf7\u51cf\u5c0f \u914d\u7f6e\u6587\u4ef6 \u4e2d\u7684\u6570\u5b57\u3002 \u5982\u679c\u9047\u5230\u5185\u5b58\u4e0d\u8db3\u95ee\u9898\uff0c\u8bf7\u8003\u8651\u51cf\u5c11\u8be5 buffer_size \u53c2\u6570\u3002","title":"DQN \u793a\u4f8b"},{"location":"tuto_G_rllib_integration/#aws_1","text":"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 RLlib \u96c6\u6210\u5728 AWS EC2 \u5b9e\u4f8b\u4e0a\u81ea\u52a8\u8fd0\u884c\u8bad\u7ec3\u548c\u63a8\u7406\u3002\u4e3a\u4e86\u5904\u7406\u5b9e\u4f8b\u7684\u7f29\u653e\uff0c\u6211\u4eec\u4f7f\u7528 Ray autoscaler API \u3002","title":"\u5728 AWS \u4e0a\u8fd0\u884c"},{"location":"tuto_G_rllib_integration/#aws_2","text":"\u60a8\u9700\u8981\u6b63\u786e\u914d\u7f6e boto3 \u73af\u5883\u3002\u8bf7\u70b9\u51fb \u6b64\u5904 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"\u914d\u7f6e AWS"},{"location":"tuto_G_rllib_integration/#ami","text":"\u4f7f\u7528\u63d0\u4f9b\u7684 aws_helper.py \u811a\u672c\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u81ea\u52a8\u521b\u5efa\u8bad\u7ec3\u6240\u9700\u7684\u6620\u50cf\uff0c\u5e76\u4f20\u5165\u57fa\u7840\u6620\u50cf\u7684\u540d\u79f0\u548c install.sh \u5728\u4ee5\u4e0b\u4f4d\u7f6e rllib-integration/aws/install \u627e\u5230\u7684\u5b89\u88c5\u811a\u672c\uff1a python3 aws_helper.py create-image --name <AMI-name> --installation-scripts <installation-scripts> --instance-type <instance-type> --volume-size <volume-size>","title":"\u521b\u5efa\u8bad\u7ec3 AMI"},{"location":"tuto_G_rllib_integration/#_4","text":"\u521b\u5efa\u56fe\u50cf\u540e\uff0c\u5c06\u4f1a\u8f93\u51fa\u5e26\u6709\u56fe\u50cf\u4fe1\u606f\u7684\u8f93\u51fa\u3002\u8981\u4f7f\u7528 Ray \u81ea\u52a8\u7f29\u653e\u5668\uff0c\u8bf7\u4f7f\u7528\u8f93\u51fa\u4e2d\u7684\u4fe1\u606f\u66f4\u65b0 autoscaler configuration file \u4e2d\u7684 <ImageId> \u548c <SecurityGroupIds> \u8bbe\u7f6e\u3002","title":"\u914d\u7f6e\u96c6\u7fa4"},{"location":"tuto_G_rllib_integration/#_5","text":"\u521b\u5efa\u955c\u50cf\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Ray \u7684 API \u5728\u96c6\u7fa4\u4e0a\u8fd0\u884c\u8bad\u7ec3\uff1a \u521d\u59cb\u5316\u96c6\u7fa4\uff1a ray up <autoscaler_configuration_file> \uff08\u53ef\u9009\uff09\u5982\u679c\u96c6\u7fa4\u521d\u59cb\u5316\u540e\u672c\u5730\u4ee3\u7801\u88ab\u4fee\u6539\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\uff1a ray rsync-up <autoscaler_configuration_file> <path_to_local_folder> <path_to_remote_folder> \u8fd0\u884c\u8bad\u7ec3\uff1a ray submit <autoscaler_configuration_file> <training_file> \uff08\u53ef\u9009\uff09\u76d1\u63a7\u96c6\u7fa4\u72b6\u6001\uff1a ray attach <autoscaler_configuration_file> watch -n 1 ray status \u5173\u95ed\u96c6\u7fa4\uff1a ray down <autoscaler_configuration_file>","title":"\u8fd0\u884c\u8bad\u7ec3"},{"location":"tuto_G_rllib_integration/#aws-dqn","text":"\u8981\u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b\uff1a \u901a\u8fc7\u5c06 dqn_example/dqn_autoscaler.yaml \u914d\u7f6e\u4f20\u9012\u7ed9\u4ee5\u4e0b\u547d\u4ee4\u6765\u521b\u5efa\u6620\u50cf\uff1a python3 aws_helper.py create-image --name <AMI-name> --installation-scripts install/install.sh --instance-type <instance-type> --volume-size <volume-size> \u4f7f\u7528\u4e0a\u4e00\u4e2a\u547d\u4ee4 dqn_autoscaler.yaml \u63d0\u4f9b\u7684\u4fe1\u606f\u66f4\u65b0 <ImageId> \u548c <SecurityGroupIds> \u8bbe\u7f6e\u3002 \u521d\u59cb\u5316\u96c6\u7fa4\uff1a ray up dqn_example/dqn_autoscaler.yaml \uff08\u53ef\u9009\uff09\u4f7f\u7528\u672c\u5730\u66f4\u6539\u66f4\u65b0\u8fdc\u7a0b\u6587\u4ef6\uff1a ray rsync-up dqn_example/dqn_autoscaler.yaml dqn_example . ray rsync-up dqn_example/dqn_autoscaler.yaml rllib_integration . \u8fd0\u884c\u8bad\u7ec3\uff1a ray submit dqn_example/dqn_autoscaler.yaml dqn_train.py -- dqn_example/dqn_config.yaml --auto 6.\uff08\u53ef\u9009\uff09\u76d1\u63a7\u96c6\u7fa4\u72b6\u6001\uff1a ray attach dqn_example/dqn_autoscaler.yaml watch -n 1 ray status \u5173\u95ed\u96c6\u7fa4\uff1a ray down dqn_example/dqn_autoscaler.yaml \u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u5728 AWS \u548c\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u548c\u8fd0\u884c RLlib \u96c6\u6210\u3002\u5982\u679c\u60a8\u5bf9\u672c\u6307\u5357\u6709\u4efb\u4f55\u7591\u95ee\u6216\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u4e2d\u53d1\u5e16\u6216\u5728 GitHub \u4e0a\u63d0\u51fa\u95ee\u9898\u3002","title":"\u5728 AWS \u4e0a\u8fd0\u884c DQN \u793a\u4f8b"},{"location":"tuto_G_scenic/","text":"Scenic \u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u5c06 Scenic \u4e0e CARLA \u7ed3\u5408\u4f7f\u7528\uff0c\u901a\u8fc7\u5355\u4e2a\u573a\u666f\u5b9a\u4e49\u751f\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u573a\u666f\u3002\u5b83\u5047\u8bbe\u7528\u6237\u4e8b\u5148\u4e86\u89e3\u573a\u666f\u8bed\u6cd5\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u6709\u5173 Scenic \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u4ed6\u4eec\u7684 \u201cScenic \u5165\u95e8\u201d \u6307\u5357\uff0c\u5e76\u67e5\u770b\u4ed6\u4eec\u6709\u5173\u521b\u5efa \u9759\u6001 \u548c \u52a8\u6001 \u573a\u666f\u7684\u6559\u7a0b\u3002 \u5728\u672c\u6307\u5357\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u4e86\u89e3\uff1a \u5728 CARLA \u4e0a\u8fd0\u884c Scenic \u811a\u672c\u6240\u9700\u7684\u6700\u4f4e\u8981\u6c42\u3002 \u5982\u4f55\u7f16\u5199\u7b80\u5355\u7684\u573a\u666f\u5b9a\u4e49\u6765\u751f\u6210\u5927\u91cf\u573a\u666f\u4eff\u771f\u3002 \u5982\u4f55\u5728 CARLA \u4e0a\u8fd0\u884c Scenic \u811a\u672c\u3002 \u7528\u4e8e\u5728 CARLA \u4e0a\u914d\u7f6e\u573a\u666f\u4eff\u771f\u7684\u53c2\u6570\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d Scenic \u57df \u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684 Scenic \u573a\u666f \u8fd0\u884c\u573a\u666f \u9644\u52a0\u53c2\u6570 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5728\u5c06 Scenic \u4e0e CARLA \u7ed3\u5408\u4f7f\u7528\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u5b89\u88c5 Python 3.8 \u6216\u66f4\u9ad8\u7248\u672c\u3002 \u5b89\u88c5 Scenic \u3002 Scenic \u57df Scenic \u6709\u4e00\u4e2a\u901a\u7528\u9a7e\u9a76\u57df\uff0c\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u53ef\u4ee5\u5728\u4efb\u4f55\u9a7e\u9a76\u4eff\u771f\u5668\u4e0a\u8fd0\u884c\u7684\u573a\u666f\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u6709\u7279\u5b9a\u4e8e\u6bcf\u4e2a\u4eff\u771f\u5668\u7684\u5176\u4ed6\u57df\u3002\u8bf7\u5728 \u6b64\u5904 \u67e5\u770b\u6709\u5173 Scenic \u57df\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6bcf\u4e2a\u9886\u57df\u4e2d\u7279\u522b\u91cd\u8981\u7684\u662f\u884c\u4e3a\u548c\u52a8\u4f5c\u7684\u5b9a\u4e49\u3002\u68c0\u67e5\u4ee5\u4e0b\u94fe\u63a5\uff0c\u83b7\u53d6\u6709\u5173 Scenic \u9a7e\u9a76\u57df\u548c CARLA \u57df\u7684\u884c\u4e3a\u548c\u64cd\u4f5c\u7684\u53c2\u8003\u6750\u6599\uff1a the Scenic \u9a7e\u9a76\u9886\u57df\u7684\u884c\u4e3a CARLA \u57df\u4e2d\u7684\u884c\u4e3a Scenic \u9a7e\u9a76\u57df\u7684\u52a8\u4f5c CARLA \u57df\u4e2d\u7684\u52a8\u4f5c \u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684 Scenic \u573a\u666f \u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u7f16\u5199\u57fa\u672c\u7684\u573a\u666f\u811a\u672c\uff0c\u5176\u4e2d\u9886\u5934\u8f66\u8f86\u7531\u4e8e\u9053\u8def\u4e0a\u7684\u969c\u788d\u7269\u800c\u7a81\u7136\u51cf\u901f\u3002\u7136\u540e\uff0c\u672c\u8f66\u9700\u8981\u7a81\u7136\u5236\u52a8\u4ee5\u907f\u514d\u4e0e\u524d\u8f66\u53d1\u751f\u78b0\u649e\u3002 \u5b8c\u6574\u7684\u811a\u672c \u4ee5\u53ca\u6d89\u53ca\u66f4\u590d\u6742\u9053\u8def\u7f51\u7edc\u7684\u5176\u4ed6\u793a\u4f8b\u53ef\u4ee5\u5728 Scenic \u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u3002 1. \u8bbe\u7f6e\u5730\u56fe\u53c2\u6570\u5e76\u58f0\u660e\u573a\u666f\u4f7f\u7528\u7684\u6a21\u578b\uff1a \u5e94\u5c06 .xodr \u6587\u4ef6\u8bbe\u7f6e\u4e3a map \u53c2\u6570\u503c\uff0c\u7a0d\u540e\u5c06\u4f7f\u7528\u8be5\u6587\u4ef6\u751f\u6210\u9053\u8def\u7f51\u7edc\u4fe1\u606f\u3002 \u53c2\u6570 carla_map \u662f\u6307\u60a8\u60f3\u8981\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u7684 CARLA \u5730\u56fe\u7684\u540d\u79f0\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219 Scenic \u5c06\u52a0\u8f7d\u5730\u56fe\u7684\u6240\u6709\u8d44\u4ea7\uff08\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\uff09\uff0c\u5982\u679c\u672a\u5b9a\u4e49\uff0c\u5219\u5c06\u4f7f\u7528 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u3002 \u8be5\u6a21\u578b\u5305\u62ec\u7279\u5b9a\u4e8e CARLA \u4e0a\u8fd0\u884c\u573a\u666f\u7684\u6240\u6709\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u5e94\u8be5\u5728\u60a8\u60f3\u8981\u5728 CARLA \u4e0a\u8fd0\u884c\u7684\u6240\u6709\u811a\u672c\u4e2d\u5b9a\u4e49\u3002 ## SET MAP AND MODEL param map = localPath('../../../tests/formats/opendrive/maps/CARLA/Town01.xodr') param carla_map = 'Town01' model scenic.simulators.carla.model 2. \u5b9a\u4e49\u573a\u666f\u4e2d\u8981\u4f7f\u7528\u7684\u5e38\u91cf\uff1a \u8be5\u573a\u666f\u6d89\u53ca\u4e24\u8f86\u8f66\uff0c\u9886\u5934\u8f66\u8f86\u548c\u81ea\u6211\u8f66\u8f86\u3002\u6211\u4eec\u5c06\u5b9a\u4e49\u81ea\u6211\u8f66\u8f86\u6a21\u578b\u3001\u4e24\u8f86\u8f66\u7684\u901f\u5ea6\u3001\u5236\u52a8\u8ddd\u79bb\u9608\u503c\u4ee5\u53ca\u5236\u52a8\u91cf\u3002 ## CONSTANTS EGO_MODEL = \"vehicle.lincoln.mkz_2017\" EGO_SPEED = 10 EGO_BRAKING_THRESHOLD = 12 LEAD_CAR_SPEED = 10 LEADCAR_BRAKING_THRESHOLD = 10 BRAKE_ACTION = 1.0 3 . \u5b9a\u4e49\u573a\u666f\u884c\u4e3a\uff1a \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Scenic \u884c\u4e3a\u5e93 \u6765\u6307\u793a\u81ea\u6211\u8f66\u8f86\u4ee5\u9884\u5b9a\u4e49\u7684\u901f\u5ea6\u6cbf\u7740\u8f66\u9053\u884c\u9a76\uff0c\u7136\u540e\u5728\u4e0e\u53e6\u4e00\u8f86\u8f66\u76f8\u8ddd\u4e00\u5b9a\u8ddd\u79bb\u65f6\u7d27\u6025\u5236\u52a8\u3002\u9886\u5148\u7684\u8f66\u8f86\u4e5f\u4f1a\u4ee5\u9884\u5b9a\u7684\u901f\u5ea6\u6cbf\u7740\u8f66\u9053\u884c\u9a76\uff0c\u5e76\u5728\u8ddd\u79bb\u4efb\u4f55\u7269\u4f53\u4e00\u5b9a\u8ddd\u79bb\u5185\u7d27\u6025\u5236\u52a8\uff1a ## DEFINING BEHAVIORS # EGO BEHAVIOR: Follow lane, and brake after passing a threshold distance to the leading car behavior EgoBehavior(speed=10): try: do FollowLaneBehavior(speed) interrupt when withinDistanceToAnyCars(self, EGO_BRAKING_THRESHOLD): take SetBrakeAction(BRAKE_ACTION) # LEAD CAR BEHAVIOR: Follow lane, and brake after passing a threshold distance to obstacle behavior LeadingCarBehavior(speed=10): try: do FollowLaneBehavior(speed) interrupt when withinDistanceToAnyObjs(self, LEADCAR_BRAKING_THRESHOLD): take SetBrakeAction(BRAKE_ACTION) 4. \u751f\u6210\u8def\u7f51\uff1a Scenic \u9053\u8def\u5e93 \u7528\u4e8e\u751f\u6210\u9053\u8def\u7f51\u7edc\u51e0\u4f55\u5f62\u72b6\u548c\u4ea4\u901a\u4fe1\u606f\u3002\u9053\u8def\u7f51\u7edc\u7531 Network \u7c7b\u7684\u5b9e\u4f8b\u8868\u793a\uff0c\u5e76\u7531\u811a\u672c\u5f00\u5934\u5b9a\u4e49\u7684\u6587\u4ef6\u751f\u6210\u3002 ## DEFINING SPATIAL RELATIONS # make sure to put '*' to uniformly randomly select from all elements of the list, 'lanes' lane = Uniform(*network.lanes) 5. \u8bbe\u7f6e\u573a\u666f\uff1a \u6211\u4eec\u73b0\u5728\u5c06\u5b9a\u4e49\u8f66\u8f86\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7269\u4f53\u7684\u653e\u7f6e\u3002 \u5728\u8f66\u9053\u4e2d\u95f4\u653e\u7f6e\u5783\u573e\u6876\uff1a obstacle = Trash on lane.centerline \u5c06\u9886\u5148\u8f66\u8f86\u4ee5\u9884\u5b9a\u901f\u5ea6\u6cbf\u9053\u8def\u884c\u9a76\uff0c\u8ddd\u79bb\u969c\u788d\u7269\u540e\u65b9 50 \u81f3 30 \u7c73\uff1a leadCar = Car following roadDirection from obstacle for Range(-50, -30), with behavior LeadingCarBehavior(LEAD_CAR_SPEED) \u5c06\u672c\u8f66\u4ee5\u9884\u5b9a\u901f\u5ea6\u6cbf\u7740\u9053\u8def\u884c\u9a76\uff0c\u8ddd\u79bb\u524d\u8f66 15 \u5230 10 \u7c73\uff1a ego = Car following roadDirection from leadCar for Range(-15, -10), with blueprint EGO_MODEL, with behavior EgoBehavior(EGO_SPEED) \u8981\u6c42\u573a\u666f\u53d1\u751f\u5728\u8ddd\u8def\u53e3 80 \u7c73\u4ee5\u4e0a\u7684\u4f4d\u7f6e\uff1a require (distance to intersection) > 80 6. \u8bbe\u7f6e\u7ed3\u675f\u70b9\uff0c\u4ee5\u4fbf\u811a\u672c\u77e5\u9053\u573a\u666f\u4f55\u65f6\u5b8c\u6210\uff1a \u5f53\u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u4f4e\u4e8e\u6bcf\u79d2 0.1 \u7c73\u5e76\u4e14\u8ddd\u79bb\u969c\u788d\u7269\u4e0d\u5230 30 \u7c73\u65f6\uff0c\u8be5\u573a\u666f\u5c06\u7ed3\u675f\u3002 terminate when ego.speed < 0.1 and (distance to obstacle) < 30 \u8fd0\u884c\u573a\u666f \u8981\u8fd0\u884c Scenic \u573a\u666f\uff1a 1. \u542f\u52a8 CARLA \u670d\u52a1\u5668\u3002 2. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a scenic path/to/scenic/script.scenic --simulate \u5c06\u51fa\u73b0\u4e00\u4e2a pygame \u7a97\u53e3\uff0c\u5e76\u4e14\u573a\u666f\u5c06\u91cd\u590d\u64ad\u653e\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5728\u811a\u672c\u4e2d\u8bbe\u7f6e\u7684\u9650\u5236\u8303\u56f4\u5185\u751f\u6210\u4e00\u4e2a\u72ec\u7279\u7684\u573a\u666f\u3002\u8981\u505c\u6b62\u573a\u666f\u751f\u6210\uff0c\u8bf7\u5728\u7ec8\u7aef\u4e2d\u6309 ctrl + C \u3002 \u9644\u52a0\u53c2\u6570 CARLA \u6a21\u578b\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5168\u5c40\u53c2\u6570\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528 param \u8bed\u53e5 \u6216\u901a\u8fc7\u547d\u4ee4\u884c\u4f7f\u7528 --param option \u9009\u9879\u7684\u573a\u666f\u4e2d\u8986\u76d6\u8fd9\u4e9b\u53c2\u6570\u3002 \u4e0b\u9762\u662f CARLA \u6a21\u578b\u4e2d\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u8868\uff1a \u540d\u79f0 \u503c \u63cf\u8ff0 carla_map str \u8981\u4f7f\u7528\u7684 CARLA \u5730\u56fe\u7684\u540d\u79f0\uff08\u4f8b\u5982\u201cTown01\u201d\uff09\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a None \uff0cCARLA \u5c06\u5c1d\u8bd5\u4f7f\u7528 map \u53c2\u6570\u4e2d\u5b9a\u4e49\u7684 .xodr \u6587\u4ef6\u5728 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f\u4e0b\u521b\u5efa\u4e16\u754c\u3002 timestep float \u7528\u4e8e\u4eff\u771f\u7684\u65f6\u95f4\u6b65\u957f\uff08Scenic \u4e2d\u65ad CARLA \u8fd0\u884c\u884c\u4e3a\u3001\u68c0\u67e5\u9700\u6c42\u7b49\u7684\u9891\u7387\uff09\u4ee5\u79d2\u4e3a\u5355\u4f4d\u3002\u9ed8\u8ba4\u503c\u4e3a 0.1 \u79d2\u3002 weather str \u6216 dict \u7528\u4e8e\u5929\u6c14\u7684\u4eff\u771f\u3002\u53ef\u4ee5\u662f\u6807\u8bc6 CARLA \u5929\u6c14\u9884\u8bbe\u4e4b\u4e00\u7684\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\u201cClearSunset\u201d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u5b9a\u6240\u6709 \u5929\u6c14\u53c2\u6570 \u7684\u5b57\u5178\u3002\u9ed8\u8ba4\u503c\u662f\u6240\u6709\u5929\u6c14\u9884\u8bbe\u7684\u5747\u5300\u5206\u5e03\u3002 address str \u8fde\u63a5\u5230 CARLA \u7684 IP \u5730\u5740\u3002\u9ed8\u8ba4\u503c\u4e3a\u672c\u5730\u4e3b\u673a (127.0.0.1)\u3002 port int \u8fde\u63a5\u81f3 CARLA \u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u503c\u4e3a 2000\u3002 timeout float \u5c1d\u8bd5\u8fde\u63a5\u5230 CARLA \u65f6\u7b49\u5f85\u7684\u6700\u957f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 render int \u662f\u5426\u8ba9 CARLA \u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u4ece\u81ea\u6211\u5ba2\u4f53\u7684\u89d2\u5ea6\u663e\u793a\u4eff\u771f\uff1a 1 \u662f\uff0c 0 \u5426\u3002\u9ed8\u8ba4 1 \u3002 record str \u5982\u679c\u975e\u7a7a\uff0c\u5219\u4fdd\u5b58\u7528\u4e8e\u91cd\u653e\u4eff\u771f\u7684 CARLA \u8bb0\u5f55\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u3002","title":"Scenic"},{"location":"tuto_G_scenic/#scenic","text":"\u672c\u6307\u5357\u6982\u8ff0\u4e86\u5982\u4f55\u5c06 Scenic \u4e0e CARLA \u7ed3\u5408\u4f7f\u7528\uff0c\u901a\u8fc7\u5355\u4e2a\u573a\u666f\u5b9a\u4e49\u751f\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u573a\u666f\u3002\u5b83\u5047\u8bbe\u7528\u6237\u4e8b\u5148\u4e86\u89e3\u573a\u666f\u8bed\u6cd5\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u6709\u5173 Scenic \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u4ed6\u4eec\u7684 \u201cScenic \u5165\u95e8\u201d \u6307\u5357\uff0c\u5e76\u67e5\u770b\u4ed6\u4eec\u6709\u5173\u521b\u5efa \u9759\u6001 \u548c \u52a8\u6001 \u573a\u666f\u7684\u6559\u7a0b\u3002 \u5728\u672c\u6307\u5357\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u4e86\u89e3\uff1a \u5728 CARLA \u4e0a\u8fd0\u884c Scenic \u811a\u672c\u6240\u9700\u7684\u6700\u4f4e\u8981\u6c42\u3002 \u5982\u4f55\u7f16\u5199\u7b80\u5355\u7684\u573a\u666f\u5b9a\u4e49\u6765\u751f\u6210\u5927\u91cf\u573a\u666f\u4eff\u771f\u3002 \u5982\u4f55\u5728 CARLA \u4e0a\u8fd0\u884c Scenic \u811a\u672c\u3002 \u7528\u4e8e\u5728 CARLA \u4e0a\u914d\u7f6e\u573a\u666f\u4eff\u771f\u7684\u53c2\u6570\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d Scenic \u57df \u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684 Scenic \u573a\u666f \u8fd0\u884c\u573a\u666f \u9644\u52a0\u53c2\u6570","title":"Scenic"},{"location":"tuto_G_scenic/#_1","text":"\u5728\u5c06 Scenic \u4e0e CARLA \u7ed3\u5408\u4f7f\u7528\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u5b89\u88c5 Python 3.8 \u6216\u66f4\u9ad8\u7248\u672c\u3002 \u5b89\u88c5 Scenic \u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_G_scenic/#scenic_1","text":"Scenic \u6709\u4e00\u4e2a\u901a\u7528\u9a7e\u9a76\u57df\uff0c\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u53ef\u4ee5\u5728\u4efb\u4f55\u9a7e\u9a76\u4eff\u771f\u5668\u4e0a\u8fd0\u884c\u7684\u573a\u666f\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u6709\u7279\u5b9a\u4e8e\u6bcf\u4e2a\u4eff\u771f\u5668\u7684\u5176\u4ed6\u57df\u3002\u8bf7\u5728 \u6b64\u5904 \u67e5\u770b\u6709\u5173 Scenic \u57df\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u6bcf\u4e2a\u9886\u57df\u4e2d\u7279\u522b\u91cd\u8981\u7684\u662f\u884c\u4e3a\u548c\u52a8\u4f5c\u7684\u5b9a\u4e49\u3002\u68c0\u67e5\u4ee5\u4e0b\u94fe\u63a5\uff0c\u83b7\u53d6\u6709\u5173 Scenic \u9a7e\u9a76\u57df\u548c CARLA \u57df\u7684\u884c\u4e3a\u548c\u64cd\u4f5c\u7684\u53c2\u8003\u6750\u6599\uff1a the Scenic \u9a7e\u9a76\u9886\u57df\u7684\u884c\u4e3a CARLA \u57df\u4e2d\u7684\u884c\u4e3a Scenic \u9a7e\u9a76\u57df\u7684\u52a8\u4f5c CARLA \u57df\u4e2d\u7684\u52a8\u4f5c","title":"Scenic \u57df"},{"location":"tuto_G_scenic/#carla-scenic","text":"\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u7f16\u5199\u57fa\u672c\u7684\u573a\u666f\u811a\u672c\uff0c\u5176\u4e2d\u9886\u5934\u8f66\u8f86\u7531\u4e8e\u9053\u8def\u4e0a\u7684\u969c\u788d\u7269\u800c\u7a81\u7136\u51cf\u901f\u3002\u7136\u540e\uff0c\u672c\u8f66\u9700\u8981\u7a81\u7136\u5236\u52a8\u4ee5\u907f\u514d\u4e0e\u524d\u8f66\u53d1\u751f\u78b0\u649e\u3002 \u5b8c\u6574\u7684\u811a\u672c \u4ee5\u53ca\u6d89\u53ca\u66f4\u590d\u6742\u9053\u8def\u7f51\u7edc\u7684\u5176\u4ed6\u793a\u4f8b\u53ef\u4ee5\u5728 Scenic \u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u3002 1. \u8bbe\u7f6e\u5730\u56fe\u53c2\u6570\u5e76\u58f0\u660e\u573a\u666f\u4f7f\u7528\u7684\u6a21\u578b\uff1a \u5e94\u5c06 .xodr \u6587\u4ef6\u8bbe\u7f6e\u4e3a map \u53c2\u6570\u503c\uff0c\u7a0d\u540e\u5c06\u4f7f\u7528\u8be5\u6587\u4ef6\u751f\u6210\u9053\u8def\u7f51\u7edc\u4fe1\u606f\u3002 \u53c2\u6570 carla_map \u662f\u6307\u60a8\u60f3\u8981\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u7684 CARLA \u5730\u56fe\u7684\u540d\u79f0\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219 Scenic \u5c06\u52a0\u8f7d\u5730\u56fe\u7684\u6240\u6709\u8d44\u4ea7\uff08\u5efa\u7b51\u7269\u3001\u6811\u6728\u7b49\uff09\uff0c\u5982\u679c\u672a\u5b9a\u4e49\uff0c\u5219\u5c06\u4f7f\u7528 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f \u3002 \u8be5\u6a21\u578b\u5305\u62ec\u7279\u5b9a\u4e8e CARLA \u4e0a\u8fd0\u884c\u573a\u666f\u7684\u6240\u6709\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u5e94\u8be5\u5728\u60a8\u60f3\u8981\u5728 CARLA \u4e0a\u8fd0\u884c\u7684\u6240\u6709\u811a\u672c\u4e2d\u5b9a\u4e49\u3002 ## SET MAP AND MODEL param map = localPath('../../../tests/formats/opendrive/maps/CARLA/Town01.xodr') param carla_map = 'Town01' model scenic.simulators.carla.model 2. \u5b9a\u4e49\u573a\u666f\u4e2d\u8981\u4f7f\u7528\u7684\u5e38\u91cf\uff1a \u8be5\u573a\u666f\u6d89\u53ca\u4e24\u8f86\u8f66\uff0c\u9886\u5934\u8f66\u8f86\u548c\u81ea\u6211\u8f66\u8f86\u3002\u6211\u4eec\u5c06\u5b9a\u4e49\u81ea\u6211\u8f66\u8f86\u6a21\u578b\u3001\u4e24\u8f86\u8f66\u7684\u901f\u5ea6\u3001\u5236\u52a8\u8ddd\u79bb\u9608\u503c\u4ee5\u53ca\u5236\u52a8\u91cf\u3002 ## CONSTANTS EGO_MODEL = \"vehicle.lincoln.mkz_2017\" EGO_SPEED = 10 EGO_BRAKING_THRESHOLD = 12 LEAD_CAR_SPEED = 10 LEADCAR_BRAKING_THRESHOLD = 10 BRAKE_ACTION = 1.0 3 . \u5b9a\u4e49\u573a\u666f\u884c\u4e3a\uff1a \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Scenic \u884c\u4e3a\u5e93 \u6765\u6307\u793a\u81ea\u6211\u8f66\u8f86\u4ee5\u9884\u5b9a\u4e49\u7684\u901f\u5ea6\u6cbf\u7740\u8f66\u9053\u884c\u9a76\uff0c\u7136\u540e\u5728\u4e0e\u53e6\u4e00\u8f86\u8f66\u76f8\u8ddd\u4e00\u5b9a\u8ddd\u79bb\u65f6\u7d27\u6025\u5236\u52a8\u3002\u9886\u5148\u7684\u8f66\u8f86\u4e5f\u4f1a\u4ee5\u9884\u5b9a\u7684\u901f\u5ea6\u6cbf\u7740\u8f66\u9053\u884c\u9a76\uff0c\u5e76\u5728\u8ddd\u79bb\u4efb\u4f55\u7269\u4f53\u4e00\u5b9a\u8ddd\u79bb\u5185\u7d27\u6025\u5236\u52a8\uff1a ## DEFINING BEHAVIORS # EGO BEHAVIOR: Follow lane, and brake after passing a threshold distance to the leading car behavior EgoBehavior(speed=10): try: do FollowLaneBehavior(speed) interrupt when withinDistanceToAnyCars(self, EGO_BRAKING_THRESHOLD): take SetBrakeAction(BRAKE_ACTION) # LEAD CAR BEHAVIOR: Follow lane, and brake after passing a threshold distance to obstacle behavior LeadingCarBehavior(speed=10): try: do FollowLaneBehavior(speed) interrupt when withinDistanceToAnyObjs(self, LEADCAR_BRAKING_THRESHOLD): take SetBrakeAction(BRAKE_ACTION) 4. \u751f\u6210\u8def\u7f51\uff1a Scenic \u9053\u8def\u5e93 \u7528\u4e8e\u751f\u6210\u9053\u8def\u7f51\u7edc\u51e0\u4f55\u5f62\u72b6\u548c\u4ea4\u901a\u4fe1\u606f\u3002\u9053\u8def\u7f51\u7edc\u7531 Network \u7c7b\u7684\u5b9e\u4f8b\u8868\u793a\uff0c\u5e76\u7531\u811a\u672c\u5f00\u5934\u5b9a\u4e49\u7684\u6587\u4ef6\u751f\u6210\u3002 ## DEFINING SPATIAL RELATIONS # make sure to put '*' to uniformly randomly select from all elements of the list, 'lanes' lane = Uniform(*network.lanes) 5. \u8bbe\u7f6e\u573a\u666f\uff1a \u6211\u4eec\u73b0\u5728\u5c06\u5b9a\u4e49\u8f66\u8f86\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7269\u4f53\u7684\u653e\u7f6e\u3002 \u5728\u8f66\u9053\u4e2d\u95f4\u653e\u7f6e\u5783\u573e\u6876\uff1a obstacle = Trash on lane.centerline \u5c06\u9886\u5148\u8f66\u8f86\u4ee5\u9884\u5b9a\u901f\u5ea6\u6cbf\u9053\u8def\u884c\u9a76\uff0c\u8ddd\u79bb\u969c\u788d\u7269\u540e\u65b9 50 \u81f3 30 \u7c73\uff1a leadCar = Car following roadDirection from obstacle for Range(-50, -30), with behavior LeadingCarBehavior(LEAD_CAR_SPEED) \u5c06\u672c\u8f66\u4ee5\u9884\u5b9a\u901f\u5ea6\u6cbf\u7740\u9053\u8def\u884c\u9a76\uff0c\u8ddd\u79bb\u524d\u8f66 15 \u5230 10 \u7c73\uff1a ego = Car following roadDirection from leadCar for Range(-15, -10), with blueprint EGO_MODEL, with behavior EgoBehavior(EGO_SPEED) \u8981\u6c42\u573a\u666f\u53d1\u751f\u5728\u8ddd\u8def\u53e3 80 \u7c73\u4ee5\u4e0a\u7684\u4f4d\u7f6e\uff1a require (distance to intersection) > 80 6. \u8bbe\u7f6e\u7ed3\u675f\u70b9\uff0c\u4ee5\u4fbf\u811a\u672c\u77e5\u9053\u573a\u666f\u4f55\u65f6\u5b8c\u6210\uff1a \u5f53\u81ea\u6211\u8f66\u8f86\u7684\u901f\u5ea6\u4f4e\u4e8e\u6bcf\u79d2 0.1 \u7c73\u5e76\u4e14\u8ddd\u79bb\u969c\u788d\u7269\u4e0d\u5230 30 \u7c73\u65f6\uff0c\u8be5\u573a\u666f\u5c06\u7ed3\u675f\u3002 terminate when ego.speed < 0.1 and (distance to obstacle) < 30","title":"\u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684 Scenic \u573a\u666f"},{"location":"tuto_G_scenic/#_2","text":"\u8981\u8fd0\u884c Scenic \u573a\u666f\uff1a 1. \u542f\u52a8 CARLA \u670d\u52a1\u5668\u3002 2. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a scenic path/to/scenic/script.scenic --simulate \u5c06\u51fa\u73b0\u4e00\u4e2a pygame \u7a97\u53e3\uff0c\u5e76\u4e14\u573a\u666f\u5c06\u91cd\u590d\u64ad\u653e\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5728\u811a\u672c\u4e2d\u8bbe\u7f6e\u7684\u9650\u5236\u8303\u56f4\u5185\u751f\u6210\u4e00\u4e2a\u72ec\u7279\u7684\u573a\u666f\u3002\u8981\u505c\u6b62\u573a\u666f\u751f\u6210\uff0c\u8bf7\u5728\u7ec8\u7aef\u4e2d\u6309 ctrl + C \u3002","title":"\u8fd0\u884c\u573a\u666f"},{"location":"tuto_G_scenic/#_3","text":"CARLA \u6a21\u578b\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5168\u5c40\u53c2\u6570\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528 param \u8bed\u53e5 \u6216\u901a\u8fc7\u547d\u4ee4\u884c\u4f7f\u7528 --param option \u9009\u9879\u7684\u573a\u666f\u4e2d\u8986\u76d6\u8fd9\u4e9b\u53c2\u6570\u3002 \u4e0b\u9762\u662f CARLA \u6a21\u578b\u4e2d\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u8868\uff1a \u540d\u79f0 \u503c \u63cf\u8ff0 carla_map str \u8981\u4f7f\u7528\u7684 CARLA \u5730\u56fe\u7684\u540d\u79f0\uff08\u4f8b\u5982\u201cTown01\u201d\uff09\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a None \uff0cCARLA \u5c06\u5c1d\u8bd5\u4f7f\u7528 map \u53c2\u6570\u4e2d\u5b9a\u4e49\u7684 .xodr \u6587\u4ef6\u5728 OpenDRIVE \u72ec\u7acb\u6a21\u5f0f\u4e0b\u521b\u5efa\u4e16\u754c\u3002 timestep float \u7528\u4e8e\u4eff\u771f\u7684\u65f6\u95f4\u6b65\u957f\uff08Scenic \u4e2d\u65ad CARLA \u8fd0\u884c\u884c\u4e3a\u3001\u68c0\u67e5\u9700\u6c42\u7b49\u7684\u9891\u7387\uff09\u4ee5\u79d2\u4e3a\u5355\u4f4d\u3002\u9ed8\u8ba4\u503c\u4e3a 0.1 \u79d2\u3002 weather str \u6216 dict \u7528\u4e8e\u5929\u6c14\u7684\u4eff\u771f\u3002\u53ef\u4ee5\u662f\u6807\u8bc6 CARLA \u5929\u6c14\u9884\u8bbe\u4e4b\u4e00\u7684\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\u201cClearSunset\u201d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u5b9a\u6240\u6709 \u5929\u6c14\u53c2\u6570 \u7684\u5b57\u5178\u3002\u9ed8\u8ba4\u503c\u662f\u6240\u6709\u5929\u6c14\u9884\u8bbe\u7684\u5747\u5300\u5206\u5e03\u3002 address str \u8fde\u63a5\u5230 CARLA \u7684 IP \u5730\u5740\u3002\u9ed8\u8ba4\u503c\u4e3a\u672c\u5730\u4e3b\u673a (127.0.0.1)\u3002 port int \u8fde\u63a5\u81f3 CARLA \u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u503c\u4e3a 2000\u3002 timeout float \u5c1d\u8bd5\u8fde\u63a5\u5230 CARLA \u65f6\u7b49\u5f85\u7684\u6700\u957f\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a 10\u3002 render int \u662f\u5426\u8ba9 CARLA \u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u4ece\u81ea\u6211\u5ba2\u4f53\u7684\u89d2\u5ea6\u663e\u793a\u4eff\u771f\uff1a 1 \u662f\uff0c 0 \u5426\u3002\u9ed8\u8ba4 1 \u3002 record str \u5982\u679c\u975e\u7a7a\uff0c\u5219\u4fdd\u5b58\u7528\u4e8e\u91cd\u653e\u4eff\u771f\u7684 CARLA \u8bb0\u5f55\u6587\u4ef6\u7684\u6587\u4ef6\u5939\u3002","title":"\u9644\u52a0\u53c2\u6570"},{"location":"tuto_G_texture_streaming/","text":"\u901a\u8fc7 API \u66f4\u6539\u7eb9\u7406 CARLA API \u53ef\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u8d44\u6e90\u7eb9\u7406\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u9009\u62e9\u8d44\u6e90\uff0c\u7136\u540e\u5728 CARLA \u4eff\u771f\u8fd0\u884c\u65f6\u4fee\u6539\u5176\u7eb9\u7406\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\u8d44\u6e90 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u52a0\u8f7d\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u52a0\u8f7d CARLA \u5730\u56fe\uff0c\u6309\u7167 Linux \u6216 Windows \u7684\u8bf4\u660e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u7136\u540e\u6784\u5efa\u5e76\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u8ba9\u6211\u4eec\u6253\u5f00\u52a0\u8f7d\u4e86 Town 10\uff08\u9ed8\u8ba4\u57ce\u9547\uff09\u7684\u7f16\u8f91\u5668\uff0c\u7136\u540e\u9009\u62e9\u8981\u4f7f\u7528\u7684\u5efa\u7b51\u7269\uff1a \u6211\u4eec\u9009\u62e9 BP_Apartment04_v05_Opt \u8fdb\u884c\u7eb9\u7406\u64cd\u4f5c\uff0c\u540d\u79f0\u53ef\u4ee5\u5728\u201c\u4e16\u754c\u5927\u7eb2\u89c6\u56fe(World Outliner)\u201d\u9762\u677f\u4e2d\u770b\u5230\u3002\u786e\u4fdd\u5c06\u9f20\u6807\u60ac\u505c\u5728\u4e16\u754c\u5927\u7eb2\u89c6\u56fe\u4e2d\u7684\u540d\u79f0\u4e0a\u5e76\u4f7f\u7528\u5de5\u5177\u63d0\u793a\u4e2d\u5b9a\u4e49\u7684\u540d\u79f0\u3002\u5185\u90e8\u540d\u79f0\u53ef\u80fd\u4e0e\u5217\u8868\u4e2d\u663e\u793a\u7684\u6807\u9898\u4e0d\u540c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5185\u90e8\u540d\u79f0\u5b9e\u9645\u4e0a\u662f BP_Apartment04_v05_Opt_2 \u3002 \u5bfc\u51fa\u7eb9\u7406\u4ee5\u4f9b\u4f7f\u7528 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9009\u62e9\u4e86\u5efa\u7b51\u7269\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u7528\u4e8e\u63a7\u5236\u5efa\u7b51\u7269\u5916\u89c2\u7684\u7eb9\u7406\u3002\u9009\u62e9\u5efa\u7b51\u7269\u540e\uff0c\u5728\u201c\u7ec6\u8282\u201d\u9762\u677f\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u8d44\u4ea7\u7684\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u4f4d\u7f6e\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u5355\u51fb\u201cStaticMesh\uff08\u7ee7\u627f\uff09\u201d\u4ee5\u6253\u5f00\u7f51\u683c\u4f53\u5c5e\u6027\uff0c\u7136\u540e\u5728\u9762\u677f\u7684\u201c\u9759\u6001\u7f51\u683c\u4f53\u201d\u90e8\u5206\u4e2d\u5355\u51fb\u653e\u5927\u955c\u56fe\u6807\u3002\u8fd9\u4f1a\u5c06\u5c5e\u4e8e\u8d44\u6e90\u7684\u6750\u8d28\u548c\u7eb9\u7406\u7f6e\u4e8e\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u7126\u70b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u8981\u68c0\u67e5 T_Apartment04_D_Opt \u7eb9\u7406\u3002\u5982\u679c\u53cc\u51fb\u7eb9\u7406\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u68c0\u67e5\u5b83\uff0c\u4f46\u662f\uff0c\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u60f3\u8981\u5bfc\u51fa\u5b83\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u5b83\u3002\u5355\u51fb T_Apartment04_D_Opt \u5e76\u53f3\u952e\u9009\u62e9 \u8d44\u4ea7\u64cd\u4f5c > \u5bfc\u51fa \u3002\u4ee5\u9002\u5f53\u7684\u683c\u5f0f\u4fdd\u5b58\u6587\u4ef6\uff08\u6211\u4eec\u5728\u8fd9\u91cc\u9009\u62e9 TGA \u683c\u5f0f\uff09\u3002 \u5728\u60a8\u559c\u6b22\u7684\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u4e2d\u6253\u5f00\u5bfc\u51fa\u7684\u7eb9\u7406\uff0c\u5e76\u6839\u636e\u9700\u8981\u7f16\u8f91\u7eb9\u7406\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u4e0a\u534a\u90e8\u5206\u53ef\u4ee5\u770b\u5230\u539f\u59cb\u7eb9\u7406\uff0c\u4e0b\u534a\u90e8\u5206\u663e\u793a\u4fee\u6539\u540e\u7684\u7eb9\u7406\u3002 \u5c06\u4fee\u6539\u540e\u7684\u7eb9\u7406\u5bfc\u51fa\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6253\u5f00\u4ee3\u7801\u7f16\u8f91\u5668\u8fd0\u884c\u4e00\u4e9b Python \u6765\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684 CARLA \u4eff\u771f\u4e2d\u7684\u7eb9\u7406\u3002 \u901a\u8fc7API\u66f4\u65b0\u7eb9\u7406 \u5982\u679c\u5c1a\u672a\u542f\u52a8\uff0c\u8bf7\u4ece\u547d\u4ee4\u884c\u542f\u52a8 CARLA \u4eff\u771f\uff0c\u6216\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u542f\u52a8\u4eff\u771f\u3002\u6211\u4eec\u5c06\u4f7f\u7528 Python \u56fe\u50cf\u5e93 (PIL) \u4ece\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u5bfc\u51fa\u7684\u56fe\u50cf\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7eb9\u7406\u3002 \u8fde\u63a5\u5230\u4eff\u771f\u5668 import carla from PIL import Image # Connect to client client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0) \u66f4\u65b0\u7eb9\u7406 \u52a0\u8f7d\u4fee\u6539\u540e\u7684\u56fe\u50cf\u540e\uff0c\u5b9e\u4f8b\u5316 carla.TextureColor \u5bf9\u8c61\u5e76\u586b\u5145\u52a0\u8f7d\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u6570\u636e\u3002 \u4f7f\u7528 carla.World \u5bf9\u8c61\u7684 apply_color_texture_to_object(...) \u65b9\u6cd5\u6765\u66f4\u65b0\u7eb9\u7406\u3002\u60a8\u5e94\u8be5\u5728 UE4 \u89c2\u5bdf\u8005\u89c6\u56fe\u4e2d\u770b\u5230\u7eb9\u7406\u66f4\u65b0\u3002 # Load the modified texture image = Image.open('BP_Apartment04_v05_modified.tga') height = image.size[1] width = image.size[0] # Instantiate a carla.TextureColor object and populate # the pixels with data from the modified image texture = carla.TextureColor(width ,height) for x in range(0,width): for y in range(0,height): color = image.getpixel((x,y)) r = int(color[0]) g = int(color[1]) b = int(color[2]) a = 255 texture.set(x, y, carla.Color(r,g,b,a)) # Now apply the texture to the building asset world.apply_color_texture_to_object('BP_Apartment04_v05_Opt_2', carla.MaterialParameter.Diffuse, texture) \u901a\u8fc7 API \u67e5\u627e\u5bf9\u8c61\u540d\u79f0 \u8981\u5728\u4e0d\u4f9d\u8d56\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u60c5\u51b5\u4e0b\u67e5\u627e\u5bf9\u8c61\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 world.get_names_of_all_objects() \u67e5\u8be2\u5bf9\u8c61\u540d\u79f0\u3002\u901a\u8fc7\u4f7f\u7528 Python \u7684\u5185\u7f6e filter(...) \u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5c06\u76ee\u6807\u5bf9\u8c61\u5f52\u96f6\u3002 # Filter world objects for those with 'Apartment' in the name list(filter(lambda k: 'Apartment' in k, world.get_names_of_all_objects()))","title":"\u901a\u8fc7 API \u66f4\u6539\u7eb9\u7406"},{"location":"tuto_G_texture_streaming/#api","text":"CARLA API \u53ef\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u8d44\u6e90\u7eb9\u7406\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u9009\u62e9\u8d44\u6e90\uff0c\u7136\u540e\u5728 CARLA \u4eff\u771f\u8fd0\u884c\u65f6\u4fee\u6539\u5176\u7eb9\u7406\u3002","title":"\u901a\u8fc7 API \u66f4\u6539\u7eb9\u7406"},{"location":"tuto_G_texture_streaming/#_1","text":"\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u52a0\u8f7d\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u52a0\u8f7d CARLA \u5730\u56fe\uff0c\u6309\u7167 Linux \u6216 Windows \u7684\u8bf4\u660e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u7136\u540e\u6784\u5efa\u5e76\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u8ba9\u6211\u4eec\u6253\u5f00\u52a0\u8f7d\u4e86 Town 10\uff08\u9ed8\u8ba4\u57ce\u9547\uff09\u7684\u7f16\u8f91\u5668\uff0c\u7136\u540e\u9009\u62e9\u8981\u4f7f\u7528\u7684\u5efa\u7b51\u7269\uff1a \u6211\u4eec\u9009\u62e9 BP_Apartment04_v05_Opt \u8fdb\u884c\u7eb9\u7406\u64cd\u4f5c\uff0c\u540d\u79f0\u53ef\u4ee5\u5728\u201c\u4e16\u754c\u5927\u7eb2\u89c6\u56fe(World Outliner)\u201d\u9762\u677f\u4e2d\u770b\u5230\u3002\u786e\u4fdd\u5c06\u9f20\u6807\u60ac\u505c\u5728\u4e16\u754c\u5927\u7eb2\u89c6\u56fe\u4e2d\u7684\u540d\u79f0\u4e0a\u5e76\u4f7f\u7528\u5de5\u5177\u63d0\u793a\u4e2d\u5b9a\u4e49\u7684\u540d\u79f0\u3002\u5185\u90e8\u540d\u79f0\u53ef\u80fd\u4e0e\u5217\u8868\u4e2d\u663e\u793a\u7684\u6807\u9898\u4e0d\u540c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5185\u90e8\u540d\u79f0\u5b9e\u9645\u4e0a\u662f BP_Apartment04_v05_Opt_2 \u3002","title":"\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\u8d44\u6e90"},{"location":"tuto_G_texture_streaming/#_2","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9009\u62e9\u4e86\u5efa\u7b51\u7269\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u7528\u4e8e\u63a7\u5236\u5efa\u7b51\u7269\u5916\u89c2\u7684\u7eb9\u7406\u3002\u9009\u62e9\u5efa\u7b51\u7269\u540e\uff0c\u5728\u201c\u7ec6\u8282\u201d\u9762\u677f\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u8d44\u4ea7\u7684\u4e00\u4e9b\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u4f4d\u7f6e\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u5355\u51fb\u201cStaticMesh\uff08\u7ee7\u627f\uff09\u201d\u4ee5\u6253\u5f00\u7f51\u683c\u4f53\u5c5e\u6027\uff0c\u7136\u540e\u5728\u9762\u677f\u7684\u201c\u9759\u6001\u7f51\u683c\u4f53\u201d\u90e8\u5206\u4e2d\u5355\u51fb\u653e\u5927\u955c\u56fe\u6807\u3002\u8fd9\u4f1a\u5c06\u5c5e\u4e8e\u8d44\u6e90\u7684\u6750\u8d28\u548c\u7eb9\u7406\u7f6e\u4e8e\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u7126\u70b9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u8981\u68c0\u67e5 T_Apartment04_D_Opt \u7eb9\u7406\u3002\u5982\u679c\u53cc\u51fb\u7eb9\u7406\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u68c0\u67e5\u5b83\uff0c\u4f46\u662f\uff0c\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u60f3\u8981\u5bfc\u51fa\u5b83\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u5b83\u3002\u5355\u51fb T_Apartment04_D_Opt \u5e76\u53f3\u952e\u9009\u62e9 \u8d44\u4ea7\u64cd\u4f5c > \u5bfc\u51fa \u3002\u4ee5\u9002\u5f53\u7684\u683c\u5f0f\u4fdd\u5b58\u6587\u4ef6\uff08\u6211\u4eec\u5728\u8fd9\u91cc\u9009\u62e9 TGA \u683c\u5f0f\uff09\u3002 \u5728\u60a8\u559c\u6b22\u7684\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u4e2d\u6253\u5f00\u5bfc\u51fa\u7684\u7eb9\u7406\uff0c\u5e76\u6839\u636e\u9700\u8981\u7f16\u8f91\u7eb9\u7406\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u4e0a\u534a\u90e8\u5206\u53ef\u4ee5\u770b\u5230\u539f\u59cb\u7eb9\u7406\uff0c\u4e0b\u534a\u90e8\u5206\u663e\u793a\u4fee\u6539\u540e\u7684\u7eb9\u7406\u3002 \u5c06\u4fee\u6539\u540e\u7684\u7eb9\u7406\u5bfc\u51fa\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6253\u5f00\u4ee3\u7801\u7f16\u8f91\u5668\u8fd0\u884c\u4e00\u4e9b Python \u6765\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684 CARLA \u4eff\u771f\u4e2d\u7684\u7eb9\u7406\u3002","title":"\u5bfc\u51fa\u7eb9\u7406\u4ee5\u4f9b\u4f7f\u7528"},{"location":"tuto_G_texture_streaming/#api_1","text":"\u5982\u679c\u5c1a\u672a\u542f\u52a8\uff0c\u8bf7\u4ece\u547d\u4ee4\u884c\u542f\u52a8 CARLA \u4eff\u771f\uff0c\u6216\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u542f\u52a8\u4eff\u771f\u3002\u6211\u4eec\u5c06\u4f7f\u7528 Python \u56fe\u50cf\u5e93 (PIL) \u4ece\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u5bfc\u51fa\u7684\u56fe\u50cf\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7eb9\u7406\u3002","title":"\u901a\u8fc7API\u66f4\u65b0\u7eb9\u7406"},{"location":"tuto_G_texture_streaming/#_3","text":"import carla from PIL import Image # Connect to client client = carla.Client('127.0.0.1', 2000) client.set_timeout(2.0)","title":"\u8fde\u63a5\u5230\u4eff\u771f\u5668"},{"location":"tuto_G_texture_streaming/#_4","text":"\u52a0\u8f7d\u4fee\u6539\u540e\u7684\u56fe\u50cf\u540e\uff0c\u5b9e\u4f8b\u5316 carla.TextureColor \u5bf9\u8c61\u5e76\u586b\u5145\u52a0\u8f7d\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u6570\u636e\u3002 \u4f7f\u7528 carla.World \u5bf9\u8c61\u7684 apply_color_texture_to_object(...) \u65b9\u6cd5\u6765\u66f4\u65b0\u7eb9\u7406\u3002\u60a8\u5e94\u8be5\u5728 UE4 \u89c2\u5bdf\u8005\u89c6\u56fe\u4e2d\u770b\u5230\u7eb9\u7406\u66f4\u65b0\u3002 # Load the modified texture image = Image.open('BP_Apartment04_v05_modified.tga') height = image.size[1] width = image.size[0] # Instantiate a carla.TextureColor object and populate # the pixels with data from the modified image texture = carla.TextureColor(width ,height) for x in range(0,width): for y in range(0,height): color = image.getpixel((x,y)) r = int(color[0]) g = int(color[1]) b = int(color[2]) a = 255 texture.set(x, y, carla.Color(r,g,b,a)) # Now apply the texture to the building asset world.apply_color_texture_to_object('BP_Apartment04_v05_Opt_2', carla.MaterialParameter.Diffuse, texture)","title":"\u66f4\u65b0\u7eb9\u7406"},{"location":"tuto_G_texture_streaming/#api_2","text":"\u8981\u5728\u4e0d\u4f9d\u8d56\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u60c5\u51b5\u4e0b\u67e5\u627e\u5bf9\u8c61\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 world.get_names_of_all_objects() \u67e5\u8be2\u5bf9\u8c61\u540d\u79f0\u3002\u901a\u8fc7\u4f7f\u7528 Python \u7684\u5185\u7f6e filter(...) \u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5c06\u76ee\u6807\u5bf9\u8c61\u5f52\u96f6\u3002 # Filter world objects for those with 'Apartment' in the name list(filter(lambda k: 'Apartment' in k, world.get_names_of_all_objects()))","title":"\u901a\u8fc7 API \u67e5\u627e\u5bf9\u8c61\u540d\u79f0"},{"location":"tuto_G_traffic_manager/","text":"\u4ea4\u901a\u7ba1\u7406\u5668 \u5f53\u6211\u4eec\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6765\u63a7\u5236\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u65f6\uff0c\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5fc5\u987b\u5e94\u5bf9\u7684\u5173\u952e\u6311\u6218\u4e4b\u4e00\u662f\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\u3002\u9664\u4e86\u8bc6\u522b\u548c\u5bfc\u822a\u9053\u8def\u7f51\u7edc\u62d3\u6251\u4ee5\u53ca\u7ef4\u62a4\u8f66\u9053\u89c4\u5219\u7684\u4efb\u52a1\u4e4b\u5916\uff0c\u81ea\u52a8\u9a7e\u9a76\u4ee3\u7406\u8fd8\u5fc5\u987b\u8bc6\u522b\u5176\u4ed6\u8f66\u8f86\u5e76\u9884\u6d4b\u5bf9\u5176\u8ba1\u5212\u884c\u52a8\u65b9\u6848\u7684\u5f71\u54cd\u3002CARLA \u7684\u4ea4\u901a\u7ba1\u7406\u5668\u80fd\u591f\u7ba1\u7406\u901a\u8fc7\u4eff\u771f\u5bfc\u822a\u7684\u8f66\u8f86\u7fa4\uff0c\u5e76\u4e3a\u611f\u5174\u8da3\u7684\u8f66\u8f86\uff08\u5373\u6211\u4eec\u6b63\u5728\u8bad\u7ec3\u6216\u63a7\u5236\u7684\u8f66\u8f86\uff09\u8bbe\u7f6e\u969c\u788d\u548c\u6311\u6218\u3002\u5728 CARLA \u6587\u732e\u4e2d\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u8f66\u8f86\u79f0\u4e3a\u201c\u81ea\u6211\u8f66\u8f86\u201d\u4ee5\u793a\u533a\u522b\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u7ba1\u7406\u5730\u56fe\u5185\u975e\u73a9\u5bb6\u89d2\u8272\u8f66\u8f86\u7684\u884c\u4e3a\u548c\u751f\u547d\u5468\u671f\uff0c\u7528\u8f66\u8f86\u586b\u5145\u4eff\u771f\uff0c\u5176\u884c\u4e3a\u4e0e\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\u5728\u771f\u5b9e\u9053\u8def\u7f51\u7edc\u4e0a\u7684\u884c\u4e3a\u76f8\u540c\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u4e00\u4e9b\u529f\u80fd\u4ee5\u53ca\u5982\u4f55\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u548c\u63a7\u5236\u975e\u73a9\u5bb6\u89d2\u8272\u3002 \u8bbe\u7f6e\u4eff\u771f\u5668\u5e76\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u521b\u5efa\u4e00\u4e9b\u968f\u673a\u5206\u5e03\u5728\u57ce\u5e02\u5468\u56f4\u7684\u6d41\u91cf\u3002 import carla import random # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Set up the TM in synchronous mode traffic_manager = client.get_trafficmanager() traffic_manager.set_synchronous_mode(True) # Set a seed so behaviour can be repeated if necessary traffic_manager.set_random_device_seed(0) random.seed(0) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator() \u751f\u6210\u8f66\u8f86 \u5f53\u6211\u4eec\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u65f6\uff0c\u5b83\u4eec\u9700\u8981\u4e00\u4e2a\u751f\u6210\u7684\u5730\u56fe\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u9009\u62e9\u7684\u5730\u56fe\u5750\u6807\u81ea\u884c\u5b9a\u4e49\u8fd9\u4e9b\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e2a CARLA \u5730\u56fe\u90fd\u6709\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u751f\u6210\u70b9\uff0c\u5747\u5300\u5206\u5e03\u5728\u6574\u4e2a\u9053\u8def\u7f51\u7edc\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u751f\u6210\u70b9\u6765\u751f\u6210\u6211\u4eec\u7684\u8f66\u8f86\u3002 spawn_points = world.get_map().get_spawn_points() \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CARLA \u7684\u8c03\u8bd5\u529f\u80fd\u6765\u67e5\u770b\u751f\u6210\u70b9\u5728\u54ea\u91cc\u3002\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff0c\u7136\u540e\u98de\u8fc7\u5730\u56fe\u5e76\u68c0\u67e5\u751f\u6210\u70b9\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u60f3\u8981\u9009\u62e9\u66f4\u5177\u4f53\u7684\u70b9\u7528\u4e8e\u751f\u6210\u6216\u5f15\u5bfc\u8f66\u8f86\u65f6\uff0c\u8fd9\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002 # \u5728\u5730\u56fe\u4e0a\u4ee5\u6570\u5b57\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e for i, spawn_point in enumerate(spawn_points): world.debug.draw_string(spawn_point.location, str(i), life_time=10) # \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4eff\u771f\u6765\u98de\u884c\u89c2\u5bdf\u5219\u4f1a while True: world.tick() \u73b0\u5728\u8ba9\u6211\u4eec\u751f\u6210\u4e00\u4e9b\u8f66\u8f86\u3002 # \u4ece\u84dd\u56fe\u5e93\u4e2d\u9009\u62e9\u4e00\u4e9b\u6a21\u578b models = ['dodge', 'audi', 'model3', 'mini', 'mustang', 'lincoln', 'prius', 'nissan', 'crown', 'impala'] blueprints = [] for vehicle in world.get_blueprint_library().filter('*vehicle*'): if any(model in vehicle.id for model in models): blueprints.append(vehicle) # \u8bbe\u7f6e\u8f66\u8f86\u7684\u6700\u5927\u6570\u76ee\u5e76\u51c6\u5907\u6211\u4eec\u751f\u6210\u7684\u4e00\u4e2a\u5217\u8868 max_vehicles = 50 max_vehicles = min([max_vehicles, len(spawn_points)]) vehicles = [] # \u5bf9\u751f\u6210\u70b9\u8fdb\u884c\u968f\u673a\u91c7\u6837\u5e76\u751f\u6210\u4e00\u4e9b\u8f66\u8f86\u3002 for i, spawn_point in enumerate(random.sample(spawn_points, max_vehicles)): temp = world.try_spawn_actor(random.choice(blueprints), spawn_point) if temp is not None: vehicles.append(temp) # \u8fd0\u884c\u4eff\u771f\u4ee5\u4fbf\u6211\u4eec\u80fd\u67e5\u770b\u89c2\u5bdf\u8005\u7684\u7ed3\u679c while True: world.tick() \u5982\u679c\u60a8\u73b0\u5728\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u9759\u6b62\u7684\u8f66\u8f86\u5360\u636e\u5730\u56fe\u4e2d\u7684\u9053\u8def\u3002 \u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u8f66\u8f86 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8ba9\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u6211\u4eec\u7684\u8f66\u8f86\u5e76\u8ba9\u4eff\u771f\u8fd0\u884c\u3002\u4e00\u65e6\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u4e86\u8f66\u8f86\uff0c\u5b83\u4eec\u5c31\u4f1a\u5728\u9053\u8def\u4e0a\u81ea\u4e3b\u79fb\u52a8\uff0c\u9075\u5faa\u9053\u8def\u7f51\u7edc\u7684\u7279\u5f81\uff0c\u5982\u8f66\u9053\u548c\u7ea2\u7eff\u706f\uff0c\u5e76\u907f\u514d\u4e0e\u5176\u4ed6\u8f66\u8f86\u53d1\u751f\u78b0\u649e\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u5177\u6709\u8bb8\u591a\u529f\u80fd\uff0c\u5141\u8bb8\u4fee\u6539\u6bcf\u8f86\u8f66\u7684\u7279\u5b9a\u884c\u4e3a\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u8f86\u8f66\u8bbe\u7f6e\u4e86\u5ffd\u7565\u7ea2\u7eff\u706f\u7684\u968f\u673a\u6982\u7387\uff0c\u56e0\u6b64\u6709\u4e9b\u8f66\u8f86\u4f1a\u503e\u5411\u4e8e\u5ffd\u7565\u7ea2\u7eff\u706f\uff0c\u800c\u53e6\u4e00\u4e9b\u8f66\u8f86\u5219\u4f1a\u9075\u5b88\u7ea2\u7eff\u706f\u3002\u53ef\u4ee5\u8bbe\u7f6e\u591a\u79cd\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Python API \u53c2\u8003\u3002 # \u89e3\u6790\u6240\u751f\u6210\u8f66\u8f86\u7684\u5217\u8868\u5e76\u901a\u8fc7set_autopilot()\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668 for vehicle in vehicles: vehicle.set_autopilot(True) # Randomly set the probability that a vehicle will ignore traffic lights traffic_manager.ignore_lights_percentage(vehicle, random.randint(0,50)) while True: world.tick() \u5982\u679c\u60a8\u73b0\u5728\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u60a8\u5c06\u770b\u5230\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u81ea\u52a8\u884c\u9a76\u3002 \u6307\u5b9a\u8f66\u8f86\u884c\u9a76\u8def\u7ebf \u5728\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5982\u4f55\u5728\u5730\u56fe\u4e2d\u751f\u6210\u4e00\u7ec4\u8f66\u8f86\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7684\u63a7\u5236\u6743\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u5145\u6ee1\u79fb\u52a8\u4ea4\u901a\u7684\u7e41\u5fd9\u57ce\u9547\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u5177\u6709\u66f4\u6df1\u5165\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u66f4\u7d27\u5bc6\u5730\u63a7\u5236\u8f66\u8f86\u7684\u884c\u4e3a\u3002 \u6211\u4eec\u73b0\u5728\u5c06\u4f7f\u7528 traffic_manager.set_path() \u529f\u80fd\u5f15\u5bfc\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u6cbf\u7740\u7279\u5b9a\u8def\u5f84\u884c\u9a76\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e24\u6761\u6c47\u805a\u7684\u4ea4\u901a\u6d41\uff0c\u5b83\u4eec\u5c06\u5728\u5e02\u4e2d\u5fc3\u6c47\u805a\u5e76\u9020\u6210\u62e5\u5835\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u4e9b\u8def\u5f84\u70b9\u6765\u6784\u5efa\u6211\u4eec\u7684\u8def\u5f84\u3002\u751f\u6210\u70b9\u662f\u65b9\u4fbf\u7684\u8def\u5f84\u70b9\uff0c\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CARLA \u7684\u8c03\u8bd5\u5de5\u5177\u5728\u5730\u56fe\u4e0a\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8981\u7528\u4e8e\u8def\u5f84\u7684\u751f\u6210\u70b9\u7684\u7d22\u5f15\u3002\u8be5\u51fd\u6570\u4f7f\u7528\u6307\u5b9a\u4e3a carla.Locations \u7684\u5750\u6807\u5217\u8868\u3002 # \u5728\u5730\u56fe\u4e0a\u4f7f\u7528\u6570\u5b57\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e for i, spawn_point in enumerate(spawn_points): world.debug.draw_string(spawn_point.location, str(i), life_time=10) # \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4eff\u771f\u4f7f\u89c2\u5bdf\u8005\u98de\u8fc7\u573a\u666f while True: world.tick() \u6211\u4eec\u9009\u62e9\u751f\u6210\u70b9\u548c\u8def\u5f84\u70b9\u6765\u5728\u57ce\u9547\u5185\u521b\u5efa\u4e24\u6761\u6c47\u805a\u7684\u4ea4\u901a\u6d41\uff0c\u4ece\u800c\u9020\u6210\u62e5\u5835\uff0c\u8fd9\u53ef\u80fd\u662f\u5411\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5c55\u793a\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u573a\u666f\u3002 spawn_points = world.get_map().get_spawn_points() # \u8def\u7ebf 1 spawn_point_1 = spawn_points[32] # \u4ece\u6240\u9009\u62e9\u7684\u751f\u6210\u70b9\u4e2d\u521b\u5efa\u8def\u7ebf 1 route_1_indices = [129, 28, 124, 33, 97, 119, 58, 154, 147] route_1 = [] for ind in route_1_indices: route_1.append(spawn_points[ind].location) # \u8def\u7ebf 2 spawn_point_2 = spawn_points[149] # \u4ece\u6240\u9009\u62e9\u7684\u751f\u6210\u70b9\u4e2d\u521b\u5efa\u8def\u7ebf 2 route_2_indices = [21, 76, 38, 34, 90, 3] route_2 = [] for ind in route_2_indices: route_2.append(spawn_points[ind].location) # \u73b0\u5728\u8ba9\u6211\u4eec\u5728\u5730\u56fe\u4e0a\u6253\u5370\u51fa\u5b83\u4eec\uff0c\u4ee5\u4fbf\u6211\u4eec\u80fd\u770b\u5230\u6211\u4eec\u7684\u8def\u5f84 world.debug.draw_string(spawn_point_1.location, 'Spawn point 1', life_time=30, color=carla.Color(255,0,0)) world.debug.draw_string(spawn_point_2.location, 'Spawn point 2', life_time=30, color=carla.Color(0,0,255)) for ind in route_1_indices: spawn_points[ind].location world.debug.draw_string(spawn_points[ind].location, str(ind), life_time=60, color=carla.Color(255,0,0)) for ind in route_2_indices: spawn_points[ind].location world.debug.draw_string(spawn_points[ind].location, str(ind), life_time=60, color=carla.Color(0,0,255)) while True: world.tick() \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9009\u62e9\u4e86\u751f\u6210\u70b9\u548c\u8def\u5f84\u70b9\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u751f\u6210\u4ea4\u901a\u5e76\u5c06\u751f\u6210\u7684\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u9075\u5faa\u6211\u4eec\u7684\u8def\u5f84\u70b9\u5217\u8868\u3002 # \u5728\u751f\u6210\u65f6\u95f4\u4e4b\u95f4\u8bbe\u7f6e\u5ef6\u8fdf\u4ee5\u521b\u5efa\u7a7a\u9699 spawn_delay = 20 counter = spawn_delay # \u8bbe\u7f6e\u6700\u5927\u8f66\u8f86\uff08\u4e3a\u66f4\u4f4e\u7684\u786c\u4ef6\u8bbe\u7f6e\u66f4\u5c0f\u7684\u503c\uff09 max_vehicles = 200 # \u5728\u751f\u6210\u70b9\u4e4b\u95f4\u8f6e\u6d41 alt = False spawn_points = world.get_map().get_spawn_points() while True: world.tick() n_vehicles = len(world.get_actors().filter('*vehicle*')) vehicle_bp = random.choice(blueprints) # \u4ec5\u5728\u5ef6\u8fdf\u4e4b\u540e\u751f\u6210\u8f66\u8f86 if counter == spawn_delay and n_vehicles < max_vehicles: # Alternate spawn points if alt: vehicle = world.try_spawn_actor(vehicle_bp, spawn_point_1) else: vehicle = world.try_spawn_actor(vehicle_bp, spawn_point_2) if vehicle: # \u5982\u679c\u8f66\u8f86\u6210\u529f\u751f\u6210 vehicle.set_autopilot(True) # \u5c06\u8f66\u8f86\u7684\u63a7\u5236\u5168\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668 # \u8bbe\u7f6e\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u63a7\u5236\u7684\u53c2\u6570\uff0c\u6211\u4eec\u4e0d\u60f3\u53d8\u9053 traffic_manager.update_vehicle_lights(vehicle, True) traffic_manager.random_left_lanechange_percentage(vehicle, 0) traffic_manager.random_right_lanechange_percentage(vehicle, 0) traffic_manager.auto_lane_change(vehicle, False) # \u5728\u751f\u6210\u70b9\u4e4b\u95f4\u8f6e\u6d41 if alt: traffic_manager.set_path(vehicle, route_1) alt = False else: traffic_manager.set_path(vehicle, route_2) alt = True vehicle = None counter -= 1 elif counter > 0: counter -= 1 elif counter == 0: counter = spawn_delay \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u4ea4\u901a\u7ba1\u7406\u5668 set_path() \u529f\u80fd\u7684\u5f15\u5bfc\u4e0b\u521b\u5efa\u4e86\u6765\u81ea\u5730\u56fe\u4e24\u4fa7\u7684\u4e24\u4e2a\u6c47\u805a\u7684\u6d41\u91cf\u6d41\u3002\u8fd9\u5bfc\u81f4\u5e02\u4e2d\u5fc3\u9053\u8def\u62e5\u5835\u3002\u8fd9\u79cd\u6280\u672f\u53ef\u4ee5\u66f4\u5927\u89c4\u6a21\u5730\u7528\u4e8e\u4eff\u771f\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u591a\u79cd\u68d8\u624b\u60c5\u51b5\uff0c\u4f8b\u5982\u7e41\u5fd9\u7684\u73af\u5c9b\u6216\u9ad8\u901f\u516c\u8def\u4ea4\u53c9\u53e3\u3002","title":"\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"tuto_G_traffic_manager/#_1","text":"\u5f53\u6211\u4eec\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6765\u63a7\u5236\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u65f6\uff0c\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5fc5\u987b\u5e94\u5bf9\u7684\u5173\u952e\u6311\u6218\u4e4b\u4e00\u662f\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\u3002\u9664\u4e86\u8bc6\u522b\u548c\u5bfc\u822a\u9053\u8def\u7f51\u7edc\u62d3\u6251\u4ee5\u53ca\u7ef4\u62a4\u8f66\u9053\u89c4\u5219\u7684\u4efb\u52a1\u4e4b\u5916\uff0c\u81ea\u52a8\u9a7e\u9a76\u4ee3\u7406\u8fd8\u5fc5\u987b\u8bc6\u522b\u5176\u4ed6\u8f66\u8f86\u5e76\u9884\u6d4b\u5bf9\u5176\u8ba1\u5212\u884c\u52a8\u65b9\u6848\u7684\u5f71\u54cd\u3002CARLA \u7684\u4ea4\u901a\u7ba1\u7406\u5668\u80fd\u591f\u7ba1\u7406\u901a\u8fc7\u4eff\u771f\u5bfc\u822a\u7684\u8f66\u8f86\u7fa4\uff0c\u5e76\u4e3a\u611f\u5174\u8da3\u7684\u8f66\u8f86\uff08\u5373\u6211\u4eec\u6b63\u5728\u8bad\u7ec3\u6216\u63a7\u5236\u7684\u8f66\u8f86\uff09\u8bbe\u7f6e\u969c\u788d\u548c\u6311\u6218\u3002\u5728 CARLA \u6587\u732e\u4e2d\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u8f66\u8f86\u79f0\u4e3a\u201c\u81ea\u6211\u8f66\u8f86\u201d\u4ee5\u793a\u533a\u522b\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u7ba1\u7406\u5730\u56fe\u5185\u975e\u73a9\u5bb6\u89d2\u8272\u8f66\u8f86\u7684\u884c\u4e3a\u548c\u751f\u547d\u5468\u671f\uff0c\u7528\u8f66\u8f86\u586b\u5145\u4eff\u771f\uff0c\u5176\u884c\u4e3a\u4e0e\u5176\u4ed6\u9053\u8def\u4f7f\u7528\u8005\u5728\u771f\u5b9e\u9053\u8def\u7f51\u7edc\u4e0a\u7684\u884c\u4e3a\u76f8\u540c\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4ea4\u901a\u7ba1\u7406\u5668\u7684\u4e00\u4e9b\u529f\u80fd\u4ee5\u53ca\u5982\u4f55\u5728\u4eff\u771f\u4e2d\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u548c\u63a7\u5236\u975e\u73a9\u5bb6\u89d2\u8272\u3002","title":"\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"tuto_G_traffic_manager/#_2","text":"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668\u5e76\u521b\u5efa\u4e00\u4e9b\u968f\u673a\u5206\u5e03\u5728\u57ce\u5e02\u5468\u56f4\u7684\u6d41\u91cf\u3002 import carla import random # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() # Set up the simulator in synchronous mode settings = world.get_settings() settings.synchronous_mode = True # Enables synchronous mode settings.fixed_delta_seconds = 0.05 world.apply_settings(settings) # Set up the TM in synchronous mode traffic_manager = client.get_trafficmanager() traffic_manager.set_synchronous_mode(True) # Set a seed so behaviour can be repeated if necessary traffic_manager.set_random_device_seed(0) random.seed(0) # We will aslo set up the spectator so we can see what we do spectator = world.get_spectator()","title":"\u8bbe\u7f6e\u4eff\u771f\u5668\u5e76\u521d\u59cb\u5316\u4ea4\u901a\u7ba1\u7406\u5668"},{"location":"tuto_G_traffic_manager/#_3","text":"\u5f53\u6211\u4eec\u521b\u5efa\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u65f6\uff0c\u5b83\u4eec\u9700\u8981\u4e00\u4e2a\u751f\u6210\u7684\u5730\u56fe\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u9009\u62e9\u7684\u5730\u56fe\u5750\u6807\u81ea\u884c\u5b9a\u4e49\u8fd9\u4e9b\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e2a CARLA \u5730\u56fe\u90fd\u6709\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u751f\u6210\u70b9\uff0c\u5747\u5300\u5206\u5e03\u5728\u6574\u4e2a\u9053\u8def\u7f51\u7edc\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u751f\u6210\u70b9\u6765\u751f\u6210\u6211\u4eec\u7684\u8f66\u8f86\u3002 spawn_points = world.get_map().get_spawn_points() \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CARLA \u7684\u8c03\u8bd5\u529f\u80fd\u6765\u67e5\u770b\u751f\u6210\u70b9\u5728\u54ea\u91cc\u3002\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff0c\u7136\u540e\u98de\u8fc7\u5730\u56fe\u5e76\u68c0\u67e5\u751f\u6210\u70b9\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u60f3\u8981\u9009\u62e9\u66f4\u5177\u4f53\u7684\u70b9\u7528\u4e8e\u751f\u6210\u6216\u5f15\u5bfc\u8f66\u8f86\u65f6\uff0c\u8fd9\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002 # \u5728\u5730\u56fe\u4e0a\u4ee5\u6570\u5b57\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e for i, spawn_point in enumerate(spawn_points): world.debug.draw_string(spawn_point.location, str(i), life_time=10) # \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4eff\u771f\u6765\u98de\u884c\u89c2\u5bdf\u5219\u4f1a while True: world.tick() \u73b0\u5728\u8ba9\u6211\u4eec\u751f\u6210\u4e00\u4e9b\u8f66\u8f86\u3002 # \u4ece\u84dd\u56fe\u5e93\u4e2d\u9009\u62e9\u4e00\u4e9b\u6a21\u578b models = ['dodge', 'audi', 'model3', 'mini', 'mustang', 'lincoln', 'prius', 'nissan', 'crown', 'impala'] blueprints = [] for vehicle in world.get_blueprint_library().filter('*vehicle*'): if any(model in vehicle.id for model in models): blueprints.append(vehicle) # \u8bbe\u7f6e\u8f66\u8f86\u7684\u6700\u5927\u6570\u76ee\u5e76\u51c6\u5907\u6211\u4eec\u751f\u6210\u7684\u4e00\u4e2a\u5217\u8868 max_vehicles = 50 max_vehicles = min([max_vehicles, len(spawn_points)]) vehicles = [] # \u5bf9\u751f\u6210\u70b9\u8fdb\u884c\u968f\u673a\u91c7\u6837\u5e76\u751f\u6210\u4e00\u4e9b\u8f66\u8f86\u3002 for i, spawn_point in enumerate(random.sample(spawn_points, max_vehicles)): temp = world.try_spawn_actor(random.choice(blueprints), spawn_point) if temp is not None: vehicles.append(temp) # \u8fd0\u884c\u4eff\u771f\u4ee5\u4fbf\u6211\u4eec\u80fd\u67e5\u770b\u89c2\u5bdf\u8005\u7684\u7ed3\u679c while True: world.tick() \u5982\u679c\u60a8\u73b0\u5728\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u9759\u6b62\u7684\u8f66\u8f86\u5360\u636e\u5730\u56fe\u4e2d\u7684\u9053\u8def\u3002","title":"\u751f\u6210\u8f66\u8f86"},{"location":"tuto_G_traffic_manager/#_4","text":"\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8ba9\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u6211\u4eec\u7684\u8f66\u8f86\u5e76\u8ba9\u4eff\u771f\u8fd0\u884c\u3002\u4e00\u65e6\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u4e86\u8f66\u8f86\uff0c\u5b83\u4eec\u5c31\u4f1a\u5728\u9053\u8def\u4e0a\u81ea\u4e3b\u79fb\u52a8\uff0c\u9075\u5faa\u9053\u8def\u7f51\u7edc\u7684\u7279\u5f81\uff0c\u5982\u8f66\u9053\u548c\u7ea2\u7eff\u706f\uff0c\u5e76\u907f\u514d\u4e0e\u5176\u4ed6\u8f66\u8f86\u53d1\u751f\u78b0\u649e\u3002 \u4ea4\u901a\u7ba1\u7406\u5668\u5177\u6709\u8bb8\u591a\u529f\u80fd\uff0c\u5141\u8bb8\u4fee\u6539\u6bcf\u8f86\u8f66\u7684\u7279\u5b9a\u884c\u4e3a\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e3a\u6bcf\u8f86\u8f66\u8bbe\u7f6e\u4e86\u5ffd\u7565\u7ea2\u7eff\u706f\u7684\u968f\u673a\u6982\u7387\uff0c\u56e0\u6b64\u6709\u4e9b\u8f66\u8f86\u4f1a\u503e\u5411\u4e8e\u5ffd\u7565\u7ea2\u7eff\u706f\uff0c\u800c\u53e6\u4e00\u4e9b\u8f66\u8f86\u5219\u4f1a\u9075\u5b88\u7ea2\u7eff\u706f\u3002\u53ef\u4ee5\u8bbe\u7f6e\u591a\u79cd\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Python API \u53c2\u8003\u3002 # \u89e3\u6790\u6240\u751f\u6210\u8f66\u8f86\u7684\u5217\u8868\u5e76\u901a\u8fc7set_autopilot()\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668 for vehicle in vehicles: vehicle.set_autopilot(True) # Randomly set the probability that a vehicle will ignore traffic lights traffic_manager.ignore_lights_percentage(vehicle, random.randint(0,50)) while True: world.tick() \u5982\u679c\u60a8\u73b0\u5728\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u60a8\u5c06\u770b\u5230\u8f66\u8f86\u5728\u5730\u56fe\u4e0a\u81ea\u52a8\u884c\u9a76\u3002","title":"\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u63a7\u5236\u8f66\u8f86"},{"location":"tuto_G_traffic_manager/#_5","text":"\u5728\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5982\u4f55\u5728\u5730\u56fe\u4e2d\u751f\u6210\u4e00\u7ec4\u8f66\u8f86\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7684\u63a7\u5236\u6743\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u5145\u6ee1\u79fb\u52a8\u4ea4\u901a\u7684\u7e41\u5fd9\u57ce\u9547\u3002\u4ea4\u901a\u7ba1\u7406\u5668\u5177\u6709\u66f4\u6df1\u5165\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u66f4\u7d27\u5bc6\u5730\u63a7\u5236\u8f66\u8f86\u7684\u884c\u4e3a\u3002 \u6211\u4eec\u73b0\u5728\u5c06\u4f7f\u7528 traffic_manager.set_path() \u529f\u80fd\u5f15\u5bfc\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u6cbf\u7740\u7279\u5b9a\u8def\u5f84\u884c\u9a76\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e24\u6761\u6c47\u805a\u7684\u4ea4\u901a\u6d41\uff0c\u5b83\u4eec\u5c06\u5728\u5e02\u4e2d\u5fc3\u6c47\u805a\u5e76\u9020\u6210\u62e5\u5835\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u4e9b\u8def\u5f84\u70b9\u6765\u6784\u5efa\u6211\u4eec\u7684\u8def\u5f84\u3002\u751f\u6210\u70b9\u662f\u65b9\u4fbf\u7684\u8def\u5f84\u70b9\uff0c\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CARLA \u7684\u8c03\u8bd5\u5de5\u5177\u5728\u5730\u56fe\u4e0a\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u4e0e\u89c2\u5bdf\u8005\u4e00\u8d77\u98de\u8fc7\u5730\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8981\u7528\u4e8e\u8def\u5f84\u7684\u751f\u6210\u70b9\u7684\u7d22\u5f15\u3002\u8be5\u51fd\u6570\u4f7f\u7528\u6307\u5b9a\u4e3a carla.Locations \u7684\u5750\u6807\u5217\u8868\u3002 # \u5728\u5730\u56fe\u4e0a\u4f7f\u7528\u6570\u5b57\u7ed8\u5236\u751f\u6210\u70b9\u7684\u4f4d\u7f6e for i, spawn_point in enumerate(spawn_points): world.debug.draw_string(spawn_point.location, str(i), life_time=10) # \u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4eff\u771f\u4f7f\u89c2\u5bdf\u8005\u98de\u8fc7\u573a\u666f while True: world.tick() \u6211\u4eec\u9009\u62e9\u751f\u6210\u70b9\u548c\u8def\u5f84\u70b9\u6765\u5728\u57ce\u9547\u5185\u521b\u5efa\u4e24\u6761\u6c47\u805a\u7684\u4ea4\u901a\u6d41\uff0c\u4ece\u800c\u9020\u6210\u62e5\u5835\uff0c\u8fd9\u53ef\u80fd\u662f\u5411\u81ea\u52a8\u9a7e\u9a76\u667a\u80fd\u4f53\u5c55\u793a\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u573a\u666f\u3002 spawn_points = world.get_map().get_spawn_points() # \u8def\u7ebf 1 spawn_point_1 = spawn_points[32] # \u4ece\u6240\u9009\u62e9\u7684\u751f\u6210\u70b9\u4e2d\u521b\u5efa\u8def\u7ebf 1 route_1_indices = [129, 28, 124, 33, 97, 119, 58, 154, 147] route_1 = [] for ind in route_1_indices: route_1.append(spawn_points[ind].location) # \u8def\u7ebf 2 spawn_point_2 = spawn_points[149] # \u4ece\u6240\u9009\u62e9\u7684\u751f\u6210\u70b9\u4e2d\u521b\u5efa\u8def\u7ebf 2 route_2_indices = [21, 76, 38, 34, 90, 3] route_2 = [] for ind in route_2_indices: route_2.append(spawn_points[ind].location) # \u73b0\u5728\u8ba9\u6211\u4eec\u5728\u5730\u56fe\u4e0a\u6253\u5370\u51fa\u5b83\u4eec\uff0c\u4ee5\u4fbf\u6211\u4eec\u80fd\u770b\u5230\u6211\u4eec\u7684\u8def\u5f84 world.debug.draw_string(spawn_point_1.location, 'Spawn point 1', life_time=30, color=carla.Color(255,0,0)) world.debug.draw_string(spawn_point_2.location, 'Spawn point 2', life_time=30, color=carla.Color(0,0,255)) for ind in route_1_indices: spawn_points[ind].location world.debug.draw_string(spawn_points[ind].location, str(ind), life_time=60, color=carla.Color(255,0,0)) for ind in route_2_indices: spawn_points[ind].location world.debug.draw_string(spawn_points[ind].location, str(ind), life_time=60, color=carla.Color(0,0,255)) while True: world.tick() \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9009\u62e9\u4e86\u751f\u6210\u70b9\u548c\u8def\u5f84\u70b9\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u751f\u6210\u4ea4\u901a\u5e76\u5c06\u751f\u6210\u7684\u8f66\u8f86\u8bbe\u7f6e\u4e3a\u9075\u5faa\u6211\u4eec\u7684\u8def\u5f84\u70b9\u5217\u8868\u3002 # \u5728\u751f\u6210\u65f6\u95f4\u4e4b\u95f4\u8bbe\u7f6e\u5ef6\u8fdf\u4ee5\u521b\u5efa\u7a7a\u9699 spawn_delay = 20 counter = spawn_delay # \u8bbe\u7f6e\u6700\u5927\u8f66\u8f86\uff08\u4e3a\u66f4\u4f4e\u7684\u786c\u4ef6\u8bbe\u7f6e\u66f4\u5c0f\u7684\u503c\uff09 max_vehicles = 200 # \u5728\u751f\u6210\u70b9\u4e4b\u95f4\u8f6e\u6d41 alt = False spawn_points = world.get_map().get_spawn_points() while True: world.tick() n_vehicles = len(world.get_actors().filter('*vehicle*')) vehicle_bp = random.choice(blueprints) # \u4ec5\u5728\u5ef6\u8fdf\u4e4b\u540e\u751f\u6210\u8f66\u8f86 if counter == spawn_delay and n_vehicles < max_vehicles: # Alternate spawn points if alt: vehicle = world.try_spawn_actor(vehicle_bp, spawn_point_1) else: vehicle = world.try_spawn_actor(vehicle_bp, spawn_point_2) if vehicle: # \u5982\u679c\u8f66\u8f86\u6210\u529f\u751f\u6210 vehicle.set_autopilot(True) # \u5c06\u8f66\u8f86\u7684\u63a7\u5236\u5168\u4ea4\u7ed9\u4ea4\u901a\u7ba1\u7406\u5668 # \u8bbe\u7f6e\u4ea4\u901a\u7ba1\u7406\u5668\u8f66\u8f86\u63a7\u5236\u7684\u53c2\u6570\uff0c\u6211\u4eec\u4e0d\u60f3\u53d8\u9053 traffic_manager.update_vehicle_lights(vehicle, True) traffic_manager.random_left_lanechange_percentage(vehicle, 0) traffic_manager.random_right_lanechange_percentage(vehicle, 0) traffic_manager.auto_lane_change(vehicle, False) # \u5728\u751f\u6210\u70b9\u4e4b\u95f4\u8f6e\u6d41 if alt: traffic_manager.set_path(vehicle, route_1) alt = False else: traffic_manager.set_path(vehicle, route_2) alt = True vehicle = None counter -= 1 elif counter > 0: counter -= 1 elif counter == 0: counter = spawn_delay \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u4ea4\u901a\u7ba1\u7406\u5668 set_path() \u529f\u80fd\u7684\u5f15\u5bfc\u4e0b\u521b\u5efa\u4e86\u6765\u81ea\u5730\u56fe\u4e24\u4fa7\u7684\u4e24\u4e2a\u6c47\u805a\u7684\u6d41\u91cf\u6d41\u3002\u8fd9\u5bfc\u81f4\u5e02\u4e2d\u5fc3\u9053\u8def\u62e5\u5835\u3002\u8fd9\u79cd\u6280\u672f\u53ef\u4ee5\u66f4\u5927\u89c4\u6a21\u5730\u7528\u4e8e\u4eff\u771f\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u7684\u591a\u79cd\u68d8\u624b\u60c5\u51b5\uff0c\u4f8b\u5982\u7e41\u5fd9\u7684\u73af\u5c9b\u6216\u9ad8\u901f\u516c\u8def\u4ea4\u53c9\u53e3\u3002","title":"\u6307\u5b9a\u8f66\u8f86\u884c\u9a76\u8def\u7ebf"},{"location":"tuto_M_add_map_alternative/","text":"\u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5 \u672c\u6307\u5357\u4ecb\u7ecd\u4e86\u5c06\u5730\u56fe\u5bfc\u5165 CARLA \u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6d89\u53ca\u6bd4 \u5305 \u548c \u6e90\u4ee3\u7801 \u5bfc\u5165\u6307\u5357\u4e2d\u63cf\u8ff0\u7684\u8fc7\u7a0b\u66f4\u591a\u7684\u624b\u52a8\u6b65\u9aa4\u3002\u9996\u5148\u6211\u4eec\u5c06\u4ecb\u7ecd RoadRuner \u63d2\u4ef6\uff0c\u7136\u540e\u4ecb\u7ecd\u624b\u52a8\u5bfc\u5165\u65b9\u6cd5\u3002 RoadRunner \u63d2\u4ef6\u5bfc\u5165 \u624b\u52a8\u5bfc\u5165 RoadRunner \u63d2\u4ef6\u5bfc\u5165 MathWorks \u7684 RoadRunner \u8f6f\u4ef6\u63d0\u4f9b\u4e86\u865a\u5e7b\u5f15\u64ce\u63d2\u4ef6\uff0c\u4ee5\u5e2e\u52a9\u7b80\u5316\u5c06\u5730\u56fe\u5bfc\u5165 CARLA \u7684\u8fc7\u7a0b\u3002 \u63d2\u4ef6\u5b89\u88c5 1. \u63d2\u4ef6\u53ef\u4ece MathWorks \u7f51\u7ad9 \u4e0b\u8f7d\u3002MathWorks \u8fd8\u6709\u4e00\u4e2a \u5b8c\u6574\u7684\u6559\u7a0b \uff0c\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u63d2\u4ef6\u5c06\u5730\u56fe\u5bfc\u5165 CARLA\u3002 2. \u89e3\u538b\u4e0b\u8f7d\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u5e76\u5c06 RoadRunnerImporter \u548c RoadRunnerMaterials \u6587\u4ef6\u5939\u79fb\u52a8\u5230 <carla>/Unreal/CarlaUE4/Plugins/ \u3002 3. \u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u91cd\u5efa\u63d2\u4ef6\uff1a \u5728 Windows \u4e0a\u3002 \u53f3\u952e\u5355\u51fb <carla>/Unreal/CarlaUE4 \u4e2d\u7684 .uproject \u6587\u4ef6\uff0c\u5e76\u9009\u62e9 Generate Visual Studio project files \u3002 \u5728 CARLA \u7684\u6839\u6587\u4ef6\u5939\u4e2d\uff0c\u8fd0\u884c\u547d\u4ee4\uff1a make launch \u5728 Linux \u4e0a\u3002 \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a UE4_ROOT/GenerateProjectFiles.sh -project=\"carla/Unreal/CarlaUE4/CarlaUE4.uproject\" -game -engine 4. \u5728\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u4e2d\uff0c\u786e\u4fdd\u9009\u4e2d\u4e24\u4e2a\u63d2\u4ef6\u7684\u590d\u9009\u6846 Edit > Plugins \u9009\u4e2d\u3002 \u5bfc\u5165\u5730\u56fe 1. \u4f7f\u7528 Import \u6309\u94ae\u5c06 <mapName>.fbx \u6587\u4ef6\u5bfc\u5165\u5230 /Content/Carla/Maps \u4e0b\u9762\u7684\u65b0\u6587\u4ef6\u5939\u4e2d\u3002 2. \u5c06 Scene > Hierarchy Type \u8bbe\u7f6e\u4e3a Create One Blueprint Asset \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\u3002 3. \u5c06 Static Meshes > Normal Import Method \u8bbe\u7f6e\u4e3a Import Normals \u3002 4. \u70b9\u51fb Import \u3002 5. \u4fdd\u5b58\u5f53\u524d\u5173\u5361 File -> Save Current As... -> <mapname> \u3002 \u65b0\u5730\u56fe\u73b0\u5728\u5e94\u8be5\u51fa\u73b0\u5728\u865a\u5e7b\u5f15\u64ce \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u5176\u4ed6\u5730\u56fe\u7684\u65c1\u8fb9\u3002 \u7b14\u8bb0 \u8bed\u4e49\u5206\u5272\u7684\u6807\u7b7e\u5c06\u6839\u636e\u8d44\u4ea7\u540d\u79f0\u5206\u914d\u3002\u8be5\u8d44\u6e90\u5c06\u88ab\u79fb\u52a8\u5230 Content/Carla/PackageName/Static \u4e2d\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u4e2d\u3002\u8981\u66f4\u6539\u8fd9\u4e9b\uff0c\u8bf7\u5728\u5bfc\u5165\u540e\u624b\u52a8\u79fb\u52a8\u5b83\u4eec\u3002 \u624b\u52a8\u5bfc\u5165 \u8fd9\u79cd\u5bfc\u5165\u5730\u56fe\u7684\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u901a\u7528 .fbx \u548c .xodr \u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\u3002\u5982\u679c\u60a8\u4f7f\u7528 RoadRunner\uff0c\u5219\u5e94\u4f7f\u7528 Firebox (.fbx) \u3001 OpenDRIVE (.xodr) \u6216 Unreal (.fbx + .xml) \u5bfc\u51fa\u65b9\u6cd5\u3002\u4e0d\u8981\u4f7f\u7528\u8be5 Carla Exporter \u9009\u9879\uff0c\u56e0\u4e3a\u60a8\u5c06\u9047\u5230 .fbx \u6587\u4ef6\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u8981\u5c06\u5730\u56fe\u624b\u52a8\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\uff1a 1. \u5728\u7cfb\u7edf\u7684\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\uff0c\u5c06 .xodr \u6587\u4ef6\u590d\u5236\u5230 <carla-root>/Unreal/CarlaUE4/Content/Carla/Maps/OpenDrive \u3002 2. \u901a\u8fc7\u5728 carla \u6839\u76ee\u5f55\u4e2d\u8fd0\u884c make launch \u6765\u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u3002\u5728\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u5230 Content/Carla/Maps/BaseMap \u5e76\u590d\u5236 BaseMap \u3002\u8fd9\u5c06\u63d0\u4f9b\u5e26\u6709\u9ed8\u8ba4\u5929\u7a7a\u548c\u7167\u660e\u5bf9\u8c61\u7684\u7a7a\u767d\u5730\u56fe\u3002 3. \u5728\u76ee\u5f55 Content/Carla/Maps \u4e2d\u521b\u5efa\u4e00\u4e2a\u4ee5\u60a8\u7684\u5730\u56fe\u5305\u540d\u79f0\u547d\u540d\u7684\u65b0\u6587\u4ef6\u5939\uff0c\u5e76\u4ee5\u4e0e\u60a8\u7684 .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u7684\u540d\u79f0\u4fdd\u5b58\u590d\u5236\u7684\u5730\u56fe\u3002 4. \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u56de Content/Carla/Maps \u3002\u53f3\u952e\u5355\u51fb\u7070\u8272\u533a\u57df\u5e76\u5728\u6807\u9898 Import Asset \u4e0b\u9009\u62e9 Import to /Game/Carla/Maps... \u3002 5. \u5728\u5f39\u51fa\u7684\u914d\u7f6e\u7a97\u53e3\u4e2d\uff0c\u786e\u4fdd\uff1a \u8fd9\u4e9b\u9009\u9879\u672a\u9009\u4e2d\uff1a \u81ea\u52a8\u751f\u6210\u78b0\u649e(Auto Generate Collision) \u7ec4\u5408\u7f51\u683c(Combine Meshes) Force Front xAxis \u5728\u4ee5\u4e0b\u4e0b\u62c9\u5217\u8868\u4e2d\uff0c\u9009\u62e9\u76f8\u5e94\u7684\u9009\u9879\uff1a \u6cd5\u7ebf\u5bfc\u5165\u65b9\u6cd5 - Import Normals \u6750\u8d28\u5bfc\u5165\u65b9\u6cd5 - Create New Materials \u68c0\u67e5\u8fd9\u4e9b\u9009\u9879\uff1a Convert Scene Unit Import Textures 6. \u5355\u51fb Import \u3002 7. \u7f51\u683c\u5c06\u51fa\u73b0\u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u3002\u9009\u62e9\u7f51\u683c\u5e76\u5c06\u5b83\u4eec\u62d6\u5230\u573a\u666f\u4e2d\u3002 8. \u5c06\u7f51\u683c\u7f6e\u4e8e 0,0,0 \u4e2d\u5fc3\u3002 9. \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u9009\u62e9\u6240\u6709\u9700\u8981\u6709\u78b0\u649e\u5668\u7684\u7f51\u683c\u4f53\u3002\u8fd9\u662f\u6307\u4e0e\u884c\u4eba\u6216\u8f66\u8f86\u4ea4\u4e92\u7684\u4efb\u4f55\u7f51\u683c\u3002\u78b0\u649e\u5668\u9632\u6b62\u4ed6\u4eec\u6389\u5165\u6df1\u6e0a\u3002\u53f3\u952e\u5355\u51fb\u9009\u5b9a\u7684\u7f51\u683c\u5e76\u9009\u62e9 Asset Actions > Bulk Edit via Property Matrix... \u3002 10. \u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22 \u78b0\u649e(collision) \u3002 11. \u5c06 Collision Complexity \u4ece Project Default \u6539\u4e3a Use Complex Collision As Simple \u5e76\u5173\u95ed\u7a97\u53e3\u3002 12. \u6309 Alt + c \u786e\u8ba4\u78b0\u649e\u8bbe\u7f6e\u5df2\u6b63\u786e\u5e94\u7528\u3002\u60a8\u4f1a\u5728\u7f51\u683c\u4e0a\u770b\u5230\u9ed1\u8272\u7684\u7f51\u3002 13. \u8981\u4e3a\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u521b\u5efa\u771f\u5b9e\u6570\u636e\uff0c\u8bf7\u5c06\u9759\u6001\u7f51\u683c\u7269\u4f53\u79fb\u52a8\u5230 Carla/Static/<segment> \u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\u7684\u76f8\u5e94\u6587\u4ef6\u5939\uff1a Content \u2514\u2500\u2500 Carla \u251c\u2500\u2500 Blueprints \u251c\u2500\u2500 Config \u251c\u2500\u2500 Exported Maps \u251c\u2500\u2500 HDMaps \u251c\u2500\u2500 Maps \u2514\u2500\u2500 Static \u251c\u2500\u2500 Terrain \u2502 \u2514\u2500\u2500 mapname \u2502 \u2514\u2500\u2500 Static Meshes \u2502 \u251c\u2500\u2500 Road \u2502 \u2514\u2500\u2500 mapname \u2502 \u2514\u2500\u2500 Static Meshes \u2502 \u251c\u2500\u2500 RoadLines | \u2514\u2500\u2500 mapname | \u2514\u2500\u2500 Static Meshes \u2514\u2500\u2500 Sidewalks \u2514\u2500\u2500 mapname \u2514\u2500\u2500 Static Meshes 14. \u5728 \u201c\u6a21\u5f0f(Modes)\u201d \u9762\u677f\u4e2d\uff0c\u641c\u7d22 Open Drive Actor \u5e76\u5c06\u5176\u62d6\u5230\u573a\u666f\u4e2d\u3002 15. \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\uff0c\u9009\u4e2d Add Spawners \u5e76\u5355\u51fb Generate Routes \u65c1\u8fb9\u7684\u6846\u3002\u8fd9\u5c06\u5728 <carla-root>/Unreal/CarlaUE4/Content/Carla/Maps/OpenDrive \u76ee\u5f55\u4e2d\u627e\u5230\u5177\u6709\u76f8\u540c\u5730\u56fe\u540d\u79f0\u7684 .xodr \u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u751f\u6210\u4e00\u7cfb\u5217 RoutePlanner \u548c VehicleSpawnPoint \u53c2\u4e0e\u8005\u3002 \u4e0b\u4e00\u6b65 \u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f\u3002\u4ece\u8fd9\u91cc\uff0c\u60a8\u5c06\u80fd\u591f\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6570\u636e\u3002\u6211\u4eec\u5efa\u8bae\u5728\u6240\u6709\u81ea\u5b9a\u4e49\u5b8c\u6210\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u969c\u788d\u7269\u963b\u6321\u884c\u4eba\u8def\u5f84\u3002 CARLA \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5efa\u8bae\u4f7f\u7528 CARLA \u5305 \u548c CARLA \u6e90\u4ee3\u7801\u6784\u5efa \u6307\u5357\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u7684\u81ea\u52a8\u5316\u6d41\u7a0b\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u4f46\u662f\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528\u672c\u8282\u4e2d\u5217\u51fa\u7684\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u5728\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\u65f6\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002","title":"\u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5"},{"location":"tuto_M_add_map_alternative/#_1","text":"\u672c\u6307\u5357\u4ecb\u7ecd\u4e86\u5c06\u5730\u56fe\u5bfc\u5165 CARLA \u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6d89\u53ca\u6bd4 \u5305 \u548c \u6e90\u4ee3\u7801 \u5bfc\u5165\u6307\u5357\u4e2d\u63cf\u8ff0\u7684\u8fc7\u7a0b\u66f4\u591a\u7684\u624b\u52a8\u6b65\u9aa4\u3002\u9996\u5148\u6211\u4eec\u5c06\u4ecb\u7ecd RoadRuner \u63d2\u4ef6\uff0c\u7136\u540e\u4ecb\u7ecd\u624b\u52a8\u5bfc\u5165\u65b9\u6cd5\u3002 RoadRunner \u63d2\u4ef6\u5bfc\u5165 \u624b\u52a8\u5bfc\u5165","title":"\u5bfc\u5165\u5730\u56fe\u7684\u66ff\u4ee3\u65b9\u6cd5"},{"location":"tuto_M_add_map_alternative/#roadrunner","text":"MathWorks \u7684 RoadRunner \u8f6f\u4ef6\u63d0\u4f9b\u4e86\u865a\u5e7b\u5f15\u64ce\u63d2\u4ef6\uff0c\u4ee5\u5e2e\u52a9\u7b80\u5316\u5c06\u5730\u56fe\u5bfc\u5165 CARLA \u7684\u8fc7\u7a0b\u3002","title":"RoadRunner \u63d2\u4ef6\u5bfc\u5165"},{"location":"tuto_M_add_map_alternative/#_2","text":"1. \u63d2\u4ef6\u53ef\u4ece MathWorks \u7f51\u7ad9 \u4e0b\u8f7d\u3002MathWorks \u8fd8\u6709\u4e00\u4e2a \u5b8c\u6574\u7684\u6559\u7a0b \uff0c\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u63d2\u4ef6\u5c06\u5730\u56fe\u5bfc\u5165 CARLA\u3002 2. \u89e3\u538b\u4e0b\u8f7d\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u5e76\u5c06 RoadRunnerImporter \u548c RoadRunnerMaterials \u6587\u4ef6\u5939\u79fb\u52a8\u5230 <carla>/Unreal/CarlaUE4/Plugins/ \u3002 3. \u6309\u7167\u4ee5\u4e0b\u8bf4\u660e\u91cd\u5efa\u63d2\u4ef6\uff1a \u5728 Windows \u4e0a\u3002 \u53f3\u952e\u5355\u51fb <carla>/Unreal/CarlaUE4 \u4e2d\u7684 .uproject \u6587\u4ef6\uff0c\u5e76\u9009\u62e9 Generate Visual Studio project files \u3002 \u5728 CARLA \u7684\u6839\u6587\u4ef6\u5939\u4e2d\uff0c\u8fd0\u884c\u547d\u4ee4\uff1a make launch \u5728 Linux \u4e0a\u3002 \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a UE4_ROOT/GenerateProjectFiles.sh -project=\"carla/Unreal/CarlaUE4/CarlaUE4.uproject\" -game -engine 4. \u5728\u865a\u5e7b\u5f15\u64ce\u7a97\u53e3\u4e2d\uff0c\u786e\u4fdd\u9009\u4e2d\u4e24\u4e2a\u63d2\u4ef6\u7684\u590d\u9009\u6846 Edit > Plugins \u9009\u4e2d\u3002","title":"\u63d2\u4ef6\u5b89\u88c5"},{"location":"tuto_M_add_map_alternative/#_3","text":"1. \u4f7f\u7528 Import \u6309\u94ae\u5c06 <mapName>.fbx \u6587\u4ef6\u5bfc\u5165\u5230 /Content/Carla/Maps \u4e0b\u9762\u7684\u65b0\u6587\u4ef6\u5939\u4e2d\u3002 2. \u5c06 Scene > Hierarchy Type \u8bbe\u7f6e\u4e3a Create One Blueprint Asset \uff08\u9ed8\u8ba4\u9009\u62e9\uff09\u3002 3. \u5c06 Static Meshes > Normal Import Method \u8bbe\u7f6e\u4e3a Import Normals \u3002 4. \u70b9\u51fb Import \u3002 5. \u4fdd\u5b58\u5f53\u524d\u5173\u5361 File -> Save Current As... -> <mapname> \u3002 \u65b0\u5730\u56fe\u73b0\u5728\u5e94\u8be5\u51fa\u73b0\u5728\u865a\u5e7b\u5f15\u64ce \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u5176\u4ed6\u5730\u56fe\u7684\u65c1\u8fb9\u3002 \u7b14\u8bb0 \u8bed\u4e49\u5206\u5272\u7684\u6807\u7b7e\u5c06\u6839\u636e\u8d44\u4ea7\u540d\u79f0\u5206\u914d\u3002\u8be5\u8d44\u6e90\u5c06\u88ab\u79fb\u52a8\u5230 Content/Carla/PackageName/Static \u4e2d\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u4e2d\u3002\u8981\u66f4\u6539\u8fd9\u4e9b\uff0c\u8bf7\u5728\u5bfc\u5165\u540e\u624b\u52a8\u79fb\u52a8\u5b83\u4eec\u3002","title":"\u5bfc\u5165\u5730\u56fe"},{"location":"tuto_M_add_map_alternative/#_4","text":"\u8fd9\u79cd\u5bfc\u5165\u5730\u56fe\u7684\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u901a\u7528 .fbx \u548c .xodr \u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\u3002\u5982\u679c\u60a8\u4f7f\u7528 RoadRunner\uff0c\u5219\u5e94\u4f7f\u7528 Firebox (.fbx) \u3001 OpenDRIVE (.xodr) \u6216 Unreal (.fbx + .xml) \u5bfc\u51fa\u65b9\u6cd5\u3002\u4e0d\u8981\u4f7f\u7528\u8be5 Carla Exporter \u9009\u9879\uff0c\u56e0\u4e3a\u60a8\u5c06\u9047\u5230 .fbx \u6587\u4ef6\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u8981\u5c06\u5730\u56fe\u624b\u52a8\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce\uff1a 1. \u5728\u7cfb\u7edf\u7684\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\uff0c\u5c06 .xodr \u6587\u4ef6\u590d\u5236\u5230 <carla-root>/Unreal/CarlaUE4/Content/Carla/Maps/OpenDrive \u3002 2. \u901a\u8fc7\u5728 carla \u6839\u76ee\u5f55\u4e2d\u8fd0\u884c make launch \u6765\u6253\u5f00\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u3002\u5728\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u5230 Content/Carla/Maps/BaseMap \u5e76\u590d\u5236 BaseMap \u3002\u8fd9\u5c06\u63d0\u4f9b\u5e26\u6709\u9ed8\u8ba4\u5929\u7a7a\u548c\u7167\u660e\u5bf9\u8c61\u7684\u7a7a\u767d\u5730\u56fe\u3002 3. \u5728\u76ee\u5f55 Content/Carla/Maps \u4e2d\u521b\u5efa\u4e00\u4e2a\u4ee5\u60a8\u7684\u5730\u56fe\u5305\u540d\u79f0\u547d\u540d\u7684\u65b0\u6587\u4ef6\u5939\uff0c\u5e76\u4ee5\u4e0e\u60a8\u7684 .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u7684\u540d\u79f0\u4fdd\u5b58\u590d\u5236\u7684\u5730\u56fe\u3002 4. \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u56de Content/Carla/Maps \u3002\u53f3\u952e\u5355\u51fb\u7070\u8272\u533a\u57df\u5e76\u5728\u6807\u9898 Import Asset \u4e0b\u9009\u62e9 Import to /Game/Carla/Maps... \u3002 5. \u5728\u5f39\u51fa\u7684\u914d\u7f6e\u7a97\u53e3\u4e2d\uff0c\u786e\u4fdd\uff1a \u8fd9\u4e9b\u9009\u9879\u672a\u9009\u4e2d\uff1a \u81ea\u52a8\u751f\u6210\u78b0\u649e(Auto Generate Collision) \u7ec4\u5408\u7f51\u683c(Combine Meshes) Force Front xAxis \u5728\u4ee5\u4e0b\u4e0b\u62c9\u5217\u8868\u4e2d\uff0c\u9009\u62e9\u76f8\u5e94\u7684\u9009\u9879\uff1a \u6cd5\u7ebf\u5bfc\u5165\u65b9\u6cd5 - Import Normals \u6750\u8d28\u5bfc\u5165\u65b9\u6cd5 - Create New Materials \u68c0\u67e5\u8fd9\u4e9b\u9009\u9879\uff1a Convert Scene Unit Import Textures 6. \u5355\u51fb Import \u3002 7. \u7f51\u683c\u5c06\u51fa\u73b0\u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\u3002\u9009\u62e9\u7f51\u683c\u5e76\u5c06\u5b83\u4eec\u62d6\u5230\u573a\u666f\u4e2d\u3002 8. \u5c06\u7f51\u683c\u7f6e\u4e8e 0,0,0 \u4e2d\u5fc3\u3002 9. \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u9009\u62e9\u6240\u6709\u9700\u8981\u6709\u78b0\u649e\u5668\u7684\u7f51\u683c\u4f53\u3002\u8fd9\u662f\u6307\u4e0e\u884c\u4eba\u6216\u8f66\u8f86\u4ea4\u4e92\u7684\u4efb\u4f55\u7f51\u683c\u3002\u78b0\u649e\u5668\u9632\u6b62\u4ed6\u4eec\u6389\u5165\u6df1\u6e0a\u3002\u53f3\u952e\u5355\u51fb\u9009\u5b9a\u7684\u7f51\u683c\u5e76\u9009\u62e9 Asset Actions > Bulk Edit via Property Matrix... \u3002 10. \u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22 \u78b0\u649e(collision) \u3002 11. \u5c06 Collision Complexity \u4ece Project Default \u6539\u4e3a Use Complex Collision As Simple \u5e76\u5173\u95ed\u7a97\u53e3\u3002 12. \u6309 Alt + c \u786e\u8ba4\u78b0\u649e\u8bbe\u7f6e\u5df2\u6b63\u786e\u5e94\u7528\u3002\u60a8\u4f1a\u5728\u7f51\u683c\u4e0a\u770b\u5230\u9ed1\u8272\u7684\u7f51\u3002 13. \u8981\u4e3a\u8bed\u4e49\u5206\u5272\u4f20\u611f\u5668\u521b\u5efa\u771f\u5b9e\u6570\u636e\uff0c\u8bf7\u5c06\u9759\u6001\u7f51\u683c\u7269\u4f53\u79fb\u52a8\u5230 Carla/Static/<segment> \u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\u7684\u76f8\u5e94\u6587\u4ef6\u5939\uff1a Content \u2514\u2500\u2500 Carla \u251c\u2500\u2500 Blueprints \u251c\u2500\u2500 Config \u251c\u2500\u2500 Exported Maps \u251c\u2500\u2500 HDMaps \u251c\u2500\u2500 Maps \u2514\u2500\u2500 Static \u251c\u2500\u2500 Terrain \u2502 \u2514\u2500\u2500 mapname \u2502 \u2514\u2500\u2500 Static Meshes \u2502 \u251c\u2500\u2500 Road \u2502 \u2514\u2500\u2500 mapname \u2502 \u2514\u2500\u2500 Static Meshes \u2502 \u251c\u2500\u2500 RoadLines | \u2514\u2500\u2500 mapname | \u2514\u2500\u2500 Static Meshes \u2514\u2500\u2500 Sidewalks \u2514\u2500\u2500 mapname \u2514\u2500\u2500 Static Meshes 14. \u5728 \u201c\u6a21\u5f0f(Modes)\u201d \u9762\u677f\u4e2d\uff0c\u641c\u7d22 Open Drive Actor \u5e76\u5c06\u5176\u62d6\u5230\u573a\u666f\u4e2d\u3002 15. \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\uff0c\u9009\u4e2d Add Spawners \u5e76\u5355\u51fb Generate Routes \u65c1\u8fb9\u7684\u6846\u3002\u8fd9\u5c06\u5728 <carla-root>/Unreal/CarlaUE4/Content/Carla/Maps/OpenDrive \u76ee\u5f55\u4e2d\u627e\u5230\u5177\u6709\u76f8\u540c\u5730\u56fe\u540d\u79f0\u7684 .xodr \u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u751f\u6210\u4e00\u7cfb\u5217 RoutePlanner \u548c VehicleSpawnPoint \u53c2\u4e0e\u8005\u3002","title":"\u624b\u52a8\u5bfc\u5165"},{"location":"tuto_M_add_map_alternative/#_5","text":"\u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f\u3002\u4ece\u8fd9\u91cc\uff0c\u60a8\u5c06\u80fd\u591f\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6570\u636e\u3002\u6211\u4eec\u5efa\u8bae\u5728\u6240\u6709\u81ea\u5b9a\u4e49\u5b8c\u6210\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u969c\u788d\u7269\u963b\u6321\u884c\u4eba\u8def\u5f84\u3002 CARLA \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5efa\u8bae\u4f7f\u7528 CARLA \u5305 \u548c CARLA \u6e90\u4ee3\u7801\u6784\u5efa \u6307\u5357\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u7684\u81ea\u52a8\u5316\u6d41\u7a0b\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u4f46\u662f\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528\u672c\u8282\u4e2d\u5217\u51fa\u7684\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u5728\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\u65f6\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5728\u8bba\u575b\u4e2d\u53d1\u5e16\u3002","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_add_map_package/","text":"\u5728 CARLA \u5305\u4e2d\u5bfc\u5165\u5730\u56fe \u672c\u8282\u4ecb\u7ecd\u5c06\u5730\u56fe\u5f15\u5165 CARLA \u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c \u7684\u8fc7\u7a0b\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u7248\u672c\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u9075\u5faa \u6b64\u5904 \u7684\u6307\u5357\u3002 \u6b64\u8fc7\u7a0b\u4ec5\u9002\u7528\u4e8e Linux \u7cfb\u7edf\u3002\u5bfc\u5165\u8fc7\u7a0b\u6d89\u53ca\u8fd0\u884c\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u6765\u5bfc\u5165\u76f8\u5173\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5bfc\u51fa\u4e3a\u72ec\u7acb\u5305\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u5176\u914d\u7f6e\u4e3a\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u6784\u5efa Docker \u955c\u50cf\u5927\u7ea6\u9700\u8981 4 \u5c0f\u65f6\u548c 600-700 GB \u7684\u65f6\u95f4\u3002\u4ec5\u5728\u7b2c\u4e00\u6b21\u6784\u5efa\u6620\u50cf\u65f6\u624d\u9700\u8981\u8fd9\u6837\u505a\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d CARLA \u5305\u4e2d\u7684\u5730\u56fe\u5bfc\u5165 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u60a8\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7cfb\u7edf\u8981\u6c42\uff1a Ubuntu 16.04+ \u4e2d\u7684 64 \u4f4d\u7248\u672c Docker \u81f3\u5c11 8GB RAM \u7528\u4e8e\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u7684\u81f3\u5c11 700 GB \u53ef\u7528\u78c1\u76d8\u7a7a\u95f4 Git \u7248\u672c\u63a7\u5236 \u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u8f6f\u4ef6\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u7248\u672c\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u9075\u5faa \u6b64\u5904 \u7684\u6307\u5357\u3002 \u60a8\u5e94\u8be5\u81f3\u5c11\u4f7f\u7528\u5730\u56fe\u7f16\u8f91\u5668\uff08\u4f8b\u5982 RoadRunner\uff09\u5df2 \u751f\u6210 \u7684\u4e24\u4e2a\u6587\u4ef6 <mapName>.xodr \u548c <mapName>.fbx \u3002 \u8fd9\u4e9b\u6587\u4ef6\u5e94\u5177\u6709\u76f8\u540c\u7684 <mapName> \u503c\uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u540c\u4e00\u5730\u56fe\u3002 Carla \u5305\u4e2d\u7684\u5730\u56fe\u5bfc\u5165 1. CARLA \u63d0\u4f9b\u4e86\u5728 Docker \u6620\u50cf\u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u4ee5\u53ca\u4f7f\u7528\u8be5\u6620\u50cf\u7f16\u8bd1 CARLA \u7684\u6240\u6709\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5728 GitHub \u4e0a\u7684\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u514b\u9686\u5b58\u50a8\u5e93\uff1a git clone https://github.com/carla-simulator/carla 2. \u6309\u7167 \u8fd9\u4e9b\u8bf4\u660e \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u3002 3. \u521b\u5efa input_folder \u3002\u8fd9\u662f\u60a8\u653e\u7f6e\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 Docker \u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u6765\u63cf\u8ff0\u5305\u6587\u4ef6\u5939\u7ed3\u6784\u3002\u66f4\u6539 input_folder \u7684\u6743\u9650\u624d\u80fd\u6210\u529f\u521b\u5efa\uff1a #Go to the parent folder, where the input folder is contained chmod 777 input_folder \u7b14\u8bb0 \u5982\u679c\u5305\u662f \u624b\u52a8\u51c6\u5907\u7684 \uff0c\u5e76\u4e14\u5df2\u5305\u542b .json \u6587\u4ef6\uff0c\u5219\u65e0\u9700\u6267\u884c\u6b64\u64cd\u4f5c\u3002 4. \u521b\u5efa output_folder \u3002\u8fd9\u662f Docker \u955c\u50cf\u5728\u70d8\u7119\u5730\u56fe\u540e\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u7684\u5730\u65b9\u3002 5. \u5bfc\u822a\u81f3 ~/carla/Util/Docker \u3002\u8fd9\u662f\u5bfc\u5165\u811a\u672c\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u8be5\u811a\u672c\u9700\u8981 input_folder \u548c output_folder \u7684\u8def\u5f84\u4ee5\u53ca\u8981\u5bfc\u5165\u5305\u7684\u540d\u79f0\u3002\u5982\u679c\u63d0\u4f9b\u4e86 .json \u6587\u4ef6\uff0c\u5219\u8be5\u6587\u4ef6\u7684\u540d\u79f0\u662f\u5305\u540d\u79f0\uff0c\u5982\u679c\u672a\u63d0\u4f9b .json \uff0c\u5219\u540d\u79f0\u5fc5\u987b\u4e3a map_package \uff1a python3 docker_tools.py --input ~/path_to_input_folder --output ~/path_to_output_folder --packages map_package \u8b66\u544a \u5982\u679c\u672a\u63d0\u4f9b\u53c2\u6570 --packages map_package \uff0cDocker \u955c\u50cf\u5c06\u5236\u4f5c CARLA \u5305\u3002 6. \u5305\u5c06\u5728 output_folder \u4e2d\u751f\u6210\u4e3a <map_package>.tar.gz . \u3002\u8fd9\u662f\u72ec\u7acb\u5305\uff0c\u73b0\u5728\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u4e2d\u3002\u5c06\u5305\u79fb\u52a8\u5230 CARLA \u6839\u76ee\u5f55\uff08\u60a8\u5c06\u5728\u5176\u4e2d\u4f7f\u7528\u5730\u56fe\u7684\u5305/\u4e8c\u8fdb\u5236\u7248\u672c\uff09\u4e2d\u7684 Import \u6587\u4ef6\u5939\uff0c\u7136\u540e\u4ece\u6839\u76ee\u5f55\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u5c06\u5176\u5bfc\u5165\uff1a ./ImportAssets.sh 7. \u8981\u4f7f\u7528\u65b0\u5730\u56fe\u8fd0\u884c\u6a21\u62df\uff0c\u8bf7\u8fd0\u884c CARLA\uff0c\u7136\u540e\u4f7f\u7528 config.py \u6587\u4ef6\u66f4\u6539\u5730\u56fe\uff1a cd PythonAPI/util python3 config.py --map <mapName> Your map is now ready to run simulations in CARLA. If you have any questions about the process then you can ask in the forum or you can try running some of our example scripts on your new map to test it out.","title":"\u5728CARLA\u5305\u5bfc\u5165\u5730\u56fe"},{"location":"tuto_M_add_map_package/#carla","text":"\u672c\u8282\u4ecb\u7ecd\u5c06\u5730\u56fe\u5f15\u5165 CARLA \u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c \u7684\u8fc7\u7a0b\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u7248\u672c\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u9075\u5faa \u6b64\u5904 \u7684\u6307\u5357\u3002 \u6b64\u8fc7\u7a0b\u4ec5\u9002\u7528\u4e8e Linux \u7cfb\u7edf\u3002\u5bfc\u5165\u8fc7\u7a0b\u6d89\u53ca\u8fd0\u884c\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u6765\u5bfc\u5165\u76f8\u5173\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5bfc\u51fa\u4e3a\u72ec\u7acb\u5305\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u5176\u914d\u7f6e\u4e3a\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u6784\u5efa Docker \u955c\u50cf\u5927\u7ea6\u9700\u8981 4 \u5c0f\u65f6\u548c 600-700 GB \u7684\u65f6\u95f4\u3002\u4ec5\u5728\u7b2c\u4e00\u6b21\u6784\u5efa\u6620\u50cf\u65f6\u624d\u9700\u8981\u8fd9\u6837\u505a\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d CARLA \u5305\u4e2d\u7684\u5730\u56fe\u5bfc\u5165","title":"\u5728 CARLA \u5305\u4e2d\u5bfc\u5165\u5730\u56fe"},{"location":"tuto_M_add_map_package/#_1","text":"\u60a8\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7cfb\u7edf\u8981\u6c42\uff1a Ubuntu 16.04+ \u4e2d\u7684 64 \u4f4d\u7248\u672c Docker \u81f3\u5c11 8GB RAM \u7528\u4e8e\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u7684\u81f3\u5c11 700 GB \u53ef\u7528\u78c1\u76d8\u7a7a\u95f4 Git \u7248\u672c\u63a7\u5236 \u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u8f6f\u4ef6\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u7248\u672c\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u9075\u5faa \u6b64\u5904 \u7684\u6307\u5357\u3002 \u60a8\u5e94\u8be5\u81f3\u5c11\u4f7f\u7528\u5730\u56fe\u7f16\u8f91\u5668\uff08\u4f8b\u5982 RoadRunner\uff09\u5df2 \u751f\u6210 \u7684\u4e24\u4e2a\u6587\u4ef6 <mapName>.xodr \u548c <mapName>.fbx \u3002 \u8fd9\u4e9b\u6587\u4ef6\u5e94\u5177\u6709\u76f8\u540c\u7684 <mapName> \u503c\uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u540c\u4e00\u5730\u56fe\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_M_add_map_package/#carla_1","text":"1. CARLA \u63d0\u4f9b\u4e86\u5728 Docker \u6620\u50cf\u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u4ee5\u53ca\u4f7f\u7528\u8be5\u6620\u50cf\u7f16\u8bd1 CARLA \u7684\u6240\u6709\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5728 GitHub \u4e0a\u7684\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u514b\u9686\u5b58\u50a8\u5e93\uff1a git clone https://github.com/carla-simulator/carla 2. \u6309\u7167 \u8fd9\u4e9b\u8bf4\u660e \u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u7684 Docker \u6620\u50cf\u3002 3. \u521b\u5efa input_folder \u3002\u8fd9\u662f\u60a8\u653e\u7f6e\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 Docker \u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u6765\u63cf\u8ff0\u5305\u6587\u4ef6\u5939\u7ed3\u6784\u3002\u66f4\u6539 input_folder \u7684\u6743\u9650\u624d\u80fd\u6210\u529f\u521b\u5efa\uff1a #Go to the parent folder, where the input folder is contained chmod 777 input_folder \u7b14\u8bb0 \u5982\u679c\u5305\u662f \u624b\u52a8\u51c6\u5907\u7684 \uff0c\u5e76\u4e14\u5df2\u5305\u542b .json \u6587\u4ef6\uff0c\u5219\u65e0\u9700\u6267\u884c\u6b64\u64cd\u4f5c\u3002 4. \u521b\u5efa output_folder \u3002\u8fd9\u662f Docker \u955c\u50cf\u5728\u70d8\u7119\u5730\u56fe\u540e\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u7684\u5730\u65b9\u3002 5. \u5bfc\u822a\u81f3 ~/carla/Util/Docker \u3002\u8fd9\u662f\u5bfc\u5165\u811a\u672c\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u8be5\u811a\u672c\u9700\u8981 input_folder \u548c output_folder \u7684\u8def\u5f84\u4ee5\u53ca\u8981\u5bfc\u5165\u5305\u7684\u540d\u79f0\u3002\u5982\u679c\u63d0\u4f9b\u4e86 .json \u6587\u4ef6\uff0c\u5219\u8be5\u6587\u4ef6\u7684\u540d\u79f0\u662f\u5305\u540d\u79f0\uff0c\u5982\u679c\u672a\u63d0\u4f9b .json \uff0c\u5219\u540d\u79f0\u5fc5\u987b\u4e3a map_package \uff1a python3 docker_tools.py --input ~/path_to_input_folder --output ~/path_to_output_folder --packages map_package \u8b66\u544a \u5982\u679c\u672a\u63d0\u4f9b\u53c2\u6570 --packages map_package \uff0cDocker \u955c\u50cf\u5c06\u5236\u4f5c CARLA \u5305\u3002 6. \u5305\u5c06\u5728 output_folder \u4e2d\u751f\u6210\u4e3a <map_package>.tar.gz . \u3002\u8fd9\u662f\u72ec\u7acb\u5305\uff0c\u73b0\u5728\u53ef\u4ee5\u5bfc\u5165\u5230 CARLA \u4e2d\u3002\u5c06\u5305\u79fb\u52a8\u5230 CARLA \u6839\u76ee\u5f55\uff08\u60a8\u5c06\u5728\u5176\u4e2d\u4f7f\u7528\u5730\u56fe\u7684\u5305/\u4e8c\u8fdb\u5236\u7248\u672c\uff09\u4e2d\u7684 Import \u6587\u4ef6\u5939\uff0c\u7136\u540e\u4ece\u6839\u76ee\u5f55\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u5c06\u5176\u5bfc\u5165\uff1a ./ImportAssets.sh 7. \u8981\u4f7f\u7528\u65b0\u5730\u56fe\u8fd0\u884c\u6a21\u62df\uff0c\u8bf7\u8fd0\u884c CARLA\uff0c\u7136\u540e\u4f7f\u7528 config.py \u6587\u4ef6\u66f4\u6539\u5730\u56fe\uff1a cd PythonAPI/util python3 config.py --map <mapName> Your map is now ready to run simulations in CARLA. If you have any questions about the process then you can ask in the forum or you can try running some of our example scripts on your new map to test it out.","title":"Carla \u5305\u4e2d\u7684\u5730\u56fe\u5bfc\u5165"},{"location":"tuto_M_add_map_source/","text":"\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u5165\u5730\u56fe \u672c\u8282\u63cf\u8ff0\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u4e2d\u5bfc\u5165\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u60a8\u4f7f\u7528 CARLA \u7684\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5bfc\u5165\u8fc7\u7a0b\u6d89\u53ca\u901a\u8fc7\u5c06\u76f8\u5173\u5730\u56fe\u6587\u4ef6\u7f16\u8bd1\u5230\u5305\u4e2d\u6765\u5bfc\u5165\u5b83\u4eec\u3002\u7136\u540e\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u8be5\u5305\u5e76\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u7136\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6587\u4ef6\u5e76\u6700\u7ec8\u5c06\u5176\u6dfb\u52a0\u5230\u5305\u4e2d\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5730\u56fe\u5bfc\u5165 \u4e0b\u4e00\u6b65 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u7248\u672c\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f CARLA \u7684\u6253\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6559\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002 \u60a8\u5e94\u8be5\u81f3\u5c11\u6709\u4e24\u4e2a\u6587\u4ef6\uff0c <mapName>.xodr \u548c <mapName>.fbx \uff0c\u662f\u7531\u5730\u56fe\u7f16\u8f91\u5668\uff08\u4f8b\u5982 RoadRunner\uff09\u751f\u6210\u7684\u3002 \u8fd9\u4e9b\u6587\u4ef6\u5e94\u5177\u6709\u76f8\u540c\u7684\u503c <mapName> \uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u76f8\u540c\u7684\u5730\u56fe\u3002 \u60a8\u53ef\u4ee5\u5c06\u591a\u4e2a\u5730\u56fe\u63d0\u53d6\u5230\u540c\u4e00\u4e2a\u5305\u4e2d\u3002\u6bcf\u5f20\u5730\u56fe\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0\u3002 \u5730\u56fe\u5bfc\u5165 1. \u5c06\u9700\u8981\u5bfc\u5165\u7684\u5730\u56fe\u6587\u4ef6\u653e\u5165 CARLA \u6839\u76ee\u5f55\u4e0b\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002 2. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u63d0\u53d6\u6587\u4ef6\uff1a make import \u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\u6807\u5fd7 : --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u6444\u53d6\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002 \u4ec5\u5f53\u60a8\u4e0d\u63d0\u4f9b \u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u5c06\u4f7f\u7528\u5730\u56fe\u5305\u7684\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 Unreal/CarlaUE4/Content \u3002\u5b83\u5c06\u5305\u542b\u914d\u7f6e\u6587\u4ef6\u3001\u8d85\u901f\u6321\u3001\u9759\u6001\u8d44\u4ea7\u4fe1\u606f\u548c\u5bfc\u822a\u4fe1\u606f\u3002 \u4e0b\u4e00\u6b65 \u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f\u3002\u4ece\u8fd9\u91cc\uff0c\u60a8\u5c06\u80fd\u591f\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6570\u636e\u3002\u6211\u4eec\u5efa\u8bae\u5728\u6240\u6709\u81ea\u5b9a\u4e49\u5b8c\u6210\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u969c\u788d\u7269\u963b\u6321\u884c\u4eba\u8def\u5f84\u3002 CARLA \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002","title":"\u5728 Carla \u6e90\u6784\u5efa\u4e2d\u5bfc\u5165\u5730\u56fe"},{"location":"tuto_M_add_map_source/#carla","text":"\u672c\u8282\u63cf\u8ff0\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u4e2d\u5bfc\u5165\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u60a8\u4f7f\u7528 CARLA \u7684\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u6765\u5bfc\u5165\u5730\u56fe\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5bfc\u5165\u8fc7\u7a0b\u6d89\u53ca\u901a\u8fc7\u5c06\u76f8\u5173\u5730\u56fe\u6587\u4ef6\u7f16\u8bd1\u5230\u5305\u4e2d\u6765\u5bfc\u5165\u5b83\u4eec\u3002\u7136\u540e\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u8be5\u5305\u5e76\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u7136\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6587\u4ef6\u5e76\u6700\u7ec8\u5c06\u5176\u6dfb\u52a0\u5230\u5305\u4e2d\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5730\u56fe\u5bfc\u5165 \u4e0b\u4e00\u6b65","title":"\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u4e2d\u5bfc\u5165\u5730\u56fe"},{"location":"tuto_M_add_map_source/#_1","text":"\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u7248\u672c\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f CARLA \u7684\u6253\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6559\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002 \u60a8\u5e94\u8be5\u81f3\u5c11\u6709\u4e24\u4e2a\u6587\u4ef6\uff0c <mapName>.xodr \u548c <mapName>.fbx \uff0c\u662f\u7531\u5730\u56fe\u7f16\u8f91\u5668\uff08\u4f8b\u5982 RoadRunner\uff09\u751f\u6210\u7684\u3002 \u8fd9\u4e9b\u6587\u4ef6\u5e94\u5177\u6709\u76f8\u540c\u7684\u503c <mapName> \uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u76f8\u540c\u7684\u5730\u56fe\u3002 \u60a8\u53ef\u4ee5\u5c06\u591a\u4e2a\u5730\u56fe\u63d0\u53d6\u5230\u540c\u4e00\u4e2a\u5305\u4e2d\u3002\u6bcf\u5f20\u5730\u56fe\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_M_add_map_source/#_2","text":"1. \u5c06\u9700\u8981\u5bfc\u5165\u7684\u5730\u56fe\u6587\u4ef6\u653e\u5165 CARLA \u6839\u76ee\u5f55\u4e0b\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002 2. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u63d0\u53d6\u6587\u4ef6\uff1a make import \u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\u6807\u5fd7 : --package=<package_name> \u6307\u5b9a\u5305\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u9879\u8bbe\u7f6e\u4e3a map_package \u3002\u4e24\u4e2a\u5305\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u4f7f\u7528\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u540e\u7eed\u6444\u53d6\u65f6\u51fa\u9519\u3002 \u5f3a\u70c8\u5efa\u8bae\u66f4\u6539\u5305\u7684\u540d\u79f0 \u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--package=<package_name>\" --no-carla-materials \u6307\u5b9a\u60a8\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 CARLA \u6750\u8d28\uff08\u9053\u8def\u7eb9\u7406\u7b49\uff09\u3002\u60a8\u5c06\u6539\u7528 RoadRunner \u6750\u6599\u3002 \u4ec5\u5f53\u60a8\u4e0d\u63d0\u4f9b \u81ea\u5df1\u7684 .json \u6587\u4ef6 \u65f6\u624d\u9700\u8981\u6b64\u6807\u5fd7\u3002 .json \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u503c\u90fd\u5c06\u8986\u76d6\u6b64\u6807\u5fd7\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4f7f\u7528\u6b64\u6807\u5fd7\uff1a make import ARGS=\"--no-carla-materials\" \u5c06\u4f7f\u7528\u5730\u56fe\u5305\u7684\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 Unreal/CarlaUE4/Content \u3002\u5b83\u5c06\u5305\u542b\u914d\u7f6e\u6587\u4ef6\u3001\u8d85\u901f\u6321\u3001\u9759\u6001\u8d44\u4ea7\u4fe1\u606f\u548c\u5bfc\u822a\u4fe1\u606f\u3002","title":"\u5730\u56fe\u5bfc\u5165"},{"location":"tuto_M_add_map_source/#_3","text":"\u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u5730\u56fe\u5e76\u8fd0\u884c\u4eff\u771f\u3002\u4ece\u8fd9\u91cc\uff0c\u60a8\u5c06\u80fd\u591f\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6570\u636e\u3002\u6211\u4eec\u5efa\u8bae\u5728\u6240\u6709\u81ea\u5b9a\u4e49\u5b8c\u6210\u540e\u751f\u6210\u884c\u4eba\u5bfc\u822a\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u969c\u788d\u7269\u963b\u6321\u884c\u4eba\u8def\u5f84\u3002 CARLA \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_custom_add_tl/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u4ea4\u901a\u706f\u548c\u6807\u5fd7 \u672c\u6307\u5357\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u5730\u56fe\u3001\u914d\u7f6e\u6bcf\u4e2a\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u7684\u5f71\u54cd\u533a\u57df\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u8def\u53e3\u5c06\u4ea4\u901a\u706f\u914d\u7f6e\u4e3a\u4e00\u7ec4\u3002\u6b64\u9009\u9879\u4ec5\u9002\u7528\u4e8e\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002 \u7ea2\u7eff\u706f \u4ea4\u901a\u6807\u5fd7 \u4e0b\u4e00\u6b65 \u7ea2\u7eff\u706f \u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content/Carla/Static/TrafficLight/StreetLights_01 \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728 Details \u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574\u6bcf\u4e2a\u4ea4\u901a\u706f\u7684 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002 4. \u5bf9\u4e8e\u8fde\u63a5\u70b9\uff0c\u5c06 BP_TrafficLightGroup \u53c2\u4e0e\u8005\u62d6\u5165\u5173\u5361\u4e2d\u3002\u901a\u8fc7\u5c06\u4ea4\u6c47\u5904\u7684\u6240\u6709\u4ea4\u901a\u706f\u6dfb\u52a0\u5230\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u7684\u201c\u4ea4\u901a\u706f\u201d\u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4ea4\u901a\u706f\u7ec4\u3002 5. \u4ea4\u901a\u706f\u8ba1\u65f6\u53ea\u80fd\u901a\u8fc7 Python API \u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f8b\u5982\uff1a\u4ea4\u901a\u6807\u5fd7\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u548c\u8f6c\u5f2f\u505c\u8f66\u3002 \u7ea2\u7eff\u706f\u6807\u5fd7 \u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece Content Browser \uff0c\u5bfc\u822a\u81f3 Content/Carla/Static/TrafficSign \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574 trigger volume \u6bcf\u4e2a\u4ea4\u901a\u6807\u5fd7\u7684\u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002\u5e76\u975e\u6240\u6709\u4ea4\u901a\u6807\u5fd7\u90fd\u6709\u89e6\u53d1\u97f3\u91cf\u3002\u6b64\u7c7b\u6807\u5fd7\u5305\u62ec\u8ba9\u884c\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u548c\u9650\u901f\u6807\u5fd7\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5\u751f\u6210 \u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7ea2\u7eff\u706f\u548c\u6807\u5fd7"},{"location":"tuto_M_custom_add_tl/#_1","text":"\u672c\u6307\u5357\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u5730\u56fe\u3001\u914d\u7f6e\u6bcf\u4e2a\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u7684\u5f71\u54cd\u533a\u57df\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u8def\u53e3\u5c06\u4ea4\u901a\u706f\u914d\u7f6e\u4e3a\u4e00\u7ec4\u3002\u6b64\u9009\u9879\u4ec5\u9002\u7528\u4e8e\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002 \u7ea2\u7eff\u706f \u4ea4\u901a\u6807\u5fd7 \u4e0b\u4e00\u6b65","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u4ea4\u901a\u706f\u548c\u6807\u5fd7"},{"location":"tuto_M_custom_add_tl/#_2","text":"\u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content/Carla/Static/TrafficLight/StreetLights_01 \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728 Details \u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574\u6bcf\u4e2a\u4ea4\u901a\u706f\u7684 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002 4. \u5bf9\u4e8e\u8fde\u63a5\u70b9\uff0c\u5c06 BP_TrafficLightGroup \u53c2\u4e0e\u8005\u62d6\u5165\u5173\u5361\u4e2d\u3002\u901a\u8fc7\u5c06\u4ea4\u6c47\u5904\u7684\u6240\u6709\u4ea4\u901a\u706f\u6dfb\u52a0\u5230\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u7684\u201c\u4ea4\u901a\u706f\u201d\u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4ea4\u901a\u706f\u7ec4\u3002 5. \u4ea4\u901a\u706f\u8ba1\u65f6\u53ea\u80fd\u901a\u8fc7 Python API \u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f8b\u5982\uff1a\u4ea4\u901a\u6807\u5fd7\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u548c\u8f6c\u5f2f\u505c\u8f66\u3002","title":"\u7ea2\u7eff\u706f"},{"location":"tuto_M_custom_add_tl/#_3","text":"\u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece Content Browser \uff0c\u5bfc\u822a\u81f3 Content/Carla/Static/TrafficSign \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574 trigger volume \u6bcf\u4e2a\u4ea4\u901a\u6807\u5fd7\u7684\u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002\u5e76\u975e\u6240\u6709\u4ea4\u901a\u6807\u5fd7\u90fd\u6709\u89e6\u53d1\u97f3\u91cf\u3002\u6b64\u7c7b\u6807\u5fd7\u5305\u62ec\u8ba9\u884c\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u548c\u9650\u901f\u6807\u5fd7\u3002","title":"\u7ea2\u7eff\u706f\u6807\u5fd7"},{"location":"tuto_M_custom_add_tl/#_4","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5\u751f\u6210 \u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_custom_buildings/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5316\u5efa\u7b51 \u7a0b\u5e8f\u5316\u5efa\u7b51 Building structure Structure modifications Next steps \u7a0b\u5e8f\u5316\u5efa\u7b51 \u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177\u5141\u8bb8\u60a8\u521b\u5efa\u7531\u4e0d\u540c\u697c\u5c42\u7ec4\u6210\u7684\u77e9\u5f62\u5efa\u7b51\u3002\u6bcf\u4e2a\u7ea7\u522b\u90fd\u662f\u4f7f\u7528\u53ef\u914d\u7f6e\u7684\u7f51\u683c\u9635\u5217\u6216\u5355\u4e2a\u84dd\u56fe\u6784\u5efa\u7684\u3002\u5982\u679c\u4f7f\u7528\u7f51\u683c\u9635\u5217\uff0c\u5219\u6bcf\u4e2a\u7f51\u683c\u5c06\u6cbf\u5173\u5361\u968f\u673a\u91cd\u590d\u4ee5\u63d0\u4f9b\u591a\u6837\u6027\u3002\u7f51\u683c\u4f53\u521b\u5efa\u4e00\u6b21\uff0c\u6bcf\u4e2a\u91cd\u590d\u90fd\u5c06\u662f\u8be5\u7f51\u683c\u4f53\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u5730\u56fe\u7684\u6027\u80fd\u3002 \u5efa\u7b51\u7ed3\u6784 \u8981\u5f00\u59cb\u5efa\u9020\u60a8\u7684\u5efa\u7b51\uff1a \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign \u3002 \u5c06 BP_Procedural_Building \u62d6\u5165BP_Procedural_Building\u573a\u666f\u4e2d\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5efa\u7b51\u7269\u7684\u6240\u6709\u9009\u9879\u3002\u6bcf\u6b21\u5728\u6b64\u5904\u8fdb\u884c\u66f4\u6539\u65f6\uff0c\u968f\u7740\u5173\u952e\u7f51\u683c\u4f53\u7684\u66f4\u65b0\uff0c\u5efa\u7b51\u7269\u5c06\u4ece\u573a\u666f\u89c6\u56fe\u4e2d\u6d88\u5931\u3002\u5355\u51fb Create Building \u4ee5\u67e5\u770b\u65b0\u7ed3\u679c\uff0c\u6216\u542f\u7528\u81ea\u52a8\u521b\u5efa\u4ee5\u907f\u514d\u91cd\u590d\u6b64\u6b65\u9aa4\u3002 \u5173\u952e\u7f51\u683c\u662f\u5efa\u7b51\u7269\u7ed3\u6784\u7684\u4e00\u90e8\u5206\u3002\u5b83\u4eec\u5206\u4e3a\u56db\u7c7b\uff1a Base: \u5e95\u5c42\u3002 Body: \u4e2d\u5c42\u3002 Top: \u6700\u9ad8\u5c42\u3002 Roof: \u8986\u76d6\u9876\u5c42\u7684\u5c4b\u9876\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u578b\uff0c\u9664\u4e86\u5c4b\u9876 Roof \u4e4b\u5916\uff0c\u90fd\u6709\u4e00\u4e2a\u7f51\u683c\u4f53\u586b\u5145\u5730\u677f\u7684\u4e2d\u5fc3\uff0c\u8fd8\u6709\u4e00\u4e2a Corner \u7f51\u683c\u4f53\u5c06\u653e\u7f6e\u5728\u5730\u677f\u7684\u4e24\u4fa7\u3002\u4e0b\u56fe\u4ee3\u8868\u4e86\u5168\u5c40\u7ed3\u6784\u3002 Visualization of the building structure. \u57fa\u672c\u53c2\u6570 Base parameters \u8bbe\u7f6e\u5c3a\u5bf8\u3002 \u697c\u5c42\u6570\uff1a \u5efa\u7b51\u7269\u7684\u697c\u5c42\u6570\u3002\u8eab\u4f53\u7f51\u683c Body \u7684\u91cd\u590d\u3002 \u957f\u5ea6 X and \u957f\u5ea6 Y\uff1a \u5efa\u7b51\u7269\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u5efa\u7b51\u7269\u6bcf\u4e00\u4fa7\u7684\u4e2d\u592e\u7f51\u683c\u91cd\u590d\u3002 BP_Procedural_Building \u793a\u4f8b\u3002 \u7ed3\u6784\u4fee\u6539 \u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u9009\u9879\u53ef\u4ee5\u4fee\u6539\u5efa\u7b51\u7269\u7684\u603b\u4f53\u7ed3\u6784\u3002 Disable corners: \u5982\u679c\u9009\u62e9\uff0c\u5c06\u4e0d\u4f7f\u7528\u89d2\u7f51\u683c\u3002 Use full blocks: \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5efa\u7b51\u7269\u7684\u7ed3\u6784\u6bcf\u5c42\u5c06\u4ec5\u4f7f\u7528\u4e00\u4e2a\u7f51\u683c\u3002\u6bcf\u5c42\u697c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u89d2\u843d\u6216\u91cd\u590d\u3002 Doors: \u51fa\u73b0\u5728\u5e95\u5c42\u3001\u4f4d\u4e8e\u4e2d\u592e\u7f51\u683c\u7269\u4f53\u6b63\u524d\u65b9\u7684\u7f51\u683c\u7269\u4f53\u3002\u95e8\u7684\u6570\u91cf\u53ca\u5176\u4f4d\u7f6e\u53ef\u4ee5\u8bbe\u7f6e\u3002 0 \u662f\u521d\u59cb\u4f4d\u7f6e\u3001 1 \u4e0b\u4e00\u4e2a\u5e95\u5c42\u91cd\u590d\uff0c\u7b49\u7b49\u3002 Walls: \u66ff\u4ee3\u5efa\u7b51\u7269\u4e00\u4fa7\u6216\u591a\u4fa7\u7684\u7f51\u683c\u3002\u4f8b\u5982\uff0c\u5e73\u9762\u7f51\u683c\u53ef\u7528\u4e8e\u7ed8\u5236\u5efa\u7b51\u7269\u7684\u4e00\u4fa7\u3002 \u5de6\u8fb9\u662f\u4e00\u5ea7\u6ca1\u6709\u89d2\u3001\u53ea\u6709\u4e00\u6247\u95e8\u7684\u5efa\u7b51\u3002 \u53f3\u4fa7\u662f\u4e00\u5ea7\u5efa\u7b51\u7269\uff0c\u5176\u4e00\u4fa7\u5e94\u7528\u4e86\u5899\u58c1\u3002\u5899\u58c1\u662f\u6ca1\u6709\u9632\u706b\u901a\u9053\u7684\u7eb9\u7406\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u84dd\u56fe\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5efa\u7b51"},{"location":"tuto_M_custom_buildings/#_1","text":"\u7a0b\u5e8f\u5316\u5efa\u7b51 Building structure Structure modifications Next steps","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u7a0b\u5e8f\u5316\u5efa\u7b51"},{"location":"tuto_M_custom_buildings/#_2","text":"\u7a0b\u5e8f\u5316\u5efa\u7b51\u5de5\u5177\u5141\u8bb8\u60a8\u521b\u5efa\u7531\u4e0d\u540c\u697c\u5c42\u7ec4\u6210\u7684\u77e9\u5f62\u5efa\u7b51\u3002\u6bcf\u4e2a\u7ea7\u522b\u90fd\u662f\u4f7f\u7528\u53ef\u914d\u7f6e\u7684\u7f51\u683c\u9635\u5217\u6216\u5355\u4e2a\u84dd\u56fe\u6784\u5efa\u7684\u3002\u5982\u679c\u4f7f\u7528\u7f51\u683c\u9635\u5217\uff0c\u5219\u6bcf\u4e2a\u7f51\u683c\u5c06\u6cbf\u5173\u5361\u968f\u673a\u91cd\u590d\u4ee5\u63d0\u4f9b\u591a\u6837\u6027\u3002\u7f51\u683c\u4f53\u521b\u5efa\u4e00\u6b21\uff0c\u6bcf\u4e2a\u91cd\u590d\u90fd\u5c06\u662f\u8be5\u7f51\u683c\u4f53\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u5730\u56fe\u7684\u6027\u80fd\u3002","title":"\u7a0b\u5e8f\u5316\u5efa\u7b51"},{"location":"tuto_M_custom_buildings/#_3","text":"\u8981\u5f00\u59cb\u5efa\u9020\u60a8\u7684\u5efa\u7b51\uff1a \u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u7684 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign \u3002 \u5c06 BP_Procedural_Building \u62d6\u5165BP_Procedural_Building\u573a\u666f\u4e2d\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5efa\u7b51\u7269\u7684\u6240\u6709\u9009\u9879\u3002\u6bcf\u6b21\u5728\u6b64\u5904\u8fdb\u884c\u66f4\u6539\u65f6\uff0c\u968f\u7740\u5173\u952e\u7f51\u683c\u4f53\u7684\u66f4\u65b0\uff0c\u5efa\u7b51\u7269\u5c06\u4ece\u573a\u666f\u89c6\u56fe\u4e2d\u6d88\u5931\u3002\u5355\u51fb Create Building \u4ee5\u67e5\u770b\u65b0\u7ed3\u679c\uff0c\u6216\u542f\u7528\u81ea\u52a8\u521b\u5efa\u4ee5\u907f\u514d\u91cd\u590d\u6b64\u6b65\u9aa4\u3002 \u5173\u952e\u7f51\u683c\u662f\u5efa\u7b51\u7269\u7ed3\u6784\u7684\u4e00\u90e8\u5206\u3002\u5b83\u4eec\u5206\u4e3a\u56db\u7c7b\uff1a Base: \u5e95\u5c42\u3002 Body: \u4e2d\u5c42\u3002 Top: \u6700\u9ad8\u5c42\u3002 Roof: \u8986\u76d6\u9876\u5c42\u7684\u5c4b\u9876\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u578b\uff0c\u9664\u4e86\u5c4b\u9876 Roof \u4e4b\u5916\uff0c\u90fd\u6709\u4e00\u4e2a\u7f51\u683c\u4f53\u586b\u5145\u5730\u677f\u7684\u4e2d\u5fc3\uff0c\u8fd8\u6709\u4e00\u4e2a Corner \u7f51\u683c\u4f53\u5c06\u653e\u7f6e\u5728\u5730\u677f\u7684\u4e24\u4fa7\u3002\u4e0b\u56fe\u4ee3\u8868\u4e86\u5168\u5c40\u7ed3\u6784\u3002 Visualization of the building structure. \u57fa\u672c\u53c2\u6570 Base parameters \u8bbe\u7f6e\u5c3a\u5bf8\u3002 \u697c\u5c42\u6570\uff1a \u5efa\u7b51\u7269\u7684\u697c\u5c42\u6570\u3002\u8eab\u4f53\u7f51\u683c Body \u7684\u91cd\u590d\u3002 \u957f\u5ea6 X and \u957f\u5ea6 Y\uff1a \u5efa\u7b51\u7269\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u5efa\u7b51\u7269\u6bcf\u4e00\u4fa7\u7684\u4e2d\u592e\u7f51\u683c\u91cd\u590d\u3002 BP_Procedural_Building \u793a\u4f8b\u3002","title":"\u5efa\u7b51\u7ed3\u6784"},{"location":"tuto_M_custom_buildings/#_4","text":"\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u9009\u9879\u53ef\u4ee5\u4fee\u6539\u5efa\u7b51\u7269\u7684\u603b\u4f53\u7ed3\u6784\u3002 Disable corners: \u5982\u679c\u9009\u62e9\uff0c\u5c06\u4e0d\u4f7f\u7528\u89d2\u7f51\u683c\u3002 Use full blocks: \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5efa\u7b51\u7269\u7684\u7ed3\u6784\u6bcf\u5c42\u5c06\u4ec5\u4f7f\u7528\u4e00\u4e2a\u7f51\u683c\u3002\u6bcf\u5c42\u697c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u89d2\u843d\u6216\u91cd\u590d\u3002 Doors: \u51fa\u73b0\u5728\u5e95\u5c42\u3001\u4f4d\u4e8e\u4e2d\u592e\u7f51\u683c\u7269\u4f53\u6b63\u524d\u65b9\u7684\u7f51\u683c\u7269\u4f53\u3002\u95e8\u7684\u6570\u91cf\u53ca\u5176\u4f4d\u7f6e\u53ef\u4ee5\u8bbe\u7f6e\u3002 0 \u662f\u521d\u59cb\u4f4d\u7f6e\u3001 1 \u4e0b\u4e00\u4e2a\u5e95\u5c42\u91cd\u590d\uff0c\u7b49\u7b49\u3002 Walls: \u66ff\u4ee3\u5efa\u7b51\u7269\u4e00\u4fa7\u6216\u591a\u4fa7\u7684\u7f51\u683c\u3002\u4f8b\u5982\uff0c\u5e73\u9762\u7f51\u683c\u53ef\u7528\u4e8e\u7ed8\u5236\u5efa\u7b51\u7269\u7684\u4e00\u4fa7\u3002 \u5de6\u8fb9\u662f\u4e00\u5ea7\u6ca1\u6709\u89d2\u3001\u53ea\u6709\u4e00\u6247\u95e8\u7684\u5efa\u7b51\u3002 \u53f3\u4fa7\u662f\u4e00\u5ea7\u5efa\u7b51\u7269\uff0c\u5176\u4e00\u4fa7\u5e94\u7528\u4e86\u5899\u58c1\u3002\u5899\u58c1\u662f\u6ca1\u6709\u9632\u706b\u901a\u9053\u7684\u7eb9\u7406\u3002","title":"\u7ed3\u6784\u4fee\u6539"},{"location":"tuto_M_custom_buildings/#_5","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u84dd\u56fe\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_custom_layers/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe \u5229\u7528\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u7684\u7ea7\u522b\u53ef\u4ee5\u8ba9\u591a\u4eba\u540c\u65f6\u5728\u4e00\u5f20\u5730\u56fe\u4e0a\u5de5\u4f5c\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u4f7f\u7528 Python API \u5728\u5730\u56fe\u4e0a\u52a0\u8f7d\u548c\u5378\u8f7d\u56fe\u5c42\uff0c\u5c31\u50cf \u5206\u5c42\u7684 CARLA \u5730\u56fe \u4e00\u6837\u3002 \u672c\u6307\u5357\u5c06\u89e3\u91ca\u5982\u4f55\u6dfb\u52a0\u65b0\u5173\u5361\u3001\u5982\u4f55\u5411\u5173\u5361\u6dfb\u52a0\u8d44\u6e90\u4ee5\u53ca\u5982\u4f55\u5c06\u5173\u5361\u914d\u7f6e\u4e3a\u59cb\u7ec8\u52a0\u8f7d\u6216\u4e0d\u52a0\u8f7d\u3002 \u6dfb\u52a0\u65b0\u5173\u5361 \u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u5173\u5361 \u914d\u7f6e\u5173\u5361\u52a0\u8f7d\u9009\u9879 \u4e0b\u4e00\u6b65 \u6dfb\u52a0\u65b0\u5173\u5361 \u5730\u56fe\u4e2d\u7684\u6240\u6709\u65b0\u5173\u5361\u90fd\u5c06\u5d4c\u5957\u5728\u7236\u5173\u5361\u4e2d\uff0c\u79f0\u4e3a\u201c\u6301\u4e45\u5173\u5361\u201d\u3002\u8981\u521b\u5efa\u65b0\u5173\u5361\uff1a 1. \u6253\u5f00\u5173\u5361\u9762\u677f\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u4ece\u83dc\u5355\u680f\u4e2d\u6253\u5f00\u201c\u7a97\u53e3\u201d\u3002 \u5355\u51fb\u201c\u5173\u5361\u201d\u3002 2. \u521b\u5efa\u65b0\u5173\u5361\u3002 \u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\uff0c\u5355\u51fb\u201c\u5173\u5361\u201d\u5e76\u9009\u62e9\u201c\u65b0\u5efa......\u201d\u3002 \u9009\u62e9\u201c\u7a7a\u5173\u5361\u201d\u3002 \u5c06\u5173\u5361\u4fdd\u5b58\u5728 Content/Carla/Maps/Sublevels/<map_name>/ \u3002 \u8981\u5c06\u5173\u5361\u4e0e CARLA Python API \u96c6\u6210\uff0c\u8bf7\u4f7f\u7528\u547d\u540d\u7ea6\u5b9a <map_name>_<layer_name> \uff0c\u6bd4\u5982, TutorialMap_Buildings \u3002\u6709\u5173\u53ef\u7528\u5173\u5361\u7684\u5217\u8868\uff0c\u8bf7\u67e5\u770b \u6b64\u5904 \u3002 \u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u5173\u5361 1. \u9009\u62e9\u60a8\u8981\u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u7684\u5173\u5361 \u3002 \u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\uff0c\u53cc\u51fb\u8981\u6dfb\u52a0\u8d44\u6e90\u7684\u201c\u5173\u5361\u201d\u3002\u901a\u8fc7\u5207\u6362\u9501\u56fe\u6807\u786e\u4fdd\u5173\u5361\u5df2\u89e3\u9501\u3002 2. \u9009\u62e9\u8981\u6dfb\u52a0\u7684\u8d44\u4ea7\u3002 \u9009\u62e9\u60a8\u60f3\u8981\u6dfb\u52a0\u5230\u5173\u5361\u7684\u6240\u6709\u8d44\u4ea7\u3002 \u53f3\u952e\u5355\u51fb\u5e76\u8f6c\u5230\u201c\u5173\u5361\u201d\u3002 \u5355\u51fb \u5c06\u9009\u62e9\u79fb\u52a8\u5230\u5f53\u524d\u5173\u5361 \u3002 3. \u4fdd\u5b58\u5173\u5361\u3002 \u5982\u679c\u67d0\u4e2a\u5173\u5361\u6709\u5f85\u4fdd\u5b58\u7684\u66f4\u6539\uff0c\u60a8\u5c06\u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\u770b\u5230\u8be5\u5173\u5361\u65c1\u8fb9\u6709\u4e00\u4e2a\u94c5\u7b14\u56fe\u6807\u3002\u5355\u51fb\u6b64\u6309\u94ae\u4fdd\u5b58\u66f4\u6539\u3002 \u914d\u7f6e\u5173\u5361\u52a0\u8f7d\u9009\u9879 \u5173\u5361\u53ef\u4ee5\u914d\u7f6e\u4e3a\u80fd\u591f\u5207\u6362\u6216\u59cb\u7ec8\u52a0\u8f7d\u3002\u8981\u914d\u7f6e\u4efb\u4e00\u9009\u9879\u7684\u7ea7\u522b\uff1a \u53f3\u952e\u5355\u51fb\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\u7684\u5173\u5361\uff0c\u7136\u540e\u8f6c\u5230\u201c\u4fee\u6539\u6d41\u9001\u65b9\u6cd5\u201d\u3002 \u9009\u62e9\u6240\u9700\u7684\u8bbe\u7f6e\uff1a \u56fa\u5b9a\u52a0\u8f7d \uff1a \u65e0\u6cd5 \u901a\u8fc7 Python API \u5207\u6362\u5173\u5361\u3002 \u84dd\u56fe : \u53ef\u4ee5 \u901a\u8fc7 Python API \u5207\u6362\u5173\u5361\u3002\u5173\u5361\u540d\u79f0\u65c1\u8fb9\u4f1a\u51fa\u73b0\u4e00\u4e2a\u84dd\u70b9\u3002 \u65e0\u8bba\u8bbe\u7f6e\u5982\u4f55\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u6309\u773c\u775b\u56fe\u6807\u6765\u5207\u6362\u7f16\u8f91\u5668\u4e2d\u7684\u84dd\u56fe\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 A\u4f7f\u7528\u7a0b\u5e8f\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u8fde\u7eed\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe"},{"location":"tuto_M_custom_layers/#_1","text":"\u5229\u7528\u81ea\u5b9a\u4e49\u5730\u56fe\u4e2d\u7684\u7ea7\u522b\u53ef\u4ee5\u8ba9\u591a\u4eba\u540c\u65f6\u5728\u4e00\u5f20\u5730\u56fe\u4e0a\u5de5\u4f5c\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u4f7f\u7528 Python API \u5728\u5730\u56fe\u4e0a\u52a0\u8f7d\u548c\u5378\u8f7d\u56fe\u5c42\uff0c\u5c31\u50cf \u5206\u5c42\u7684 CARLA \u5730\u56fe \u4e00\u6837\u3002 \u672c\u6307\u5357\u5c06\u89e3\u91ca\u5982\u4f55\u6dfb\u52a0\u65b0\u5173\u5361\u3001\u5982\u4f55\u5411\u5173\u5361\u6dfb\u52a0\u8d44\u6e90\u4ee5\u53ca\u5982\u4f55\u5c06\u5173\u5361\u914d\u7f6e\u4e3a\u59cb\u7ec8\u52a0\u8f7d\u6216\u4e0d\u52a0\u8f7d\u3002 \u6dfb\u52a0\u65b0\u5173\u5361 \u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u5173\u5361 \u914d\u7f6e\u5173\u5361\u52a0\u8f7d\u9009\u9879 \u4e0b\u4e00\u6b65","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5206\u5c42\u5730\u56fe"},{"location":"tuto_M_custom_layers/#_2","text":"\u5730\u56fe\u4e2d\u7684\u6240\u6709\u65b0\u5173\u5361\u90fd\u5c06\u5d4c\u5957\u5728\u7236\u5173\u5361\u4e2d\uff0c\u79f0\u4e3a\u201c\u6301\u4e45\u5173\u5361\u201d\u3002\u8981\u521b\u5efa\u65b0\u5173\u5361\uff1a 1. \u6253\u5f00\u5173\u5361\u9762\u677f\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u4ece\u83dc\u5355\u680f\u4e2d\u6253\u5f00\u201c\u7a97\u53e3\u201d\u3002 \u5355\u51fb\u201c\u5173\u5361\u201d\u3002 2. \u521b\u5efa\u65b0\u5173\u5361\u3002 \u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\uff0c\u5355\u51fb\u201c\u5173\u5361\u201d\u5e76\u9009\u62e9\u201c\u65b0\u5efa......\u201d\u3002 \u9009\u62e9\u201c\u7a7a\u5173\u5361\u201d\u3002 \u5c06\u5173\u5361\u4fdd\u5b58\u5728 Content/Carla/Maps/Sublevels/<map_name>/ \u3002 \u8981\u5c06\u5173\u5361\u4e0e CARLA Python API \u96c6\u6210\uff0c\u8bf7\u4f7f\u7528\u547d\u540d\u7ea6\u5b9a <map_name>_<layer_name> \uff0c\u6bd4\u5982, TutorialMap_Buildings \u3002\u6709\u5173\u53ef\u7528\u5173\u5361\u7684\u5217\u8868\uff0c\u8bf7\u67e5\u770b \u6b64\u5904 \u3002","title":"\u6dfb\u52a0\u65b0\u5173\u5361"},{"location":"tuto_M_custom_layers/#_3","text":"1. \u9009\u62e9\u60a8\u8981\u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u7684\u5173\u5361 \u3002 \u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\uff0c\u53cc\u51fb\u8981\u6dfb\u52a0\u8d44\u6e90\u7684\u201c\u5173\u5361\u201d\u3002\u901a\u8fc7\u5207\u6362\u9501\u56fe\u6807\u786e\u4fdd\u5173\u5361\u5df2\u89e3\u9501\u3002 2. \u9009\u62e9\u8981\u6dfb\u52a0\u7684\u8d44\u4ea7\u3002 \u9009\u62e9\u60a8\u60f3\u8981\u6dfb\u52a0\u5230\u5173\u5361\u7684\u6240\u6709\u8d44\u4ea7\u3002 \u53f3\u952e\u5355\u51fb\u5e76\u8f6c\u5230\u201c\u5173\u5361\u201d\u3002 \u5355\u51fb \u5c06\u9009\u62e9\u79fb\u52a8\u5230\u5f53\u524d\u5173\u5361 \u3002 3. \u4fdd\u5b58\u5173\u5361\u3002 \u5982\u679c\u67d0\u4e2a\u5173\u5361\u6709\u5f85\u4fdd\u5b58\u7684\u66f4\u6539\uff0c\u60a8\u5c06\u5728\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\u770b\u5230\u8be5\u5173\u5361\u65c1\u8fb9\u6709\u4e00\u4e2a\u94c5\u7b14\u56fe\u6807\u3002\u5355\u51fb\u6b64\u6309\u94ae\u4fdd\u5b58\u66f4\u6539\u3002","title":"\u5c06\u8d44\u4ea7\u6dfb\u52a0\u5230\u5173\u5361"},{"location":"tuto_M_custom_layers/#_4","text":"\u5173\u5361\u53ef\u4ee5\u914d\u7f6e\u4e3a\u80fd\u591f\u5207\u6362\u6216\u59cb\u7ec8\u52a0\u8f7d\u3002\u8981\u914d\u7f6e\u4efb\u4e00\u9009\u9879\u7684\u7ea7\u522b\uff1a \u53f3\u952e\u5355\u51fb\u201c\u5173\u5361\u201d\u9762\u677f\u4e2d\u7684\u5173\u5361\uff0c\u7136\u540e\u8f6c\u5230\u201c\u4fee\u6539\u6d41\u9001\u65b9\u6cd5\u201d\u3002 \u9009\u62e9\u6240\u9700\u7684\u8bbe\u7f6e\uff1a \u56fa\u5b9a\u52a0\u8f7d \uff1a \u65e0\u6cd5 \u901a\u8fc7 Python API \u5207\u6362\u5173\u5361\u3002 \u84dd\u56fe : \u53ef\u4ee5 \u901a\u8fc7 Python API \u5207\u6362\u5173\u5361\u3002\u5173\u5361\u540d\u79f0\u65c1\u8fb9\u4f1a\u51fa\u73b0\u4e00\u4e2a\u84dd\u70b9\u3002 \u65e0\u8bba\u8bbe\u7f6e\u5982\u4f55\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u6309\u773c\u775b\u56fe\u6807\u6765\u5207\u6362\u7f16\u8f91\u5668\u4e2d\u7684\u84dd\u56fe\u3002","title":"\u914d\u7f6e\u5173\u5361\u52a0\u8f7d\u9009\u9879"},{"location":"tuto_M_custom_layers/#_5","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 A\u4f7f\u7528\u7a0b\u5e8f\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u8fde\u7eed\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_custom_map_overview/","text":"\u6dfb\u52a0\u65b0\u5730\u56fe Carla \u7684\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u8fd0\u884c\u6a21\u62df\u3002\u5728 Carla \u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u65b9\u6cd5\u6709\u591a\u79cd\u3002\u8981\u4f7f\u7528\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u6253\u5305\u7248\u672c\u8fd8\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7248\u672c\u3002\u672c\u8282\u6982\u8ff0\u4e86\u542f\u52a8\u8be5\u6d41\u7a0b\u6240\u9700\u7684\u5185\u5bb9\u3001\u53ef\u7528\u4e8e\u5bfc\u5165\u7684\u4e0d\u540c\u9009\u9879\u4ee5\u53ca\u53ef\u7528\u7684\u81ea\u5b9a\u4e49\u548c\u884c\u4eba\u5bfc\u822a\u5de5\u5177\u3002 \u6982\u8ff0 \u751f\u6210 \u5bfc\u5165 \u5b9a\u5236 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u6982\u8ff0 \u5728 CARLA \u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u5730\u56fe\u6d89\u53ca\u56db\u4e2a\u4e3b\u8981\u8fc7\u7a0b\uff1a \u751f\u6210 \u5bfc\u5165 \u5b9a\u5236 \u884c\u4eba\u5bfc\u822a \u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u4e86\u89e3\u6709\u5173\u6bcf\u4e2a\u6d41\u7a0b\u7684\u5176\u4ed6\u4e00\u822c\u4fe1\u606f\u3002 \u751f\u6210 CARLA \u9700\u8981 .fbx \u683c\u5f0f\u7684\u5730\u56fe\u51e0\u4f55\u4fe1\u606f\u548c .xodr \u683c\u5f0f\u7684 OpenDRIVE \u4fe1\u606f\u3002\u76ee\u524d\u63a8\u8350\u7684\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6\u7684\u8f6f\u4ef6\u662f RoadRunner\u3002 \u672c\u6307\u5357 \u8bf4\u660e\u5982\u4f55\u4f7f\u7528 RoadRunner \u751f\u6210\u5730\u56fe\u4fe1\u606f\u3002 \u5bfc\u5165 \u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u5730\u56fe\u5bfc\u5165 Carla\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u8f6f\u4ef6\u5305\u7248\u672c \uff0c\u60a8\u5c06\u4f7f\u7528 Docker \u5bfc\u5165\u5730\u56fe\u3002\u6b64\u9009\u9879\u4ec5\u5728 Linux \u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u81ea\u5b9a\u4e49\u5730\u56fe\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u6e90\u4ee3\u7801\u6784\u5efa \u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u79cd\u65b9\u6cd5\u5bfc\u5165\u5730\u56fe\uff1a \u4f7f\u7528\u81ea\u52a8 make import \u6d41\u7a0b\uff08\u63a8\u8350\uff09\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u4f7f\u7528 RoadRunner \u63d2\u4ef6\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u624b\u52a8\u5c06\u5730\u56fe\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u4ee5\u4e0b\u89c6\u9891\u4ecb\u7ecd\u4e86\u5c06\u5730\u56fe\u5bfc\u5165 Carla \u7684\u4e00\u4e9b\u53ef\u7528\u65b9\u6cd5\uff1a \u5b9a\u5236 \u9664\u4e86\u6570\u767e\u4e2a\u51c6\u5907\u6dfb\u52a0\u5230\u666f\u89c2\u4e2d\u7684\u9759\u6001\u7f51\u683c\u7269\u4f53\u5916\uff0cCarla \u8fd8\u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u60a8\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u6dfb\u52a0\u5b50\u5173\u5361\uff1a \u5b50\u5173\u5361\u5c06\u5141\u8bb8\u591a\u4eba\u540c\u65f6\u5728\u540c\u4e00\u5f20\u5730\u56fe\u4e0a\u5de5\u4f5c\u3002\u5b83\u4eec\u8fd8\u5141\u8bb8\u60a8\u4f7f\u7528 Python API \u5207\u6362\u5730\u56fe\u7684\u56fe\u5c42\uff0c\u5c31\u50cf Carla \u5206\u5c42\u5730\u56fe\u4e00\u6837\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u8bbe\u7f6e\u9ed8\u8ba4\u5929\u6c14\uff1a \u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u9884\u8bbe\uff0c\u627e\u5230\u6b63\u786e\u7684\u7ec4\u5408\u540e\uff0c\u4e3a\u60a8\u7684\u5730\u56fe\u8bbe\u7f6e\u9ed8\u8ba4\u5929\u6c14\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u586b\u5145\u666f\u89c2\uff1a \u4f7f\u7528\u84dd\u56fe\u901a\u8fc7\u91cd\u590d\u7f51\u683c\uff08\u4f8b\u5982\u8def\u706f\u3001\u7535\u7ebf\u548c\u5899\u58c1\uff09\u586b\u5145\u666f\u89c2\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u7ed8\u5236\u9053\u8def\uff1a \u4f7f\u7528\u6df7\u5408\u4e0d\u540c\u7eb9\u7406\u7684\u4e3b\u6750\u8d28\u7ed8\u5236\u9053\u8def\u3002\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\uff0c\u4f8b\u5982\u843d\u53f6\u3001\u88c2\u7f1d\u6216\u6c99\u4e95\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u6dfb\u52a0\u7a0b\u5e8f\u5316\u5efa\u7b51\u7269\uff1a \u4f7f\u7528\u7a0b\u5e8f\u5316\u5efa\u7b51\u84dd\u56fe\u6dfb\u52a0\u5177\u6709\u81ea\u5b9a\u4e49\u5c3a\u5bf8\u3001\u697c\u5c42\u6570\u91cf\u548c\u53ef\u53d8\u7f51\u683c\u7ec4\u5408\u7684\u5efa\u7b51\u7269\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u6dfb\u52a0\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\uff1a \u6dfb\u52a0\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u5e76\u914d\u7f6e\u5176\u5f71\u54cd\u533a\u57df\u3002\u8def\u53e3\u7684\u7ea2\u7eff\u706f\u7ec4\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u4e3a\u4e86\u751f\u6210\u884c\u4eba\u5e76\u5728\u5730\u56fe\u4e0a\u5bfc\u822a\uff0c\u60a8\u9700\u8981\u4f7f\u7528 Carla \u63d0\u4f9b\u7684\u5de5\u5177\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f\u3002\u884c\u4eba\u5bfc\u822a\u5e94\u5728\u5b8c\u6210\u5730\u56fe\u81ea\u5b9a\u4e49\u540e\u751f\u6210\uff0c\u4ee5\u4fbf\u4e0d\u4f1a\u5728\u5bfc\u822a\u8def\u5f84\u4e0a\u65b9\u521b\u5efa\u969c\u788d\u7269\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u5982\u679c\u60a8\u5bf9\u4e0a\u8ff0\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"Carla \u4e2d\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u6982\u8ff0"},{"location":"tuto_M_custom_map_overview/#_1","text":"Carla \u7684\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u8fd0\u884c\u6a21\u62df\u3002\u5728 Carla \u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u65b9\u6cd5\u6709\u591a\u79cd\u3002\u8981\u4f7f\u7528\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u662f Carla \u7684\u6253\u5305\u7248\u672c\u8fd8\u662f\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u7248\u672c\u3002\u672c\u8282\u6982\u8ff0\u4e86\u542f\u52a8\u8be5\u6d41\u7a0b\u6240\u9700\u7684\u5185\u5bb9\u3001\u53ef\u7528\u4e8e\u5bfc\u5165\u7684\u4e0d\u540c\u9009\u9879\u4ee5\u53ca\u53ef\u7528\u7684\u81ea\u5b9a\u4e49\u548c\u884c\u4eba\u5bfc\u822a\u5de5\u5177\u3002 \u6982\u8ff0 \u751f\u6210 \u5bfc\u5165 \u5b9a\u5236 \u751f\u6210\u884c\u4eba\u5bfc\u822a","title":"\u6dfb\u52a0\u65b0\u5730\u56fe"},{"location":"tuto_M_custom_map_overview/#_2","text":"\u5728 CARLA \u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u5730\u56fe\u6d89\u53ca\u56db\u4e2a\u4e3b\u8981\u8fc7\u7a0b\uff1a \u751f\u6210 \u5bfc\u5165 \u5b9a\u5236 \u884c\u4eba\u5bfc\u822a \u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u4e86\u89e3\u6709\u5173\u6bcf\u4e2a\u6d41\u7a0b\u7684\u5176\u4ed6\u4e00\u822c\u4fe1\u606f\u3002","title":"\u6982\u8ff0"},{"location":"tuto_M_custom_map_overview/#_3","text":"CARLA \u9700\u8981 .fbx \u683c\u5f0f\u7684\u5730\u56fe\u51e0\u4f55\u4fe1\u606f\u548c .xodr \u683c\u5f0f\u7684 OpenDRIVE \u4fe1\u606f\u3002\u76ee\u524d\u63a8\u8350\u7684\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6\u7684\u8f6f\u4ef6\u662f RoadRunner\u3002 \u672c\u6307\u5357 \u8bf4\u660e\u5982\u4f55\u4f7f\u7528 RoadRunner \u751f\u6210\u5730\u56fe\u4fe1\u606f\u3002","title":"\u751f\u6210"},{"location":"tuto_M_custom_map_overview/#_4","text":"\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u5730\u56fe\u5bfc\u5165 Carla\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u8f6f\u4ef6\u5305\u7248\u672c \uff0c\u60a8\u5c06\u4f7f\u7528 Docker \u5bfc\u5165\u5730\u56fe\u3002\u6b64\u9009\u9879\u4ec5\u5728 Linux \u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u60a8\u5c06\u65e0\u6cd5\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u81ea\u5b9a\u4e49\u5730\u56fe\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Carla \u6e90\u4ee3\u7801\u6784\u5efa \u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u79cd\u65b9\u6cd5\u5bfc\u5165\u5730\u56fe\uff1a \u4f7f\u7528\u81ea\u52a8 make import \u6d41\u7a0b\uff08\u63a8\u8350\uff09\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u4f7f\u7528 RoadRunner \u63d2\u4ef6\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u624b\u52a8\u5c06\u5730\u56fe\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u4ee5\u4e0b\u89c6\u9891\u4ecb\u7ecd\u4e86\u5c06\u5730\u56fe\u5bfc\u5165 Carla \u7684\u4e00\u4e9b\u53ef\u7528\u65b9\u6cd5\uff1a","title":"\u5bfc\u5165"},{"location":"tuto_M_custom_map_overview/#_5","text":"\u9664\u4e86\u6570\u767e\u4e2a\u51c6\u5907\u6dfb\u52a0\u5230\u666f\u89c2\u4e2d\u7684\u9759\u6001\u7f51\u683c\u7269\u4f53\u5916\uff0cCarla \u8fd8\u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\u548c\u6307\u5357\u6765\u5e2e\u52a9\u60a8\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a \u6dfb\u52a0\u5b50\u5173\u5361\uff1a \u5b50\u5173\u5361\u5c06\u5141\u8bb8\u591a\u4eba\u540c\u65f6\u5728\u540c\u4e00\u5f20\u5730\u56fe\u4e0a\u5de5\u4f5c\u3002\u5b83\u4eec\u8fd8\u5141\u8bb8\u60a8\u4f7f\u7528 Python API \u5207\u6362\u5730\u56fe\u7684\u56fe\u5c42\uff0c\u5c31\u50cf Carla \u5206\u5c42\u5730\u56fe\u4e00\u6837\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u8bbe\u7f6e\u9ed8\u8ba4\u5929\u6c14\uff1a \u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u9884\u8bbe\uff0c\u627e\u5230\u6b63\u786e\u7684\u7ec4\u5408\u540e\uff0c\u4e3a\u60a8\u7684\u5730\u56fe\u8bbe\u7f6e\u9ed8\u8ba4\u5929\u6c14\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u586b\u5145\u666f\u89c2\uff1a \u4f7f\u7528\u84dd\u56fe\u901a\u8fc7\u91cd\u590d\u7f51\u683c\uff08\u4f8b\u5982\u8def\u706f\u3001\u7535\u7ebf\u548c\u5899\u58c1\uff09\u586b\u5145\u666f\u89c2\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u7ed8\u5236\u9053\u8def\uff1a \u4f7f\u7528\u6df7\u5408\u4e0d\u540c\u7eb9\u7406\u7684\u4e3b\u6750\u8d28\u7ed8\u5236\u9053\u8def\u3002\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\uff0c\u4f8b\u5982\u843d\u53f6\u3001\u88c2\u7f1d\u6216\u6c99\u4e95\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u6dfb\u52a0\u7a0b\u5e8f\u5316\u5efa\u7b51\u7269\uff1a \u4f7f\u7528\u7a0b\u5e8f\u5316\u5efa\u7b51\u84dd\u56fe\u6dfb\u52a0\u5177\u6709\u81ea\u5b9a\u4e49\u5c3a\u5bf8\u3001\u697c\u5c42\u6570\u91cf\u548c\u53ef\u53d8\u7f51\u683c\u7ec4\u5408\u7684\u5efa\u7b51\u7269\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u6dfb\u52a0\u4ea4\u901a\u706f\u548c\u4ea4\u901a\u6807\u5fd7\uff1a \u6dfb\u52a0\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u5e76\u914d\u7f6e\u5176\u5f71\u54cd\u533a\u57df\u3002\u8def\u53e3\u7684\u7ea2\u7eff\u706f\u7ec4\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002","title":"\u5b9a\u5236"},{"location":"tuto_M_custom_map_overview/#_6","text":"\u4e3a\u4e86\u751f\u6210\u884c\u4eba\u5e76\u5728\u5730\u56fe\u4e0a\u5bfc\u822a\uff0c\u60a8\u9700\u8981\u4f7f\u7528 Carla \u63d0\u4f9b\u7684\u5de5\u5177\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f\u3002\u884c\u4eba\u5bfc\u822a\u5e94\u5728\u5b8c\u6210\u5730\u56fe\u81ea\u5b9a\u4e49\u540e\u751f\u6210\uff0c\u4ee5\u4fbf\u4e0d\u4f1a\u5728\u5bfc\u822a\u8def\u5f84\u4e0a\u65b9\u521b\u5efa\u969c\u788d\u7269\u3002 \u60a8\u53ef\u4ee5\u5728 \u6b64\u5904 \u627e\u5230\u6307\u5357\u3002 \u5982\u679c\u60a8\u5bf9\u4e0a\u8ff0\u8fc7\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u968f\u65f6\u5728 \u8bba\u575b \u4e2d\u53d1\u5e03\u3002 Carla \u8bba\u575b","title":"\u751f\u6210\u884c\u4eba\u5bfc\u822a"},{"location":"tuto_M_custom_road_painter/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u9053\u8def\u753b\u5bb6 \u672c\u6307\u5357\u89e3\u91ca\u4e86\u4ec0\u4e48\u662f\u9053\u8def\u7ed8\u5236\u5de5\u5177\uff0c\u5982\u4f55\u4f7f\u7528\u5b83\u901a\u8fc7\u7ec4\u5408\u4e0d\u540c\u7684\u7eb9\u7406\u6765\u81ea\u5b9a\u4e49\u9053\u8def\u7684\u5916\u89c2\uff0c\u5982\u4f55\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u53ca\u5982\u4f55\u6839\u636e\u9053\u8def\u7eb9\u7406\u66f4\u65b0\u8f66\u9053\u6807\u8bb0\u7684\u5916\u89c2\u3002 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u76ee\u6807 \u51c6\u5907\u4e3b\u6750\u8d28 \u63cf\u7ed8\u9053\u8def \u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2 \u4e0b\u4e00\u6b65 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u9053\u8def\u753b\u5bb6\u5de5\u5177\u662f\u4e00\u4e2a\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u5feb\u901f\u7ed8\u5236\u9053\u8def\u7684\u84dd\u56fe\u3002\u5b83\u91c7\u7528\u4e3b\u6750\u8d28\u5e76\u5c06\u5176\u5e94\u7528\u5230\u9053\u8def\u7684\u6e32\u67d3\u76ee\u6807\u4ee5\u7528\u4f5c\u753b\u5e03\u3002\u4e3b\u6750\u8d28\u7531\u4e00\u7cfb\u5217\u6750\u8d28\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6750\u8d28\u53ef\u4ee5\u4f7f\u7528\u753b\u7b14\u6df7\u5408\u5e76\u7528\u4f5c\u8499\u7248\u3002\u65e0\u9700\u5e94\u7528\u5149\u5ea6\u6d4b\u5b9a\u6280\u672f\uff0c\u4e5f\u65e0\u9700\u8003\u8651\u51e0\u4f55\u4f53\u7684 UV\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u9053\u8def\u6cb9\u6f06\u5de5\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u6765\u6cb9\u6f06\u9053\u8def\u3002\u786e\u4fdd\u60a8\u7684 .xodr \u6587\u4ef6\u4e0e\u5730\u56fe\u540c\u540d\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 \u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u76ee\u6807 1. \u521b\u5efa RoadPainter \u53c2\u4e0e\u8005\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign \u3002 \u5c06 RoadPainter \u62d6\u5165\u573a\u666f\u4e2d\u3002 2. \u521b\u5efa\u6e32\u67d3\u76ee\u6807\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign/RoadPainterAssets \u3002 \u53f3\u952e\u5355\u51fb RenderTarget \u6587\u4ef6\u5e76\u9009\u62e9 Duplicate \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RenderTarget \u3002 3. \u521b\u5efa\u4e3b\u6750\u8d28\u5b9e\u4f8b\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game/Carla/Static/GenericMaterials/RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb M_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RoadMaster \u3002 4. \u91cd\u65b0\u6821\u51c6 Map Size (Cm) \uff0c\u4f7f\u5176\u7b49\u4e8e\u5730\u56fe\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002 \u9009\u62e9 RoadPainter \u573a\u666f\u4e2d\u7684\u53c2\u4e0e\u8005\u3002 \u8f6c\u5230 Details \u9762\u677f\u5e76\u6309 Z-Size \u6309\u94ae\u3002\u60a8\u5c06\u770b\u5230 Map Size (Cm) \u4e2d\u7684\u503c\u53d1\u751f\u53d8\u5316\u3002 5. \u540c\u6b65 RoadPainter \u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u5730\u56fe\u5c3a\u5bf8\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u6253\u5f00 Tutorial_RoadMaster \u3002 \u590d\u5236\u4e0a\u4e00\u6b65\u4e2d Map Size (Cm) \u7684\u503c\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\u7684 Global Scalar Parameter Values -> Map units (CM) \u3002 \u70b9\u51fb\u4fdd\u5b58\u3002 6. \u521b\u5efa\u9053\u8def\u753b\u5bb6\u548c\u4e3b\u6750\u8d28\u4e4b\u95f4\u7684\u901a\u4fe1\u94fe\u63a5\u3002 Tutorial_RenderTarget \u5c06\u662f\u9053\u8def\u753b\u5bb6\u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u901a\u4fe1\u7ebd\u5e26\u3002 \u5728 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\uff0c\u5c06 Tutorial_RenderTarget \u5e94\u7528\u4e8e Global Texture Parameter Values -> Texture Mask \u3002 \u4fdd\u5b58\u5e76\u5173\u95ed\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\uff0c\u8f6c\u5230 Details \u9762\u677f\u5e76\u5c06 Tutorial_RenderTarget \u5e94\u7528\u5230 Paint -> Render Target \u3002 \u51c6\u5907\u4e3b\u6750\u8d28 \u60a8\u521b\u5efa\u7684 Tutorial_RoadMaster \u6750\u8d28\uff0c\u5305\u542b\u57fa\u7840\u6750\u8d28\u3001\u989d\u5916\u6750\u8d28\u4fe1\u606f\u4ee5\u53ca\u5c06\u901a\u8fc7\u60a8\u7684 Tutorial_RenderTarget \u3002\u60a8\u53ef\u4ee5\u914d\u7f6e\u4e00\u79cd\u57fa\u7840\u6750\u6599\u548c\u6700\u591a\u4e09\u79cd\u9644\u52a0\u6750\u6599\u3002 \u8981\u914d\u7f6e\u6750\u6599\uff0c\u8bf7\u53cc\u51fb Tutorial_RoadMaster \u6587\u4ef6\u3002\u5728\u51fa\u73b0\u7684\u7a97\u53e3\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4e3a\u6bcf\u79cd\u6750\u6599\u9009\u62e9\u548c\u8c03\u6574\u4ee5\u4e0b\u503c\uff1a \u4eae\u5ea6(Brightness) \u8272\u8c03(Hue) \u9971\u548c\u5ea6(Saturation) AO Intensity \u6cd5\u7ebf\u8d34\u56fe\u5f3a\u5ea6(NormalMap Intensity) \u7c97\u7cd9\u5ea6\u5bf9\u6bd4(Roughness Contrast) \u7c97\u7cd9\u5ea6\u5f3a\u5ea6(Roughness Intensity) \u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4ee5\u4e0b\u503c\u5e76\u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22\u7eb9\u7406\u6765\u66f4\u6539\u6bcf\u79cd\u6750\u8d28\u7684\u7eb9\u7406\uff1a Diffuse Normal ORMH \u63a2\u7d22 Game/Carla/Static/GenericMaterials/Asphalt/Textures \u4e2d\u53ef\u7528\u7684\u4e00\u4e9b CARLA \u7eb9\u7406\u3002 \u63cf\u7ed8\u9053\u8def 1. \u5728\u9053\u8def\u753b\u5bb6\u548c\u9053\u8def\u4e4b\u95f4\u521b\u5efa\u94fe\u63a5\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u5728 World Outliner \u641c\u7d22\u6846\u4e2d\u8fdb\u884c Road_Road \u641c\u7d22\u3002 \u6309 Ctrl + A \u9009\u62e9\u6240\u6709\u9053\u8def\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Materials \u90e8\u5206\u5e76\u5e94\u7528 Tutorial_RoadMaster \u5230 Element 0 \u3001 Element 1 \u3001 Element 2 \u548c Element 3 \u3002 2. \u9009\u62e9\u8981\u5b9a\u5236\u7684\u6750\u8d28\u3002 \u6211\u4eec\u6dfb\u52a0\u7684 Tutorial_RoadMaster \u5355\u72ec\u5e94\u7528\u4e8e\u9053\u8def\uff0c\u5e76\u4f7f\u7528\u753b\u7b14\u5de5\u5177\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002\u8981\u5e94\u7528\u548c\u81ea\u5b9a\u4e49\u6750\u8d28\uff1a \u9009\u62e9\u9053\u8def\u6cb9\u753b\u5bb6\u53c2\u4e0e\u8005\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u5728 Mask Color \u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u8981\u4f7f\u7528\u7684\u6750\u8d28\u3002 3. \u8bbe\u7f6e\u753b\u7b14\u548c\u6a21\u677f\u53c2\u6570\u3002 \u5728 GenericMaterials/RoadStencil/Alphas \u4e2d\u6709\u591a\u79cd\u6a21\u677f\u53ef\u4f9b\u9009\u62e9\u3002\u6a21\u677f\u7528\u4e8e\u6839\u636e\u60a8\u7684\u9700\u8981\u7ed8\u5236\u9053\u8def\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u8fdb\u884c\u8c03\u6574\uff1a Stencil size \u2014 \u753b\u7b14\u7684\u5c3a\u5bf8\u3002 Brush strength \u2014 \u8f6e\u5ed3\u7684\u7c97\u7cd9\u5ea6\u3002 Spacebeween Brushes \u2014 \u7b14\u5212\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Max Jitter \u2014 \u7b14\u5212\u4e4b\u95f4\u753b\u7b14\u7684\u5927\u5c0f\u53d8\u5316\u3002 Stencil \u2014 \u8981\u4f7f\u7528\u7684\u753b\u7b14\u3002 Rotation \u2014 \u5e94\u7528\u4e8e\u7b14\u753b\u7684\u65cb\u8f6c\u3002 Brush panel. Different types of brushes. 4. \u5c06\u6bcf\u79cd\u6750\u6599\u6d82\u62b9\u5230\u9053\u8def\u7684\u6240\u9700\u90e8\u5206\u3002 \u901a\u8fc7 Details \u9762\u677f\u7684 Default \u90e8\u5206\u4e2d\u7684\u6309\u94ae\u9009\u62e9\u5e94\u7528\u6240\u9009\u6750\u8d28\u7684\u4f4d\u7f6e\uff1a Paint all roads \u2014 \u7c89\u5237\u6240\u6709\u9053\u8def\u3002 Paint by actor \u2014 \u7ed8\u753b\u7279\u5b9a\u7684\u3001\u9009\u5b9a\u7684\u53c2\u4e0e\u8005\u3002 Paint over circle \u2014 \u4f7f\u7528\u5706\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 Paint over square \u2014 \u4f7f\u7528\u6b63\u65b9\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 \u6b64\u90e8\u5206\u8fd8\u5305\u542b\u7528\u4e8e\u5220\u9664\u5df2\u5e94\u7528\u66f4\u6539\u7684\u9009\u9879\u3002 Clear all \u2014 \u64e6\u9664\u6240\u6709\u7ed8\u5236\u7684\u6750\u8d28\u3002 Clear materials \u2014 \u5220\u9664\u5f53\u524d\u6d3b\u52a8\u7684\u6750\u6599\u3002 Clear material by actor \u2014 \u5220\u9664\u6700\u63a5\u8fd1\u6240\u9009\u53c2\u4e0e\u8005\u7684\u6750\u8d28\u3002 Different painting and erasing options. 5. \u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u3002 \u60a8\u53ef\u4ee5\u5728 Content/Carla/Static/Decals \u548c Content/Carla/Static \u4e2d\u63a2\u7d22\u53ef\u7528\u7684\u8d34\u82b1\u548c\u7f51\u683c\u3002\u901a\u8fc7\u6269\u5c55\u5e76\u6dfb\u52a0\u5230 Decals Spawn \u548c Meshes Spawn \u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u9053\u8def\u7ed8\u5236\u5668\u4e2d\u3002\u5bf9\u4e8e\u6bcf\u4e00\u9879\uff0c\u60a8\u90fd\u53ef\u4ee5\u914d\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Number of Decals/Meshes - \u8981\u7ed8\u5236\u7684\u6bcf\u4e2a\u8d34\u82b1\u6216\u7f51\u683c\u7684\u6570\u91cf\u3002 Decal/Mesh Scale \u2014 \u6bcf\u4e2a\u8f74\u7684\u8d34\u82b1/\u7f51\u683c\u6bd4\u4f8b\u3002 Fixed Decal/Mesh Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u504f\u5dee\u3002 Random Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u6700\u5927\u504f\u5dee\u3002 Decal/Mesh Random Yaw \u2014 \u6700\u5927\u968f\u673a\u504f\u822a\u65cb\u8f6c\u3002 Decal/Mesh Min Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5c0f\u968f\u673a\u6bd4\u4f8b\u3002 Decal/Mesh Max Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5927\u968f\u673a\u6bd4\u4f8b\u3002 \u8d34\u82b1\u548c\u7f51\u683c\u9762\u677f\u3002 \u914d\u7f6e\u597d\u7f51\u683c\u548c\u8d34\u82b1\u540e\uff0c\u901a\u8fc7\u6309 Spawn decals \u548c\u751f\u6210\u5b83\u4eec Spawn meshes \u3002 \u7b14\u8bb0 \u786e\u4fdd\u7f51\u683c\u548c\u8d34\u82b1\u6ca1\u6709\u542f\u7528\u78b0\u649e\uff0c\u4ee5\u514d\u5e72\u6270\u9053\u8def\u4e0a\u7684\u6c7d\u8f66\u5e76\u5c06\u4efb\u4f55\u8fb9\u754c\u6846\u964d\u4f4e\u5230\u9053\u8def\u6c34\u5e73\u3002 7. \u5c1d\u8bd5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u6750\u8d28\u3001\u7eb9\u7406\u3001\u8bbe\u7f6e\u3001\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\u56fe\u50cf\uff0c\u663e\u793a\u4e86\u5728\u7ed8\u5236\u6bcf\u79cd\u6750\u8d28\u7684\u8fc7\u7a0b\u4e2d\u9053\u8def\u5916\u89c2\u5982\u4f55\u53d8\u5316\u3002 \u57fa\u7840\u9053\u8def\u6750\u6599\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 1 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 2 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 3 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u8d34\u82b1\u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u7f51\u683c\u540e\u7684\u793a\u4f8b\u3002 \u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2 \u7ed8\u5236\u9053\u8def\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u66f4\u65b0\u9053\u8def\u6807\u8bb0\u7684\u5916\u89c2\uff1a 1. \u590d\u5236\u4e3b\u6750\u6599\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Game/Carla/Static/GenericMaterials/RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb Tutorial_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_LaneMarkings \u3002 2. \u914d\u7f6e\u8f66\u9053\u7ebf\u6750\u8d28\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u53cc\u51fb Tutorial_LaneMarkings \u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Global Static Switch Parameter Values \u90e8\u5206\uff0c\u7136\u540e\u9009\u4e2d LaneMark \u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6846\u3002 \u8f6c\u5230 Texture \u90e8\u5206\u5e76\u9009\u4e2d LaneColor \u548c Uv Size \u590d\u9009\u6846\u3002 \u5728 LaneColor \u4e2d\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u9053\u6807\u8bb0\u989c\u8272\u3002 \u4fdd\u5b58 \u5e76\u5173\u95ed\u3002 3. \u9009\u62e9\u8f66\u9053\u7ebf\u7f51\u683c\u3002 \u5c06\u6750\u6599\u62d6\u5230\u60a8\u60f3\u8981\u7740\u8272\u7684\u8f66\u9053\u7ebf\u4e0a\u3002\u5982\u679c\u9700\u8981\uff0c\u5bf9\u4e0d\u540c\u989c\u8272\u7684\u8f66\u9053\u7ebf\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1aRoad painter"},{"location":"tuto_M_custom_road_painter/#_1","text":"\u672c\u6307\u5357\u89e3\u91ca\u4e86\u4ec0\u4e48\u662f\u9053\u8def\u7ed8\u5236\u5de5\u5177\uff0c\u5982\u4f55\u4f7f\u7528\u5b83\u901a\u8fc7\u7ec4\u5408\u4e0d\u540c\u7684\u7eb9\u7406\u6765\u81ea\u5b9a\u4e49\u9053\u8def\u7684\u5916\u89c2\uff0c\u5982\u4f55\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u53ca\u5982\u4f55\u6839\u636e\u9053\u8def\u7eb9\u7406\u66f4\u65b0\u8f66\u9053\u6807\u8bb0\u7684\u5916\u89c2\u3002 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u76ee\u6807 \u51c6\u5907\u4e3b\u6750\u8d28 \u63cf\u7ed8\u9053\u8def \u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2 \u4e0b\u4e00\u6b65","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u9053\u8def\u753b\u5bb6"},{"location":"tuto_M_custom_road_painter/#_2","text":"\u9053\u8def\u753b\u5bb6\u5de5\u5177\u662f\u4e00\u4e2a\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u5feb\u901f\u7ed8\u5236\u9053\u8def\u7684\u84dd\u56fe\u3002\u5b83\u91c7\u7528\u4e3b\u6750\u8d28\u5e76\u5c06\u5176\u5e94\u7528\u5230\u9053\u8def\u7684\u6e32\u67d3\u76ee\u6807\u4ee5\u7528\u4f5c\u753b\u5e03\u3002\u4e3b\u6750\u8d28\u7531\u4e00\u7cfb\u5217\u6750\u8d28\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6750\u8d28\u53ef\u4ee5\u4f7f\u7528\u753b\u7b14\u6df7\u5408\u5e76\u7528\u4f5c\u8499\u7248\u3002\u65e0\u9700\u5e94\u7528\u5149\u5ea6\u6d4b\u5b9a\u6280\u672f\uff0c\u4e5f\u65e0\u9700\u8003\u8651\u51e0\u4f55\u4f53\u7684 UV\u3002","title":"\u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f"},{"location":"tuto_M_custom_road_painter/#_3","text":"\u9053\u8def\u6cb9\u6f06\u5de5\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u6765\u6cb9\u6f06\u9053\u8def\u3002\u786e\u4fdd\u60a8\u7684 .xodr \u6587\u4ef6\u4e0e\u5730\u56fe\u540c\u540d\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_M_custom_road_painter/#_4","text":"1. \u521b\u5efa RoadPainter \u53c2\u4e0e\u8005\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign \u3002 \u5c06 RoadPainter \u62d6\u5165\u573a\u666f\u4e2d\u3002 2. \u521b\u5efa\u6e32\u67d3\u76ee\u6807\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/LevelDesign/RoadPainterAssets \u3002 \u53f3\u952e\u5355\u51fb RenderTarget \u6587\u4ef6\u5e76\u9009\u62e9 Duplicate \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RenderTarget \u3002 3. \u521b\u5efa\u4e3b\u6750\u8d28\u5b9e\u4f8b\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game/Carla/Static/GenericMaterials/RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb M_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RoadMaster \u3002 4. \u91cd\u65b0\u6821\u51c6 Map Size (Cm) \uff0c\u4f7f\u5176\u7b49\u4e8e\u5730\u56fe\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002 \u9009\u62e9 RoadPainter \u573a\u666f\u4e2d\u7684\u53c2\u4e0e\u8005\u3002 \u8f6c\u5230 Details \u9762\u677f\u5e76\u6309 Z-Size \u6309\u94ae\u3002\u60a8\u5c06\u770b\u5230 Map Size (Cm) \u4e2d\u7684\u503c\u53d1\u751f\u53d8\u5316\u3002 5. \u540c\u6b65 RoadPainter \u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u5730\u56fe\u5c3a\u5bf8\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u6253\u5f00 Tutorial_RoadMaster \u3002 \u590d\u5236\u4e0a\u4e00\u6b65\u4e2d Map Size (Cm) \u7684\u503c\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\u7684 Global Scalar Parameter Values -> Map units (CM) \u3002 \u70b9\u51fb\u4fdd\u5b58\u3002 6. \u521b\u5efa\u9053\u8def\u753b\u5bb6\u548c\u4e3b\u6750\u8d28\u4e4b\u95f4\u7684\u901a\u4fe1\u94fe\u63a5\u3002 Tutorial_RenderTarget \u5c06\u662f\u9053\u8def\u753b\u5bb6\u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u901a\u4fe1\u7ebd\u5e26\u3002 \u5728 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\uff0c\u5c06 Tutorial_RenderTarget \u5e94\u7528\u4e8e Global Texture Parameter Values -> Texture Mask \u3002 \u4fdd\u5b58\u5e76\u5173\u95ed\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\uff0c\u8f6c\u5230 Details \u9762\u677f\u5e76\u5c06 Tutorial_RenderTarget \u5e94\u7528\u5230 Paint -> Render Target \u3002","title":"\u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u76ee\u6807"},{"location":"tuto_M_custom_road_painter/#_5","text":"\u60a8\u521b\u5efa\u7684 Tutorial_RoadMaster \u6750\u8d28\uff0c\u5305\u542b\u57fa\u7840\u6750\u8d28\u3001\u989d\u5916\u6750\u8d28\u4fe1\u606f\u4ee5\u53ca\u5c06\u901a\u8fc7\u60a8\u7684 Tutorial_RenderTarget \u3002\u60a8\u53ef\u4ee5\u914d\u7f6e\u4e00\u79cd\u57fa\u7840\u6750\u6599\u548c\u6700\u591a\u4e09\u79cd\u9644\u52a0\u6750\u6599\u3002 \u8981\u914d\u7f6e\u6750\u6599\uff0c\u8bf7\u53cc\u51fb Tutorial_RoadMaster \u6587\u4ef6\u3002\u5728\u51fa\u73b0\u7684\u7a97\u53e3\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4e3a\u6bcf\u79cd\u6750\u6599\u9009\u62e9\u548c\u8c03\u6574\u4ee5\u4e0b\u503c\uff1a \u4eae\u5ea6(Brightness) \u8272\u8c03(Hue) \u9971\u548c\u5ea6(Saturation) AO Intensity \u6cd5\u7ebf\u8d34\u56fe\u5f3a\u5ea6(NormalMap Intensity) \u7c97\u7cd9\u5ea6\u5bf9\u6bd4(Roughness Contrast) \u7c97\u7cd9\u5ea6\u5f3a\u5ea6(Roughness Intensity) \u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4ee5\u4e0b\u503c\u5e76\u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22\u7eb9\u7406\u6765\u66f4\u6539\u6bcf\u79cd\u6750\u8d28\u7684\u7eb9\u7406\uff1a Diffuse Normal ORMH \u63a2\u7d22 Game/Carla/Static/GenericMaterials/Asphalt/Textures \u4e2d\u53ef\u7528\u7684\u4e00\u4e9b CARLA \u7eb9\u7406\u3002","title":"\u51c6\u5907\u4e3b\u6750\u8d28"},{"location":"tuto_M_custom_road_painter/#_6","text":"1. \u5728\u9053\u8def\u753b\u5bb6\u548c\u9053\u8def\u4e4b\u95f4\u521b\u5efa\u94fe\u63a5\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u5728 World Outliner \u641c\u7d22\u6846\u4e2d\u8fdb\u884c Road_Road \u641c\u7d22\u3002 \u6309 Ctrl + A \u9009\u62e9\u6240\u6709\u9053\u8def\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Materials \u90e8\u5206\u5e76\u5e94\u7528 Tutorial_RoadMaster \u5230 Element 0 \u3001 Element 1 \u3001 Element 2 \u548c Element 3 \u3002 2. \u9009\u62e9\u8981\u5b9a\u5236\u7684\u6750\u8d28\u3002 \u6211\u4eec\u6dfb\u52a0\u7684 Tutorial_RoadMaster \u5355\u72ec\u5e94\u7528\u4e8e\u9053\u8def\uff0c\u5e76\u4f7f\u7528\u753b\u7b14\u5de5\u5177\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002\u8981\u5e94\u7528\u548c\u81ea\u5b9a\u4e49\u6750\u8d28\uff1a \u9009\u62e9\u9053\u8def\u6cb9\u753b\u5bb6\u53c2\u4e0e\u8005\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u5728 Mask Color \u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u8981\u4f7f\u7528\u7684\u6750\u8d28\u3002 3. \u8bbe\u7f6e\u753b\u7b14\u548c\u6a21\u677f\u53c2\u6570\u3002 \u5728 GenericMaterials/RoadStencil/Alphas \u4e2d\u6709\u591a\u79cd\u6a21\u677f\u53ef\u4f9b\u9009\u62e9\u3002\u6a21\u677f\u7528\u4e8e\u6839\u636e\u60a8\u7684\u9700\u8981\u7ed8\u5236\u9053\u8def\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u8fdb\u884c\u8c03\u6574\uff1a Stencil size \u2014 \u753b\u7b14\u7684\u5c3a\u5bf8\u3002 Brush strength \u2014 \u8f6e\u5ed3\u7684\u7c97\u7cd9\u5ea6\u3002 Spacebeween Brushes \u2014 \u7b14\u5212\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Max Jitter \u2014 \u7b14\u5212\u4e4b\u95f4\u753b\u7b14\u7684\u5927\u5c0f\u53d8\u5316\u3002 Stencil \u2014 \u8981\u4f7f\u7528\u7684\u753b\u7b14\u3002 Rotation \u2014 \u5e94\u7528\u4e8e\u7b14\u753b\u7684\u65cb\u8f6c\u3002 Brush panel. Different types of brushes. 4. \u5c06\u6bcf\u79cd\u6750\u6599\u6d82\u62b9\u5230\u9053\u8def\u7684\u6240\u9700\u90e8\u5206\u3002 \u901a\u8fc7 Details \u9762\u677f\u7684 Default \u90e8\u5206\u4e2d\u7684\u6309\u94ae\u9009\u62e9\u5e94\u7528\u6240\u9009\u6750\u8d28\u7684\u4f4d\u7f6e\uff1a Paint all roads \u2014 \u7c89\u5237\u6240\u6709\u9053\u8def\u3002 Paint by actor \u2014 \u7ed8\u753b\u7279\u5b9a\u7684\u3001\u9009\u5b9a\u7684\u53c2\u4e0e\u8005\u3002 Paint over circle \u2014 \u4f7f\u7528\u5706\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 Paint over square \u2014 \u4f7f\u7528\u6b63\u65b9\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 \u6b64\u90e8\u5206\u8fd8\u5305\u542b\u7528\u4e8e\u5220\u9664\u5df2\u5e94\u7528\u66f4\u6539\u7684\u9009\u9879\u3002 Clear all \u2014 \u64e6\u9664\u6240\u6709\u7ed8\u5236\u7684\u6750\u8d28\u3002 Clear materials \u2014 \u5220\u9664\u5f53\u524d\u6d3b\u52a8\u7684\u6750\u6599\u3002 Clear material by actor \u2014 \u5220\u9664\u6700\u63a5\u8fd1\u6240\u9009\u53c2\u4e0e\u8005\u7684\u6750\u8d28\u3002 Different painting and erasing options. 5. \u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u3002 \u60a8\u53ef\u4ee5\u5728 Content/Carla/Static/Decals \u548c Content/Carla/Static \u4e2d\u63a2\u7d22\u53ef\u7528\u7684\u8d34\u82b1\u548c\u7f51\u683c\u3002\u901a\u8fc7\u6269\u5c55\u5e76\u6dfb\u52a0\u5230 Decals Spawn \u548c Meshes Spawn \u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u9053\u8def\u7ed8\u5236\u5668\u4e2d\u3002\u5bf9\u4e8e\u6bcf\u4e00\u9879\uff0c\u60a8\u90fd\u53ef\u4ee5\u914d\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Number of Decals/Meshes - \u8981\u7ed8\u5236\u7684\u6bcf\u4e2a\u8d34\u82b1\u6216\u7f51\u683c\u7684\u6570\u91cf\u3002 Decal/Mesh Scale \u2014 \u6bcf\u4e2a\u8f74\u7684\u8d34\u82b1/\u7f51\u683c\u6bd4\u4f8b\u3002 Fixed Decal/Mesh Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u504f\u5dee\u3002 Random Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u6700\u5927\u504f\u5dee\u3002 Decal/Mesh Random Yaw \u2014 \u6700\u5927\u968f\u673a\u504f\u822a\u65cb\u8f6c\u3002 Decal/Mesh Min Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5c0f\u968f\u673a\u6bd4\u4f8b\u3002 Decal/Mesh Max Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5927\u968f\u673a\u6bd4\u4f8b\u3002 \u8d34\u82b1\u548c\u7f51\u683c\u9762\u677f\u3002 \u914d\u7f6e\u597d\u7f51\u683c\u548c\u8d34\u82b1\u540e\uff0c\u901a\u8fc7\u6309 Spawn decals \u548c\u751f\u6210\u5b83\u4eec Spawn meshes \u3002 \u7b14\u8bb0 \u786e\u4fdd\u7f51\u683c\u548c\u8d34\u82b1\u6ca1\u6709\u542f\u7528\u78b0\u649e\uff0c\u4ee5\u514d\u5e72\u6270\u9053\u8def\u4e0a\u7684\u6c7d\u8f66\u5e76\u5c06\u4efb\u4f55\u8fb9\u754c\u6846\u964d\u4f4e\u5230\u9053\u8def\u6c34\u5e73\u3002 7. \u5c1d\u8bd5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u6750\u8d28\u3001\u7eb9\u7406\u3001\u8bbe\u7f6e\u3001\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\u56fe\u50cf\uff0c\u663e\u793a\u4e86\u5728\u7ed8\u5236\u6bcf\u79cd\u6750\u8d28\u7684\u8fc7\u7a0b\u4e2d\u9053\u8def\u5916\u89c2\u5982\u4f55\u53d8\u5316\u3002 \u57fa\u7840\u9053\u8def\u6750\u6599\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 1 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 2 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 3 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u8d34\u82b1\u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u7f51\u683c\u540e\u7684\u793a\u4f8b\u3002","title":"\u63cf\u7ed8\u9053\u8def"},{"location":"tuto_M_custom_road_painter/#_7","text":"\u7ed8\u5236\u9053\u8def\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u66f4\u65b0\u9053\u8def\u6807\u8bb0\u7684\u5916\u89c2\uff1a 1. \u590d\u5236\u4e3b\u6750\u6599\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Game/Carla/Static/GenericMaterials/RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb Tutorial_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_LaneMarkings \u3002 2. \u914d\u7f6e\u8f66\u9053\u7ebf\u6750\u8d28\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u53cc\u51fb Tutorial_LaneMarkings \u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Global Static Switch Parameter Values \u90e8\u5206\uff0c\u7136\u540e\u9009\u4e2d LaneMark \u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6846\u3002 \u8f6c\u5230 Texture \u90e8\u5206\u5e76\u9009\u4e2d LaneColor \u548c Uv Size \u590d\u9009\u6846\u3002 \u5728 LaneColor \u4e2d\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u9053\u6807\u8bb0\u989c\u8272\u3002 \u4fdd\u5b58 \u5e76\u5173\u95ed\u3002 3. \u9009\u62e9\u8f66\u9053\u7ebf\u7f51\u683c\u3002 \u5c06\u6750\u6599\u62d6\u5230\u60a8\u60f3\u8981\u7740\u8272\u7684\u8f66\u9053\u7ebf\u4e0a\u3002\u5982\u679c\u9700\u8981\uff0c\u5bf9\u4e0d\u540c\u989c\u8272\u7684\u8f66\u9053\u7ebf\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\u3002","title":"\u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2"},{"location":"tuto_M_custom_road_painter/#_8","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_custom_weather_landscape/","text":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2 CARLA \u63d0\u4f9b\u4e86\u591a\u4e2a\u84dd\u56fe\uff0c\u53ef\u5e2e\u52a9\u60a8\u8f7b\u677e\u521b\u5efa\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\uff08\u4f8b\u5982\u8def\u706f\u3001\u7535\u7ebf\u7b49\uff09\u586b\u5145\u666f\u89c2\u3002 \u672c\u6307\u5357\u5c06\u89e3\u91ca\u6bcf\u4e2a\u84dd\u56fe\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u548c\u914d\u7f6e\u5b83\u4eec\u3002 \u5929\u6c14\u5b9a\u5236 BP_Sky BP_Weather \u5e8f\u5217\u5316\u7f51\u683c BP_RepSpline BP_Spline BP_Wall BP_SplinePoweLine \u4e0b\u4e00\u6b65 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002 \u5929\u6c14\u5b9a\u5236 \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u8bbe\u7f6e\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u4e4b\u524d\u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u53c2\u6570\uff0c\u4ee5\u53ca\u5728\u5bf9\u8bbe\u7f6e\u611f\u5230\u6ee1\u610f\u540e\u5982\u4f55\u4e3a\u5730\u56fe\u914d\u7f6e\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u3002 BP_Sky \u84dd\u56fe BP_Sky \u5bf9\u4e8e\u4e3a\u5730\u56fe\u5e26\u6765\u5149\u7ebf\u548c\u5929\u6c14\u662f\u5fc5\u8981\u7684\u3002\u5728\u51b3\u5b9a\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u4e4b\u524d\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u914d\u7f6e\u3002 BP_Sky \u84dd\u56fe\u53ef\u80fd\u5df2\u7ecf\u52a0\u8f7d\u5230\u60a8\u7684\u5730\u56fe\u4e2d\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 Content/Carla/Blueprints/Weather \u5c06\u5176\u62d6\u5230\u573a\u666f\u4e2d\u6765\u6dfb\u52a0\u5b83\u3002 \u8981\u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u53c2\u6570\uff0c\u8bf7\u8f6c\u5230 BP_Sky \u53c2\u4e0e\u8005\u7684 Details \u9762\u677f\uff0c\u7136\u540e\u4f7f\u7528 Parameters \u90e8\u5206\u4e2d\u7684\u503c\u3002 \u91cd\u8981 \u5982\u679c\u573a\u666f\u4e2d\u52a0\u8f7d\u4e86\u591a\u4e2a BP_Sky \u84dd\u56fe\uff0c\u5929\u6c14\u5c06\u4f1a\u91cd\u590d\uff0c\u4ece\u800c\u4ea7\u751f\u4e0d\u826f\u7ed3\u679c\uff0c\u4f8b\u5982\uff0c\u6709\u4e24\u4e2a\u592a\u9633\u3002 BP_Weather \u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u5728 BP_Weather \u84dd\u56fe\u4e2d\u5b9a\u4e49\u3002\u6b64\u84dd\u56fe\u5141\u8bb8\u60a8\u8bbe\u7f6e\u4e0e\u901a\u8fc7 Python API \u63d0\u4f9b\u7684\u53c2\u6570\u76f8\u540c\u7684\u53c2\u6570\u3002 \u6b64\u5904 \u63cf\u8ff0\u4e86\u8fd9\u4e9b\u53c2\u6570\u3002 \u8981\u8bbe\u7f6e\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\uff1a 1. \u6253\u5f00 BP_Weather \u84dd\u56fe\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/Weather \u5e76\u53cc\u51fb BP_Weather \u3002 2. \u6dfb\u52a0\u60a8\u7684\u57ce\u9547\u3002 \u5728 BP_Weather \u7a97\u53e3\u7684 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Weather \u90e8\u5206\u5e76\u5c06\u60a8\u7684\u57ce\u9547\u6dfb\u52a0\u5230 Default Weathers \u6570\u7ec4\u4e2d\u3002 3. \u914d\u7f6e\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5929\u6c14\u53c2\u6570\uff0c\u8bbe\u7f6e\u60a8\u60f3\u8981\u7684\u503c\u3002\u5b8c\u6210\u540e\uff0c\u6309 Compile \uff0c\u7136\u540e\u6309 Save \u5e76\u5173\u95ed\u3002 \u5305\u542b\u6bcf\u4e2a CARLA \u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u7684\u6570\u7ec4\u3002Town01 \u6253\u5f00\u3002 \u6dfb\u52a0\u5e8f\u5217\u5316\u7f51\u683c \u6709\u56db\u79cd\u84dd\u56fe\u53ef\u7528\u4e8e\u6dfb\u52a0\u6cbf\u4e00\u4e2a\u65b9\u5411\u5bf9\u9f50\u7684\u9053\u5177\uff0c\u4f8b\u5982\u5899\u58c1\u3001\u7535\u7ebf\u3001\u8def\u706f\u3002\u8fd9\u4e9b\u84dd\u56fe\u4f7f\u7528\u4e00\u7cfb\u5217\u6cbf\u8d1d\u585e\u5c14\u66f2\u7ebf\u5206\u5e03\u7684\u7f51\u683c\u3002\u6bcf\u4e00\u4e2a\u90fd\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u521d\u59cb\u5316\uff1a 1. \u521d\u59cb\u5316\u5e8f\u5217\u3002 \u5c06\u84dd\u56fe\u62d6\u5230\u573a\u666f\u4e2d\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u5143\u7d20\u4f4d\u4e8e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u8d77\u70b9\uff0c\u5e76\u6709\u4e24\u4e2a\u8282\u70b9\u6807\u8bb0\u5f00\u59cb\u548c\u7ed3\u675f\u3002 2. \u5b9a\u4e49\u8def\u5f84\u3002 \u9009\u62e9\u5143\u7d20\u7684\u65b9\u5411\u7bad\u5934\uff0c\u7136\u540e\u6309 Alt \u952e\uff0c\u540c\u65f6\u5c06\u5143\u7d20\u5411\u60a8\u60f3\u8981\u79fb\u52a8\u7684\u65b9\u5411\u62d6\u52a8\u3002\u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u53ef\u7528\u4e8e\u5b9a\u4e49\u66f2\u7ebf\u7684\u65b0\u5143\u7d20\u3002\u62d6\u52a8\u65f6\uff0c\u66f2\u7ebf\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6216\u6bcf\u6b21 Alt \u62d6\u52a8\u65f6\u6309\u4e0b\u65f6\u90fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7f51\u683c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u84dd\u56fe\u3002 3. \u5b9a\u5236\u56fe\u6848\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u63cf\u8ff0\u6bcf\u4e2a\u84dd\u56fe\u53ef\u7528\u7684\u4e0d\u540c\u81ea\u5b9a\u4e49\u53c2\u6570\u3002 BP_RepSpline \u84dd\u56fe BP_RepSpline \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u7528\u4e8e\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0 \u5355\u4e2a \u5143\u7d20\u3002 \u5e8f\u5217\u5316\u662f\u901a\u8fc7\u4ee5\u4e0b\u503c\u81ea\u5b9a\u4e49\u7684\uff1a Distance between \u2014 \u8bbe\u7f6e\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Offset rotation \u2014 \u4e3a\u4e0d\u540c\u8f74\u8bbe\u7f6e\u56fa\u5b9a\u65cb\u8f6c\u3002 Random rotation \u2014 \u8bbe\u7f6e\u4e0d\u540c\u8f74\u7684\u968f\u673a\u65cb\u8f6c\u8303\u56f4\u3002 Offset translation \u2014 \u8bbe\u7f6e\u6cbf\u4e0d\u540c\u8f74\u7684\u4e00\u7cfb\u5217\u968f\u673a\u4f4d\u7f6e\u3002 Max Number of Meshes \u2014 \u8bbe\u7f6e\u5c06\u653e\u7f6e\u5728\u66f2\u7ebf\u8282\u70b9\u4e4b\u95f4\u7684\u5143\u7d20\u7684\u6700\u5927\u6570\u91cf\u3002 World aligned ZY \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5143\u7d20\u5c06\u76f8\u5bf9\u4e8e\u4e16\u754c\u8f74\u5782\u76f4\u5bf9\u9f50\u3002 EndPoint \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5c06\u5728\u66f2\u7ebf\u7684\u7ec8\u70b9\u8282\u70b9\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002 Collision enabled \u2014 \u8bbe\u7f6e\u4e3a\u7f51\u683c\u542f\u7528\u7684\u78b0\u649e\u7c7b\u578b\u3002 BP_RepSpline \u793a\u4f8b\u3002 BP_Spline \u84dd\u56fe BP_Spline \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u6dfb\u52a0\u4e25\u683c\u9075\u5faa\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u7684\u8fde\u63a5\u5143\u7d20\u3002\u7f51\u683c\u5c06\u626d\u66f2\u4ee5\u9002\u5e94\u521b\u5efa\u7684\u8def\u5f84\u3002 \u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u81ea\u5b9a\u4e49\u84dd\u56fe\uff1a Gap distance \u2014 \u5728\u5143\u7d20\u4e4b\u95f4\u6dfb\u52a0\u95f4\u9694\u3002 BP_Spline example. BP_Wall \u84dd\u56fe BP_Wall \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0\u8fde\u63a5\u7684\u5143\u7d20\u3002\u7f51\u683c\u4e0d\u4f1a\u626d\u66f2\u4ee5\u9002\u5e94\u66f2\u7ebf\uff0c\u4f46\u4f1a\u8003\u8651\u8282\u70b9\u3002 Distance between \u2014 \u8bbe\u7f6e\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Vertically aligned \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5143\u7d20\u5c06\u76f8\u5bf9\u4e8e\u4e16\u754c\u8f74\u5782\u76f4\u5bf9\u9f50\u3002 Scale offset \u2014 \u7f29\u653e\u7f51\u683c\u7684\u957f\u5ea6\u4ee5\u5b8c\u5584\u5143\u7d20\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 BP_Wall \u5b9e\u4f8b\u3002 BP_SplinePoweLine BP_SplinePoweLine \u84dd\u56fe\u53ef\u5728 Carla/Static/Pole/PoweLine \u4e2d\u627e\u5230\u3002\u5b83\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0 \u7535\u7ebf\u6746(electricity poles) \uff0c\u5e76\u5c06\u5b83\u4eec \u4e0e\u7535\u7ebf\u8fde\u63a5\u8d77\u6765 \u3002 \u4e3a\u4e86\u63d0\u4f9b\u591a\u6837\u6027\uff0c\u60a8\u53ef\u4ee5\u4e3a\u84dd\u56fe\u63d0\u4f9b\u4e00\u7cfb\u5217\u7535\u529b\u7ebf\u7f51\u683c\u6765\u586b\u5145\u8def\u5f84\u3002\u53bb\u505a\u8fd9\u4e2a\uff1a \u5728 Content Browser \u4e2d\u53cc\u51fb BP_SplinePoweLine \u84dd\u56fe\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Default \u90e8\u5206\u3002 \u5c55\u5f00 Array Meshes \u5e76\u6839\u636e\u60a8\u7684\u9700\u8981\u6dfb\u52a0\u6216\u66f4\u6539\u5b83\u3002 \u70b9\u51fb Compile \uff0c\u7136\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u7a97\u53e3\u3002 BP_SplinePowerLine example. \u8981\u6539\u53d8\u7535\u6e90\u7ebf\u7684\u7ebf\u5f20\u529b\uff1a \u5728\u7f16\u8f91\u5668\u573a\u666f\u4e2d\u9009\u62e9\u84dd\u56fe\u53c2\u4e0e\u8005\uff0c\u7136\u540e\u8f6c\u5230 Details \u9762\u677f\u3002 \u8f6c\u5230 Default \u90e8\u5206\u3002 \u8c03\u6574\u5f20\u529b Tension \u4e2d\u7684\u503c\u3002 0 \u8868\u793a\u7ebf\u6761\u5c06\u662f\u76f4\u7684\u3002 \u589e\u52a0\u7535\u7ebf\u6570\u91cf\uff1a \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u53cc\u51fb\u5176\u4e2d\u4e00\u4e2a\u6746\u7f51\u683c\u3002 \u8f6c\u5230 Socket Manager \u9762\u677f\u3002 \u914d\u7f6e\u73b0\u6709\u5957\u63a5\u5b57\u6216\u901a\u8fc7\u5355\u51fb Create Socket \u6dfb\u52a0\u65b0\u5957\u63a5\u5b57\u3002\u63d2\u5ea7\u662f\u4ee3\u8868\u7535\u6e90\u7ebf\u8fde\u63a5\u70b9\u7684\u7a7a\u7f51\u683c\u3002\u5728\u4e24\u6781\u4e4b\u95f4\u4ece\u63d2\u5ea7\u5230\u63d2\u5ea7\u521b\u5efa\u7535\u7ebf\u3002 BP_SplinePowerLine \u5957\u63a5\u5b57\u7684\u53ef\u89c6\u5316\u3002 \u91cd\u8981 \u5404\u6781\u4e4b\u95f4\u7684\u63d2\u5ea7\u6570\u91cf\u53ca\u540d\u79f0\u5e94\u4e00\u81f4\u3002\u5426\u5219\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u53ef\u89c6\u5316\u95ee\u9898\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2"},{"location":"tuto_M_custom_weather_landscape/#_1","text":"CARLA \u63d0\u4f9b\u4e86\u591a\u4e2a\u84dd\u56fe\uff0c\u53ef\u5e2e\u52a9\u60a8\u8f7b\u677e\u521b\u5efa\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\uff08\u4f8b\u5982\u8def\u706f\u3001\u7535\u7ebf\u7b49\uff09\u586b\u5145\u666f\u89c2\u3002 \u672c\u6307\u5357\u5c06\u89e3\u91ca\u6bcf\u4e2a\u84dd\u56fe\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u548c\u914d\u7f6e\u5b83\u4eec\u3002 \u5929\u6c14\u5b9a\u5236 BP_Sky BP_Weather \u5e8f\u5217\u5316\u7f51\u683c BP_RepSpline BP_Spline BP_Wall BP_SplinePoweLine \u4e0b\u4e00\u6b65 \u91cd\u8981 \u672c\u6559\u7a0b\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u6e90\u4ee3\u7801\u6784\u5efa\u5e76\u6709\u6743\u8bbf\u95ee\u865a\u5e7b\u7f16\u8f91\u5668\u7684\u7528\u6237\u3002","title":"\u81ea\u5b9a\u4e49\u5730\u56fe\uff1a\u5929\u6c14\u548c\u666f\u89c2"},{"location":"tuto_M_custom_weather_landscape/#_2","text":"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u8bbe\u7f6e\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u4e4b\u524d\u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u53c2\u6570\uff0c\u4ee5\u53ca\u5728\u5bf9\u8bbe\u7f6e\u611f\u5230\u6ee1\u610f\u540e\u5982\u4f55\u4e3a\u5730\u56fe\u914d\u7f6e\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u3002","title":"\u5929\u6c14\u5b9a\u5236"},{"location":"tuto_M_custom_weather_landscape/#bp_sky","text":"\u84dd\u56fe BP_Sky \u5bf9\u4e8e\u4e3a\u5730\u56fe\u5e26\u6765\u5149\u7ebf\u548c\u5929\u6c14\u662f\u5fc5\u8981\u7684\u3002\u5728\u51b3\u5b9a\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u4e4b\u524d\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u914d\u7f6e\u3002 BP_Sky \u84dd\u56fe\u53ef\u80fd\u5df2\u7ecf\u52a0\u8f7d\u5230\u60a8\u7684\u5730\u56fe\u4e2d\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 Content/Carla/Blueprints/Weather \u5c06\u5176\u62d6\u5230\u573a\u666f\u4e2d\u6765\u6dfb\u52a0\u5b83\u3002 \u8981\u5c1d\u8bd5\u4e0d\u540c\u7684\u5929\u6c14\u53c2\u6570\uff0c\u8bf7\u8f6c\u5230 BP_Sky \u53c2\u4e0e\u8005\u7684 Details \u9762\u677f\uff0c\u7136\u540e\u4f7f\u7528 Parameters \u90e8\u5206\u4e2d\u7684\u503c\u3002 \u91cd\u8981 \u5982\u679c\u573a\u666f\u4e2d\u52a0\u8f7d\u4e86\u591a\u4e2a BP_Sky \u84dd\u56fe\uff0c\u5929\u6c14\u5c06\u4f1a\u91cd\u590d\uff0c\u4ece\u800c\u4ea7\u751f\u4e0d\u826f\u7ed3\u679c\uff0c\u4f8b\u5982\uff0c\u6709\u4e24\u4e2a\u592a\u9633\u3002","title":"BP_Sky"},{"location":"tuto_M_custom_weather_landscape/#bp_weather","text":"\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u5728 BP_Weather \u84dd\u56fe\u4e2d\u5b9a\u4e49\u3002\u6b64\u84dd\u56fe\u5141\u8bb8\u60a8\u8bbe\u7f6e\u4e0e\u901a\u8fc7 Python API \u63d0\u4f9b\u7684\u53c2\u6570\u76f8\u540c\u7684\u53c2\u6570\u3002 \u6b64\u5904 \u63cf\u8ff0\u4e86\u8fd9\u4e9b\u53c2\u6570\u3002 \u8981\u8bbe\u7f6e\u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\uff1a 1. \u6253\u5f00 BP_Weather \u84dd\u56fe\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content/Carla/Blueprints/Weather \u5e76\u53cc\u51fb BP_Weather \u3002 2. \u6dfb\u52a0\u60a8\u7684\u57ce\u9547\u3002 \u5728 BP_Weather \u7a97\u53e3\u7684 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Weather \u90e8\u5206\u5e76\u5c06\u60a8\u7684\u57ce\u9547\u6dfb\u52a0\u5230 Default Weathers \u6570\u7ec4\u4e2d\u3002 3. \u914d\u7f6e\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5929\u6c14\u53c2\u6570\uff0c\u8bbe\u7f6e\u60a8\u60f3\u8981\u7684\u503c\u3002\u5b8c\u6210\u540e\uff0c\u6309 Compile \uff0c\u7136\u540e\u6309 Save \u5e76\u5173\u95ed\u3002 \u5305\u542b\u6bcf\u4e2a CARLA \u5730\u56fe\u7684\u9ed8\u8ba4\u5929\u6c14\u53c2\u6570\u7684\u6570\u7ec4\u3002Town01 \u6253\u5f00\u3002","title":"BP_Weather"},{"location":"tuto_M_custom_weather_landscape/#_3","text":"\u6709\u56db\u79cd\u84dd\u56fe\u53ef\u7528\u4e8e\u6dfb\u52a0\u6cbf\u4e00\u4e2a\u65b9\u5411\u5bf9\u9f50\u7684\u9053\u5177\uff0c\u4f8b\u5982\u5899\u58c1\u3001\u7535\u7ebf\u3001\u8def\u706f\u3002\u8fd9\u4e9b\u84dd\u56fe\u4f7f\u7528\u4e00\u7cfb\u5217\u6cbf\u8d1d\u585e\u5c14\u66f2\u7ebf\u5206\u5e03\u7684\u7f51\u683c\u3002\u6bcf\u4e00\u4e2a\u90fd\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u521d\u59cb\u5316\uff1a 1. \u521d\u59cb\u5316\u5e8f\u5217\u3002 \u5c06\u84dd\u56fe\u62d6\u5230\u573a\u666f\u4e2d\u3002\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u5143\u7d20\u4f4d\u4e8e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u8d77\u70b9\uff0c\u5e76\u6709\u4e24\u4e2a\u8282\u70b9\u6807\u8bb0\u5f00\u59cb\u548c\u7ed3\u675f\u3002 2. \u5b9a\u4e49\u8def\u5f84\u3002 \u9009\u62e9\u5143\u7d20\u7684\u65b9\u5411\u7bad\u5934\uff0c\u7136\u540e\u6309 Alt \u952e\uff0c\u540c\u65f6\u5c06\u5143\u7d20\u5411\u60a8\u60f3\u8981\u79fb\u52a8\u7684\u65b9\u5411\u62d6\u52a8\u3002\u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u53ef\u7528\u4e8e\u5b9a\u4e49\u66f2\u7ebf\u7684\u65b0\u5143\u7d20\u3002\u62d6\u52a8\u65f6\uff0c\u66f2\u7ebf\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6216\u6bcf\u6b21 Alt \u62d6\u52a8\u65f6\u6309\u4e0b\u65f6\u90fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7f51\u683c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u84dd\u56fe\u3002 3. \u5b9a\u5236\u56fe\u6848\u3002 \u4ee5\u4e0b\u90e8\u5206\u5c06\u63cf\u8ff0\u6bcf\u4e2a\u84dd\u56fe\u53ef\u7528\u7684\u4e0d\u540c\u81ea\u5b9a\u4e49\u53c2\u6570\u3002","title":"\u6dfb\u52a0\u5e8f\u5217\u5316\u7f51\u683c"},{"location":"tuto_M_custom_weather_landscape/#bp_repspline","text":"\u84dd\u56fe BP_RepSpline \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u7528\u4e8e\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0 \u5355\u4e2a \u5143\u7d20\u3002 \u5e8f\u5217\u5316\u662f\u901a\u8fc7\u4ee5\u4e0b\u503c\u81ea\u5b9a\u4e49\u7684\uff1a Distance between \u2014 \u8bbe\u7f6e\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Offset rotation \u2014 \u4e3a\u4e0d\u540c\u8f74\u8bbe\u7f6e\u56fa\u5b9a\u65cb\u8f6c\u3002 Random rotation \u2014 \u8bbe\u7f6e\u4e0d\u540c\u8f74\u7684\u968f\u673a\u65cb\u8f6c\u8303\u56f4\u3002 Offset translation \u2014 \u8bbe\u7f6e\u6cbf\u4e0d\u540c\u8f74\u7684\u4e00\u7cfb\u5217\u968f\u673a\u4f4d\u7f6e\u3002 Max Number of Meshes \u2014 \u8bbe\u7f6e\u5c06\u653e\u7f6e\u5728\u66f2\u7ebf\u8282\u70b9\u4e4b\u95f4\u7684\u5143\u7d20\u7684\u6700\u5927\u6570\u91cf\u3002 World aligned ZY \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5143\u7d20\u5c06\u76f8\u5bf9\u4e8e\u4e16\u754c\u8f74\u5782\u76f4\u5bf9\u9f50\u3002 EndPoint \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5c06\u5728\u66f2\u7ebf\u7684\u7ec8\u70b9\u8282\u70b9\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002 Collision enabled \u2014 \u8bbe\u7f6e\u4e3a\u7f51\u683c\u542f\u7528\u7684\u78b0\u649e\u7c7b\u578b\u3002 BP_RepSpline \u793a\u4f8b\u3002","title":"BP_RepSpline"},{"location":"tuto_M_custom_weather_landscape/#bp_spline","text":"\u84dd\u56fe BP_Spline \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u6dfb\u52a0\u4e25\u683c\u9075\u5faa\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u7684\u8fde\u63a5\u5143\u7d20\u3002\u7f51\u683c\u5c06\u626d\u66f2\u4ee5\u9002\u5e94\u521b\u5efa\u7684\u8def\u5f84\u3002 \u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u81ea\u5b9a\u4e49\u84dd\u56fe\uff1a Gap distance \u2014 \u5728\u5143\u7d20\u4e4b\u95f4\u6dfb\u52a0\u95f4\u9694\u3002 BP_Spline example.","title":"BP_Spline"},{"location":"tuto_M_custom_weather_landscape/#bp_wall","text":"\u84dd\u56fe BP_Wall \u53ef\u5728 Carla/Blueprints/LevelDesign \u4e2d\u627e\u5230\u3002\u5b83\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0\u8fde\u63a5\u7684\u5143\u7d20\u3002\u7f51\u683c\u4e0d\u4f1a\u626d\u66f2\u4ee5\u9002\u5e94\u66f2\u7ebf\uff0c\u4f46\u4f1a\u8003\u8651\u8282\u70b9\u3002 Distance between \u2014 \u8bbe\u7f6e\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Vertically aligned \u2014 \u5982\u679c\u9009\u62e9\u6b64\u9009\u9879\uff0c\u5143\u7d20\u5c06\u76f8\u5bf9\u4e8e\u4e16\u754c\u8f74\u5782\u76f4\u5bf9\u9f50\u3002 Scale offset \u2014 \u7f29\u653e\u7f51\u683c\u7684\u957f\u5ea6\u4ee5\u5b8c\u5584\u5143\u7d20\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 BP_Wall \u5b9e\u4f8b\u3002","title":"BP_Wall"},{"location":"tuto_M_custom_weather_landscape/#bp_splinepoweline","text":"BP_SplinePoweLine \u84dd\u56fe\u53ef\u5728 Carla/Static/Pole/PoweLine \u4e2d\u627e\u5230\u3002\u5b83\u6cbf\u7740\u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9a\u4e49\u7684\u8def\u5f84\u6dfb\u52a0 \u7535\u7ebf\u6746(electricity poles) \uff0c\u5e76\u5c06\u5b83\u4eec \u4e0e\u7535\u7ebf\u8fde\u63a5\u8d77\u6765 \u3002 \u4e3a\u4e86\u63d0\u4f9b\u591a\u6837\u6027\uff0c\u60a8\u53ef\u4ee5\u4e3a\u84dd\u56fe\u63d0\u4f9b\u4e00\u7cfb\u5217\u7535\u529b\u7ebf\u7f51\u683c\u6765\u586b\u5145\u8def\u5f84\u3002\u53bb\u505a\u8fd9\u4e2a\uff1a \u5728 Content Browser \u4e2d\u53cc\u51fb BP_SplinePoweLine \u84dd\u56fe\u3002 \u5728 Details \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Default \u90e8\u5206\u3002 \u5c55\u5f00 Array Meshes \u5e76\u6839\u636e\u60a8\u7684\u9700\u8981\u6dfb\u52a0\u6216\u66f4\u6539\u5b83\u3002 \u70b9\u51fb Compile \uff0c\u7136\u540e\u4fdd\u5b58\u5e76\u5173\u95ed\u7a97\u53e3\u3002 BP_SplinePowerLine example. \u8981\u6539\u53d8\u7535\u6e90\u7ebf\u7684\u7ebf\u5f20\u529b\uff1a \u5728\u7f16\u8f91\u5668\u573a\u666f\u4e2d\u9009\u62e9\u84dd\u56fe\u53c2\u4e0e\u8005\uff0c\u7136\u540e\u8f6c\u5230 Details \u9762\u677f\u3002 \u8f6c\u5230 Default \u90e8\u5206\u3002 \u8c03\u6574\u5f20\u529b Tension \u4e2d\u7684\u503c\u3002 0 \u8868\u793a\u7ebf\u6761\u5c06\u662f\u76f4\u7684\u3002 \u589e\u52a0\u7535\u7ebf\u6570\u91cf\uff1a \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u53cc\u51fb\u5176\u4e2d\u4e00\u4e2a\u6746\u7f51\u683c\u3002 \u8f6c\u5230 Socket Manager \u9762\u677f\u3002 \u914d\u7f6e\u73b0\u6709\u5957\u63a5\u5b57\u6216\u901a\u8fc7\u5355\u51fb Create Socket \u6dfb\u52a0\u65b0\u5957\u63a5\u5b57\u3002\u63d2\u5ea7\u662f\u4ee3\u8868\u7535\u6e90\u7ebf\u8fde\u63a5\u70b9\u7684\u7a7a\u7f51\u683c\u3002\u5728\u4e24\u6781\u4e4b\u95f4\u4ece\u63d2\u5ea7\u5230\u63d2\u5ea7\u521b\u5efa\u7535\u7ebf\u3002 BP_SplinePowerLine \u5957\u63a5\u5b57\u7684\u53ef\u89c6\u5316\u3002 \u91cd\u8981 \u5404\u6781\u4e4b\u95f4\u7684\u63d2\u5ea7\u6570\u91cf\u53ca\u540d\u79f0\u5e94\u4e00\u81f4\u3002\u5426\u5219\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u53ef\u89c6\u5316\u95ee\u9898\u3002","title":"BP_SplinePoweLine"},{"location":"tuto_M_custom_weather_landscape/#_4","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u73b0\u5b50\u5173\u5361\u3002 \u6dfb\u52a0\u548c\u914d\u7f6e\u4ea4\u901a\u706f\u548c\u6807\u5fd7\u3002 \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u4f7f\u7528\u9053\u8def\u753b\u5bb6\u5de5\u5177\u81ea\u5b9a\u4e49\u9053\u8def\u3002 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_generate_map/","text":"\u5728 RoadRunner \u4e2d\u751f\u6210\u5730\u56fe RoadRunner \u662f\u63a8\u8350\u7684\u8f6f\u4ef6\uff0c\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165 Carla \u7684\u5730\u56fe\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86 RoadRunner \u662f\u4ec0\u4e48\u3001\u6784\u5efa\u5730\u56fe\u65f6\u9700\u8981\u8003\u8651\u7684\u4e8b\u9879\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u81ea\u5b9a\u4e49\u5730\u56fe\u4ee5\u51c6\u5907\u5bfc\u5165 Carla\u3002 RoadRunner \u7b80\u4ecb \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5728 RoadRunner \u4e2d\u6784\u5efa\u5730\u56fe \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5730\u56fe \u4e0b\u4e00\u6b65 RoadRunner \u7b80\u4ecb RoadRunner \u662f\u4e00\u6b3e\u4ea4\u4e92\u5f0f\u7f16\u8f91\u5668\uff0c\u53ef\u8ba9\u60a8\u8bbe\u8ba1\u7528\u4e8e\u6a21\u62df\u548c\u6d4b\u8bd5\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684 3D \u573a\u666f\u3002\u5b83\u53ef\u7528\u4e8e\u521b\u5efa\u9053\u8def\u5e03\u5c40\u4ee5\u53ca\u968f\u9644\u7684 OpenDRIVE \u548c\u51e0\u4f55\u4fe1\u606f\u3002 \u5728 \u6b64\u5904 \u80fd\u4e86\u89e3\u5230\u66f4\u591a RoadRunner \u7684\u66f4\u591a\u4fe1\u606f\u3002 RoadRunner \u662f MATLAB Campus-Wide License \u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8bb8\u591a\u5927\u5b66\u90fd\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9650\u5236\u7684\u5b66\u672f\u8bbf\u95ee\u3002 \u68c0\u67e5 \u60a8\u7684\u5927\u5b66\u662f\u5426\u6709\u6743\u8bbf\u95ee\u3002\u5982\u679c\u60a8\u5bf9\u8f85\u52a9\u529f\u80fd\u6709\u4efb\u4f55\u7591\u95ee\u6216\u56f0\u96be\uff0c\u8bf7\u8054\u7cfb automated-driving@mathworks.com \u3002 \u8fd8\u6709 \u8bd5\u7528\u7248 \u53ef\u7528\u3002 \u53c2\u52a0 Carla \u6392\u884c\u699c\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97 RoadRunner \u8bb8\u53ef\u8bc1\u3002\u70b9\u51fb \u6b64\u5904 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u60a8\u9700\u8981\u5b89\u88c5 RoadRunner\u3002\u60a8\u53ef\u4ee5\u6309\u7167 Mathworks \u7f51\u7ad9\u4e0a\u7684 \u5b89\u88c5\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002 \u5728 RoadRunner \u4e2d\u6784\u5efa\u5730\u56fe \u5173\u4e8e\u5982\u4f55\u5728RoadRunner\u4e2d\u6784\u5efa\u5730\u56fe\u7684\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c RoadRuner\u6587\u6863 \u4e2d\u63d0\u4f9b\u4e86\u89c6\u9891\u6559\u7a0b\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5305\u542b\u5927\u91cf\u9053\u5177\u7684\u5730\u56fe\u4f1a\u663e\u7740\u51cf\u6162\u5bfc\u5165\u8fc7\u7a0b\u3002 \u8fd9\u662f\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u9700\u8981\u5c06\u6bcf\u4e2a\u7f51\u683c\u7269\u4f53\u8f6c\u6362\u4e3a\u865a\u5e7b\u8d44\u6e90\u3002\u5982\u679c\u60a8\u8ba1\u5212\u5c06\u5730\u56fe\u5bfc\u5165\u5230 Carla \u7684\u6e90\u6784\u5efa\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u4ec5\u5728 RoadRunner \u4e2d\u521b\u5efa\u9053\u8def\u5e03\u5c40\uff0c\u5e76\u5728\u5c06\u5730\u56fe\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e4b\u524d\u4fdd\u7559\u4efb\u4f55\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u3002 Carla \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u6765\u7b80\u5316\u81ea\u5b9a\u4e49\u8fc7\u7a0b\u3002 \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5730\u56fe \u4ee5\u4e0b\u662f\u4ece RoadRunner \u5bfc\u51fa\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002\u60a8\u53ef\u4ee5\u5728 MathWorks' \u6587\u6863 \u4e2d\u627e\u5230\u6709\u5173\u5982\u4f55\u5bfc\u51fa\u5230 Carla \u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u5728 RoadRunner \u4e2d\u5236\u4f5c\u5730\u56fe\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c \u9053\u8def\u5e03\u5c40\u5bfc\u51fa\u540e\u65e0\u6cd5\u4fee\u6539\u3002 \u5bfc\u51fa\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a \u5730\u56fe\u4ee5 (0,0) \u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u53ef\u89c6\u5316\u3002 \u5730\u56fe\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u5730\u56fe\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u5355\u51fb OpenDRIVE Preview Tool \u6309\u94ae\u5373\u53ef\u53ef\u89c6\u5316 OpenDRIVE \u9053\u8def\u7f51\u7edc\u5e76\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 OpenDrive Preview Tool \u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8fde\u63a5\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u5355\u51fb Maneuver Tool \u548c Rebuild Maneuver Roads \u3002 \u5f53\u60a8\u51c6\u5907\u597d\u5bfc\u51fa\u65f6\uff1a 1. \u4f7f\u7528 Carla \u9009\u9879\u5bfc\u51fa\u573a\u666f\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> CARLA (.fbx, .xodr, .rrdata.xml) 2. \u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff1a C\u68c0\u67e5\u4ee5\u4e0b\u9009\u9879\uff1a Split by Segmentation : \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u6765\u5212\u5206\u7f51\u683c\u3002 Power of Two Texture Dimensions : \u63d0\u9ad8\u6027\u80fd\u3002 Embed Textures : \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 Export to Tiles : \u9009\u62e9\u56fe\u5757\u7684\u5927\u5c0f\u6216\u4ec5\u4fdd\u7559\u4e00\u5757\u4e0d\u9009\u4e2d\u3002 Leave unchecked: \u5bfc\u51fa\u5355\u4e2a\u56fe\u5757 : \u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5730\u56fe\u7247\u6bb5\u7684 .fbx \u6587\u4ef6\u3002 3. \u9009\u62e9\u8981\u5c06\u6587\u4ef6\u5bfc\u51fa\u5230\u7684\u76ee\u5f55\uff0c\u7136\u540e\u5355\u51fb Export \u3002\u8fd9\u5c06\u751f\u6210 <mapName>.fbx \u548c <mapName>.xodr \u6587\u4ef6\u7b49\u3002 \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u6587\u4ef6\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002 \u4e0b\u4e00\u6b65 \u60a8\u73b0\u5728\u5df2\u51c6\u5907\u597d\u5c06\u5730\u56fe\u5bfc\u5165 Carla\u3002\u4e0b\u4e00\u6b65\u5c06\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684 Carla \u5b89\u88c5\u7c7b\u578b\uff1a \u5bf9\u4e8e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u7528\u6237 \uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5bf9\u4e8e Carla \u6253\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u7684\u7528\u6237 \uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u60a8\u5bf9\u6b64\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u5728 RoadRunner \u4e2d\u521b\u5efa\u5730\u56fe"},{"location":"tuto_M_generate_map/#roadrunner","text":"RoadRunner \u662f\u63a8\u8350\u7684\u8f6f\u4ef6\uff0c\u7528\u4e8e\u521b\u5efa\u8981\u5bfc\u5165 Carla \u7684\u5730\u56fe\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86 RoadRunner \u662f\u4ec0\u4e48\u3001\u6784\u5efa\u5730\u56fe\u65f6\u9700\u8981\u8003\u8651\u7684\u4e8b\u9879\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u81ea\u5b9a\u4e49\u5730\u56fe\u4ee5\u51c6\u5907\u5bfc\u5165 Carla\u3002 RoadRunner \u7b80\u4ecb \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5728 RoadRunner \u4e2d\u6784\u5efa\u5730\u56fe \u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5730\u56fe \u4e0b\u4e00\u6b65","title":"\u5728 RoadRunner \u4e2d\u751f\u6210\u5730\u56fe"},{"location":"tuto_M_generate_map/#roadrunner_1","text":"RoadRunner \u662f\u4e00\u6b3e\u4ea4\u4e92\u5f0f\u7f16\u8f91\u5668\uff0c\u53ef\u8ba9\u60a8\u8bbe\u8ba1\u7528\u4e8e\u6a21\u62df\u548c\u6d4b\u8bd5\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684 3D \u573a\u666f\u3002\u5b83\u53ef\u7528\u4e8e\u521b\u5efa\u9053\u8def\u5e03\u5c40\u4ee5\u53ca\u968f\u9644\u7684 OpenDRIVE \u548c\u51e0\u4f55\u4fe1\u606f\u3002 \u5728 \u6b64\u5904 \u80fd\u4e86\u89e3\u5230\u66f4\u591a RoadRunner \u7684\u66f4\u591a\u4fe1\u606f\u3002 RoadRunner \u662f MATLAB Campus-Wide License \u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u8bb8\u591a\u5927\u5b66\u90fd\u53ef\u4ee5\u63d0\u4f9b\u65e0\u9650\u5236\u7684\u5b66\u672f\u8bbf\u95ee\u3002 \u68c0\u67e5 \u60a8\u7684\u5927\u5b66\u662f\u5426\u6709\u6743\u8bbf\u95ee\u3002\u5982\u679c\u60a8\u5bf9\u8f85\u52a9\u529f\u80fd\u6709\u4efb\u4f55\u7591\u95ee\u6216\u56f0\u96be\uff0c\u8bf7\u8054\u7cfb automated-driving@mathworks.com \u3002 \u8fd8\u6709 \u8bd5\u7528\u7248 \u53ef\u7528\u3002 \u53c2\u52a0 Carla \u6392\u884c\u699c\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97 RoadRunner \u8bb8\u53ef\u8bc1\u3002\u70b9\u51fb \u6b64\u5904 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"RoadRunner \u7b80\u4ecb"},{"location":"tuto_M_generate_map/#_1","text":"\u60a8\u9700\u8981\u5b89\u88c5 RoadRunner\u3002\u60a8\u53ef\u4ee5\u6309\u7167 Mathworks \u7f51\u7ad9\u4e0a\u7684 \u5b89\u88c5\u6307\u5357 \u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_M_generate_map/#roadrunner_2","text":"\u5173\u4e8e\u5982\u4f55\u5728RoadRunner\u4e2d\u6784\u5efa\u5730\u56fe\u7684\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\uff0c\u4f46\u662f\uff0c RoadRuner\u6587\u6863 \u4e2d\u63d0\u4f9b\u4e86\u89c6\u9891\u6559\u7a0b\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5305\u542b\u5927\u91cf\u9053\u5177\u7684\u5730\u56fe\u4f1a\u663e\u7740\u51cf\u6162\u5bfc\u5165\u8fc7\u7a0b\u3002 \u8fd9\u662f\u56e0\u4e3a\u865a\u5e7b\u5f15\u64ce\u9700\u8981\u5c06\u6bcf\u4e2a\u7f51\u683c\u7269\u4f53\u8f6c\u6362\u4e3a\u865a\u5e7b\u8d44\u6e90\u3002\u5982\u679c\u60a8\u8ba1\u5212\u5c06\u5730\u56fe\u5bfc\u5165\u5230 Carla \u7684\u6e90\u6784\u5efa\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u4ec5\u5728 RoadRunner \u4e2d\u521b\u5efa\u9053\u8def\u5e03\u5c40\uff0c\u5e76\u5728\u5c06\u5730\u56fe\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e4b\u524d\u4fdd\u7559\u4efb\u4f55\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u3002 Carla \u63d0\u4f9b\u4e86\u591a\u79cd\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u6765\u7b80\u5316\u81ea\u5b9a\u4e49\u8fc7\u7a0b\u3002","title":"\u5728 RoadRunner \u4e2d\u6784\u5efa\u5730\u56fe"},{"location":"tuto_M_generate_map/#roadrunner_3","text":"\u4ee5\u4e0b\u662f\u4ece RoadRunner \u5bfc\u51fa\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u57fa\u672c\u6307\u5357\u3002\u60a8\u53ef\u4ee5\u5728 MathWorks' \u6587\u6863 \u4e2d\u627e\u5230\u6709\u5173\u5982\u4f55\u5bfc\u51fa\u5230 Carla \u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u5728 RoadRunner \u4e2d\u5236\u4f5c\u5730\u56fe\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c \u9053\u8def\u5e03\u5c40\u5bfc\u51fa\u540e\u65e0\u6cd5\u4fee\u6539\u3002 \u5bfc\u51fa\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a \u5730\u56fe\u4ee5 (0,0) \u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u53ef\u89c6\u5316\u3002 \u5730\u56fe\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u5730\u56fe\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u5355\u51fb OpenDRIVE Preview Tool \u6309\u94ae\u5373\u53ef\u53ef\u89c6\u5316 OpenDRIVE \u9053\u8def\u7f51\u7edc\u5e76\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 OpenDrive Preview Tool \u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8fde\u63a5\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u5355\u51fb Maneuver Tool \u548c Rebuild Maneuver Roads \u3002 \u5f53\u60a8\u51c6\u5907\u597d\u5bfc\u51fa\u65f6\uff1a 1. \u4f7f\u7528 Carla \u9009\u9879\u5bfc\u51fa\u573a\u666f\uff1a \u5728\u4e3b\u5de5\u5177\u680f\u4e2d\uff0c\u9009\u62e9 File -> Export -> CARLA (.fbx, .xodr, .rrdata.xml) 2. \u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\uff1a C\u68c0\u67e5\u4ee5\u4e0b\u9009\u9879\uff1a Split by Segmentation : \u901a\u8fc7\u8bed\u4e49\u5206\u5272\u6765\u5212\u5206\u7f51\u683c\u3002 Power of Two Texture Dimensions : \u63d0\u9ad8\u6027\u80fd\u3002 Embed Textures : \u786e\u4fdd\u7eb9\u7406\u5d4c\u5165\u5230\u7f51\u683c\u4e2d\u3002 Export to Tiles : \u9009\u62e9\u56fe\u5757\u7684\u5927\u5c0f\u6216\u4ec5\u4fdd\u7559\u4e00\u5757\u4e0d\u9009\u4e2d\u3002 Leave unchecked: \u5bfc\u51fa\u5355\u4e2a\u56fe\u5757 : \u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5730\u56fe\u7247\u6bb5\u7684 .fbx \u6587\u4ef6\u3002 3. \u9009\u62e9\u8981\u5c06\u6587\u4ef6\u5bfc\u51fa\u5230\u7684\u76ee\u5f55\uff0c\u7136\u540e\u5355\u51fb Export \u3002\u8fd9\u5c06\u751f\u6210 <mapName>.fbx \u548c <mapName>.xodr \u6587\u4ef6\u7b49\u3002 \u8b66\u544a \u786e\u4fdd .xodr \u548c .fbx \u6587\u4ef6\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002","title":"\u5728 RoadRunner \u4e2d\u5bfc\u51fa\u5730\u56fe"},{"location":"tuto_M_generate_map/#_2","text":"\u60a8\u73b0\u5728\u5df2\u51c6\u5907\u597d\u5c06\u5730\u56fe\u5bfc\u5165 Carla\u3002\u4e0b\u4e00\u6b65\u5c06\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684 Carla \u5b89\u88c5\u7c7b\u578b\uff1a \u5bf9\u4e8e\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 Carla \u7528\u6237 \uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5bf9\u4e8e Carla \u6253\u5305\uff08\u4e8c\u8fdb\u5236\uff09\u7248\u672c\u7684\u7528\u6237 \uff0c\u8bf7\u6309\u7167 \u6b64\u5904 \u7684\u6307\u5357\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u60a8\u5bf9\u6b64\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_M_generate_pedestrian_navigation/","text":"\u751f\u6210\u884c\u4eba\u5bfc\u822a \u4e3a\u4e86\u5141\u8bb8\u884c\u4eba\u5bfc\u822a\u5730\u56fe\uff0c\u60a8\u9700\u8981\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6587\u4ef6\u3002\u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8981\u4f7f\u7528\u7684\u7f51\u683c\u4ee5\u53ca\u5982\u4f55\u751f\u6210\u6587\u4ef6\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u884c\u4eba\u5bfc\u822a\u7f51\u683c \u53ef\u9009\u7684\u884c\u4eba\u5bfc\u822a\u9009\u9879 \u751f\u6210\u884c\u4eba\u5bfc\u822a \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u5730\u56fe\u5b9a\u5236\uff08\u6dfb\u52a0\u5efa\u7b51\u7269\u3001\u7ed8\u5236\u9053\u8def\u3001\u6dfb\u52a0\u666f\u89c2\u7279\u5f81\u7b49\uff09\u5e94\u5728\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4e4b\u524d\u5b8c\u6210\uff0c\u4ee5\u907f\u514d\u4e24\u8005\u4e4b\u95f4\u53d1\u751f\u5e72\u6270\u6216\u78b0\u649e\uff0c\u5bfc\u81f4\u9700\u8981\u518d\u6b21\u751f\u6210\u884c\u4eba\u5bfc\u822a\u3002 \u884c\u4eba\u5bfc\u822a\u7f51\u683c \u884c\u4eba\u53ea\u80fd\u5bfc\u822a\u7279\u5b9a\u7684\u7f51\u683c\u3002\u60a8\u9700\u8981\u6839\u636e\u4e0b\u8868\u4e2d\u7684\u672f\u8bed\u547d\u540d\u8981\u5305\u542b\u5728\u884c\u4eba\u5bfc\u822a\u4e2d\u7684\u7f51\u683c\uff1a \u7c7b\u578b \u5305\u542b\u7684\u540d\u79f0 \u63cf\u8ff0 \u5730\u9762 Road_Sidewalk \u6216 Roads_Sidewalk \u884c\u4eba\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u8fd9\u4e9b\u7f51\u683c\u4e0a\u884c\u8d70\u3002 \u4eba\u884c\u6a2a\u9053 Road_Crosswalk \u6216 Roads_Crosswalk \u5982\u679c\u627e\u4e0d\u5230\u5730\u9762\uff0c\u884c\u4eba\u5c06\u5728\u8fd9\u4e9b\u7f51\u683c\u4e0a\u884c\u8d70\u4f5c\u4e3a\u7b2c\u4e8c\u79cd\u9009\u62e9\u3002 \u8349\u5730 Road_Grass \u6216 Roads_Grass \u884c\u4eba\u4e0d\u4f1a\u5728\u6b64\u7f51\u683c\u4e0a\u884c\u8d70\uff0c\u9664\u975e\u60a8\u6307\u5b9a\u4e00\u5b9a\u6bd4\u4f8b\u7684\u884c\u4eba\u8fd9\u6837\u505a\u3002 \u9a6c\u8def Road_Road \u6216 Roads_Road Road_Curb \u6216 Roads_Curb Road_Gutter \u6216 Roads_Gutter Road_Marking \u6216 Roads_Marking \u884c\u4eba\u53ea\u80fd\u901a\u8fc7\u8fd9\u4e9b\u7f51\u683c\u8fc7\u9a6c\u8def\u3002 \u53ef\u9009\u7684\u884c\u4eba\u5bfc\u822a\u9009\u9879 \u4ee5\u4e0b\u6b65\u9aa4\u5bf9\u4e8e\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5141\u8bb8\u60a8\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u81ea\u5b9a\u4e49\u884c\u4eba\u6d3b\u52a8\u3002 \u751f\u6210\u65b0\u7684\u4eba\u884c\u6a2a\u9053 \u3002 \u5982\u679c\u5df2\u5728 .xodr \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4eba\u884c\u6a2a\u9053\uff0c\u8bf7\u907f\u514d\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u91cd\u590d\uff1a \u521b\u5efa\u4e00\u4e2a\u5e73\u9762\u7f51\u683c\uff08plane mesh\uff0c\u5982\u679c\u770b\u4e0d\u5230\uff0c\u9700\u8981\u5728\u201c\u89c6\u56fe\u9009\u9879\u201d\u4e2d\u9009\u4e2d\u201c\u663e\u793a\u5f15\u64ce\u5185\u5bb9\u201d\uff09\uff0c\u7a0d\u5fae\u5ef6\u4f38\u5230\u8981\u8fde\u63a5\u7684\u4e24\u6761\u4eba\u884c\u9053\u4e0a\u3002 \u5c06\u7f51\u683c\u653e\u7f6e\u5728\u5730\u9762\u4e0a\u5e76\u7981\u7528\u5176\u7269\u7406\u548c\u6e32\u67d3\u3002 \u5c06\u7f51\u683c\u540d\u79f0\u66f4\u6539\u4e3a Road_Crosswalk \u6216 Roads_Crosswalk \u3002 \u751f\u6210\u884c\u4eba\u5bfc\u822a 1. \u8981\u9632\u6b62\u5730\u56fe\u592a\u5927\u800c\u65e0\u6cd5\u5bfc\u51fa\uff0c\u8bf7\u9009\u62e9 BP_Sky \u5bf9\u8c61 \u5e76\u6dfb\u52a0\u4e00\u4e2a NoExport \u6807\u7b7e\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u5176\u4ed6\u4e0d\u53c2\u4e0e\u884c\u4eba\u5bfc\u822a\u7684\u7279\u522b\u5927\u7684\u7f51\u683c\uff0c\u4e5f\u8bf7\u5411\u5b83\u4eec\u6dfb\u52a0 NoExport \u6807\u8bb0\u3002 2. \u4ed4\u7ec6\u68c0\u67e5\u60a8\u7684\u7f51\u683c\u540d\u79f0\u3002\u7f51\u683c\u540d\u79f0\u5e94\u4ee5\u4e0b\u9762\u5217\u51fa\u7684\u4efb\u4f55\u9002\u5f53\u683c\u5f0f\u5f00\u5934\uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u884c\u4eba\u53ef\u4ee5\u884c\u8d70\u7684\u533a\u57df\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u884c\u4eba\u5c06\u80fd\u591f\u5728\u4eba\u884c\u9053\u3001\u4eba\u884c\u6a2a\u9053\u548c\u8349\u5730\u4e0a\u884c\u8d70\uff08\u5bf9\u5176\u4f59\u90e8\u5206\u5f71\u54cd\u8f83\u5c0f\uff09\uff1a \u4eba\u884c\u9053 = Road_Sidewalk \u6216 Roads_Sidewalk \u4eba\u884c\u6a2a\u9053 = Road_Crosswalk \u6216 Roads_Crosswalk \u8349\u5730 = Road_Grass \u6216 Roads_Grass 3. \u6309 ctrl + A \u9009\u62e9\u6240\u6709\u5185\u5bb9\uff08\u62a5\u9519\u5219\u53ea\u9009\u62e9\u548c\u884c\u4eba\u76f8\u5173\u7684\u7f51\u683c\uff09\u5e76\u901a\u8fc7\u9009\u62e9 File -> Carla Exporter \u5bfc\u51fa\u5730\u56fe\u3002\u5c06\u5728 Unreal/CarlaUE4/Saved \u4e2d\u521b\u5efa <mapName>.obj \u6587\u4ef6\u3002 4. \u5c06 <mapName>.obj \u548c <mapName>.xodr \u79fb\u52a8\u5230 Util/DockerUtils/dist \u3002 5. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210\u5bfc\u822a\u6587\u4ef6\uff1a Windows build.bat <mapName> # <mapName> \u6ca1\u6709\u6269\u5c55\u540d Linux ./build.sh <mapName> # <mapName> \u6ca1\u6709\u6269\u5c55\u540d 6. \u5c06\u521b\u5efa\u4e00\u4e2a <mapName>.bin \u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u5305\u542b\u5730\u56fe\u4e0a\u7684\u884c\u4eba\u5bfc\u822a\u4fe1\u606f\u3002\u5c06\u6b64\u6587\u4ef6\u79fb\u52a8\u5230\u5305\u542b\u5730\u56fe\u7684\u5305\u7684 Nav \u6587\u4ef6\u5939\u4e2d\u3002 7. \u901a\u8fc7\u542f\u52a8\u6a21\u62df\u5e76\u8fd0\u884c PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c generate_traffic.py \u6765\u6d4b\u8bd5\u884c\u4eba\u5bfc\u822a\u3002 If you have any questions about the process, then you can ask in the forum . CARLA forum","title":"\u751f\u6210\u884c\u4eba\u5bfc\u822a"},{"location":"tuto_M_generate_pedestrian_navigation/#_1","text":"\u4e3a\u4e86\u5141\u8bb8\u884c\u4eba\u5bfc\u822a\u5730\u56fe\uff0c\u60a8\u9700\u8981\u751f\u6210\u884c\u4eba\u5bfc\u822a\u6587\u4ef6\u3002\u672c\u6307\u5357\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8981\u4f7f\u7528\u7684\u7f51\u683c\u4ee5\u53ca\u5982\u4f55\u751f\u6210\u6587\u4ef6\u3002 \u5728\u4f60\u5f00\u59cb\u4e4b\u524d \u884c\u4eba\u5bfc\u822a\u7f51\u683c \u53ef\u9009\u7684\u884c\u4eba\u5bfc\u822a\u9009\u9879 \u751f\u6210\u884c\u4eba\u5bfc\u822a","title":"\u751f\u6210\u884c\u4eba\u5bfc\u822a"},{"location":"tuto_M_generate_pedestrian_navigation/#_2","text":"\u5730\u56fe\u5b9a\u5236\uff08\u6dfb\u52a0\u5efa\u7b51\u7269\u3001\u7ed8\u5236\u9053\u8def\u3001\u6dfb\u52a0\u666f\u89c2\u7279\u5f81\u7b49\uff09\u5e94\u5728\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4e4b\u524d\u5b8c\u6210\uff0c\u4ee5\u907f\u514d\u4e24\u8005\u4e4b\u95f4\u53d1\u751f\u5e72\u6270\u6216\u78b0\u649e\uff0c\u5bfc\u81f4\u9700\u8981\u518d\u6b21\u751f\u6210\u884c\u4eba\u5bfc\u822a\u3002","title":"\u5728\u4f60\u5f00\u59cb\u4e4b\u524d"},{"location":"tuto_M_generate_pedestrian_navigation/#_3","text":"\u884c\u4eba\u53ea\u80fd\u5bfc\u822a\u7279\u5b9a\u7684\u7f51\u683c\u3002\u60a8\u9700\u8981\u6839\u636e\u4e0b\u8868\u4e2d\u7684\u672f\u8bed\u547d\u540d\u8981\u5305\u542b\u5728\u884c\u4eba\u5bfc\u822a\u4e2d\u7684\u7f51\u683c\uff1a \u7c7b\u578b \u5305\u542b\u7684\u540d\u79f0 \u63cf\u8ff0 \u5730\u9762 Road_Sidewalk \u6216 Roads_Sidewalk \u884c\u4eba\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u8fd9\u4e9b\u7f51\u683c\u4e0a\u884c\u8d70\u3002 \u4eba\u884c\u6a2a\u9053 Road_Crosswalk \u6216 Roads_Crosswalk \u5982\u679c\u627e\u4e0d\u5230\u5730\u9762\uff0c\u884c\u4eba\u5c06\u5728\u8fd9\u4e9b\u7f51\u683c\u4e0a\u884c\u8d70\u4f5c\u4e3a\u7b2c\u4e8c\u79cd\u9009\u62e9\u3002 \u8349\u5730 Road_Grass \u6216 Roads_Grass \u884c\u4eba\u4e0d\u4f1a\u5728\u6b64\u7f51\u683c\u4e0a\u884c\u8d70\uff0c\u9664\u975e\u60a8\u6307\u5b9a\u4e00\u5b9a\u6bd4\u4f8b\u7684\u884c\u4eba\u8fd9\u6837\u505a\u3002 \u9a6c\u8def Road_Road \u6216 Roads_Road Road_Curb \u6216 Roads_Curb Road_Gutter \u6216 Roads_Gutter Road_Marking \u6216 Roads_Marking \u884c\u4eba\u53ea\u80fd\u901a\u8fc7\u8fd9\u4e9b\u7f51\u683c\u8fc7\u9a6c\u8def\u3002","title":"\u884c\u4eba\u5bfc\u822a\u7f51\u683c"},{"location":"tuto_M_generate_pedestrian_navigation/#_4","text":"\u4ee5\u4e0b\u6b65\u9aa4\u5bf9\u4e8e\u751f\u6210\u884c\u4eba\u5bfc\u822a\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5141\u8bb8\u60a8\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u81ea\u5b9a\u4e49\u884c\u4eba\u6d3b\u52a8\u3002 \u751f\u6210\u65b0\u7684\u4eba\u884c\u6a2a\u9053 \u3002 \u5982\u679c\u5df2\u5728 .xodr \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4eba\u884c\u6a2a\u9053\uff0c\u8bf7\u907f\u514d\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u91cd\u590d\uff1a \u521b\u5efa\u4e00\u4e2a\u5e73\u9762\u7f51\u683c\uff08plane mesh\uff0c\u5982\u679c\u770b\u4e0d\u5230\uff0c\u9700\u8981\u5728\u201c\u89c6\u56fe\u9009\u9879\u201d\u4e2d\u9009\u4e2d\u201c\u663e\u793a\u5f15\u64ce\u5185\u5bb9\u201d\uff09\uff0c\u7a0d\u5fae\u5ef6\u4f38\u5230\u8981\u8fde\u63a5\u7684\u4e24\u6761\u4eba\u884c\u9053\u4e0a\u3002 \u5c06\u7f51\u683c\u653e\u7f6e\u5728\u5730\u9762\u4e0a\u5e76\u7981\u7528\u5176\u7269\u7406\u548c\u6e32\u67d3\u3002 \u5c06\u7f51\u683c\u540d\u79f0\u66f4\u6539\u4e3a Road_Crosswalk \u6216 Roads_Crosswalk \u3002","title":"\u53ef\u9009\u7684\u884c\u4eba\u5bfc\u822a\u9009\u9879"},{"location":"tuto_M_generate_pedestrian_navigation/#_5","text":"1. \u8981\u9632\u6b62\u5730\u56fe\u592a\u5927\u800c\u65e0\u6cd5\u5bfc\u51fa\uff0c\u8bf7\u9009\u62e9 BP_Sky \u5bf9\u8c61 \u5e76\u6dfb\u52a0\u4e00\u4e2a NoExport \u6807\u7b7e\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u5176\u4ed6\u4e0d\u53c2\u4e0e\u884c\u4eba\u5bfc\u822a\u7684\u7279\u522b\u5927\u7684\u7f51\u683c\uff0c\u4e5f\u8bf7\u5411\u5b83\u4eec\u6dfb\u52a0 NoExport \u6807\u8bb0\u3002 2. \u4ed4\u7ec6\u68c0\u67e5\u60a8\u7684\u7f51\u683c\u540d\u79f0\u3002\u7f51\u683c\u540d\u79f0\u5e94\u4ee5\u4e0b\u9762\u5217\u51fa\u7684\u4efb\u4f55\u9002\u5f53\u683c\u5f0f\u5f00\u5934\uff0c\u4ee5\u4fbf\u88ab\u8bc6\u522b\u4e3a\u884c\u4eba\u53ef\u4ee5\u884c\u8d70\u7684\u533a\u57df\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u884c\u4eba\u5c06\u80fd\u591f\u5728\u4eba\u884c\u9053\u3001\u4eba\u884c\u6a2a\u9053\u548c\u8349\u5730\u4e0a\u884c\u8d70\uff08\u5bf9\u5176\u4f59\u90e8\u5206\u5f71\u54cd\u8f83\u5c0f\uff09\uff1a \u4eba\u884c\u9053 = Road_Sidewalk \u6216 Roads_Sidewalk \u4eba\u884c\u6a2a\u9053 = Road_Crosswalk \u6216 Roads_Crosswalk \u8349\u5730 = Road_Grass \u6216 Roads_Grass 3. \u6309 ctrl + A \u9009\u62e9\u6240\u6709\u5185\u5bb9\uff08\u62a5\u9519\u5219\u53ea\u9009\u62e9\u548c\u884c\u4eba\u76f8\u5173\u7684\u7f51\u683c\uff09\u5e76\u901a\u8fc7\u9009\u62e9 File -> Carla Exporter \u5bfc\u51fa\u5730\u56fe\u3002\u5c06\u5728 Unreal/CarlaUE4/Saved \u4e2d\u521b\u5efa <mapName>.obj \u6587\u4ef6\u3002 4. \u5c06 <mapName>.obj \u548c <mapName>.xodr \u79fb\u52a8\u5230 Util/DockerUtils/dist \u3002 5. \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210\u5bfc\u822a\u6587\u4ef6\uff1a Windows build.bat <mapName> # <mapName> \u6ca1\u6709\u6269\u5c55\u540d Linux ./build.sh <mapName> # <mapName> \u6ca1\u6709\u6269\u5c55\u540d 6. \u5c06\u521b\u5efa\u4e00\u4e2a <mapName>.bin \u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u5305\u542b\u5730\u56fe\u4e0a\u7684\u884c\u4eba\u5bfc\u822a\u4fe1\u606f\u3002\u5c06\u6b64\u6587\u4ef6\u79fb\u52a8\u5230\u5305\u542b\u5730\u56fe\u7684\u5305\u7684 Nav \u6587\u4ef6\u5939\u4e2d\u3002 7. \u901a\u8fc7\u542f\u52a8\u6a21\u62df\u5e76\u8fd0\u884c PythonAPI/examples \u4e2d\u7684\u793a\u4f8b\u811a\u672c generate_traffic.py \u6765\u6d4b\u8bd5\u884c\u4eba\u5bfc\u822a\u3002 If you have any questions about the process, then you can ask in the forum . CARLA forum","title":"\u751f\u6210\u884c\u4eba\u5bfc\u822a"},{"location":"tuto_M_manual_map_package/","text":"\u624b\u52a8\u5305\u51c6\u5907 \u5730\u56fe\u5305\u9075\u5faa\u7279\u5b9a\u7684\u6587\u4ef6\u5939\u7ed3\u6784\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u63cf\u8ff0\u8be5\u7ed3\u6784\u7684 .json \u6587\u4ef6\u3002\u6211\u4eec\u7684\u81ea\u52a8\u5730\u56fe\u5bfc\u5165\u6d41\u7a0b\u4f1a\u81ea\u52a8\u521b\u5efa\u6b64 .json \u6587\u4ef6\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u884c\u51c6\u5907\u3002\u5305\u542b\u60a8\u81ea\u5df1\u7684 .json \u6587\u4ef6\u5c06\u8986\u76d6\u4f20\u9012\u7ed9 make import \u547d\u4ee4\u7684\u4efb\u4f55\u53c2\u6570\u3002 \u6807\u51c6\u5730\u56fe \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0 \u5927\u5730\u56fe \u4e3a\u5927\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u4e3a\u5927\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0 \u6807\u51c6\u5730\u56fe \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u5728 carla/Import \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u3002 \u6587\u4ef6\u5939\u7684\u540d\u79f0\u5e76\u4e0d\u91cd\u8981\u3002 \u4e3a\u6bcf\u4e2a\u8981\u5bfc\u5165\u7684\u5730\u56fe \u521b\u5efa\u4e0d\u540c\u7684\u5b50\u6587\u4ef6\u5939 \u3002 \u5c06\u6bcf\u4e2a\u5730\u56fe\u7684\u6587\u4ef6\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u5b50\u6587\u4ef6\u5939\u5c06\u5305\u542b\u4e00\u7ec4\u7279\u5b9a\u7684\u5143\u7d20\uff1a .fbx \u6587\u4ef6\u4e2d\u5730\u56fe\u7684\u7f51\u683c\u3002 .xodr \u6587\u4ef6\u4e2d\u7684 OpenDRIVE \u5b9a\u4e49\u3002 \uff08\u53ef\u9009\uff09\u8d44\u4ea7\u6240\u9700\u7684\u7eb9\u7406\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u5730\u56fe\u7684\u5305\u7684 Import \u6587\u4ef6\u5939\u5e94\u5177\u6709\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\u7684\u7ed3\u6784\u3002 Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 Map01 \u2502 \u251c\u2500\u2500 Asphalt1_Diff.jpg \u2502 \u251c\u2500\u2500 Asphalt1_Norm.jpg \u2502 \u251c\u2500\u2500 Asphalt1_Spec.jpg \u2502 \u251c\u2500\u2500 Grass1_Diff.jpg \u2502 \u251c\u2500\u2500 Grass1_Norm.jpg \u2502 \u251c\u2500\u2500 Grass1_Spec.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Diff.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Norm.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Spec.jpg \u2502 \u251c\u2500\u2500 Map01.fbx \u2502 \u2514\u2500\u2500 Map01.xodr \u2514\u2500\u2500 Map02 \u2514\u2500\u2500 Map02.fbx \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0 \u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u3002\u5728\u5305\u4e4b\u540e\u547d\u540d\u6587\u4ef6\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u662f\u53d1\u884c\u7248\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u63cf\u8ff0 \u5730\u56fe \u548c \u9053\u5177 \u7684 JSON \u6570\u7ec4\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 \u5730\u56fe \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a \u5730\u56fe\u7684 name \u3002\u8fd9\u5fc5\u987b\u548c .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u3002 .fbx \u6587\u4ef6\u7684 source \u8def\u5f84\u3002 use_carla_materials . \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 Carla \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u8d28\u3002 xodr .xodr \u6587\u4ef6\u7684\u8def\u5f84\u3002 Props \u4e0d\u5c5e\u4e8e\u672c\u6559\u6750\u7684\u4e00\u90e8\u5206\u3002\u8be5\u5b57\u6bb5\u5c06\u7559\u7a7a\u3002\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55 \u6dfb\u52a0\u65b0\u9053\u5177 \u7684\u6559\u7a0b\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"Map01\", \"source\": \"./Map01/Map01.fbx\", \"use_carla_materials\": true, \"xodr\": \"./Map01/Map01.xodr\" }, { \"name\": \"Map02\", \"source\": \"./Map02/Map02.fbx\", \"use_carla_materials\": false, \"xodr\": \"./Map02/Map02.xodr\" } ], \"props\": [ ] } \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u624b\u52a8\u51c6\u5907\u5730\u56fe\u5305"},{"location":"tuto_M_manual_map_package/#_1","text":"\u5730\u56fe\u5305\u9075\u5faa\u7279\u5b9a\u7684\u6587\u4ef6\u5939\u7ed3\u6784\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u63cf\u8ff0\u8be5\u7ed3\u6784\u7684 .json \u6587\u4ef6\u3002\u6211\u4eec\u7684\u81ea\u52a8\u5730\u56fe\u5bfc\u5165\u6d41\u7a0b\u4f1a\u81ea\u52a8\u521b\u5efa\u6b64 .json \u6587\u4ef6\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u884c\u51c6\u5907\u3002\u5305\u542b\u60a8\u81ea\u5df1\u7684 .json \u6587\u4ef6\u5c06\u8986\u76d6\u4f20\u9012\u7ed9 make import \u547d\u4ee4\u7684\u4efb\u4f55\u53c2\u6570\u3002 \u6807\u51c6\u5730\u56fe \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0 \u5927\u5730\u56fe \u4e3a\u5927\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784 \u4e3a\u5927\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0","title":"\u624b\u52a8\u5305\u51c6\u5907"},{"location":"tuto_M_manual_map_package/#_2","text":"","title":"\u6807\u51c6\u5730\u56fe"},{"location":"tuto_M_manual_map_package/#_3","text":"\u5728 carla/Import \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u3002 \u6587\u4ef6\u5939\u7684\u540d\u79f0\u5e76\u4e0d\u91cd\u8981\u3002 \u4e3a\u6bcf\u4e2a\u8981\u5bfc\u5165\u7684\u5730\u56fe \u521b\u5efa\u4e0d\u540c\u7684\u5b50\u6587\u4ef6\u5939 \u3002 \u5c06\u6bcf\u4e2a\u5730\u56fe\u7684\u6587\u4ef6\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u3002 \u5b50\u6587\u4ef6\u5939\u5c06\u5305\u542b\u4e00\u7ec4\u7279\u5b9a\u7684\u5143\u7d20\uff1a .fbx \u6587\u4ef6\u4e2d\u5730\u56fe\u7684\u7f51\u683c\u3002 .xodr \u6587\u4ef6\u4e2d\u7684 OpenDRIVE \u5b9a\u4e49\u3002 \uff08\u53ef\u9009\uff09\u8d44\u4ea7\u6240\u9700\u7684\u7eb9\u7406\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u5730\u56fe\u7684\u5305\u7684 Import \u6587\u4ef6\u5939\u5e94\u5177\u6709\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7ed3\u6784\u7684\u7ed3\u6784\u3002 Import \u2502 \u2514\u2500\u2500 Package01 \u251c\u2500\u2500 Package01.json \u251c\u2500\u2500 Map01 \u2502 \u251c\u2500\u2500 Asphalt1_Diff.jpg \u2502 \u251c\u2500\u2500 Asphalt1_Norm.jpg \u2502 \u251c\u2500\u2500 Asphalt1_Spec.jpg \u2502 \u251c\u2500\u2500 Grass1_Diff.jpg \u2502 \u251c\u2500\u2500 Grass1_Norm.jpg \u2502 \u251c\u2500\u2500 Grass1_Spec.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Diff.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Norm.jpg \u2502 \u251c\u2500\u2500 LaneMarking1_Spec.jpg \u2502 \u251c\u2500\u2500 Map01.fbx \u2502 \u2514\u2500\u2500 Map01.xodr \u2514\u2500\u2500 Map02 \u2514\u2500\u2500 Map02.fbx","title":"\u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784"},{"location":"tuto_M_manual_map_package/#json","text":"\u5728\u5305\u7684\u6839\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a .json \u6587\u4ef6\u3002\u5728\u5305\u4e4b\u540e\u547d\u540d\u6587\u4ef6\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u662f\u53d1\u884c\u7248\u540d\u79f0\u3002\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u63cf\u8ff0 \u5730\u56fe \u548c \u9053\u5177 \u7684 JSON \u6570\u7ec4\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5730\u56fe\u548c\u9053\u5177\u7684\u57fa\u672c\u4fe1\u606f\u3002 \u5730\u56fe \u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a \u5730\u56fe\u7684 name \u3002\u8fd9\u5fc5\u987b\u548c .fbx \u548c .xodr \u6587\u4ef6\u76f8\u540c\u3002 .fbx \u6587\u4ef6\u7684 source \u8def\u5f84\u3002 use_carla_materials . \u5982\u679c\u4e3a True \uff0c\u5730\u56fe\u5c06\u4f7f\u7528 Carla \u6750\u8d28\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4f7f\u7528 RoadRunner \u6750\u8d28\u3002 xodr .xodr \u6587\u4ef6\u7684\u8def\u5f84\u3002 Props \u4e0d\u5c5e\u4e8e\u672c\u6559\u6750\u7684\u4e00\u90e8\u5206\u3002\u8be5\u5b57\u6bb5\u5c06\u7559\u7a7a\u3002\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55 \u6dfb\u52a0\u65b0\u9053\u5177 \u7684\u6559\u7a0b\u3002 \u751f\u6210\u7684 .json \u6587\u4ef6\u5e94\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a { \"maps\": [ { \"name\": \"Map01\", \"source\": \"./Map01/Map01.fbx\", \"use_carla_materials\": true, \"xodr\": \"./Map01/Map01.xodr\" }, { \"name\": \"Map02\", \"source\": \"./Map02/Map02.fbx\", \"use_carla_materials\": false, \"xodr\": \"./Map02/Map02.xodr\" } ], \"props\": [ ] } \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 Carla \u8bba\u575b","title":"\u4e3a\u6807\u51c6\u5730\u56fe\u521b\u5efa JSON \u63cf\u8ff0"},{"location":"tuto_content_authoring_maps/","text":"\u5185\u5bb9\u521b\u4f5c - \u5730\u56fe CARLA \u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u8d44\u6e90\uff0c\u53ef\u7528\u4e8e\u521b\u5efa\u5f00\u7bb1\u5373\u7528\u7684\u9a7e\u9a76\u4eff\u771f\u3002\u7136\u800c\uff0cCARLA \u7684\u771f\u6b63\u529b\u91cf\u5728\u4e8e\u5176\u5168\u9762\u7684\u53ef\u6269\u5c55\u6027\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u73af\u5883\uff0c\u5176\u4e2d\u5305\u542b\u5efa\u7b51\u7269\u3001\u957f\u51f3\u3001\u5783\u573e\u6876\u3001\u96d5\u50cf\u3001\u8def\u706f\u548c\u516c\u4ea4\u8f66\u7ad9\u7b49\u5b9a\u5236\u8d44\u4ea7\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684\u7b80\u5355\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e24\u4e2a\u8f6f\u4ef6\u5305\u6765\u521b\u5efa\u5730\u56fe\u7684\u5404\u4e2a\u90e8\u5206\u3002\u6211\u4eec\u5c06\u4f7f\u7528 RoadRunner \u521b\u5efa\u9053\u8def\u7f51\u7edc\uff0c\u7136\u540e\u901a\u8fc7 \u865a\u5e7b\u7f16\u8f91\u5668 \u5c06\u8d44\u6e90\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d\u3002 \u5148\u51b3\u6761\u4ef6 \u5927\u5730\u56fe \u6570\u5b57\u5b6a\u751f\u5de5\u5177 RoadRunner \u5bfc\u5165 CARLA \u5bfc\u5165\u8d44\u4ea7 \u4ea4\u901a\u706f \u4ea4\u901a\u6807\u5fd7 Materials \u9053\u8def\u753b\u5bb6 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\u3001\u4e3b\u6750\u8d28\u548c\u6e32\u67d3\u5bf9\u8c61 \u51c6\u5907\u4e3b\u6750\u6599 \u63cf\u7ed8\u9053\u8def \u66f4\u65b0\u8f66\u9053\u7ebf\u5916\u89c2 \u4e0b\u4e00\u6b65 \u6811\u6728\u548c\u690d\u88ab \u6811\u53f6\u5de5\u5177 \u5148\u51b3\u6761\u4ef6 \u8981\u9075\u5faa\u672c\u6307\u5357\uff0c\u60a8\u9700\u8981\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u8bf7\u9075\u5faa\u76f8\u5173\u64cd\u4f5c\u7cfb\u7edf\u7684 \u6784\u5efa\u8bf4\u660e \u3002\u60a8\u8fd8\u9700\u8981 RoadRunner \u7684\u8bb8\u53ef\u526f\u672c\u3002\u60a8\u53ef\u80fd\u8fd8\u9700\u8981 Maya\u30013DS Max \u6216 Blender \u7b49\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u6765\u4e3a\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u4e09\u7ef4\u8d44\u4ea7\u3002\u60a8\u5e94\u8be5\u786e\u4fdd\u5df2\u5b8c\u6210\u6784\u5efa CARLA \u7684\u6240\u6709\u6b65\u9aa4\u5e76\u786e\u4fdd\u865a\u5e7b\u7f16\u8f91\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u60f3\u4e3a\u5730\u56fe\u521b\u5efa\u4e09\u7ef4\u8d44\u4ea7\uff0c\u5219\u5e94\u4f7f\u7528\u9002\u5f53\u7684\u4e09\u7ef4\u8bbe\u8ba1\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982 Blender\u3001Maya\u30013DsMax \u6216 Modo\u3002 \u5927\u5730\u56fe \u4ee5\u4e0b\u6587\u672c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u548c\u88c5\u9970\u6807\u51c6\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCARLA \u5177\u6709\u5927\u5730\u56fe\u529f\u80fd\u3002\u5927\u5730\u56fe\u7684\u6bd4\u4f8b\u6bd4\u6807\u51c6\u5730\u56fe\u66f4\u5927\uff0c\u6700\u5927\u53ef\u8fbe 100 km 2 \u3002\u7531\u4e8e\u786c\u4ef6\u9650\u5236\uff0c\u5927\u5730\u56fe\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6807\u51c6\u5730\u56fe\u7565\u6709\u4e0d\u540c\uff0c\u5373\u4f7f\u5728\u9ad8\u7aef\u663e\u5361\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u5927\u5730\u56fe\u88ab\u5206\u5272\u6210\u56fe\u5757\uff0c\u5e76\u4e14\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u4ec5\u52a0\u8f7d\u7acb\u5373\u9700\u8981\u7684\u56fe\u5757\uff08\u5373\u6700\u63a5\u8fd1\u81ea\u6211\u8f66\u8f86\u7684\u56fe\u5757\uff09\u3002\u5176\u4ed6\u56fe\u5757\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u76f4\u5230\u9700\u8981\u6570\u636e\u4e3a\u6b62\u3002\u8fd9\u6709\u52a9\u4e8e\u5b9e\u73b0 CARLA \u6a21\u62df\u7684\u6700\u9ad8\u6027\u80fd\u3002\u63a5\u4e0b\u6765\u7684\u5927\u591a\u6570\u7ec6\u8282\u4e0e\u6784\u5efa\u5927\u5730\u56fe\u65f6\u7c7b\u4f3c\uff0c\u4f46\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\u3002\u8bf7\u6309\u7167 \u672c\u6307\u5357 \u4e3a CARLA \u6784\u5efa\u5927\u5730\u56fe\u3002 \u6570\u5b57\u5b6a\u751f\u5de5\u5177 CARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u5316\u5730\u56fe\u751f\u6210\u5de5\u5177\uff0c\u5b83\u4ece OpenStreetMap \u83b7\u53d6\u9053\u8def\u7f51\u7edc\u6570\u636e\uff0c\u5e76\u7528\u5efa\u7b51\u7269\u548c\u690d\u88ab\u7a0b\u5e8f\u5316\u5730\u88c5\u9970\u5730\u56fe\u3002\u8bf7\u5728 \u6b64\u5904 \u9605\u8bfb\u6709\u5173\u5982\u4f55\u4f7f\u7528\u8be5\u5de5\u5177\u7684\u4fe1\u606f\u3002 \u4f7f\u7528 RoadRunner \u521b\u5efa\u8def\u7f51 \u6253\u5f00 RoadRunner \u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u573a\u666f\u3002\u9009\u62e9\u9053\u8def\u89c4\u5212\u5de5\u5177(Road Plan Tool)\u5e76\u5728\u5de5\u4f5c\u533a\u4e2d \u53f3\u952e \u5355\u51fb\u4ee5\u653e\u7f6e\u9053\u8def\u7684\u7b2c\u4e00\u4e2a\u63a7\u5236\u70b9\u548c\u7b2c\u4e8c\u4e2a\u63a7\u5236\u70b9\u3002\u5355\u51fb\u5e76\u62d6\u52a8\u9053\u8def\u5c3d\u5934\u7684\u7ea2\u70b9\u4ee5\u79fb\u52a8\u548c\u5ef6\u957f\u9053\u8def\u3002 \u51fa\u4e8e\u672c\u6559\u7a0b\u7684\u76ee\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e2d\u95f4\u6709\u4e00\u4e2a\u4ea4\u53c9\u8def\u53e3\u7684\u7b80\u5355\u692d\u5706\u5f62\u9053\u8def\u3002\u8981\u6784\u5efa\u66f4\u9ad8\u7ea7\u7684\u7f51\u7edc\uff0c\u8bf7\u53c2\u9605 Roadrunner \u6587\u6863 \u3002 \u5728 RoadRunner \u4e2d\u5236\u4f5c\u5730\u56fe\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c \u9053\u8def\u5e03\u5c40\u5bfc\u51fa\u540e\u65e0\u6cd5\u4fee\u6539 \u3002\u5bfc\u51fa\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a \u5730\u56fe\u4ee5 (0,0) \u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u53ef\u89c6\u5316\u3002 \u5730\u56fe\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u5730\u56fe\u51c6\u5907\u597d\u540e\uff0c\u5355\u51fb OpenDRIVE Preview Tool \u6309\u94ae\u5373\u53ef\u53ef\u89c6\u5316 OpenDRIVE \u9053\u8def\u7f51\u7edc\u5e76\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 OpenDrive Preview Tool \u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8fde\u63a5\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u5355\u51fb Maneuver Tool \u548c Rebuild Maneuver Roads \u3002 \u521b\u5efa\u6240\u9700\u7684\u9053\u8def\u7f51\u7edc\u540e\uff0c\u5728 RoadRunner \u83dc\u5355\u680f\u4e2d\u9009\u62e9 File > Export > Carla Filmbox (.fbx, .xodr, .rrdata.xml) \u5e76\u5bfc\u51fa\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\u3002 RoadRunner \u662f\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u6700\u4f73\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd8\u6709\u4e00\u4e9b\u66ff\u4ee3\u65b9\u6848\uff0c\u4f8b\u5982 OpenStreetMap \uff0c\u4e13\u6ce8\u4e8e\u4ece\u771f\u5b9e\u7684\u9053\u8def\u5730\u56fe\u751f\u6210\u5730\u56fe\u3002 TrueVision \u8bbe\u8ba1\u5668 RoadRunner \u662f\u4e00\u6b3e\u9700\u8981 MATLAB \u7684\u4e13\u6709\u8f6f\u4ef6\u3002\u5927\u5b66\u7b49\u4e00\u4e9b\u673a\u6784\u53ef\u80fd\u4e0e MathWorks \u8fbe\u6210\u4e86\u534f\u8bae\uff0c\u4ee5\u4fbf\u67d0\u4e9b\u7528\u6237\u53ef\u4ee5\u83b7\u5f97 RoadRunner \u8bb8\u53ef\u8bc1\u3002\u5982\u679c\u60a8\u6ca1\u6709\u8bb8\u53ef\u8bc1\u9884\u7b97\uff0cRoadRunner \u7684\u4e00\u4e2a\u65b9\u4fbf\u7684\u5f00\u6e90\u66ff\u4ee3\u65b9\u6848\u662f TrueVision Designer \u3002\u6b64\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u8bb8\u591a\u4e0e RoadRunner \u76f8\u540c\u7684\u529f\u80fd\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u83b7\u5f97 RoadRunner \u7684\u8bb8\u53ef\u8bc1\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f1a\u975e\u5e38\u6709\u7528\u3002 \u5c06\u60a8\u7684\u8def\u7f51\u5bfc\u5165 CARLA CARLA\u9700\u8981\u7684\u91cd\u8981\u5bfc\u51fa\u6587\u4ef6\u662f .xodr \u6587\u4ef6\u548c .fbx \u6587\u4ef6\u3002\u5c06\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u6216\u79fb\u52a8\u5230\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u5b58\u50a8\u5e93\u6839\u76ee\u5f55\u5185\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002 \u73b0\u5728\u5728 CARLA \u6e90\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e2d\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u5e76\u8fd0\u884c make import . \u8fd9\u4f1a\u5c06\u9053\u8def\u7f51\u7edc\u5bfc\u5165 CARLA\u3002 \u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u770b\u5230\u65b0\u5730\u56fe\u3002\u5728 CARLA \u6e90\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c make launch \u4ee5\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u60a8\u73b0\u5728\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u4e00\u4e2a\u540d\u4e3a map_package \u7684\u65b0\u76ee\u5f55\u3002\u5728\u6b64\u76ee\u5f55 Content > map_package > Maps > tutorial \u4e2d\uff0c\u60a8\u73b0\u5728\u5c06\u627e\u5230\u60a8\u7684\u65b0\u5730\u56fe\u3002 \u7b14\u8bb0 \u53ef\u4ee5\u53c2\u8003 \u94fe\u63a5 \u901a\u8fc7\u9f20\u6807\u53f3\u952e\u7684\u65b9\u5f0f\u76f4\u63a5\u5bfc\u5165\u3002 \u60a8\u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u4e86\u9053\u8def\u7f51\u7edc\uff0c\u8fd9\u662f\u5730\u56fe\u7684\u57fa\u7840\u3002 \u5bfc\u5165\u8d44\u4ea7\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u5730\u56fe \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u5730\u56fe\u7684\u57fa\u7840\uff0c\u6211\u4eec\u73b0\u5728\u60f3\u8981\u4e3a\u5730\u56fe\u521b\u5efa\u4e00\u4e9b\u5185\u5bb9\uff0c\u4f8b\u5982\u5efa\u7b51\u7269\u3002\u8fd9\u4e9b\u8d44\u6e90\u53ef\u4ee5\u4f7f\u7528\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\uff08\u4f8b\u5982 Autodesk Maya\u30013DS Max\u3001Blender \u6216\u5177\u6709\u9002\u5f53\u5bfc\u51fa\u9009\u9879\u7684\u4efb\u4f55\u5176\u4ed6\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\uff09\u521b\u5efa\u3002\u91cd\u8981\u7684\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u81f3\u5c11\u80fd\u591f\u5bfc\u51fa .fbx \u3002 \u5728 CARLA \u4e2d\u521b\u5efa\u8d44\u4ea7\u9700\u8981\u51e0\u4e2a\u5143\u7d20\uff1a \u7f51\u683c - \u4e00\u7ec4 3D \u5750\u6807\u9876\u70b9\u548c\u5173\u8054\u7684\u8fde\u63a5\u8fb9\u3002 UV \u8d34\u56fe - \u5c06\u4e09\u7ef4\u9876\u70b9\u548c\u8fb9\u6620\u5c04\u5230\u4e8c\u7ef4\u7eb9\u7406\u7a7a\u95f4\uff0c\u4ee5\u5c06\u7eb9\u7406\u4e0e\u4e09\u7ef4\u4f4d\u7f6e\u8fdb\u884c\u5339\u914d\u3002 \u7eb9\u7406 - \u5b9a\u4e49\u4e09\u7ef4\u5bf9\u8c61\u8868\u9762\u4e0a\u663e\u793a\u7684\u989c\u8272\u548c\u56fe\u6848\u7684\u4e8c\u7ef4\u56fe\u50cf\u3002 \u6cd5\u7ebf\u8d34\u56fe - \u5b9a\u4e49\u76ee\u6807\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u7684\u4e8c\u7ef4\u56fe\u50cf\uff0c\u4ee5\u5411\u76ee\u6807\u8868\u9762\u6dfb\u52a0\u4e09\u7ef4\u53d8\u5316\u3002 ORM \u8d34\u56fe - \u5b9a\u4e49\u91d1\u5c5e\u5ea6(Metallicity)\u3001\u7c97\u7cd9\u5ea6(Roughness)\u548c\u73af\u5883\u5149\u906e\u6321(Occlusion)\u533a\u57df\u7684\u8d34\u56fe ORM \u8d34\u56fe\u5229\u7528\u6807\u51c6 RGBA \u7f16\u7801\u56fe\u50cf\u7684\u901a\u9053\u5bf9\u91d1\u5c5e\u533a\u57df\u3001\u7c97\u7cd9\u5ea6\u548c\u73af\u5883\u906e\u6321\u7684\u8d34\u56fe\u8fdb\u884c\u7f16\u7801\u3002\u5f53\u6211\u4eec\u5728\u8fd9\u91cc\u5b9a\u4e49\u8d34\u56fe\u65f6\uff0c\u7ea2\u8272\u901a\u9053\u5b9a\u4e49\u91d1\u5c5e\u8d34\u56fe\uff0c\u7eff\u8272\u901a\u9053\u5b9a\u4e49\u7c97\u7cd9\u5ea6\uff0c\u84dd\u8272\u901a\u9053\u5b9a\u4e49\u73af\u5883\u5149\u906e\u6321\u3002\u8fd9\u4e9b\u8d34\u56fe\uff08\u4ee5\u53ca\u6f2b\u53cd\u5c04\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\uff09\u53ef\u4ee5\u4f7f\u7528 Adobe Substance 3D painter \u7b49\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u3002 \u4f7f\u7528\u865a\u5e7b\u5185\u5bb9\u6d4f\u89c8\u5668\u5728\u67d0\u4e2a\u9002\u5f53\u7684\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\u3002\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb\u5e76 Import to PATH/TO/FOLDER \u5728\u4e0a\u4e0b\u6587\u83dc\u5355\u9876\u90e8\u9644\u8fd1\u8fdb\u884c\u9009\u62e9\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6587\u4ef6\u76f4\u63a5\u62d6\u653e\u5230\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u3002 \u6211\u4eec\u5c06\u5bfc\u5165\u4e00\u4e2a\u5305\u542b\u4ece Blender \u5bfc\u51fa\u7684\u57fa\u7840\u7f51\u683c\u548c UV \u8d34\u56fe\u7684 FBX \u6587\u4ef6\u3002 \u5728\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\uff0c\u5bf9\u4e8e Normal Import Method \u786e\u4fdd\u201c\u7f51\u683c\u201d\u90e8\u5206\u9009\u62e9\u4e86\u201c\u5bfc\u5165\u6cd5\u7ebf( Import Normals )\uff0c\u5e76\u4e14\u5728\u201c\u6750\u8d28( Material )\u201d\u90e8\u5206\u4e2d\u9009\u62e9\u4e86 Do Not Create Material \u3002\u5728\u201c\u6750\u8d28\u201d\u90e8\u5206\u4e2d\u53d6\u6d88\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u624b\u52a8\u5bfc\u5165\u5b83\u4eec\u3002\u5982\u679c\u60a8\u60f3\u4f7f\u7528 FBX \u6587\u4ef6\u4e2d\u5df2\u5d4c\u5165\u7684\u67d0\u4e9b\u7eb9\u7406\uff0c\u8fd9\u4e9b\u9009\u62e9\u5c06\u4f1a\u6709\u6240\u4e0d\u540c\u3002 \u9009\u62e9 Import All \u3002\u5bfc\u5165\u5b8c\u6210\u540e\uff0c\u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u7684\u5bfc\u5165\u8d44\u6e90\u8fdb\u884c\u7f16\u8f91\u3002 \u6211\u4eec\u73b0\u5728\u5e94\u8be5\u5bfc\u5165\u7eb9\u7406\u3001\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u3001\u6cd5\u7ebf\u8d34\u56fe\u548c ORM \u8d34\u56fe\u3002 \u901a\u8fc7\u53cc\u51fb\u6253\u5f00 ORM \u8d34\u56fe\u5e76\u53d6\u6d88\u9009\u62e9 sRGB \u9009\u9879\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u5e94\u7528\u7eb9\u7406\u3002 \u53f3\u952e\u5355\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u5e76\u4ece\u83dc\u5355\u4e2d\u9009\u62e9 Material \u3002\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u521b\u5efa\u65b0\u6750\u6599\u3002\u53cc\u51fb\u8fdb\u884c\u7f16\u8f91\u3002\u6309\u4f4f Shift \u952e\u9009\u62e9\u5bfc\u5165\u7684\u7eb9\u7406\u5e76\u5c06\u5176\u62d6\u5230\u6750\u8d28\u7f16\u8f91\u7a97\u53e3\u4e2d\uff0c\u73b0\u5728\u60a8\u5c06\u5728\u6750\u8d28\u8282\u70b9\u7f16\u8f91\u5668\u4e2d\u83b7\u5f97 3 \u4e2a\u65b0\u8282\u70b9\u3002 \u73b0\u5728\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\u8fde\u63a5\u8282\u70b9\uff1a Diffuse RGB --> Base Color Normal RGB --> Normal ORM R --> Ambient occlusion ORM G --> Roughness ORM B --> Metallic \u60a8\u7684\u6750\u8d28\u8282\u70b9\u56fe\u73b0\u5728\u5e94\u8be5\u4e0e\u6b64\u7c7b\u4f3c\uff1a \u4fdd\u5b58\u6750\u8d28\uff0c\u7136\u540e\u518d\u6b21\u6253\u5f00\u8d44\u6e90\u5e76\u5c06\u6750\u8d28\u62d6\u5165\u6750\u8d28\u69fd\u4e2d\u3002\u60a8\u7684\u8d44\u6e90\u73b0\u5728\u5e94\u8be5\u5df2\u5b8c\u5168\u7eb9\u7406\u5316\u3002 \u73b0\u5728\u4fdd\u5b58\u8d44\u4ea7\uff0c\u5373\u53ef\u5728\u5730\u56fe\u4e2d\u4f7f\u7528\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u62d6\u52a8\u8d44\u6e90\u5e76\u5c06\u5176\u653e\u5165\u5730\u56fe\u4e2d\uff1a \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u533a\u5de6\u4e0a\u89d2\u7684\u201c\u4fdd\u5b58\u5f53\u524d\u201d\u9009\u9879\u4fdd\u5b58\u5730\u56fe\uff0c\u5373\u53ef\u4f7f\u7528\u3002\u5f00\u59cb\u4eff\u771f\u3002 \u5730\u56fe\u4f5c\u8005\u6307\u5357\u5230\u6b64\u7ed3\u675f\u3002\u73b0\u5728\u60a8\u77e5\u9053\u5982\u4f55\u521b\u5efa\u9053\u8def\u7f51\u7edc\u5e76\u5bfc\u5165\u4e09\u7ef4\u8d44\u4ea7\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u9605\u8bfb\u5982\u4f55 \u6253\u5305\u5730\u56fe\u4ee5\u5728 CARLA \u72ec\u7acb\u7248\u672c\u4e2d\u4f7f\u7528 \u3002 \u4ea4\u901a\u706f \u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 , \u5bfc\u822a\u81f3 Content > Carla > Static > TrafficLight > StreetLights_01 \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u9009\u62e9\u201c\u8be6\u7ec6( Details )\u201d \u9762\u677f\u4e2d\u7684 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u7684\u503c\uff0c\u4e3a\u6bcf\u4e2a\u7ea2\u7eff\u706f\u8c03\u6574 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u7ea2\u7eff\u706f\u7684\u5f71\u54cd\u8303\u56f4\u3002 4. \u5bf9\u4e8e\u8def\u53e3\uff0c\u5c06 BP_TrafficLightGroup \u53c2\u4e0e\u8005\u62d6\u5165\u5173\u5361\u4e2d\u3002\u901a\u8fc7\u5c06\u8def\u53e3\u5904\u7684\u6240\u6709\u4ea4\u901a\u706f\u6dfb\u52a0\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u7684\u201c\u4ea4\u901a\u706f( Traffic Lights )\u201d\u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4ea4\u901a\u706f\u7ec4\u3002 5. \u4ea4\u901a\u706f\u8ba1\u65f6\u53ea\u80fd\u901a\u8fc7Python API \u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f8b\u5982\uff1a\u4ea4\u901a\u6807\u5fd7\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u548c\u8f6c\u5f2f\u505c\u8f66\u3002 \u4ea4\u901a\u6807\u5fd7 \u8981\u5c06\u4ea4\u901a\u6807\u5fd7\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content > Carla > Static > TrafficSign \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574\u201c\u53d8\u6362( Transform )\u201d\u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574\u6bcf\u4e2a\u4ea4\u901a\u6807\u5fd7\u7684 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002\u5e76\u975e\u6240\u6709\u4ea4\u901a\u6807\u5fd7\u90fd\u6709\u89e6\u53d1\u97f3\u91cf\u3002\u6b64\u7c7b\u6807\u5fd7\u5305\u62ec\u8ba9\u884c\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u548c\u9650\u901f\u6807\u5fd7\u3002 \u6750\u8d28 CARLA \u5185\u5bb9\u5e93\u62e5\u6709\u5927\u91cf\u6709\u7528\u7684\u6750\u6599\uff0c\u53ef\u968f\u65f6\u7528\u4e8e\u66f4\u6539\u5730\u56fe\u7684\u5916\u89c2\u3002\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u5bfc\u822a\u81f3 Carla > Static > GenericMaterials \u3002\u5728\u8fd9\u91cc\u60a8\u4f1a\u53d1\u73b0\u8bb8\u591a\u53ef\u7528\u4e8e\u6539\u53d8\u5730\u56fe\u5916\u89c2\u7684\u6750\u6599\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u62d6\u653e\u5230\u5730\u56fe\u5143\u7d20\u4e0a\u6765\u5feb\u901f\u6d4b\u8bd5\u6750\u8d28\uff1a \u9053\u8def\u753b\u5bb6 \u9053\u8def\u753b\u5bb6\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u9053\u8def\u5916\u89c2\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u9644\u52a0\u7eb9\u7406\u3001\u8d34\u82b1\u548c\u7f51\u683c\u6dfb\u52a0\u989d\u5916\u7684\u771f\u5b9e\u611f\u3002 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u9053\u8def\u753b\u5bb6\u5de5\u5177\u662f\u4e00\u4e2a\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u5feb\u901f\u7ed8\u5236\u9053\u8def\u7684\u84dd\u56fe\u3002\u5b83\u91c7\u7528\u4e3b\u6750\u8d28\u5e76\u5c06\u5176\u5e94\u7528\u5230\u9053\u8def\u7684\u6e32\u67d3\u76ee\u6807\u4ee5\u7528\u4f5c\u753b\u5e03\u3002\u4e3b\u6750\u8d28\u7531\u4e00\u7cfb\u5217\u6750\u8d28\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6750\u8d28\u53ef\u4ee5\u4f7f\u7528\u753b\u7b14\u6df7\u5408\u5e76\u7528\u4f5c\u8499\u7248\u3002\u65e0\u9700\u5e94\u7528\u5149\u5ea6\u6d4b\u5b9a\u6280\u672f\uff0c\u4e5f\u65e0\u9700\u8003\u8651\u51e0\u4f55\u4f53\u7684 UV\u3002 \u9053\u8def\u753b\u5bb6\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u6765\u6cb9\u6f06\u9053\u8def\u3002\u786e\u4fdd\u60a8\u7684 .xodr \u6587\u4ef6\u4e0e\u5730\u56fe\u540c\u540d\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 \u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u5bf9\u8c61 1. \u521b\u5efa RoadPainter \u53c2\u4e0e\u8005\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content > Carla > Blueprints > LevelDesign \u3002 \u5c06 RoadPainter \u62d6\u5165\u573a\u666f\u4e2d\u3002 2. \u521b\u5efa\u6e32\u67d3\u76ee\u6807\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content > Carla > Blueprints > LevelDesign > RoadPainterAssets . \u53f3\u952e\u5355\u51fb RenderTarget \u6587\u4ef6\u5e76\u9009\u62e9 Duplicate \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RenderTarget \u3002 3. \u521b\u5efa\u4e3b\u6750\u8d28\u5b9e\u4f8b\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game > Carla > Static > GenericMaterials > RoadPainterMaterials . \u53f3\u952e\u5355\u51fb M_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RoadMaster \u3002 4. \u91cd\u65b0\u6821\u51c6\u201c\u5730\u56fe\u5c3a\u5bf8\u201d( Map Size (Cm) ) \uff0c\u4f7f\u5176\u7b49\u4e8e\u5730\u56fe\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002 \u9009\u62e9 RoadPainter \u573a\u666f\u4e2d\u7684\u53c2\u4e0e\u8005\u3002 \u8f6c\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u5e76\u6309 Z-Size \u6309\u94ae\u3002 \u60a8\u5c06\u770b\u5230\u201d\u5730\u56fe\u5c3a\u5bf8 (Cm)( Map Size (Cm) )\u201c\u4e2d\u7684\u503c\u53d1\u751f\u53d8\u5316\u3002 5. \u540c\u6b65 RoadPainter \u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u5730\u56fe\u5c3a\u5bf8\u3002 \u5728 _\u5185\u5bb9\u6d4f\u89c8\u5668_\u4e2d\uff0c\u6253\u5f00 Tutorial_RoadMaster \u3002 \u590d\u5236\u4e0a\u4e00\u6b65\u4e2d Map Size (Cm) \u7684\u503c\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\u7684 Global Scalar Parameter Values -> Map units (CM) \u3002 \u70b9\u51fb\u4fdd\u5b58\u3002 6. \u521b\u5efa\u9053\u8def\u753b\u5bb6\u548c\u4e3b\u6750\u8d28\u4e4b\u95f4\u7684\u901a\u4fe1\u94fe\u63a5\u3002 Tutorial_RenderTarget \u5c06\u662f\u9053\u8def\u753b\u5bb6\u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u901a\u4fe1\u7ebd\u5e26\u3002 \u5728 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\uff0c\u5c06 Tutorial_RenderTarget \u5e94\u7528\u4e8e Global Texture Parameter Values -> Texture Mask \u3002 \u4fdd\u5b58\u5e76\u5173\u95ed\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\uff0c\u8f6c\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u5e76\u5c06 Tutorial_RenderTarget \u5e94\u7528_Paint -> Render Target_ \u3002 \u51c6\u5907\u4e3b\u6750\u8d28 \u60a8\u521b\u5efa\u7684 Tutorial_RoadMaster \u6750\u8d28\u5305\u542b\u57fa\u7840\u6750\u8d28\u3001\u989d\u5916\u6750\u8d28\u4fe1\u606f\u4ee5\u53ca\u5c06\u901a\u8fc7\u60a8\u7684 Tutorial_RenderTarget \u3002\u60a8\u53ef\u4ee5\u914d\u7f6e\u4e00\u79cd\u57fa\u7840\u6750\u8d28\u548c\u6700\u591a\u4e09\u79cd\u9644\u52a0\u6750\u8d28\u3002 \u8981\u914d\u7f6e\u6750\u6599\uff0c\u8bf7\u53cc\u51fb\u8be5 Tutorial_RoadMaster \u6587\u4ef6\u3002\u5728\u51fa\u73b0\u7684\u7a97\u53e3\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4e3a\u6bcf\u79cd\u6750\u6599\u9009\u62e9\u548c\u8c03\u6574\u4ee5\u4e0b\u503c\uff1a \u4eae\u5ea6(Brightness) \u8272\u8c03(Hue) \u9971\u548c\u5ea6(Saturation) AO \u5f3a\u5ea6(Intensity) \u6cd5\u7ebf\u8d34\u56fe\u5f3a\u5ea6(NormalMap Intensity) \u7c97\u7cd9\u5ea6\u5bf9\u6bd4(Roughness Contrast) \u7c97\u7cd9\u5ea6\u5f3a\u5ea6(Roughness Intensity) \u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4ee5\u4e0b\u503c\u5e76\u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22\u7eb9\u7406\u6765\u66f4\u6539\u6bcf\u79cd\u6750\u8d28\u7684\u7eb9\u7406\uff1a Diffuse Normal ORMH \u63a2\u7d22 Game > Carla > Static > GenericMaterials > Asphalt > Textures \u4e2d\u53ef\u7528\u7684\u4e00\u4e9b CARLA \u7eb9\u7406\u3002 \u63cf\u7ed8\u9053\u8def 1. \u5728\u9053\u8def\u753b\u5bb6\u548c\u9053\u8def\u4e4b\u95f4\u521b\u5efa\u94fe\u63a5\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u5728 World Outliner \u641c\u7d22\u6846\u4e2d\u8fdb\u884c Road_Road \u7684\u641c\u7d22\u3002 \u6309 Ctrl + A \u9009\u62e9\u6240\u6709\u9053\u8def\u3002 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Materials \u90e8\u5206\u5e76\u7ed9 Element 0 \u3001 Element 1 \u3001 Element 2 \u548c Element 3 \u5e94\u7528 Tutorial_RoadMaster \u3002 2. \u9009\u62e9\u8981\u5b9a\u5236\u7684\u6750\u8d28\u3002 \u6211\u4eec\u6dfb\u52a0\u7684\u6bcf\u79cd\u6750\u8d28 Tutorial_RoadMaster \u90fd\u5355\u72ec\u5e94\u7528\u4e8e\u9053\u8def\uff0c\u5e76\u4f7f\u7528\u753b\u7b14\u5de5\u5177\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002\u8981\u5e94\u7528\u548c\u81ea\u5b9a\u4e49\u6750\u8d28\uff1a \u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u4e2d\uff0c\u5728 Mask Color \u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u8981\u4f7f\u7528\u7684\u6750\u8d28\u3002 3. \u8bbe\u7f6e\u753b\u7b14\u548c\u6a21\u677f\u53c2\u6570\u3002 GenericMaterials/RoadStencil/Alphas \u4e2d\u6709\u591a\u79cd\u6a21\u677f\u53ef\u4f9b\u9009\u62e9\u3002\u6a21\u677f\u7528\u4e8e\u6839\u636e\u60a8\u7684\u9700\u8981\u7ed8\u5236\u9053\u8def\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u8fdb\u884c\u8c03\u6574\uff1a Stencil size \u2014 \u753b\u7b14\u7684\u5c3a\u5bf8\u3002 Brush strength \u2014 \u8f6e\u5ed3\u7684\u7c97\u7cd9\u5ea6\u3002 Spacebeween Brushes \u2014 \u7b14\u5212\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Max Jitter \u2014 \u7b14\u5212\u4e4b\u95f4\u753b\u7b14\u7684\u5927\u5c0f\u53d8\u5316\u3002 Stencil \u2014 \u8981\u4f7f\u7528\u7684\u753b\u7b14\u3002 Rotation \u2014 \u5e94\u7528\u4e8e\u7b14\u753b\u7684\u65cb\u8f6c\u3002 \u5237\u5b50\u9762\u677f\u3002 \u4e0d\u540c\u7c7b\u578b\u7684\u5237\u5b50\u3002 4. \u5c06\u6bcf\u79cd\u6750\u8d28\u6d82\u62b9\u5230\u9053\u8def\u7684\u6240\u9700\u90e8\u5206\u3002 \u901a\u8fc7\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u7684\u201c\u9ed8\u8ba4( Default )\u201d\u90e8\u5206\u4e2d\u7684\u6309\u94ae\u9009\u62e9\u5e94\u7528\u6240\u9009\u6750\u8d28\u7684\u4f4d\u7f6e\uff1a Paint all roads \u2014 \u7c89\u5237\u6240\u6709\u9053\u8def\u3002 Paint by actor \u2014 \u7ed8\u753b\u7279\u5b9a\u7684\u3001\u9009\u5b9a\u7684\u53c2\u4e0e\u8005\u3002 Paint over circle \u2014 \u4f7f\u7528\u5706\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 Paint over square \u2014 \u4f7f\u7528\u6b63\u65b9\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 \u6b64\u90e8\u5206\u8fd8\u5305\u542b\u7528\u4e8e\u5220\u9664\u5df2\u5e94\u7528\u66f4\u6539\u7684\u9009\u9879\u3002 Clear all \u2014 \u64e6\u9664\u6240\u6709\u7ed8\u5236\u7684\u6750\u8d28\u3002 Clear materials \u2014 \u5220\u9664\u5f53\u524d\u6d3b\u52a8\u7684\u6750\u8d28\u3002 Clear material by actor \u2014 \u5220\u9664\u6700\u63a5\u8fd1\u6240\u9009\u53c2\u4e0e\u8005\u7684\u6750\u8d28\u3002 Different painting and erasing options. 5.\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u3002 \u60a8\u53ef\u4ee5\u5728 Content > Carla Static > Decals \u548c Content > Carla > Static \u4e2d\u63a2\u7d22\u53ef\u7528\u7684\u8d34\u82b1\u548c\u7f51\u683c\u3002\u901a\u8fc7\u6269\u5c55\u5e76\u6dfb\u52a0\u5230 Decals Spawn \u548c Meshes Spawn \u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u9053\u8def\u7ed8\u5236\u5668\u4e2d\u3002\u5bf9\u4e8e\u6bcf\u4e00\u9879\uff0c\u60a8\u90fd\u53ef\u4ee5\u914d\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Number of Decals/Meshes - \u8981\u7ed8\u5236\u7684\u6bcf\u4e2a\u8d34\u82b1\u6216\u7f51\u683c\u7684\u6570\u91cf\u3002 Decal/Mesh Scale \u2014 \u6bcf\u4e2a\u8f74\u7684\u8d34\u82b1/\u7f51\u683c\u6bd4\u4f8b\u3002 Fixed Decal/Mesh Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u504f\u5dee\u3002 Random Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u6700\u5927\u504f\u5dee\u3002 Decal/Mesh Random Yaw \u2014 \u6700\u5927\u968f\u673a\u504f\u822a\u65cb\u8f6c\u3002 Decal/Mesh Min Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5c0f\u968f\u673a\u6bd4\u4f8b\u3002 Decal/Mesh Max Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5927\u968f\u673a\u6bd4\u4f8b\u3002 \u8d34\u82b1\u548c\u7f51\u683c\u9762\u677f\u3002 \u914d\u7f6e\u597d\u7f51\u683c\u548c\u8d34\u82b1\u540e\uff0c\u901a\u8fc7\u6309 Spawn decals \u548c\u751f Spawn meshes \u3002 \u7b14\u8bb0 \u786e\u4fdd\u7f51\u683c\u548c\u8d34\u82b1\u6ca1\u6709\u542f\u7528\u78b0\u649e\uff0c\u4ee5\u514d\u5e72\u6270\u9053\u8def\u4e0a\u7684\u6c7d\u8f66\u5e76\u5c06\u4efb\u4f55\u8fb9\u754c\u6846\u964d\u4f4e\u5230\u9053\u8def\u6c34\u5e73\u3002 7. \u5c1d\u8bd5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u6750\u8d28\u3001\u7eb9\u7406\u3001\u8bbe\u7f6e\u3001\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\u56fe\u50cf\uff0c\u663e\u793a\u4e86\u5728\u7ed8\u5236\u6bcf\u79cd\u6750\u8d28\u7684\u8fc7\u7a0b\u4e2d\u9053\u8def\u5916\u89c2\u5982\u4f55\u53d8\u5316\u3002 \u57fa\u7840\u9053\u8def\u6750\u6599\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 1 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 2 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 3 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u8d34\u82b1\u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u7f51\u683c\u540e\u7684\u793a\u4f8b\u3002 \u66f4\u65b0\u8f66\u9053\u7ebf\u5916\u89c2 \u7ed8\u5236\u9053\u8def\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2\uff1a 1. \u590d\u5236\u4e3b\u6750\u6599\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game > Carla > Static > GenericMaterials > RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb Tutorial_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_LaneMarkings \u3002 2. \u914d\u7f6e\u8f66\u9053\u7ebf\u6750\u8d28\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u53cc\u51fb Tutorial_LaneMarkings \u3002 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Global Static Switch Parameter Values \u5206\uff0c\u7136\u540e\u9009\u4e2d LaneMark \u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6846\u3002 \u8f6c\u5230 Texture \u90e8\u5206\u5e76\u9009\u4e2d LaneColor \u548c Uv Size \u590d\u9009\u6846\u3002 \u5728 LaneColor \u4e2d\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u9053\u6807\u8bb0\u989c\u8272\u3002 Save \u5e76\u5173\u95ed\u3002 3. \u9009\u62e9\u8f66\u9053\u7ebf\u7f51\u683c\u3002 \u5c06\u6750\u6599\u62d6\u5230\u60a8\u60f3\u8981\u7740\u8272\u7684\u8f66\u9053\u7ebf\u4e0a\u3002\u5982\u679c\u9700\u8981\uff0c\u5bf9\u4e0d\u540c\u989c\u8272\u7684\u8f66\u9053\u7ebf\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\u3002 \u6811\u6728\u548c\u690d\u88ab CARLA \u5185\u5bb9\u5e93\u62e5\u6709\u4e00\u5957\u5168\u9762\u7684\u690d\u88ab\u84dd\u56fe\uff0c\u4f9b\u60a8\u4e3a\u5730\u56fe\u7684\u8d8a\u91ce\u533a\u57df\uff08\u5982\u4eba\u884c\u9053\u3001\u516c\u56ed\u3001\u5c71\u5761\u3001\u7530\u91ce\u548c\u68ee\u6797\uff09\u589e\u6dfb\u66f4\u591a\u771f\u5b9e\u611f\u3002 \u5bfc\u822a\u5230 CARLA \u5185\u5bb9\u5e93\u4e2d\u7684\u690d\u88ab\u6587\u4ef6\u5939\uff1a Carla > Static > Visitation \u3002\u60a8\u4f1a\u627e\u5230\u591a\u79cd\u6811\u6728\u3001\u704c\u6728\u4e1b\u7684\u84dd\u56fe\u3002\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5143\u7d20\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u5730\u56fe\u4e2d\u3002 \u6811\u53f6\u5de5\u5177 \u5bf9\u4e8e\u6811\u6728\u548c\u690d\u88ab\u6765\u8bf4\uff0c\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\u662f \u865a\u5e7b\u5f15\u64ce\u6811\u53f6\u5de5\u5177 \u3002\u901a\u8fc7\u4ece\u5de5\u5177\u680f\u7684 mode \u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u6765\u6fc0\u6d3b\u8be5\u5de5\u5177\u3002 \u5c06\u6240\u9700\u7684\u6811\u53f6\u9879\u76ee\u62d6\u5230\u6807\u6709 + Drop Foliage Here \u7684\u6846\u4e2d\u3002\u5728\u5bc6\u5ea6\u5b57\u6bb5\u4e2d\u8bbe\u7f6e\u9002\u5f53\u7684\u5bc6\u5ea6\uff0c\u7136\u540e\u4f7f\u7528\u6811\u53f6\u9879\u76ee\u7ed8\u5236\u5230\u5730\u56fe\u4e0a\u3002 \u4e0b\u4e00\u6b65 \u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u65bd\u5b50\u5173\u5361\u3002. \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u5185\u5bb9\u521b\u4f5c - \u5730\u56fe"},{"location":"tuto_content_authoring_maps/#-","text":"CARLA \u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u8d44\u6e90\uff0c\u53ef\u7528\u4e8e\u521b\u5efa\u5f00\u7bb1\u5373\u7528\u7684\u9a7e\u9a76\u4eff\u771f\u3002\u7136\u800c\uff0cCARLA \u7684\u771f\u6b63\u529b\u91cf\u5728\u4e8e\u5176\u5168\u9762\u7684\u53ef\u6269\u5c55\u6027\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u73af\u5883\uff0c\u5176\u4e2d\u5305\u542b\u5efa\u7b51\u7269\u3001\u957f\u51f3\u3001\u5783\u573e\u6876\u3001\u96d5\u50cf\u3001\u8def\u706f\u548c\u516c\u4ea4\u8f66\u7ad9\u7b49\u5b9a\u5236\u8d44\u4ea7\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u521b\u5efa\u4e0e CARLA \u4e00\u8d77\u4f7f\u7528\u7684\u7b80\u5355\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e24\u4e2a\u8f6f\u4ef6\u5305\u6765\u521b\u5efa\u5730\u56fe\u7684\u5404\u4e2a\u90e8\u5206\u3002\u6211\u4eec\u5c06\u4f7f\u7528 RoadRunner \u521b\u5efa\u9053\u8def\u7f51\u7edc\uff0c\u7136\u540e\u901a\u8fc7 \u865a\u5e7b\u7f16\u8f91\u5668 \u5c06\u8d44\u6e90\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d\u3002 \u5148\u51b3\u6761\u4ef6 \u5927\u5730\u56fe \u6570\u5b57\u5b6a\u751f\u5de5\u5177 RoadRunner \u5bfc\u5165 CARLA \u5bfc\u5165\u8d44\u4ea7 \u4ea4\u901a\u706f \u4ea4\u901a\u6807\u5fd7 Materials \u9053\u8def\u753b\u5bb6 \u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f \u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\u3001\u4e3b\u6750\u8d28\u548c\u6e32\u67d3\u5bf9\u8c61 \u51c6\u5907\u4e3b\u6750\u6599 \u63cf\u7ed8\u9053\u8def \u66f4\u65b0\u8f66\u9053\u7ebf\u5916\u89c2 \u4e0b\u4e00\u6b65 \u6811\u6728\u548c\u690d\u88ab \u6811\u53f6\u5de5\u5177","title":"\u5185\u5bb9\u521b\u4f5c - \u5730\u56fe"},{"location":"tuto_content_authoring_maps/#_1","text":"\u8981\u9075\u5faa\u672c\u6307\u5357\uff0c\u60a8\u9700\u8981\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4f7f\u7528\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u8bf7\u9075\u5faa\u76f8\u5173\u64cd\u4f5c\u7cfb\u7edf\u7684 \u6784\u5efa\u8bf4\u660e \u3002\u60a8\u8fd8\u9700\u8981 RoadRunner \u7684\u8bb8\u53ef\u526f\u672c\u3002\u60a8\u53ef\u80fd\u8fd8\u9700\u8981 Maya\u30013DS Max \u6216 Blender \u7b49\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u6765\u4e3a\u81ea\u5b9a\u4e49\u5730\u56fe\u521b\u5efa\u4e09\u7ef4\u8d44\u4ea7\u3002\u60a8\u5e94\u8be5\u786e\u4fdd\u5df2\u5b8c\u6210\u6784\u5efa CARLA \u7684\u6240\u6709\u6b65\u9aa4\u5e76\u786e\u4fdd\u865a\u5e7b\u7f16\u8f91\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u60f3\u4e3a\u5730\u56fe\u521b\u5efa\u4e09\u7ef4\u8d44\u4ea7\uff0c\u5219\u5e94\u4f7f\u7528\u9002\u5f53\u7684\u4e09\u7ef4\u8bbe\u8ba1\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982 Blender\u3001Maya\u30013DsMax \u6216 Modo\u3002","title":"\u5148\u51b3\u6761\u4ef6"},{"location":"tuto_content_authoring_maps/#_2","text":"\u4ee5\u4e0b\u6587\u672c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u521b\u5efa\u548c\u88c5\u9970\u6807\u51c6\u5730\u56fe\u7684\u8fc7\u7a0b\u3002\u4ece\u7248\u672c 0.9.12 \u5f00\u59cb\uff0cCARLA \u5177\u6709\u5927\u5730\u56fe\u529f\u80fd\u3002\u5927\u5730\u56fe\u7684\u6bd4\u4f8b\u6bd4\u6807\u51c6\u5730\u56fe\u66f4\u5927\uff0c\u6700\u5927\u53ef\u8fbe 100 km 2 \u3002\u7531\u4e8e\u786c\u4ef6\u9650\u5236\uff0c\u5927\u5730\u56fe\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6807\u51c6\u5730\u56fe\u7565\u6709\u4e0d\u540c\uff0c\u5373\u4f7f\u5728\u9ad8\u7aef\u663e\u5361\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u5927\u5730\u56fe\u88ab\u5206\u5272\u6210\u56fe\u5757\uff0c\u5e76\u4e14\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u4ec5\u52a0\u8f7d\u7acb\u5373\u9700\u8981\u7684\u56fe\u5757\uff08\u5373\u6700\u63a5\u8fd1\u81ea\u6211\u8f66\u8f86\u7684\u56fe\u5757\uff09\u3002\u5176\u4ed6\u56fe\u5757\u5904\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u76f4\u5230\u9700\u8981\u6570\u636e\u4e3a\u6b62\u3002\u8fd9\u6709\u52a9\u4e8e\u5b9e\u73b0 CARLA \u6a21\u62df\u7684\u6700\u9ad8\u6027\u80fd\u3002\u63a5\u4e0b\u6765\u7684\u5927\u591a\u6570\u7ec6\u8282\u4e0e\u6784\u5efa\u5927\u5730\u56fe\u65f6\u7c7b\u4f3c\uff0c\u4f46\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\u3002\u8bf7\u6309\u7167 \u672c\u6307\u5357 \u4e3a CARLA \u6784\u5efa\u5927\u5730\u56fe\u3002","title":"\u5927\u5730\u56fe"},{"location":"tuto_content_authoring_maps/#_3","text":"CARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u5316\u5730\u56fe\u751f\u6210\u5de5\u5177\uff0c\u5b83\u4ece OpenStreetMap \u83b7\u53d6\u9053\u8def\u7f51\u7edc\u6570\u636e\uff0c\u5e76\u7528\u5efa\u7b51\u7269\u548c\u690d\u88ab\u7a0b\u5e8f\u5316\u5730\u88c5\u9970\u5730\u56fe\u3002\u8bf7\u5728 \u6b64\u5904 \u9605\u8bfb\u6709\u5173\u5982\u4f55\u4f7f\u7528\u8be5\u5de5\u5177\u7684\u4fe1\u606f\u3002","title":"\u6570\u5b57\u5b6a\u751f\u5de5\u5177"},{"location":"tuto_content_authoring_maps/#roadrunner","text":"\u6253\u5f00 RoadRunner \u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u573a\u666f\u3002\u9009\u62e9\u9053\u8def\u89c4\u5212\u5de5\u5177(Road Plan Tool)\u5e76\u5728\u5de5\u4f5c\u533a\u4e2d \u53f3\u952e \u5355\u51fb\u4ee5\u653e\u7f6e\u9053\u8def\u7684\u7b2c\u4e00\u4e2a\u63a7\u5236\u70b9\u548c\u7b2c\u4e8c\u4e2a\u63a7\u5236\u70b9\u3002\u5355\u51fb\u5e76\u62d6\u52a8\u9053\u8def\u5c3d\u5934\u7684\u7ea2\u70b9\u4ee5\u79fb\u52a8\u548c\u5ef6\u957f\u9053\u8def\u3002 \u51fa\u4e8e\u672c\u6559\u7a0b\u7684\u76ee\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e2d\u95f4\u6709\u4e00\u4e2a\u4ea4\u53c9\u8def\u53e3\u7684\u7b80\u5355\u692d\u5706\u5f62\u9053\u8def\u3002\u8981\u6784\u5efa\u66f4\u9ad8\u7ea7\u7684\u7f51\u7edc\uff0c\u8bf7\u53c2\u9605 Roadrunner \u6587\u6863 \u3002 \u5728 RoadRunner \u4e2d\u5236\u4f5c\u5730\u56fe\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u5bfc\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c \u9053\u8def\u5e03\u5c40\u5bfc\u51fa\u540e\u65e0\u6cd5\u4fee\u6539 \u3002\u5bfc\u51fa\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\uff1a \u5730\u56fe\u4ee5 (0,0) \u4e3a\u4e2d\u5fc3\uff0c\u4ee5\u786e\u4fdd\u5730\u56fe\u53ef\u4ee5\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u53ef\u89c6\u5316\u3002 \u5730\u56fe\u5b9a\u4e49\u662f\u6b63\u786e\u7684\u3002 \u5730\u56fe\u9a8c\u8bc1\u662f\u6b63\u786e\u7684\uff0c\u5bc6\u5207\u5173\u6ce8\u8fde\u63a5\u548c\u51e0\u4f55\u5f62\u72b6\u3002 \u5730\u56fe\u51c6\u5907\u597d\u540e\uff0c\u5355\u51fb OpenDRIVE Preview Tool \u6309\u94ae\u5373\u53ef\u53ef\u89c6\u5316 OpenDRIVE \u9053\u8def\u7f51\u7edc\u5e76\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u3002 \u7b14\u8bb0 OpenDrive Preview Tool \u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6d4b\u8bd5\u5730\u56fe\u7684\u5b8c\u6574\u6027\u3002\u5982\u679c\u8fde\u63a5\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u5355\u51fb Maneuver Tool \u548c Rebuild Maneuver Roads \u3002 \u521b\u5efa\u6240\u9700\u7684\u9053\u8def\u7f51\u7edc\u540e\uff0c\u5728 RoadRunner \u83dc\u5355\u680f\u4e2d\u9009\u62e9 File > Export > Carla Filmbox (.fbx, .xodr, .rrdata.xml) \u5e76\u5bfc\u51fa\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\u3002 RoadRunner \u662f\u521b\u5efa\u81ea\u5b9a\u4e49\u5730\u56fe\u7684\u6700\u4f73\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd8\u6709\u4e00\u4e9b\u66ff\u4ee3\u65b9\u6848\uff0c\u4f8b\u5982 OpenStreetMap \uff0c\u4e13\u6ce8\u4e8e\u4ece\u771f\u5b9e\u7684\u9053\u8def\u5730\u56fe\u751f\u6210\u5730\u56fe\u3002","title":"\u4f7f\u7528 RoadRunner \u521b\u5efa\u8def\u7f51"},{"location":"tuto_content_authoring_maps/#truevision","text":"RoadRunner \u662f\u4e00\u6b3e\u9700\u8981 MATLAB \u7684\u4e13\u6709\u8f6f\u4ef6\u3002\u5927\u5b66\u7b49\u4e00\u4e9b\u673a\u6784\u53ef\u80fd\u4e0e MathWorks \u8fbe\u6210\u4e86\u534f\u8bae\uff0c\u4ee5\u4fbf\u67d0\u4e9b\u7528\u6237\u53ef\u4ee5\u83b7\u5f97 RoadRunner \u8bb8\u53ef\u8bc1\u3002\u5982\u679c\u60a8\u6ca1\u6709\u8bb8\u53ef\u8bc1\u9884\u7b97\uff0cRoadRunner \u7684\u4e00\u4e2a\u65b9\u4fbf\u7684\u5f00\u6e90\u66ff\u4ee3\u65b9\u6848\u662f TrueVision Designer \u3002\u6b64\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u8bb8\u591a\u4e0e RoadRunner \u76f8\u540c\u7684\u529f\u80fd\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u83b7\u5f97 RoadRunner \u7684\u8bb8\u53ef\u8bc1\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f1a\u975e\u5e38\u6709\u7528\u3002","title":"TrueVision \u8bbe\u8ba1\u5668"},{"location":"tuto_content_authoring_maps/#carla","text":"CARLA\u9700\u8981\u7684\u91cd\u8981\u5bfc\u51fa\u6587\u4ef6\u662f .xodr \u6587\u4ef6\u548c .fbx \u6587\u4ef6\u3002\u5c06\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u6216\u79fb\u52a8\u5230\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u7684 CARLA \u5b58\u50a8\u5e93\u6839\u76ee\u5f55\u5185\u7684 Import \u6587\u4ef6\u5939\u4e2d\u3002 \u73b0\u5728\u5728 CARLA \u6e90\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e2d\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u5e76\u8fd0\u884c make import . \u8fd9\u4f1a\u5c06\u9053\u8def\u7f51\u7edc\u5bfc\u5165 CARLA\u3002 \u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u770b\u5230\u65b0\u5730\u56fe\u3002\u5728 CARLA \u6e90\u76ee\u5f55\u7684\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c make launch \u4ee5\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u60a8\u73b0\u5728\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u4e00\u4e2a\u540d\u4e3a map_package \u7684\u65b0\u76ee\u5f55\u3002\u5728\u6b64\u76ee\u5f55 Content > map_package > Maps > tutorial \u4e2d\uff0c\u60a8\u73b0\u5728\u5c06\u627e\u5230\u60a8\u7684\u65b0\u5730\u56fe\u3002 \u7b14\u8bb0 \u53ef\u4ee5\u53c2\u8003 \u94fe\u63a5 \u901a\u8fc7\u9f20\u6807\u53f3\u952e\u7684\u65b9\u5f0f\u76f4\u63a5\u5bfc\u5165\u3002 \u60a8\u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u4e86\u9053\u8def\u7f51\u7edc\uff0c\u8fd9\u662f\u5730\u56fe\u7684\u57fa\u7840\u3002","title":"\u5c06\u60a8\u7684\u8def\u7f51\u5bfc\u5165 CARLA"},{"location":"tuto_content_authoring_maps/#_4","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u9053\u8def\u7f51\u7edc\u4f5c\u4e3a\u5730\u56fe\u7684\u57fa\u7840\uff0c\u6211\u4eec\u73b0\u5728\u60f3\u8981\u4e3a\u5730\u56fe\u521b\u5efa\u4e00\u4e9b\u5185\u5bb9\uff0c\u4f8b\u5982\u5efa\u7b51\u7269\u3002\u8fd9\u4e9b\u8d44\u6e90\u53ef\u4ee5\u4f7f\u7528\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\uff08\u4f8b\u5982 Autodesk Maya\u30013DS Max\u3001Blender \u6216\u5177\u6709\u9002\u5f53\u5bfc\u51fa\u9009\u9879\u7684\u4efb\u4f55\u5176\u4ed6\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\uff09\u521b\u5efa\u3002\u91cd\u8981\u7684\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u81f3\u5c11\u80fd\u591f\u5bfc\u51fa .fbx \u3002 \u5728 CARLA \u4e2d\u521b\u5efa\u8d44\u4ea7\u9700\u8981\u51e0\u4e2a\u5143\u7d20\uff1a \u7f51\u683c - \u4e00\u7ec4 3D \u5750\u6807\u9876\u70b9\u548c\u5173\u8054\u7684\u8fde\u63a5\u8fb9\u3002 UV \u8d34\u56fe - \u5c06\u4e09\u7ef4\u9876\u70b9\u548c\u8fb9\u6620\u5c04\u5230\u4e8c\u7ef4\u7eb9\u7406\u7a7a\u95f4\uff0c\u4ee5\u5c06\u7eb9\u7406\u4e0e\u4e09\u7ef4\u4f4d\u7f6e\u8fdb\u884c\u5339\u914d\u3002 \u7eb9\u7406 - \u5b9a\u4e49\u4e09\u7ef4\u5bf9\u8c61\u8868\u9762\u4e0a\u663e\u793a\u7684\u989c\u8272\u548c\u56fe\u6848\u7684\u4e8c\u7ef4\u56fe\u50cf\u3002 \u6cd5\u7ebf\u8d34\u56fe - \u5b9a\u4e49\u76ee\u6807\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u7684\u4e8c\u7ef4\u56fe\u50cf\uff0c\u4ee5\u5411\u76ee\u6807\u8868\u9762\u6dfb\u52a0\u4e09\u7ef4\u53d8\u5316\u3002 ORM \u8d34\u56fe - \u5b9a\u4e49\u91d1\u5c5e\u5ea6(Metallicity)\u3001\u7c97\u7cd9\u5ea6(Roughness)\u548c\u73af\u5883\u5149\u906e\u6321(Occlusion)\u533a\u57df\u7684\u8d34\u56fe ORM \u8d34\u56fe\u5229\u7528\u6807\u51c6 RGBA \u7f16\u7801\u56fe\u50cf\u7684\u901a\u9053\u5bf9\u91d1\u5c5e\u533a\u57df\u3001\u7c97\u7cd9\u5ea6\u548c\u73af\u5883\u906e\u6321\u7684\u8d34\u56fe\u8fdb\u884c\u7f16\u7801\u3002\u5f53\u6211\u4eec\u5728\u8fd9\u91cc\u5b9a\u4e49\u8d34\u56fe\u65f6\uff0c\u7ea2\u8272\u901a\u9053\u5b9a\u4e49\u91d1\u5c5e\u8d34\u56fe\uff0c\u7eff\u8272\u901a\u9053\u5b9a\u4e49\u7c97\u7cd9\u5ea6\uff0c\u84dd\u8272\u901a\u9053\u5b9a\u4e49\u73af\u5883\u5149\u906e\u6321\u3002\u8fd9\u4e9b\u8d34\u56fe\uff08\u4ee5\u53ca\u6f2b\u53cd\u5c04\u8d34\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe\uff09\u53ef\u4ee5\u4f7f\u7528 Adobe Substance 3D painter \u7b49\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u3002 \u4f7f\u7528\u865a\u5e7b\u5185\u5bb9\u6d4f\u89c8\u5668\u5728\u67d0\u4e2a\u9002\u5f53\u7684\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\u3002\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\uff0c\u60a8\u53ef\u4ee5\u53f3\u952e\u5355\u51fb\u5e76 Import to PATH/TO/FOLDER \u5728\u4e0a\u4e0b\u6587\u83dc\u5355\u9876\u90e8\u9644\u8fd1\u8fdb\u884c\u9009\u62e9\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6587\u4ef6\u76f4\u63a5\u62d6\u653e\u5230\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u3002 \u6211\u4eec\u5c06\u5bfc\u5165\u4e00\u4e2a\u5305\u542b\u4ece Blender \u5bfc\u51fa\u7684\u57fa\u7840\u7f51\u683c\u548c UV \u8d34\u56fe\u7684 FBX \u6587\u4ef6\u3002 \u5728\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\uff0c\u5bf9\u4e8e Normal Import Method \u786e\u4fdd\u201c\u7f51\u683c\u201d\u90e8\u5206\u9009\u62e9\u4e86\u201c\u5bfc\u5165\u6cd5\u7ebf( Import Normals )\uff0c\u5e76\u4e14\u5728\u201c\u6750\u8d28( Material )\u201d\u90e8\u5206\u4e2d\u9009\u62e9\u4e86 Do Not Create Material \u3002\u5728\u201c\u6750\u8d28\u201d\u90e8\u5206\u4e2d\u53d6\u6d88\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u624b\u52a8\u5bfc\u5165\u5b83\u4eec\u3002\u5982\u679c\u60a8\u60f3\u4f7f\u7528 FBX \u6587\u4ef6\u4e2d\u5df2\u5d4c\u5165\u7684\u67d0\u4e9b\u7eb9\u7406\uff0c\u8fd9\u4e9b\u9009\u62e9\u5c06\u4f1a\u6709\u6240\u4e0d\u540c\u3002 \u9009\u62e9 Import All \u3002\u5bfc\u5165\u5b8c\u6210\u540e\uff0c\u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u7684\u5bfc\u5165\u8d44\u6e90\u8fdb\u884c\u7f16\u8f91\u3002 \u6211\u4eec\u73b0\u5728\u5e94\u8be5\u5bfc\u5165\u7eb9\u7406\u3001\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u3001\u6cd5\u7ebf\u8d34\u56fe\u548c ORM \u8d34\u56fe\u3002 \u901a\u8fc7\u53cc\u51fb\u6253\u5f00 ORM \u8d34\u56fe\u5e76\u53d6\u6d88\u9009\u62e9 sRGB \u9009\u9879\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u5e94\u7528\u7eb9\u7406\u3002 \u53f3\u952e\u5355\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u5e76\u4ece\u83dc\u5355\u4e2d\u9009\u62e9 Material \u3002\u5c06\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u521b\u5efa\u65b0\u6750\u6599\u3002\u53cc\u51fb\u8fdb\u884c\u7f16\u8f91\u3002\u6309\u4f4f Shift \u952e\u9009\u62e9\u5bfc\u5165\u7684\u7eb9\u7406\u5e76\u5c06\u5176\u62d6\u5230\u6750\u8d28\u7f16\u8f91\u7a97\u53e3\u4e2d\uff0c\u73b0\u5728\u60a8\u5c06\u5728\u6750\u8d28\u8282\u70b9\u7f16\u8f91\u5668\u4e2d\u83b7\u5f97 3 \u4e2a\u65b0\u8282\u70b9\u3002 \u73b0\u5728\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\u8fde\u63a5\u8282\u70b9\uff1a Diffuse RGB --> Base Color Normal RGB --> Normal ORM R --> Ambient occlusion ORM G --> Roughness ORM B --> Metallic \u60a8\u7684\u6750\u8d28\u8282\u70b9\u56fe\u73b0\u5728\u5e94\u8be5\u4e0e\u6b64\u7c7b\u4f3c\uff1a \u4fdd\u5b58\u6750\u8d28\uff0c\u7136\u540e\u518d\u6b21\u6253\u5f00\u8d44\u6e90\u5e76\u5c06\u6750\u8d28\u62d6\u5165\u6750\u8d28\u69fd\u4e2d\u3002\u60a8\u7684\u8d44\u6e90\u73b0\u5728\u5e94\u8be5\u5df2\u5b8c\u5168\u7eb9\u7406\u5316\u3002 \u73b0\u5728\u4fdd\u5b58\u8d44\u4ea7\uff0c\u5373\u53ef\u5728\u5730\u56fe\u4e2d\u4f7f\u7528\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u62d6\u52a8\u8d44\u6e90\u5e76\u5c06\u5176\u653e\u5165\u5730\u56fe\u4e2d\uff1a \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u533a\u5de6\u4e0a\u89d2\u7684\u201c\u4fdd\u5b58\u5f53\u524d\u201d\u9009\u9879\u4fdd\u5b58\u5730\u56fe\uff0c\u5373\u53ef\u4f7f\u7528\u3002\u5f00\u59cb\u4eff\u771f\u3002 \u5730\u56fe\u4f5c\u8005\u6307\u5357\u5230\u6b64\u7ed3\u675f\u3002\u73b0\u5728\u60a8\u77e5\u9053\u5982\u4f55\u521b\u5efa\u9053\u8def\u7f51\u7edc\u5e76\u5bfc\u5165\u4e09\u7ef4\u8d44\u4ea7\u4ee5\u5728 CARLA \u4e2d\u4f7f\u7528\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u9605\u8bfb\u5982\u4f55 \u6253\u5305\u5730\u56fe\u4ee5\u5728 CARLA \u72ec\u7acb\u7248\u672c\u4e2d\u4f7f\u7528 \u3002","title":"\u5bfc\u5165\u8d44\u4ea7\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u5730\u56fe"},{"location":"tuto_content_authoring_maps/#_5","text":"\u8981\u5c06\u7ea2\u7eff\u706f\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 , \u5bfc\u822a\u81f3 Content > Carla > Static > TrafficLight > StreetLights_01 \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u9009\u62e9\u201c\u8be6\u7ec6( Details )\u201d \u9762\u677f\u4e2d\u7684 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574 Transform \u90e8\u5206\u7684\u503c\uff0c\u4e3a\u6bcf\u4e2a\u7ea2\u7eff\u706f\u8c03\u6574 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u7ea2\u7eff\u706f\u7684\u5f71\u54cd\u8303\u56f4\u3002 4. \u5bf9\u4e8e\u8def\u53e3\uff0c\u5c06 BP_TrafficLightGroup \u53c2\u4e0e\u8005\u62d6\u5165\u5173\u5361\u4e2d\u3002\u901a\u8fc7\u5c06\u8def\u53e3\u5904\u7684\u6240\u6709\u4ea4\u901a\u706f\u6dfb\u52a0\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u7684\u201c\u4ea4\u901a\u706f( Traffic Lights )\u201d\u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4ea4\u901a\u706f\u7ec4\u3002 5. \u4ea4\u901a\u706f\u8ba1\u65f6\u53ea\u80fd\u901a\u8fc7Python API \u8fdb\u884c\u914d\u7f6e\u3002\u8bf7\u53c2\u9605 \u6b64\u5904 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f8b\u5982\uff1a\u4ea4\u901a\u6807\u5fd7\u3001\u4ea4\u901a\u4fe1\u53f7\u706f\u548c\u8f6c\u5f2f\u505c\u8f66\u3002","title":"\u4ea4\u901a\u706f"},{"location":"tuto_content_authoring_maps/#_6","text":"\u8981\u5c06\u4ea4\u901a\u6807\u5fd7\u6dfb\u52a0\u5230\u65b0\u5730\u56fe\uff1a 1. \u4ece \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content > Carla > Static > TrafficSign \u3002\u60a8\u4f1a\u53d1\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u4ea4\u901a\u706f\u84dd\u56fe\u53ef\u4f9b\u9009\u62e9\u3002 2. \u5c06\u4ea4\u901a\u706f\u62d6\u5230\u573a\u666f\u4e2d\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u6240\u9700\u4f4d\u7f6e\u3002\u6309\u952e\u76d8\u4e0a\u7684\u7a7a\u683c\u952e\u53ef\u5728\u5b9a\u4f4d\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u5de5\u5177\u4e4b\u95f4\u5207\u6362\u3002 3. \u901a\u8fc7\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u9009\u62e9 BoxTrigger \u7ec4\u4ef6\u5e76\u8c03\u6574\u201c\u53d8\u6362( Transform )\u201d\u90e8\u5206\u4e2d\u7684\u503c\uff0c\u8c03\u6574\u6bcf\u4e2a\u4ea4\u901a\u6807\u5fd7\u7684 trigger volume \u3002\u8fd9\u5c06\u786e\u5b9a\u4ea4\u901a\u706f\u7684\u5f71\u54cd\u533a\u57df\u3002\u5e76\u975e\u6240\u6709\u4ea4\u901a\u6807\u5fd7\u90fd\u6709\u89e6\u53d1\u97f3\u91cf\u3002\u6b64\u7c7b\u6807\u5fd7\u5305\u62ec\u8ba9\u884c\u6807\u5fd7\u3001\u505c\u8f66\u6807\u5fd7\u548c\u9650\u901f\u6807\u5fd7\u3002","title":"\u4ea4\u901a\u6807\u5fd7"},{"location":"tuto_content_authoring_maps/#_7","text":"CARLA \u5185\u5bb9\u5e93\u62e5\u6709\u5927\u91cf\u6709\u7528\u7684\u6750\u6599\uff0c\u53ef\u968f\u65f6\u7528\u4e8e\u66f4\u6539\u5730\u56fe\u7684\u5916\u89c2\u3002\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u5bfc\u822a\u81f3 Carla > Static > GenericMaterials \u3002\u5728\u8fd9\u91cc\u60a8\u4f1a\u53d1\u73b0\u8bb8\u591a\u53ef\u7528\u4e8e\u6539\u53d8\u5730\u56fe\u5916\u89c2\u7684\u6750\u6599\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u62d6\u653e\u5230\u5730\u56fe\u5143\u7d20\u4e0a\u6765\u5feb\u901f\u6d4b\u8bd5\u6750\u8d28\uff1a","title":"\u6750\u8d28"},{"location":"tuto_content_authoring_maps/#_8","text":"\u9053\u8def\u753b\u5bb6\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u9053\u8def\u5916\u89c2\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u9644\u52a0\u7eb9\u7406\u3001\u8d34\u82b1\u548c\u7f51\u683c\u6dfb\u52a0\u989d\u5916\u7684\u771f\u5b9e\u611f\u3002","title":"\u9053\u8def\u753b\u5bb6"},{"location":"tuto_content_authoring_maps/#_9","text":"\u9053\u8def\u753b\u5bb6\u5de5\u5177\u662f\u4e00\u4e2a\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u5feb\u901f\u7ed8\u5236\u9053\u8def\u7684\u84dd\u56fe\u3002\u5b83\u91c7\u7528\u4e3b\u6750\u8d28\u5e76\u5c06\u5176\u5e94\u7528\u5230\u9053\u8def\u7684\u6e32\u67d3\u76ee\u6807\u4ee5\u7528\u4f5c\u753b\u5e03\u3002\u4e3b\u6750\u8d28\u7531\u4e00\u7cfb\u5217\u6750\u8d28\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6750\u8d28\u53ef\u4ee5\u4f7f\u7528\u753b\u7b14\u6df7\u5408\u5e76\u7528\u4f5c\u8499\u7248\u3002\u65e0\u9700\u5e94\u7528\u5149\u5ea6\u6d4b\u5b9a\u6280\u672f\uff0c\u4e5f\u65e0\u9700\u8003\u8651\u51e0\u4f55\u4f53\u7684 UV\u3002 \u9053\u8def\u753b\u5bb6\u4f7f\u7528 OpenDRIVE \u4fe1\u606f\u6765\u6cb9\u6f06\u9053\u8def\u3002\u786e\u4fdd\u60a8\u7684 .xodr \u6587\u4ef6\u4e0e\u5730\u56fe\u540c\u540d\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002","title":"\u4ec0\u4e48\u662f\u9053\u8def\u753b\u5bb6\uff1f"},{"location":"tuto_content_authoring_maps/#_10","text":"1. \u521b\u5efa RoadPainter \u53c2\u4e0e\u8005\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Content > Carla > Blueprints > LevelDesign \u3002 \u5c06 RoadPainter \u62d6\u5165\u573a\u666f\u4e2d\u3002 2. \u521b\u5efa\u6e32\u67d3\u76ee\u6807\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \uff0c\u5bfc\u822a\u81f3 Content > Carla > Blueprints > LevelDesign > RoadPainterAssets . \u53f3\u952e\u5355\u51fb RenderTarget \u6587\u4ef6\u5e76\u9009\u62e9 Duplicate \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RenderTarget \u3002 3. \u521b\u5efa\u4e3b\u6750\u8d28\u5b9e\u4f8b\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game > Carla > Static > GenericMaterials > RoadPainterMaterials . \u53f3\u952e\u5355\u51fb M_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_RoadMaster \u3002 4. \u91cd\u65b0\u6821\u51c6\u201c\u5730\u56fe\u5c3a\u5bf8\u201d( Map Size (Cm) ) \uff0c\u4f7f\u5176\u7b49\u4e8e\u5730\u56fe\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002 \u9009\u62e9 RoadPainter \u573a\u666f\u4e2d\u7684\u53c2\u4e0e\u8005\u3002 \u8f6c\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u5e76\u6309 Z-Size \u6309\u94ae\u3002 \u60a8\u5c06\u770b\u5230\u201d\u5730\u56fe\u5c3a\u5bf8 (Cm)( Map Size (Cm) )\u201c\u4e2d\u7684\u503c\u53d1\u751f\u53d8\u5316\u3002 5. \u540c\u6b65 RoadPainter \u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u5730\u56fe\u5c3a\u5bf8\u3002 \u5728 _\u5185\u5bb9\u6d4f\u89c8\u5668_\u4e2d\uff0c\u6253\u5f00 Tutorial_RoadMaster \u3002 \u590d\u5236\u4e0a\u4e00\u6b65\u4e2d Map Size (Cm) \u7684\u503c\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\u7684 Global Scalar Parameter Values -> Map units (CM) \u3002 \u70b9\u51fb\u4fdd\u5b58\u3002 6. \u521b\u5efa\u9053\u8def\u753b\u5bb6\u548c\u4e3b\u6750\u8d28\u4e4b\u95f4\u7684\u901a\u4fe1\u94fe\u63a5\u3002 Tutorial_RenderTarget \u5c06\u662f\u9053\u8def\u753b\u5bb6\u548c Tutorial_RoadMaster \u4e4b\u95f4\u7684\u901a\u4fe1\u7ebd\u5e26\u3002 \u5728 Tutorial_RoadMaster \u7a97\u53e3\u4e2d\uff0c\u5c06 Tutorial_RenderTarget \u5e94\u7528\u4e8e Global Texture Parameter Values -> Texture Mask \u3002 \u4fdd\u5b58\u5e76\u5173\u95ed\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005\uff0c\u8f6c\u5230\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u5e76\u5c06 Tutorial_RenderTarget \u5e94\u7528_Paint -> Render Target_ \u3002","title":"\u5efa\u7acb\u9053\u8def\u753b\u5bb6\u3001\u638c\u63e1\u6750\u8d28\u548c\u6e32\u67d3\u5bf9\u8c61"},{"location":"tuto_content_authoring_maps/#_11","text":"\u60a8\u521b\u5efa\u7684 Tutorial_RoadMaster \u6750\u8d28\u5305\u542b\u57fa\u7840\u6750\u8d28\u3001\u989d\u5916\u6750\u8d28\u4fe1\u606f\u4ee5\u53ca\u5c06\u901a\u8fc7\u60a8\u7684 Tutorial_RenderTarget \u3002\u60a8\u53ef\u4ee5\u914d\u7f6e\u4e00\u79cd\u57fa\u7840\u6750\u8d28\u548c\u6700\u591a\u4e09\u79cd\u9644\u52a0\u6750\u8d28\u3002 \u8981\u914d\u7f6e\u6750\u6599\uff0c\u8bf7\u53cc\u51fb\u8be5 Tutorial_RoadMaster \u6587\u4ef6\u3002\u5728\u51fa\u73b0\u7684\u7a97\u53e3\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4e3a\u6bcf\u79cd\u6750\u6599\u9009\u62e9\u548c\u8c03\u6574\u4ee5\u4e0b\u503c\uff1a \u4eae\u5ea6(Brightness) \u8272\u8c03(Hue) \u9971\u548c\u5ea6(Saturation) AO \u5f3a\u5ea6(Intensity) \u6cd5\u7ebf\u8d34\u56fe\u5f3a\u5ea6(NormalMap Intensity) \u7c97\u7cd9\u5ea6\u5bf9\u6bd4(Roughness Contrast) \u7c97\u7cd9\u5ea6\u5f3a\u5ea6(Roughness Intensity) \u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4ee5\u4e0b\u503c\u5e76\u5728\u641c\u7d22\u6846\u4e2d\u641c\u7d22\u7eb9\u7406\u6765\u66f4\u6539\u6bcf\u79cd\u6750\u8d28\u7684\u7eb9\u7406\uff1a Diffuse Normal ORMH \u63a2\u7d22 Game > Carla > Static > GenericMaterials > Asphalt > Textures \u4e2d\u53ef\u7528\u7684\u4e00\u4e9b CARLA \u7eb9\u7406\u3002","title":"\u51c6\u5907\u4e3b\u6750\u8d28"},{"location":"tuto_content_authoring_maps/#_12","text":"1. \u5728\u9053\u8def\u753b\u5bb6\u548c\u9053\u8def\u4e4b\u95f4\u521b\u5efa\u94fe\u63a5\u3002 \u5728\u4e3b\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\uff0c\u5728 World Outliner \u641c\u7d22\u6846\u4e2d\u8fdb\u884c Road_Road \u7684\u641c\u7d22\u3002 \u6309 Ctrl + A \u9009\u62e9\u6240\u6709\u9053\u8def\u3002 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Materials \u90e8\u5206\u5e76\u7ed9 Element 0 \u3001 Element 1 \u3001 Element 2 \u548c Element 3 \u5e94\u7528 Tutorial_RoadMaster \u3002 2. \u9009\u62e9\u8981\u5b9a\u5236\u7684\u6750\u8d28\u3002 \u6211\u4eec\u6dfb\u52a0\u7684\u6bcf\u79cd\u6750\u8d28 Tutorial_RoadMaster \u90fd\u5355\u72ec\u5e94\u7528\u4e8e\u9053\u8def\uff0c\u5e76\u4f7f\u7528\u753b\u7b14\u5de5\u5177\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002\u8981\u5e94\u7528\u548c\u81ea\u5b9a\u4e49\u6750\u8d28\uff1a \u9009\u62e9\u9053\u8def\u753b\u5bb6\u53c2\u4e0e\u8005 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d \u9762\u677f\u4e2d\uff0c\u5728 Mask Color \u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9\u8981\u4f7f\u7528\u7684\u6750\u8d28\u3002 3. \u8bbe\u7f6e\u753b\u7b14\u548c\u6a21\u677f\u53c2\u6570\u3002 GenericMaterials/RoadStencil/Alphas \u4e2d\u6709\u591a\u79cd\u6a21\u677f\u53ef\u4f9b\u9009\u62e9\u3002\u6a21\u677f\u7528\u4e8e\u6839\u636e\u60a8\u7684\u9700\u8981\u7ed8\u5236\u9053\u8def\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u503c\u8fdb\u884c\u8c03\u6574\uff1a Stencil size \u2014 \u753b\u7b14\u7684\u5c3a\u5bf8\u3002 Brush strength \u2014 \u8f6e\u5ed3\u7684\u7c97\u7cd9\u5ea6\u3002 Spacebeween Brushes \u2014 \u7b14\u5212\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 Max Jitter \u2014 \u7b14\u5212\u4e4b\u95f4\u753b\u7b14\u7684\u5927\u5c0f\u53d8\u5316\u3002 Stencil \u2014 \u8981\u4f7f\u7528\u7684\u753b\u7b14\u3002 Rotation \u2014 \u5e94\u7528\u4e8e\u7b14\u753b\u7684\u65cb\u8f6c\u3002 \u5237\u5b50\u9762\u677f\u3002 \u4e0d\u540c\u7c7b\u578b\u7684\u5237\u5b50\u3002 4. \u5c06\u6bcf\u79cd\u6750\u8d28\u6d82\u62b9\u5230\u9053\u8def\u7684\u6240\u9700\u90e8\u5206\u3002 \u901a\u8fc7\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u7684\u201c\u9ed8\u8ba4( Default )\u201d\u90e8\u5206\u4e2d\u7684\u6309\u94ae\u9009\u62e9\u5e94\u7528\u6240\u9009\u6750\u8d28\u7684\u4f4d\u7f6e\uff1a Paint all roads \u2014 \u7c89\u5237\u6240\u6709\u9053\u8def\u3002 Paint by actor \u2014 \u7ed8\u753b\u7279\u5b9a\u7684\u3001\u9009\u5b9a\u7684\u53c2\u4e0e\u8005\u3002 Paint over circle \u2014 \u4f7f\u7528\u5706\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 Paint over square \u2014 \u4f7f\u7528\u6b63\u65b9\u5f62\u56fe\u6848\u8fdb\u884c\u7ed8\u5236\uff0c\u6709\u52a9\u4e8e\u63d0\u4f9b\u53d8\u5316\u3002 \u6b64\u90e8\u5206\u8fd8\u5305\u542b\u7528\u4e8e\u5220\u9664\u5df2\u5e94\u7528\u66f4\u6539\u7684\u9009\u9879\u3002 Clear all \u2014 \u64e6\u9664\u6240\u6709\u7ed8\u5236\u7684\u6750\u8d28\u3002 Clear materials \u2014 \u5220\u9664\u5f53\u524d\u6d3b\u52a8\u7684\u6750\u8d28\u3002 Clear material by actor \u2014 \u5220\u9664\u6700\u63a5\u8fd1\u6240\u9009\u53c2\u4e0e\u8005\u7684\u6750\u8d28\u3002 Different painting and erasing options. 5.\u6dfb\u52a0\u8d34\u82b1\u548c\u7f51\u683c\u3002 \u60a8\u53ef\u4ee5\u5728 Content > Carla Static > Decals \u548c Content > Carla > Static \u4e2d\u63a2\u7d22\u53ef\u7528\u7684\u8d34\u82b1\u548c\u7f51\u683c\u3002\u901a\u8fc7\u6269\u5c55\u5e76\u6dfb\u52a0\u5230 Decals Spawn \u548c Meshes Spawn \u6570\u7ec4\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u9053\u8def\u7ed8\u5236\u5668\u4e2d\u3002\u5bf9\u4e8e\u6bcf\u4e00\u9879\uff0c\u60a8\u90fd\u53ef\u4ee5\u914d\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a Number of Decals/Meshes - \u8981\u7ed8\u5236\u7684\u6bcf\u4e2a\u8d34\u82b1\u6216\u7f51\u683c\u7684\u6570\u91cf\u3002 Decal/Mesh Scale \u2014 \u6bcf\u4e2a\u8f74\u7684\u8d34\u82b1/\u7f51\u683c\u6bd4\u4f8b\u3002 Fixed Decal/Mesh Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u504f\u5dee\u3002 Random Offset \u2014 \u6bcf\u4e2a\u8f74\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7684\u6700\u5927\u504f\u5dee\u3002 Decal/Mesh Random Yaw \u2014 \u6700\u5927\u968f\u673a\u504f\u822a\u65cb\u8f6c\u3002 Decal/Mesh Min Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5c0f\u968f\u673a\u6bd4\u4f8b\u3002 Decal/Mesh Max Scale \u2014 \u5e94\u7528\u4e8e\u8d34\u82b1/\u7f51\u683c\u7684\u6700\u5927\u968f\u673a\u6bd4\u4f8b\u3002 \u8d34\u82b1\u548c\u7f51\u683c\u9762\u677f\u3002 \u914d\u7f6e\u597d\u7f51\u683c\u548c\u8d34\u82b1\u540e\uff0c\u901a\u8fc7\u6309 Spawn decals \u548c\u751f Spawn meshes \u3002 \u7b14\u8bb0 \u786e\u4fdd\u7f51\u683c\u548c\u8d34\u82b1\u6ca1\u6709\u542f\u7528\u78b0\u649e\uff0c\u4ee5\u514d\u5e72\u6270\u9053\u8def\u4e0a\u7684\u6c7d\u8f66\u5e76\u5c06\u4efb\u4f55\u8fb9\u754c\u6846\u964d\u4f4e\u5230\u9053\u8def\u6c34\u5e73\u3002 7. \u5c1d\u8bd5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u6750\u8d28\u3001\u7eb9\u7406\u3001\u8bbe\u7f6e\u3001\u8d34\u82b1\u548c\u7f51\u683c\u4ee5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u5916\u89c2\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\u56fe\u50cf\uff0c\u663e\u793a\u4e86\u5728\u7ed8\u5236\u6bcf\u79cd\u6750\u8d28\u7684\u8fc7\u7a0b\u4e2d\u9053\u8def\u5916\u89c2\u5982\u4f55\u53d8\u5316\u3002 \u57fa\u7840\u9053\u8def\u6750\u6599\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 1 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 2 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u6750\u6599 3 \u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u8d34\u82b1\u540e\u7684\u793a\u4f8b\u3002 \u5e94\u7528\u7f51\u683c\u540e\u7684\u793a\u4f8b\u3002","title":"\u63cf\u7ed8\u9053\u8def"},{"location":"tuto_content_authoring_maps/#_13","text":"\u7ed8\u5236\u9053\u8def\u540e\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u66f4\u65b0\u8f66\u9053\u7ebf\u7684\u5916\u89c2\uff1a 1. \u590d\u5236\u4e3b\u6750\u6599\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u5bfc\u822a\u81f3 Game > Carla > Static > GenericMaterials > RoadPainterMaterials \u3002 \u53f3\u952e\u5355\u51fb Tutorial_RoadMaster \u5e76\u9009\u62e9 Create Material Instance \u3002 \u91cd\u547d\u540d\u4e3a Tutorial_LaneMarkings \u3002 2. \u914d\u7f6e\u8f66\u9053\u7ebf\u6750\u8d28\u3002 \u5728 \u5185\u5bb9\u6d4f\u89c8\u5668 \u4e2d\uff0c\u53cc\u51fb Tutorial_LaneMarkings \u3002 \u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\uff0c\u8f6c\u5230 Global Static Switch Parameter Values \u5206\uff0c\u7136\u540e\u9009\u4e2d LaneMark \u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6846\u3002 \u8f6c\u5230 Texture \u90e8\u5206\u5e76\u9009\u4e2d LaneColor \u548c Uv Size \u590d\u9009\u6846\u3002 \u5728 LaneColor \u4e2d\u9009\u62e9\u60a8\u559c\u6b22\u7684\u8f66\u9053\u6807\u8bb0\u989c\u8272\u3002 Save \u5e76\u5173\u95ed\u3002 3. \u9009\u62e9\u8f66\u9053\u7ebf\u7f51\u683c\u3002 \u5c06\u6750\u6599\u62d6\u5230\u60a8\u60f3\u8981\u7740\u8272\u7684\u8f66\u9053\u7ebf\u4e0a\u3002\u5982\u679c\u9700\u8981\uff0c\u5bf9\u4e0d\u540c\u989c\u8272\u7684\u8f66\u9053\u7ebf\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\u3002","title":"\u66f4\u65b0\u8f66\u9053\u7ebf\u5916\u89c2"},{"location":"tuto_content_authoring_maps/#_14","text":"CARLA \u5185\u5bb9\u5e93\u62e5\u6709\u4e00\u5957\u5168\u9762\u7684\u690d\u88ab\u84dd\u56fe\uff0c\u4f9b\u60a8\u4e3a\u5730\u56fe\u7684\u8d8a\u91ce\u533a\u57df\uff08\u5982\u4eba\u884c\u9053\u3001\u516c\u56ed\u3001\u5c71\u5761\u3001\u7530\u91ce\u548c\u68ee\u6797\uff09\u589e\u6dfb\u66f4\u591a\u771f\u5b9e\u611f\u3002 \u5bfc\u822a\u5230 CARLA \u5185\u5bb9\u5e93\u4e2d\u7684\u690d\u88ab\u6587\u4ef6\u5939\uff1a Carla > Static > Visitation \u3002\u60a8\u4f1a\u627e\u5230\u591a\u79cd\u6811\u6728\u3001\u704c\u6728\u4e1b\u7684\u84dd\u56fe\u3002\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5143\u7d20\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u5730\u56fe\u4e2d\u3002","title":"\u6811\u6728\u548c\u690d\u88ab"},{"location":"tuto_content_authoring_maps/#_15","text":"\u5bf9\u4e8e\u6811\u6728\u548c\u690d\u88ab\u6765\u8bf4\uff0c\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\u662f \u865a\u5e7b\u5f15\u64ce\u6811\u53f6\u5de5\u5177 \u3002\u901a\u8fc7\u4ece\u5de5\u5177\u680f\u7684 mode \u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u6765\u6fc0\u6d3b\u8be5\u5de5\u5177\u3002 \u5c06\u6240\u9700\u7684\u6811\u53f6\u9879\u76ee\u62d6\u5230\u6807\u6709 + Drop Foliage Here \u7684\u6846\u4e2d\u3002\u5728\u5bc6\u5ea6\u5b57\u6bb5\u4e2d\u8bbe\u7f6e\u9002\u5f53\u7684\u5bc6\u5ea6\uff0c\u7136\u540e\u4f7f\u7528\u6811\u53f6\u9879\u76ee\u7ed8\u5236\u5230\u5730\u56fe\u4e0a\u3002","title":"\u6811\u53f6\u5de5\u5177"},{"location":"tuto_content_authoring_maps/#_16","text":"\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u548c\u6307\u5357\u7ee7\u7eed\u81ea\u5b9a\u4e49\u60a8\u7684\u5730\u56fe\uff1a \u5728\u5730\u56fe\u4e2d\u5b9e\u65bd\u5b50\u5173\u5361\u3002. \u4f7f\u7528\u7a0b\u5e8f\u5316\u6784\u5efa\u5de5\u5177\u6dfb\u52a0\u5efa\u7b51\u7269\u3002 \u81ea\u5b9a\u4e49\u5929\u6c14 \u4f7f\u7528\u5e8f\u5217\u5316\u7f51\u683c\u81ea\u5b9a\u4e49\u666f\u89c2\u3002 \u5b8c\u6210\u5b9a\u5236\u540e\uff0c\u60a8\u53ef\u4ee5 \u751f\u6210\u884c\u4eba\u5bfc\u822a\u4fe1\u606f \u3002 \u5982\u679c\u60a8\u5bf9\u6d41\u7a0b\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u4ee5\u5728 \u8bba\u575b \u4e2d\u63d0\u95ee\u3002 CARLA \u8bba\u575b","title":"\u4e0b\u4e00\u6b65"},{"location":"tuto_content_authoring_vehicles/","text":"\u5185\u5bb9\u521b\u4f5c - \u8f66\u8f86 CARLA \u5728\u84dd\u56fe\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e00\u5957\u5f00\u7bb1\u5373\u7528\u7684\u5168\u9762\u8f66\u8f86\u3002CARLA \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u5b9a\u5236\u8f66\u8f86\u5bf9\u6b64\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u5b9e\u73b0\u6700\u5927\u7684\u53ef\u6269\u5c55\u6027\u3002 \u8be6\u7ec6\u8f66\u8f86\u7684\u4e09\u7ef4\u5efa\u6a21\u975e\u5e38\u590d\u6742\uff0c\u9700\u8981\u5f88\u9ad8\u7684\u6280\u80fd\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5efa\u8bae\u8bfb\u8005\u53c2\u8003\u6709\u5173\u4e09\u7ef4\u5efa\u6a21\u7684\u5176\u4ed6\u6587\u6863\u6765\u6e90\uff0c\u56e0\u4e3a\u8fd9\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\u3002\u7136\u800c\uff0c\u514d\u8d39\u548c\u4e13\u6709\u7684\u5728\u7ebf\u5b58\u50a8\u5e93\u4e2d\u6709\u5927\u91cf\u7684\u8f66\u8f86\u6a21\u578b\u6765\u6e90\u3002\u56e0\u6b64\uff0c\u7528\u6237\u6709\u591a\u79cd\u9009\u62e9\u6765\u521b\u5efa\u7528\u4e8e CARLA \u7684\u5b9a\u5236\u8f66\u8f86\u3002 \u4e3a CARLA \u51c6\u5907\u5b9a\u5236\u8f66\u8f86\u7684\u5173\u952e\u56e0\u7d20\u5728\u4e8e\u88c5\u914d\u8f66\u8f86\u9aa8\u67b6\uff0c\u7136\u540e\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002\u88c5\u914d\u548c\u5bfc\u5165\u540e\uff0c\u9700\u8981\u4e3a\u6c7d\u8f66\u548c\u8f66\u8f6e\u8bbe\u7f6e\u84dd\u56fe\u3002\u7136\u540e\u5e94\u7528\u6750\u6599\u5e76\u6dfb\u52a0\u8f66\u8f86\u7684\u73bb\u7483\u90e8\u4ef6\u3002\u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u6307\u5357\u4e2d\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4\u3002 \u5efa\u6a21 \u547d\u540d\u7ea6\u5b9a \u88c5\u914d \u5bfc\u5165 \u7535\u67a2 \u8bbe\u7f6e\u7236\u7ea7 \u5206\u914d Blender \u63d2\u4ef6 \u5bfc\u51fa \u5bfc\u5165\u865a\u5e7b\u5f15\u64ce \u7269\u7406\u8d44\u4ea7 \u52a8\u753b \u84dd\u56fe \u6750\u8d28 \u4f7f\u7528\u6750\u8d28 \u989c\u8272 \u900f\u660e\u6d82\u5c42 \u7c92\u72b6\u8868\u9762 \u8584\u7247 \u7070\u5c18 \u73bb\u7483 \u73bb\u7483\u7f51\u683c \u73bb\u7483\u6750\u8d28 \u5355\u5c42\u73bb\u7483 \u8f66\u8f6e \u8f66\u8f6e\u84dd\u56fe \u78b0\u649e\u7f51\u683c \u8f6e\u80ce\u914d\u7f6e \u8f66\u8f6e\u5c3a\u5bf8 \u706f UV \u8d34\u56fe \u5bfc\u5165 \u5efa\u6a21 \u8f66\u8f86\u5e94\u6709 5 \u4e07\u5230 10 \u4e07\u4e2a\u9762\u7247\u3002\u4f5c\u4e3a\u6700\u4f73\u5b9e\u8df5\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u5bfc\u51fa\u4e4b\u524d\u5bf9\u6a21\u578b\u8fdb\u884c\u4e09\u89d2\u6d4b\u91cf\u3002CARLA \u8f66\u8f86\u662f\u53c2\u8003\u5b9e\u9645\u6c7d\u8f66\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\u8fdb\u884c\u5efa\u6a21\u7684\u3002\u8bf7\u786e\u4fdd\u60a8\u7279\u522b\u6ce8\u610f\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\u7684\u5355\u4f4d\u3002\u6709\u4e9b\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff0c\u6709\u4e9b\u5219\u4ee5\u7c73\u4e3a\u5355\u4f4d\u3002 \u547d\u540d\u7ea6\u5b9a \u4e3a\u4e86\u65b9\u4fbf\u548c\u4e00\u81f4\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5c06\u8f66\u8f86\u5206\u4e3a\u4ee5\u4e0b\u90e8\u5206\u5e76\u76f8\u5e94\u547d\u540d\u3002\u73bb\u7483\u548c\u706f\u7684\u5177\u4f53\u7ec6\u8282\u5c06\u5728\u540e\u9762\u7684\u90e8\u5206\u4e2d\u4ecb\u7ecd\uff1a \u8f66\u8eab(Bodywork) : \u8f66\u8f86\u7684\u91d1\u5c5e\u90e8\u5206\u3002\u8be5\u6750\u8d28\u5df2\u66f4\u6539\u4e3a\u865a\u5e7b\u5f15\u64ce\u6750\u8d28\u3002\u53ef\u4ee5\u6dfb\u52a0\u5fbd\u6807\u548c\u7ec6\u8282\uff0c\u4f46\u4e3a\u4e86\u53ef\u89c1\uff0c\u5fc5\u987b\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684 Alpha \u901a\u9053\u5c06\u5b83\u4eec\u7ed8\u5236\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002 Glass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u53ef\u4ee5\u4ece\u8f66\u8f86\u5916\u90e8\u770b\u5230\u5185\u90e8\u3002 Glass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u8f66\u8f86\u5185\u90e8\u5230\u5916\u90e8\u7684\u53ef\u89c1\u6027\u3002 Lights : \u5934\u706f\u3001\u6307\u793a\u706f\u7b49 LightGlass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5916\u90e8\u5230\u5185\u90e8\u7684\u706f\u5149\u53ef\u89c1\u6027\u3002 LightGlass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5185\u90e8\u5230\u5916\u90e8\u770b\u5230\u5149\u3002 LicensePlate : 29x12 \u5398\u7c73\u7684\u77e9\u5f62\u5e73\u9762\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u7684 CARLA\u4ee5\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\uff0c\u8bf7\u5728 \u6b64\u5904 \u4e0b\u8f7d .fbx \u3002\u7eb9\u7406\u5c06\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u81ea\u52a8\u5206\u914d\u3002 \u5185\u9970(Interior) : \u4efb\u4f55\u5176\u4ed6\u4e0d\u9002\u5408\u4e0a\u8ff0\u90e8\u5206\u7684\u7ec6\u8282\u90fd\u53ef\u4ee5\u8fdb\u5165 \u5185\u9970 \u3002 \u6750\u8d28(Material)\u5e94\u4f7f\u7528\u683c\u5f0f M_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982, M_Bodywork_Mustang \u3002\u7eb9\u7406\u7684\u5927\u5c0f\u5e94\u4e3a 2048x2048\u3002 \u4f7f\u7528\u7535\u67a2\u88c5\u914d\u8f66\u8f86 \u4e3a\u4e86\u5728\u4eff\u771f\u4e2d\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u6c7d\u8f66\u9700\u8981\u6709\u65cb\u8f6c\u8f6e\u5b50\uff0c\u524d\u4e00\u5bf9\u8f6e\u5b50\u53ef\u4ee5\u968f\u7740\u8f6c\u5411\u8f93\u5165\u800c\u8f6c\u52a8\u3002\u56e0\u6b64\uff0c\u8981\u4e3a CARLA \u51c6\u5907\u8f66\u8f86\uff0c\u9700\u8981\u5728\u6c7d\u8f66\u4e0a\u5b89\u88c5\u7535\u67a2\u4ee5\u8bc6\u522b\u8f66\u8f6e\u5e76\u5141\u8bb8\u5176\u79fb\u52a8\u3002 \u5bfc\u5165 \u5728\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5bfc\u5165\u6216\u5efa\u6a21\u8f66\u8f86\u6a21\u578b\u7f51\u683c\u3002\u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Blender 3D\u3002\u786e\u4fdd\u8f6e\u5b50\u4e0e\u4e3b\u4f53\u5206\u79bb\u3002\u6bcf\u4e2a\u8f6e\u5b50\u5fc5\u987b\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee\u3002 \u786e\u4fdd\u8f66\u8f86\u9762\u5411\u6b63 X \u65b9\u5411\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u6b64\u5f15\u64ce\u76d6\u548c\u6321\u98ce\u73bb\u7483\u5e94\u9762\u5411\u6b63 X \u65b9\u5411\u3002\u6c7d\u8f66\u7684\u65b9\u5411\u8fd8\u5e94\u4f7f\u5730\u677f\u5230\u8f66\u9876\u65b9\u5411\u5904\u4e8e\u6b63 Z \u65b9\u5411\u3002\u8f66\u8f6e\u5e94\u8be5\u6b63\u597d\u64e6\u8fc7 XY \u5e73\u9762\uff0c\u5e76\u4e14\u539f\u70b9\u5e94\u8be5\u4f4d\u4e8e\u60a8\u671f\u671b\u8f66\u8f86\u8d28\u5fc3\u4f4d\u4e8e XY \u5e73\u9762\uff08\u4f46\u4e0d\u662f Z \u5e73\u9762\uff09\u7684\u4f4d\u7f6e\u3002 \u6dfb\u52a0\u7535\u67a2 \u73b0\u5728\u5728\u8f66\u8f86\u7684\u4e2d\u5fc3\u6dfb\u52a0\u4e00\u4e2a\u9aa8\u67b6\uff0c\u786e\u4fdd\u7269\u4f53\u6b63\u786e\u5c45\u4e2d\uff0c\u9aa8\u67b6\u9aa8\u9abc\u7684\u6839\u90e8\u5e94\u8bbe\u7f6e\u5728\u539f\u70b9\u3002\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\u5e76\u5c06\u9aa8\u67b6\u7ed5 x \u8f74\u65cb\u8f6c 90 \u5ea6\u3002 \u73b0\u5728\u9009\u62e9\u9aa8\u67b6\u5e76\u6dfb\u52a0 4 \u4e2a\u9aa8\u9abc\u3002\u8fd9\u4e9b\u9aa8\u9abc\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981\u5b9a\u4f4d\uff0c\u4f7f\u5f97\u9aa8\u9abc\u7684\u6839\u90e8\u4e0e\u6bcf\u4e2a\u8f6e\u5b50\u7684\u4e2d\u5fc3\u91cd\u5408\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u5c06\u4e09\u7ef4\u5149\u6807\u5b9a\u4f4d\u5728\u6bcf\u4e2a\u6eda\u8f6e\u7684\u4e2d\u5fc3\u6765\u5b9e\u73b0\u3002\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u8f6e\u5b50\uff0c\u9009\u62e9\u4e00\u4e2a\u9876\u70b9\uff0c\u6309 A \u9009\u62e9\u6240\u6709\u9876\u70b9\uff0c\u7136\u540e Shift+S \u9009\u62e9 Cursor to selected \u3002\u8fd9\u4f1a\u5c06\u5149\u6807\u5b9a\u4f4d\u5728\u6eda\u8f6e\u7684\u4e2d\u5fc3\u3002\u7136\u540e\uff0c\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\uff0c\u9009\u62e9\u9aa8\u67b6\uff0c\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\uff0c\u9009\u62e9\u9aa8\u9abc\u5e76\u9009\u62e9 Selection to cursor \u3002\u60a8\u7684\u9aa8\u9abc\u73b0\u5728\u5c06\u4e0e\u8f6e\u5b50\u91cd\u5408\u3002\u65cb\u8f6c\u6bcf\u4e2a\u9aa8\u9abc\uff0c\u4f7f\u5176\u4e0e\u9aa8\u67b6\u5e95\u90e8\u5bf9\u9f50\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u8f6e\u5b50\uff0c\u5efa\u8bae\u6839\u636e\u9700\u8981\u8026\u5408\u7684\u8f6e\u5b50\u6765\u547d\u540d\u9aa8\u9abc\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u7a0d\u540e\u5728\u9700\u8981\u4e3a\u6bcf\u4e2a\u9aa8\u9abc\u5206\u914d\u9876\u70b9\u7ec4\u65f6\u8fdb\u884c\u8bc6\u522b\u3002 \u8bbe\u7f6e\u7236\u7ea7 \u73b0\u5728\u5728\u9879\u76ee\u5927\u7eb2\u4e2d\u4f7f\u7528 shift \u6216 control \u9009\u62e9\u8eab\u4f53\u7684\u6240\u6709\u90e8\u5206\u548c\u6240\u67094\u4e2a\u8f6e\u5b50\uff0c\u7136\u540e\u63a7\u5236\u9009\u62e9\u60a8\u521b\u5efa\u7684\u9aa8\u67b6\uff08\u8fd9\u4e2a\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u5982\u679c\u60a8\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u9009\u62e9\u5b83\u4eec\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\u3002\u6309 Ctrl+p \u5e76\u9009\u62e9 With empty groups \u5c06\u7f51\u683c\u7ed1\u5b9a\u5230\u9aa8\u67b6\u3002 \u73b0\u5728\u60a8\u5df2\u5c06\u7f51\u683c\u4f53\u8bbe\u7f6e\u4e3a\u9aa8\u67b6\u7684\u7236\u7ea7\uff0c\u73b0\u5728\u9700\u8981\u5c06\u6bcf\u4e2a\u8f6e\u5b50\u5206\u914d\u7ed9\u5176\u5404\u81ea\u7684\u9aa8\u9abc\u3002\u5728\u5927\u7eb2\u89c6\u56fe\u6216\u7f16\u8f91\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\u8f6e\u5b50\u3002\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\uff0c\u7136\u540e\u9009\u62e9\u8f6e\u5b50\u7684\u6240\u6709\u9876\u70b9\uff08\u5feb\u6377\u952e - a\uff09\u3002 \u5c06\u6c7d\u8f66\u96f6\u4ef6\u5206\u914d\u7ed9\u9aa8\u9abc \u9009\u62e9\u5c5e\u6027\u7684\u7f51\u683c\u9009\u9879\u5361\uff08\u7eff\u8272\u4e09\u89d2\u5f62\uff09\u3002\u5728\u7f51\u683c\u5c5e\u6027\u9762\u677f\u7684\u9876\u70b9\u7ec4\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u770b\u5230\u9aa8\u67b6\u7684\u9aa8\u9abc\u3002\u9009\u62e9\u4e0e\u60a8\u6b63\u5728\u7f16\u8f91\u7684\u8f6e\u5b50\u5bf9\u5e94\u7684\u9aa8\u9abc\uff0c\u7136\u540e\u9009\u62e9 Assign \u3002\u5b89\u88c5\u597d\u8f66\u8f6e\u540e\uff0c\u5c06\u8f66\u8f86\u7684\u6240\u6709\u5176\u4ed6\u90e8\u4ef6\u5b89\u88c5\u5230\u57fa\u9aa8\u4e0a\u3002 \u5c06\u6240\u6709\u7f51\u683c\u90e8\u4ef6\u5206\u914d\u7ed9\u9aa8\u67b6\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u9aa8\u67b6\u5e76\u79fb\u52a8\u5230\u59ff\u52bf\u6a21\u5f0f\u5e76\u79fb\u52a8\u76f8\u5173\u9aa8\u9abc\u6765\u6d4b\u8bd5\u5b83\u662f\u5426\u6709\u6548\u3002\u8f66\u8f86\u57fa\u9aa8\u5e94\u79fb\u52a8\u6574\u4e2a\u8f66\u8f86\uff0c\u800c\u8f6e\u9aa8\u5e94\u5206\u522b\u79fb\u52a8\u5e76\u65cb\u8f6c\u5404\u81ea\u7684\u8f66\u8f6e\u3002 Ctrl+Z \u786e\u4fdd\u64a4\u6d88\u60a8\u53ef\u80fd\u505a\u51fa\u7684\u4efb\u4f55\u59ff\u52bf\u3002 Blender \u865a\u5e7b\u5f15\u64ce 4 \u8f66\u8f86\u88c5\u914d\u63d2\u4ef6 Blender \u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u63d2\u4ef6\uff0c\u7528\u4e8e\u88c5\u914d\u8f66\u8f86\u4ee5\u5bfc\u5165 CARLA\uff0c\u6709\u52a9\u4e8e\u7b80\u5316\u4e0a\u8ff0\u6b65\u9aa4\u3002\u8bf7\u53c2\u9605 \u63d2\u4ef6\u7f51\u9875 \u4ee5\u83b7\u53d6\u8bf4\u660e\u3002 \u5bfc\u51fa \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u88c5\u914d\u6a21\u578b\u5bfc\u51fa\u4e3a FBX \u683c\u5f0f\uff0c\u4ee5\u4fbf\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002\u4ece\u201c\u6587\u4ef6\u201d\u83dc\u5355\u4e2d\u9009\u62e9 Export > FBX (.fbx) \u3002\u5728 Include \u9762\u677f\u7684 Object Types \u90e8\u5206\u4e2d\uff0c\u6309\u4f4f Shift \u952e\u9009\u62e9 Armature \u548c Mesh \u9009\u9879\u3002 \u5728 Transform \u9762\u677f\u4e2d\u3002\u66f4\u6539 Forward \u4e3a X Forward \uff0c\u5e76\u66f4\u6539 Up \u4e3a Z Up . \u8fd9\u5bf9\u4e8e\u786e\u4fdd\u8f66\u8f86\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u5b9a\u5411\u975e\u5e38\u91cd\u8981\u3002 \u5728 Armature \u90e8\u5206\u4e2d\u53d6\u6d88 Add Leaf Bones \u9009\u4e2d\u5e76\u53d6\u6d88 Bake Animation \u9009\u4e2d\u3002 \u5bfc\u5165\u865a\u5e7b\u5f15\u64ce \u4ece CARLA \u6839\u76ee\u5f55\uff08\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u7684\u76ee\u5f55\uff09\u4e2d\u4f7f\u7528 make launch \u547d\u4ee4\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u6253\u5f00\u5185\u5bb9\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e\u9002\u5f53\u7684\u76ee\u5f55\uff0c\u7136\u540e\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9 Import to .... \u3002\u9009\u62e9\u60a8\u4e4b\u524d\u4ece Blender\uff08\u6216\u5176\u4ed6\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\uff09\u5bfc\u51fa\u7684 FBX \u6587\u4ef6\u3002\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5bfc\u5165\u3002 \u8bbe\u7f6e\u7269\u7406\u8d44\u4ea7 \u73b0\u5728\uff0c\u60a8\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u4e2d\u5c06\u5305\u542b 3 \u4e2a\u5185\u5bb9\uff1a\u7f51\u683c\u3001\u9aa8\u67b6\u548c\u7269\u7406\u8d44\u6e90\u3002\u53cc\u51fb\u7269\u7406\u8d44\u6e90\u8fdb\u884c\u8c03\u6574\u3002 \u9996\u5148\uff0c\u9009\u62e9\u8f66\u4f53\uff0c\u5728\u53f3\u4fa7 Details \u83dc\u5355\u4e2d\uff0c\u5c06 Physics \u90e8\u5206\u4e2d\u7684 Linear Damping \u66f4\u6539\u4e3a 0.0\uff0c\u68c0\u67e5 Collision \u90e8\u5206\u7684 Simulation Generates Hit Events \uff0c\u5728 Body Creation \u90e8\u5206\u5c06 Primitive Type \u4ece Capsule \u6539\u4e3a Box \u3002\u7136\u540e\u6309 Regenerate bodies \u3002\u80f6\u56ca\u73b0\u5728\u5c06\u53d8\u6210\u4e00\u4e2a\u77e9\u5f62\u76d2\u5b50\u3002\u7136\u540e\u9009\u62e9\u8f6e\u5b50\u3002 \u73b0\u5728\u9009\u62e9\u6240\u6709\u8f6e\u5b50\uff08\u5728 Skeleton Tree \u5de6\u4fa7\u90e8\u5206\uff09\u3002 \u5c06 Linear Damping \u6539\u4e3a 0.0\uff0c\u5c06 Physics Type \u8bbe\u7f6e\u4e3a Kinematic \uff0c\u5c06 Collision Response \u8bbe\u7f6e\u4e3a Disabled \uff0c\u5e76\u9009\u62e9 Primitive Type \u4f5c\u4e3a Sphere \u3002\u518d\u6309 Re-generate Bodies \u4e00\u6b21\u3002 \u521b\u5efa\u52a8\u753b \u5728\u60a8\u62e5\u6709\u65b0\u8f66\u8f86\u8d44\u4ea7\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u4e2d\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9 Animation > Animation Blueprint \u3002\u5728\u6253\u5f00\u7684\u5f39\u51fa\u7a97\u53e3\u4e2d\uff0c\u5728 Parent Class \u90e8\u5206\u4e2d\u641c\u7d22 VehicleAnimInstance \uff0c\u7136\u540e\u641c\u7d22 Target Skeleton \u4e0e\u60a8\u7684\u65b0\u8f66\u76f8\u5bf9\u5e94\u7684\u9aa8\u67b6\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u8be5\u540d\u79f0\u3002\u9009\u62e9\u8fd9\u4e24\u9879\u540e\u6309\u786e\u5b9a\u3002\u8fd9\u5c06\u4e3a\u60a8\u7684\u8f66\u8f86\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u52a8\u753b\u84dd\u56fe\u3002 \u4e3a\u4e86\u7b80\u5316\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53e6\u4e00\u8f86\u8f66\u590d\u5236\u52a8\u753b\u3002\u5728\u7b2c\u4e8c\u4e2a\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u6253\u5f00 Content > Carla > Static > Vehicles > 4Wheeled \u5e76\u9009\u62e9\u4efb\u610f\u8f66\u8f86\u3002\u6253\u5f00\u6240\u9009\u8f66\u8f86\u7684\u52a8\u753b\u84dd\u56fe\uff0c\u7136\u540e\u5c06\u9664\u6b64\u8282\u70b9\u4e4b\u5916\u7684\u6240\u6709\u8282\u70b9\u590d\u5236 Output pose \u5230\u65b0\u7684\u52a8\u753b\u84dd\u56fe\u4e2d\u3002\u901a\u8fc7\u62d6\u52a8\u6700\u7ec8\u8282\u70b9\u4e0e\u8f93\u51fa\u8282\u70b9\u4e4b\u95f4\u7684\u65b0\u8fde\u63a5\u6765\u8fde\u63a5\u8282\u70b9\u3002\u6309\u7f16\u8bd1\uff0c\u52a8\u753b\u84dd\u56fe\u73b0\u5df2\u8bbe\u7f6e\u3002 \u521b\u5efa\u84dd\u56fe \u4f7f\u7528\u5185\u5bb9\u6d4f\u89c8\u5668\u5bfc\u822a\u5230 Content > Carla > Blueprints > Vehicles > LincolnMKZ2017 \u6216\u7c7b\u4f3c\u7684\u8f66\u8f86\u3002\u5728\u8fd9\u91cc\u60a8\u5c06\u627e\u5230\u4e00\u7ec4\u4e3a 4 \u4e2a\u8f6e\u5b50\u8bbe\u7f6e\u7684\u84dd\u56fe\u3002\u5c06\u5b83\u4eec\u590d\u5236\u5230\u5305\u542b\u60a8\u81ea\u5df1\u7684\u8f66\u8f86\u7684\u76ee\u5f55\u4e2d\u5e76\u91cd\u547d\u540d\u5b83\u4eec\u4ee5\u786e\u4fdd\u60a8\u4ee5\u540e\u53ef\u4ee5\u533a\u5206\u5b83\u4eec\u3002\u5982\u679c\u60a8\u613f\u610f\uff0c\u60a8\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8f6e\u5b50\uff0c\u8bf7\u53c2\u9605\u540e\u9762\u7684 \u8f6e\u5b50\u90e8\u5206 \u3002 \u53f3\u952e\u5355\u51fb\u65b0\u8f66\u8f86\u8d44\u4ea7\u6240\u5728\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u5e76\u9009\u62e9 Blueprint Class \u3002\u5728 All Classes \u83dc\u5355\u4e2d\u641c\u7d22 BaseVehiclePawn \u5e76\u9009\u62e9\u6b64\u7c7b\u3002\u4e3a\u84dd\u56fe\u547d\u540d\u5e76\u6253\u5f00\u5b83\u3002\u5728\u5de6\u4fa7 Components \u9009\u9879\u5361\u4e2d\u8fdb\u884c Mesh \u9009\u62e9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7f51\u683c\u62d6\u52a8\u5230\u53f3\u4fa7\u7684\u201c\u7f51\u683c\u201d\u90e8\u5206\u4e2d\u3002 \u5728 Anim Class \u641c\u7d22\u4e0e\u60a8\u5728\u4e0a\u4e00\u6b65\u4e2d\u8bbe\u7f6e\u7684\u65b0\u8f66\u76f8\u5bf9\u5e94\u7684\u52a8\u753b\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u84dd\u56fe\u7c7b\u7684 Components \u83dc\u5355\u4e2d\u9009\u62e9 Vehicle Movement \uff0c\u7136\u540e\u5728\u53f3\u4fa7 Details \u83dc\u5355\u4e2d\u5bfc\u822a\u5230\u8be5 Vehicle Setup \u90e8\u5206\u3002\u73b0\u5728\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f66\u8f6e\uff0c\u627e\u5230\u60a8\u4e4b\u524d\u4e3a Wheel Class \u5c5e\u6027\u590d\u5236\u5e76\u91cd\u547d\u540d\u7684\u76f8\u5173\u8f66\u8f6e\u84dd\u56fe\u3002\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u7f16\u8bd1\u5e76\u4fdd\u5b58\u3002 \u73b0\u5728\u5bfc\u822a\u5230 Content > Carla > Blueprints > Vehicles > VehicleFactory \u5e76\u53cc\u51fb\u5b83\u4ee5\u6253\u5f00\u8f66\u8f86\u5de5\u5382\u3002 \u9009\u62e9 Vehicles \u8282\u70b9\u5e76\u5c55\u5f00\u53f3\u4fa7 Default value \u90e8\u5206\u4e2d\u7684 Vehicles \u9879\u3002 \u6309\u52a0\u53f7\u56fe\u6807\u6dfb\u52a0\u60a8\u7684\u65b0\u8f66\u3002\u5411\u4e0b\u6eda\u52a8\u5230\u6700\u540e\u4e00\u4e2a\u6761\u76ee\u5e76\u5c06\u5176\u5c55\u5f00\uff0c\u5b83\u5e94\u8be5\u662f\u7a7a\u7684\u3002\u547d\u540d\u60a8\u7684\u8f66\u8f86\u7684\u54c1\u724c\u548c\u578b\u53f7\uff0c\u7136\u540e\u5728\u7c7b\u90e8\u5206\u4e0b\u627e\u5230\u60a8\u5728\u4e0a\u4e00\u90e8\u5206\u4e2d\u521b\u5efa\u7684\u84dd\u56fe\u7c7b\u3002\u5c06\u8f6e\u5b50\u6570\u91cf\u4fdd\u7559\u4e3a 4\uff0c\u5e76\u5c06\u4e16\u4ee3\u8bbe\u7f6e\u4e3a 2\u3002\u7f16\u8bd1\u5e76\u4fdd\u5b58\u3002\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u8fdb\u884c\u5168\u5c40\u4fdd\u5b58\uff0c\u60a8\u73b0\u5728......\u51c6\u5907\u5728\u4eff\u771f\u4e2d\u8fd0\u884c\u60a8\u7684\u8f66\u8f86\u3002 \u6309\u865a\u5e7b\u5de5\u5177\u680f\u4e2d\u7684\u201c\u8fd0\u884c\u201d\u6765\u8fdb\u884c\u4eff\u771f\u3002\u8fd0\u884c\u540e\uff0c\u6253\u5f00\u7ec8\u7aef\u5e76\u4f7f\u7528\u8fc7\u6ee4\u5668\u9009\u9879\u8fd0\u884c\u811a\u672c manual_control.py \u6765\u6307\u5b9a\u60a8\u7684\u65b0\u8f66\u8f86\u578b\u53f7\uff1a python manual_control.py --filter my_vehicle_make \u4e8b\u5b9e\u4e0a\uff0c\u8f66\u8f86\u76ee\u524d\u6ca1\u6709\u5e94\u7528\u7eb9\u7406\u6216\u989c\u8272\u3002\u4e0b\u4e00\u6b65\u662f\u5e94\u7528\u6750\u6599\uff0c\u4f7f\u60a8\u7684\u8f66\u8f86\u5177\u6709\u50cf\u771f\u6b63\u7684\u516c\u8def\u8f66\u8f86\u4e00\u6837\u7684\u5916\u89c2\u3002 \u6750\u8d28 \u5c06\u8f66\u8f86\u4f5c\u4e3a\u57fa\u672c\u8d44\u4ea7\u5bfc\u5165\u5e76\u5e03\u7f6e\u597d\u7f51\u683c\u548c\u84dd\u56fe\u540e\uff0c\u60a8\u73b0\u5728\u9700\u8981\u5411\u8f66\u8f86\u6dfb\u52a0\u6750\u8d28\uff0c\u4ee5\u4fc3\u8fdb\u865a\u5e7b\u5f15\u64ce\u4e2d\u7684\u7167\u7247\u7ea7\u771f\u5b9e\u611f\u6e32\u67d3\uff0c\u4ece\u800c\u5b9e\u73b0\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6570\u636e\u7684\u6700\u5927\u4fdd\u771f\u5ea6\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u62e5\u6709\u5168\u9762\u7684\u6750\u8d28\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6709\u52a9\u4e8e\u521b\u5efa\u9ad8\u5ea6\u903c\u771f\u7684\u6750\u8d28\u3002\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u663e\u7740\u589e\u52a0\u4e86\u8be5\u8fc7\u7a0b\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5927\u578b\u6750\u6599\u539f\u578b\u5e93\u4f9b\u60a8\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u4ece\u5934\u5f00\u59cb\u3002 \u7ed9\u60a8\u7684\u8f66\u8f86\u5e94\u7528\u4f7f\u7528\u6750\u8d28 CARLA \u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u590d\u5236\u8f66\u8f86\u5149\u6cfd\u8868\u9762\u7684\u539f\u578b\u6750\u6599\uff0c\u53ef\u4ee5\u4eff\u771f\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u55b7\u6f06\u5de5\u4f5c\u548c\u529f\u80fd\u3002\u6253\u5f00\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u627e\u5230 Content > Carla > Static > GenericMaterials > 00_MastersOpt \u3002\u57fa\u672c\u6750\u6599\u79f0\u4e3a M_CarPaint_Master \u3002\u53f3\u952e\u5355\u51fb\u8be5\u6750\u6599\u5e76\u4ece\u4e0a\u4e0b\u6587\u6750\u8d28\u4e2d\u9009\u62e9 Create Material Instance \u3002\u4e3a\u5176\u547d\u540d\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u5b58\u50a8\u65b0\u8f66\u8f86\u5185\u5bb9\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u89c2\u5bdf\u5219\u4f1a\u79fb\u52a8\u5230\u9760\u8fd1\u5730\u677f\u7684\u4e00\u70b9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u573a\u666f\u4e2d\uff0c\u8f66\u8f86\u7684\u8f66\u8eab\u73b0\u5728\u5c06\u51fa\u73b0\u5728\u90a3\u91cc\u3002 \u73b0\u5728\uff0c\u5728\u53f3\u4fa7\u7684\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\uff0c\u5c06\u65b0\u6750\u8d28\u5b9e\u4f8b\u62d6\u52a8\u5230 Materials \u90e8\u5206\u7684 Element 0 \u4f4d\u7f6e\u3002\u60a8\u5c06\u770b\u5230\u8f66\u8eab\u5448\u73b0\u51fa\u4e00\u79cd\u65b0\u7684\u7070\u8272\u3001\u6709\u5149\u6cfd\u7684\u6750\u6599\u7279\u6027\u3002 \u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u6750\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8f91\u53c2\u6570\u4e86\u3002\u8fd9\u91cc\u6709\u8bb8\u591a\u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u4eff\u771f\u73b0\u5b9e\u4e16\u754c\u7684\u6c7d\u8f66\u55b7\u6f06\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u6700\u91cd\u8981\u7684\u53c2\u6570\u5982\u4e0b\uff1a \u989c\u8272(Color) \u989c\u8272\u8bbe\u7f6e\u51b3\u5b9a\u6c7d\u8f66\u7684\u6574\u4f53\u989c\u8272\u3002\u57fa\u8272\u53ea\u662f\u6c7d\u8f66\u7684\u4e3b\u8981\u989c\u8272\uff0c\u5b83\u5c06\u63a7\u5236\u6574\u4f53\u989c\u8272\uff1a \u900f\u660e\u6d82\u5c42(Clear coat) \u900f\u660e\u6d82\u5c42\u8bbe\u7f6e\u51b3\u5b9a\u9970\u9762\u7684\u5916\u89c2\u53ca\u5176\u5bf9\u5149\u7684\u53cd\u5e94\u3002\u7c97\u7cd9\u5ea6\u4f7f\u7528\u7eb9\u7406\u5c06\u7f3a\u9677\u5e94\u7528\u5230\u8f66\u8f86\u8868\u9762\uff0c\u4ee5\u66f4\u9ad8\u7684\u503c\u6563\u5c04\u66f4\u591a\u7684\u5149\uff0c\u4ee5\u521b\u5efa\u54d1\u5149\u5916\u89c2\u3002\u5efa\u8bae\u8fdb\u884c\u5fae\u5999\u7684\u8c03\u6574\u548c\u8f83\u4f4e\u7684\u503c\u4ee5\u83b7\u5f97\u903c\u771f\u7684\u5916\u89c2\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6c7d\u8f66\u55b7\u6f06\u4f5c\u4e1a\u662f\u5149\u6ed1\u4e14\u53cd\u5149\u7684\uff0c\u4f46\u662f\uff0c\u8fd9\u79cd\u6548\u679c\u53ef\u80fd\u66f4\u5e7f\u6cdb\u5730\u7528\u4e8e\u5bf9\u5b9a\u5236\u55b7\u6f06\u4f5c\u4e1a\u7684\u4e13\u4e1a\u54d1\u5149\u9970\u9762\u8fdb\u884c\u5efa\u6a21\u3002 \u63a7\u5236\u6c7d\u8f66\u201c\u5149\u6cfd\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f Clear Coat Intensity \u3002\u63a5\u8fd1 1 \u7684\u9ad8\u503c\u5c06\u4f7f\u6d82\u5c42\u95ea\u4eae\u4e14\u6709\u5149\u6cfd\u3002 \u7c92\u72b6\u8868\u9762(Orange peel) \u771f\u5b9e\u6c7d\u8f66\u7684\u9970\u9762\uff08\u7279\u522b\u662f\u9762\u5411\u4e00\u822c\u5e02\u573a\u7684\u6279\u91cf\u751f\u4ea7\u7684\u6c7d\u8f66\uff09\u5f80\u5f80\u5b58\u5728\u7f3a\u9677\uff0c\u8868\u73b0\u4e3a\u6cb9\u6f06\u4e0a\u7684\u8f7b\u5fae\u6ce2\u7eb9\u3002\u7c92\u72b6\u8868\u9762\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f7f\u6c7d\u8f66\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002 \u8584\u7247(Flakes) \u6709\u4e9b\u6c7d\u8f66\u7684\u6cb9\u6f06\u5de5\u4f5c\u4e2d\u5305\u542b\u5176\u4ed6\u6750\u6599\u7684\u8584\u7247\uff0c\u4f8b\u5982\u91d1\u5c5e\u6216\u9676\u74f7\uff0c\u4ee5\u8d4b\u4e88\u6c7d\u8f66 metallic \u6216 pearlescant \u5916\u89c2\uff0c\u589e\u52a0\u989d\u5916\u7684\u95ea\u5149\u548c\u53cd\u5c04\uff0c\u4ee5\u6709\u5438\u5f15\u529b\u7684\u65b9\u5f0f\u4e0e\u5149\u7ebf\u53cd\u5e94\u3002\u8584\u7247\u53c2\u6570\u5141\u8bb8 CARLA \u4eff\u771f\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u6a21\u4eff\u91d1\u5c5e\u9970\u9762\uff0c\u5b83\u4f1a\u662f \u7070\u5c18(Dust) \u6c7d\u8f66\u8f66\u8eab\u4e0a\u7ecf\u5e38\u4f1a\u79ef\u805a\u6cb9\u8102\u548c\u7070\u5c18\uff0c\u8fd9\u4f1a\u589e\u52a0\u8f66\u6f06\u7684\u8d28\u611f\uff0c\u5f71\u54cd\u5176\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5f0f\u3002\u7070\u5c18\u53c2\u6570\u5141\u8bb8\u60a8\u5728\u6d82\u5c42\u4e0a\u6dfb\u52a0\u7834\u574f\u5757\uff0c\u4ee5\u4eff\u771f\u7c98\u9644\u5728\u6cb9\u6f06\u4e0a\u7684\u5f02\u7269\u3002 \u73bb\u7483 \u5728 CARLA \u4e2d\u521b\u5efa\u903c\u771f\u7684\u73bb\u7483\u9700\u8981\u4e00\u4e9b\u6280\u5de7\u6765\u6355\u6349\u673a\u52a8\u8f66\u8f86\u4e2d\u4f7f\u7528\u7684\u73bb\u7483\u7684\u771f\u5b9e\u6298\u5c04\u548c\u53cd\u5c04\u884c\u4e3a\u3002CARLA \u8f66\u5e93\u8f66\u8f86\u6709 4 \u5c42\u73bb\u7483\u7f51\u683c\uff0c\u91c7\u7528 2 \u79cd\u4e0d\u540c\u7684\u6750\u6599\u3002\u5404\u5c42\u4e4b\u95f4\u95f4\u9694\u51e0\u6beb\u7c73\uff0c\u5185\u90e8\u548c\u5916\u90e8\u73bb\u7483\u5c42\u91c7\u7528\u4e0d\u540c\u7684\u6750\u6599\uff0c\u4ee5\u786e\u4fdd\u73bb\u7483\u4ece\u8f66\u8f86\u5185\u90e8\u548c\u5916\u90e8\u770b\u8d77\u6765\u90fd\u5f88\u903c\u771f\u3002 \u4ece\u8f66\u8f86\u5916\u90e8\u770b\u6709 2 \u5c42\u73bb\u7483\uff0c\u4ece\u8f66\u8f86\u5185\u90e8\u770b\u6709 2 \u5c42\u73bb\u7483\u3002\u73bb\u7483\u4e4b\u6240\u4ee5\u770b\u8d77\u6765\u50cf\u73bb\u7483\uff0c\u662f\u56e0\u4e3a\u6765\u81ea\u73bb\u7483\u4e24\u4e2a\u8868\u9762\u7684\u53cd\u5c04\u4f7f\u5f97\u53cd\u5c04\u975e\u5e38\u5fae\u5999\u5730\u52a0\u500d\u3002 \u73bb\u7483\u7f51\u683c \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u770b\u5230\u8fde\u63a5\u5230\u6797\u80af\u4e3b\u4f53\u8f66\u8eab\uff08\u4e0d\u662f\u8f66\u95e8\u6216\u5176\u4ed6\u6d3b\u52a8\u90e8\u4ef6\uff09\u7684\u73bb\u7483\u90e8\u4ef6\u3002 \u5982\u679c\u6211\u4eec\u5c06\u7ec4\u6210\u7684\u7f51\u683c\u90e8\u5206\u5206\u5f00\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73bb\u7483\u8f6e\u5ed3\u88ab\u5206\u4e3a 4 \u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u8fd9 4 \u4e2a\u5c42\u5206\u4e3a 2 \u7ec4\uff1a\u5916\u90e8\u5c42\uff08\u6cd5\u7ebf\u9762\u5411\u8f66\u8f86\u5916\u90e8\uff09\u548c\u5185\u90e8\u5c42\uff08\u7f51\u683c\u6cd5\u7ebf\u9762\u5411\u8f66\u8f86\u5185\u90e8\uff09\u3002\u4e0b\u56fe\u6f14\u793a\u4e86 \u521b\u5efa\u7f51\u683c\u56fe\u5c42\u540e\uff0c\u5c06\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u5b83\u4eec\u5bfc\u5165\u5230\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b58\u50a8\u8f66\u8f86\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u6309\u4f4f Shift \u952e\u9009\u62e9 4 \u4e2a\u73bb\u7483\u5c42\u5e76\u5c06\u5b83\u4eec\u62d6\u5230\u5730\u56fe\u4e2d\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u3002 \u73bb\u7483\u6750\u8d28 \u53cc\u51fb\u73bb\u7483\u7684\u5916\u5c42\uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u4e2a\u5185\u5bb9\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u5bfc\u822a\u5230 Content > Carla > Static > Vehicles > GeneralMaterials \u5e76\u627e\u5230\u8be5 Glass \u6750\u8d28\u3002\u5c06\u73bb\u7483\u6750\u8d28\u62d6\u81f3\u7f51\u683c\u7269\u4f53\u7684\u6750\u8d28\u69fd\u4e2d\u3002\u5bf9\u73bb\u7483\u7684\u6bcf\u4e00\u5c42\u91cd\u590d\u6b64\u8fc7\u7a0b\u3002 \u73bb\u7483\u73b0\u5728\u5c06\u662f\u900f\u660e\u7684\uff0c\u4f46\u5177\u6709\u53cd\u5c04\u9644\u8fd1\u7269\u4f53\u548c\u5149\u6e90\u7684\u53cd\u5c04\u7387\u3002\u60a8\u8fd8\u5e94\u8be5\u68c0\u67e5\u5185\u90e8\u73bb\u7483\uff0c\u786e\u4fdd\u90a3\u91cc\u6709\u9002\u5f53\u7684\u73bb\u7483\u6548\u679c\u3002 \u5355\u5c42\u73bb\u7483 \u4e3a\u4e86\u66f4\u5feb\u5730\u751f\u4ea7\u8f66\u8f86\u73bb\u7483\u90e8\u4ef6\uff0c\u552f\u4e00\u7684\u5173\u952e\u90e8\u4ef6\u662f\u6700\u5916\u5c42\u7684\u73bb\u7483\u5c42\u3002\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5c06\u73bb\u7483\u6750\u8d28\u5e94\u7528\u4e8e\u6b64\uff0c\u5e76\u83b7\u5f97\u53ef\u80fd\u9002\u5408\u60a8\u9700\u6c42\u7684\u7ed3\u679c\uff0c\u4f46\u662f\uff0c\u4ece\u8f66\u5185\u67e5\u770b\u7684\u89c6\u56fe\uff08\u5373\uff0c\u5982\u679c\u60a8\u5728\u4eea\u8868\u677f\u4e0a\u6216\u65b9\u5411\u76d8\u540e\u9762\u5b9e\u4f8b\u5316\u6444\u50cf\u5934\uff09\u4f3c\u4e4e\u5177\u6709\u65e0\u73bb\u7483\uff08\u65e0\u6298\u5c04\u6216\u53cd\u5c04\uff09\u3002\u6211\u4eec\u5efa\u8bae\u91c7\u7528\u4e0a\u8ff0\u5de5\u827a\u6765\u751f\u4ea7\u6700\u771f\u5b9e\u7684\u73bb\u7483\u3002 \u73b0\u5728\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u84dd\u56fe\uff0c\u6dfb\u52a0\u4e86\u7f51\u683c\uff0c\u5b8c\u6210\u4e86\u88c5\u914d\uff0c\u521b\u5efa\u4e86\u6cb9\u6f06\u9970\u9762\u548c\u73bb\u7483\u7684\u6750\u6599\uff0c\u60a8\u5e94\u8be5\u62e5\u6709\u4e00\u8f86\u5916\u89c2\u975e\u5e38\u903c\u771f\u7684\u8f66\u8f86\u3002 \u8f66\u8f6e \u5982\u679c\u60a8\u5728 \u521b\u5efa\u84dd\u56fe\u65f6 \u590d\u5236\u4e86\u8f66\u8f6e\uff0c\u5e76\u4e14\u60a8\u7684\u8f66\u8f86\u4e0e CARLA \u5e93\u4e2d\u5df2\u6709\u7684\u8f66\u8f86\u975e\u5e38\u76f8\u4f3c\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u9002\u5408\u60a8\u7684\u76ee\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u8f66\u8f86\u5177\u6709\u975e\u6807\u51c6\u8f66\u8f6e\u5c3a\u5bf8\u6216\u6293\u5730\u529b\u7279\u6027\uff0c\u5219\u5e94\u6309\u7167\u672c\u8282\u8bbe\u7f6e\u8f66\u8f6e\u84dd\u56fe\uff0c\u4ee5\u6700\u597d\u5730\u5339\u914d\u8f66\u8f86\u8f66\u8f6e\u7684\u7269\u7406\u7279\u6027\u3002 \u5bf9\u4e8e CARLA \u8f66\u8f86\u7684\u8f66\u8f6e\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u8f66\u8f6e\u5efa\u7acb\u4e00\u4e2a\u84dd\u56fe\u7c7b\u6765\u5904\u7406\u529b\u5b66\u548c\u78b0\u649e\u5c5e\u6027\u3002\u60a8\u5c06\u8bbe\u7f6e 4 \u4e2a\u84dd\u56fe\u7c7b\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u524d\u7f00\u6216\u540e\u7f00\u6765\u8bc6\u522b\u8f6e\u5b50\uff1a RRW - R ear R ight W heel RLW - R ear L eft W heel FRW - F ront R ight W heel FLW - F ront L eft W heel \u8f66\u8f6e\u84dd\u56fe \u5728\u60a8\u62e5\u6709\u65b0\u8f66\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u84dd\u56fe\u7c7b\u3002\u641c\u7d22 \u53cc\u51fb\u84dd\u56fe\u8fdb\u884c\u8c03\u6574\uff1a \u78b0\u649e\u7f51\u683c \u9996\u5148\uff0c\u7528\u4e8e\u78b0\u649e\u7f51\u683c\u7684\u9ed8\u8ba4\u5706\u67f1\u4f53\u5177\u6709\u9ad8\u591a\u8fb9\u5f62\u6570\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c06\u5176\u66ff\u6362\u4e3a\u4f4e\u591a\u8fb9\u5f62\u7248\u672c\u3002\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u627e\u5230 Content > Carla > Blueprints > Vehicles \u5185\u7684 CollisionWheel \u7f51\u683c\u3002\u84dd\u56fe\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\u7684\u63d2\u69fd\u4e0a\u3002\u8fd9\u5c06\u63d0\u9ad8\u6027\u80fd\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u7269\u7406\u4eff\u771f\u51fa\u73b0\u4efb\u4f55\u660e\u663e\u7684\u7f3a\u9677\u3002 \u8f6e\u80ce\u914d\u7f6e \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bbe\u7f6e\u8f6e\u80ce\u914d\u7f6e\u3002\u5728 Content > Carla > Blueprints > Vehicles \u5185\u627e\u5230 CommonTireConfig \u914d\u7f6e\u5e76\u5c06\u5176\u62d6\u5230 Tire Config \u84dd\u56fe\u7684\u90e8\u5206\u4e0a\u3002\u5982\u679c\u53cc\u51fb\u84dd\u56fe\u4e2d\u7684\u8f6e\u80ce\u914d\u7f6e\uff0c\u53ef\u4ee5\u8c03\u6574\u6469\u64e6\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u4fee\u6539\u8f66\u8f86\u7684\u9053\u8def\u64cd\u63a7\u884c\u4e3a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u8bbe\u7f6e\u4e3a 3.5\uff0c\u8be5\u503c\u9002\u5408\u5927\u591a\u6570\u8f66\u8f86\u4f7f\u7528\u60c5\u51b5\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u5bf9\u5e26\u6709\u5149\u5934\u8f6e\u80ce\u7684\u8d5b\u8f66\u8fdb\u884c\u5efa\u6a21\uff0c\u5219\u8fd9\u5c06\u662f\u9700\u8981\u8c03\u6574\u7684\u9002\u5f53\u53c2\u6570\u3002 \u8f66\u8f6e\u5c3a\u5bf8 \u63a5\u4e0b\u6765\uff0c\u5728\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6d4b\u91cf\u8f66\u8f6e\u7684\u76f4\u5f84\u3002\u5728 Blender \u4e2d\uff0c\u53ef\u4ee5\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\u6309 n \u6253\u5f00\u7684\u5c5e\u6027\u9762\u677f\u4e2d\u67e5\u770b\u5c3a\u5bf8\u3002 \u73b0\u5728\u5c06\u8fd9\u4e9b\u6570\u5b57\u63d2\u5165\u5230 Wheel \u84dd\u56fe\u7684\u90e8\u5206\u4e2d\u3002\u8bf7\u6ce8\u610f\u534a\u5f84\u4e3a\u76f4\u5f84\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u865a\u5e7b\u7f16\u8f91\u5668\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\u3002\u5bf9\u4e8e\u8f66\u8f6e\u8d28\u91cf\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u4e92\u8054\u7f51\u4e0a\u67e5\u627e\u89c4\u683c\uff0c\u627e\u5230\u6b63\u786e\u7684\u8f6e\u80ce\u578b\u53f7\u6216\u7c7b\u4f3c\u7684\u8f6e\u80ce\u578b\u53f7\u6765\u4f30\u8ba1\u6b63\u786e\u7684\u8d28\u91cf\uff08\u4ee5\u5343\u514b\u4e3a\u5355\u4f4d\uff09\u3002 Affected by handbrake \u5e94\u68c0\u67e5\u4e24\u4e2a\u540e\u8f6e\u3002 Steer angle \u5bf9\u4e8e\u4e24\u4e2a\u524d\u8f6e\u5e94\u8bbe\u7f6e\u4e3a\u6700\u5927\u9884\u671f\u8f6c\u5411\u89d2\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u540e\u8f6e\u5e94\u8bbe\u7f6e\u4e3a\u96f6\u3002 \u60ac\u67b6\u7279\u6027 \u8fd9\u91cc\u7684\u9ed8\u8ba4\u503c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5408\u7406\u7684\u8d77\u70b9\u3002\u67e5\u770b \u672c\u6307\u5357 \u4ee5\u8bbe\u7f6e\u9002\u5408\u60a8\u8f66\u8f86\u7c7b\u578b\u7684\u60ac\u67b6\u7279\u6027\u3002 \u706f \u5b8c\u6210 CARLA \u771f\u5b9e\u8f66\u8f86\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u706f\u3001\u524d\u706f\u3001\u5239\u8f66\u706f\u3001\u95ea\u5149\u706f\u7b49\u3002\u5728\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u5e94\u8be5\u5bf9\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u60a8\u8981\u590d\u5236\u7684\u8f66\u8f86\u706f\u7684\u5f62\u72b6\u8fdb\u884c\u5efa\u6a21\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u8f66\u5934\u706f\u6765\u8bf4\uff0c\u8fd9\u5c06\u662f\u6241\u5e73\u5706\u76d8\u6216\u6241\u5e73\u957f\u65b9\u4f53\u7ed3\u6784\u3002\u6709\u4e9b\u8f66\u8f86\u53ef\u80fd\u8fd8\u914d\u6709 LED \u706f\u6761\u3002 UV \u8d34\u56fe \u4e0d\u540c\u7c7b\u578b\u7684\u706f\uff08\u524d\u706f\u3001\u95ea\u5149\u706f\u3001\u5239\u8f66\u706f\u7b49\uff09\u4f7f\u7528\u7eb9\u7406\u6765\u533a\u5206\u3002\u60a8\u9700\u8981\u5728 \u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521b\u5efa UV \u8d34\u56fe\uff0c\u5e76\u5b9a\u4f4d\u706f\u5149\u4ee5\u4e0e\u7eb9\u7406\u7684\u76f8\u5173\u533a\u57df\u76f8\u5339\u914d\u3002 \u5bfc\u5165 \u5c06\u706f\u5149\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u7f16\u8f91\u5668 - \u5bfc\u5165\u706f\u5149\u7f51\u683c\u540e\uff1a \u5c06\u7f51\u683c\u7269\u4f53\u62d6\u52a8\u5230 Components \u9762\u677f\u4e2d\u7684 Mesh (VehicleMesh) (Inherited) \u5c42\u6b21\u7ed3\u6784\u4e2d\u3002 \u9009\u62e9\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u989d\u5916\u7f51\u683c\u5e76\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u641c\u7d22 Collision \u3002 \u5c06\u78b0\u649e\u9884\u8bbe( Collision Presets )\u8bbe\u7f6e\u4e3a NoCollision \u3002 \u9009\u62e9\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u4efb\u4f55\u706f\u5149\u7f51\u683c\u3002\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u641c\u7d22 Tag \u5e76\u6dfb\u52a0 emissive \u6807\u7b7e\u3002","title":"\u5185\u5bb9\u521b\u4f5c - \u8f66\u8f86"},{"location":"tuto_content_authoring_vehicles/#-","text":"CARLA \u5728\u84dd\u56fe\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e00\u5957\u5f00\u7bb1\u5373\u7528\u7684\u5168\u9762\u8f66\u8f86\u3002CARLA \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u5b9a\u5236\u8f66\u8f86\u5bf9\u6b64\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u5b9e\u73b0\u6700\u5927\u7684\u53ef\u6269\u5c55\u6027\u3002 \u8be6\u7ec6\u8f66\u8f86\u7684\u4e09\u7ef4\u5efa\u6a21\u975e\u5e38\u590d\u6742\uff0c\u9700\u8981\u5f88\u9ad8\u7684\u6280\u80fd\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5efa\u8bae\u8bfb\u8005\u53c2\u8003\u6709\u5173\u4e09\u7ef4\u5efa\u6a21\u7684\u5176\u4ed6\u6587\u6863\u6765\u6e90\uff0c\u56e0\u4e3a\u8fd9\u8d85\u51fa\u4e86\u672c\u6307\u5357\u7684\u8303\u56f4\u3002\u7136\u800c\uff0c\u514d\u8d39\u548c\u4e13\u6709\u7684\u5728\u7ebf\u5b58\u50a8\u5e93\u4e2d\u6709\u5927\u91cf\u7684\u8f66\u8f86\u6a21\u578b\u6765\u6e90\u3002\u56e0\u6b64\uff0c\u7528\u6237\u6709\u591a\u79cd\u9009\u62e9\u6765\u521b\u5efa\u7528\u4e8e CARLA \u7684\u5b9a\u5236\u8f66\u8f86\u3002 \u4e3a CARLA \u51c6\u5907\u5b9a\u5236\u8f66\u8f86\u7684\u5173\u952e\u56e0\u7d20\u5728\u4e8e\u88c5\u914d\u8f66\u8f86\u9aa8\u67b6\uff0c\u7136\u540e\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002\u88c5\u914d\u548c\u5bfc\u5165\u540e\uff0c\u9700\u8981\u4e3a\u6c7d\u8f66\u548c\u8f66\u8f6e\u8bbe\u7f6e\u84dd\u56fe\u3002\u7136\u540e\u5e94\u7528\u6750\u6599\u5e76\u6dfb\u52a0\u8f66\u8f86\u7684\u73bb\u7483\u90e8\u4ef6\u3002\u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u6307\u5357\u4e2d\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4\u3002 \u5efa\u6a21 \u547d\u540d\u7ea6\u5b9a \u88c5\u914d \u5bfc\u5165 \u7535\u67a2 \u8bbe\u7f6e\u7236\u7ea7 \u5206\u914d Blender \u63d2\u4ef6 \u5bfc\u51fa \u5bfc\u5165\u865a\u5e7b\u5f15\u64ce \u7269\u7406\u8d44\u4ea7 \u52a8\u753b \u84dd\u56fe \u6750\u8d28 \u4f7f\u7528\u6750\u8d28 \u989c\u8272 \u900f\u660e\u6d82\u5c42 \u7c92\u72b6\u8868\u9762 \u8584\u7247 \u7070\u5c18 \u73bb\u7483 \u73bb\u7483\u7f51\u683c \u73bb\u7483\u6750\u8d28 \u5355\u5c42\u73bb\u7483 \u8f66\u8f6e \u8f66\u8f6e\u84dd\u56fe \u78b0\u649e\u7f51\u683c \u8f6e\u80ce\u914d\u7f6e \u8f66\u8f6e\u5c3a\u5bf8 \u706f UV \u8d34\u56fe \u5bfc\u5165","title":"\u5185\u5bb9\u521b\u4f5c - \u8f66\u8f86"},{"location":"tuto_content_authoring_vehicles/#_1","text":"\u8f66\u8f86\u5e94\u6709 5 \u4e07\u5230 10 \u4e07\u4e2a\u9762\u7247\u3002\u4f5c\u4e3a\u6700\u4f73\u5b9e\u8df5\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u5bfc\u51fa\u4e4b\u524d\u5bf9\u6a21\u578b\u8fdb\u884c\u4e09\u89d2\u6d4b\u91cf\u3002CARLA \u8f66\u8f86\u662f\u53c2\u8003\u5b9e\u9645\u6c7d\u8f66\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\u8fdb\u884c\u5efa\u6a21\u7684\u3002\u8bf7\u786e\u4fdd\u60a8\u7279\u522b\u6ce8\u610f\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\u7684\u5355\u4f4d\u3002\u6709\u4e9b\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\uff0c\u6709\u4e9b\u5219\u4ee5\u7c73\u4e3a\u5355\u4f4d\u3002","title":"\u5efa\u6a21"},{"location":"tuto_content_authoring_vehicles/#_2","text":"\u4e3a\u4e86\u65b9\u4fbf\u548c\u4e00\u81f4\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5c06\u8f66\u8f86\u5206\u4e3a\u4ee5\u4e0b\u90e8\u5206\u5e76\u76f8\u5e94\u547d\u540d\u3002\u73bb\u7483\u548c\u706f\u7684\u5177\u4f53\u7ec6\u8282\u5c06\u5728\u540e\u9762\u7684\u90e8\u5206\u4e2d\u4ecb\u7ecd\uff1a \u8f66\u8eab(Bodywork) : \u8f66\u8f86\u7684\u91d1\u5c5e\u90e8\u5206\u3002\u8be5\u6750\u8d28\u5df2\u66f4\u6539\u4e3a\u865a\u5e7b\u5f15\u64ce\u6750\u8d28\u3002\u53ef\u4ee5\u6dfb\u52a0\u5fbd\u6807\u548c\u7ec6\u8282\uff0c\u4f46\u4e3a\u4e86\u53ef\u89c1\uff0c\u5fc5\u987b\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\u7f16\u8f91\u5668\u4e2d\u7684 Alpha \u901a\u9053\u5c06\u5b83\u4eec\u7ed8\u5236\u4e3a\u4e0d\u540c\u7684\u989c\u8272\u3002 Glass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u53ef\u4ee5\u4ece\u8f66\u8f86\u5916\u90e8\u770b\u5230\u5185\u90e8\u3002 Glass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u8f66\u8f86\u5185\u90e8\u5230\u5916\u90e8\u7684\u53ef\u89c1\u6027\u3002 Lights : \u5934\u706f\u3001\u6307\u793a\u706f\u7b49 LightGlass_Ext : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5916\u90e8\u5230\u5185\u90e8\u7684\u706f\u5149\u53ef\u89c1\u6027\u3002 LightGlass_Int : \u4e00\u5c42\u73bb\u7483\uff0c\u5141\u8bb8\u4ece\u5185\u90e8\u5230\u5916\u90e8\u770b\u5230\u5149\u3002 LicensePlate : 29x12 \u5398\u7c73\u7684\u77e9\u5f62\u5e73\u9762\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u7684 CARLA\u4ee5\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\uff0c\u8bf7\u5728 \u6b64\u5904 \u4e0b\u8f7d .fbx \u3002\u7eb9\u7406\u5c06\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u81ea\u52a8\u5206\u914d\u3002 \u5185\u9970(Interior) : \u4efb\u4f55\u5176\u4ed6\u4e0d\u9002\u5408\u4e0a\u8ff0\u90e8\u5206\u7684\u7ec6\u8282\u90fd\u53ef\u4ee5\u8fdb\u5165 \u5185\u9970 \u3002 \u6750\u8d28(Material)\u5e94\u4f7f\u7528\u683c\u5f0f M_CarPart_CarName \u547d\u540d\uff0c\u4f8b\u5982, M_Bodywork_Mustang \u3002\u7eb9\u7406\u7684\u5927\u5c0f\u5e94\u4e3a 2048x2048\u3002","title":"\u547d\u540d\u7ea6\u5b9a"},{"location":"tuto_content_authoring_vehicles/#_3","text":"\u4e3a\u4e86\u5728\u4eff\u771f\u4e2d\u770b\u8d77\u6765\u66f4\u771f\u5b9e\uff0c\u6c7d\u8f66\u9700\u8981\u6709\u65cb\u8f6c\u8f6e\u5b50\uff0c\u524d\u4e00\u5bf9\u8f6e\u5b50\u53ef\u4ee5\u968f\u7740\u8f6c\u5411\u8f93\u5165\u800c\u8f6c\u52a8\u3002\u56e0\u6b64\uff0c\u8981\u4e3a CARLA \u51c6\u5907\u8f66\u8f86\uff0c\u9700\u8981\u5728\u6c7d\u8f66\u4e0a\u5b89\u88c5\u7535\u67a2\u4ee5\u8bc6\u522b\u8f66\u8f6e\u5e76\u5141\u8bb8\u5176\u79fb\u52a8\u3002","title":"\u4f7f\u7528\u7535\u67a2\u88c5\u914d\u8f66\u8f86"},{"location":"tuto_content_authoring_vehicles/#_4","text":"\u5728\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5bfc\u5165\u6216\u5efa\u6a21\u8f66\u8f86\u6a21\u578b\u7f51\u683c\u3002\u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Blender 3D\u3002\u786e\u4fdd\u8f6e\u5b50\u4e0e\u4e3b\u4f53\u5206\u79bb\u3002\u6bcf\u4e2a\u8f6e\u5b50\u5fc5\u987b\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee\u3002 \u786e\u4fdd\u8f66\u8f86\u9762\u5411\u6b63 X \u65b9\u5411\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u6b64\u5f15\u64ce\u76d6\u548c\u6321\u98ce\u73bb\u7483\u5e94\u9762\u5411\u6b63 X \u65b9\u5411\u3002\u6c7d\u8f66\u7684\u65b9\u5411\u8fd8\u5e94\u4f7f\u5730\u677f\u5230\u8f66\u9876\u65b9\u5411\u5904\u4e8e\u6b63 Z \u65b9\u5411\u3002\u8f66\u8f6e\u5e94\u8be5\u6b63\u597d\u64e6\u8fc7 XY \u5e73\u9762\uff0c\u5e76\u4e14\u539f\u70b9\u5e94\u8be5\u4f4d\u4e8e\u60a8\u671f\u671b\u8f66\u8f86\u8d28\u5fc3\u4f4d\u4e8e XY \u5e73\u9762\uff08\u4f46\u4e0d\u662f Z \u5e73\u9762\uff09\u7684\u4f4d\u7f6e\u3002","title":"\u5bfc\u5165"},{"location":"tuto_content_authoring_vehicles/#_5","text":"\u73b0\u5728\u5728\u8f66\u8f86\u7684\u4e2d\u5fc3\u6dfb\u52a0\u4e00\u4e2a\u9aa8\u67b6\uff0c\u786e\u4fdd\u7269\u4f53\u6b63\u786e\u5c45\u4e2d\uff0c\u9aa8\u67b6\u9aa8\u9abc\u7684\u6839\u90e8\u5e94\u8bbe\u7f6e\u5728\u539f\u70b9\u3002\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\u5e76\u5c06\u9aa8\u67b6\u7ed5 x \u8f74\u65cb\u8f6c 90 \u5ea6\u3002 \u73b0\u5728\u9009\u62e9\u9aa8\u67b6\u5e76\u6dfb\u52a0 4 \u4e2a\u9aa8\u9abc\u3002\u8fd9\u4e9b\u9aa8\u9abc\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981\u5b9a\u4f4d\uff0c\u4f7f\u5f97\u9aa8\u9abc\u7684\u6839\u90e8\u4e0e\u6bcf\u4e2a\u8f6e\u5b50\u7684\u4e2d\u5fc3\u91cd\u5408\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u5c06\u4e09\u7ef4\u5149\u6807\u5b9a\u4f4d\u5728\u6bcf\u4e2a\u6eda\u8f6e\u7684\u4e2d\u5fc3\u6765\u5b9e\u73b0\u3002\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u8f6e\u5b50\uff0c\u9009\u62e9\u4e00\u4e2a\u9876\u70b9\uff0c\u6309 A \u9009\u62e9\u6240\u6709\u9876\u70b9\uff0c\u7136\u540e Shift+S \u9009\u62e9 Cursor to selected \u3002\u8fd9\u4f1a\u5c06\u5149\u6807\u5b9a\u4f4d\u5728\u6eda\u8f6e\u7684\u4e2d\u5fc3\u3002\u7136\u540e\uff0c\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\uff0c\u9009\u62e9\u9aa8\u67b6\uff0c\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\uff0c\u9009\u62e9\u9aa8\u9abc\u5e76\u9009\u62e9 Selection to cursor \u3002\u60a8\u7684\u9aa8\u9abc\u73b0\u5728\u5c06\u4e0e\u8f6e\u5b50\u91cd\u5408\u3002\u65cb\u8f6c\u6bcf\u4e2a\u9aa8\u9abc\uff0c\u4f7f\u5176\u4e0e\u9aa8\u67b6\u5e95\u90e8\u5bf9\u9f50\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u8f6e\u5b50\uff0c\u5efa\u8bae\u6839\u636e\u9700\u8981\u8026\u5408\u7684\u8f6e\u5b50\u6765\u547d\u540d\u9aa8\u9abc\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u7a0d\u540e\u5728\u9700\u8981\u4e3a\u6bcf\u4e2a\u9aa8\u9abc\u5206\u914d\u9876\u70b9\u7ec4\u65f6\u8fdb\u884c\u8bc6\u522b\u3002","title":"\u6dfb\u52a0\u7535\u67a2"},{"location":"tuto_content_authoring_vehicles/#_6","text":"\u73b0\u5728\u5728\u9879\u76ee\u5927\u7eb2\u4e2d\u4f7f\u7528 shift \u6216 control \u9009\u62e9\u8eab\u4f53\u7684\u6240\u6709\u90e8\u5206\u548c\u6240\u67094\u4e2a\u8f6e\u5b50\uff0c\u7136\u540e\u63a7\u5236\u9009\u62e9\u60a8\u521b\u5efa\u7684\u9aa8\u67b6\uff08\u8fd9\u4e2a\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u5982\u679c\u60a8\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u9009\u62e9\u5b83\u4eec\u5c06\u4e0d\u8d77\u4f5c\u7528\uff09\u3002\u6309 Ctrl+p \u5e76\u9009\u62e9 With empty groups \u5c06\u7f51\u683c\u7ed1\u5b9a\u5230\u9aa8\u67b6\u3002 \u73b0\u5728\u60a8\u5df2\u5c06\u7f51\u683c\u4f53\u8bbe\u7f6e\u4e3a\u9aa8\u67b6\u7684\u7236\u7ea7\uff0c\u73b0\u5728\u9700\u8981\u5c06\u6bcf\u4e2a\u8f6e\u5b50\u5206\u914d\u7ed9\u5176\u5404\u81ea\u7684\u9aa8\u9abc\u3002\u5728\u5927\u7eb2\u89c6\u56fe\u6216\u7f16\u8f91\u5668\u4e2d\u9009\u62e9\u4e00\u4e2a\u8f6e\u5b50\u3002\u5207\u6362\u5230\u7f16\u8f91\u6a21\u5f0f\uff0c\u7136\u540e\u9009\u62e9\u8f6e\u5b50\u7684\u6240\u6709\u9876\u70b9\uff08\u5feb\u6377\u952e - a\uff09\u3002","title":"\u8bbe\u7f6e\u7236\u7ea7"},{"location":"tuto_content_authoring_vehicles/#_7","text":"\u9009\u62e9\u5c5e\u6027\u7684\u7f51\u683c\u9009\u9879\u5361\uff08\u7eff\u8272\u4e09\u89d2\u5f62\uff09\u3002\u5728\u7f51\u683c\u5c5e\u6027\u9762\u677f\u7684\u9876\u70b9\u7ec4\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u770b\u5230\u9aa8\u67b6\u7684\u9aa8\u9abc\u3002\u9009\u62e9\u4e0e\u60a8\u6b63\u5728\u7f16\u8f91\u7684\u8f6e\u5b50\u5bf9\u5e94\u7684\u9aa8\u9abc\uff0c\u7136\u540e\u9009\u62e9 Assign \u3002\u5b89\u88c5\u597d\u8f66\u8f6e\u540e\uff0c\u5c06\u8f66\u8f86\u7684\u6240\u6709\u5176\u4ed6\u90e8\u4ef6\u5b89\u88c5\u5230\u57fa\u9aa8\u4e0a\u3002 \u5c06\u6240\u6709\u7f51\u683c\u90e8\u4ef6\u5206\u914d\u7ed9\u9aa8\u67b6\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u9aa8\u67b6\u5e76\u79fb\u52a8\u5230\u59ff\u52bf\u6a21\u5f0f\u5e76\u79fb\u52a8\u76f8\u5173\u9aa8\u9abc\u6765\u6d4b\u8bd5\u5b83\u662f\u5426\u6709\u6548\u3002\u8f66\u8f86\u57fa\u9aa8\u5e94\u79fb\u52a8\u6574\u4e2a\u8f66\u8f86\uff0c\u800c\u8f6e\u9aa8\u5e94\u5206\u522b\u79fb\u52a8\u5e76\u65cb\u8f6c\u5404\u81ea\u7684\u8f66\u8f6e\u3002 Ctrl+Z \u786e\u4fdd\u64a4\u6d88\u60a8\u53ef\u80fd\u505a\u51fa\u7684\u4efb\u4f55\u59ff\u52bf\u3002","title":"\u5c06\u6c7d\u8f66\u96f6\u4ef6\u5206\u914d\u7ed9\u9aa8\u9abc"},{"location":"tuto_content_authoring_vehicles/#blender-4","text":"Blender \u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u63d2\u4ef6\uff0c\u7528\u4e8e\u88c5\u914d\u8f66\u8f86\u4ee5\u5bfc\u5165 CARLA\uff0c\u6709\u52a9\u4e8e\u7b80\u5316\u4e0a\u8ff0\u6b65\u9aa4\u3002\u8bf7\u53c2\u9605 \u63d2\u4ef6\u7f51\u9875 \u4ee5\u83b7\u53d6\u8bf4\u660e\u3002","title":"Blender \u865a\u5e7b\u5f15\u64ce 4 \u8f66\u8f86\u88c5\u914d\u63d2\u4ef6"},{"location":"tuto_content_authoring_vehicles/#_8","text":"\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u88c5\u914d\u6a21\u578b\u5bfc\u51fa\u4e3a FBX \u683c\u5f0f\uff0c\u4ee5\u4fbf\u5bfc\u5165\u5230\u865a\u5e7b\u5f15\u64ce\u4e2d\u3002\u4ece\u201c\u6587\u4ef6\u201d\u83dc\u5355\u4e2d\u9009\u62e9 Export > FBX (.fbx) \u3002\u5728 Include \u9762\u677f\u7684 Object Types \u90e8\u5206\u4e2d\uff0c\u6309\u4f4f Shift \u952e\u9009\u62e9 Armature \u548c Mesh \u9009\u9879\u3002 \u5728 Transform \u9762\u677f\u4e2d\u3002\u66f4\u6539 Forward \u4e3a X Forward \uff0c\u5e76\u66f4\u6539 Up \u4e3a Z Up . \u8fd9\u5bf9\u4e8e\u786e\u4fdd\u8f66\u8f86\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u6b63\u786e\u5b9a\u5411\u975e\u5e38\u91cd\u8981\u3002 \u5728 Armature \u90e8\u5206\u4e2d\u53d6\u6d88 Add Leaf Bones \u9009\u4e2d\u5e76\u53d6\u6d88 Bake Animation \u9009\u4e2d\u3002","title":"\u5bfc\u51fa"},{"location":"tuto_content_authoring_vehicles/#_9","text":"\u4ece CARLA \u6839\u76ee\u5f55\uff08\u60a8\u4ece\u6e90\u4ee3\u7801\u6784\u5efa CARLA \u7684\u76ee\u5f55\uff09\u4e2d\u4f7f\u7528 make launch \u547d\u4ee4\u542f\u52a8\u865a\u5e7b\u7f16\u8f91\u5668\u3002\u6253\u5f00\u5185\u5bb9\u6d4f\u89c8\u5668\uff0c\u8bbe\u7f6e\u9002\u5f53\u7684\u76ee\u5f55\uff0c\u7136\u540e\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9 Import to .... \u3002\u9009\u62e9\u60a8\u4e4b\u524d\u4ece Blender\uff08\u6216\u5176\u4ed6\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\uff09\u5bfc\u51fa\u7684 FBX \u6587\u4ef6\u3002\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5bfc\u5165\u3002","title":"\u5bfc\u5165\u865a\u5e7b\u5f15\u64ce"},{"location":"tuto_content_authoring_vehicles/#_10","text":"\u73b0\u5728\uff0c\u60a8\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u4e2d\u5c06\u5305\u542b 3 \u4e2a\u5185\u5bb9\uff1a\u7f51\u683c\u3001\u9aa8\u67b6\u548c\u7269\u7406\u8d44\u6e90\u3002\u53cc\u51fb\u7269\u7406\u8d44\u6e90\u8fdb\u884c\u8c03\u6574\u3002 \u9996\u5148\uff0c\u9009\u62e9\u8f66\u4f53\uff0c\u5728\u53f3\u4fa7 Details \u83dc\u5355\u4e2d\uff0c\u5c06 Physics \u90e8\u5206\u4e2d\u7684 Linear Damping \u66f4\u6539\u4e3a 0.0\uff0c\u68c0\u67e5 Collision \u90e8\u5206\u7684 Simulation Generates Hit Events \uff0c\u5728 Body Creation \u90e8\u5206\u5c06 Primitive Type \u4ece Capsule \u6539\u4e3a Box \u3002\u7136\u540e\u6309 Regenerate bodies \u3002\u80f6\u56ca\u73b0\u5728\u5c06\u53d8\u6210\u4e00\u4e2a\u77e9\u5f62\u76d2\u5b50\u3002\u7136\u540e\u9009\u62e9\u8f6e\u5b50\u3002 \u73b0\u5728\u9009\u62e9\u6240\u6709\u8f6e\u5b50\uff08\u5728 Skeleton Tree \u5de6\u4fa7\u90e8\u5206\uff09\u3002 \u5c06 Linear Damping \u6539\u4e3a 0.0\uff0c\u5c06 Physics Type \u8bbe\u7f6e\u4e3a Kinematic \uff0c\u5c06 Collision Response \u8bbe\u7f6e\u4e3a Disabled \uff0c\u5e76\u9009\u62e9 Primitive Type \u4f5c\u4e3a Sphere \u3002\u518d\u6309 Re-generate Bodies \u4e00\u6b21\u3002","title":"\u8bbe\u7f6e\u7269\u7406\u8d44\u4ea7"},{"location":"tuto_content_authoring_vehicles/#_11","text":"\u5728\u60a8\u62e5\u6709\u65b0\u8f66\u8f86\u8d44\u4ea7\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u4e2d\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9 Animation > Animation Blueprint \u3002\u5728\u6253\u5f00\u7684\u5f39\u51fa\u7a97\u53e3\u4e2d\uff0c\u5728 Parent Class \u90e8\u5206\u4e2d\u641c\u7d22 VehicleAnimInstance \uff0c\u7136\u540e\u641c\u7d22 Target Skeleton \u4e0e\u60a8\u7684\u65b0\u8f66\u76f8\u5bf9\u5e94\u7684\u9aa8\u67b6\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u8be5\u540d\u79f0\u3002\u9009\u62e9\u8fd9\u4e24\u9879\u540e\u6309\u786e\u5b9a\u3002\u8fd9\u5c06\u4e3a\u60a8\u7684\u8f66\u8f86\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u52a8\u753b\u84dd\u56fe\u3002 \u4e3a\u4e86\u7b80\u5316\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53e6\u4e00\u8f86\u8f66\u590d\u5236\u52a8\u753b\u3002\u5728\u7b2c\u4e8c\u4e2a\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u6253\u5f00 Content > Carla > Static > Vehicles > 4Wheeled \u5e76\u9009\u62e9\u4efb\u610f\u8f66\u8f86\u3002\u6253\u5f00\u6240\u9009\u8f66\u8f86\u7684\u52a8\u753b\u84dd\u56fe\uff0c\u7136\u540e\u5c06\u9664\u6b64\u8282\u70b9\u4e4b\u5916\u7684\u6240\u6709\u8282\u70b9\u590d\u5236 Output pose \u5230\u65b0\u7684\u52a8\u753b\u84dd\u56fe\u4e2d\u3002\u901a\u8fc7\u62d6\u52a8\u6700\u7ec8\u8282\u70b9\u4e0e\u8f93\u51fa\u8282\u70b9\u4e4b\u95f4\u7684\u65b0\u8fde\u63a5\u6765\u8fde\u63a5\u8282\u70b9\u3002\u6309\u7f16\u8bd1\uff0c\u52a8\u753b\u84dd\u56fe\u73b0\u5df2\u8bbe\u7f6e\u3002","title":"\u521b\u5efa\u52a8\u753b"},{"location":"tuto_content_authoring_vehicles/#_12","text":"\u4f7f\u7528\u5185\u5bb9\u6d4f\u89c8\u5668\u5bfc\u822a\u5230 Content > Carla > Blueprints > Vehicles > LincolnMKZ2017 \u6216\u7c7b\u4f3c\u7684\u8f66\u8f86\u3002\u5728\u8fd9\u91cc\u60a8\u5c06\u627e\u5230\u4e00\u7ec4\u4e3a 4 \u4e2a\u8f6e\u5b50\u8bbe\u7f6e\u7684\u84dd\u56fe\u3002\u5c06\u5b83\u4eec\u590d\u5236\u5230\u5305\u542b\u60a8\u81ea\u5df1\u7684\u8f66\u8f86\u7684\u76ee\u5f55\u4e2d\u5e76\u91cd\u547d\u540d\u5b83\u4eec\u4ee5\u786e\u4fdd\u60a8\u4ee5\u540e\u53ef\u4ee5\u533a\u5206\u5b83\u4eec\u3002\u5982\u679c\u60a8\u613f\u610f\uff0c\u60a8\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8f6e\u5b50\uff0c\u8bf7\u53c2\u9605\u540e\u9762\u7684 \u8f6e\u5b50\u90e8\u5206 \u3002 \u53f3\u952e\u5355\u51fb\u65b0\u8f66\u8f86\u8d44\u4ea7\u6240\u5728\u7684\u5185\u5bb9\u6d4f\u89c8\u5668\u76ee\u5f55\u5e76\u9009\u62e9 Blueprint Class \u3002\u5728 All Classes \u83dc\u5355\u4e2d\u641c\u7d22 BaseVehiclePawn \u5e76\u9009\u62e9\u6b64\u7c7b\u3002\u4e3a\u84dd\u56fe\u547d\u540d\u5e76\u6253\u5f00\u5b83\u3002\u5728\u5de6\u4fa7 Components \u9009\u9879\u5361\u4e2d\u8fdb\u884c Mesh \u9009\u62e9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7f51\u683c\u62d6\u52a8\u5230\u53f3\u4fa7\u7684\u201c\u7f51\u683c\u201d\u90e8\u5206\u4e2d\u3002 \u5728 Anim Class \u641c\u7d22\u4e0e\u60a8\u5728\u4e0a\u4e00\u6b65\u4e2d\u8bbe\u7f6e\u7684\u65b0\u8f66\u76f8\u5bf9\u5e94\u7684\u52a8\u753b\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u84dd\u56fe\u7c7b\u7684 Components \u83dc\u5355\u4e2d\u9009\u62e9 Vehicle Movement \uff0c\u7136\u540e\u5728\u53f3\u4fa7 Details \u83dc\u5355\u4e2d\u5bfc\u822a\u5230\u8be5 Vehicle Setup \u90e8\u5206\u3002\u73b0\u5728\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f66\u8f6e\uff0c\u627e\u5230\u60a8\u4e4b\u524d\u4e3a Wheel Class \u5c5e\u6027\u590d\u5236\u5e76\u91cd\u547d\u540d\u7684\u76f8\u5173\u8f66\u8f6e\u84dd\u56fe\u3002\u5bf9\u6bcf\u4e2a\u8f6e\u5b50\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u7f16\u8bd1\u5e76\u4fdd\u5b58\u3002 \u73b0\u5728\u5bfc\u822a\u5230 Content > Carla > Blueprints > Vehicles > VehicleFactory \u5e76\u53cc\u51fb\u5b83\u4ee5\u6253\u5f00\u8f66\u8f86\u5de5\u5382\u3002 \u9009\u62e9 Vehicles \u8282\u70b9\u5e76\u5c55\u5f00\u53f3\u4fa7 Default value \u90e8\u5206\u4e2d\u7684 Vehicles \u9879\u3002 \u6309\u52a0\u53f7\u56fe\u6807\u6dfb\u52a0\u60a8\u7684\u65b0\u8f66\u3002\u5411\u4e0b\u6eda\u52a8\u5230\u6700\u540e\u4e00\u4e2a\u6761\u76ee\u5e76\u5c06\u5176\u5c55\u5f00\uff0c\u5b83\u5e94\u8be5\u662f\u7a7a\u7684\u3002\u547d\u540d\u60a8\u7684\u8f66\u8f86\u7684\u54c1\u724c\u548c\u578b\u53f7\uff0c\u7136\u540e\u5728\u7c7b\u90e8\u5206\u4e0b\u627e\u5230\u60a8\u5728\u4e0a\u4e00\u90e8\u5206\u4e2d\u521b\u5efa\u7684\u84dd\u56fe\u7c7b\u3002\u5c06\u8f6e\u5b50\u6570\u91cf\u4fdd\u7559\u4e3a 4\uff0c\u5e76\u5c06\u4e16\u4ee3\u8bbe\u7f6e\u4e3a 2\u3002\u7f16\u8bd1\u5e76\u4fdd\u5b58\u3002\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u8fdb\u884c\u5168\u5c40\u4fdd\u5b58\uff0c\u60a8\u73b0\u5728......\u51c6\u5907\u5728\u4eff\u771f\u4e2d\u8fd0\u884c\u60a8\u7684\u8f66\u8f86\u3002 \u6309\u865a\u5e7b\u5de5\u5177\u680f\u4e2d\u7684\u201c\u8fd0\u884c\u201d\u6765\u8fdb\u884c\u4eff\u771f\u3002\u8fd0\u884c\u540e\uff0c\u6253\u5f00\u7ec8\u7aef\u5e76\u4f7f\u7528\u8fc7\u6ee4\u5668\u9009\u9879\u8fd0\u884c\u811a\u672c manual_control.py \u6765\u6307\u5b9a\u60a8\u7684\u65b0\u8f66\u8f86\u578b\u53f7\uff1a python manual_control.py --filter my_vehicle_make \u4e8b\u5b9e\u4e0a\uff0c\u8f66\u8f86\u76ee\u524d\u6ca1\u6709\u5e94\u7528\u7eb9\u7406\u6216\u989c\u8272\u3002\u4e0b\u4e00\u6b65\u662f\u5e94\u7528\u6750\u6599\uff0c\u4f7f\u60a8\u7684\u8f66\u8f86\u5177\u6709\u50cf\u771f\u6b63\u7684\u516c\u8def\u8f66\u8f86\u4e00\u6837\u7684\u5916\u89c2\u3002","title":"\u521b\u5efa\u84dd\u56fe"},{"location":"tuto_content_authoring_vehicles/#_13","text":"\u5c06\u8f66\u8f86\u4f5c\u4e3a\u57fa\u672c\u8d44\u4ea7\u5bfc\u5165\u5e76\u5e03\u7f6e\u597d\u7f51\u683c\u548c\u84dd\u56fe\u540e\uff0c\u60a8\u73b0\u5728\u9700\u8981\u5411\u8f66\u8f86\u6dfb\u52a0\u6750\u8d28\uff0c\u4ee5\u4fc3\u8fdb\u865a\u5e7b\u5f15\u64ce\u4e2d\u7684\u7167\u7247\u7ea7\u771f\u5b9e\u611f\u6e32\u67d3\uff0c\u4ece\u800c\u5b9e\u73b0\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6570\u636e\u7684\u6700\u5927\u4fdd\u771f\u5ea6\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u62e5\u6709\u5168\u9762\u7684\u6750\u8d28\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6709\u52a9\u4e8e\u521b\u5efa\u9ad8\u5ea6\u903c\u771f\u7684\u6750\u8d28\u3002\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u663e\u7740\u589e\u52a0\u4e86\u8be5\u8fc7\u7a0b\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5927\u578b\u6750\u6599\u539f\u578b\u5e93\u4f9b\u60a8\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u4ece\u5934\u5f00\u59cb\u3002","title":"\u6750\u8d28"},{"location":"tuto_content_authoring_vehicles/#_14","text":"CARLA \u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u590d\u5236\u8f66\u8f86\u5149\u6cfd\u8868\u9762\u7684\u539f\u578b\u6750\u6599\uff0c\u53ef\u4ee5\u4eff\u771f\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u55b7\u6f06\u5de5\u4f5c\u548c\u529f\u80fd\u3002\u6253\u5f00\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u627e\u5230 Content > Carla > Static > GenericMaterials > 00_MastersOpt \u3002\u57fa\u672c\u6750\u6599\u79f0\u4e3a M_CarPaint_Master \u3002\u53f3\u952e\u5355\u51fb\u8be5\u6750\u6599\u5e76\u4ece\u4e0a\u4e0b\u6587\u6750\u8d28\u4e2d\u9009\u62e9 Create Material Instance \u3002\u4e3a\u5176\u547d\u540d\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u5b58\u50a8\u65b0\u8f66\u8f86\u5185\u5bb9\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u89c2\u5bdf\u5219\u4f1a\u79fb\u52a8\u5230\u9760\u8fd1\u5730\u677f\u7684\u4e00\u70b9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u573a\u666f\u4e2d\uff0c\u8f66\u8f86\u7684\u8f66\u8eab\u73b0\u5728\u5c06\u51fa\u73b0\u5728\u90a3\u91cc\u3002 \u73b0\u5728\uff0c\u5728\u53f3\u4fa7\u7684\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\uff0c\u5c06\u65b0\u6750\u8d28\u5b9e\u4f8b\u62d6\u52a8\u5230 Materials \u90e8\u5206\u7684 Element 0 \u4f4d\u7f6e\u3002\u60a8\u5c06\u770b\u5230\u8f66\u8eab\u5448\u73b0\u51fa\u4e00\u79cd\u65b0\u7684\u7070\u8272\u3001\u6709\u5149\u6cfd\u7684\u6750\u6599\u7279\u6027\u3002 \u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u6750\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8f91\u53c2\u6570\u4e86\u3002\u8fd9\u91cc\u6709\u8bb8\u591a\u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u4eff\u771f\u73b0\u5b9e\u4e16\u754c\u7684\u6c7d\u8f66\u55b7\u6f06\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u6700\u91cd\u8981\u7684\u53c2\u6570\u5982\u4e0b\uff1a","title":"\u7ed9\u60a8\u7684\u8f66\u8f86\u5e94\u7528\u4f7f\u7528\u6750\u8d28"},{"location":"tuto_content_authoring_vehicles/#color","text":"\u989c\u8272\u8bbe\u7f6e\u51b3\u5b9a\u6c7d\u8f66\u7684\u6574\u4f53\u989c\u8272\u3002\u57fa\u8272\u53ea\u662f\u6c7d\u8f66\u7684\u4e3b\u8981\u989c\u8272\uff0c\u5b83\u5c06\u63a7\u5236\u6574\u4f53\u989c\u8272\uff1a","title":"\u989c\u8272(Color)"},{"location":"tuto_content_authoring_vehicles/#clear-coat","text":"\u900f\u660e\u6d82\u5c42\u8bbe\u7f6e\u51b3\u5b9a\u9970\u9762\u7684\u5916\u89c2\u53ca\u5176\u5bf9\u5149\u7684\u53cd\u5e94\u3002\u7c97\u7cd9\u5ea6\u4f7f\u7528\u7eb9\u7406\u5c06\u7f3a\u9677\u5e94\u7528\u5230\u8f66\u8f86\u8868\u9762\uff0c\u4ee5\u66f4\u9ad8\u7684\u503c\u6563\u5c04\u66f4\u591a\u7684\u5149\uff0c\u4ee5\u521b\u5efa\u54d1\u5149\u5916\u89c2\u3002\u5efa\u8bae\u8fdb\u884c\u5fae\u5999\u7684\u8c03\u6574\u548c\u8f83\u4f4e\u7684\u503c\u4ee5\u83b7\u5f97\u903c\u771f\u7684\u5916\u89c2\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6c7d\u8f66\u55b7\u6f06\u4f5c\u4e1a\u662f\u5149\u6ed1\u4e14\u53cd\u5149\u7684\uff0c\u4f46\u662f\uff0c\u8fd9\u79cd\u6548\u679c\u53ef\u80fd\u66f4\u5e7f\u6cdb\u5730\u7528\u4e8e\u5bf9\u5b9a\u5236\u55b7\u6f06\u4f5c\u4e1a\u7684\u4e13\u4e1a\u54d1\u5149\u9970\u9762\u8fdb\u884c\u5efa\u6a21\u3002 \u63a7\u5236\u6c7d\u8f66\u201c\u5149\u6cfd\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f Clear Coat Intensity \u3002\u63a5\u8fd1 1 \u7684\u9ad8\u503c\u5c06\u4f7f\u6d82\u5c42\u95ea\u4eae\u4e14\u6709\u5149\u6cfd\u3002","title":"\u900f\u660e\u6d82\u5c42(Clear coat)"},{"location":"tuto_content_authoring_vehicles/#orange-peel","text":"\u771f\u5b9e\u6c7d\u8f66\u7684\u9970\u9762\uff08\u7279\u522b\u662f\u9762\u5411\u4e00\u822c\u5e02\u573a\u7684\u6279\u91cf\u751f\u4ea7\u7684\u6c7d\u8f66\uff09\u5f80\u5f80\u5b58\u5728\u7f3a\u9677\uff0c\u8868\u73b0\u4e3a\u6cb9\u6f06\u4e0a\u7684\u8f7b\u5fae\u6ce2\u7eb9\u3002\u7c92\u72b6\u8868\u9762\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f7f\u6c7d\u8f66\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002","title":"\u7c92\u72b6\u8868\u9762(Orange peel)"},{"location":"tuto_content_authoring_vehicles/#flakes","text":"\u6709\u4e9b\u6c7d\u8f66\u7684\u6cb9\u6f06\u5de5\u4f5c\u4e2d\u5305\u542b\u5176\u4ed6\u6750\u6599\u7684\u8584\u7247\uff0c\u4f8b\u5982\u91d1\u5c5e\u6216\u9676\u74f7\uff0c\u4ee5\u8d4b\u4e88\u6c7d\u8f66 metallic \u6216 pearlescant \u5916\u89c2\uff0c\u589e\u52a0\u989d\u5916\u7684\u95ea\u5149\u548c\u53cd\u5c04\uff0c\u4ee5\u6709\u5438\u5f15\u529b\u7684\u65b9\u5f0f\u4e0e\u5149\u7ebf\u53cd\u5e94\u3002\u8584\u7247\u53c2\u6570\u5141\u8bb8 CARLA \u4eff\u771f\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u6a21\u4eff\u91d1\u5c5e\u9970\u9762\uff0c\u5b83\u4f1a\u662f","title":"\u8584\u7247(Flakes)"},{"location":"tuto_content_authoring_vehicles/#dust","text":"\u6c7d\u8f66\u8f66\u8eab\u4e0a\u7ecf\u5e38\u4f1a\u79ef\u805a\u6cb9\u8102\u548c\u7070\u5c18\uff0c\u8fd9\u4f1a\u589e\u52a0\u8f66\u6f06\u7684\u8d28\u611f\uff0c\u5f71\u54cd\u5176\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5f0f\u3002\u7070\u5c18\u53c2\u6570\u5141\u8bb8\u60a8\u5728\u6d82\u5c42\u4e0a\u6dfb\u52a0\u7834\u574f\u5757\uff0c\u4ee5\u4eff\u771f\u7c98\u9644\u5728\u6cb9\u6f06\u4e0a\u7684\u5f02\u7269\u3002","title":"\u7070\u5c18(Dust)"},{"location":"tuto_content_authoring_vehicles/#_15","text":"\u5728 CARLA \u4e2d\u521b\u5efa\u903c\u771f\u7684\u73bb\u7483\u9700\u8981\u4e00\u4e9b\u6280\u5de7\u6765\u6355\u6349\u673a\u52a8\u8f66\u8f86\u4e2d\u4f7f\u7528\u7684\u73bb\u7483\u7684\u771f\u5b9e\u6298\u5c04\u548c\u53cd\u5c04\u884c\u4e3a\u3002CARLA \u8f66\u5e93\u8f66\u8f86\u6709 4 \u5c42\u73bb\u7483\u7f51\u683c\uff0c\u91c7\u7528 2 \u79cd\u4e0d\u540c\u7684\u6750\u6599\u3002\u5404\u5c42\u4e4b\u95f4\u95f4\u9694\u51e0\u6beb\u7c73\uff0c\u5185\u90e8\u548c\u5916\u90e8\u73bb\u7483\u5c42\u91c7\u7528\u4e0d\u540c\u7684\u6750\u6599\uff0c\u4ee5\u786e\u4fdd\u73bb\u7483\u4ece\u8f66\u8f86\u5185\u90e8\u548c\u5916\u90e8\u770b\u8d77\u6765\u90fd\u5f88\u903c\u771f\u3002 \u4ece\u8f66\u8f86\u5916\u90e8\u770b\u6709 2 \u5c42\u73bb\u7483\uff0c\u4ece\u8f66\u8f86\u5185\u90e8\u770b\u6709 2 \u5c42\u73bb\u7483\u3002\u73bb\u7483\u4e4b\u6240\u4ee5\u770b\u8d77\u6765\u50cf\u73bb\u7483\uff0c\u662f\u56e0\u4e3a\u6765\u81ea\u73bb\u7483\u4e24\u4e2a\u8868\u9762\u7684\u53cd\u5c04\u4f7f\u5f97\u53cd\u5c04\u975e\u5e38\u5fae\u5999\u5730\u52a0\u500d\u3002","title":"\u73bb\u7483"},{"location":"tuto_content_authoring_vehicles/#_16","text":"\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u770b\u5230\u8fde\u63a5\u5230\u6797\u80af\u4e3b\u4f53\u8f66\u8eab\uff08\u4e0d\u662f\u8f66\u95e8\u6216\u5176\u4ed6\u6d3b\u52a8\u90e8\u4ef6\uff09\u7684\u73bb\u7483\u90e8\u4ef6\u3002 \u5982\u679c\u6211\u4eec\u5c06\u7ec4\u6210\u7684\u7f51\u683c\u90e8\u5206\u5206\u5f00\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73bb\u7483\u8f6e\u5ed3\u88ab\u5206\u4e3a 4 \u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u8fd9 4 \u4e2a\u5c42\u5206\u4e3a 2 \u7ec4\uff1a\u5916\u90e8\u5c42\uff08\u6cd5\u7ebf\u9762\u5411\u8f66\u8f86\u5916\u90e8\uff09\u548c\u5185\u90e8\u5c42\uff08\u7f51\u683c\u6cd5\u7ebf\u9762\u5411\u8f66\u8f86\u5185\u90e8\uff09\u3002\u4e0b\u56fe\u6f14\u793a\u4e86 \u521b\u5efa\u7f51\u683c\u56fe\u5c42\u540e\uff0c\u5c06\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u5b83\u4eec\u5bfc\u5165\u5230\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5b58\u50a8\u8f66\u8f86\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u6309\u4f4f Shift \u952e\u9009\u62e9 4 \u4e2a\u73bb\u7483\u5c42\u5e76\u5c06\u5b83\u4eec\u62d6\u5230\u5730\u56fe\u4e2d\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u3002","title":"\u73bb\u7483\u7f51\u683c"},{"location":"tuto_content_authoring_vehicles/#_17","text":"\u53cc\u51fb\u73bb\u7483\u7684\u5916\u5c42\uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u4e2a\u5185\u5bb9\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u5bfc\u822a\u5230 Content > Carla > Static > Vehicles > GeneralMaterials \u5e76\u627e\u5230\u8be5 Glass \u6750\u8d28\u3002\u5c06\u73bb\u7483\u6750\u8d28\u62d6\u81f3\u7f51\u683c\u7269\u4f53\u7684\u6750\u8d28\u69fd\u4e2d\u3002\u5bf9\u73bb\u7483\u7684\u6bcf\u4e00\u5c42\u91cd\u590d\u6b64\u8fc7\u7a0b\u3002 \u73bb\u7483\u73b0\u5728\u5c06\u662f\u900f\u660e\u7684\uff0c\u4f46\u5177\u6709\u53cd\u5c04\u9644\u8fd1\u7269\u4f53\u548c\u5149\u6e90\u7684\u53cd\u5c04\u7387\u3002\u60a8\u8fd8\u5e94\u8be5\u68c0\u67e5\u5185\u90e8\u73bb\u7483\uff0c\u786e\u4fdd\u90a3\u91cc\u6709\u9002\u5f53\u7684\u73bb\u7483\u6548\u679c\u3002","title":"\u73bb\u7483\u6750\u8d28"},{"location":"tuto_content_authoring_vehicles/#_18","text":"\u4e3a\u4e86\u66f4\u5feb\u5730\u751f\u4ea7\u8f66\u8f86\u73bb\u7483\u90e8\u4ef6\uff0c\u552f\u4e00\u7684\u5173\u952e\u90e8\u4ef6\u662f\u6700\u5916\u5c42\u7684\u73bb\u7483\u5c42\u3002\u60a8\u53ef\u4ee5\u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\u5c06\u73bb\u7483\u6750\u8d28\u5e94\u7528\u4e8e\u6b64\uff0c\u5e76\u83b7\u5f97\u53ef\u80fd\u9002\u5408\u60a8\u9700\u6c42\u7684\u7ed3\u679c\uff0c\u4f46\u662f\uff0c\u4ece\u8f66\u5185\u67e5\u770b\u7684\u89c6\u56fe\uff08\u5373\uff0c\u5982\u679c\u60a8\u5728\u4eea\u8868\u677f\u4e0a\u6216\u65b9\u5411\u76d8\u540e\u9762\u5b9e\u4f8b\u5316\u6444\u50cf\u5934\uff09\u4f3c\u4e4e\u5177\u6709\u65e0\u73bb\u7483\uff08\u65e0\u6298\u5c04\u6216\u53cd\u5c04\uff09\u3002\u6211\u4eec\u5efa\u8bae\u91c7\u7528\u4e0a\u8ff0\u5de5\u827a\u6765\u751f\u4ea7\u6700\u771f\u5b9e\u7684\u73bb\u7483\u3002 \u73b0\u5728\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u84dd\u56fe\uff0c\u6dfb\u52a0\u4e86\u7f51\u683c\uff0c\u5b8c\u6210\u4e86\u88c5\u914d\uff0c\u521b\u5efa\u4e86\u6cb9\u6f06\u9970\u9762\u548c\u73bb\u7483\u7684\u6750\u6599\uff0c\u60a8\u5e94\u8be5\u62e5\u6709\u4e00\u8f86\u5916\u89c2\u975e\u5e38\u903c\u771f\u7684\u8f66\u8f86\u3002","title":"\u5355\u5c42\u73bb\u7483"},{"location":"tuto_content_authoring_vehicles/#_19","text":"\u5982\u679c\u60a8\u5728 \u521b\u5efa\u84dd\u56fe\u65f6 \u590d\u5236\u4e86\u8f66\u8f6e\uff0c\u5e76\u4e14\u60a8\u7684\u8f66\u8f86\u4e0e CARLA \u5e93\u4e2d\u5df2\u6709\u7684\u8f66\u8f86\u975e\u5e38\u76f8\u4f3c\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u9002\u5408\u60a8\u7684\u76ee\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u8f66\u8f86\u5177\u6709\u975e\u6807\u51c6\u8f66\u8f6e\u5c3a\u5bf8\u6216\u6293\u5730\u529b\u7279\u6027\uff0c\u5219\u5e94\u6309\u7167\u672c\u8282\u8bbe\u7f6e\u8f66\u8f6e\u84dd\u56fe\uff0c\u4ee5\u6700\u597d\u5730\u5339\u914d\u8f66\u8f86\u8f66\u8f6e\u7684\u7269\u7406\u7279\u6027\u3002 \u5bf9\u4e8e CARLA \u8f66\u8f86\u7684\u8f66\u8f6e\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u8f66\u8f6e\u5efa\u7acb\u4e00\u4e2a\u84dd\u56fe\u7c7b\u6765\u5904\u7406\u529b\u5b66\u548c\u78b0\u649e\u5c5e\u6027\u3002\u60a8\u5c06\u8bbe\u7f6e 4 \u4e2a\u84dd\u56fe\u7c7b\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u524d\u7f00\u6216\u540e\u7f00\u6765\u8bc6\u522b\u8f6e\u5b50\uff1a RRW - R ear R ight W heel RLW - R ear L eft W heel FRW - F ront R ight W heel FLW - F ront L eft W heel","title":"\u8f66\u8f6e"},{"location":"tuto_content_authoring_vehicles/#_20","text":"\u5728\u60a8\u62e5\u6709\u65b0\u8f66\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u84dd\u56fe\u7c7b\u3002\u641c\u7d22 \u53cc\u51fb\u84dd\u56fe\u8fdb\u884c\u8c03\u6574\uff1a","title":"\u8f66\u8f6e\u84dd\u56fe"},{"location":"tuto_content_authoring_vehicles/#_21","text":"\u9996\u5148\uff0c\u7528\u4e8e\u78b0\u649e\u7f51\u683c\u7684\u9ed8\u8ba4\u5706\u67f1\u4f53\u5177\u6709\u9ad8\u591a\u8fb9\u5f62\u6570\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c06\u5176\u66ff\u6362\u4e3a\u4f4e\u591a\u8fb9\u5f62\u7248\u672c\u3002\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u627e\u5230 Content > Carla > Blueprints > Vehicles \u5185\u7684 CollisionWheel \u7f51\u683c\u3002\u84dd\u56fe\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\u7684\u63d2\u69fd\u4e0a\u3002\u8fd9\u5c06\u63d0\u9ad8\u6027\u80fd\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u7269\u7406\u4eff\u771f\u51fa\u73b0\u4efb\u4f55\u660e\u663e\u7684\u7f3a\u9677\u3002","title":"\u78b0\u649e\u7f51\u683c"},{"location":"tuto_content_authoring_vehicles/#_22","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bbe\u7f6e\u8f6e\u80ce\u914d\u7f6e\u3002\u5728 Content > Carla > Blueprints > Vehicles \u5185\u627e\u5230 CommonTireConfig \u914d\u7f6e\u5e76\u5c06\u5176\u62d6\u5230 Tire Config \u84dd\u56fe\u7684\u90e8\u5206\u4e0a\u3002\u5982\u679c\u53cc\u51fb\u84dd\u56fe\u4e2d\u7684\u8f6e\u80ce\u914d\u7f6e\uff0c\u53ef\u4ee5\u8c03\u6574\u6469\u64e6\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u4fee\u6539\u8f66\u8f86\u7684\u9053\u8def\u64cd\u63a7\u884c\u4e3a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u8bbe\u7f6e\u4e3a 3.5\uff0c\u8be5\u503c\u9002\u5408\u5927\u591a\u6570\u8f66\u8f86\u4f7f\u7528\u60c5\u51b5\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u5bf9\u5e26\u6709\u5149\u5934\u8f6e\u80ce\u7684\u8d5b\u8f66\u8fdb\u884c\u5efa\u6a21\uff0c\u5219\u8fd9\u5c06\u662f\u9700\u8981\u8c03\u6574\u7684\u9002\u5f53\u53c2\u6570\u3002","title":"\u8f6e\u80ce\u914d\u7f6e"},{"location":"tuto_content_authoring_vehicles/#_23","text":"\u63a5\u4e0b\u6765\uff0c\u5728\u4e09\u7ef4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6d4b\u91cf\u8f66\u8f6e\u7684\u76f4\u5f84\u3002\u5728 Blender \u4e2d\uff0c\u53ef\u4ee5\u5728\u5bf9\u8c61\u6a21\u5f0f\u4e0b\u6309 n \u6253\u5f00\u7684\u5c5e\u6027\u9762\u677f\u4e2d\u67e5\u770b\u5c3a\u5bf8\u3002 \u73b0\u5728\u5c06\u8fd9\u4e9b\u6570\u5b57\u63d2\u5165\u5230 Wheel \u84dd\u56fe\u7684\u90e8\u5206\u4e2d\u3002\u8bf7\u6ce8\u610f\u534a\u5f84\u4e3a\u76f4\u5f84\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u865a\u5e7b\u7f16\u8f91\u5668\u4ee5\u5398\u7c73\u4e3a\u5355\u4f4d\u3002\u5bf9\u4e8e\u8f66\u8f6e\u8d28\u91cf\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u4e92\u8054\u7f51\u4e0a\u67e5\u627e\u89c4\u683c\uff0c\u627e\u5230\u6b63\u786e\u7684\u8f6e\u80ce\u578b\u53f7\u6216\u7c7b\u4f3c\u7684\u8f6e\u80ce\u578b\u53f7\u6765\u4f30\u8ba1\u6b63\u786e\u7684\u8d28\u91cf\uff08\u4ee5\u5343\u514b\u4e3a\u5355\u4f4d\uff09\u3002 Affected by handbrake \u5e94\u68c0\u67e5\u4e24\u4e2a\u540e\u8f6e\u3002 Steer angle \u5bf9\u4e8e\u4e24\u4e2a\u524d\u8f6e\u5e94\u8bbe\u7f6e\u4e3a\u6700\u5927\u9884\u671f\u8f6c\u5411\u89d2\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u540e\u8f6e\u5e94\u8bbe\u7f6e\u4e3a\u96f6\u3002","title":"\u8f66\u8f6e\u5c3a\u5bf8"},{"location":"tuto_content_authoring_vehicles/#_24","text":"\u8fd9\u91cc\u7684\u9ed8\u8ba4\u503c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5408\u7406\u7684\u8d77\u70b9\u3002\u67e5\u770b \u672c\u6307\u5357 \u4ee5\u8bbe\u7f6e\u9002\u5408\u60a8\u8f66\u8f86\u7c7b\u578b\u7684\u60ac\u67b6\u7279\u6027\u3002","title":"\u60ac\u67b6\u7279\u6027"},{"location":"tuto_content_authoring_vehicles/#_25","text":"\u5b8c\u6210 CARLA \u771f\u5b9e\u8f66\u8f86\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u706f\u3001\u524d\u706f\u3001\u5239\u8f66\u706f\u3001\u95ea\u5149\u706f\u7b49\u3002\u5728\u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u5e94\u8be5\u5bf9\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u60a8\u8981\u590d\u5236\u7684\u8f66\u8f86\u706f\u7684\u5f62\u72b6\u8fdb\u884c\u5efa\u6a21\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u8f66\u5934\u706f\u6765\u8bf4\uff0c\u8fd9\u5c06\u662f\u6241\u5e73\u5706\u76d8\u6216\u6241\u5e73\u957f\u65b9\u4f53\u7ed3\u6784\u3002\u6709\u4e9b\u8f66\u8f86\u53ef\u80fd\u8fd8\u914d\u6709 LED \u706f\u6761\u3002","title":"\u706f"},{"location":"tuto_content_authoring_vehicles/#uv","text":"\u4e0d\u540c\u7c7b\u578b\u7684\u706f\uff08\u524d\u706f\u3001\u95ea\u5149\u706f\u3001\u5239\u8f66\u706f\u7b49\uff09\u4f7f\u7528\u7eb9\u7406\u6765\u533a\u5206\u3002\u60a8\u9700\u8981\u5728 \u4e09\u7ef4\u5efa\u6a21\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521b\u5efa UV \u8d34\u56fe\uff0c\u5e76\u5b9a\u4f4d\u706f\u5149\u4ee5\u4e0e\u7eb9\u7406\u7684\u76f8\u5173\u533a\u57df\u76f8\u5339\u914d\u3002","title":"UV \u8d34\u56fe"},{"location":"tuto_content_authoring_vehicles/#_26","text":"\u5c06\u706f\u5149\u7f51\u683c\u5bfc\u5165\u865a\u5e7b\u7f16\u8f91\u5668 - \u5bfc\u5165\u706f\u5149\u7f51\u683c\u540e\uff1a \u5c06\u7f51\u683c\u7269\u4f53\u62d6\u52a8\u5230 Components \u9762\u677f\u4e2d\u7684 Mesh (VehicleMesh) (Inherited) \u5c42\u6b21\u7ed3\u6784\u4e2d\u3002 \u9009\u62e9\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u989d\u5916\u7f51\u683c\u5e76\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u641c\u7d22 Collision \u3002 \u5c06\u78b0\u649e\u9884\u8bbe( Collision Presets )\u8bbe\u7f6e\u4e3a NoCollision \u3002 \u9009\u62e9\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u4efb\u4f55\u706f\u5149\u7f51\u683c\u3002\u5728\u201c\u8be6\u7ec6\u4fe1\u606f( Details )\u201d\u9762\u677f\u4e2d\u641c\u7d22 Tag \u5e76\u6dfb\u52a0 emissive \u6807\u7b7e\u3002","title":"\u5bfc\u5165"},{"location":"tuto_content_authoring_vehicles_materials/","text":"\u5185\u5bb9\u521b\u4f5c - \u8f66\u8f86\u6750\u6599 \u5c06\u8f66\u8f86\u4f5c\u4e3a\u57fa\u672c\u8d44\u4ea7\u5bfc\u5165\u5e76\u5e03\u7f6e\u597d\u7f51\u683c\u548c\u84dd\u56fe\u540e\uff0c\u60a8\u73b0\u5728\u9700\u8981\u5411\u8f66\u8f86\u6dfb\u52a0\u6750\u8d28\uff0c\u4ee5\u4fc3\u8fdb\u865a\u5e7b\u5f15\u64ce\u4e2d\u7684\u7167\u7247\u7ea7\u771f\u5b9e\u611f\u6e32\u67d3\uff0c\u4ece\u800c\u5b9e\u73b0\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6570\u636e\u7684\u6700\u5927\u4fdd\u771f\u5ea6\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u62e5\u6709\u5168\u9762\u7684\u6750\u8d28\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6709\u52a9\u4e8e\u521b\u5efa\u9ad8\u5ea6\u903c\u771f\u7684\u6750\u8d28\u3002\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u663e\u7740\u589e\u52a0\u4e86\u8be5\u8fc7\u7a0b\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5927\u578b\u6750\u6599\u539f\u578b\u5e93\u4f9b\u60a8\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u4ece\u5934\u5f00\u59cb\u3002 \u5c06\u6750\u6599\u5e94\u7528\u5230\u60a8\u7684\u8f66\u8f86\u4e0a CARLA \u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u590d\u5236\u8f66\u8f86\u5149\u6cfd\u8868\u9762\u7684\u539f\u578b\u6750\u6599\uff0c\u53ef\u4ee5\u6a21\u4eff\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u55b7\u6f06\u5de5\u4f5c\u548c\u529f\u80fd\u3002\u6253\u5f00\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u627e\u5230 Content > Carla > Static > GenericMaterials > 00_MastersOpt \u3002\u57fa\u672c\u6750\u8d28\u79f0\u4e3a M_CarPaint_Master \u3002\u53f3\u952e\u5355\u51fb\u8be5\u6750\u8d28\u5e76\u4ece\u4e0a\u4e0b\u6587\u6750\u8d28\u4e2d\u9009\u62e9 Create Material Instance \u3002\u4e3a\u5176\u547d\u540d\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u5b58\u50a8\u65b0\u8f66\u8f86\u5185\u5bb9\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u89c2\u5bdf\u5219\u4f1a\u79fb\u52a8\u5230\u9760\u8fd1\u5730\u677f\u7684\u4e00\u70b9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u573a\u666f\u4e2d\uff0c\u8f66\u8f86\u7684\u8f66\u8eab\u73b0\u5728\u5c06\u51fa\u73b0\u5728\u90a3\u91cc\u3002 \u73b0\u5728\uff0c\u5728\u53f3\u4fa7\u7684\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\uff0c\u5c06\u65b0\u6750\u8d28\u5b9e\u4f8b\u62d6\u52a8\u5230 Materials \u90e8\u5206\u7684 Element 0 \u4f4d\u7f6e\u3002\u60a8\u5c06\u770b\u5230\u8f66\u8eab\u5448\u73b0\u51fa\u4e00\u79cd\u65b0\u7684\u7070\u8272\u3001\u6709\u5149\u6cfd\u7684\u6750\u6599\u7279\u6027\u3002 \u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u6750\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8f91\u53c2\u6570\u4e86\u3002\u8fd9\u91cc\u6709\u8bb8\u591a\u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u7684\u6c7d\u8f66\u55b7\u6f06\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u6700\u91cd\u8981\u7684\u53c2\u6570\u5982\u4e0b\u3002 \u989c\u8272(Color) - \u989c\u8272\u8bbe\u7f6e\u63a7\u5236\u6c7d\u8f66\u7684\u6574\u4f53\u989c\u8272\u3002\u57fa\u8272\u53ea\u662f\u6c7d\u8f66\u7684\u4e3b\u8981\u989c\u8272\uff0c\u5b83\u5c06\u63a7\u5236\u6574\u4f53\u989c\u8272\uff1a \u900f\u660e\u6d82\u5c42(Clear coat) - \u900f\u660e\u6d82\u5c42\u8bbe\u7f6e\u63a7\u5236\u9970\u9762\u7684\u5916\u89c2\u53ca\u5176\u5bf9\u5149\u7684\u53cd\u5e94\u3002\u7c97\u7cd9\u5ea6\u4f7f\u7528\u7eb9\u7406\u5c06\u7f3a\u9677\u5e94\u7528\u5230\u8f66\u8f86\u8868\u9762\uff0c\u4ee5\u66f4\u9ad8\u7684\u503c\u6563\u5c04\u66f4\u591a\u7684\u5149\uff0c\u4ee5\u521b\u5efa\u54d1\u5149\u5916\u89c2\u3002\u5efa\u8bae\u8fdb\u884c\u5fae\u5999\u7684\u8c03\u6574\u548c\u8f83\u4f4e\u7684\u503c\u4ee5\u83b7\u5f97\u903c\u771f\u7684\u5916\u89c2\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6c7d\u8f66\u55b7\u6f06\u4f5c\u4e1a\u662f\u5149\u6ed1\u4e14\u53cd\u5149\u7684\uff0c\u4f46\u662f\uff0c\u8fd9\u79cd\u6548\u679c\u53ef\u80fd\u66f4\u5e7f\u6cdb\u5730\u7528\u4e8e\u5bf9\u5b9a\u5236\u55b7\u6f06\u4f5c\u4e1a\u7684\u4e13\u4e1a\u54d1\u5149\u9970\u9762\u8fdb\u884c\u5efa\u6a21\u3002 \u63a7\u5236\u6c7d\u8f66\u201c\u5149\u6cfd\u5ea6\u201d\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f\u900f\u660e\u6d82\u5c42\u5f3a\u5ea6( Clear Coat Intensity )\u3002\u63a5\u8fd1 1 \u7684\u9ad8\u503c\u5c06\u4f7f\u6d82\u5c42\u95ea\u4eae\u4e14\u6709\u5149\u6cfd\u3002 \u7c92\u72b6\u8868\u9762(Orange peel) - \u771f\u5b9e\u6c7d\u8f66\u7684\u9970\u9762\uff08\u7279\u522b\u662f\u9762\u5411\u4e00\u822c\u5e02\u573a\u7684\u6279\u91cf\u751f\u4ea7\u7684\u6c7d\u8f66\uff09\u5f80\u5f80\u5b58\u5728\u7f3a\u9677\uff0c\u8868\u73b0\u4e3a\u6cb9\u6f06\u4e2d\u7684\u8f7b\u5fae\u6ce2\u7eb9\u3002\u6a59\u76ae\u6548\u679c\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f7f\u6c7d\u8f66\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002 \u8584\u7247(Flakes) - \u6709\u4e9b\u6c7d\u8f66\u7684\u6cb9\u6f06\u5de5\u4f5c\u4e2d\u5305\u542b\u5176\u4ed6\u6750\u6599\u7684\u8584\u7247\uff0c\u4f8b\u5982\u91d1\u5c5e\u6216\u9676\u74f7\uff0c\u4ee5\u4f7f\u6c7d\u8f66\u5177\u6709 metallic \u6216 pearlescant \u5916\u89c2\uff0c\u589e\u52a0\u989d\u5916\u7684\u95ea\u5149\u548c\u53cd\u5c04\uff0c\u4ee5\u6709\u5438\u5f15\u529b\u7684\u65b9\u5f0f\u4e0e\u5149\u53cd\u5e94\u3002\u8584\u7247\u53c2\u6570\u5141\u8bb8 CARLA \u4eff\u771f\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u6a21\u4eff\u91d1\u5c5e\u9970\u9762\uff0c\u5b83\u4f1a\u662f \u7070\u5c18(Dust) - \u6c7d\u8f66\u7684\u8f66\u8eab\u4e0a\u7ecf\u5e38\u4f1a\u79ef\u805a\u6cb9\u8102\u548c\u7070\u5c18\uff0c\u4ece\u800c\u589e\u52a0\u6cb9\u6f06\u7684\u8d28\u611f\uff0c\u5f71\u54cd\u5176\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5f0f\u3002\u7070\u5c18\u53c2\u6570\u5141\u8bb8\u60a8\u5728\u6d82\u5c42\u4e0a\u6dfb\u52a0\u7834\u574f\u5757\uff0c\u4ee5\u4eff\u771f\u7c98\u9644\u5728\u6cb9\u6f06\u4e0a\u7684\u5f02\u7269\u3002","title":"Tuto content authoring vehicles materials"},{"location":"tuto_content_authoring_vehicles_materials/#-","text":"\u5c06\u8f66\u8f86\u4f5c\u4e3a\u57fa\u672c\u8d44\u4ea7\u5bfc\u5165\u5e76\u5e03\u7f6e\u597d\u7f51\u683c\u548c\u84dd\u56fe\u540e\uff0c\u60a8\u73b0\u5728\u9700\u8981\u5411\u8f66\u8f86\u6dfb\u52a0\u6750\u8d28\uff0c\u4ee5\u4fc3\u8fdb\u865a\u5e7b\u5f15\u64ce\u4e2d\u7684\u7167\u7247\u7ea7\u771f\u5b9e\u611f\u6e32\u67d3\uff0c\u4ece\u800c\u5b9e\u73b0\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u6570\u636e\u7684\u6700\u5927\u4fdd\u771f\u5ea6\u3002 \u865a\u5e7b\u7f16\u8f91\u5668\u62e5\u6709\u5168\u9762\u7684\u6750\u8d28\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6709\u52a9\u4e8e\u521b\u5efa\u9ad8\u5ea6\u903c\u771f\u7684\u6750\u8d28\u3002\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u663e\u7740\u589e\u52a0\u4e86\u8be5\u8fc7\u7a0b\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0cCARLA \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5927\u578b\u6750\u6599\u539f\u578b\u5e93\u4f9b\u60a8\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u4ece\u5934\u5f00\u59cb\u3002","title":"\u5185\u5bb9\u521b\u4f5c - \u8f66\u8f86\u6750\u6599"},{"location":"tuto_content_authoring_vehicles_materials/#_1","text":"CARLA \u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u590d\u5236\u8f66\u8f86\u5149\u6cfd\u8868\u9762\u7684\u539f\u578b\u6750\u6599\uff0c\u53ef\u4ee5\u6a21\u4eff\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8f66\u8f86\u55b7\u6f06\u5de5\u4f5c\u548c\u529f\u80fd\u3002\u6253\u5f00\u865a\u5e7b\u7f16\u8f91\u5668\u5e76\u5728\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\uff0c\u627e\u5230 Content > Carla > Static > GenericMaterials > 00_MastersOpt \u3002\u57fa\u672c\u6750\u8d28\u79f0\u4e3a M_CarPaint_Master \u3002\u53f3\u952e\u5355\u51fb\u8be5\u6750\u8d28\u5e76\u4ece\u4e0a\u4e0b\u6587\u6750\u8d28\u4e2d\u9009\u62e9 Create Material Instance \u3002\u4e3a\u5176\u547d\u540d\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u5b58\u50a8\u65b0\u8f66\u8f86\u5185\u5bb9\u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5728\u865a\u5e7b\u7f16\u8f91\u5668\u4e2d\uff0c\u5c06\u89c2\u5bdf\u5219\u4f1a\u79fb\u52a8\u5230\u9760\u8fd1\u5730\u677f\u7684\u4e00\u70b9\uff0c\u7136\u540e\u5c06\u8f66\u8f86\u7684\u9aa8\u67b6\u7f51\u683c\u7269\u4f53\u4ece\u5185\u5bb9\u6d4f\u89c8\u5668\u62d6\u5230\u573a\u666f\u4e2d\uff0c\u8f66\u8f86\u7684\u8f66\u8eab\u73b0\u5728\u5c06\u51fa\u73b0\u5728\u90a3\u91cc\u3002 \u73b0\u5728\uff0c\u5728\u53f3\u4fa7\u7684\u8be6\u7ec6\u4fe1\u606f\u9762\u677f\u4e2d\uff0c\u5c06\u65b0\u6750\u8d28\u5b9e\u4f8b\u62d6\u52a8\u5230 Materials \u90e8\u5206\u7684 Element 0 \u4f4d\u7f6e\u3002\u60a8\u5c06\u770b\u5230\u8f66\u8eab\u5448\u73b0\u51fa\u4e00\u79cd\u65b0\u7684\u7070\u8272\u3001\u6709\u5149\u6cfd\u7684\u6750\u6599\u7279\u6027\u3002 \u53cc\u51fb\u5185\u5bb9\u6d4f\u89c8\u5668\u4e2d\u7684\u6750\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8f91\u53c2\u6570\u4e86\u3002\u8fd9\u91cc\u6709\u8bb8\u591a\u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u7684\u6c7d\u8f66\u55b7\u6f06\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u6700\u91cd\u8981\u7684\u53c2\u6570\u5982\u4e0b\u3002 \u989c\u8272(Color) - \u989c\u8272\u8bbe\u7f6e\u63a7\u5236\u6c7d\u8f66\u7684\u6574\u4f53\u989c\u8272\u3002\u57fa\u8272\u53ea\u662f\u6c7d\u8f66\u7684\u4e3b\u8981\u989c\u8272\uff0c\u5b83\u5c06\u63a7\u5236\u6574\u4f53\u989c\u8272\uff1a \u900f\u660e\u6d82\u5c42(Clear coat) - \u900f\u660e\u6d82\u5c42\u8bbe\u7f6e\u63a7\u5236\u9970\u9762\u7684\u5916\u89c2\u53ca\u5176\u5bf9\u5149\u7684\u53cd\u5e94\u3002\u7c97\u7cd9\u5ea6\u4f7f\u7528\u7eb9\u7406\u5c06\u7f3a\u9677\u5e94\u7528\u5230\u8f66\u8f86\u8868\u9762\uff0c\u4ee5\u66f4\u9ad8\u7684\u503c\u6563\u5c04\u66f4\u591a\u7684\u5149\uff0c\u4ee5\u521b\u5efa\u54d1\u5149\u5916\u89c2\u3002\u5efa\u8bae\u8fdb\u884c\u5fae\u5999\u7684\u8c03\u6574\u548c\u8f83\u4f4e\u7684\u503c\u4ee5\u83b7\u5f97\u903c\u771f\u7684\u5916\u89c2\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6c7d\u8f66\u55b7\u6f06\u4f5c\u4e1a\u662f\u5149\u6ed1\u4e14\u53cd\u5149\u7684\uff0c\u4f46\u662f\uff0c\u8fd9\u79cd\u6548\u679c\u53ef\u80fd\u66f4\u5e7f\u6cdb\u5730\u7528\u4e8e\u5bf9\u5b9a\u5236\u55b7\u6f06\u4f5c\u4e1a\u7684\u4e13\u4e1a\u54d1\u5149\u9970\u9762\u8fdb\u884c\u5efa\u6a21\u3002 \u63a7\u5236\u6c7d\u8f66\u201c\u5149\u6cfd\u5ea6\u201d\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f\u900f\u660e\u6d82\u5c42\u5f3a\u5ea6( Clear Coat Intensity )\u3002\u63a5\u8fd1 1 \u7684\u9ad8\u503c\u5c06\u4f7f\u6d82\u5c42\u95ea\u4eae\u4e14\u6709\u5149\u6cfd\u3002 \u7c92\u72b6\u8868\u9762(Orange peel) - \u771f\u5b9e\u6c7d\u8f66\u7684\u9970\u9762\uff08\u7279\u522b\u662f\u9762\u5411\u4e00\u822c\u5e02\u573a\u7684\u6279\u91cf\u751f\u4ea7\u7684\u6c7d\u8f66\uff09\u5f80\u5f80\u5b58\u5728\u7f3a\u9677\uff0c\u8868\u73b0\u4e3a\u6cb9\u6f06\u4e2d\u7684\u8f7b\u5fae\u6ce2\u7eb9\u3002\u6a59\u76ae\u6548\u679c\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f7f\u6c7d\u8f66\u770b\u8d77\u6765\u66f4\u771f\u5b9e\u3002 \u8584\u7247(Flakes) - \u6709\u4e9b\u6c7d\u8f66\u7684\u6cb9\u6f06\u5de5\u4f5c\u4e2d\u5305\u542b\u5176\u4ed6\u6750\u6599\u7684\u8584\u7247\uff0c\u4f8b\u5982\u91d1\u5c5e\u6216\u9676\u74f7\uff0c\u4ee5\u4f7f\u6c7d\u8f66\u5177\u6709 metallic \u6216 pearlescant \u5916\u89c2\uff0c\u589e\u52a0\u989d\u5916\u7684\u95ea\u5149\u548c\u53cd\u5c04\uff0c\u4ee5\u6709\u5438\u5f15\u529b\u7684\u65b9\u5f0f\u4e0e\u5149\u53cd\u5e94\u3002\u8584\u7247\u53c2\u6570\u5141\u8bb8 CARLA \u4eff\u771f\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u6a21\u4eff\u91d1\u5c5e\u9970\u9762\uff0c\u5b83\u4f1a\u662f \u7070\u5c18(Dust) - \u6c7d\u8f66\u7684\u8f66\u8eab\u4e0a\u7ecf\u5e38\u4f1a\u79ef\u805a\u6cb9\u8102\u548c\u7070\u5c18\uff0c\u4ece\u800c\u589e\u52a0\u6cb9\u6f06\u7684\u8d28\u611f\uff0c\u5f71\u54cd\u5176\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5f0f\u3002\u7070\u5c18\u53c2\u6570\u5141\u8bb8\u60a8\u5728\u6d82\u5c42\u4e0a\u6dfb\u52a0\u7834\u574f\u5757\uff0c\u4ee5\u4eff\u771f\u7c98\u9644\u5728\u6cb9\u6f06\u4e0a\u7684\u5f02\u7269\u3002","title":"\u5c06\u6750\u6599\u5e94\u7528\u5230\u60a8\u7684\u8f66\u8f86\u4e0a"},{"location":"tuto_first_steps/","text":"First steps with CARLA The CARLA simulator is a comprehensive solution for producing synthetic training data for applications in autonomous driving (AD) and also other robotics applications. CARLA simulates a highly realistic environment emulating real world towns, cities and highways and the vehicles and other objects that occupy these driving spaces. The CARLA simulator is further useful as an evaluation and testing environment. You can deploy the AD agents you have trained within the simulation to test and evaluate their performance and safety, all within the security of a simulated environment, with no risk to hardware or other road users. In this tutorial, we will cover a standard workflow in CARLA, from launching the server and connecting the client, through to adding vehicles, sensors and generating training data to use for machine learning. This tutorial is meant to be light on details and go as efficiently as possible through the key steps in using CARLA to produce machine learning training data. For further details on each part of the workflow, such as the multitude of vehicles available in the blueprint library or the alternative types of sensors available, please consult the links in the text or browse the left menu. Launching CARLA Loading a map Spectator navigation Adding NPCs Add sensors Animate vehicles Assign a vehicle as the Ego Vehicle Choose your map Choose your vehicles Launching CARLA and connecting the client CARLA can be launched using the command line using the executable in Windows or the shell script in Linux. Follow the installation instructions for Linux and Windows then launch CARLA from the command line: cd /carla/root ./CarlaUE4.sh To manipulate CARLA through the Python API, we need to connect the Python client to the server through an open port. The client controls the simulator through the client and world objects Open a Python notebook or create a new script, then add the following code to the start of the script or the main function: import carla import random # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() The client object serves to maintain the client's connection to the server and has a number of functions for applying commands and loading or exporting data. We can load an alternative map or reload the current one (resetting to initial state) using the client object. The port can be chosen as any available port and is set to 2000 by default, you can also choose a host different from localhost by using a computer's IP address. This way, the CARLA server can be run on a networked machine, while the python client can be run from a personal computer. This is particularly useful for differentiating the GPU used for running the CARLA simulator and that used for neural network training, both of which can be highly demanding on graphics hardware. Note The following presumes that CARLA is running in the default asynchronous mode. If you have engaged synchronous mode, some of the code in the following sections might not work as expected. Loading a map In the CARLA API, the world object provides access to all elements of the simulation, including the map, objects within the map, such as buildings, traffic lights, vehicles and pedestrians. The CARLA server normally loads a default map (normally Town10). If you want to launch CARLA with an alternate map, use the config.py script: ./config.py --map Town05 We can also use the world object to load a map from the client: client.load_world('Town05') Please find more information about CARLA maps here . Spectator navigation The spectator is a view into the simulation. By default, the spectator opens in a new window when you run the CARLA server on a computer with a screen attached, unless you specify the -RenderOffScreen command line option. The spectator is helpful to visualize your simulation. Using the spectator, you can familiarize yourself with the map you've loaded, and see the result of any changes you are making, such as adding vehicles, changing the weather, turning on/off various layers of the map and for debugging purposes. You can fly the spectator around the world using the mouse to control the pitch and yaw of the spectator view and the QWE-ASD keys to move the spectator: Q - move upwards (towards the top edge of the window) E - move downwards (towards the lower edge of the window) W - move forwards S - move backwards A - move left D - move right Left click and drag the mouse in the spectator window up and down to control pitch and left and right to control yaw. The spectator and its properties can be accessed and manipulated through the Python API: # Retrieve the spectator object spectator = world.get_spectator() # Get the location and rotation of the spectator through its transform transform = spectator.get_transform() location = transform.location rotation = transform.rotation # Set the spectator with an empty transform spectator.set_transform(carla.Transform()) # This will set the spectator at the origin of the map, with 0 degrees # pitch, yaw and roll - a good way to orient yourself in the map Adding NPCs Now we've loaded the map and the server is up and running we now need to populate our simulation with some vehicles to simulate a real environment with traffic and other road users or non-player characters (NPCs). To spawn vehicles, first, we need to select the vehicles we want from the blueprint library. # Get the blueprint library and filter for the vehicle blueprints vehicle_blueprints = world.get_blueprint_library().filter('*vehicle*') Now we have the blueprints, we need to find some appropriate spots in the map to spawn our vehicles. Each CARLA map provides pre-defined spawn points spread evenly throughout the map on the roads for this purpose. # Get the map's spawn points spawn_points = world.get_map().get_spawn_points() # Spawn 50 vehicles randomly distributed throughout the map # for each spawn point, we choose a random vehicle from the blueprint library for i in range(0,50): world.try_spawn_actor(random.choice(vehicle_blueprints), random.choice(spawn_points)) Now we should also add a vehicle that will be the centerpoint of our simulation. To train an autonomous agent we need to simulate a the vehicle that it the autonomous agent will control. In CARLA parlance, we often refer to this vehicle as the \"Ego vehicle\". ego_vehicle = world.spawn_actor(random.choice(vehicle_blueprints), random.choice(spawn_points)) In addition to vehicles, CARLA also provides pedestrians to add to simulations to simulate realistic driving scenarios. Vehicles and pedestrians are referred to as actors in the CARLA parlance, learn more about them here . Add sensors Modern autonomous vehicles understand and interpret their environment through an array of attached sensors. These sensors include things such as optical video cameras, optical flow cameras, LIDARs, RADARs and accelerometers. CARLA has models of numerous types of sensors built in to create training data for machine learning. The sensors can be attached to a vehicle, or they can be attached to a fixed point to model for example a CCTV camera. Here we will attach a standard camera sensor to the ego vehicle to record some video data: # Create a transform to place the camera on top of the vehicle camera_init_trans = carla.Transform(carla.Location(z=1.5)) # We create the camera through a blueprint that defines its properties camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') # We spawn the camera and attach it to our ego vehicle camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) Once we have spawned the camera, we need to set it recording through the listen() method. The listen method takes as argument a callback that defines what to do with the data. You can either stream it to another program or save it to disk. We will use a lambda function as a callback to save the data to disk: # Start camera with PyGame callback camera.listen(lambda image: image.save_to_disk('out/%06d.png' % image.frame)) This will save the data to the out/ folder as a series of PNG image files named according to the simulation frame number. There are a multitude of different types of sensors to choose from. Here you can delve deeper into the array of sensors available and how to use them. Animate vehicles with traffic manager Now we've added our traffic and ego vehicle to the simulation and started recording camera data, we now need to set the vehicles in motion using the Traffic manager . The Traffic manager is a component of CARLA that controls vehicles to autonomously move around the roads of the map within the simulation, following the road conventions and behaving like real road users. We can find all the vehicles in the simulation using the world.get_actors() method, filtering for all the vehicles. We can then use the set_autopilot() method to hand over control of the vehicle to the Traffic Manager. for vehicle in world.get_actors().filter('*vehicle*'): vehicle.set_autopilot(True) Now your simulation is running, with numerous vehicles driving around the map and a camera recording data from one of those vehicles. This data can then be used to feed a machine learning algorithm for training an autonomous driving agent. The Traffic manager has many functions for customising traffic behaviour, learn more here . This is the most basic possible set up for a simulation, now you can go into further details deeper into documentation about the many extra sensors you can use to generate data, and the many other features of CARLA that can make your simulations more detailed and more realistic. Assign a vehicle as the Ego Vehicle The Ego Vehicle is an important concept to bear in mind when using CARLA. The Ego Vehicle refers to the vehicle that will be the focus of the simulation. In most CARLA use cases it's likely to be the vehicle to which you will attach your sensors and/or the vehicle that your autonomous driving machine learning stack will control. It is important because it serves as the basis for some simulation operations that help improve the efficiency of the simulation, like for example: Loading map tiles for Large Maps : Large Maps (like Town 12) are made up of tiles to that are only loaded when needed to improve CARLA performance. The position of the Ego Vehicle dictates which tiles are used. Only the tiles nearest the Ego Vehicle will be loaded. Hybrid Physics Mode : if your simulation contains a lot of vehicles controlled by the Traffic Manager, calculating physics for all of these vehicles is very computationally expensive. The Hybrid Physics Mode enables physics calculation to be limited to the vehicles in the vicinity of the Ego Vehicle, hence saving computing resources. To define the Ego Vehicle, you should set the role_name attribute of the vehicle carla.Actor object's blueprint when you are spawning your Ego Vehicle: ego_bp = world.get_blueprint_library().find('vehicle.lincoln.mkz_2020') ego_bp.set_attribute('role_name', 'hero') ego_vehicle = world.spawn_actor(ego_bp, random.choice(spawn_points)) Choose your map CARLA comes loaded with several pre-made maps focused on providing a diversity of features. The maps present a range of environments such as urban, rural and residential. There are also differing architectural styles and also a multitude of different road layouts from unmarked rural roads to multi-lane highways. Browse the map guides in the catalogue or in the table below. Town Summary Town01 A small, simple town with a river and several bridges. Town02 A small simple town with a mixture of residential and commercial buildings. Town03 A larger, urban map with a roundabout and large junctions. Town04 A small town embedded in the mountains with a special \"figure of 8\" infinite highway. Town05 Squared-grid town with cross junctions and a bridge. It has multiple lanes per direction. Useful to perform lane changes. Town06 Long many lane highways with many highway entrances and exits. It also has a Michigan left . Town07 A rural environment with narrow roads, corn, barns and hardly any traffic lights. Town08 Secret \"unseen\" town used for the Leaderboard challenge Town09 Secret \"unseen\" town used for the Leaderboard challenge Town10 A downtown urban environment with skyscrapers, residential buildings and an ocean promenade. Town11 A Large Map that is undecorated. Town12 A Large Map with numerous different regions, including high-rise, residential and rural environments. You can browse the available maps in your CARLA installation: client.get_available_maps() This will include maps that you have built yourself or imported. When you choose a map, load it like so: client.load_world('Town03_Opt') Choose your vehicles CARLA provides a library of vehicles to fill your simulation with traffic. Browse the vehicle models in the CARLA vehicle catalogue . You can see all available vehicle blueprints by filtering the blueprint library. for bp in world.get_blueprint_library().filter('vehicle'): print(bp.id)","title":"\u7b2c\u4e00\u6b65"},{"location":"tuto_first_steps/#first-steps-with-carla","text":"The CARLA simulator is a comprehensive solution for producing synthetic training data for applications in autonomous driving (AD) and also other robotics applications. CARLA simulates a highly realistic environment emulating real world towns, cities and highways and the vehicles and other objects that occupy these driving spaces. The CARLA simulator is further useful as an evaluation and testing environment. You can deploy the AD agents you have trained within the simulation to test and evaluate their performance and safety, all within the security of a simulated environment, with no risk to hardware or other road users. In this tutorial, we will cover a standard workflow in CARLA, from launching the server and connecting the client, through to adding vehicles, sensors and generating training data to use for machine learning. This tutorial is meant to be light on details and go as efficiently as possible through the key steps in using CARLA to produce machine learning training data. For further details on each part of the workflow, such as the multitude of vehicles available in the blueprint library or the alternative types of sensors available, please consult the links in the text or browse the left menu. Launching CARLA Loading a map Spectator navigation Adding NPCs Add sensors Animate vehicles Assign a vehicle as the Ego Vehicle Choose your map Choose your vehicles","title":"First steps with CARLA"},{"location":"tuto_first_steps/#launching-carla-and-connecting-the-client","text":"CARLA can be launched using the command line using the executable in Windows or the shell script in Linux. Follow the installation instructions for Linux and Windows then launch CARLA from the command line: cd /carla/root ./CarlaUE4.sh To manipulate CARLA through the Python API, we need to connect the Python client to the server through an open port. The client controls the simulator through the client and world objects Open a Python notebook or create a new script, then add the following code to the start of the script or the main function: import carla import random # Connect to the client and retrieve the world object client = carla.Client('localhost', 2000) world = client.get_world() The client object serves to maintain the client's connection to the server and has a number of functions for applying commands and loading or exporting data. We can load an alternative map or reload the current one (resetting to initial state) using the client object. The port can be chosen as any available port and is set to 2000 by default, you can also choose a host different from localhost by using a computer's IP address. This way, the CARLA server can be run on a networked machine, while the python client can be run from a personal computer. This is particularly useful for differentiating the GPU used for running the CARLA simulator and that used for neural network training, both of which can be highly demanding on graphics hardware. Note The following presumes that CARLA is running in the default asynchronous mode. If you have engaged synchronous mode, some of the code in the following sections might not work as expected.","title":"Launching CARLA and connecting the client"},{"location":"tuto_first_steps/#loading-a-map","text":"In the CARLA API, the world object provides access to all elements of the simulation, including the map, objects within the map, such as buildings, traffic lights, vehicles and pedestrians. The CARLA server normally loads a default map (normally Town10). If you want to launch CARLA with an alternate map, use the config.py script: ./config.py --map Town05 We can also use the world object to load a map from the client: client.load_world('Town05') Please find more information about CARLA maps here .","title":"Loading a map"},{"location":"tuto_first_steps/#spectator-navigation","text":"The spectator is a view into the simulation. By default, the spectator opens in a new window when you run the CARLA server on a computer with a screen attached, unless you specify the -RenderOffScreen command line option. The spectator is helpful to visualize your simulation. Using the spectator, you can familiarize yourself with the map you've loaded, and see the result of any changes you are making, such as adding vehicles, changing the weather, turning on/off various layers of the map and for debugging purposes. You can fly the spectator around the world using the mouse to control the pitch and yaw of the spectator view and the QWE-ASD keys to move the spectator: Q - move upwards (towards the top edge of the window) E - move downwards (towards the lower edge of the window) W - move forwards S - move backwards A - move left D - move right Left click and drag the mouse in the spectator window up and down to control pitch and left and right to control yaw. The spectator and its properties can be accessed and manipulated through the Python API: # Retrieve the spectator object spectator = world.get_spectator() # Get the location and rotation of the spectator through its transform transform = spectator.get_transform() location = transform.location rotation = transform.rotation # Set the spectator with an empty transform spectator.set_transform(carla.Transform()) # This will set the spectator at the origin of the map, with 0 degrees # pitch, yaw and roll - a good way to orient yourself in the map","title":"Spectator navigation"},{"location":"tuto_first_steps/#adding-npcs","text":"Now we've loaded the map and the server is up and running we now need to populate our simulation with some vehicles to simulate a real environment with traffic and other road users or non-player characters (NPCs). To spawn vehicles, first, we need to select the vehicles we want from the blueprint library. # Get the blueprint library and filter for the vehicle blueprints vehicle_blueprints = world.get_blueprint_library().filter('*vehicle*') Now we have the blueprints, we need to find some appropriate spots in the map to spawn our vehicles. Each CARLA map provides pre-defined spawn points spread evenly throughout the map on the roads for this purpose. # Get the map's spawn points spawn_points = world.get_map().get_spawn_points() # Spawn 50 vehicles randomly distributed throughout the map # for each spawn point, we choose a random vehicle from the blueprint library for i in range(0,50): world.try_spawn_actor(random.choice(vehicle_blueprints), random.choice(spawn_points)) Now we should also add a vehicle that will be the centerpoint of our simulation. To train an autonomous agent we need to simulate a the vehicle that it the autonomous agent will control. In CARLA parlance, we often refer to this vehicle as the \"Ego vehicle\". ego_vehicle = world.spawn_actor(random.choice(vehicle_blueprints), random.choice(spawn_points)) In addition to vehicles, CARLA also provides pedestrians to add to simulations to simulate realistic driving scenarios. Vehicles and pedestrians are referred to as actors in the CARLA parlance, learn more about them here .","title":"Adding NPCs"},{"location":"tuto_first_steps/#add-sensors","text":"Modern autonomous vehicles understand and interpret their environment through an array of attached sensors. These sensors include things such as optical video cameras, optical flow cameras, LIDARs, RADARs and accelerometers. CARLA has models of numerous types of sensors built in to create training data for machine learning. The sensors can be attached to a vehicle, or they can be attached to a fixed point to model for example a CCTV camera. Here we will attach a standard camera sensor to the ego vehicle to record some video data: # Create a transform to place the camera on top of the vehicle camera_init_trans = carla.Transform(carla.Location(z=1.5)) # We create the camera through a blueprint that defines its properties camera_bp = world.get_blueprint_library().find('sensor.camera.rgb') # We spawn the camera and attach it to our ego vehicle camera = world.spawn_actor(camera_bp, camera_init_trans, attach_to=ego_vehicle) Once we have spawned the camera, we need to set it recording through the listen() method. The listen method takes as argument a callback that defines what to do with the data. You can either stream it to another program or save it to disk. We will use a lambda function as a callback to save the data to disk: # Start camera with PyGame callback camera.listen(lambda image: image.save_to_disk('out/%06d.png' % image.frame)) This will save the data to the out/ folder as a series of PNG image files named according to the simulation frame number. There are a multitude of different types of sensors to choose from. Here you can delve deeper into the array of sensors available and how to use them.","title":"Add sensors"},{"location":"tuto_first_steps/#animate-vehicles-with-traffic-manager","text":"Now we've added our traffic and ego vehicle to the simulation and started recording camera data, we now need to set the vehicles in motion using the Traffic manager . The Traffic manager is a component of CARLA that controls vehicles to autonomously move around the roads of the map within the simulation, following the road conventions and behaving like real road users. We can find all the vehicles in the simulation using the world.get_actors() method, filtering for all the vehicles. We can then use the set_autopilot() method to hand over control of the vehicle to the Traffic Manager. for vehicle in world.get_actors().filter('*vehicle*'): vehicle.set_autopilot(True) Now your simulation is running, with numerous vehicles driving around the map and a camera recording data from one of those vehicles. This data can then be used to feed a machine learning algorithm for training an autonomous driving agent. The Traffic manager has many functions for customising traffic behaviour, learn more here . This is the most basic possible set up for a simulation, now you can go into further details deeper into documentation about the many extra sensors you can use to generate data, and the many other features of CARLA that can make your simulations more detailed and more realistic.","title":"Animate vehicles with traffic manager"},{"location":"tuto_first_steps/#assign-a-vehicle-as-the-ego-vehicle","text":"The Ego Vehicle is an important concept to bear in mind when using CARLA. The Ego Vehicle refers to the vehicle that will be the focus of the simulation. In most CARLA use cases it's likely to be the vehicle to which you will attach your sensors and/or the vehicle that your autonomous driving machine learning stack will control. It is important because it serves as the basis for some simulation operations that help improve the efficiency of the simulation, like for example: Loading map tiles for Large Maps : Large Maps (like Town 12) are made up of tiles to that are only loaded when needed to improve CARLA performance. The position of the Ego Vehicle dictates which tiles are used. Only the tiles nearest the Ego Vehicle will be loaded. Hybrid Physics Mode : if your simulation contains a lot of vehicles controlled by the Traffic Manager, calculating physics for all of these vehicles is very computationally expensive. The Hybrid Physics Mode enables physics calculation to be limited to the vehicles in the vicinity of the Ego Vehicle, hence saving computing resources. To define the Ego Vehicle, you should set the role_name attribute of the vehicle carla.Actor object's blueprint when you are spawning your Ego Vehicle: ego_bp = world.get_blueprint_library().find('vehicle.lincoln.mkz_2020') ego_bp.set_attribute('role_name', 'hero') ego_vehicle = world.spawn_actor(ego_bp, random.choice(spawn_points))","title":"Assign a vehicle as the Ego Vehicle"},{"location":"tuto_first_steps/#choose-your-map","text":"CARLA comes loaded with several pre-made maps focused on providing a diversity of features. The maps present a range of environments such as urban, rural and residential. There are also differing architectural styles and also a multitude of different road layouts from unmarked rural roads to multi-lane highways. Browse the map guides in the catalogue or in the table below. Town Summary Town01 A small, simple town with a river and several bridges. Town02 A small simple town with a mixture of residential and commercial buildings. Town03 A larger, urban map with a roundabout and large junctions. Town04 A small town embedded in the mountains with a special \"figure of 8\" infinite highway. Town05 Squared-grid town with cross junctions and a bridge. It has multiple lanes per direction. Useful to perform lane changes. Town06 Long many lane highways with many highway entrances and exits. It also has a Michigan left . Town07 A rural environment with narrow roads, corn, barns and hardly any traffic lights. Town08 Secret \"unseen\" town used for the Leaderboard challenge Town09 Secret \"unseen\" town used for the Leaderboard challenge Town10 A downtown urban environment with skyscrapers, residential buildings and an ocean promenade. Town11 A Large Map that is undecorated. Town12 A Large Map with numerous different regions, including high-rise, residential and rural environments. You can browse the available maps in your CARLA installation: client.get_available_maps() This will include maps that you have built yourself or imported. When you choose a map, load it like so: client.load_world('Town03_Opt')","title":"Choose your map"},{"location":"tuto_first_steps/#choose-your-vehicles","text":"CARLA provides a library of vehicles to fill your simulation with traffic. Browse the vehicle models in the CARLA vehicle catalogue . You can see all available vehicle blueprints by filtering the blueprint library. for bp in world.get_blueprint_library().filter('vehicle'): print(bp.id)","title":"Choose your vehicles"},{"location":"tutorials/","text":"\u6559\u7a0b \u5728\u8fd9\u91cc\u60a8\u5c06\u627e\u5230\u5927\u91cf\u6559\u7a0b\uff0c\u5e2e\u52a9\u60a8\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CARLA \u7684\u4f17\u591a\u529f\u80fd\u3002 \u4e00\u822c Carla \u7279\u70b9 \u68c0\u7d22\u4eff\u771f\u6570\u636e \u2014 \u4f7f\u7528\u8bb0\u5f55\u5668\u6b63\u786e\u6536\u96c6\u6570\u636e\u7684\u5206\u6b65\u6307\u5357\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u5982\u4f55\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u6765\u5f15\u5bfc\u57ce\u9547\u5468\u56f4\u7684\u4ea4\u901a\u3002 \u7eb9\u7406\u6d41 \u2014 \u5b9e\u65f6\u4fee\u6539\u5730\u56fe\u5bf9\u8c61\u7684\u7eb9\u7406\u4ee5\u6dfb\u52a0\u53d8\u5316\u3002 \u5b9e\u4f8b\u5206\u5272\u76f8\u673a \u2014 \u4f7f\u7528\u5b9e\u4f8b\u5206\u5272\u76f8\u673a\u6765\u533a\u5206\u540c\u4e00\u7c7b\u7684\u5bf9\u8c61\u3002 \u8fb9\u754c\u6846 \u2014 \u5c06 CARLA \u5bf9\u8c61\u7684\u8fb9\u754c\u6846\u6295\u5f71\u5230\u76f8\u673a\u4e2d\u3002 \u884c\u4eba\u9aa8\u9abc \u2014 \u5c06\u884c\u4eba\u9aa8\u9abc\u6295\u5f71\u5230\u76f8\u673a\u5e73\u9762\u4e2d\u3002 \u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u2014 \u4f7f\u7528\u9aa8\u9abc\u4e3a\u884c\u4eba\u5236\u4f5c\u52a8\u753b\u3002 \u6784\u5efa\u4e0e\u96c6\u6210 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c CARLA \u2014 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c CARLA\u3002 CarSim \u96c6\u6210 \u2014 \u6709\u5173\u5982\u4f55\u4f7f\u7528 CarSim \u8f66\u8f86\u52a8\u529b\u5b66\u5f15\u64ce\u8fd0\u884c\u4eff\u771f\u7684\u6559\u7a0b\u3002 RLlib \u96c6\u6210 \u2014 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 RLlib \u5e93\u8fd0\u884c\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u3002 Chrono \u96c6\u6210 \u2014 \u4f7f\u7528 Chrono \u96c6\u6210\u6765\u4eff\u771f\u7269\u7406\u3002 PyGame control \u2014 \u4f7f\u7528 PyGame \u663e\u793a\u76f8\u673a\u4f20\u611f\u5668\u7684\u8f93\u51fa\u3002 \u8d44\u4ea7\u548c\u5730\u56fe \u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe \u2014 \u4f7f\u7528 OpenStreetMap \u751f\u6210\u7528\u4e8e\u4eff\u771f\u7684\u5730\u56fe\u3002 \u6dfb\u52a0\u65b0\u8f66\u8f86 \u2014 \u51c6\u5907\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u7684\u8f66\u8f86\u3002 \u6dfb\u52a0\u65b0\u9053\u5177 \u2014 \u5c06\u5176\u4ed6\u9053\u5177\u5bfc\u5165 CARLA\u3002 \u521b\u5efa\u72ec\u7acb\u5305 \u2014 \u751f\u6210\u5e76\u5904\u7406\u8d44\u4ea7\u7684\u72ec\u7acb\u5305\u3002 \u6750\u6599\u5b9a\u5236 \u2014 \u7f16\u8f91\u8f66\u8f86\u548c\u5efa\u7b51\u6750\u6599\u3002 \u5f00\u53d1\u8005 \u5982\u4f55\u5347\u7ea7\u5185\u5bb9 \u2014 \u5411 CARLA \u6dfb\u52a0\u65b0\u5185\u5bb9\u3002 \u521b\u5efa\u4f20\u611f\u5668 \u2014 \u5f00\u53d1\u4e00\u79cd\u7528\u4e8e CARLA \u7684\u65b0\u4f20\u611f\u5668\u3002 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u2014 \u5b9a\u4e49\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002 \u5b9a\u5236\u8f66\u8f86\u60ac\u67b6 \u2014 \u4fee\u6539\u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf\u3002 \u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e\u5668 \u2014 \u4e3a\u8f66\u8f86\u521b\u5efa\u8be6\u7ec6\u7684\u78b0\u649e\u5668\u3002 \u53d1\u5e03\u7248\u672c \u2014 \u5982\u4f55\u53d1\u5e03 CARLA\u3002 \u89c6\u9891\u6559\u7a0b \u57fa\u7840\u77e5\u8bc6 \u2014 \u4e86\u89e3 CARLA \u7684\u57fa\u672c\u6982\u5ff5\u5e76\u5f00\u59cb\u60a8\u7684\u7b2c\u4e00\u4e2a\u811a\u672c\u3002 \u4ee3\u7801 \u6df1\u5165\u4e86\u89e3 CARLA \u7684\u4f20\u611f\u5668 \u2014 \u6df1\u5165\u4e86\u89e3 CARLA \u7684\u4f20\u611f\u5668\u53ca\u5176\u4f7f\u7528\u65b9\u6cd5\u3002 \u4ee3\u7801","title":"\u6559\u7a0b"},{"location":"tutorials/#_1","text":"\u5728\u8fd9\u91cc\u60a8\u5c06\u627e\u5230\u5927\u91cf\u6559\u7a0b\uff0c\u5e2e\u52a9\u60a8\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CARLA \u7684\u4f17\u591a\u529f\u80fd\u3002","title":"\u6559\u7a0b"},{"location":"tutorials/#_2","text":"","title":"\u4e00\u822c"},{"location":"tutorials/#carla","text":"\u68c0\u7d22\u4eff\u771f\u6570\u636e \u2014 \u4f7f\u7528\u8bb0\u5f55\u5668\u6b63\u786e\u6536\u96c6\u6570\u636e\u7684\u5206\u6b65\u6307\u5357\u3002 \u4ea4\u901a\u7ba1\u7406\u5668 \u2014 \u5982\u4f55\u4f7f\u7528\u4ea4\u901a\u7ba1\u7406\u5668\u6765\u5f15\u5bfc\u57ce\u9547\u5468\u56f4\u7684\u4ea4\u901a\u3002 \u7eb9\u7406\u6d41 \u2014 \u5b9e\u65f6\u4fee\u6539\u5730\u56fe\u5bf9\u8c61\u7684\u7eb9\u7406\u4ee5\u6dfb\u52a0\u53d8\u5316\u3002 \u5b9e\u4f8b\u5206\u5272\u76f8\u673a \u2014 \u4f7f\u7528\u5b9e\u4f8b\u5206\u5272\u76f8\u673a\u6765\u533a\u5206\u540c\u4e00\u7c7b\u7684\u5bf9\u8c61\u3002 \u8fb9\u754c\u6846 \u2014 \u5c06 CARLA \u5bf9\u8c61\u7684\u8fb9\u754c\u6846\u6295\u5f71\u5230\u76f8\u673a\u4e2d\u3002 \u884c\u4eba\u9aa8\u9abc \u2014 \u5c06\u884c\u4eba\u9aa8\u9abc\u6295\u5f71\u5230\u76f8\u673a\u5e73\u9762\u4e2d\u3002 \u63a7\u5236\u884c\u4eba\u9aa8\u9abc \u2014 \u4f7f\u7528\u9aa8\u9abc\u4e3a\u884c\u4eba\u5236\u4f5c\u52a8\u753b\u3002","title":"Carla \u7279\u70b9"},{"location":"tutorials/#_3","text":"\u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c CARLA \u2014 \u5728 Docker \u4e2d\u6784\u5efa\u865a\u5e7b\u5f15\u64ce\u548c CARLA\u3002 CarSim \u96c6\u6210 \u2014 \u6709\u5173\u5982\u4f55\u4f7f\u7528 CarSim \u8f66\u8f86\u52a8\u529b\u5b66\u5f15\u64ce\u8fd0\u884c\u4eff\u771f\u7684\u6559\u7a0b\u3002 RLlib \u96c6\u6210 \u2014 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 RLlib \u5e93\u8fd0\u884c\u60a8\u81ea\u5df1\u7684\u5b9e\u9a8c\u3002 Chrono \u96c6\u6210 \u2014 \u4f7f\u7528 Chrono \u96c6\u6210\u6765\u4eff\u771f\u7269\u7406\u3002 PyGame control \u2014 \u4f7f\u7528 PyGame \u663e\u793a\u76f8\u673a\u4f20\u611f\u5668\u7684\u8f93\u51fa\u3002","title":"\u6784\u5efa\u4e0e\u96c6\u6210"},{"location":"tutorials/#_4","text":"\u4f7f\u7528 OpenStreetMap \u751f\u6210\u5730\u56fe \u2014 \u4f7f\u7528 OpenStreetMap \u751f\u6210\u7528\u4e8e\u4eff\u771f\u7684\u5730\u56fe\u3002 \u6dfb\u52a0\u65b0\u8f66\u8f86 \u2014 \u51c6\u5907\u8981\u5728 CARLA \u4e2d\u4f7f\u7528\u7684\u8f66\u8f86\u3002 \u6dfb\u52a0\u65b0\u9053\u5177 \u2014 \u5c06\u5176\u4ed6\u9053\u5177\u5bfc\u5165 CARLA\u3002 \u521b\u5efa\u72ec\u7acb\u5305 \u2014 \u751f\u6210\u5e76\u5904\u7406\u8d44\u4ea7\u7684\u72ec\u7acb\u5305\u3002 \u6750\u6599\u5b9a\u5236 \u2014 \u7f16\u8f91\u8f66\u8f86\u548c\u5efa\u7b51\u6750\u6599\u3002","title":"\u8d44\u4ea7\u548c\u5730\u56fe"},{"location":"tutorials/#_5","text":"\u5982\u4f55\u5347\u7ea7\u5185\u5bb9 \u2014 \u5411 CARLA \u6dfb\u52a0\u65b0\u5185\u5bb9\u3002 \u521b\u5efa\u4f20\u611f\u5668 \u2014 \u5f00\u53d1\u4e00\u79cd\u7528\u4e8e CARLA \u7684\u65b0\u4f20\u611f\u5668\u3002 \u521b\u5efa\u8bed\u4e49\u6807\u7b7e \u2014 \u5b9a\u4e49\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002 \u5b9a\u5236\u8f66\u8f86\u60ac\u67b6 \u2014 \u4fee\u6539\u8f66\u8f86\u7684\u60ac\u67b6\u7cfb\u7edf\u3002 \u751f\u6210\u8be6\u7ec6\u7684\u78b0\u649e\u5668 \u2014 \u4e3a\u8f66\u8f86\u521b\u5efa\u8be6\u7ec6\u7684\u78b0\u649e\u5668\u3002 \u53d1\u5e03\u7248\u672c \u2014 \u5982\u4f55\u53d1\u5e03 CARLA\u3002","title":"\u5f00\u53d1\u8005"},{"location":"tutorials/#_6","text":"\u57fa\u7840\u77e5\u8bc6 \u2014 \u4e86\u89e3 CARLA \u7684\u57fa\u672c\u6982\u5ff5\u5e76\u5f00\u59cb\u60a8\u7684\u7b2c\u4e00\u4e2a\u811a\u672c\u3002 \u4ee3\u7801 \u6df1\u5165\u4e86\u89e3 CARLA \u7684\u4f20\u611f\u5668 \u2014 \u6df1\u5165\u4e86\u89e3 CARLA \u7684\u4f20\u611f\u5668\u53ca\u5176\u4f7f\u7528\u65b9\u6cd5\u3002 \u4ee3\u7801","title":"\u89c6\u9891\u6559\u7a0b"}]}